; ModuleID = '../../v8/src/json/json-parser.cc'
source_filename = "../../v8/src/json/json-parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation" = type <{ %"class.v8::internal::HandleScope", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::JsonParser" = type { %"class.v8::internal::Isolate"*, i64, i8, i8, %"class.v8::internal::Handle.1130", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128", i8*, i8*, i8* }
%"class.v8::internal::Handle.1130" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1128" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation" = type <{ %"class.v8::internal::HandleScope", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::JsonParser.1175" = type { %"class.v8::internal::Isolate"*, i64, i8, i8, %"class.v8::internal::Handle.1130", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128", i16*, i16*, i16* }
%"class.v8::internal::JsonParseInternalizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1171" }
%"class.v8::internal::Handle.1171" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* }
%"class.v8::base::SmallVector" = type { %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"*, %"struct.std::__1::aligned_storage<384, 8>::type" }
%"struct.v8::internal::JsonProperty" = type { %"class.v8::internal::JsonString", %"class.v8::internal::Handle.1129" }
%"class.v8::internal::JsonString" = type <{ %union.anon.1135, i32, i8, [3 x i8] }>
%union.anon.1135 = type { i32 }
%"class.v8::internal::Handle.1129" = type { %"class.v8::internal::HandleBase" }
%"struct.std::__1::aligned_storage<384, 8>::type" = type { [384 x i8] }
%"class.v8::base::SmallVector.1157" = type { %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"*, %"struct.std::__1::aligned_storage<128, 8>::type" }
%"struct.std::__1::aligned_storage<128, 8>::type" = type { [128 x i8] }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1172", i32, i32, i32, %"class.v8::internal::Handle.1174" }
%"class.v8::internal::Handle.1172" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1174" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Vector.1144" = type { i8*, i64 }
%"class.v8::internal::Handle<v8::internal::Map>::ObjectRef" = type { %"class.v8::internal::Map" }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::TransitionsAccessor" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1160", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1160" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1165" }
%"class.v8::internal::TaggedImpl.1165" = type { i64 }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::FieldType" = type { %"class.v8::internal::Object" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1171", %"class.v8::internal::Handle.1129", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1167" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.std::__1::vector.1182" = type { %"class.std::__1::__vector_base.1183" }
%"class.std::__1::__vector_base.1183" = type { %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* }
%"class.v8::internal::Vector.1181" = type { i16*, i64 }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1167", i64 }
%"class.v8::internal::PropertyDescriptor" = type { i8, %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129" }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1223" }
%"class.v8::base::Optional.1223" = type { %"class.v8::base::internal::OptionalBase.1224" }
%"class.v8::base::internal::OptionalBase.1224" = type { %"struct.v8::base::internal::OptionalStorage.1225" }
%"struct.v8::base::internal::OptionalStorage.1225" = type { %"struct.v8::base::internal::OptionalStorageBase.1226" }
%"struct.v8::base::internal::OptionalStorageBase.1226" = type { i8, %union.anon.1227 }
%union.anon.1227 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v88internal10JsonParserIhE5ParseEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS5_INS0_6ObjectEEE = comdat any

$_ZN2v88internal10JsonParserIhE9ParseJsonEv = comdat any

$_ZN2v88internal10JsonParserIhE16JsonContinuationC5EPNS0_7IsolateENS3_4TypeEm = comdat any

$_ZNK2v88internal10JsonParserIhE16JsonContinuation4typeEv = comdat any

$_ZN2v88internal10JsonParserIhE16JsonContinuation8set_typeENS3_4TypeE = comdat any

$_ZN2v88internal10JsonParserIhEC5EPNS0_7IsolateENS0_6HandleINS0_6StringEEE = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal10JsonParserIhE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv = comdat any

$_ZN2v88internal10JsonParserIhED5Ev = comdat any

$_ZN2v88internal10JsonParserIhE7isolateEv = comdat any

$_ZN2v88internal10JsonParserIhE14ParseJsonValueEv = comdat any

$_ZN2v88internal10JsonParserIhE5CheckENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE = comdat any

$_ZNK2v88internal10JsonParserIhE4peekEv = comdat any

$_ZN2v88internal10JsonParserIhE7advanceEv = comdat any

$_ZN2v88internal10JsonParserIhE16CurrentCharacterEv = comdat any

$_ZNK2v88internal10JsonParserIhE9is_at_endEv = comdat any

$_ZN2v88internal10JsonParserIhE13NextCharacterEv = comdat any

$_ZN2v88internal10JsonParserIhE19AdvanceToNonDecimalEv = comdat any

$_ZN2v88internal10JsonParserIhE7ConsumeENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserIhE6ExpectENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserIhE10ExpectNextENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserIhE14SkipWhitespaceEv = comdat any

$_ZN2v88internal10JsonParserIhE14ScanJsonStringEb = comdat any

$_ZNK2v88internal10JsonParserIhE8positionEv = comdat any

$_ZN2v88internal10JsonParserIhE25ReportUnexpectedCharacterEj = comdat any

$_ZN2v88internal10JsonParserIhE20ScanUnicodeCharacterEv = comdat any

$_ZN2v88internal10JsonParserIhE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE = comdat any

$_ZN2v88internal10JsonParserIhE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE = comdat any

$_ZN2v88internal10JsonParserIhE7factoryEv = comdat any

$_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_ = comdat any

$_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_ = comdat any

$_ZN2v88internal10JsonParserIhE15ParseJsonNumberEv = comdat any

$_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm = comdat any

$_ZN2v88internal10JsonParserIhE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE = comdat any

$_ZN2v88internal10JsonParserIhE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE = comdat any

$_ZN2v88internal19TransitionsAccessor21ExpectedTransitionKeyEv = comdat any

$_ZN2v88internal10JsonParserIhE18object_constructorEv = comdat any

$_ZN2v88internal10JsonParserIhE14UpdatePointersEv = comdat any

$_ZN2v88internal10JsonParserItE5ParseEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS5_INS0_6ObjectEEE = comdat any

$_ZN2v88internal10JsonParserItE9ParseJsonEv = comdat any

$_ZN2v88internal10JsonParserItE16JsonContinuationC5EPNS0_7IsolateENS3_4TypeEm = comdat any

$_ZNK2v88internal10JsonParserItE16JsonContinuation4typeEv = comdat any

$_ZN2v88internal10JsonParserItE16JsonContinuation8set_typeENS3_4TypeE = comdat any

$_ZN2v88internal10JsonParserItEC5EPNS0_7IsolateENS0_6HandleINS0_6StringEEE = comdat any

$_ZN2v88internal10JsonParserItE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv = comdat any

$_ZN2v88internal10JsonParserItED5Ev = comdat any

$_ZN2v88internal10JsonParserItE7isolateEv = comdat any

$_ZN2v88internal10JsonParserItE14ParseJsonValueEv = comdat any

$_ZN2v88internal10JsonParserItE5CheckENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE = comdat any

$_ZNK2v88internal10JsonParserItE4peekEv = comdat any

$_ZN2v88internal10JsonParserItE7advanceEv = comdat any

$_ZN2v88internal10JsonParserItE16CurrentCharacterEv = comdat any

$_ZNK2v88internal10JsonParserItE9is_at_endEv = comdat any

$_ZN2v88internal10JsonParserItE13NextCharacterEv = comdat any

$_ZN2v88internal10JsonParserItE19AdvanceToNonDecimalEv = comdat any

$_ZN2v88internal10JsonParserItE7ConsumeENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserItE6ExpectENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserItE10ExpectNextENS0_9JsonTokenE = comdat any

$_ZN2v88internal10JsonParserItE14SkipWhitespaceEv = comdat any

$_ZN2v88internal10JsonParserItE14ScanJsonStringEb = comdat any

$_ZNK2v88internal10JsonParserItE8positionEv = comdat any

$_ZN2v88internal10JsonParserItE25ReportUnexpectedCharacterEj = comdat any

$_ZN2v88internal10JsonParserItE20ScanUnicodeCharacterEv = comdat any

$_ZN2v88internal10JsonParserItE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE = comdat any

$_ZN2v88internal10JsonParserItE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE = comdat any

$_ZN2v88internal10JsonParserItE7factoryEv = comdat any

$_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_ = comdat any

$_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_ = comdat any

$_ZN2v88internal10JsonParserItE15ParseJsonNumberEv = comdat any

$_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm = comdat any

$_ZN2v88internal10JsonParserItE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE = comdat any

$_ZN2v88internal10JsonParserItE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE = comdat any

$_ZN2v88internal10JsonParserItE18object_constructorEv = comdat any

$_ZN2v88internal10JsonParserItE14UpdatePointersEv = comdat any

$_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal10JsonParserIhE12DecodeStringIhEEvPT_ii = comdat any

$_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m = comdat any

$_ZN2v88internal10JsonParserIhE12DecodeStringItEEvPT_ii = comdat any

$_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_ = comdat any

$_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEm = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEm = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m = comdat any

$_ZN2v88internal10JsonParserItE12DecodeStringIhEEvPT_ii = comdat any

$_ZN2v88internal10JsonParserItE12DecodeStringItEEvPT_ii = comdat any

$_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE = internal unnamed_addr constant [256 x i8] calign 16
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal17FLAG_track_fieldsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal24FLAG_track_double_fieldsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal29FLAG_track_heap_object_fieldsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal26FLAG_track_computed_fieldsE = external local_unnamed_addr global i8, align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE = internal unnamed_addr constant <{ [118 x i8], [138 x i8] }> <{ [118 x i8] c"\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\00\00\09\00\00\00\00\00\00\00\00\10\00\10\10\01\10\10\10\10\10\10\10\10\10\10\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\09\00\00\00\00\00\02\00\00\10\05\00\00\00\00\00\00\00\04\00\00\00\06\00\03\07", [138 x i8] zeroinitializer }>, align 16
@.str.12 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.15 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)], align 8

@_ZN2v88internal10JsonParserIhE16JsonContinuationC1EPNS0_7IsolateENS3_4TypeEm = weak_odr hidden unnamed_addr alias void (%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8, i64), void (%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8, i64)* @_ZN2v88internal10JsonParserIhE16JsonContinuationC2EPNS0_7IsolateENS3_4TypeEm
@_ZN2v88internal10JsonParserIhEC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::JsonParser"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::JsonParser"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal10JsonParserIhEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE
@_ZN2v88internal10JsonParserIhED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::JsonParser"*), void (%"class.v8::internal::JsonParser"*)* @_ZN2v88internal10JsonParserIhED2Ev
@_ZN2v88internal10JsonParserItE16JsonContinuationC1EPNS0_7IsolateENS3_4TypeEm = weak_odr hidden unnamed_addr alias void (%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8, i64), void (%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8, i64)* @_ZN2v88internal10JsonParserItE16JsonContinuationC2EPNS0_7IsolateENS3_4TypeEm
@_ZN2v88internal10JsonParserItEC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal10JsonParserItEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE
@_ZN2v88internal10JsonParserItED1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::JsonParser.1175"*), void (%"class.v8::internal::JsonParser.1175"*)* @_ZN2v88internal10JsonParserItED2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE5ParseEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS5_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JsonParser", align 8
  %5 = bitcast %"class.v8::internal::JsonParser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #6
  call void @_ZN2v88internal10JsonParserIhEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %1)
  %6 = call i64* @_ZN2v88internal10JsonParserIhE14ParseJsonValueEv(%"class.v8::internal::JsonParser"* nonnull %4) #6
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %4, i64 0, i32 2
  store i8 13, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %4, i64 0, i32 7
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %4, i64 0, i32 8
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %9, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %3, %20
  %14 = phi i8* [ %21, %20 ], [ %9, %3 ]
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 9
  br i1 %19, label %20, label %26

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %14, i64 1
  %22 = icmp eq i8* %21, %11
  br i1 %22, label %23, label %13

23:                                               ; preds = %20, %3
  %24 = phi i8* [ %9, %3 ], [ %11, %20 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  store i8* %25, i8** %8, align 8
  br label %27

26:                                               ; preds = %13
  store i8 %18, i8* %7, align 8
  store i8* %14, i8** %8, align 8
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* nonnull %4, i8 zeroext %18) #6
  br label %27

27:                                               ; preds = %23, %26
  %28 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %4, i64 0, i32 0
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 5
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %31 to i32
  %36 = icmp eq i32 %34, %35
  %37 = select i1 %36, i64* %6, i64* null
  %38 = icmp eq i64* %37, null
  %39 = ptrtoint i64* %37 to i64
  %40 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %4, i64 0, i32 6, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 7
  %53 = icmp eq i16 %52, 2
  br i1 %53, label %57, label %54

54:                                               ; preds = %27
  %55 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %55, i64 0, i32 2
  call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %56, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserIhE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* nonnull %5) #6
  br label %57

57:                                               ; preds = %27, %54
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #6
  br i1 %38, label %77, label %58

58:                                               ; preds = %57
  %59 = load i64, i64* %2, align 8
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %58
  %63 = and i64 %59, -4294967296
  %64 = add i64 %59, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 9
  %70 = inttoptr i64 %69 to i8*
  %71 = load atomic i8, i8* %70 monotonic, align 1
  %72 = and i8 %71, 2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %62
  %75 = call i64* @_ZN2v88internal21JsonParseInternalizer11InternalizeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %37, i64* %2)
  %76 = ptrtoint i64* %75 to i64
  br label %77

77:                                               ; preds = %62, %57, %58, %74
  %78 = phi i64 [ %76, %74 ], [ 0, %57 ], [ %39, %62 ], [ %39, %58 ]
  %79 = inttoptr i64 %78 to i64*
  ret i64* %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE9ParseJsonEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i64* @_ZN2v88internal10JsonParserIhE14ParseJsonValueEv(%"class.v8::internal::JsonParser"* %0)
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %1, %16
  %10 = phi i8* [ %17, %16 ], [ %5, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 9
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds i8, i8* %10, i64 1
  %18 = icmp eq i8* %17, %7
  br i1 %18, label %19, label %9

19:                                               ; preds = %16, %1
  %20 = phi i8* [ %5, %1 ], [ %7, %16 ]
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  store i8* %21, i8** %4, align 8
  br label %23

22:                                               ; preds = %9
  store i8 %14, i8* %3, align 8
  store i8* %10, i8** %4, align 8
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %14)
  br label %23

23:                                               ; preds = %19, %22
  %24 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = trunc i64 %27 to i32
  %32 = icmp eq i32 %30, %31
  %33 = select i1 %32, i64* %2, i64* null
  ret i64* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal21JsonParseInternalizer11InternalizeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JsonParseInternalizer", align 8
  %5 = bitcast %"class.v8::internal::JsonParseInternalizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.v8::internal::JsonParseInternalizer", %"class.v8::internal::JsonParseInternalizer"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::JsonParseInternalizer", %"class.v8::internal::JsonParseInternalizer"* %4, i64 0, i32 1, i32 0, i32 0
  store i64* %2, i64** %7, align 8
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 19
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 571
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %3
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %26) #6
  br label %45

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %26, i64* %41, align 8
  br label %45

45:                                               ; preds = %30, %40
  %46 = phi i64* [ %31, %30 ], [ %41, %40 ]
  %47 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, i64* %46, i8 zeroext 0) #6
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %0, i64* %47, i64* %48, i64* %1, i32 0) #6
  %49 = call i64* @_ZN2v88internal21JsonParseInternalizer23InternalizeJsonPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* nonnull %4, i64* %47, i64* %48)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret i64* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE16JsonContinuationC2EPNS0_7IsolateENS3_4TypeEm(%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8 zeroext, i64) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserIhE16JsonContinuationC5EPNS0_7IsolateENS3_4TypeEm) align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31
  %6 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %6, align 8
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 0, i32 2
  %15 = bitcast i64** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 1
  %20 = and i8 %2, 3
  %21 = zext i8 %20 to i32
  %22 = trunc i64 %3 to i32
  %23 = shl i32 %22, 2
  %24 = or i32 %23, %21
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 2
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZNK2v88internal10JsonParserIhE16JsonContinuation4typeEv(%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = trunc i32 %3 to i8
  %5 = and i8 %4, 3
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE16JsonContinuation8set_typeENS3_4TypeE(%"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i8 %1, 3
  %6 = zext i8 %5 to i32
  %7 = and i32 %4, -4
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserIhEC5EPNS0_7IsolateENS0_6HandleINS0_6StringEEE) align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 134
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 1
  store i64 %11, i64* %6, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 19
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %14, %23
  %25 = add i64 %24, 571
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %14, %28
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %3
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %29) #6
  br label %48

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #6
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %29, i64* %44, align 8
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i64* [ %34, %33 ], [ %44, %43 ]
  %50 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %49, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 5
  %52 = bitcast %"class.v8::internal::Handle.1128"* %51 to i64*
  store i64 %4, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = load i64, i64* %2, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = and i64 %54, -4294967296
  %60 = add i64 %54, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp ult i16 %67, 64
  br i1 %68, label %69, label %132

69:                                               ; preds = %48
  %70 = load atomic i32, i32* %61 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %59, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = and i16 %75, 7
  %77 = icmp eq i16 %76, 3
  br i1 %77, label %78, label %132

78:                                               ; preds = %69
  %79 = add i64 %54, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = ashr i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = add i64 %54, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %59, %87
  %89 = add i64 %88, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %59, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = icmp ult i16 %96, 64
  br i1 %97, label %98, label %113

98:                                               ; preds = %78
  %99 = load atomic i32, i32* %90 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %59, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = and i16 %104, 7
  %106 = icmp eq i16 %105, 5
  br i1 %106, label %107, label %113

107:                                              ; preds = %98
  %108 = add i64 %88, 11
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %59, %111
  br label %113

113:                                              ; preds = %78, %107, %98
  %114 = phi i64 [ %112, %107 ], [ %88, %98 ], [ %88, %78 ]
  %115 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %116 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %115, i64 %114) #6
  br label %134

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %123 = load i64*, i64** %122, align 8
  %124 = icmp eq i64* %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #6
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi i64* [ %126, %125 ], [ %121, %119 ]
  %129 = ptrtoint i64* %128 to i64
  %130 = add i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  store i64* %131, i64** %120, align 8
  store i64 %114, i64* %128, align 8
  br label %134

132:                                              ; preds = %48, %69
  %133 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %1, i64* %2, i8 zeroext 0)
  br label %134

134:                                              ; preds = %127, %117, %132
  %135 = phi i64* [ %133, %132 ], [ %118, %117 ], [ %128, %127 ]
  %136 = phi i64 [ 0, %132 ], [ %83, %117 ], [ %83, %127 ]
  store i64* %135, i64** %53, align 8
  %137 = load i64, i64* %135, align 8
  %138 = and i64 %137, -4294967296
  %139 = add i64 %137, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 acquire, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = and i16 %146, 7
  %148 = icmp eq i16 %147, 2
  br i1 %148, label %149, label %184

149:                                              ; preds = %134
  %150 = load i64*, i64** %53, align 8
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, -4294967296
  %153 = add i64 %151, -1
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %152, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = and i16 %160, 16
  %162 = icmp eq i16 %161, 0
  %163 = add i64 %151, 11
  %164 = inttoptr i64 %163 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %162, label %177, label %165

165:                                              ; preds = %149
  %166 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %164, align 1
  %167 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %166, i64 0, i32 0
  %168 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %166 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %169 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %169, i64 2
  %171 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.v8::String::ExternalStringResourceBase"* %167) #6
  br i1 %172, label %173, label %177

173:                                              ; preds = %165
  %174 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %164, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %174) #6
  %175 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %174, i64 0, i32 1
  %176 = load i8*, i8** %175, align 8
  br label %191

177:                                              ; preds = %149, %165
  %178 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %164, align 1
  %179 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %178 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %180 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %179, align 8
  %181 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %180, i64 6
  %182 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %181, align 8
  %183 = tail call i8* %182(%"class.v8::String::ExternalOneByteStringResource"* %178) #6
  br label %191

184:                                              ; preds = %134
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %186 = bitcast %"class.v8::internal::JsonParser"* %0 to i8*
  tail call void @_ZN2v88internal4Heap21AddGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES4_S6_(%"class.v8::internal::Heap"* %185, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserIhE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i32 15, i8* %186) #6
  %187 = load i64*, i64** %53, align 8
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 11
  %190 = inttoptr i64 %189 to i8*
  br label %191

191:                                              ; preds = %177, %173, %184
  %192 = phi i8* [ %190, %184 ], [ %176, %173 ], [ %183, %177 ]
  %193 = phi i8 [ 1, %184 ], [ 0, %173 ], [ 0, %177 ]
  %194 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  store i8* %192, i8** %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 3
  store i8 %193, i8* %195, align 1
  %196 = getelementptr inbounds i8, i8* %192, i64 %136
  %197 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  store i8* %196, i8** %197, align 8
  %198 = getelementptr inbounds i8, i8* %196, i64 %58
  %199 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  store i8* %198, i8** %199, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #6
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #6
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #6
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare void @_ZN2v88internal4Heap21AddGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES4_S6_(%"class.v8::internal::Heap"*, void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv(%"class.v8::Isolate"*, i32, i32, i8*) #0 comdat align 2 {
  %5 = getelementptr inbounds i8, i8* %3, i64 40
  %6 = bitcast i8* %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %3, i64 64
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %10
  br i1 %14, label %29, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds i8, i8* %3, i64 48
  %17 = bitcast i8* %16 to i8**
  %18 = bitcast i8* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i8* %13 to i64
  %21 = sub i64 %19, %20
  %22 = getelementptr inbounds i8, i8* %3, i64 56
  %23 = bitcast i8* %22 to i8**
  %24 = bitcast i8* %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %20
  store i8* %10, i8** %12, align 8
  %27 = getelementptr inbounds i8, i8* %10, i64 %21
  store i8* %27, i8** %17, align 8
  %28 = getelementptr inbounds i8, i8* %10, i64 %26
  store i8* %28, i8** %23, align 8
  br label %29

29:                                               ; preds = %4, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhED2Ev(%"class.v8::internal::JsonParser"*) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserIhED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = and i16 %13, 7
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::JsonParser"* %0 to i8*
  tail call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %19, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserIhE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* %20) #6
  br label %21

21:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Isolate"* @_ZN2v88internal10JsonParserIhE7isolateEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  ret %"class.v8::internal::Isolate"* %3
}

declare void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"*, void (%"class.v8::Isolate"*, i32, i32, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE14ParseJsonValueEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.1150", align 8
  %3 = alloca %"class.v8::base::SmallVector", align 8
  %4 = alloca %"class.v8::base::SmallVector.1157", align 8
  %5 = alloca %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", align 8
  %6 = alloca %"class.v8::internal::JsonString", align 8
  %7 = bitcast %"class.std::__1::vector.1150"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = bitcast %"class.v8::base::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 3
  %10 = bitcast %"class.v8::base::SmallVector"* %3 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %9, %"struct.std::__1::aligned_storage<384, 8>::type"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 1
  %12 = bitcast %"struct.v8::internal::JsonProperty"** %11 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %9, %"struct.std::__1::aligned_storage<384, 8>::type"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.std::__1::aligned_storage<384, 8>::type", %"struct.std::__1::aligned_storage<384, 8>::type"* %9, i64 1
  %15 = bitcast %"struct.v8::internal::JsonProperty"** %13 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %14, %"struct.std::__1::aligned_storage<384, 8>::type"** %15, align 8
  %16 = bitcast %"class.v8::base::SmallVector.1157"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 3
  %18 = bitcast %"class.v8::base::SmallVector.1157"* %4 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %17, %"struct.std::__1::aligned_storage<128, 8>::type"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Handle.1129"** %19 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %17, %"struct.std::__1::aligned_storage<128, 8>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.std::__1::aligned_storage<128, 8>::type", %"struct.std::__1::aligned_storage<128, 8>::type"* %17, i64 1
  %23 = bitcast %"class.v8::internal::Handle.1129"** %21 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %22, %"struct.std::__1::aligned_storage<128, 8>::type"** %23, align 8
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.1150"* nonnull %2, i64 16)
  %24 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #6
  %25 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31
  %28 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* %26, %"class.v8::internal::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 0, i32 1
  %30 = bitcast i64** %29 to i64*
  %31 = bitcast %"struct.v8::internal::HandleScopeData"* %27 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 0, i32 2
  %34 = bitcast i64** %33 to i64*
  %35 = bitcast i64** %29 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 1
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 2
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5, i64 0, i32 3
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %44 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %45 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %2, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %5 to i64*
  %48 = bitcast i32* %39 to i8*
  %49 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45 to i64*
  %50 = bitcast %"class.v8::internal::Handle.1129"** %19 to i64*
  %51 = bitcast %"class.v8::base::SmallVector.1157"* %4 to i64*
  %52 = bitcast %"struct.v8::internal::JsonProperty"** %11 to i64*
  %53 = bitcast %"class.v8::base::SmallVector"* %3 to i64*
  %54 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %55 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 4, i32 0, i32 0
  %56 = bitcast %"class.v8::internal::JsonString"* %6 to i8*
  %57 = bitcast %"class.v8::internal::JsonString"* %6 to i64*
  %58 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %6, i64 0, i32 2
  %59 = bitcast i8* %58 to i32*
  %60 = bitcast %"class.v8::internal::Handle.1129"** %21 to i64*
  %61 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 0
  %62 = bitcast %"class.std::__1::vector.1150"* %2 to i64*
  %63 = bitcast %"struct.v8::internal::JsonProperty"** %13 to i64*
  %64 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 0
  store i8 13, i8* %42, align 8
  %65 = load i8*, i8** %43, align 8
  %66 = load i8*, i8** %44, align 8
  %67 = icmp eq i8* %65, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %1
  %69 = bitcast i64** %29 to <2 x i64>*
  %70 = bitcast i64** %29 to <2 x i64>*
  br label %71

71:                                               ; preds = %68, %1090
  %72 = phi i8* [ %1092, %1090 ], [ %66, %68 ]
  %73 = phi i8* [ %1091, %1090 ], [ %65, %68 ]
  %74 = phi i64 [ %511, %1090 ], [ 0, %68 ]
  br label %75

75:                                               ; preds = %71, %241
  %76 = phi i8* [ %72, %71 ], [ %243, %241 ]
  %77 = phi i8* [ %73, %71 ], [ %242, %241 ]
  br label %78

78:                                               ; preds = %75, %85
  %79 = phi i8* [ %86, %85 ], [ %77, %75 ]
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 9
  br i1 %84, label %85, label %91

85:                                               ; preds = %78
  %86 = getelementptr inbounds i8, i8* %79, i64 1
  %87 = icmp eq i8* %86, %76
  br i1 %87, label %88, label %78

88:                                               ; preds = %1090, %241, %85, %1
  %89 = phi i8* [ %66, %1 ], [ %76, %85 ], [ %243, %241 ], [ %1092, %1090 ]
  %90 = phi i8* [ %65, %1 ], [ %76, %85 ], [ %242, %241 ], [ %1091, %1090 ]
  store i8* %90, i8** %43, align 8
  br label %429

91:                                               ; preds = %78
  store i8 %83, i8* %42, align 8
  store i8* %79, i8** %43, align 8
  switch i8 %83, label %427 [
    i8 1, label %92
    i8 0, label %99
    i8 2, label %102
    i8 4, label %245
    i8 6, label %325
    i8 7, label %359
    i8 8, label %393
    i8 10, label %429
    i8 11, label %429
    i8 12, label %429
    i8 3, label %429
    i8 5, label %429
    i8 13, label %429
  ]

92:                                               ; preds = %91
  %93 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %93, i8** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %56) #6
  %94 = call { i64, i32 } @_ZN2v88internal10JsonParserIhE14ScanJsonStringEb(%"class.v8::internal::JsonParser"* %0, i1 zeroext false)
  %95 = extractvalue { i64, i32 } %94, 0
  %96 = extractvalue { i64, i32 } %94, 1
  store i64 %95, i64* %57, align 8
  store i32 %96, i32* %59, align 8
  %97 = call i64* @_ZN2v88internal10JsonParserIhE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"* %0, %"class.v8::internal::JsonString"* nonnull dereferenceable(12) %6, i64* null)
  %98 = ptrtoint i64* %97 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %56) #6
  br label %427

99:                                               ; preds = %91
  %100 = call i64* @_ZN2v88internal10JsonParserIhE15ParseJsonNumberEv(%"class.v8::internal::JsonParser"* %0)
  %101 = ptrtoint i64* %100 to i64
  br label %427

102:                                              ; preds = %91
  %103 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %103, i8** %43, align 8
  store i8 13, i8* %42, align 8
  %104 = icmp eq i8* %103, %76
  br i1 %104, label %115, label %105

105:                                              ; preds = %102, %112
  %106 = phi i8* [ %113, %112 ], [ %103, %102 ]
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 9
  br i1 %111, label %112, label %116

112:                                              ; preds = %105
  %113 = getelementptr inbounds i8, i8* %106, i64 1
  %114 = icmp eq i8* %113, %76
  br i1 %114, label %115, label %105

115:                                              ; preds = %112, %102
  store i8* %76, i8** %43, align 8
  br label %125

116:                                              ; preds = %105
  store i8 %110, i8* %42, align 8
  %117 = icmp eq i8 %107, 125
  %118 = getelementptr inbounds i8, i8* %106, i64 1
  %119 = select i1 %117, i8* %118, i8* %106
  store i8* %119, i8** %43, align 8
  br i1 %117, label %120, label %125

120:                                              ; preds = %116
  %121 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %122 = load i64*, i64** %55, align 8
  %123 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %121, i64* %122, i8 zeroext 0) #6
  %124 = ptrtoint i64* %123 to i64
  br label %427

125:                                              ; preds = %115, %116
  %126 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %127 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %46, align 8
  %128 = icmp ult %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126, %127
  br i1 %128, label %129, label %142

129:                                              ; preds = %125
  %130 = load i64, i64* %47, align 8
  %131 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126, i64 0, i32 0, i32 1
  %133 = load i64, i64* %30, align 8
  %134 = bitcast i64** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126, i64 0, i32 0, i32 2
  %136 = load i64, i64* %34, align 8
  %137 = bitcast i64** %135 to i64*
  store i64 %136, i64* %137, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %28, align 8
  %138 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126, i64 0, i32 1
  %139 = bitcast i32* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %48, i64 12, i1 false) #6
  %140 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %126, i64 1
  %141 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %140 to i64
  store i64 %141, i64* %49, align 8
  br label %144

142:                                              ; preds = %125
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1150"* nonnull %2, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull dereferenceable(40) %5) #6
  %143 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  br label %144

144:                                              ; preds = %129, %142
  %145 = phi %"class.v8::internal::Isolate"* [ null, %129 ], [ %143, %142 ]
  %146 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %147 = load i64, i64* %52, align 8
  %148 = load i64, i64* %53, align 8
  %149 = sub i64 %147, %148
  %150 = sdiv exact i64 %149, 24
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %146, i64 0, i32 31
  %152 = bitcast %"struct.v8::internal::HandleScopeData"* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %146, i64 0, i32 31, i32 2
  %155 = load i32, i32* %154, align 8
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %154, align 8
  %157 = trunc i64 %150 to i32
  %158 = shl i32 %157, 2
  %159 = or i32 %158, 1
  %160 = icmp eq %"class.v8::internal::Isolate"* %145, null
  br i1 %160, label %161, label %163

161:                                              ; preds = %144
  %162 = ptrtoint %"class.v8::internal::Isolate"* %146 to i64
  store i64 %162, i64* %47, align 8
  br label %182

163:                                              ; preds = %144
  %164 = load i64*, i64** %29, align 8
  %165 = load i64*, i64** %33, align 8
  %166 = ptrtoint i64* %164 to i64
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %145, i64 0, i32 31
  %168 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %167, i64 0, i32 0
  %169 = bitcast %"struct.v8::internal::HandleScopeData"* %167 to i64*
  %170 = load i64*, i64** %168, align 8
  store i64 %166, i64* %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %145, i64 0, i32 31, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = add nsw i32 %172, -1
  store i32 %173, i32* %171, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %145, i64 0, i32 31, i32 1
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, %165
  br i1 %176, label %179, label %177

177:                                              ; preds = %163
  store i64* %165, i64** %174, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %145) #6
  %178 = load i64*, i64** %168, align 8
  br label %179

179:                                              ; preds = %177, %163
  %180 = phi i64* [ %178, %177 ], [ %164, %163 ]
  %181 = phi i64* [ %165, %177 ], [ %170, %163 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %180, i64* %181) #6
  br label %182

182:                                              ; preds = %179, %161
  store <2 x i64> %153, <2 x i64>* %70, align 8
  store i32 %159, i32* %39, align 8
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 8
  store i8 13, i8* %42, align 8
  %183 = load i8*, i8** %43, align 8
  %184 = load i8*, i8** %44, align 8
  %185 = icmp eq i8* %183, %184
  br i1 %185, label %196, label %186

186:                                              ; preds = %182, %193
  %187 = phi i8* [ %194, %193 ], [ %183, %182 ]
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 9
  br i1 %192, label %193, label %198

193:                                              ; preds = %186
  %194 = getelementptr inbounds i8, i8* %187, i64 1
  %195 = icmp eq i8* %194, %184
  br i1 %195, label %196, label %186

196:                                              ; preds = %193, %182
  %197 = phi i8* [ %183, %182 ], [ %184, %193 ]
  store i8* %197, i8** %43, align 8
  br label %202

198:                                              ; preds = %186
  store i8 %191, i8* %42, align 8
  store i8* %187, i8** %43, align 8
  %199 = icmp eq i8 %188, 34
  br i1 %199, label %200, label %202, !prof !2

200:                                              ; preds = %198
  %201 = getelementptr inbounds i8, i8* %187, i64 1
  store i8* %201, i8** %43, align 8
  br label %204

202:                                              ; preds = %196, %198
  %203 = phi i8 [ 13, %196 ], [ %191, %198 ]
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %203) #6
  br label %204

204:                                              ; preds = %200, %202
  %205 = call { i64, i32 } @_ZN2v88internal10JsonParserIhE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser"* %0, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull %5)
  %206 = extractvalue { i64, i32 } %205, 0
  %207 = extractvalue { i64, i32 } %205, 1
  %208 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %209 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %13, align 8
  %210 = icmp eq %"struct.v8::internal::JsonProperty"* %208, %209
  br i1 %210, label %211, label %213, !prof !3

211:                                              ; preds = %204
  %212 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #6
  br label %213

213:                                              ; preds = %204, %211
  %214 = phi %"struct.v8::internal::JsonProperty"* [ %212, %211 ], [ %208, %204 ]
  %215 = bitcast %"struct.v8::internal::JsonProperty"* %214 to i64*
  store i64 %206, i64* %215, align 8
  %216 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %214, i64 0, i32 0, i32 2
  %217 = bitcast i8* %216 to i32*
  store i32 %207, i32* %217, align 8
  %218 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %214, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %218, align 8
  %219 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %214, i64 1
  store %"struct.v8::internal::JsonProperty"* %219, %"struct.v8::internal::JsonProperty"** %11, align 8
  store i8 13, i8* %42, align 8
  %220 = load i8*, i8** %43, align 8
  %221 = load i8*, i8** %44, align 8
  %222 = icmp eq i8* %220, %221
  br i1 %222, label %233, label %223

223:                                              ; preds = %213, %230
  %224 = phi i8* [ %231, %230 ], [ %220, %213 ]
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, 9
  br i1 %229, label %230, label %235

230:                                              ; preds = %223
  %231 = getelementptr inbounds i8, i8* %224, i64 1
  %232 = icmp eq i8* %231, %221
  br i1 %232, label %233, label %223

233:                                              ; preds = %230, %213
  %234 = phi i8* [ %220, %213 ], [ %221, %230 ]
  store i8* %234, i8** %43, align 8
  br label %239

235:                                              ; preds = %223
  store i8 %228, i8* %42, align 8
  store i8* %224, i8** %43, align 8
  %236 = icmp eq i8 %225, 58
  br i1 %236, label %237, label %239, !prof !2

237:                                              ; preds = %235
  %238 = getelementptr inbounds i8, i8* %224, i64 1
  store i8* %238, i8** %43, align 8
  br label %241

239:                                              ; preds = %233, %235
  %240 = phi i8 [ 13, %233 ], [ %228, %235 ]
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %240) #6
  br label %241

241:                                              ; preds = %239, %237, %324
  store i8 13, i8* %42, align 8
  %242 = load i8*, i8** %43, align 8
  %243 = load i8*, i8** %44, align 8
  %244 = icmp eq i8* %242, %243
  br i1 %244, label %88, label %75

245:                                              ; preds = %91
  %246 = getelementptr inbounds i8, i8* %79, i64 1
  store i8* %246, i8** %43, align 8
  store i8 13, i8* %42, align 8
  %247 = icmp eq i8* %246, %76
  br i1 %247, label %258, label %248

248:                                              ; preds = %245, %255
  %249 = phi i8* [ %256, %255 ], [ %246, %245 ]
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i64
  %252 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %251
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 9
  br i1 %254, label %255, label %259

255:                                              ; preds = %248
  %256 = getelementptr inbounds i8, i8* %249, i64 1
  %257 = icmp eq i8* %256, %76
  br i1 %257, label %258, label %248

258:                                              ; preds = %255, %245
  store i8* %76, i8** %43, align 8
  br label %267

259:                                              ; preds = %248
  store i8 %253, i8* %42, align 8
  %260 = icmp eq i8 %250, 93
  %261 = getelementptr inbounds i8, i8* %249, i64 1
  %262 = select i1 %260, i8* %261, i8* %249
  store i8* %262, i8** %43, align 8
  br i1 %260, label %263, label %267

263:                                              ; preds = %259
  %264 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %265 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %264, i8 zeroext 0, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %266 = ptrtoint i64* %265 to i64
  br label %427

267:                                              ; preds = %258, %259
  %268 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %269 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %46, align 8
  %270 = icmp ult %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268, %269
  br i1 %270, label %271, label %284

271:                                              ; preds = %267
  %272 = load i64, i64* %47, align 8
  %273 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268, i64 0, i32 0, i32 1
  %275 = load i64, i64* %30, align 8
  %276 = bitcast i64** %274 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268, i64 0, i32 0, i32 2
  %278 = load i64, i64* %34, align 8
  %279 = bitcast i64** %277 to i64*
  store i64 %278, i64* %279, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %28, align 8
  %280 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268, i64 0, i32 1
  %281 = bitcast i32* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %48, i64 12, i1 false) #6
  %282 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %268, i64 1
  %283 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %282 to i64
  store i64 %283, i64* %49, align 8
  br label %286

284:                                              ; preds = %267
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1150"* nonnull %2, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull dereferenceable(40) %5) #6
  %285 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  br label %286

286:                                              ; preds = %271, %284
  %287 = phi %"class.v8::internal::Isolate"* [ null, %271 ], [ %285, %284 ]
  %288 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %289 = load i64, i64* %50, align 8
  %290 = load i64, i64* %51, align 8
  %291 = sub i64 %289, %290
  %292 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %288, i64 0, i32 31
  %293 = bitcast %"struct.v8::internal::HandleScopeData"* %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %288, i64 0, i32 31, i32 2
  %296 = load i32, i32* %295, align 8
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* %295, align 8
  %298 = lshr exact i64 %291, 1
  %299 = trunc i64 %298 to i32
  %300 = and i32 %299, -4
  %301 = or i32 %300, 2
  %302 = icmp eq %"class.v8::internal::Isolate"* %287, null
  br i1 %302, label %303, label %305

303:                                              ; preds = %286
  %304 = ptrtoint %"class.v8::internal::Isolate"* %288 to i64
  store i64 %304, i64* %47, align 8
  br label %324

305:                                              ; preds = %286
  %306 = load i64*, i64** %29, align 8
  %307 = load i64*, i64** %33, align 8
  %308 = ptrtoint i64* %306 to i64
  %309 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %287, i64 0, i32 31
  %310 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %309, i64 0, i32 0
  %311 = bitcast %"struct.v8::internal::HandleScopeData"* %309 to i64*
  %312 = load i64*, i64** %310, align 8
  store i64 %308, i64* %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %287, i64 0, i32 31, i32 2
  %314 = load i32, i32* %313, align 8
  %315 = add nsw i32 %314, -1
  store i32 %315, i32* %313, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %287, i64 0, i32 31, i32 1
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, %307
  br i1 %318, label %321, label %319

319:                                              ; preds = %305
  store i64* %307, i64** %316, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %287) #6
  %320 = load i64*, i64** %310, align 8
  br label %321

321:                                              ; preds = %319, %305
  %322 = phi i64* [ %320, %319 ], [ %306, %305 ]
  %323 = phi i64* [ %307, %319 ], [ %312, %305 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %322, i64* %323) #6
  br label %324

324:                                              ; preds = %321, %303
  store <2 x i64> %294, <2 x i64>* %69, align 8
  store i32 %301, i32* %39, align 8
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 8
  br label %241

325:                                              ; preds = %91
  %326 = ptrtoint i8* %76 to i64
  %327 = ptrtoint i8* %79 to i64
  %328 = sub i64 %326, %327
  %329 = icmp ugt i64 %328, 3
  %330 = getelementptr inbounds i8, i8* %79, i64 1
  br i1 %329, label %331, label %337, !prof !2

331:                                              ; preds = %325
  %332 = call i32 @bcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 1), i8* %330, i64 3) #6
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %335, label %334, !prof !2

334:                                              ; preds = %331
  store i8* %330, i8** %43, align 8
  br label %342

335:                                              ; preds = %331
  %336 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %336, i8** %43, align 8
  br label %355

337:                                              ; preds = %325
  store i8* %330, i8** %43, align 8
  %338 = add nsw i64 %328, -1
  %339 = icmp ult i64 %338, 3
  %340 = select i1 %339, i64 %338, i64 3
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %354, label %342

342:                                              ; preds = %334, %337
  %343 = phi i64 [ 3, %334 ], [ %340, %337 ]
  %344 = load i8, i8* %330, align 1
  %345 = icmp eq i8 %344, 114
  br i1 %345, label %351, label %346

346:                                              ; preds = %1206, %1200, %342
  %347 = phi i8 [ %344, %342 ], [ %1201, %1200 ], [ %1207, %1206 ]
  %348 = zext i8 %347 to i64
  %349 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %348
  %350 = load i8, i8* %349, align 1
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %350) #6
  br label %355

351:                                              ; preds = %342
  %352 = getelementptr inbounds i8, i8* %79, i64 2
  store i8* %352, i8** %43, align 8
  %353 = icmp ugt i64 %343, 1
  br i1 %353, label %1200, label %354

354:                                              ; preds = %351, %1203, %1209, %337
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 13) #6
  br label %355

355:                                              ; preds = %335, %346, %354
  %356 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %356, i64 184
  %358 = ptrtoint %"class.v8::internal::Factory"* %357 to i64
  br label %427

359:                                              ; preds = %91
  %360 = ptrtoint i8* %76 to i64
  %361 = ptrtoint i8* %79 to i64
  %362 = sub i64 %360, %361
  %363 = icmp ugt i64 %362, 4
  %364 = getelementptr inbounds i8, i8* %79, i64 1
  br i1 %363, label %365, label %371, !prof !2

365:                                              ; preds = %359
  %366 = call i32 @bcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 1), i8* %364, i64 4) #6
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %369, label %368, !prof !2

368:                                              ; preds = %365
  store i8* %364, i8** %43, align 8
  br label %376

369:                                              ; preds = %365
  %370 = getelementptr inbounds i8, i8* %79, i64 5
  store i8* %370, i8** %43, align 8
  br label %389

371:                                              ; preds = %359
  store i8* %364, i8** %43, align 8
  %372 = add nsw i64 %362, -1
  %373 = icmp ult i64 %372, 4
  %374 = select i1 %373, i64 %372, i64 4
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %388, label %376

376:                                              ; preds = %368, %371
  %377 = phi i64 [ 4, %368 ], [ %374, %371 ]
  %378 = load i8, i8* %364, align 1
  %379 = icmp eq i8 %378, 97
  br i1 %379, label %385, label %380

380:                                              ; preds = %1195, %1189, %1183, %376
  %381 = phi i8 [ %378, %376 ], [ %1184, %1183 ], [ %1190, %1189 ], [ %1196, %1195 ]
  %382 = zext i8 %381 to i64
  %383 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %382
  %384 = load i8, i8* %383, align 1
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %384) #6
  br label %389

385:                                              ; preds = %376
  %386 = getelementptr inbounds i8, i8* %79, i64 2
  store i8* %386, i8** %43, align 8
  %387 = icmp ugt i64 %377, 1
  br i1 %387, label %1183, label %388

388:                                              ; preds = %385, %1186, %1192, %1198, %371
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 13) #6
  br label %389

389:                                              ; preds = %369, %380, %388
  %390 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %391 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %390, i64 192
  %392 = ptrtoint %"class.v8::internal::Factory"* %391 to i64
  br label %427

393:                                              ; preds = %91
  %394 = ptrtoint i8* %76 to i64
  %395 = ptrtoint i8* %79 to i64
  %396 = sub i64 %394, %395
  %397 = icmp ugt i64 %396, 3
  %398 = getelementptr inbounds i8, i8* %79, i64 1
  br i1 %397, label %399, label %405, !prof !2

399:                                              ; preds = %393
  %400 = call i32 @bcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 1), i8* %398, i64 3) #6
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %403, label %402, !prof !2

402:                                              ; preds = %399
  store i8* %398, i8** %43, align 8
  br label %410

403:                                              ; preds = %399
  %404 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %404, i8** %43, align 8
  br label %423

405:                                              ; preds = %393
  store i8* %398, i8** %43, align 8
  %406 = add nsw i64 %396, -1
  %407 = icmp ult i64 %406, 3
  %408 = select i1 %407, i64 %406, i64 3
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %422, label %410

410:                                              ; preds = %402, %405
  %411 = phi i64 [ 3, %402 ], [ %408, %405 ]
  %412 = load i8, i8* %398, align 1
  %413 = icmp eq i8 %412, 117
  br i1 %413, label %419, label %414

414:                                              ; preds = %1178, %1172, %410
  %415 = phi i8 [ %412, %410 ], [ %1173, %1172 ], [ %1179, %1178 ]
  %416 = zext i8 %415 to i64
  %417 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %416
  %418 = load i8, i8* %417, align 1
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %418) #6
  br label %423

419:                                              ; preds = %410
  %420 = getelementptr inbounds i8, i8* %79, i64 2
  store i8* %420, i8** %43, align 8
  %421 = icmp ugt i64 %411, 1
  br i1 %421, label %1172, label %422

422:                                              ; preds = %419, %1175, %1181, %405
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 13) #6
  br label %423

423:                                              ; preds = %403, %414, %422
  %424 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %425 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %424, i64 176
  %426 = ptrtoint %"class.v8::internal::Factory"* %425 to i64
  br label %427

427:                                              ; preds = %91, %92, %99, %120, %263, %355, %389, %423
  %428 = phi i64 [ %98, %92 ], [ %101, %99 ], [ %124, %120 ], [ %266, %263 ], [ %358, %355 ], [ %392, %389 ], [ %426, %423 ], [ %74, %91 ]
  br label %510

429:                                              ; preds = %91, %91, %91, %91, %91, %91, %88
  %430 = phi i8* [ %89, %88 ], [ %76, %91 ], [ %76, %91 ], [ %76, %91 ], [ %76, %91 ], [ %76, %91 ], [ %76, %91 ]
  %431 = phi i8* [ %90, %88 ], [ %79, %91 ], [ %79, %91 ], [ %79, %91 ], [ %79, %91 ], [ %79, %91 ], [ %79, %91 ]
  %432 = icmp eq i8* %431, %430
  br i1 %432, label %438, label %433, !prof !3

433:                                              ; preds = %429
  %434 = load i8, i8* %431, align 1
  %435 = zext i8 %434 to i64
  %436 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %435
  %437 = load i8, i8* %436, align 1
  br label %438

438:                                              ; preds = %429, %433
  %439 = phi i8 [ %437, %433 ], [ 13, %429 ]
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %439) #6
  %440 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %2, i64 0, i32 0, i32 0
  %441 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %440, align 8
  %442 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %443 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %441, %442
  br i1 %443, label %1094, label %444

444:                                              ; preds = %438, %507
  %445 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %482, %507 ], [ %442, %438 ]
  %446 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %445, i64 -1
  %447 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %448 = icmp eq %"class.v8::internal::Isolate"* %447, null
  br i1 %448, label %449, label %452

449:                                              ; preds = %444
  %450 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %446 to i64*
  %451 = load i64, i64* %450, align 8
  store i64 %451, i64* %47, align 8
  br label %471

452:                                              ; preds = %444
  %453 = load i64*, i64** %29, align 8
  %454 = load i64*, i64** %33, align 8
  %455 = ptrtoint i64* %453 to i64
  %456 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %447, i64 0, i32 31
  %457 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %456, i64 0, i32 0
  %458 = bitcast %"struct.v8::internal::HandleScopeData"* %456 to i64*
  %459 = load i64*, i64** %457, align 8
  store i64 %455, i64* %458, align 8
  %460 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %447, i64 0, i32 31, i32 2
  %461 = load i32, i32* %460, align 8
  %462 = add nsw i32 %461, -1
  store i32 %462, i32* %460, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %447, i64 0, i32 31, i32 1
  %464 = load i64*, i64** %463, align 8
  %465 = icmp eq i64* %464, %454
  br i1 %465, label %468, label %466

466:                                              ; preds = %452
  store i64* %454, i64** %463, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %447) #6
  %467 = load i64*, i64** %457, align 8
  br label %468

468:                                              ; preds = %466, %452
  %469 = phi i64* [ %467, %466 ], [ %453, %452 ]
  %470 = phi i64* [ %454, %466 ], [ %459, %452 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %469, i64* %470) #6
  br label %471

471:                                              ; preds = %449, %468
  %472 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %445, i64 -1, i32 0, i32 1
  %473 = bitcast i64** %472 to i64*
  %474 = load i64, i64* %473, align 8
  store i64 %474, i64* %30, align 8
  %475 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %445, i64 -1, i32 0, i32 2
  %476 = bitcast i64** %475 to i64*
  %477 = load i64, i64* %476, align 8
  store i64 %477, i64* %34, align 8
  %478 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %446, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %478, align 8
  %479 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %445, i64 -1, i32 1
  %480 = bitcast i32* %479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %480, i64 12, i1 false) #6
  %481 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %482 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %481, i64 -1
  %483 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %482, i64 0, i32 0, i32 0
  %484 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %483, align 8
  %485 = icmp eq %"class.v8::internal::Isolate"* %484, null
  br i1 %485, label %507, label %486

486:                                              ; preds = %471
  %487 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %481, i64 -1, i32 0, i32 1
  %488 = load i64*, i64** %487, align 8
  %489 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %481, i64 -1, i32 0, i32 2
  %490 = load i64*, i64** %489, align 8
  %491 = ptrtoint i64* %488 to i64
  %492 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %484, i64 0, i32 31
  %493 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %492, i64 0, i32 0
  %494 = bitcast %"struct.v8::internal::HandleScopeData"* %492 to i64*
  %495 = load i64*, i64** %493, align 8
  store i64 %491, i64* %494, align 8
  %496 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %484, i64 0, i32 31, i32 2
  %497 = load i32, i32* %496, align 8
  %498 = add nsw i32 %497, -1
  store i32 %498, i32* %496, align 8
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %484, i64 0, i32 31, i32 1
  %500 = load i64*, i64** %499, align 8
  %501 = icmp eq i64* %500, %490
  br i1 %501, label %504, label %502

502:                                              ; preds = %486
  store i64* %490, i64** %499, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %484) #6
  %503 = load i64*, i64** %493, align 8
  br label %504

504:                                              ; preds = %502, %486
  %505 = phi i64* [ %503, %502 ], [ %488, %486 ]
  %506 = phi i64* [ %490, %502 ], [ %495, %486 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %505, i64* %506) #6
  br label %507

507:                                              ; preds = %471, %504
  store %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %482, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %508 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %440, align 8
  %509 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %508, %482
  br i1 %509, label %1094, label %444

510:                                              ; preds = %427, %926
  %511 = phi i64 [ %929, %926 ], [ %428, %427 ]
  %512 = load i32, i32* %39, align 8
  %513 = trunc i32 %512 to i8
  %514 = and i8 %513, 3
  switch i8 %514, label %1090 [
    i8 0, label %515
    i8 1, label %563
    i8 2, label %930
  ]

515:                                              ; preds = %510
  %516 = inttoptr i64 %511 to i64*
  %517 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %518 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %517, i64 0, i32 31
  %519 = load i64, i64* %516, align 8
  %520 = load i64*, i64** %29, align 8
  %521 = load i64*, i64** %33, align 8
  %522 = ptrtoint i64* %520 to i64
  %523 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %518, i64 0, i32 0
  %524 = bitcast %"struct.v8::internal::HandleScopeData"* %518 to i64*
  %525 = load i64*, i64** %523, align 8
  store i64 %522, i64* %524, align 8
  %526 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %517, i64 0, i32 31, i32 2
  %527 = load i32, i32* %526, align 8
  %528 = add nsw i32 %527, -1
  store i32 %528, i32* %526, align 8
  %529 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %517, i64 0, i32 31, i32 1
  %530 = load i64*, i64** %529, align 8
  %531 = icmp eq i64* %530, %521
  br i1 %531, label %534, label %532

532:                                              ; preds = %515
  store i64* %521, i64** %529, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %517) #6
  %533 = load i64*, i64** %523, align 8
  br label %534

534:                                              ; preds = %532, %515
  %535 = phi i64* [ %533, %532 ], [ %520, %515 ]
  %536 = phi i64* [ %521, %532 ], [ %525, %515 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %535, i64* %536) #6
  %537 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %537, i64 0, i32 31, i32 4
  %539 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %538, align 8
  %540 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %539, null
  br i1 %540, label %543, label %541

541:                                              ; preds = %534
  %542 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %539, i64 %519) #6
  br label %556

543:                                              ; preds = %534
  %544 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %537, i64 0, i32 31, i32 0
  %545 = load i64*, i64** %544, align 8
  %546 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %537, i64 0, i32 31, i32 1
  %547 = load i64*, i64** %546, align 8
  %548 = icmp eq i64* %545, %547
  br i1 %548, label %549, label %551

549:                                              ; preds = %543
  %550 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %537) #6
  br label %551

551:                                              ; preds = %549, %543
  %552 = phi i64* [ %550, %549 ], [ %545, %543 ]
  %553 = ptrtoint i64* %552 to i64
  %554 = add i64 %553, 8
  %555 = inttoptr i64 %554 to i64*
  store i64* %555, i64** %544, align 8
  store i64 %519, i64* %552, align 8
  br label %556

556:                                              ; preds = %541, %551
  %557 = phi i64* [ %542, %541 ], [ %552, %551 ]
  %558 = bitcast %"struct.v8::internal::HandleScopeData"* %518 to <2 x i64>*
  %559 = load <2 x i64>, <2 x i64>* %558, align 8
  %560 = bitcast i64** %29 to <2 x i64>*
  store <2 x i64> %559, <2 x i64>* %560, align 8
  %561 = load i32, i32* %526, align 8
  %562 = add nsw i32 %561, 1
  store i32 %562, i32* %526, align 8
  br label %1094

563:                                              ; preds = %510
  %564 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %565 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %564, i64 -1, i32 1
  %566 = bitcast %"class.v8::internal::Handle.1129"* %565 to i64*
  store i64 %511, i64* %566, align 8
  store i8 13, i8* %42, align 8
  %567 = load i8*, i8** %43, align 8
  %568 = load i8*, i8** %44, align 8
  %569 = icmp eq i8* %567, %568
  br i1 %569, label %580, label %570

570:                                              ; preds = %563, %577
  %571 = phi i8* [ %578, %577 ], [ %567, %563 ]
  %572 = load i8, i8* %571, align 1
  %573 = zext i8 %572 to i64
  %574 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %573
  %575 = load i8, i8* %574, align 1
  %576 = icmp eq i8 %575, 9
  br i1 %576, label %577, label %582

577:                                              ; preds = %570
  %578 = getelementptr inbounds i8, i8* %571, i64 1
  %579 = icmp eq i8* %578, %568
  br i1 %579, label %580, label %570

580:                                              ; preds = %577, %563
  %581 = phi i8* [ %567, %563 ], [ %568, %577 ]
  store i8* %581, i8** %43, align 8
  br label %643

582:                                              ; preds = %570
  store i8 %575, i8* %42, align 8
  %583 = icmp eq i8 %572, 44
  %584 = getelementptr inbounds i8, i8* %571, i64 1
  %585 = select i1 %583, i8* %584, i8* %571
  store i8* %585, i8** %43, align 8
  br i1 %583, label %586, label %643, !prof !2

586:                                              ; preds = %582
  store i8 13, i8* %42, align 8
  %587 = icmp eq i8* %585, %568
  br i1 %587, label %598, label %588

588:                                              ; preds = %586, %595
  %589 = phi i8* [ %596, %595 ], [ %584, %586 ]
  %590 = load i8, i8* %589, align 1
  %591 = zext i8 %590 to i64
  %592 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %591
  %593 = load i8, i8* %592, align 1
  %594 = icmp eq i8 %593, 9
  br i1 %594, label %595, label %600

595:                                              ; preds = %588
  %596 = getelementptr inbounds i8, i8* %589, i64 1
  %597 = icmp eq i8* %596, %568
  br i1 %597, label %598, label %588

598:                                              ; preds = %595, %586
  %599 = phi i8* [ %584, %586 ], [ %568, %595 ]
  store i8* %599, i8** %43, align 8
  br label %604

600:                                              ; preds = %588
  store i8 %593, i8* %42, align 8
  store i8* %589, i8** %43, align 8
  %601 = icmp eq i8 %590, 34
  br i1 %601, label %602, label %604, !prof !2

602:                                              ; preds = %600
  %603 = getelementptr inbounds i8, i8* %589, i64 1
  store i8* %603, i8** %43, align 8
  br label %606

604:                                              ; preds = %598, %600
  %605 = phi i8 [ 13, %598 ], [ %593, %600 ]
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %605) #6
  br label %606

606:                                              ; preds = %602, %604
  %607 = call { i64, i32 } @_ZN2v88internal10JsonParserIhE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser"* %0, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull %5)
  %608 = extractvalue { i64, i32 } %607, 0
  %609 = extractvalue { i64, i32 } %607, 1
  %610 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %611 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %13, align 8
  %612 = icmp eq %"struct.v8::internal::JsonProperty"* %610, %611
  br i1 %612, label %613, label %615, !prof !3

613:                                              ; preds = %606
  %614 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #6
  br label %615

615:                                              ; preds = %606, %613
  %616 = phi %"struct.v8::internal::JsonProperty"* [ %614, %613 ], [ %610, %606 ]
  %617 = bitcast %"struct.v8::internal::JsonProperty"* %616 to i64*
  store i64 %608, i64* %617, align 8
  %618 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %616, i64 0, i32 0, i32 2
  %619 = bitcast i8* %618 to i32*
  store i32 %609, i32* %619, align 8
  %620 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %616, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %620, align 8
  %621 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %616, i64 1
  store %"struct.v8::internal::JsonProperty"* %621, %"struct.v8::internal::JsonProperty"** %11, align 8
  store i8 13, i8* %42, align 8
  %622 = load i8*, i8** %43, align 8
  %623 = load i8*, i8** %44, align 8
  %624 = icmp eq i8* %622, %623
  br i1 %624, label %635, label %625

625:                                              ; preds = %615, %632
  %626 = phi i8* [ %633, %632 ], [ %622, %615 ]
  %627 = load i8, i8* %626, align 1
  %628 = zext i8 %627 to i64
  %629 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %628
  %630 = load i8, i8* %629, align 1
  %631 = icmp eq i8 %630, 9
  br i1 %631, label %632, label %637

632:                                              ; preds = %625
  %633 = getelementptr inbounds i8, i8* %626, i64 1
  %634 = icmp eq i8* %633, %623
  br i1 %634, label %635, label %625

635:                                              ; preds = %632, %615
  %636 = phi i8* [ %622, %615 ], [ %623, %632 ]
  store i8* %636, i8** %43, align 8
  br label %641

637:                                              ; preds = %625
  store i8 %630, i8* %42, align 8
  store i8* %626, i8** %43, align 8
  %638 = icmp eq i8 %627, 58
  br i1 %638, label %639, label %641, !prof !2

639:                                              ; preds = %637
  %640 = getelementptr inbounds i8, i8* %626, i64 1
  store i8* %640, i8** %43, align 8
  br label %1090

641:                                              ; preds = %635, %637
  %642 = phi i8 [ 13, %635 ], [ %630, %637 ]
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %642) #6
  br label %1090

643:                                              ; preds = %580, %582
  %644 = load i64, i64* %49, align 8
  %645 = load i64, i64* %62, align 8
  %646 = icmp eq i64 %644, %645
  br i1 %646, label %794, label %647

647:                                              ; preds = %643
  %648 = inttoptr i64 %644 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  %649 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %648, i64 -1, i32 1
  %650 = load i32, i32* %649, align 8
  %651 = and i32 %650, 3
  %652 = icmp eq i32 %651, 2
  br i1 %652, label %653, label %794

653:                                              ; preds = %647
  %654 = lshr i32 %650, 2
  %655 = zext i32 %654 to i64
  %656 = load i64, i64* %50, align 8
  %657 = load i64, i64* %51, align 8
  %658 = sub i64 %656, %657
  %659 = ashr exact i64 %658, 3
  %660 = icmp ugt i64 %659, %655
  br i1 %660, label %661, label %794

661:                                              ; preds = %653
  %662 = inttoptr i64 %656 to %"class.v8::internal::Handle.1129"*
  %663 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %662, i64 -1, i32 0, i32 0
  %664 = load i64*, i64** %663, align 8
  %665 = load i64, i64* %664, align 8
  %666 = and i64 %665, 1
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %794, label %668

668:                                              ; preds = %661
  %669 = and i64 %665, -4294967296
  %670 = add i64 %665, -1
  %671 = inttoptr i64 %670 to i32*
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = zext i32 %672 to i64
  %674 = or i64 %669, %673
  %675 = add i64 %674, 7
  %676 = inttoptr i64 %675 to i16*
  %677 = load atomic i16, i16* %676 monotonic, align 2
  %678 = icmp ugt i16 %677, 188
  br i1 %678, label %679, label %794

679:                                              ; preds = %668
  %680 = load atomic i32, i32* %671 monotonic, align 4
  %681 = zext i32 %680 to i64
  %682 = or i64 %669, %681
  %683 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %684 = add i64 %682, 11
  %685 = inttoptr i64 %684 to i32*
  %686 = load atomic i32, i32* %685 acquire, align 4
  %687 = and i32 %686, 1048576
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %794

689:                                              ; preds = %679
  %690 = add i64 %682, 7
  %691 = inttoptr i64 %690 to i16*
  %692 = load atomic i16, i16* %691 monotonic, align 2
  %693 = icmp eq i16 %692, 1057
  br i1 %693, label %694, label %762

694:                                              ; preds = %689
  %695 = load atomic i32, i32* %685 acquire, align 4
  %696 = and i32 %695, 1047552
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %762, label %698

698:                                              ; preds = %694
  %699 = add i64 %682, 19
  %700 = inttoptr i64 %699 to i32*
  %701 = load i32, i32* %700, align 4
  %702 = zext i32 %701 to i64
  %703 = or i64 %669, %702
  %704 = and i64 %702, 1
  %705 = icmp eq i64 %704, 0
  br i1 %705, label %706, label %708

706:                                              ; preds = %698
  %707 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %734

708:                                              ; preds = %698
  %709 = add i64 %703, -1
  %710 = inttoptr i64 %709 to i32*
  %711 = load atomic i32, i32* %710 monotonic, align 4
  %712 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %713 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %712, null
  br i1 %713, label %720, label %714

714:                                              ; preds = %708
  %715 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %712, i64 0, i32 0, i32 1
  %716 = load i8, i8* %715, align 8, !range !4
  %717 = icmp eq i8 %716, 0
  br i1 %717, label %720, label %718

718:                                              ; preds = %714
  %719 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %712, i64 0, i32 1, i64 0
  br label %728

720:                                              ; preds = %714, %708
  %721 = and i64 %682, -262144
  %722 = or i64 %721, 16
  %723 = inttoptr i64 %722 to i64*
  %724 = load i64, i64* %723, align 16
  %725 = add i64 %724, -41416
  %726 = inttoptr i64 %725 to %"class.v8::internal::Isolate"*
  %727 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %726, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %728

728:                                              ; preds = %720, %718
  %729 = phi i64* [ %727, %720 ], [ %719, %718 ]
  %730 = getelementptr inbounds i64, i64* %729, i64 10
  %731 = load i64, i64* %730, align 8
  %732 = trunc i64 %731 to i32
  %733 = icmp eq i32 %711, %732
  br i1 %733, label %755, label %734

734:                                              ; preds = %728, %706
  %735 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %707, %706 ], [ %712, %728 ]
  %736 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %735, null
  br i1 %736, label %743, label %737

737:                                              ; preds = %734
  %738 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %735, i64 0, i32 0, i32 1
  %739 = load i8, i8* %738, align 8, !range !4
  %740 = icmp eq i8 %739, 0
  br i1 %740, label %743, label %741

741:                                              ; preds = %737
  %742 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %735, i64 0, i32 1, i64 0
  br label %751

743:                                              ; preds = %737, %734
  %744 = and i64 %682, -262144
  %745 = or i64 %744, 16
  %746 = inttoptr i64 %745 to i64*
  %747 = load i64, i64* %746, align 16
  %748 = add i64 %747, -41416
  %749 = inttoptr i64 %748 to %"class.v8::internal::Isolate"*
  %750 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %749, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %751

751:                                              ; preds = %743, %741
  %752 = phi i64* [ %750, %743 ], [ %742, %741 ]
  %753 = getelementptr inbounds i64, i64* %752, i64 4
  %754 = load i64, i64* %753, align 8
  br label %755

755:                                              ; preds = %728, %751
  %756 = phi i64 [ %754, %751 ], [ %703, %728 ]
  %757 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %683, i64 0, i32 0, i32 7, i32 0, i64 4
  %758 = load i64, i64* %757, align 8
  %759 = trunc i64 %756 to i32
  %760 = trunc i64 %758 to i32
  %761 = icmp eq i32 %759, %760
  br i1 %761, label %794, label %762

762:                                              ; preds = %689, %694, %755
  %763 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %764 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %763, i64 0, i32 31, i32 4
  %765 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %764, align 8
  %766 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %765, null
  br i1 %766, label %772, label %767

767:                                              ; preds = %762
  %768 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %765, i64 %682) #6
  %769 = load i64, i64* %768, align 8
  %770 = add i64 %769, 11
  %771 = inttoptr i64 %770 to i32*
  br label %785

772:                                              ; preds = %762
  %773 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %763, i64 0, i32 31, i32 0
  %774 = load i64*, i64** %773, align 8
  %775 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %763, i64 0, i32 31, i32 1
  %776 = load i64*, i64** %775, align 8
  %777 = icmp eq i64* %774, %776
  br i1 %777, label %778, label %780

778:                                              ; preds = %772
  %779 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %763) #6
  br label %780

780:                                              ; preds = %778, %772
  %781 = phi i64* [ %779, %778 ], [ %774, %772 ]
  %782 = ptrtoint i64* %781 to i64
  %783 = add i64 %782, 8
  %784 = inttoptr i64 %783 to i64*
  store i64* %784, i64** %773, align 8
  store i64 %682, i64* %781, align 8
  br label %785

785:                                              ; preds = %767, %780
  %786 = phi i32* [ %771, %767 ], [ %685, %780 ]
  %787 = phi i64* [ %768, %767 ], [ %781, %780 ]
  %788 = load atomic i32, i32* %786 acquire, align 4
  %789 = and i32 %788, 16777216
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %794, label %791

791:                                              ; preds = %785
  %792 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %793 = call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %792, i64* %787) #6
  br label %794

794:                                              ; preds = %785, %679, %661, %643, %647, %653, %755, %791, %668
  %795 = phi i64* [ null, %668 ], [ null, %755 ], [ %793, %791 ], [ %787, %785 ], [ null, %653 ], [ null, %647 ], [ null, %643 ], [ null, %661 ], [ null, %679 ]
  %796 = call i64* @_ZN2v88internal10JsonParserIhE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE(%"class.v8::internal::JsonParser"* %0, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull dereferenceable(40) %5, %"class.v8::base::SmallVector"* nonnull dereferenceable(408) %3, i64* %795)
  %797 = load i32, i32* %39, align 8
  %798 = lshr i32 %797, 2
  %799 = zext i32 %798 to i64
  %800 = load i64, i64* %63, align 8
  %801 = load i64, i64* %53, align 8
  %802 = sub i64 %800, %801
  %803 = sdiv exact i64 %802, 24
  %804 = icmp ult i64 %803, %799
  %805 = inttoptr i64 %801 to %"struct.v8::internal::JsonProperty"*
  br i1 %804, label %806, label %809

806:                                              ; preds = %794
  %807 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %3, i64 %799) #6
  %808 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %64, align 8
  br label %809

809:                                              ; preds = %794, %806
  %810 = phi %"struct.v8::internal::JsonProperty"* [ %808, %806 ], [ %805, %794 ]
  %811 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %810, i64 %799
  store %"struct.v8::internal::JsonProperty"* %811, %"struct.v8::internal::JsonProperty"** %11, align 8
  %812 = load i8, i8* %42, align 8
  %813 = icmp eq i8 %812, 3
  br i1 %813, label %814, label %817, !prof !2

814:                                              ; preds = %809
  %815 = load i8*, i8** %43, align 8
  %816 = getelementptr inbounds i8, i8* %815, i64 1
  store i8* %816, i8** %43, align 8
  br label %818

817:                                              ; preds = %809
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %812) #6
  br label %818

818:                                              ; preds = %814, %817
  %819 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %820 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31
  %821 = load i64, i64* %796, align 8
  %822 = load i64*, i64** %29, align 8
  %823 = load i64*, i64** %33, align 8
  %824 = ptrtoint i64* %822 to i64
  %825 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %820, i64 0, i32 0
  %826 = bitcast %"struct.v8::internal::HandleScopeData"* %820 to i64*
  %827 = load i64*, i64** %825, align 8
  store i64 %824, i64* %826, align 8
  %828 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31, i32 2
  %829 = load i32, i32* %828, align 8
  %830 = add nsw i32 %829, -1
  store i32 %830, i32* %828, align 8
  %831 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31, i32 1
  %832 = load i64*, i64** %831, align 8
  %833 = icmp eq i64* %832, %823
  br i1 %833, label %836, label %834

834:                                              ; preds = %818
  store i64* %823, i64** %831, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %819) #6
  %835 = load i64*, i64** %825, align 8
  br label %836

836:                                              ; preds = %834, %818
  %837 = phi i64* [ %835, %834 ], [ %822, %818 ]
  %838 = phi i64* [ %823, %834 ], [ %827, %818 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %837, i64* %838) #6
  %839 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %840 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %839, i64 0, i32 31, i32 4
  %841 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %840, align 8
  %842 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %841, null
  br i1 %842, label %845, label %843

843:                                              ; preds = %836
  %844 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %841, i64 %821) #6
  br label %858

845:                                              ; preds = %836
  %846 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %839, i64 0, i32 31, i32 0
  %847 = load i64*, i64** %846, align 8
  %848 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %839, i64 0, i32 31, i32 1
  %849 = load i64*, i64** %848, align 8
  %850 = icmp eq i64* %847, %849
  br i1 %850, label %851, label %853

851:                                              ; preds = %845
  %852 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %839) #6
  br label %853

853:                                              ; preds = %851, %845
  %854 = phi i64* [ %852, %851 ], [ %847, %845 ]
  %855 = ptrtoint i64* %854 to i64
  %856 = add i64 %855, 8
  %857 = inttoptr i64 %856 to i64*
  store i64* %857, i64** %846, align 8
  store i64 %821, i64* %854, align 8
  br label %858

858:                                              ; preds = %843, %853
  %859 = phi i64* [ %844, %843 ], [ %854, %853 ]
  %860 = load i64, i64* %826, align 8
  store i64 %860, i64* %30, align 8
  %861 = bitcast i64** %831 to i64*
  %862 = load i64, i64* %861, align 8
  store i64 %862, i64* %34, align 8
  %863 = load i32, i32* %828, align 8
  %864 = add nsw i32 %863, 1
  store i32 %864, i32* %828, align 8
  %865 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %866 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %865, i64 -1
  %867 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %868 = icmp eq %"class.v8::internal::Isolate"* %867, null
  %869 = inttoptr i64 %862 to i64*
  br i1 %868, label %870, label %873

870:                                              ; preds = %858
  %871 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %866 to i64*
  %872 = load i64, i64* %871, align 8
  store i64 %872, i64* %47, align 8
  br label %890

873:                                              ; preds = %858
  %874 = inttoptr i64 %860 to i64*
  %875 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %867, i64 0, i32 31
  %876 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %875, i64 0, i32 0
  %877 = bitcast %"struct.v8::internal::HandleScopeData"* %875 to i64*
  %878 = load i64*, i64** %876, align 8
  store i64 %860, i64* %877, align 8
  %879 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %867, i64 0, i32 31, i32 2
  %880 = load i32, i32* %879, align 8
  %881 = add nsw i32 %880, -1
  store i32 %881, i32* %879, align 8
  %882 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %867, i64 0, i32 31, i32 1
  %883 = load i64*, i64** %882, align 8
  %884 = icmp eq i64* %883, %869
  br i1 %884, label %887, label %885

885:                                              ; preds = %873
  store i64* %869, i64** %882, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %867) #6
  %886 = load i64*, i64** %876, align 8
  br label %887

887:                                              ; preds = %885, %873
  %888 = phi i64* [ %886, %885 ], [ %874, %873 ]
  %889 = phi i64* [ %869, %885 ], [ %878, %873 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %888, i64* %889) #6
  br label %890

890:                                              ; preds = %870, %887
  %891 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %865, i64 -1, i32 0, i32 1
  %892 = bitcast i64** %891 to i64*
  %893 = load i64, i64* %892, align 8
  store i64 %893, i64* %30, align 8
  %894 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %865, i64 -1, i32 0, i32 2
  %895 = bitcast i64** %894 to i64*
  %896 = load i64, i64* %895, align 8
  store i64 %896, i64* %34, align 8
  %897 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %866, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %897, align 8
  %898 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %865, i64 -1, i32 1
  %899 = bitcast i32* %898 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %899, i64 12, i1 false) #6
  %900 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %901 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %900, i64 -1
  %902 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %901, i64 0, i32 0, i32 0
  %903 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %902, align 8
  %904 = icmp eq %"class.v8::internal::Isolate"* %903, null
  br i1 %904, label %926, label %905

905:                                              ; preds = %890
  %906 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %900, i64 -1, i32 0, i32 1
  %907 = load i64*, i64** %906, align 8
  %908 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %900, i64 -1, i32 0, i32 2
  %909 = load i64*, i64** %908, align 8
  %910 = ptrtoint i64* %907 to i64
  %911 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %903, i64 0, i32 31
  %912 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %911, i64 0, i32 0
  %913 = bitcast %"struct.v8::internal::HandleScopeData"* %911 to i64*
  %914 = load i64*, i64** %912, align 8
  store i64 %910, i64* %913, align 8
  %915 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %903, i64 0, i32 31, i32 2
  %916 = load i32, i32* %915, align 8
  %917 = add nsw i32 %916, -1
  store i32 %917, i32* %915, align 8
  %918 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %903, i64 0, i32 31, i32 1
  %919 = load i64*, i64** %918, align 8
  %920 = icmp eq i64* %919, %909
  br i1 %920, label %923, label %921

921:                                              ; preds = %905
  store i64* %909, i64** %918, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %903) #6
  %922 = load i64*, i64** %912, align 8
  br label %923

923:                                              ; preds = %921, %905
  %924 = phi i64* [ %922, %921 ], [ %907, %905 ]
  %925 = phi i64* [ %909, %921 ], [ %914, %905 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %924, i64* %925) #6
  br label %926

926:                                              ; preds = %1087, %1054, %923, %890
  %927 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %901, %890 ], [ %901, %923 ], [ %1065, %1054 ], [ %1065, %1087 ]
  %928 = phi i64* [ %859, %890 ], [ %859, %923 ], [ %1023, %1054 ], [ %1023, %1087 ]
  store %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %927, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %929 = ptrtoint i64* %928 to i64
  br label %510

930:                                              ; preds = %510
  %931 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %19, align 8
  %932 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %21, align 8
  %933 = icmp eq %"class.v8::internal::Handle.1129"* %931, %932
  br i1 %933, label %934, label %936, !prof !3

934:                                              ; preds = %930
  %935 = call %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEv(%"class.v8::base::SmallVector.1157"* nonnull %4) #6
  br label %936

936:                                              ; preds = %930, %934
  %937 = phi %"class.v8::internal::Handle.1129"* [ %935, %934 ], [ %931, %930 ]
  %938 = bitcast %"class.v8::internal::Handle.1129"* %937 to i64*
  store i64 %511, i64* %938, align 8
  %939 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %937, i64 1
  store %"class.v8::internal::Handle.1129"* %939, %"class.v8::internal::Handle.1129"** %19, align 8
  store i8 13, i8* %42, align 8
  %940 = load i8*, i8** %43, align 8
  %941 = load i8*, i8** %44, align 8
  %942 = icmp eq i8* %940, %941
  br i1 %942, label %953, label %943

943:                                              ; preds = %936, %950
  %944 = phi i8* [ %951, %950 ], [ %940, %936 ]
  %945 = load i8, i8* %944, align 1
  %946 = zext i8 %945 to i64
  %947 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %946
  %948 = load i8, i8* %947, align 1
  %949 = icmp eq i8 %948, 9
  br i1 %949, label %950, label %955

950:                                              ; preds = %943
  %951 = getelementptr inbounds i8, i8* %944, i64 1
  %952 = icmp eq i8* %951, %941
  br i1 %952, label %953, label %943

953:                                              ; preds = %950, %936
  %954 = phi i8* [ %940, %936 ], [ %941, %950 ]
  store i8* %954, i8** %43, align 8
  br label %959

955:                                              ; preds = %943
  store i8 %948, i8* %42, align 8
  %956 = icmp eq i8 %945, 44
  %957 = getelementptr inbounds i8, i8* %944, i64 1
  %958 = select i1 %956, i8* %957, i8* %944
  store i8* %958, i8** %43, align 8
  br i1 %956, label %1090, label %959, !prof !2

959:                                              ; preds = %953, %955
  %960 = call i64* @_ZN2v88internal10JsonParserIhE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE(%"class.v8::internal::JsonParser"* %0, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* nonnull dereferenceable(40) %5, %"class.v8::base::SmallVector.1157"* nonnull dereferenceable(152) %4)
  %961 = load i32, i32* %39, align 8
  %962 = lshr i32 %961, 2
  %963 = zext i32 %962 to i64
  %964 = load i64, i64* %60, align 8
  %965 = load i64, i64* %51, align 8
  %966 = sub i64 %964, %965
  %967 = ashr exact i64 %966, 3
  %968 = icmp ult i64 %967, %963
  %969 = inttoptr i64 %965 to %"class.v8::internal::Handle.1129"*
  br i1 %968, label %970, label %973

970:                                              ; preds = %959
  %971 = call %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEm(%"class.v8::base::SmallVector.1157"* nonnull %4, i64 %963) #6
  %972 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %61, align 8
  br label %973

973:                                              ; preds = %959, %970
  %974 = phi %"class.v8::internal::Handle.1129"* [ %972, %970 ], [ %969, %959 ]
  %975 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %974, i64 %963
  store %"class.v8::internal::Handle.1129"* %975, %"class.v8::internal::Handle.1129"** %19, align 8
  %976 = load i8, i8* %42, align 8
  %977 = icmp eq i8 %976, 5
  br i1 %977, label %978, label %981, !prof !2

978:                                              ; preds = %973
  %979 = load i8*, i8** %43, align 8
  %980 = getelementptr inbounds i8, i8* %979, i64 1
  store i8* %980, i8** %43, align 8
  br label %982

981:                                              ; preds = %973
  call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %976) #6
  br label %982

982:                                              ; preds = %978, %981
  %983 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %984 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %983, i64 0, i32 31
  %985 = load i64, i64* %960, align 8
  %986 = load i64*, i64** %29, align 8
  %987 = load i64*, i64** %33, align 8
  %988 = ptrtoint i64* %986 to i64
  %989 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %984, i64 0, i32 0
  %990 = bitcast %"struct.v8::internal::HandleScopeData"* %984 to i64*
  %991 = load i64*, i64** %989, align 8
  store i64 %988, i64* %990, align 8
  %992 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %983, i64 0, i32 31, i32 2
  %993 = load i32, i32* %992, align 8
  %994 = add nsw i32 %993, -1
  store i32 %994, i32* %992, align 8
  %995 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %983, i64 0, i32 31, i32 1
  %996 = load i64*, i64** %995, align 8
  %997 = icmp eq i64* %996, %987
  br i1 %997, label %1000, label %998

998:                                              ; preds = %982
  store i64* %987, i64** %995, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %983) #6
  %999 = load i64*, i64** %989, align 8
  br label %1000

1000:                                             ; preds = %998, %982
  %1001 = phi i64* [ %999, %998 ], [ %986, %982 ]
  %1002 = phi i64* [ %987, %998 ], [ %991, %982 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1001, i64* %1002) #6
  %1003 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1004 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1003, i64 0, i32 31, i32 4
  %1005 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1004, align 8
  %1006 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1005, null
  br i1 %1006, label %1009, label %1007

1007:                                             ; preds = %1000
  %1008 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1005, i64 %985) #6
  br label %1022

1009:                                             ; preds = %1000
  %1010 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1003, i64 0, i32 31, i32 0
  %1011 = load i64*, i64** %1010, align 8
  %1012 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1003, i64 0, i32 31, i32 1
  %1013 = load i64*, i64** %1012, align 8
  %1014 = icmp eq i64* %1011, %1013
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1009
  %1016 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1003) #6
  br label %1017

1017:                                             ; preds = %1015, %1009
  %1018 = phi i64* [ %1016, %1015 ], [ %1011, %1009 ]
  %1019 = ptrtoint i64* %1018 to i64
  %1020 = add i64 %1019, 8
  %1021 = inttoptr i64 %1020 to i64*
  store i64* %1021, i64** %1010, align 8
  store i64 %985, i64* %1018, align 8
  br label %1022

1022:                                             ; preds = %1007, %1017
  %1023 = phi i64* [ %1008, %1007 ], [ %1018, %1017 ]
  %1024 = load i64, i64* %990, align 8
  store i64 %1024, i64* %30, align 8
  %1025 = bitcast i64** %995 to i64*
  %1026 = load i64, i64* %1025, align 8
  store i64 %1026, i64* %34, align 8
  %1027 = load i32, i32* %992, align 8
  %1028 = add nsw i32 %1027, 1
  store i32 %1028, i32* %992, align 8
  %1029 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %1030 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1029, i64 -1
  %1031 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1032 = icmp eq %"class.v8::internal::Isolate"* %1031, null
  %1033 = inttoptr i64 %1026 to i64*
  br i1 %1032, label %1034, label %1037

1034:                                             ; preds = %1022
  %1035 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1030 to i64*
  %1036 = load i64, i64* %1035, align 8
  store i64 %1036, i64* %47, align 8
  br label %1054

1037:                                             ; preds = %1022
  %1038 = inttoptr i64 %1024 to i64*
  %1039 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1031, i64 0, i32 31
  %1040 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1039, i64 0, i32 0
  %1041 = bitcast %"struct.v8::internal::HandleScopeData"* %1039 to i64*
  %1042 = load i64*, i64** %1040, align 8
  store i64 %1024, i64* %1041, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1031, i64 0, i32 31, i32 2
  %1044 = load i32, i32* %1043, align 8
  %1045 = add nsw i32 %1044, -1
  store i32 %1045, i32* %1043, align 8
  %1046 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1031, i64 0, i32 31, i32 1
  %1047 = load i64*, i64** %1046, align 8
  %1048 = icmp eq i64* %1047, %1033
  br i1 %1048, label %1051, label %1049

1049:                                             ; preds = %1037
  store i64* %1033, i64** %1046, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1031) #6
  %1050 = load i64*, i64** %1040, align 8
  br label %1051

1051:                                             ; preds = %1049, %1037
  %1052 = phi i64* [ %1050, %1049 ], [ %1038, %1037 ]
  %1053 = phi i64* [ %1033, %1049 ], [ %1042, %1037 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1052, i64* %1053) #6
  br label %1054

1054:                                             ; preds = %1034, %1051
  %1055 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1029, i64 -1, i32 0, i32 1
  %1056 = bitcast i64** %1055 to i64*
  %1057 = load i64, i64* %1056, align 8
  store i64 %1057, i64* %30, align 8
  %1058 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1029, i64 -1, i32 0, i32 2
  %1059 = bitcast i64** %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  store i64 %1060, i64* %34, align 8
  %1061 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1030, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %1061, align 8
  %1062 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1029, i64 -1, i32 1
  %1063 = bitcast i32* %1062 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %1063, i64 12, i1 false) #6
  %1064 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %1065 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1064, i64 -1
  %1066 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1065, i64 0, i32 0, i32 0
  %1067 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1066, align 8
  %1068 = icmp eq %"class.v8::internal::Isolate"* %1067, null
  br i1 %1068, label %926, label %1069

1069:                                             ; preds = %1054
  %1070 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1064, i64 -1, i32 0, i32 1
  %1071 = load i64*, i64** %1070, align 8
  %1072 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1064, i64 -1, i32 0, i32 2
  %1073 = load i64*, i64** %1072, align 8
  %1074 = ptrtoint i64* %1071 to i64
  %1075 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1067, i64 0, i32 31
  %1076 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1075, i64 0, i32 0
  %1077 = bitcast %"struct.v8::internal::HandleScopeData"* %1075 to i64*
  %1078 = load i64*, i64** %1076, align 8
  store i64 %1074, i64* %1077, align 8
  %1079 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1067, i64 0, i32 31, i32 2
  %1080 = load i32, i32* %1079, align 8
  %1081 = add nsw i32 %1080, -1
  store i32 %1081, i32* %1079, align 8
  %1082 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1067, i64 0, i32 31, i32 1
  %1083 = load i64*, i64** %1082, align 8
  %1084 = icmp eq i64* %1083, %1073
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1069
  store i64* %1073, i64** %1082, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1067) #6
  %1086 = load i64*, i64** %1076, align 8
  br label %1087

1087:                                             ; preds = %1085, %1069
  %1088 = phi i64* [ %1086, %1085 ], [ %1071, %1069 ]
  %1089 = phi i64* [ %1073, %1085 ], [ %1078, %1069 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1088, i64* %1089) #6
  br label %926

1090:                                             ; preds = %510, %955, %641, %639
  store i8 13, i8* %42, align 8
  %1091 = load i8*, i8** %43, align 8
  %1092 = load i8*, i8** %44, align 8
  %1093 = icmp eq i8* %1091, %1092
  br i1 %1093, label %88, label %71

1094:                                             ; preds = %507, %438, %556
  %1095 = phi i64* [ %557, %556 ], [ null, %438 ], [ null, %507 ]
  %1096 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1097 = icmp eq %"class.v8::internal::Isolate"* %1096, null
  br i1 %1097, label %1117, label %1098

1098:                                             ; preds = %1094
  %1099 = load i64*, i64** %29, align 8
  %1100 = load i64*, i64** %33, align 8
  %1101 = ptrtoint i64* %1099 to i64
  %1102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1096, i64 0, i32 31
  %1103 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1102, i64 0, i32 0
  %1104 = bitcast %"struct.v8::internal::HandleScopeData"* %1102 to i64*
  %1105 = load i64*, i64** %1103, align 8
  store i64 %1101, i64* %1104, align 8
  %1106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1096, i64 0, i32 31, i32 2
  %1107 = load i32, i32* %1106, align 8
  %1108 = add nsw i32 %1107, -1
  store i32 %1108, i32* %1106, align 8
  %1109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1096, i64 0, i32 31, i32 1
  %1110 = load i64*, i64** %1109, align 8
  %1111 = icmp eq i64* %1110, %1100
  br i1 %1111, label %1114, label %1112

1112:                                             ; preds = %1098
  store i64* %1100, i64** %1109, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1096) #6
  %1113 = load i64*, i64** %1103, align 8
  br label %1114

1114:                                             ; preds = %1112, %1098
  %1115 = phi i64* [ %1113, %1112 ], [ %1099, %1098 ]
  %1116 = phi i64* [ %1100, %1112 ], [ %1105, %1098 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1115, i64* %1116) #6
  br label %1117

1117:                                             ; preds = %1094, %1114
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #6
  %1118 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %61, align 8
  %1119 = bitcast %"struct.std::__1::aligned_storage<128, 8>::type"* %17 to %"class.v8::internal::Handle.1129"*
  %1120 = icmp eq %"class.v8::internal::Handle.1129"* %1118, %1119
  br i1 %1120, label %1123, label %1121

1121:                                             ; preds = %1117
  %1122 = bitcast %"class.v8::internal::Handle.1129"* %1118 to i8*
  call void @free(i8* %1122) #6
  br label %1123

1123:                                             ; preds = %1117, %1121
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #6
  %1124 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %64, align 8
  %1125 = bitcast %"struct.std::__1::aligned_storage<384, 8>::type"* %9 to %"struct.v8::internal::JsonProperty"*
  %1126 = icmp eq %"struct.v8::internal::JsonProperty"* %1124, %1125
  br i1 %1126, label %1129, label %1127

1127:                                             ; preds = %1123
  %1128 = bitcast %"struct.v8::internal::JsonProperty"* %1124 to i8*
  call void @free(i8* %1128) #6
  br label %1129

1129:                                             ; preds = %1123, %1127
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %8) #6
  %1130 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %2, i64 0, i32 0, i32 0
  %1131 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %1130, align 8
  %1132 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1131, null
  br i1 %1132, label %1171, label %1133

1133:                                             ; preds = %1129
  %1134 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1131 to i8*
  %1135 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  %1136 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1135, %1131
  br i1 %1136, label %1169, label %1137

1137:                                             ; preds = %1133, %1164
  %1138 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %1139, %1164 ], [ %1135, %1133 ]
  %1139 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1138, i64 -1
  %1140 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1139, i64 0, i32 0, i32 0
  %1141 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1140, align 8
  %1142 = icmp eq %"class.v8::internal::Isolate"* %1141, null
  br i1 %1142, label %1164, label %1143

1143:                                             ; preds = %1137
  %1144 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1138, i64 -1, i32 0, i32 1
  %1145 = load i64*, i64** %1144, align 8
  %1146 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1138, i64 -1, i32 0, i32 2
  %1147 = load i64*, i64** %1146, align 8
  %1148 = ptrtoint i64* %1145 to i64
  %1149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1141, i64 0, i32 31
  %1150 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1149, i64 0, i32 0
  %1151 = bitcast %"struct.v8::internal::HandleScopeData"* %1149 to i64*
  %1152 = load i64*, i64** %1150, align 8
  store i64 %1148, i64* %1151, align 8
  %1153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1141, i64 0, i32 31, i32 2
  %1154 = load i32, i32* %1153, align 8
  %1155 = add nsw i32 %1154, -1
  store i32 %1155, i32* %1153, align 8
  %1156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1141, i64 0, i32 31, i32 1
  %1157 = load i64*, i64** %1156, align 8
  %1158 = icmp eq i64* %1157, %1147
  br i1 %1158, label %1161, label %1159

1159:                                             ; preds = %1143
  store i64* %1147, i64** %1156, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1141) #6
  %1160 = load i64*, i64** %1150, align 8
  br label %1161

1161:                                             ; preds = %1159, %1143
  %1162 = phi i64* [ %1160, %1159 ], [ %1145, %1143 ]
  %1163 = phi i64* [ %1147, %1159 ], [ %1152, %1143 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1162, i64* %1163) #6
  br label %1164

1164:                                             ; preds = %1161, %1137
  %1165 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1139, %1131
  br i1 %1165, label %1166, label %1137

1166:                                             ; preds = %1164
  %1167 = bitcast %"class.std::__1::vector.1150"* %2 to i8**
  %1168 = load i8*, i8** %1167, align 8
  br label %1169

1169:                                             ; preds = %1166, %1133
  %1170 = phi i8* [ %1168, %1166 ], [ %1134, %1133 ]
  store %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1131, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %45, align 8
  call void @_ZdlPv(i8* %1170) #14
  br label %1171

1171:                                             ; preds = %1129, %1169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #6
  ret i64* %1095

1172:                                             ; preds = %419
  %1173 = load i8, i8* %420, align 1
  %1174 = icmp eq i8 %1173, 108
  br i1 %1174, label %1175, label %414

1175:                                             ; preds = %1172
  %1176 = getelementptr inbounds i8, i8* %79, i64 3
  store i8* %1176, i8** %43, align 8
  %1177 = icmp eq i64 %411, 3
  br i1 %1177, label %1178, label %422

1178:                                             ; preds = %1175
  %1179 = load i8, i8* %1176, align 1
  %1180 = icmp eq i8 %1179, 108
  br i1 %1180, label %1181, label %414

1181:                                             ; preds = %1178
  %1182 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %1182, i8** %43, align 8
  br label %422

1183:                                             ; preds = %385
  %1184 = load i8, i8* %386, align 1
  %1185 = icmp eq i8 %1184, 108
  br i1 %1185, label %1186, label %380

1186:                                             ; preds = %1183
  %1187 = getelementptr inbounds i8, i8* %79, i64 3
  store i8* %1187, i8** %43, align 8
  %1188 = icmp ugt i64 %377, 2
  br i1 %1188, label %1189, label %388

1189:                                             ; preds = %1186
  %1190 = load i8, i8* %1187, align 1
  %1191 = icmp eq i8 %1190, 115
  br i1 %1191, label %1192, label %380

1192:                                             ; preds = %1189
  %1193 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %1193, i8** %43, align 8
  %1194 = icmp ugt i64 %377, 3
  br i1 %1194, label %1195, label %388

1195:                                             ; preds = %1192
  %1196 = load i8, i8* %1193, align 1
  %1197 = icmp eq i8 %1196, 101
  br i1 %1197, label %1198, label %380

1198:                                             ; preds = %1195
  %1199 = getelementptr inbounds i8, i8* %79, i64 5
  store i8* %1199, i8** %43, align 8
  br label %388

1200:                                             ; preds = %351
  %1201 = load i8, i8* %352, align 1
  %1202 = icmp eq i8 %1201, 117
  br i1 %1202, label %1203, label %346

1203:                                             ; preds = %1200
  %1204 = getelementptr inbounds i8, i8* %79, i64 3
  store i8* %1204, i8** %43, align 8
  %1205 = icmp eq i64 %343, 3
  br i1 %1205, label %1206, label %354

1206:                                             ; preds = %1203
  %1207 = load i8, i8* %1204, align 1
  %1208 = icmp eq i8 %1207, 101
  br i1 %1208, label %1209, label %346

1209:                                             ; preds = %1206
  %1210 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %1210, i8** %43, align 8
  br label %354
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal10JsonParserIhE5CheckENS0_9JsonTokenE(%"class.v8::internal::JsonParser"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %2, %17
  %10 = phi i8* [ %18, %17 ], [ %5, %2 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 9
  br i1 %15, label %17, label %16

16:                                               ; preds = %9
  store i8 %14, i8* %3, align 8
  br label %20

17:                                               ; preds = %9
  %18 = getelementptr inbounds i8, i8* %10, i64 1
  %19 = icmp eq i8* %18, %7
  br i1 %19, label %20, label %9

20:                                               ; preds = %17, %2, %16
  %21 = phi i8 [ %14, %16 ], [ 13, %2 ], [ 13, %17 ]
  %22 = phi i8* [ %10, %16 ], [ %5, %2 ], [ %7, %17 ]
  %23 = icmp eq i8 %21, %1
  %24 = getelementptr inbounds i8, i8* %22, i64 1
  %25 = select i1 %23, i8* %24, i8* %22
  store i8* %25, i8** %4, align 8
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::MessageLocation", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = trunc i64 %7 to i32
  %12 = icmp eq i32 %10, %11
  %13 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::Factory"*
  br i1 %12, label %14, label %109

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  br i1 %27, label %28, label %42

28:                                               ; preds = %14
  %29 = load atomic i32, i32* %20 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %18, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = and i16 %34, 7
  %36 = icmp eq i16 %35, 3
  br i1 %36, label %37, label %42

37:                                               ; preds = %28
  %38 = add i64 %17, 15
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = ashr i32 %40, 1
  br label %42

42:                                               ; preds = %14, %28, %37
  %43 = phi i32 [ %41, %37 ], [ 0, %28 ], [ 0, %14 ]
  %44 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %46, %49
  %51 = trunc i64 %50 to i32
  %52 = sub nsw i32 %51, %43
  %53 = sext i32 %52 to i64
  %54 = shl nsw i64 %53, 1
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %42
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %54) #6
  %60 = ptrtoint i64* %59 to i64
  br label %74

61:                                               ; preds = %42
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #6
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %54, i64* %70, align 8
  br label %74

74:                                               ; preds = %58, %69
  %75 = phi i64 [ %60, %58 ], [ %71, %69 ]
  %76 = phi i64* [ %59, %58 ], [ %70, %69 ]
  switch i8 %1, label %79 [
    i8 13, label %85
    i8 0, label %77
    i8 1, label %78
  ]

77:                                               ; preds = %74
  br label %85

78:                                               ; preds = %74
  br label %85

79:                                               ; preds = %74
  %80 = load i8*, i8** %44, align 8
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  %83 = tail call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %13, i16 zeroext %82) #6
  %84 = ptrtoint i64* %83 to i64
  br label %85

85:                                               ; preds = %74, %79, %78, %77
  %86 = phi i64* [ %76, %79 ], [ null, %78 ], [ null, %77 ], [ null, %74 ]
  %87 = phi i64 [ %84, %79 ], [ %75, %78 ], [ %75, %77 ], [ %75, %74 ]
  %88 = phi i32 [ 282, %79 ], [ 284, %78 ], [ 283, %77 ], [ 281, %74 ]
  %89 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::FactoryBase"*
  %90 = load i64*, i64** %15, align 8
  %91 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"* %89, i64* %90) #6
  %92 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %93 = tail call zeroext i1 @_ZNK2v88internal7Isolate32NeedsSourcePositionsForProfilingEv(%"class.v8::internal::Isolate"* %92) #6
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %95, i64* %91) #6
  br label %96

96:                                               ; preds = %94, %85
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 68
  %99 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %98, align 8
  tail call void @_ZN2v88internal5Debug14OnCompileErrorENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* %99, i64* %91) #6
  %100 = bitcast %"class.v8::internal::MessageLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #6
  %101 = add nsw i32 %52, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %3, i64* %91, i32 %52, i32 %101) #6
  %102 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %103 = inttoptr i64 %87 to i64*
  %104 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %13, i32 %88, i64* %103, i64* %86, i64* null) #6
  %105 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %102, i64* %104, %"class.v8::internal::MessageLocation"* nonnull %3) #6
  %106 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #6
  br label %109

109:                                              ; preds = %2, %96
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZNK2v88internal10JsonParserIhE4peekEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE7advanceEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %4, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserIhE16CurrentCharacterEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %10, label %7, !prof !3

7:                                                ; preds = %1
  %8 = load i8, i8* %3, align 1
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i32 [ %9, %7 ], [ -1, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2v88internal10JsonParserIhE9is_at_endEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserIhE13NextCharacterEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %4, i8** %2, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %11, label %8, !prof !3

8:                                                ; preds = %1
  %9 = load i8, i8* %4, align 1
  %10 = zext i8 %9 to i32
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %10, %8 ], [ -1, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE19AdvanceToNonDecimalEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %13
  %8 = phi i8* [ %14, %13 ], [ %3, %1 ]
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = add nsw i32 %10, -48
  %12 = icmp ugt i32 %11, 9
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = icmp eq i8* %14, %5
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %13, %1
  %17 = phi i8* [ %3, %1 ], [ %8, %7 ], [ %5, %13 ]
  store i8* %17, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE7ConsumeENS0_9JsonTokenE(%"class.v8::internal::JsonParser"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %5, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE6ExpectENS0_9JsonTokenE(%"class.v8::internal::JsonParser"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, %1
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %9, i8** %7, align 8
  br label %11

10:                                               ; preds = %2
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %4)
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE10ExpectNextENS0_9JsonTokenE(%"class.v8::internal::JsonParser"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %2, %17
  %10 = phi i8* [ %18, %17 ], [ %5, %2 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 9
  br i1 %15, label %17, label %16

16:                                               ; preds = %9
  store i8 %14, i8* %3, align 8
  br label %20

17:                                               ; preds = %9
  %18 = getelementptr inbounds i8, i8* %10, i64 1
  %19 = icmp eq i8* %18, %7
  br i1 %19, label %20, label %9

20:                                               ; preds = %17, %2, %16
  %21 = phi i8 [ %14, %16 ], [ 13, %2 ], [ 13, %17 ]
  %22 = phi i8* [ %10, %16 ], [ %5, %2 ], [ %7, %17 ]
  store i8* %22, i8** %4, align 8
  %23 = icmp eq i8 %21, %1
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %25, i8** %4, align 8
  br label %27

26:                                               ; preds = %20
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %21) #6
  br label %27

27:                                               ; preds = %24, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE14SkipWhitespaceEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 2
  store i8 13, i8* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %1, %16
  %9 = phi i8* [ %17, %16 ], [ %4, %1 ]
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 9
  br i1 %14, label %16, label %15

15:                                               ; preds = %8
  store i8 %13, i8* %2, align 8
  br label %19

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %9, i64 1
  %18 = icmp eq i8* %17, %6
  br i1 %18, label %19, label %8

19:                                               ; preds = %16, %1, %15
  %20 = phi i8* [ %9, %15 ], [ %4, %1 ], [ %6, %16 ]
  store i8* %20, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden { i64, i32 } @_ZN2v88internal10JsonParserIhE14ScanJsonStringEb(%"class.v8::internal::JsonParser"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %12 = inttoptr i64 %5 to i8*
  br label %13

13:                                               ; preds = %95, %2
  %14 = phi i8* [ %12, %2 ], [ %99, %95 ]
  %15 = phi i32 [ 0, %2 ], [ %97, %95 ]
  %16 = phi i32 [ 0, %2 ], [ 4, %95 ]
  %17 = phi i32 [ %10, %2 ], [ %98, %95 ]
  %18 = load i8*, i8** %11, align 8
  %19 = icmp eq i8* %14, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %13, %28
  %21 = phi i8* [ %29, %28 ], [ %14, %13 ]
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = getelementptr inbounds i8, i8* %21, i64 1
  %30 = icmp eq i8* %29, %18
  br i1 %30, label %31, label %20

31:                                               ; preds = %28
  store i8* %18, i8** %3, align 8
  br label %35

32:                                               ; preds = %20, %13
  %33 = phi i8* [ %14, %13 ], [ %21, %20 ]
  store i8* %33, i8** %3, align 8
  %34 = icmp eq i8* %33, %18
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %32, %31
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 13) #6
  br label %104

36:                                               ; preds = %32
  %37 = load i8, i8* %33, align 1
  switch i8 %37, label %100 [
    i8 34, label %38
    i8 92, label %58
  ]

38:                                               ; preds = %36
  %39 = ptrtoint i8* %33 to i64
  %40 = load i64, i64* %7, align 8
  %41 = sub i64 %39, %40
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %43, i8** %3, align 8
  %44 = sub nsw i32 %42, %17
  %45 = icmp ugt i32 %15, 255
  %46 = zext i1 %45 to i32
  br i1 %1, label %51, label %47

47:                                               ; preds = %38
  %48 = icmp slt i32 %44, 11
  %49 = zext i1 %48 to i32
  %50 = shl nuw nsw i32 %49, 1
  br label %51

51:                                               ; preds = %38, %47
  %52 = phi i32 [ 2, %38 ], [ %50, %47 ]
  %53 = or i32 %16, %46
  %54 = zext i32 %44 to i64
  %55 = shl nuw i64 %54, 32
  %56 = and i64 %9, 4294967295
  %57 = or i32 %53, %52
  br label %104

58:                                               ; preds = %36
  %59 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %59, i8** %3, align 8
  %60 = icmp eq i8* %59, %18
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %58
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 13) #6
  br label %104

62:                                               ; preds = %58
  %63 = load i8, i8* %59, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = and i8 %66, 7
  switch i8 %67, label %94 [
    i8 1, label %68
    i8 2, label %68
    i8 3, label %68
    i8 4, label %68
    i8 5, label %68
    i8 6, label %68
    i8 7, label %70
    i8 0, label %90
  ]

68:                                               ; preds = %62, %62, %62, %62, %62, %62
  %69 = add nsw i32 %17, 1
  br label %95

70:                                               ; preds = %62
  %71 = tail call i32 @_ZN2v88internal10JsonParserIhE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser"* %0)
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %82

73:                                               ; preds = %70
  %74 = load i8*, i8** %3, align 8
  %75 = load i8*, i8** %11, align 8
  %76 = icmp eq i8* %74, %75
  br i1 %76, label %88, label %77, !prof !3

77:                                               ; preds = %73
  %78 = load i8, i8* %74, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  br label %88

82:                                               ; preds = %70
  %83 = or i32 %71, %15
  %84 = icmp ugt i32 %71, 65535
  %85 = select i1 %84, i32 4, i32 5
  %86 = add nsw i32 %85, %17
  %87 = load i8*, i8** %3, align 8
  br label %95

88:                                               ; preds = %73, %77
  %89 = phi i8 [ %81, %77 ], [ 13, %73 ]
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %89) #6
  br label %104

90:                                               ; preds = %62
  %91 = zext i8 %63 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %93) #6
  br label %104

94:                                               ; preds = %62
  unreachable

95:                                               ; preds = %68, %82
  %96 = phi i8* [ %59, %68 ], [ %87, %82 ]
  %97 = phi i32 [ %15, %68 ], [ %83, %82 ]
  %98 = phi i32 [ %69, %68 ], [ %86, %82 ]
  %99 = getelementptr inbounds i8, i8* %96, i64 1
  store i8* %99, i8** %3, align 8
  br label %13

100:                                              ; preds = %36
  %101 = zext i8 %37 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %103) #6
  br label %104

104:                                              ; preds = %35, %100, %61, %88, %90, %51
  %105 = phi i64 [ %56, %51 ], [ 0, %90 ], [ 0, %88 ], [ 0, %61 ], [ 0, %100 ], [ 0, %35 ]
  %106 = phi i64 [ %55, %51 ], [ 0, %90 ], [ 0, %88 ], [ 0, %61 ], [ 0, %100 ], [ 0, %35 ]
  %107 = phi i32 [ %57, %51 ], [ 0, %90 ], [ 0, %88 ], [ 0, %61 ], [ 0, %100 ], [ 0, %35 ]
  %108 = or i64 %106, %105
  %109 = insertvalue { i64, i32 } undef, i64 %108, 0
  %110 = insertvalue { i64, i32 } %109, i32 %107, 1
  ret { i64, i32 } %110
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2v88internal10JsonParserIhE8positionEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE25ReportUnexpectedCharacterEj(%"class.v8::internal::JsonParser"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = icmp ult i32 %1, 256
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  br label %10

10:                                               ; preds = %2, %4, %6
  %11 = phi i8 [ %9, %6 ], [ 12, %4 ], [ 13, %2 ]
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserIhE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %4 = load i8*, i8** %2, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %5, i8** %2, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %5, %6
  br i1 %7, label %13, label %8, !prof !3

8:                                                ; preds = %1
  %9 = load i8, i8* %5, align 1
  %10 = zext i8 %9 to i32
  %11 = add nsw i32 %10, -48
  %12 = icmp ult i32 %11, 10
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %8
  %14 = phi i32 [ %11, %8 ], [ -49, %1 ]
  %15 = or i32 %14, 32
  %16 = add nsw i32 %15, -49
  %17 = icmp ult i32 %16, 6
  %18 = add nsw i32 %15, -39
  %19 = select i1 %17, i32 %18, i32 -1
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0, !prof !2
  %22 = icmp sgt i32 %19, -1
  br i1 %22, label %23, label %27

23:                                               ; preds = %8, %13
  %24 = phi i32 [ %21, %13 ], [ %11, %8 ]
  %25 = getelementptr inbounds i8, i8* %4, i64 2
  store i8* %25, i8** %2, align 8
  %26 = icmp eq i8* %25, %6
  br i1 %26, label %37, label %29, !prof !3

27:                                               ; preds = %97, %85, %61, %37, %13
  %28 = phi i32 [ -1, %13 ], [ -1, %37 ], [ -1, %61 ], [ -1, %85 ], [ %98, %97 ]
  ret i32 %28

29:                                               ; preds = %23
  %30 = load i8, i8* %25, align 1
  %31 = zext i8 %30 to i32
  %32 = add nsw i32 %31, -48
  %33 = icmp ult i32 %32, 10
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = shl i32 %24, 4
  %36 = add i32 %32, %35
  br label %49

37:                                               ; preds = %29, %23
  %38 = phi i32 [ %32, %29 ], [ -49, %23 ]
  %39 = or i32 %38, 32
  %40 = add nsw i32 %39, -49
  %41 = icmp ult i32 %40, 6
  %42 = add nsw i32 %39, -39
  %43 = select i1 %41, i32 %42, i32 -1
  %44 = icmp slt i32 %43, 0
  %45 = shl i32 %24, 4
  %46 = add i32 %43, %45
  %47 = select i1 %44, i32 %24, i32 %46, !prof !3
  %48 = icmp sgt i32 %43, -1
  br i1 %48, label %49, label %27

49:                                               ; preds = %37, %34
  %50 = phi i32 [ %36, %34 ], [ %47, %37 ]
  %51 = getelementptr inbounds i8, i8* %4, i64 3
  store i8* %51, i8** %2, align 8
  %52 = icmp eq i8* %51, %6
  br i1 %52, label %61, label %53, !prof !3

53:                                               ; preds = %49
  %54 = load i8, i8* %51, align 1
  %55 = zext i8 %54 to i32
  %56 = add nsw i32 %55, -48
  %57 = icmp ult i32 %56, 10
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = shl i32 %50, 4
  %60 = add i32 %56, %59
  br label %73

61:                                               ; preds = %53, %49
  %62 = phi i32 [ %56, %53 ], [ -49, %49 ]
  %63 = or i32 %62, 32
  %64 = add nsw i32 %63, -49
  %65 = icmp ult i32 %64, 6
  %66 = add nsw i32 %63, -39
  %67 = select i1 %65, i32 %66, i32 -1
  %68 = icmp slt i32 %67, 0
  %69 = shl i32 %50, 4
  %70 = add i32 %67, %69
  %71 = select i1 %68, i32 %50, i32 %70, !prof !3
  %72 = icmp sgt i32 %67, -1
  br i1 %72, label %73, label %27

73:                                               ; preds = %61, %58
  %74 = phi i32 [ %60, %58 ], [ %71, %61 ]
  %75 = getelementptr inbounds i8, i8* %4, i64 4
  store i8* %75, i8** %2, align 8
  %76 = icmp eq i8* %75, %6
  br i1 %76, label %85, label %77, !prof !3

77:                                               ; preds = %73
  %78 = load i8, i8* %75, align 1
  %79 = zext i8 %78 to i32
  %80 = add nsw i32 %79, -48
  %81 = icmp ult i32 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = shl i32 %74, 4
  %84 = add i32 %80, %83
  br label %97

85:                                               ; preds = %77, %73
  %86 = phi i32 [ %80, %77 ], [ -49, %73 ]
  %87 = or i32 %86, 32
  %88 = add nsw i32 %87, -49
  %89 = icmp ult i32 %88, 6
  %90 = add nsw i32 %87, -39
  %91 = select i1 %89, i32 %90, i32 -1
  %92 = icmp slt i32 %91, 0
  %93 = shl i32 %74, 4
  %94 = add i32 %91, %93
  %95 = select i1 %92, i32 %74, i32 %94, !prof !3
  %96 = icmp sgt i32 %91, -1
  br i1 %96, label %97, label %27

97:                                               ; preds = %85, %82
  %98 = phi i32 [ %84, %82 ], [ %95, %85 ]
  br label %27
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden { i64, i32 } @_ZN2v88internal10JsonParserIhE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, %6
  br i1 %9, label %98, label %10, !prof !3

10:                                               ; preds = %2
  %11 = load i8, i8* %6, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i8 %11, 92
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %15, i8** %3, align 8
  %16 = icmp eq i8* %15, %8
  br i1 %16, label %98, label %17, !prof !3

17:                                               ; preds = %14
  %18 = load i8, i8* %15, align 1
  %19 = icmp eq i8 %18, 117
  br i1 %19, label %20, label %98

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN2v88internal10JsonParserIhE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser"* %0)
  br label %22

22:                                               ; preds = %20, %10
  %23 = phi i32 [ %21, %20 ], [ %12, %10 ]
  %24 = add i32 %23, -48
  %25 = icmp ult i32 %24, 10
  br i1 %25, label %26, label %98

26:                                               ; preds = %22
  %27 = icmp eq i32 %23, 48
  br i1 %27, label %28, label %41

28:                                               ; preds = %26
  %29 = load i8*, i8** %3, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %30, i8** %3, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = icmp eq i8* %30, %31
  br i1 %32, label %98, label %33, !prof !3

33:                                               ; preds = %28
  %34 = load i8, i8* %30, align 1
  %35 = icmp eq i8 %34, 34
  br i1 %35, label %36, label %98

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %29, i64 2
  store i8* %37, i8** %3, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %106

41:                                               ; preds = %26, %86
  %42 = phi i32 [ %88, %86 ], [ %24, %26 ]
  %43 = load i8*, i8** %3, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  %45 = load i8*, i8** %7, align 8
  %46 = icmp eq i8* %44, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %41, %59
  %48 = phi i32 [ %61, %59 ], [ %42, %41 ]
  %49 = phi i8* [ %62, %59 ], [ %44, %41 ]
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = add nsw i32 %51, -48
  %53 = icmp ult i32 %52, 10
  br i1 %53, label %54, label %65

54:                                               ; preds = %47
  %55 = add nsw i32 %51, -45
  %56 = ashr i32 %55, 3
  %57 = sub nuw nsw i32 429496729, %56
  %58 = icmp ugt i32 %48, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = mul i32 %48, 10
  %61 = add i32 %52, %60
  %62 = getelementptr inbounds i8, i8* %49, i64 1
  %63 = icmp eq i8* %62, %45
  br i1 %63, label %64, label %47

64:                                               ; preds = %59
  store i8* %45, i8** %3, align 8
  br label %98

65:                                               ; preds = %47, %54, %41
  %66 = phi i32 [ %42, %41 ], [ %48, %54 ], [ %48, %47 ]
  %67 = phi i8* [ %44, %41 ], [ %49, %54 ], [ %49, %47 ]
  store i8* %67, i8** %3, align 8
  %68 = icmp eq i8* %67, %45
  br i1 %68, label %98, label %69, !prof !3

69:                                               ; preds = %65
  %70 = load i8, i8* %67, align 1
  switch i8 %70, label %98 [
    i8 34, label %89
    i8 92, label %71
  ]

71:                                               ; preds = %69
  %72 = getelementptr inbounds i8, i8* %67, i64 1
  store i8* %72, i8** %3, align 8
  %73 = icmp eq i8* %72, %45
  br i1 %73, label %98, label %74, !prof !3

74:                                               ; preds = %71
  %75 = load i8, i8* %72, align 1
  %76 = icmp eq i8 %75, 117
  br i1 %76, label %77, label %98

77:                                               ; preds = %74
  %78 = tail call i32 @_ZN2v88internal10JsonParserIhE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser"* %0)
  %79 = add i32 %78, -48
  %80 = icmp ult i32 %79, 10
  br i1 %80, label %81, label %98

81:                                               ; preds = %77
  %82 = add nsw i32 %78, -45
  %83 = ashr i32 %82, 3
  %84 = sub nuw nsw i32 429496729, %83
  %85 = icmp ugt i32 %66, %84
  br i1 %85, label %98, label %86

86:                                               ; preds = %81
  %87 = mul i32 %66, 10
  %88 = add i32 %79, %87
  br label %41

89:                                               ; preds = %69
  %90 = getelementptr inbounds i8, i8* %67, i64 1
  store i8* %90, i8** %3, align 8
  %91 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp ult i32 %95, %66
  %97 = select i1 %96, i32 %66, i32 %95
  store i32 %97, i32* %94, align 4
  br label %106

98:                                               ; preds = %81, %77, %71, %65, %74, %69, %64, %28, %14, %2, %17, %33, %22
  store i64 %5, i64* %4, align 8
  %99 = tail call { i64, i32 } @_ZN2v88internal10JsonParserIhE14ScanJsonStringEb(%"class.v8::internal::JsonParser"* %0, i1 zeroext true)
  %100 = extractvalue { i64, i32 } %99, 0
  %101 = extractvalue { i64, i32 } %99, 1
  %102 = trunc i64 %100 to i32
  %103 = and i64 %100, -4294967296
  %104 = and i32 %101, -256
  %105 = and i32 %101, 255
  br label %106

106:                                              ; preds = %89, %36, %98
  %107 = phi i32 [ %105, %98 ], [ 8, %36 ], [ 8, %89 ]
  %108 = phi i64 [ %103, %98 ], [ 0, %36 ], [ 0, %89 ]
  %109 = phi i32 [ %102, %98 ], [ 0, %36 ], [ %66, %89 ]
  %110 = phi i32 [ %104, %98 ], [ 0, %36 ], [ 0, %89 ]
  %111 = zext i32 %109 to i64
  %112 = or i64 %108, %111
  %113 = or i32 %110, %107
  %114 = insertvalue { i64, i32 } undef, i64 %112, 0
  %115 = insertvalue { i64, i32 } %114, i32 %113, 1
  ret { i64, i32 } %115
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Vector.1144", align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 200
  %13 = bitcast %"class.v8::internal::Factory"* %12 to i64*
  br label %85

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = and i8 %16, 6
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %68

19:                                               ; preds = %14
  %20 = icmp eq i64* %2, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = sext i32 %7 to i64
  %29 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = load i64, i64* %2, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %32, i8* %27, i64 %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br i1 %33, label %85, label %34

34:                                               ; preds = %21, %19
  %35 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 3
  %36 = load i8, i8* %35, align 1, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %40 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 6, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %6, align 4
  %46 = load i8, i8* %15, align 4
  %47 = and i8 %46, 1
  %48 = icmp ne i8 %47, 0
  %49 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %40, i64* %42, i32 %44, i32 %45, i1 zeroext %48) #6
  br label %85

50:                                               ; preds = %34
  %51 = bitcast %"class.v8::internal::Vector.1144"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #6
  %52 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"class.v8::internal::Vector.1144", %"class.v8::internal::Vector.1144"* %5, i64 0, i32 0
  store i8* %57, i8** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Vector.1144", %"class.v8::internal::Vector.1144"* %5, i64 0, i32 1
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::FactoryBase"**
  %63 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %62, align 8
  %64 = load i8, i8* %15, align 4
  %65 = and i8 %64, 1
  %66 = icmp ne i8 %65, 0
  %67 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %63, %"class.v8::internal::Vector.1144"* nonnull dereferenceable(16) %5, i1 zeroext %66) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #6
  br label %85

68:                                               ; preds = %14
  %69 = and i8 %16, 1
  %70 = icmp eq i8 %69, 0
  %71 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::FactoryBase"**
  %72 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %71, align 8
  br i1 %70, label %73, label %79, !prof !2

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %72, i32 %7, i8 zeroext 0) #6
  %75 = icmp eq i64* %74, null
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

77:                                               ; preds = %73
  %78 = tail call i64* @_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1, i64* nonnull %74, i64* %2)
  br label %85

79:                                               ; preds = %68
  %80 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %72, i32 %7, i8 zeroext 0) #6
  %81 = icmp eq i64* %80, null
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %79
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

83:                                               ; preds = %79
  %84 = tail call i64* @_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1, i64* nonnull %80, i64* %2)
  br label %85

85:                                               ; preds = %21, %83, %77, %50, %38, %9
  %86 = phi i64* [ %13, %9 ], [ %78, %77 ], [ %84, %83 ], [ %49, %38 ], [ %67, %50 ], [ %2, %21 ]
  ret i64* %86
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Factory"* @_ZN2v88internal10JsonParserIhE7factoryEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %3 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %2, align 8
  ret %"class.v8::internal::Factory"* %3
}

declare i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"*, i64*, i32, i32, i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1144"* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %50

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  switch i64 %22, label %49 [
    i64 1, label %23
    i64 2, label %25
    i64 3, label %29
    i64 4, label %30
    i64 5, label %34
    i64 6, label %35
    i64 7, label %36
    i64 8, label %37
    i64 9, label %41
    i64 10, label %42
    i64 11, label %43
    i64 12, label %44
    i64 13, label %45
    i64 14, label %46
    i64 15, label %47
    i64 16, label %48
    i64 0, label %73
  ]

23:                                               ; preds = %13
  %24 = load i8, i8* %19, align 1
  store i8 %24, i8* %8, align 1
  br label %73

25:                                               ; preds = %13
  %26 = bitcast i8* %19 to i16*
  %27 = inttoptr i64 %7 to i16*
  %28 = load i16, i16* %26, align 1
  store i16 %28, i16* %27, align 1
  br label %73

29:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 3, i1 false) #6
  br label %73

30:                                               ; preds = %13
  %31 = bitcast i8* %19 to i32*
  %32 = inttoptr i64 %7 to i32*
  %33 = load i32, i32* %31, align 1
  store i32 %33, i32* %32, align 1
  br label %73

34:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 5, i1 false) #6
  br label %73

35:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 6, i1 false) #6
  br label %73

36:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 7, i1 false) #6
  br label %73

37:                                               ; preds = %13
  %38 = bitcast i8* %19 to i64*
  %39 = inttoptr i64 %7 to i64*
  %40 = load i64, i64* %38, align 1
  store i64 %40, i64* %39, align 1
  br label %73

41:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 9, i1 false) #6
  br label %73

42:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 10, i1 false) #6
  br label %73

43:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 11, i1 false) #6
  br label %73

44:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 12, i1 false) #6
  br label %73

45:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 13, i1 false) #6
  br label %73

46:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 14, i1 false) #6
  br label %73

47:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 15, i1 false) #6
  br label %73

48:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 16, i1 false) #6
  br label %73

49:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %19, i64 %22, i1 false) #6
  br label %73

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  tail call void @_ZN2v88internal10JsonParserIhE12DecodeStringIhEEvPT_ii(%"class.v8::internal::JsonParser"* %0, i8* %8, i32 %52, i32 %54)
  %55 = load i8, i8* %9, align 4
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %50
  %59 = icmp eq i64* %3, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %53, align 4
  %62 = sext i32 %61 to i64
  %63 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #6
  %64 = load i64, i64* %3, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %67 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %66, i8* %8, i64 %62) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #6
  br i1 %67, label %73, label %68

68:                                               ; preds = %58, %60
  %69 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %70 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %69, align 8
  %71 = load i32, i32* %53, align 4
  %72 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %70, i64* %2, i32 0, i32 %71, i1 zeroext false) #6
  br label %73

73:                                               ; preds = %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %37, %36, %35, %34, %30, %29, %25, %23, %13, %60, %68
  %74 = phi i64* [ %72, %68 ], [ %3, %60 ], [ %2, %13 ], [ %2, %23 ], [ %2, %25 ], [ %2, %29 ], [ %2, %30 ], [ %2, %34 ], [ %2, %35 ], [ %2, %36 ], [ %2, %37 ], [ %2, %41 ], [ %2, %42 ], [ %2, %43 ], [ %2, %44 ], [ %2, %45 ], [ %2, %46 ], [ %2, %47 ], [ %2, %48 ], [ %2, %49 ], [ %2, %50 ]
  ret i64* %74
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JsonParserIhE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i16*
  %9 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  tail call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %8, i8* %19, i64 %22)
  br label %46

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN2v88internal10JsonParserIhE12DecodeStringItEEvPT_ii(%"class.v8::internal::JsonParser"* %0, i16* %8, i32 %25, i32 %27)
  %28 = load i8, i8* %9, align 4
  %29 = and i8 %28, 2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %23
  %32 = icmp eq i64* %3, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %26, align 4
  %35 = sext i32 %34 to i64
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = load i64, i64* %3, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %40 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %39, i16* %8, i64 %35) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br i1 %40, label %46, label %41

41:                                               ; preds = %31, %33
  %42 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = load i32, i32* %26, align 4
  %45 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %43, i64* %2, i32 0, i32 %44, i1 zeroext false) #6
  br label %46

46:                                               ; preds = %23, %33, %13, %41
  %47 = phi i64* [ %45, %41 ], [ %2, %13 ], [ %3, %33 ], [ %2, %23 ]
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE15ParseJsonNumberEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 45
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %7, i8** %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %83, label %11, !prof !3

11:                                               ; preds = %6
  %12 = load i8, i8* %7, align 1
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i8* [ %3, %1 ], [ %7, %11 ]
  %15 = phi i8 [ %4, %1 ], [ %12, %11 ]
  %16 = phi i32 [ 1, %1 ], [ -1, %11 ]
  %17 = icmp eq i8 %15, 48
  br i1 %17, label %18, label %79

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %19, i8** %2, align 8
  %20 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %19, %21
  %23 = ptrtoint i8* %19 to i64
  br i1 %22, label %56, label %24, !prof !3

24:                                               ; preds = %18
  %25 = load i8, i8* %19, align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 16
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %24
  %32 = zext i8 %25 to i32
  %33 = add nsw i32 %32, -48
  %34 = icmp ult i32 %33, 10
  br i1 %34, label %35, label %179, !prof !3

35:                                               ; preds = %31
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext 0)
  %36 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 0) #6
  br label %352

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %37) #6
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 0, i64* %52, align 8
  br label %352

56:                                               ; preds = %24, %18
  %57 = icmp sgt i32 %16, 0
  br i1 %57, label %58, label %179

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 4
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %61, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 0) #6
  br label %352

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 31, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = icmp eq i64* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %60) #6
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi i64* [ %73, %72 ], [ %68, %66 ]
  %76 = ptrtoint i64* %75 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  store i64* %78, i64** %67, align 8
  store i64 0, i64* %75, align 8
  br label %352

79:                                               ; preds = %13
  %80 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %14, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %79, %6
  %84 = phi i8* [ %81, %79 ], [ %7, %6 ]
  store i8* %84, i8** %2, align 8
  br label %104

85:                                               ; preds = %79, %91
  %86 = phi i8* [ %92, %91 ], [ %14, %79 ]
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = add nsw i32 %88, -48
  %90 = icmp ugt i32 %89, 9
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds i8, i8* %86, i64 1
  %93 = icmp eq i8* %92, %81
  br i1 %93, label %94, label %85

94:                                               ; preds = %85, %91
  %95 = phi i8* [ %86, %85 ], [ %81, %91 ]
  store i8* %95, i8** %2, align 8
  %96 = icmp eq i8* %14, %95
  %97 = ptrtoint i8* %95 to i64
  br i1 %96, label %98, label %126, !prof !3

98:                                               ; preds = %94
  br i1 %82, label %104, label %99, !prof !3

99:                                               ; preds = %98
  %100 = load i8, i8* %14, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  br label %104

104:                                              ; preds = %83, %98, %99
  %105 = phi i8 [ %103, %99 ], [ 13, %98 ], [ 13, %83 ]
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %105) #6
  %106 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %107 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %107, i64 0, i32 31, i32 4
  %109 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %108, align 8
  %110 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %104
  %112 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %109, i64 0) #6
  br label %352

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %107, i64 0, i32 31, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %107, i64 0, i32 31, i32 1
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %115, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %107) #6
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i64* [ %120, %119 ], [ %115, %113 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = add i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  store i64* %125, i64** %114, align 8
  store i64 0, i64* %122, align 8
  br label %352

126:                                              ; preds = %94
  %127 = icmp eq i8* %95, %81
  br i1 %127, label %131, label %128, !prof !3

128:                                              ; preds = %126
  %129 = load i8, i8* %95, align 1
  %130 = zext i8 %129 to i32
  br label %131

131:                                              ; preds = %126, %128
  %132 = phi i32 [ %130, %128 ], [ -1, %126 ]
  %133 = ptrtoint i8* %14 to i64
  %134 = sub i64 %97, %133
  %135 = icmp slt i64 %134, 10
  br i1 %135, label %136, label %179

136:                                              ; preds = %131
  %137 = icmp ult i32 %132, 256
  br i1 %137, label %138, label %144

138:                                              ; preds = %136
  %139 = zext i32 %132 to i64
  %140 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 16
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %179

144:                                              ; preds = %136, %138
  br label %145

145:                                              ; preds = %144, %145
  %146 = phi i8* [ %153, %145 ], [ %14, %144 ]
  %147 = phi i32 [ %152, %145 ], [ 0, %144 ]
  %148 = mul nsw i32 %147, 10
  %149 = load i8, i8* %146, align 1
  %150 = zext i8 %149 to i32
  %151 = add i32 %148, -48
  %152 = add i32 %151, %150
  %153 = getelementptr inbounds i8, i8* %146, i64 1
  %154 = icmp eq i8* %153, %95
  br i1 %154, label %155, label %145

155:                                              ; preds = %145
  %156 = mul nsw i32 %152, %16
  %157 = sext i32 %156 to i64
  %158 = shl nsw i64 %157, 1
  %159 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %160 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %160, i64 0, i32 31, i32 4
  %162 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %161, align 8
  %163 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %155
  %165 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %162, i64 %158) #6
  br label %352

166:                                              ; preds = %155
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %160, i64 0, i32 31, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %160, i64 0, i32 31, i32 1
  %170 = load i64*, i64** %169, align 8
  %171 = icmp eq i64* %168, %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %166
  %173 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %160) #6
  br label %174

174:                                              ; preds = %172, %166
  %175 = phi i64* [ %173, %172 ], [ %168, %166 ]
  %176 = ptrtoint i64* %175 to i64
  %177 = add i64 %176, 8
  %178 = inttoptr i64 %177 to i64*
  store i64* %178, i64** %167, align 8
  store i64 %158, i64* %175, align 8
  br label %352

179:                                              ; preds = %138, %131, %31, %56
  %180 = phi i64 [ %97, %138 ], [ %97, %131 ], [ %23, %31 ], [ %23, %56 ]
  %181 = phi i8* [ %81, %138 ], [ %81, %131 ], [ %21, %31 ], [ %21, %56 ]
  %182 = phi i8* [ %95, %138 ], [ %95, %131 ], [ %19, %31 ], [ %19, %56 ]
  %183 = icmp eq i8* %182, %181
  br i1 %183, label %305, label %184, !prof !3

184:                                              ; preds = %179
  %185 = load i8, i8* %182, align 1
  %186 = icmp eq i8 %185, 46
  br i1 %186, label %187, label %237

187:                                              ; preds = %184
  %188 = getelementptr inbounds i8, i8* %182, i64 1
  store i8* %188, i8** %2, align 8
  %189 = icmp eq i8* %188, %181
  br i1 %189, label %203, label %190, !prof !3

190:                                              ; preds = %187
  %191 = load i8, i8* %188, align 1
  %192 = zext i8 %191 to i32
  %193 = add nsw i32 %192, -48
  %194 = icmp ult i32 %193, 10
  br i1 %194, label %195, label %199

195:                                              ; preds = %190
  %196 = zext i8 %191 to i32
  %197 = add nsw i32 %196, -48
  %198 = icmp ugt i32 %197, 9
  br i1 %198, label %234, label %225

199:                                              ; preds = %190
  %200 = zext i8 %191 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  br label %203

203:                                              ; preds = %187, %199
  %204 = phi i8 [ %202, %199 ], [ 13, %187 ]
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %204) #6
  %205 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %206 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %206, i64 0, i32 31, i32 4
  %208 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %209 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %203
  %211 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %208, i64 0) #6
  br label %352

212:                                              ; preds = %203
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %206, i64 0, i32 31, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %206, i64 0, i32 31, i32 1
  %216 = load i64*, i64** %215, align 8
  %217 = icmp eq i64* %214, %216
  br i1 %217, label %218, label %220

218:                                              ; preds = %212
  %219 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %206) #6
  br label %220

220:                                              ; preds = %218, %212
  %221 = phi i64* [ %219, %218 ], [ %214, %212 ]
  %222 = ptrtoint i64* %221 to i64
  %223 = add i64 %222, 8
  %224 = inttoptr i64 %223 to i64*
  store i64* %224, i64** %213, align 8
  store i64 0, i64* %221, align 8
  br label %352

225:                                              ; preds = %195, %229
  %226 = phi i8* [ %227, %229 ], [ %188, %195 ]
  %227 = getelementptr inbounds i8, i8* %226, i64 1
  %228 = icmp eq i8* %227, %181
  br i1 %228, label %234, label %229

229:                                              ; preds = %225
  %230 = load i8, i8* %227, align 1
  %231 = zext i8 %230 to i32
  %232 = add nsw i32 %231, -48
  %233 = icmp ugt i32 %232, 9
  br i1 %233, label %234, label %225

234:                                              ; preds = %229, %225, %195
  %235 = phi i8* [ %188, %195 ], [ %227, %229 ], [ %181, %225 ]
  store i8* %235, i8** %2, align 8
  %236 = ptrtoint i8* %235 to i64
  br label %237

237:                                              ; preds = %234, %184
  %238 = phi i64 [ %236, %234 ], [ %180, %184 ]
  %239 = phi i8* [ %235, %234 ], [ %182, %184 ]
  %240 = icmp eq i8* %239, %181
  br i1 %240, label %305, label %241, !prof !3

241:                                              ; preds = %237
  %242 = load i8, i8* %239, align 1
  %243 = or i8 %242, 32
  %244 = icmp eq i8 %243, 101
  br i1 %244, label %245, label %305

245:                                              ; preds = %241
  %246 = getelementptr inbounds i8, i8* %239, i64 1
  store i8* %246, i8** %2, align 8
  %247 = icmp eq i8* %246, %181
  br i1 %247, label %265, label %248, !prof !3

248:                                              ; preds = %245
  %249 = load i8, i8* %246, align 1
  switch i8 %249, label %255 [
    i8 45, label %250
    i8 43, label %250
  ]

250:                                              ; preds = %248, %248
  %251 = getelementptr inbounds i8, i8* %239, i64 2
  store i8* %251, i8** %2, align 8
  %252 = icmp eq i8* %251, %181
  br i1 %252, label %265, label %253, !prof !3

253:                                              ; preds = %250
  %254 = load i8, i8* %251, align 1
  br label %255

255:                                              ; preds = %253, %248
  %256 = phi i8* [ %246, %248 ], [ %251, %253 ]
  %257 = phi i8 [ %249, %248 ], [ %254, %253 ]
  %258 = zext i8 %257 to i32
  %259 = add nsw i32 %258, -48
  %260 = icmp ult i32 %259, 10
  br i1 %260, label %287, label %261

261:                                              ; preds = %255
  %262 = zext i8 %257 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  br label %265

265:                                              ; preds = %250, %245, %261
  %266 = phi i8 [ %264, %261 ], [ 13, %245 ], [ 13, %250 ]
  tail call void @_ZN2v88internal10JsonParserIhE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser"* %0, i8 zeroext %266) #6
  %267 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %268 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %268, i64 0, i32 31, i32 4
  %270 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %269, align 8
  %271 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %270, null
  br i1 %271, label %274, label %272

272:                                              ; preds = %265
  %273 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %270, i64 0) #6
  br label %352

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %268, i64 0, i32 31, i32 0
  %276 = load i64*, i64** %275, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %268, i64 0, i32 31, i32 1
  %278 = load i64*, i64** %277, align 8
  %279 = icmp eq i64* %276, %278
  br i1 %279, label %280, label %282

280:                                              ; preds = %274
  %281 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %268) #6
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i64* [ %281, %280 ], [ %276, %274 ]
  %284 = ptrtoint i64* %283 to i64
  %285 = add i64 %284, 8
  %286 = inttoptr i64 %285 to i64*
  store i64* %286, i64** %275, align 8
  store i64 0, i64* %283, align 8
  br label %352

287:                                              ; preds = %255
  %288 = icmp eq i8* %256, %181
  br i1 %288, label %302, label %289

289:                                              ; preds = %287
  %290 = zext i8 %257 to i32
  %291 = add nsw i32 %290, -48
  %292 = icmp ugt i32 %291, 9
  br i1 %292, label %302, label %293

293:                                              ; preds = %289, %297
  %294 = phi i8* [ %295, %297 ], [ %256, %289 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = icmp eq i8* %295, %181
  br i1 %296, label %302, label %297

297:                                              ; preds = %293
  %298 = load i8, i8* %295, align 1
  %299 = zext i8 %298 to i32
  %300 = add nsw i32 %299, -48
  %301 = icmp ugt i32 %300, 9
  br i1 %301, label %302, label %293

302:                                              ; preds = %297, %293, %289, %287
  %303 = phi i8* [ %181, %287 ], [ %256, %289 ], [ %181, %293 ], [ %295, %297 ]
  store i8* %303, i8** %2, align 8
  %304 = ptrtoint i8* %303 to i64
  br label %305

305:                                              ; preds = %179, %237, %302, %241
  %306 = phi i64 [ %238, %237 ], [ %304, %302 ], [ %238, %241 ], [ %180, %179 ]
  %307 = ptrtoint i8* %3 to i64
  %308 = sub i64 %306, %307
  %309 = tail call double @_ZN2v88internal14StringToDoubleENS0_6VectorIKhEEid(i8* %3, i64 %308, i32 0, double 0x7FF8000000000000) #6
  %310 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::FactoryBase"**
  %311 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %310, align 8
  %312 = fcmp ult double %309, 0xC1D0000000000000
  %313 = fcmp ugt double %309, 0x41CFFFFFFF800000
  %314 = or i1 %313, %312
  %315 = bitcast double %309 to i64
  %316 = icmp eq i64 %315, -9223372036854775808
  %317 = or i1 %314, %316
  br i1 %317, label %347, label %318

318:                                              ; preds = %305
  %319 = fptosi double %309 to i32
  %320 = sitofp i32 %319 to double
  %321 = fcmp oeq double %309, %320
  br i1 %321, label %322, label %347

322:                                              ; preds = %318
  %323 = sext i32 %319 to i64
  %324 = shl nsw i64 %323, 1
  %325 = bitcast %"class.v8::internal::FactoryBase"* %311 to %"class.v8::internal::Isolate"*
  %326 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %311, i64 45608
  %327 = bitcast %"class.v8::internal::FactoryBase"* %326 to %"class.v8::internal::CanonicalHandleScope"**
  %328 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %327, align 8
  %329 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %322
  %331 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %328, i64 %324) #6
  br label %352

332:                                              ; preds = %322
  %333 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %311, i64 45584
  %334 = bitcast %"class.v8::internal::FactoryBase"* %333 to i64**
  %335 = load i64*, i64** %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %311, i64 45592
  %337 = bitcast %"class.v8::internal::FactoryBase"* %336 to i64**
  %338 = load i64*, i64** %337, align 8
  %339 = icmp eq i64* %335, %338
  br i1 %339, label %340, label %342

340:                                              ; preds = %332
  %341 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %325) #6
  br label %342

342:                                              ; preds = %340, %332
  %343 = phi i64* [ %341, %340 ], [ %335, %332 ]
  %344 = ptrtoint i64* %343 to i64
  %345 = add i64 %344, 8
  %346 = inttoptr i64 %345 to i64*
  store i64* %346, i64** %334, align 8
  store i64 %324, i64* %343, align 8
  br label %352

347:                                              ; preds = %318, %305
  %348 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %311) #6
  %349 = load i64, i64* %348, align 8
  %350 = add i64 %349, 3
  %351 = inttoptr i64 %350 to double*
  store double %309, double* %351, align 1
  br label %352

352:                                              ; preds = %282, %272, %220, %210, %174, %164, %121, %111, %74, %64, %51, %41, %347, %342, %330
  %353 = phi i64* [ %348, %347 ], [ %331, %330 ], [ %343, %342 ], [ %75, %74 ], [ %65, %64 ], [ %52, %51 ], [ %42, %41 ], [ %175, %174 ], [ %165, %164 ], [ %122, %121 ], [ %112, %111 ], [ %221, %220 ], [ %211, %210 ], [ %283, %282 ], [ %273, %272 ]
  ret i64* %353
}

declare double @_ZN2v88internal14StringToDoubleENS0_6VectorIKhEEid(i8*, i64, i32, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.1150"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1150"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  br i1 %10, label %12, label %98

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %13 to i64*
  %15 = icmp ugt i64 %1, 461168601842738790
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #15
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 40
  %21 = mul i64 %1, 40
  %22 = tail call i8* @_Znwm(i64 %21) #14
  %23 = bitcast i8* %22 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  %24 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %23, i64 %20
  %25 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %24 to i64
  %26 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %23, i64 %1
  %27 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  %29 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %28, %11
  br i1 %29, label %59, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %32, i64 -1
  %35 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %34, i64 0, i32 0, i32 0
  %36 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %31, i64 -1, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %32, i64 -1, i32 0, i32 1
  %41 = bitcast i64** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i64** %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %31, i64 -1, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %32, i64 -1, i32 0, i32 2
  %46 = bitcast i64** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %44 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %35, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %31, i64 -1, i32 1
  %50 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %32, i64 -1, i32 1
  %51 = bitcast i32* %49 to i8*
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 12, i1 false) #6
  %53 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %34, %11
  br i1 %53, label %54, label %30

54:                                               ; preds = %30
  %55 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33 to i64
  %56 = load i64, i64* %6, align 8
  %57 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %13, align 8
  %58 = inttoptr i64 %56 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  br label %59

59:                                               ; preds = %17, %54
  %60 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %58, %54 ], [ %28, %17 ]
  %61 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %57, %54 ], [ %11, %17 ]
  %62 = phi i64 [ %55, %54 ], [ %25, %17 ]
  %63 = phi i64 [ %56, %54 ], [ %18, %17 ]
  store i64 %62, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %64 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %61, %60
  br i1 %64, label %94, label %65

65:                                               ; preds = %59, %92
  %66 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %67, %92 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %66, i64 -1
  %68 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %68, align 8
  %70 = icmp eq %"class.v8::internal::Isolate"* %69, null
  br i1 %70, label %92, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %66, i64 -1, i32 0, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %66, i64 -1, i32 0, i32 2
  %75 = load i64*, i64** %74, align 8
  %76 = ptrtoint i64* %73 to i64
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31
  %78 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %77, i64 0, i32 0
  %79 = bitcast %"struct.v8::internal::HandleScopeData"* %77 to i64*
  %80 = load i64*, i64** %78, align 8
  store i64 %76, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %81, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 1
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %85, %75
  br i1 %86, label %89, label %87

87:                                               ; preds = %71
  store i64* %75, i64** %84, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %69) #6
  %88 = load i64*, i64** %78, align 8
  br label %89

89:                                               ; preds = %87, %71
  %90 = phi i64* [ %88, %87 ], [ %73, %71 ]
  %91 = phi i64* [ %75, %87 ], [ %80, %71 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %90, i64* %91) #6
  br label %92

92:                                               ; preds = %89, %65
  %93 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %67, %60
  br i1 %93, label %94, label %65

94:                                               ; preds = %92, %59
  %95 = icmp eq i64 %63, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %96, %94, %2
  ret void
}

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE(%"class.v8::internal::JsonParser"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* dereferenceable(40), %"class.v8::base::SmallVector"* dereferenceable(408), i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Representation", align 1
  %9 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %10 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::FieldType", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::LookupIterator", align 8
  %15 = ptrtoint i64* %3 to i64
  %16 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 2
  %19 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 1
  %20 = bitcast %"struct.v8::internal::JsonProperty"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::base::SmallVector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 24
  %26 = trunc i64 %25 to i32
  %27 = sub i32 %26, %18
  %28 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = sub i32 %27, %29
  %31 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %32 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 0
  %34 = bitcast %"class.v8::internal::Factory"* %32 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 13840
  %36 = bitcast %"class.v8::internal::Factory"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 19
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %38, %47
  %49 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45608
  %50 = bitcast %"class.v8::internal::Factory"* %49 to %"class.v8::internal::CanonicalHandleScope"**
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %50, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %4
  %54 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %48) #6
  br label %70

55:                                               ; preds = %4
  %56 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45584
  %57 = bitcast %"class.v8::internal::Factory"* %56 to i64**
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45592
  %60 = bitcast %"class.v8::internal::Factory"* %59 to i64**
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %58, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #6
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i64* [ %64, %63 ], [ %58, %55 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %57, align 8
  store i64 %48, i64* %66, align 8
  br label %70

70:                                               ; preds = %53, %65
  %71 = phi i64* [ %54, %53 ], [ %66, %65 ]
  %72 = tail call i64* @_ZN2v88internal7Factory25ObjectLiteralMapFromCacheENS0_6HandleINS0_13NativeContextEEEi(%"class.v8::internal::Factory"* %32, i64* %71, i32 %30) #6
  %73 = ptrtoint i64* %72 to i64
  %74 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %74, i64 360
  %76 = bitcast %"class.v8::internal::Factory"* %75 to i64*
  %77 = load i32, i32* %28, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %222, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  %83 = ashr i32 %77, 1
  %84 = add nsw i32 %83, %77
  %85 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %84) #6
  %86 = icmp sgt i32 %85, 4
  %87 = select i1 %86, i32 %85, i32 4
  %88 = mul i32 %87, 9
  %89 = icmp ugt i32 %88, %82
  br i1 %89, label %124, label %90

90:                                               ; preds = %79
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %92 = load i32, i32* %28, align 8
  %93 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %91, i32 %92, i8 zeroext 0, i32 0) #6
  %94 = icmp sgt i32 %27, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %97 = zext i32 %18 to i64
  %98 = zext i32 %27 to i64
  br label %104

99:                                               ; preds = %120, %90
  %100 = phi i64* [ %93, %90 ], [ %121, %120 ]
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %102 = tail call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %101, i64* %72, i8 zeroext 12) #6
  %103 = ptrtoint i64* %102 to i64
  br label %222

104:                                              ; preds = %120, %95
  %105 = phi i64 [ 0, %95 ], [ %122, %120 ]
  %106 = phi i64* [ %93, %95 ], [ %121, %120 ]
  %107 = add nuw nsw i64 %105, %97
  %108 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %96, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 0, i32 2
  %110 = load i8, i8* %109, align 4
  %111 = and i8 %110, 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 1, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %119 = tail call i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %118, i64* %106, i32 %115, i64* %117, i64* null, i32 0) #6
  br label %120

120:                                              ; preds = %104, %113
  %121 = phi i64* [ %119, %113 ], [ %106, %104 ]
  %122 = add nuw nsw i64 %105, 1
  %123 = icmp eq i64 %122, %98
  br i1 %123, label %99, label %104

124:                                              ; preds = %79
  %125 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::FactoryBase"**
  %126 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %125, align 8
  %127 = load i32, i32* %80, align 4
  %128 = add i32 %127, 1
  %129 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %126, i32 %128, i8 zeroext 0) #6
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 262144
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %124
  %138 = and i64 %134, 24
  %139 = icmp eq i64 %138, 0
  %140 = select i1 %139, i32 4, i32 0
  br label %141

141:                                              ; preds = %124, %137
  %142 = phi i32 [ 4, %124 ], [ %140, %137 ]
  %143 = icmp sgt i32 %27, 0
  br i1 %143, label %144, label %222

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %146 = icmp eq i32 %142, 0
  %147 = zext i32 %18 to i64
  %148 = zext i32 %27 to i64
  br i1 %146, label %149, label %173

149:                                              ; preds = %144, %170
  %150 = phi i64 [ %171, %170 ], [ 0, %144 ]
  %151 = add nuw nsw i64 %150, %147
  %152 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %145, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = and i8 %154, 8
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 1, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = load i64, i64* %129, align 8
  %163 = load i64, i64* %161, align 8
  %164 = shl i32 %159, 2
  %165 = sext i32 %164 to i64
  %166 = add nsw i64 %165, 7
  %167 = add i64 %166, %162
  %168 = inttoptr i64 %167 to i32*
  %169 = trunc i64 %163 to i32
  store atomic volatile i32 %169, i32* %168 monotonic, align 4
  br label %170

170:                                              ; preds = %157, %149
  %171 = add nuw nsw i64 %150, 1
  %172 = icmp eq i64 %171, %148
  br i1 %172, label %222, label %149

173:                                              ; preds = %144, %219
  %174 = phi i64 [ %220, %219 ], [ 0, %144 ]
  %175 = add nuw nsw i64 %174, %147
  %176 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %145, align 8
  %177 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 0, i32 2
  %178 = load i8, i8* %177, align 4
  %179 = and i8 %178, 8
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %219, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 1, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = load i64, i64* %129, align 8
  %187 = load i64, i64* %185, align 8
  %188 = shl i32 %183, 2
  %189 = sext i32 %188 to i64
  %190 = add nsw i64 %189, 7
  %191 = add i64 %190, %186
  %192 = inttoptr i64 %191 to i32*
  %193 = trunc i64 %187 to i32
  store atomic volatile i32 %193, i32* %192 monotonic, align 4
  %194 = and i64 %187, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %219, label %196

196:                                              ; preds = %181
  %197 = and i64 %186, -262144
  %198 = or i64 %197, 8
  %199 = inttoptr i64 %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 262144
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %196
  %204 = or i64 %197, 16
  %205 = inttoptr i64 %204 to %"class.v8::internal::Heap"**
  %206 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %205, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %206, i64 %186, i64 %191, i64 %187) #6
  br label %207

207:                                              ; preds = %196, %203
  %208 = and i64 %187, -262144
  %209 = or i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = load i64, i64* %199, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %186, i64 %191, i64 %187) #6
  br label %219

219:                                              ; preds = %173, %181, %218, %214, %207
  %220 = add nuw nsw i64 %174, 1
  %221 = icmp eq i64 %220, %148
  br i1 %221, label %222, label %173

222:                                              ; preds = %219, %170, %141, %70, %99
  %223 = phi i64* [ %76, %70 ], [ %100, %99 ], [ %129, %141 ], [ %129, %170 ], [ %129, %219 ]
  %224 = phi i64 [ %73, %70 ], [ %103, %99 ], [ %73, %141 ], [ %73, %170 ], [ %73, %219 ]
  %225 = inttoptr i64 %224 to i64*
  %226 = icmp eq i64* %3, null
  br i1 %226, label %253, label %227

227:                                              ; preds = %222
  %228 = load i64, i64* %3, align 8
  %229 = add i64 %228, 10
  %230 = inttoptr i64 %229 to i8*
  %231 = load i8, i8* %230, align 1
  %232 = inttoptr i64 %224 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 10
  %235 = inttoptr i64 %234 to i8*
  %236 = load i8, i8* %235, align 1
  %237 = xor i8 %236, %231
  %238 = icmp ult i8 %237, 4
  br i1 %238, label %239, label %253

239:                                              ; preds = %227
  %240 = add i64 %228, 3
  %241 = inttoptr i64 %240 to i8*
  %242 = load atomic i8, i8* %241 monotonic, align 1
  %243 = add i64 %233, 3
  %244 = inttoptr i64 %243 to i8*
  %245 = load atomic i8, i8* %244 monotonic, align 1
  %246 = icmp eq i8 %242, %245
  br i1 %246, label %247, label %253

247:                                              ; preds = %239
  %248 = add i64 %228, 11
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 acquire, align 4
  %251 = lshr i32 %250, 10
  %252 = and i32 %251, 1023
  br label %253

253:                                              ; preds = %239, %227, %222, %247
  %254 = phi i32 [ %252, %247 ], [ 0, %239 ], [ 0, %227 ], [ 0, %222 ]
  %255 = icmp sgt i32 %27, 0
  br i1 %255, label %256, label %767

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %258 = bitcast %"class.v8::internal::TransitionsAccessor"* %9 to i8*
  %259 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 0
  %260 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 1, i32 0, i32 0
  %261 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 3, i32 0, i32 0
  %263 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 5
  %264 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 4
  %265 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5 to i8*
  %266 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0
  %268 = bitcast %"class.v8::internal::TransitionsAccessor"* %10 to i8*
  %269 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 0
  %270 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 1
  %271 = bitcast %"class.v8::internal::Handle.1160"* %270 to i64*
  %272 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 3, i32 0, i32 0
  %274 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 5
  %275 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 4
  %276 = bitcast %"class.v8::internal::FieldType"* %12 to i8*
  %277 = getelementptr inbounds %"class.v8::internal::FieldType", %"class.v8::internal::FieldType"* %12, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13 to i8*
  %279 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0
  %281 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11 to i8*
  %282 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0
  %284 = zext i32 %18 to i64
  %285 = zext i32 %27 to i64
  br label %286

286:                                              ; preds = %758, %256
  %287 = phi i64 [ 0, %256 ], [ %763, %758 ]
  %288 = phi i32 [ %254, %256 ], [ %762, %758 ]
  %289 = phi i32 [ 0, %256 ], [ %761, %758 ]
  %290 = phi i32 [ 0, %256 ], [ %760, %758 ]
  %291 = phi i64 [ %224, %256 ], [ %759, %758 ]
  %292 = add nuw nsw i64 %287, %284
  %293 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %257, align 8
  %294 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 0
  %295 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 0, i32 2
  %296 = load i8, i8* %295, align 4
  %297 = and i8 %296, 8
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %758

299:                                              ; preds = %286
  %300 = sext i32 %289 to i64
  %301 = icmp slt i32 %289, %288
  br i1 %301, label %302, label %341

302:                                              ; preds = %299
  %303 = load i64, i64* %3, align 8
  %304 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 0, i32 4
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %303, 23
  %308 = inttoptr i64 %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = and i64 %306, 4294967295
  %311 = icmp eq i64 %310, 0
  call void @llvm.assume(i1 %311) #6
  %312 = zext i32 %309 to i64
  %313 = or i64 %306, %312
  %314 = mul i64 %300, 51539607552
  %315 = add i64 %314, 68719476736
  %316 = ashr exact i64 %315, 32
  %317 = add nsw i64 %316, -1
  %318 = add i64 %317, %313
  %319 = inttoptr i64 %318 to i32*
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = zext i32 %320 to i64
  %322 = or i64 %306, %321
  %323 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 4
  %324 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %323, align 8
  %325 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %324, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %302
  %327 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %324, i64 %322) #6
  br label %454

328:                                              ; preds = %302
  %329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 0
  %330 = load i64*, i64** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 1
  %332 = load i64*, i64** %331, align 8
  %333 = icmp eq i64* %330, %332
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %304) #6
  br label %336

336:                                              ; preds = %334, %328
  %337 = phi i64* [ %335, %334 ], [ %330, %328 ]
  %338 = ptrtoint i64* %337 to i64
  %339 = add i64 %338, 8
  %340 = inttoptr i64 %339 to i64*
  store i64* %340, i64** %329, align 8
  store i64 %322, i64* %337, align 8
  br label %454

341:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %258) #6
  %342 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %343 = inttoptr i64 %291 to i64*
  %344 = load i64, i64* %343, align 8
  store %"class.v8::internal::Isolate"* %342, %"class.v8::internal::Isolate"** %259, align 8
  store i64* null, i64** %260, align 8
  store i64 %344, i64* %261, align 8
  store i64 0, i64* %262, align 8
  store i8 0, i8* %263, align 4
  %345 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %342, i64 0, i32 0, i32 4
  %346 = load i64, i64* %345, align 8
  %347 = add i64 %344, 35
  %348 = inttoptr i64 %347 to i32*
  %349 = load atomic i32, i32* %348 acquire, align 4
  %350 = and i64 %346, 4294967295
  %351 = icmp eq i64 %350, 0
  call void @llvm.assume(i1 %351) #6
  %352 = zext i32 %349 to i64
  %353 = or i64 %346, %352
  store i64 %353, i64* %262, align 8
  %354 = and i64 %352, 1
  %355 = icmp eq i64 %354, 0
  %356 = icmp eq i32 %349, 3
  %357 = or i1 %356, %355
  br i1 %357, label %380, label %358

358:                                              ; preds = %341
  %359 = and i64 %352, 3
  switch i64 %359, label %379 [
    i64 3, label %380
    i64 1, label %360
  ]

360:                                              ; preds = %358
  %361 = add i64 %353, -1
  %362 = inttoptr i64 %361 to i32*
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = zext i32 %363 to i64
  %365 = or i64 %346, %364
  %366 = add i64 %365, 7
  %367 = inttoptr i64 %366 to i16*
  %368 = load atomic i16, i16* %367 monotonic, align 2
  %369 = icmp eq i16 %368, 160
  br i1 %369, label %380, label %370

370:                                              ; preds = %360
  %371 = load atomic i32, i32* %362 monotonic, align 4
  %372 = zext i32 %371 to i64
  %373 = or i64 %346, %372
  %374 = add i64 %373, 7
  %375 = inttoptr i64 %374 to i16*
  %376 = load atomic i16, i16* %375 monotonic, align 2
  %377 = icmp eq i16 %376, 110
  %378 = select i1 %377, i32 0, i32 2
  br label %380

379:                                              ; preds = %358
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

380:                                              ; preds = %370, %360, %358, %341
  %381 = phi i32 [ 1, %341 ], [ 3, %358 ], [ 4, %360 ], [ %378, %370 ]
  store i32 %381, i32* %264, align 8
  %382 = call i64* @_ZN2v88internal19TransitionsAccessor21ExpectedTransitionKeyEv(%"class.v8::internal::TransitionsAccessor"* nonnull %9)
  %383 = icmp eq i64* %382, null
  br i1 %383, label %452, label %384

384:                                              ; preds = %380
  %385 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %386 = load i64, i64* %343, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 0, i32 4
  %388 = load i64, i64* %387, align 8
  %389 = add i64 %386, 35
  %390 = inttoptr i64 %389 to i32*
  %391 = load atomic i32, i32* %390 acquire, align 4
  %392 = and i64 %388, 4294967295
  %393 = icmp eq i64 %392, 0
  call void @llvm.assume(i1 %393) #6
  %394 = zext i32 %391 to i64
  %395 = or i64 %388, %394
  %396 = and i64 %394, 1
  %397 = icmp eq i64 %396, 0
  %398 = icmp eq i32 %391, 3
  %399 = or i1 %398, %397
  br i1 %399, label %421, label %400

400:                                              ; preds = %384
  %401 = and i64 %394, 3
  switch i64 %401, label %420 [
    i64 3, label %422
    i64 1, label %402
  ]

402:                                              ; preds = %400
  %403 = add i64 %395, -1
  %404 = inttoptr i64 %403 to i32*
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = zext i32 %405 to i64
  %407 = or i64 %388, %406
  %408 = add i64 %407, 7
  %409 = inttoptr i64 %408 to i16*
  %410 = load atomic i16, i16* %409 monotonic, align 2
  %411 = icmp eq i16 %410, 160
  br i1 %411, label %424, label %412

412:                                              ; preds = %402
  %413 = inttoptr i64 %403 to i32*
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = zext i32 %414 to i64
  %416 = or i64 %388, %415
  %417 = add i64 %416, 7
  %418 = inttoptr i64 %417 to i16*
  %419 = load atomic i16, i16* %418 monotonic, align 2
  br label %421

420:                                              ; preds = %400
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

421:                                              ; preds = %384, %412
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

422:                                              ; preds = %400
  %423 = and i64 %395, -3
  br label %431

424:                                              ; preds = %402
  %425 = add i64 %395, 19
  %426 = inttoptr i64 %425 to i32*
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, -3
  %429 = zext i32 %428 to i64
  %430 = or i64 %388, %429
  br label %431

431:                                              ; preds = %424, %422
  %432 = phi i64 [ %430, %424 ], [ %423, %422 ]
  %433 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 4
  %434 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %433, align 8
  %435 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %434, null
  br i1 %435, label %439, label %436

436:                                              ; preds = %431
  %437 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %434, i64 %432) #6
  %438 = ptrtoint i64* %437 to i64
  br label %452

439:                                              ; preds = %431
  %440 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 0
  %441 = load i64*, i64** %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 1
  %443 = load i64*, i64** %442, align 8
  %444 = icmp eq i64* %441, %443
  br i1 %444, label %445, label %447

445:                                              ; preds = %439
  %446 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %385) #6
  br label %447

447:                                              ; preds = %445, %439
  %448 = phi i64* [ %446, %445 ], [ %441, %439 ]
  %449 = ptrtoint i64* %448 to i64
  %450 = add i64 %449, 8
  %451 = inttoptr i64 %450 to i64*
  store i64* %451, i64** %440, align 8
  store i64 %432, i64* %448, align 8
  br label %452

452:                                              ; preds = %447, %436, %380
  %453 = phi i64 [ 0, %380 ], [ %438, %436 ], [ %449, %447 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %258) #6
  br label %454

454:                                              ; preds = %336, %326, %452
  %455 = phi i64 [ %453, %452 ], [ 0, %326 ], [ 0, %336 ]
  %456 = phi i64* [ %382, %452 ], [ %327, %326 ], [ %337, %336 ]
  %457 = call i64* @_ZN2v88internal10JsonParserIhE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %294, i64* %456)
  %458 = icmp eq i64* %457, %456
  br i1 %458, label %469, label %459

459:                                              ; preds = %454
  %460 = icmp eq i64* %457, null
  %461 = icmp eq i64* %456, null
  %462 = or i1 %461, %460
  br i1 %462, label %471, label %463

463:                                              ; preds = %459
  %464 = load i64, i64* %457, align 8
  %465 = load i64, i64* %456, align 8
  %466 = trunc i64 %464 to i32
  %467 = trunc i64 %465 to i32
  %468 = icmp eq i32 %466, %467
  br i1 %468, label %469, label %471

469:                                              ; preds = %454, %463
  %470 = select i1 %301, i64 %15, i64 %455
  br label %554

471:                                              ; preds = %459, %463
  br i1 %301, label %472, label %504

472:                                              ; preds = %471
  %473 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %474 = inttoptr i64 %291 to i64*
  %475 = icmp eq i32 %289, 0
  br i1 %475, label %501, label %476

476:                                              ; preds = %472
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #6
  %477 = load i64, i64* %3, align 8
  store i64 %477, i64* %266, align 8
  %478 = add nsw i32 %289, -1
  %479 = sext i32 %478 to i64
  %480 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %267, %"class.v8::internal::Isolate"* %473, i64 %479) #6
  %481 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 4
  %482 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %481, align 8
  %483 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %482, null
  br i1 %483, label %486, label %484

484:                                              ; preds = %476
  %485 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %482, i64 %480) #6
  br label %499

486:                                              ; preds = %476
  %487 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 0
  %488 = load i64*, i64** %487, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 1
  %490 = load i64*, i64** %489, align 8
  %491 = icmp eq i64* %488, %490
  br i1 %491, label %492, label %494

492:                                              ; preds = %486
  %493 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %473) #6
  br label %494

494:                                              ; preds = %492, %486
  %495 = phi i64* [ %493, %492 ], [ %488, %486 ]
  %496 = ptrtoint i64* %495 to i64
  %497 = add i64 %496, 8
  %498 = inttoptr i64 %497 to i64*
  store i64* %498, i64** %487, align 8
  store i64 %480, i64* %495, align 8
  br label %499

499:                                              ; preds = %494, %484
  %500 = phi i64* [ %485, %484 ], [ %495, %494 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #6
  br label %501

501:                                              ; preds = %472, %499
  %502 = phi i64* [ %500, %499 ], [ %474, %472 ]
  %503 = ptrtoint i64* %502 to i64
  br label %504

504:                                              ; preds = %501, %471
  %505 = phi i64 [ %503, %501 ], [ %291, %471 ]
  %506 = phi i32 [ 0, %501 ], [ %288, %471 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %268) #6
  %507 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %508 = inttoptr i64 %505 to i64*
  store %"class.v8::internal::Isolate"* %507, %"class.v8::internal::Isolate"** %269, align 8
  store i64 %505, i64* %271, align 8
  %509 = load i64, i64* %508, align 8
  store i64 %509, i64* %272, align 8
  store i64 0, i64* %273, align 8
  store i8 0, i8* %274, align 4
  %510 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %507, i64 0, i32 0, i32 4
  %511 = load i64, i64* %510, align 8
  %512 = add i64 %509, 35
  %513 = inttoptr i64 %512 to i32*
  %514 = load atomic i32, i32* %513 acquire, align 4
  %515 = and i64 %511, 4294967295
  %516 = icmp eq i64 %515, 0
  call void @llvm.assume(i1 %516) #6
  %517 = zext i32 %514 to i64
  %518 = or i64 %511, %517
  store i64 %518, i64* %273, align 8
  %519 = and i64 %517, 1
  %520 = icmp eq i64 %519, 0
  %521 = icmp eq i32 %514, 3
  %522 = or i1 %521, %520
  br i1 %522, label %545, label %523

523:                                              ; preds = %504
  %524 = and i64 %517, 3
  switch i64 %524, label %544 [
    i64 3, label %545
    i64 1, label %525
  ]

525:                                              ; preds = %523
  %526 = add i64 %518, -1
  %527 = inttoptr i64 %526 to i32*
  %528 = load atomic i32, i32* %527 monotonic, align 4
  %529 = zext i32 %528 to i64
  %530 = or i64 %511, %529
  %531 = add i64 %530, 7
  %532 = inttoptr i64 %531 to i16*
  %533 = load atomic i16, i16* %532 monotonic, align 2
  %534 = icmp eq i16 %533, 160
  br i1 %534, label %545, label %535

535:                                              ; preds = %525
  %536 = load atomic i32, i32* %527 monotonic, align 4
  %537 = zext i32 %536 to i64
  %538 = or i64 %511, %537
  %539 = add i64 %538, 7
  %540 = inttoptr i64 %539 to i16*
  %541 = load atomic i16, i16* %540 monotonic, align 2
  %542 = icmp eq i16 %541, 110
  %543 = select i1 %542, i32 0, i32 2
  br label %545

544:                                              ; preds = %523
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

545:                                              ; preds = %535, %525, %523, %504
  %546 = phi i32 [ 1, %504 ], [ 3, %523 ], [ 4, %525 ], [ %543, %535 ]
  store i32 %546, i32* %275, align 8
  %547 = call i64* @_ZN2v88internal19TransitionsAccessor28FindTransitionToDataPropertyENS0_6HandleINS0_4NameEEENS1_17RequestedLocationE(%"class.v8::internal::TransitionsAccessor"* nonnull %10, i64* %457, i32 1) #6
  %548 = icmp eq i64* %547, null
  br i1 %548, label %551, label %549

549:                                              ; preds = %545
  %550 = ptrtoint i64* %547 to i64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #6
  br label %554

551:                                              ; preds = %545
  %552 = inttoptr i64 %505 to i64*
  %553 = trunc i64 %287 to i32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #6
  br label %767

554:                                              ; preds = %469, %549
  %555 = phi i64 [ %550, %549 ], [ %470, %469 ]
  %556 = phi i64 [ %505, %549 ], [ %291, %469 ]
  %557 = phi i32 [ %506, %549 ], [ %288, %469 ]
  %558 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 1, i32 0, i32 0
  %559 = load i64*, i64** %558, align 8
  %560 = inttoptr i64 %555 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 0, i32 4
  %564 = load i64, i64* %563, align 8
  %565 = add i64 %561, 23
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = and i64 %564, 4294967295
  %569 = icmp eq i64 %568, 0
  call void @llvm.assume(i1 %569) #6
  %570 = zext i32 %567 to i64
  %571 = or i64 %564, %570
  %572 = mul i64 %300, 51539607552
  %573 = add i64 %572, 68719476736
  %574 = ashr exact i64 %573, 32
  %575 = or i64 %574, 3
  %576 = add i64 %571, %575
  %577 = inttoptr i64 %576 to i32*
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = ashr i32 %578, 1
  %580 = lshr i32 %579, 6
  %581 = trunc i32 %580 to i8
  %582 = and i8 %581, 7
  %583 = load i64, i64* %559, align 8
  %584 = load i8, i8* @_ZN2v88internal17FLAG_track_fieldsE, align 1, !range !4
  %585 = icmp eq i8 %584, 0
  %586 = xor i1 %585, true
  %587 = icmp eq i8 %582, 1
  %588 = and i1 %587, %586
  br i1 %588, label %589, label %592

589:                                              ; preds = %554
  %590 = and i64 %583, 1
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %728, label %623

592:                                              ; preds = %554
  %593 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !4
  %594 = icmp ne i8 %593, 0
  %595 = icmp eq i8 %582, 2
  %596 = and i1 %595, %594
  br i1 %596, label %597, label %600

597:                                              ; preds = %592
  %598 = and i64 %583, 1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %728, label %612

600:                                              ; preds = %592
  %601 = load i8, i8* @_ZN2v88internal29FLAG_track_heap_object_fieldsE, align 1, !range !4
  %602 = icmp ne i8 %601, 0
  %603 = icmp eq i8 %582, 3
  %604 = and i1 %603, %602
  br i1 %604, label %605, label %609

605:                                              ; preds = %600
  %606 = and i64 %583, 1
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %623, label %608

608:                                              ; preds = %605
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br label %730

609:                                              ; preds = %600
  %610 = icmp ne i8 %582, 0
  %611 = or i1 %585, %610
  br i1 %611, label %729, label %623

612:                                              ; preds = %597
  %613 = and i64 %583, -4294967296
  %614 = add i64 %583, -1
  %615 = inttoptr i64 %614 to i32*
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = zext i32 %616 to i64
  %618 = or i64 %613, %617
  %619 = add i64 %618, 7
  %620 = inttoptr i64 %619 to i16*
  %621 = load atomic i16, i16* %620 monotonic, align 2
  %622 = icmp eq i16 %621, 66
  br i1 %622, label %728, label %623

623:                                              ; preds = %605, %589, %609, %612
  br i1 %585, label %671, label %624

624:                                              ; preds = %623
  %625 = and i64 %583, 1
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %671, label %627

627:                                              ; preds = %624
  %628 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !4
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %640, label %630

630:                                              ; preds = %627
  %631 = add i64 %583, -1
  %632 = inttoptr i64 %631 to i32*
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = zext i32 %633 to i64
  %635 = or i64 %564, %634
  %636 = add i64 %635, 7
  %637 = inttoptr i64 %636 to i16*
  %638 = load atomic i16, i16* %637 monotonic, align 2
  %639 = icmp eq i16 %638, 66
  br i1 %639, label %671, label %640

640:                                              ; preds = %630, %627
  %641 = load i8, i8* @_ZN2v88internal26FLAG_track_computed_fieldsE, align 1, !range !4
  %642 = icmp eq i8 %641, 0
  br i1 %642, label %667, label %643

643:                                              ; preds = %640
  %644 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %645 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %644, null
  br i1 %645, label %652, label %646

646:                                              ; preds = %643
  %647 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %644, i64 0, i32 0, i32 1
  %648 = load i8, i8* %647, align 8, !range !4
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %652, label %650

650:                                              ; preds = %646
  %651 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %644, i64 0, i32 1, i64 0
  br label %660

652:                                              ; preds = %646, %643
  %653 = and i64 %583, -262144
  %654 = or i64 %653, 16
  %655 = inttoptr i64 %654 to i64*
  %656 = load i64, i64* %655, align 16
  %657 = add i64 %656, -41416
  %658 = inttoptr i64 %657 to %"class.v8::internal::Isolate"*
  %659 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %658, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %660

660:                                              ; preds = %652, %650
  %661 = phi i64* [ %659, %652 ], [ %651, %650 ]
  %662 = getelementptr inbounds i64, i64* %661, i64 3
  %663 = load i64, i64* %662, align 8
  %664 = trunc i64 %583 to i32
  %665 = trunc i64 %663 to i32
  %666 = icmp eq i32 %664, %665
  br i1 %666, label %671, label %667

667:                                              ; preds = %660, %640
  %668 = load i8, i8* @_ZN2v88internal29FLAG_track_heap_object_fieldsE, align 1, !range !4
  %669 = icmp eq i8 %668, 0
  br i1 %669, label %671, label %670

670:                                              ; preds = %667
  switch i8 %582, label %679 [
    i8 0, label %722
    i8 3, label %722
  ]

671:                                              ; preds = %667, %623, %624, %630, %660
  %672 = phi i8 [ 0, %660 ], [ 2, %630 ], [ 1, %624 ], [ 4, %623 ], [ 4, %667 ]
  %673 = icmp ult i8 %672, %582
  br i1 %673, label %674, label %682

674:                                              ; preds = %671
  %675 = icmp eq i8 %582, 3
  br i1 %675, label %676, label %679

676:                                              ; preds = %674
  %677 = icmp eq i8 %672, 0
  %678 = select i1 %677, i8 3, i8 4
  br label %722

679:                                              ; preds = %670, %674
  %680 = phi i8 [ %672, %674 ], [ 3, %670 ]
  %681 = icmp slt i8 %680, %582
  br i1 %681, label %722, label %684

682:                                              ; preds = %671
  %683 = icmp eq i8 %582, %672
  br i1 %683, label %722, label %684

684:                                              ; preds = %679, %682
  %685 = phi i8 [ %672, %682 ], [ 4, %679 ]
  %686 = icmp eq i8 %582, 0
  br i1 %686, label %687, label %689

687:                                              ; preds = %684
  %688 = icmp eq i8 %685, 2
  br i1 %688, label %691, label %722

689:                                              ; preds = %684
  %690 = icmp eq i8 %685, 4
  br i1 %690, label %722, label %691

691:                                              ; preds = %687, %689
  %692 = trunc i64 %287 to i32
  %693 = inttoptr i64 %556 to i64*
  %694 = icmp eq i32 %289, 0
  br i1 %694, label %767, label %695

695:                                              ; preds = %691
  %696 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #6
  %697 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %561, i64* %697, align 8
  %698 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0
  %699 = add nsw i32 %289, -1
  %700 = sext i32 %699 to i64
  %701 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %698, %"class.v8::internal::Isolate"* %562, i64 %700) #6
  %702 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 4
  %703 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %702, align 8
  %704 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %703, null
  br i1 %704, label %707, label %705

705:                                              ; preds = %695
  %706 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %703, i64 %701) #6
  br label %720

707:                                              ; preds = %695
  %708 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 0
  %709 = load i64*, i64** %708, align 8
  %710 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 1
  %711 = load i64*, i64** %710, align 8
  %712 = icmp eq i64* %709, %711
  br i1 %712, label %713, label %715

713:                                              ; preds = %707
  %714 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %562) #6
  br label %715

715:                                              ; preds = %713, %707
  %716 = phi i64* [ %714, %713 ], [ %709, %707 ]
  %717 = ptrtoint i64* %716 to i64
  %718 = add i64 %717, 8
  %719 = inttoptr i64 %718 to i64*
  store i64* %719, i64** %708, align 8
  store i64 %701, i64* %716, align 8
  br label %720

720:                                              ; preds = %715, %705
  %721 = phi i64* [ %706, %705 ], [ %716, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #6
  br label %767

722:                                              ; preds = %676, %670, %670, %687, %689, %682, %679
  %723 = phi i8 [ 4, %689 ], [ %685, %687 ], [ %582, %682 ], [ %582, %679 ], [ 3, %670 ], [ 3, %670 ], [ %678, %676 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #6
  store i64 %583, i64* %282, align 8
  %724 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %283, %"class.v8::internal::Isolate"* %562, i8 %723) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #6
  %725 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %726 = lshr i32 %579, 2
  %727 = and i32 %726, 1
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %725, i64* %560, i64 %300, i32 %727, i8 %723, i64* %724) #6
  br label %755

728:                                              ; preds = %589, %612, %597
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br label %747

729:                                              ; preds = %609
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br i1 %603, label %730, label %747

730:                                              ; preds = %608, %729
  %731 = add nsw i64 %574, 7
  %732 = add i64 %731, %571
  %733 = inttoptr i64 %732 to i32*
  %734 = load atomic i32, i32* %733 monotonic, align 4
  %735 = zext i32 %734 to i64
  %736 = or i64 %564, %735
  %737 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %736) #6
  store i64 %737, i64* %277, align 8
  %738 = load i64, i64* %559, align 8
  %739 = call zeroext i1 @_ZNK2v88internal9FieldType11NowContainsENS0_6ObjectE(%"class.v8::internal::FieldType"* nonnull %12, i64 %738) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #6
  br i1 %739, label %755, label %740

740:                                              ; preds = %730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #6
  %741 = load i64, i64* %559, align 8
  store i64 %741, i64* %279, align 8
  %742 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %743 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %280, %"class.v8::internal::Isolate"* %742, i8 %582) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #6
  %744 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %745 = lshr i32 %579, 2
  %746 = and i32 %745, 1
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %744, i64* %560, i64 %300, i32 %746, i8 %582, i64* %743) #6
  br label %755

747:                                              ; preds = %729, %728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #6
  %748 = icmp eq i8 %582, 2
  br i1 %748, label %749, label %755

749:                                              ; preds = %747
  %750 = load i64, i64* %559, align 8
  %751 = trunc i64 %750 to i32
  %752 = and i32 %751, 1
  %753 = xor i32 %752, 1
  %754 = add nsw i32 %753, %290
  br label %755

755:                                              ; preds = %730, %747, %722, %749, %740
  %756 = phi i32 [ %290, %740 ], [ %754, %749 ], [ %290, %722 ], [ %290, %747 ], [ %290, %730 ]
  %757 = add nsw i32 %289, 1
  br label %758

758:                                              ; preds = %286, %755
  %759 = phi i64 [ %291, %286 ], [ %555, %755 ]
  %760 = phi i32 [ %290, %286 ], [ %756, %755 ]
  %761 = phi i32 [ %289, %286 ], [ %757, %755 ]
  %762 = phi i32 [ %288, %286 ], [ %557, %755 ]
  %763 = add nuw nsw i64 %287, 1
  %764 = icmp eq i64 %763, %285
  br i1 %764, label %765, label %286

765:                                              ; preds = %758
  %766 = inttoptr i64 %759 to i64*
  br label %767

767:                                              ; preds = %691, %720, %765, %253, %551
  %768 = phi i32 [ %290, %551 ], [ 0, %253 ], [ %760, %765 ], [ %290, %720 ], [ %290, %691 ]
  %769 = phi i32 [ %289, %551 ], [ 0, %253 ], [ %761, %765 ], [ %289, %720 ], [ 0, %691 ]
  %770 = phi i32 [ %553, %551 ], [ 0, %253 ], [ %27, %765 ], [ %692, %720 ], [ %692, %691 ]
  %771 = phi i64* [ %552, %551 ], [ %225, %253 ], [ %766, %765 ], [ %721, %720 ], [ %693, %691 ]
  %772 = phi i32 [ %506, %551 ], [ %254, %253 ], [ %762, %765 ], [ %557, %720 ], [ %557, %691 ]
  %773 = icmp eq i32 %770, %27
  %774 = icmp slt i32 %769, %772
  %775 = and i1 %773, %774
  br i1 %775, label %776, label %807

776:                                              ; preds = %767
  %777 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %778 = icmp eq i32 %769, 0
  br i1 %778, label %807, label %779

779:                                              ; preds = %776
  %780 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %780) #6
  %781 = load i64, i64* %771, align 8
  %782 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %781, i64* %782, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7, i64 0, i32 0
  %784 = add nsw i32 %769, -1
  %785 = sext i32 %784 to i64
  %786 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %783, %"class.v8::internal::Isolate"* %777, i64 %785) #6
  %787 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 4
  %788 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %787, align 8
  %789 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %788, null
  br i1 %789, label %792, label %790

790:                                              ; preds = %779
  %791 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %788, i64 %786) #6
  br label %805

792:                                              ; preds = %779
  %793 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 0
  %794 = load i64*, i64** %793, align 8
  %795 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 1
  %796 = load i64*, i64** %795, align 8
  %797 = icmp eq i64* %794, %796
  br i1 %797, label %798, label %800

798:                                              ; preds = %792
  %799 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %777) #6
  br label %800

800:                                              ; preds = %798, %792
  %801 = phi i64* [ %799, %798 ], [ %794, %792 ]
  %802 = ptrtoint i64* %801 to i64
  %803 = add i64 %802, 8
  %804 = inttoptr i64 %803 to i64*
  store i64* %804, i64** %793, align 8
  store i64 %786, i64* %801, align 8
  br label %805

805:                                              ; preds = %800, %790
  %806 = phi i64* [ %791, %790 ], [ %801, %800 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %780) #6
  br label %807

807:                                              ; preds = %805, %776, %767
  %808 = phi i64* [ %771, %767 ], [ %806, %805 ], [ %771, %776 ]
  %809 = icmp sgt i32 %768, 0
  br i1 %809, label %810, label %815

810:                                              ; preds = %807
  %811 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::FactoryBase"**
  %812 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %811, align 8
  %813 = shl nsw i32 %768, 4
  %814 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %812, i32 %813, i8 zeroext 0) #6
  br label %815

815:                                              ; preds = %810, %807
  %816 = phi i64* [ %814, %810 ], [ null, %807 ]
  %817 = load i64, i64* %72, align 8
  %818 = add i64 %817, 11
  %819 = inttoptr i64 %818 to i32*
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2097152
  %822 = icmp eq i32 %821, 0
  %823 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  br i1 %822, label %826, label %824

824:                                              ; preds = %815
  %825 = call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %823, i64* %808, i32 2, i8 zeroext 0, i64* null) #6
  br label %828

826:                                              ; preds = %815
  %827 = call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %823, i64* %808, i8 zeroext 0, i64* null) #6
  br label %828

828:                                              ; preds = %826, %824
  %829 = phi i64* [ %825, %824 ], [ %827, %826 ]
  %830 = load i64, i64* %829, align 8
  %831 = load i64, i64* %223, align 8
  %832 = add i64 %830, 7
  %833 = inttoptr i64 %832 to i32*
  %834 = trunc i64 %831 to i32
  store atomic volatile i32 %834, i32* %833 monotonic, align 4
  %835 = and i64 %831, 1
  %836 = icmp eq i64 %835, 0
  br i1 %836, label %848, label %837

837:                                              ; preds = %828
  %838 = and i64 %830, -262144
  %839 = or i64 %838, 8
  %840 = inttoptr i64 %839 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = and i64 %841, 262144
  %843 = icmp eq i64 %842, 0
  br i1 %843, label %848, label %844

844:                                              ; preds = %837
  %845 = or i64 %838, 16
  %846 = inttoptr i64 %845 to %"class.v8::internal::Heap"**
  %847 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %846, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %847, i64 %830, i64 %832, i64 %831) #6
  br label %848

848:                                              ; preds = %844, %837, %828
  %849 = and i64 %831, -262144
  %850 = or i64 %849, 8
  %851 = inttoptr i64 %850 to i64*
  %852 = load i64, i64* %851, align 8
  %853 = and i64 %852, 24
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %863, label %855

855:                                              ; preds = %848
  %856 = and i64 %830, -262144
  %857 = or i64 %856, 8
  %858 = inttoptr i64 %857 to i64*
  %859 = load i64, i64* %858, align 8
  %860 = and i64 %859, 24
  %861 = icmp eq i64 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %855
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %830, i64 %832, i64 %831) #6
  br label %863

863:                                              ; preds = %848, %855, %862
  %864 = load i64, i64* %829, align 8
  %865 = and i64 %864, -262144
  %866 = or i64 %865, 8
  %867 = inttoptr i64 %866 to i64*
  %868 = load i64, i64* %867, align 8
  %869 = and i64 %868, 262144
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %875

871:                                              ; preds = %863
  %872 = and i64 %868, 24
  %873 = icmp eq i64 %872, 0
  %874 = select i1 %873, i32 4, i32 0
  br label %875

875:                                              ; preds = %863, %871
  %876 = phi i32 [ 4, %863 ], [ %874, %871 ]
  %877 = icmp eq i64* %816, null
  br i1 %877, label %881, label %878

878:                                              ; preds = %875
  %879 = load i64, i64* %816, align 8
  %880 = add i64 %879, 7
  br label %881

881:                                              ; preds = %875, %878
  %882 = phi i64 [ %880, %878 ], [ 0, %875 ]
  %883 = and i64 %882, 7
  %884 = icmp eq i64 %883, 0
  %885 = icmp eq i32 %770, 0
  br i1 %885, label %896, label %886

886:                                              ; preds = %881
  %887 = add i64 %882, 4
  %888 = select i1 %884, i64 %887, i64 %882
  %889 = add i64 %882, 12
  %890 = select i1 %884, i64 %882, i64 %889
  %891 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %892 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %8, i64 0, i32 0
  %893 = icmp eq i32 %876, 0
  %894 = zext i32 %18 to i64
  %895 = zext i32 %770 to i64
  br label %897

896:                                              ; preds = %1082, %881
  br i1 %877, label %1092, label %1088

897:                                              ; preds = %1082, %886
  %898 = phi i64 [ 0, %886 ], [ %1086, %1082 ]
  %899 = phi i32 [ 0, %886 ], [ %1085, %1082 ]
  %900 = phi i64 [ %888, %886 ], [ %1084, %1082 ]
  %901 = phi i64 [ %890, %886 ], [ %1083, %1082 ]
  %902 = add nuw nsw i64 %898, %894
  %903 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %891, align 8
  %904 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %903, i64 %902, i32 0, i32 2
  %905 = load i8, i8* %904, align 4
  %906 = and i8 %905, 8
  %907 = icmp eq i8 %906, 0
  br i1 %907, label %908, label %1082

908:                                              ; preds = %897
  %909 = sext i32 %899 to i64
  %910 = load i64, i64* %808, align 8
  %911 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %912 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 4
  %913 = load i64, i64* %912, align 8
  %914 = add i64 %910, 23
  %915 = inttoptr i64 %914 to i32*
  %916 = load i32, i32* %915, align 4
  %917 = and i64 %913, 4294967295
  %918 = icmp eq i64 %917, 0
  call void @llvm.assume(i1 %918) #6
  %919 = zext i32 %916 to i64
  %920 = or i64 %913, %919
  %921 = mul i64 %909, 51539607552
  %922 = add i64 %921, 68719476736
  %923 = ashr exact i64 %922, 32
  %924 = or i64 %923, 3
  %925 = add i64 %920, %924
  %926 = inttoptr i64 %925 to i32*
  %927 = load atomic i32, i32* %926 monotonic, align 4
  %928 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %903, i64 %902, i32 1, i32 0, i32 0
  %929 = load i64*, i64** %928, align 8
  %930 = load i64, i64* %929, align 8
  %931 = and i64 %910, -4294967296
  %932 = load atomic i32, i32* %915 monotonic, align 4
  %933 = zext i32 %932 to i64
  %934 = or i64 %931, %933
  %935 = add i64 %934, %924
  %936 = inttoptr i64 %935 to i32*
  %937 = load atomic i32, i32* %936 monotonic, align 4
  %938 = ashr i32 %937, 1
  %939 = lshr i32 %938, 19
  %940 = and i32 %939, 1023
  %941 = lshr i32 %938, 6
  %942 = trunc i32 %941 to i8
  %943 = and i8 %942, 7
  %944 = add i64 %910, 3
  %945 = inttoptr i64 %944 to i8*
  %946 = load atomic i8, i8* %945 monotonic, align 1
  %947 = zext i8 %946 to i32
  %948 = add i64 %910, 4
  %949 = inttoptr i64 %948 to i8*
  %950 = load atomic i8, i8* %949 monotonic, align 1
  %951 = zext i8 %950 to i32
  %952 = sub nsw i32 %947, %951
  %953 = icmp slt i32 %940, %952
  br i1 %953, label %954, label %960

954:                                              ; preds = %908
  %955 = load atomic i8, i8* %949 monotonic, align 1
  %956 = load atomic i8, i8* %949 monotonic, align 1
  %957 = zext i8 %956 to i32
  %958 = add nuw nsw i32 %940, %957
  %959 = shl nuw nsw i32 %958, 2
  br label %964

960:                                              ; preds = %908
  %961 = sub nsw i32 %940, %952
  %962 = shl nsw i32 %961, 2
  %963 = add nsw i32 %962, 8
  br label %964

964:                                              ; preds = %960, %954
  %965 = phi i32 [ %959, %954 ], [ %963, %960 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %892) #6
  store i8 %943, i8* %892, align 1
  %966 = icmp ult i8 %943, 5
  br i1 %966, label %969, label %967

967:                                              ; preds = %964
  %968 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %8) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %968) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

969:                                              ; preds = %964
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %892) #6
  %970 = add nsw i32 %899, 1
  %971 = and i32 %927, 896
  %972 = icmp eq i32 %971, 256
  br i1 %972, label %973, label %1045

973:                                              ; preds = %969
  %974 = and i64 %930, 1
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %1024

976:                                              ; preds = %973
  %977 = add i64 %901, 1
  %978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 7, i32 0, i64 1
  %979 = load i64, i64* %978, align 8
  %980 = inttoptr i64 %901 to i32*
  %981 = trunc i64 %979 to i32
  store atomic volatile i32 %981, i32* %980 monotonic, align 4
  %982 = and i64 %979, 1
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %995, label %984

984:                                              ; preds = %976
  %985 = and i64 %977, -262144
  %986 = or i64 %985, 8
  %987 = inttoptr i64 %986 to i64*
  %988 = load i64, i64* %987, align 8
  %989 = and i64 %988, 262144
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %995, label %991

991:                                              ; preds = %984
  %992 = or i64 %985, 16
  %993 = inttoptr i64 %992 to %"class.v8::internal::Heap"**
  %994 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %993, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %994, i64 %977, i64 0, i64 %979) #6
  br label %995

995:                                              ; preds = %976, %984, %991
  %996 = add i64 %901, 16
  %997 = trunc i64 %930 to i32
  %998 = ashr i32 %997, 1
  %999 = sitofp i32 %998 to double
  %1000 = add i64 %900, 1
  %1001 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %1002 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1001, i64 320
  %1003 = bitcast %"class.v8::internal::Factory"* %1002 to i64*
  %1004 = load i64, i64* %1003, align 8
  %1005 = inttoptr i64 %900 to i32*
  %1006 = trunc i64 %1004 to i32
  store atomic volatile i32 %1006, i32* %1005 monotonic, align 4
  %1007 = and i64 %1004, 1
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1020, label %1009

1009:                                             ; preds = %995
  %1010 = and i64 %1000, -262144
  %1011 = or i64 %1010, 8
  %1012 = inttoptr i64 %1011 to i64*
  %1013 = load i64, i64* %1012, align 8
  %1014 = and i64 %1013, 262144
  %1015 = icmp eq i64 %1014, 0
  br i1 %1015, label %1020, label %1016

1016:                                             ; preds = %1009
  %1017 = or i64 %1010, 16
  %1018 = inttoptr i64 %1017 to %"class.v8::internal::Heap"**
  %1019 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1018, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1019, i64 %1000, i64 0, i64 %1004) #6
  br label %1020

1020:                                             ; preds = %995, %1009, %1016
  %1021 = add i64 %900, 4
  %1022 = inttoptr i64 %1021 to double*
  store double %999, double* %1022, align 1
  %1023 = add i64 %900, 16
  br label %1045

1024:                                             ; preds = %973
  %1025 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 7, i32 0, i64 24
  %1026 = load i64, i64* %1025, align 8
  %1027 = add i64 %930, -1
  %1028 = inttoptr i64 %1027 to i32*
  %1029 = trunc i64 %1026 to i32
  store atomic volatile i32 %1029, i32* %1028 release, align 4
  %1030 = icmp eq i32 %1029, 0
  %1031 = and i64 %1026, 1
  %1032 = icmp eq i64 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %1045, label %1034

1034:                                             ; preds = %1024
  %1035 = and i64 %930, -262144
  %1036 = or i64 %1035, 8
  %1037 = inttoptr i64 %1036 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = and i64 %1038, 262144
  %1040 = icmp eq i64 %1039, 0
  br i1 %1040, label %1045, label %1041

1041:                                             ; preds = %1034
  %1042 = or i64 %1035, 16
  %1043 = inttoptr i64 %1042 to %"class.v8::internal::Heap"**
  %1044 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1043, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1044, i64 %930, i64 0, i64 %1026) #6
  br label %1045

1045:                                             ; preds = %1041, %1034, %1024, %1020, %969
  %1046 = phi i64 [ %1000, %1020 ], [ %930, %969 ], [ %930, %1024 ], [ %930, %1034 ], [ %930, %1041 ]
  %1047 = phi i64 [ %996, %1020 ], [ %901, %969 ], [ %901, %1024 ], [ %901, %1034 ], [ %901, %1041 ]
  %1048 = phi i64 [ %1023, %1020 ], [ %900, %969 ], [ %900, %1024 ], [ %900, %1034 ], [ %900, %1041 ]
  %1049 = load i64, i64* %829, align 8
  %1050 = and i32 %965, 8191
  %1051 = zext i32 %1050 to i64
  %1052 = add nsw i64 %1051, -1
  %1053 = add i64 %1052, %1049
  %1054 = inttoptr i64 %1053 to i32*
  %1055 = trunc i64 %1046 to i32
  store atomic volatile i32 %1055, i32* %1054 monotonic, align 4
  %1056 = and i64 %1046, 1
  %1057 = icmp eq i64 %1056, 0
  %1058 = or i1 %893, %1057
  br i1 %1058, label %1082, label %1059

1059:                                             ; preds = %1045
  %1060 = and i64 %1049, -262144
  %1061 = or i64 %1060, 8
  %1062 = inttoptr i64 %1061 to i64*
  %1063 = load i64, i64* %1062, align 8
  %1064 = and i64 %1063, 262144
  %1065 = icmp eq i64 %1064, 0
  br i1 %1065, label %1070, label %1066

1066:                                             ; preds = %1059
  %1067 = or i64 %1060, 16
  %1068 = inttoptr i64 %1067 to %"class.v8::internal::Heap"**
  %1069 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1068, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1069, i64 %1049, i64 %1053, i64 %1046) #6
  br label %1070

1070:                                             ; preds = %1059, %1066
  %1071 = and i64 %1046, -262144
  %1072 = or i64 %1071, 8
  %1073 = inttoptr i64 %1072 to i64*
  %1074 = load i64, i64* %1073, align 8
  %1075 = and i64 %1074, 24
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1082, label %1077

1077:                                             ; preds = %1070
  %1078 = load i64, i64* %1062, align 8
  %1079 = and i64 %1078, 24
  %1080 = icmp eq i64 %1079, 0
  br i1 %1080, label %1081, label %1082

1081:                                             ; preds = %1077
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1049, i64 %1053, i64 %1046) #6
  br label %1082

1082:                                             ; preds = %897, %1045, %1081, %1077, %1070
  %1083 = phi i64 [ %901, %897 ], [ %1047, %1045 ], [ %1047, %1070 ], [ %1047, %1077 ], [ %1047, %1081 ]
  %1084 = phi i64 [ %900, %897 ], [ %1048, %1045 ], [ %1048, %1070 ], [ %1048, %1077 ], [ %1048, %1081 ]
  %1085 = phi i32 [ %899, %897 ], [ %970, %1045 ], [ %970, %1070 ], [ %970, %1077 ], [ %970, %1081 ]
  %1086 = add nuw nsw i64 %898, 1
  %1087 = icmp eq i64 %1086, %895
  br i1 %1087, label %896, label %897

1088:                                             ; preds = %896
  %1089 = load i64, i64* %816, align 8
  %1090 = add i64 %1089, 3
  %1091 = inttoptr i64 %1090 to i32*
  store atomic volatile i32 0, i32* %1091 monotonic, align 4
  br label %1092

1092:                                             ; preds = %1088, %896
  %1093 = icmp slt i32 %770, %27
  br i1 %1093, label %1094, label %1203

1094:                                             ; preds = %1092
  %1095 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %1096 = bitcast %"class.v8::internal::LookupIterator"* %14 to i8*
  %1097 = ptrtoint i64* %829 to i64
  %1098 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 0
  %1099 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 1
  %1100 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 2
  %1101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 3
  %1102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 4, i32 0
  %1103 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 5
  %1104 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 6, i32 0, i32 0
  %1105 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 7, i32 0, i32 0
  %1106 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 8, i32 0, i32 0
  %1107 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 9, i32 0, i32 0
  %1108 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 10
  %1109 = bitcast %"class.v8::internal::Handle.1129"* %1108 to i64*
  %1110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 11
  %1111 = bitcast i64* %1110 to i8*
  %1112 = zext i32 %770 to i64
  %1113 = zext i32 %18 to i64
  %1114 = zext i32 %27 to i64
  br label %1115

1115:                                             ; preds = %1200, %1094
  %1116 = phi i64 [ %1112, %1094 ], [ %1201, %1200 ]
  %1117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %1118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31
  %1119 = bitcast %"struct.v8::internal::HandleScopeData"* %1118 to i64*
  %1120 = load i64, i64* %1119, align 8
  %1121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31, i32 1
  %1122 = load i64*, i64** %1121, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31, i32 2
  %1124 = load i32, i32* %1123, align 8
  %1125 = add nsw i32 %1124, 1
  store i32 %1125, i32* %1123, align 8
  %1126 = add nuw i64 %1116, %1113
  %1127 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %1095, align 8
  %1128 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 0, i32 2
  %1129 = load i8, i8* %1128, align 4
  %1130 = and i8 %1129, 8
  %1131 = icmp eq i8 %1130, 0
  br i1 %1131, label %1132, label %1185

1132:                                             ; preds = %1115
  %1133 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 0
  %1134 = call i64* @_ZN2v88internal10JsonParserIhE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1133, i64* null)
  %1135 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 1, i32 0, i32 0
  %1136 = load i64*, i64** %1135, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1096) #6
  %1137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %1138 = icmp eq i64* %1134, null
  br i1 %1138, label %1160, label %1139

1139:                                             ; preds = %1132
  %1140 = load i64, i64* %1134, align 8
  %1141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1137, i64 0, i32 0, i32 4
  %1142 = load i64, i64* %1141, align 8
  %1143 = add i64 %1140, -1
  %1144 = inttoptr i64 %1143 to i32*
  %1145 = load atomic i32, i32* %1144 monotonic, align 4
  %1146 = and i64 %1142, 4294967295
  %1147 = icmp eq i64 %1146, 0
  call void @llvm.assume(i1 %1147) #6
  %1148 = zext i32 %1145 to i64
  %1149 = or i64 %1142, %1148
  %1150 = add i64 %1149, 7
  %1151 = inttoptr i64 %1150 to i16*
  %1152 = load atomic i16, i16* %1151 monotonic, align 2
  %1153 = icmp eq i16 %1152, 64
  br i1 %1153, label %1154, label %1160

1154:                                             ; preds = %1139
  %1155 = add i64 %1140, 7
  %1156 = inttoptr i64 %1155 to i32*
  %1157 = load i32, i32* %1156, align 4
  %1158 = and i32 %1157, 1
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1160, label %1161

1160:                                             ; preds = %1154, %1139, %1132
  br label %1161

1161:                                             ; preds = %1160, %1154
  %1162 = phi i32 [ 1, %1160 ], [ 0, %1154 ]
  store i32 %1162, i32* %1098, align 8
  store i32 4, i32* %1099, align 4
  store i8 0, i8* %1100, align 8
  store i32 0, i32* %1101, align 4
  store i32 0, i32* %1102, align 8
  store %"class.v8::internal::Isolate"* %1137, %"class.v8::internal::Isolate"** %1103, align 8
  store i64* %1134, i64** %1104, align 8
  store i64* null, i64** %1105, align 8
  store i64* %829, i64** %1106, align 8
  store i64* null, i64** %1107, align 8
  store i64 %1097, i64* %1109, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1111, i8 -1, i64 16, i1 false) #6
  %1163 = load i64, i64* %1134, align 8
  %1164 = and i64 %1163, -4294967296
  %1165 = add i64 %1163, -1
  %1166 = inttoptr i64 %1165 to i32*
  %1167 = load atomic i32, i32* %1166 monotonic, align 4
  %1168 = zext i32 %1167 to i64
  %1169 = or i64 %1164, %1168
  %1170 = add i64 %1169, 7
  %1171 = inttoptr i64 %1170 to i16*
  %1172 = load atomic i16, i16* %1171 monotonic, align 2
  %1173 = and i16 %1172, -32
  %1174 = icmp eq i16 %1173, 32
  br i1 %1174, label %1175, label %1179

1175:                                             ; preds = %1161
  %1176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1137, i64 0, i32 5, i32 0, i32 0, i32 0
  %1177 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1176, align 8
  %1178 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1177, %"class.v8::internal::Isolate"* %1137, i64* %1134) #6
  br label %1179

1179:                                             ; preds = %1161, %1175
  %1180 = phi i64* [ %1178, %1175 ], [ %1134, %1161 ]
  store i64* %1180, i64** %1104, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %14) #6
  %1181 = call i64* @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %14, i64* %1136, i32 0, i32 1) #6
  %1182 = icmp eq i64* %1181, null
  br i1 %1182, label %1183, label %1184, !prof !3

1183:                                             ; preds = %1179
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

1184:                                             ; preds = %1179
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1096) #6
  br label %1185

1185:                                             ; preds = %1115, %1184
  %1186 = icmp eq %"class.v8::internal::Isolate"* %1117, null
  br i1 %1186, label %1200, label %1187

1187:                                             ; preds = %1185
  %1188 = inttoptr i64 %1120 to i64*
  %1189 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1118, i64 0, i32 0
  %1190 = load i64*, i64** %1189, align 8
  store i64 %1120, i64* %1119, align 8
  %1191 = load i32, i32* %1123, align 8
  %1192 = add nsw i32 %1191, -1
  store i32 %1192, i32* %1123, align 8
  %1193 = load i64*, i64** %1121, align 8
  %1194 = icmp eq i64* %1193, %1122
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1187
  store i64* %1122, i64** %1121, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1117) #6
  %1196 = load i64*, i64** %1189, align 8
  br label %1197

1197:                                             ; preds = %1195, %1187
  %1198 = phi i64* [ %1196, %1195 ], [ %1188, %1187 ]
  %1199 = phi i64* [ %1122, %1195 ], [ %1190, %1187 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1198, i64* %1199) #6
  br label %1200

1200:                                             ; preds = %1185, %1197
  %1201 = add nuw nsw i64 %1116, 1
  %1202 = icmp eq i64 %1201, %1114
  br i1 %1202, label %1203, label %1115

1203:                                             ; preds = %1200, %1092
  ret i64* %829
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE(%"class.v8::internal::JsonParser"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* dereferenceable(40), %"class.v8::base::SmallVector.1157"* dereferenceable(152)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 2
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 1
  %9 = bitcast %"class.v8::internal::Handle.1129"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::base::SmallVector.1157"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = sub i32 %15, %6
  %17 = icmp ugt i64 %14, %7
  %18 = inttoptr i64 %12 to %"class.v8::internal::Handle.1129"*
  br i1 %17, label %19, label %87

19:                                               ; preds = %3, %38
  %20 = phi i8 [ %39, %38 ], [ 0, %3 ]
  %21 = phi i64 [ %40, %38 ], [ %7, %3 ]
  %22 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %18, i64 %21, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %19
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp eq i16 %36, 66
  br i1 %37, label %38, label %87

38:                                               ; preds = %19, %27
  %39 = phi i8 [ %20, %19 ], [ 4, %27 ]
  %40 = add i64 %21, 1
  %41 = icmp eq i64 %40, %14
  br i1 %41, label %42, label %19

42:                                               ; preds = %38
  %43 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %44 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %43, align 8
  %45 = tail call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %44, i8 zeroext %39, i32 %16, i32 %16, i32 0, i8 zeroext 0) #6
  %46 = icmp eq i8 %39, 4
  br i1 %46, label %47, label %92

47:                                               ; preds = %42
  %48 = load i64, i64* %45, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = icmp sgt i32 %16, 0
  br i1 %55, label %56, label %212

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 0
  %58 = zext i32 %16 to i64
  br label %59

59:                                               ; preds = %76, %56
  %60 = phi i64 [ 0, %56 ], [ %85, %76 ]
  %61 = add nuw nsw i64 %60, %7
  %62 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %57, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %62, i64 %61, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = trunc i64 %65 to i32
  %70 = ashr i32 %69, 1
  %71 = sitofp i32 %70 to double
  br label %76

72:                                               ; preds = %59
  %73 = add i64 %65, 3
  %74 = inttoptr i64 %73 to double*
  %75 = load double, double* %74, align 1
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi double [ %71, %68 ], [ %75, %72 ]
  %78 = shl i64 %60, 3
  %79 = fcmp uno double %77, 0.000000e+00
  %80 = and i64 %78, 4294967288
  %81 = or i64 %80, 7
  %82 = add i64 %54, %81
  %83 = inttoptr i64 %82 to double*
  %84 = select i1 %79, double 0x7FF8000000000000, double %77
  store double %84, double* %83, align 1
  %85 = add nuw nsw i64 %60, 1
  %86 = icmp eq i64 %85, %58
  br i1 %86, label %212, label %59

87:                                               ; preds = %27, %3
  %88 = phi i8 [ 0, %3 ], [ 2, %27 ]
  %89 = bitcast %"class.v8::internal::JsonParser"* %0 to %"class.v8::internal::Factory"**
  %90 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %89, align 8
  %91 = tail call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %90, i8 zeroext %88, i32 %16, i32 %16, i32 0, i8 zeroext 0) #6
  br label %92

92:                                               ; preds = %87, %42
  %93 = phi i64* [ %45, %42 ], [ %91, %87 ]
  %94 = phi i8 [ %39, %42 ], [ %88, %87 ]
  %95 = load i64, i64* %93, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, 7
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = icmp eq i8 %94, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %92
  %104 = and i64 %101, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 262144
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %103
  %111 = and i64 %107, 24
  %112 = icmp eq i64 %111, 0
  %113 = select i1 %112, i32 4, i32 0
  br label %114

114:                                              ; preds = %110, %103, %92
  %115 = phi i32 [ 0, %92 ], [ 4, %103 ], [ %113, %110 ]
  %116 = icmp sgt i32 %16, 0
  br i1 %116, label %117, label %212

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 0
  %119 = add i64 %101, 7
  %120 = icmp eq i32 %115, 0
  %121 = and i64 %101, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = or i64 %121, 16
  %125 = inttoptr i64 %124 to %"class.v8::internal::Heap"**
  %126 = zext i32 %16 to i64
  br i1 %120, label %127, label %161

127:                                              ; preds = %117
  %128 = and i64 %126, 1
  %129 = icmp eq i32 %16, 1
  br i1 %129, label %197, label %130

130:                                              ; preds = %127
  %131 = sub nsw i64 %126, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %158, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %159, %132 ]
  %135 = add nuw nsw i64 %133, %7
  %136 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %136, i64 %135, i32 0, i32 0
  %138 = load i64*, i64** %137, align 8
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %133 to i32
  %141 = shl i32 %140, 2
  %142 = sext i32 %141 to i64
  %143 = add i64 %119, %142
  %144 = inttoptr i64 %143 to i32*
  %145 = trunc i64 %139 to i32
  store atomic volatile i32 %145, i32* %144 monotonic, align 4
  %146 = or i64 %133, 1
  %147 = add nuw nsw i64 %146, %7
  %148 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %148, i64 %147, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = load i64, i64* %150, align 8
  %152 = trunc i64 %146 to i32
  %153 = shl i32 %152, 2
  %154 = sext i32 %153 to i64
  %155 = add i64 %119, %154
  %156 = inttoptr i64 %155 to i32*
  %157 = trunc i64 %151 to i32
  store atomic volatile i32 %157, i32* %156 monotonic, align 4
  %158 = add nuw nsw i64 %133, 2
  %159 = add i64 %134, -2
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %197, label %132

161:                                              ; preds = %117, %194
  %162 = phi i64 [ %195, %194 ], [ 0, %117 ]
  %163 = add nuw nsw i64 %162, %7
  %164 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %164, i64 %163, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %162 to i32
  %169 = shl i32 %168, 2
  %170 = sext i32 %169 to i64
  %171 = add i64 %119, %170
  %172 = inttoptr i64 %171 to i32*
  %173 = trunc i64 %167 to i32
  store atomic volatile i32 %173, i32* %172 monotonic, align 4
  %174 = and i64 %167, 1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %194, label %176

176:                                              ; preds = %161
  %177 = load i64, i64* %123, align 8
  %178 = and i64 %177, 262144
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %125, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %181, i64 %101, i64 %171, i64 %167) #6
  br label %182

182:                                              ; preds = %176, %180
  %183 = and i64 %167, -262144
  %184 = or i64 %183, 8
  %185 = inttoptr i64 %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, 24
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %182
  %190 = load i64, i64* %123, align 8
  %191 = and i64 %190, 24
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %101, i64 %171, i64 %167) #6
  br label %194

194:                                              ; preds = %161, %182, %189, %193
  %195 = add nuw nsw i64 %162, 1
  %196 = icmp eq i64 %195, %126
  br i1 %196, label %212, label %161

197:                                              ; preds = %132, %127
  %198 = phi i64 [ 0, %127 ], [ %158, %132 ]
  %199 = icmp eq i64 %128, 0
  br i1 %199, label %212, label %200

200:                                              ; preds = %197
  %201 = add nuw nsw i64 %198, %7
  %202 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %202, i64 %201, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = load i64, i64* %204, align 8
  %206 = trunc i64 %198 to i32
  %207 = shl i32 %206, 2
  %208 = sext i32 %207 to i64
  %209 = add i64 %119, %208
  %210 = inttoptr i64 %209 to i32*
  %211 = trunc i64 %205 to i32
  store atomic volatile i32 %211, i32* %210 monotonic, align 4
  br label %212

212:                                              ; preds = %194, %200, %197, %76, %47, %114
  %213 = phi i64* [ %93, %114 ], [ %45, %47 ], [ %45, %76 ], [ %93, %197 ], [ %93, %200 ], [ %93, %194 ]
  ret i64* %213
}

declare i64* @_ZN2v88internal7Factory25ObjectLiteralMapFromCacheENS0_6HandleINS0_13NativeContextEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal19TransitionsAccessor21ExpectedTransitionKeyEv(%"class.v8::internal::TransitionsAccessor"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %83 [
    i32 0, label %84
    i32 1, label %84
    i32 2, label %84
    i32 4, label %84
    i32 3, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -3
  %8 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %7, 23
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %11, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #6
  %17 = zext i32 %14 to i64
  %18 = or i64 %11, %17
  %19 = add i64 %7, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = lshr i32 %21, 10
  %23 = and i32 %22, 1023
  %24 = add nsw i32 %23, -1
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %25, 51539607552
  %27 = add nsw i64 %26, 68719476736
  %28 = ashr exact i64 %27, 32
  %29 = or i64 %28, 3
  %30 = add i64 %29, %18
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 116
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %84

35:                                               ; preds = %4
  %36 = load atomic i32, i32* %20 acquire, align 4
  %37 = lshr i32 %36, 10
  %38 = and i32 %37, 1023
  %39 = add nsw i32 %38, -1
  %40 = sext i32 %39 to i64
  %41 = and i64 %6, -4294967296
  %42 = load i32, i32* %13, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %41, %43
  %45 = mul nsw i64 %40, 51539607552
  %46 = add nsw i64 %45, 68719476736
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %44, -1
  %49 = add i64 %48, %47
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %41, %52
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %41, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = icmp ult i16 %61, 64
  br i1 %62, label %63, label %84

63:                                               ; preds = %35
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %53) #6
  br label %84

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #6
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %53, i64* %79, align 8
  br label %84

83:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

84:                                               ; preds = %4, %78, %68, %35, %1, %1, %1, %1
  %85 = phi i64* [ null, %1 ], [ null, %1 ], [ null, %1 ], [ null, %1 ], [ null, %4 ], [ null, %35 ], [ %69, %68 ], [ %79, %78 ]
  ret i64* %85
}

declare i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*, i8) local_unnamed_addr #3

declare void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i8, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"*, i64*, i32, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"*, i16 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"*, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal7Isolate32NeedsSourcePositionsForProfilingEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal5Debug14OnCompileErrorENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"*, i64*, i32, i32) unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserIhE18object_constructorEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserIhE14UpdatePointersEv(%"class.v8::internal::JsonParser"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i8*
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, %6
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 7
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i8* %8 to i64
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 8
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %14
  store i8* %6, i8** %7, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 %15
  store i8* %20, i8** %11, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 %19
  store i8* %21, i8** %16, align 8
  br label %22

22:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE5ParseEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS5_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JsonParser.1175", align 8
  %5 = bitcast %"class.v8::internal::JsonParser.1175"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #6
  call void @_ZN2v88internal10JsonParserItEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %1)
  %6 = call i64* @_ZN2v88internal10JsonParserItE14ParseJsonValueEv(%"class.v8::internal::JsonParser.1175"* nonnull %4) #6
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %4, i64 0, i32 2
  store i8 13, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %4, i64 0, i32 7
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %4, i64 0, i32 8
  %11 = load i16*, i16** %10, align 8
  %12 = icmp eq i16* %9, %11
  br i1 %12, label %25, label %13

13:                                               ; preds = %3, %22
  %14 = phi i16* [ %23, %22 ], [ %9, %3 ]
  %15 = load i16, i16* %14, align 2
  %16 = icmp ult i16 %15, 256
  br i1 %16, label %17, label %28, !prof !2

17:                                               ; preds = %13
  %18 = zext i16 %15 to i64
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 9
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = getelementptr inbounds i16, i16* %14, i64 1
  %24 = icmp eq i16* %23, %11
  br i1 %24, label %25, label %13

25:                                               ; preds = %22, %3
  %26 = phi i16* [ %9, %3 ], [ %11, %22 ]
  %27 = getelementptr inbounds i16, i16* %26, i64 1
  store i16* %27, i16** %8, align 8
  br label %30

28:                                               ; preds = %17, %13
  %29 = phi i8 [ 12, %13 ], [ %20, %17 ]
  store i8 %29, i8* %7, align 8
  store i16* %14, i16** %8, align 8
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* nonnull %4, i8 zeroext %29) #6
  br label %30

30:                                               ; preds = %25, %28
  %31 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %4, i64 0, i32 0
  %32 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 5
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = trunc i64 %34 to i32
  %39 = icmp eq i32 %37, %38
  %40 = select i1 %39, i64* %6, i64* null
  %41 = icmp eq i64* %40, null
  %42 = ptrtoint i64* %40 to i64
  %43 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %4, i64 0, i32 6, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = and i16 %54, 7
  %56 = icmp eq i16 %55, 2
  br i1 %56, label %60, label %57

57:                                               ; preds = %30
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 2
  call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %59, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserItE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* nonnull %5) #6
  br label %60

60:                                               ; preds = %30, %57
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #6
  br i1 %41, label %80, label %61

61:                                               ; preds = %60
  %62 = load i64, i64* %2, align 8
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %61
  %66 = and i64 %62, -4294967296
  %67 = add i64 %62, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = add i64 %71, 9
  %73 = inttoptr i64 %72 to i8*
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = and i8 %74, 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %65
  %78 = call i64* @_ZN2v88internal21JsonParseInternalizer11InternalizeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %40, i64* %2)
  %79 = ptrtoint i64* %78 to i64
  br label %80

80:                                               ; preds = %65, %60, %61, %77
  %81 = phi i64 [ %79, %77 ], [ 0, %60 ], [ %42, %65 ], [ %42, %61 ]
  %82 = inttoptr i64 %81 to i64*
  ret i64* %82
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE9ParseJsonEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i64* @_ZN2v88internal10JsonParserItE14ParseJsonValueEv(%"class.v8::internal::JsonParser.1175"* %0)
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %5, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi i16* [ %19, %18 ], [ %5, %1 ]
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 256
  br i1 %12, label %13, label %24, !prof !2

13:                                               ; preds = %9
  %14 = zext i16 %11 to i64
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 9
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds i16, i16* %10, i64 1
  %20 = icmp eq i16* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = phi i16* [ %5, %1 ], [ %7, %18 ]
  %23 = getelementptr inbounds i16, i16* %22, i64 1
  store i16* %23, i16** %4, align 8
  br label %26

24:                                               ; preds = %13, %9
  %25 = phi i8 [ 12, %9 ], [ %16, %13 ]
  store i8 %25, i8* %3, align 8
  store i16* %10, i16** %4, align 8
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %25)
  br label %26

26:                                               ; preds = %21, %24
  %27 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 5
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = trunc i64 %30 to i32
  %35 = icmp eq i32 %33, %34
  %36 = select i1 %35, i64* %2, i64* null
  ret i64* %36
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE16JsonContinuationC2EPNS0_7IsolateENS3_4TypeEm(%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"class.v8::internal::Isolate"*, i8 zeroext, i64) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserItE16JsonContinuationC5EPNS0_7IsolateENS3_4TypeEm) align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31
  %6 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %6, align 8
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 0, i32 2
  %15 = bitcast i64** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 1
  %20 = and i8 %2, 3
  %21 = zext i8 %20 to i32
  %22 = trunc i64 %3 to i32
  %23 = shl i32 %22, 2
  %24 = or i32 %23, %21
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 2
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZNK2v88internal10JsonParserItE16JsonContinuation4typeEv(%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = trunc i32 %3 to i8
  %5 = and i8 %4, 3
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE16JsonContinuation8set_typeENS3_4TypeE(%"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i8 %1, 3
  %6 = zext i8 %5 to i32
  %7 = and i32 %4, -4
  %8 = or i32 %7, %6
  store i32 %8, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItEC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserItEC5EPNS0_7IsolateENS0_6HandleINS0_6StringEEE) align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 134
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 1
  store i64 %11, i64* %6, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 19
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %14, %23
  %25 = add i64 %24, 571
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %14, %28
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %3
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %29) #6
  br label %48

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #6
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %29, i64* %44, align 8
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i64* [ %34, %33 ], [ %44, %43 ]
  %50 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %49, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 5
  %52 = bitcast %"class.v8::internal::Handle.1128"* %51 to i64*
  store i64 %4, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = load i64, i64* %2, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = and i64 %54, -4294967296
  %60 = add i64 %54, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp ult i16 %67, 64
  br i1 %68, label %69, label %132

69:                                               ; preds = %48
  %70 = load atomic i32, i32* %61 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %59, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = and i16 %75, 7
  %77 = icmp eq i16 %76, 3
  br i1 %77, label %78, label %132

78:                                               ; preds = %69
  %79 = add i64 %54, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = ashr i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = add i64 %54, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %59, %87
  %89 = add i64 %88, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %59, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = icmp ult i16 %96, 64
  br i1 %97, label %98, label %113

98:                                               ; preds = %78
  %99 = load atomic i32, i32* %90 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %59, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = and i16 %104, 7
  %106 = icmp eq i16 %105, 5
  br i1 %106, label %107, label %113

107:                                              ; preds = %98
  %108 = add i64 %88, 11
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %59, %111
  br label %113

113:                                              ; preds = %78, %107, %98
  %114 = phi i64 [ %112, %107 ], [ %88, %98 ], [ %88, %78 ]
  %115 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %116 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %115, i64 %114) #6
  br label %134

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %123 = load i64*, i64** %122, align 8
  %124 = icmp eq i64* %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #6
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi i64* [ %126, %125 ], [ %121, %119 ]
  %129 = ptrtoint i64* %128 to i64
  %130 = add i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  store i64* %131, i64** %120, align 8
  store i64 %114, i64* %128, align 8
  br label %134

132:                                              ; preds = %48, %69
  %133 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %1, i64* %2, i8 zeroext 0)
  br label %134

134:                                              ; preds = %127, %117, %132
  %135 = phi i64* [ %133, %132 ], [ %118, %117 ], [ %128, %127 ]
  %136 = phi i64 [ 0, %132 ], [ %83, %117 ], [ %83, %127 ]
  store i64* %135, i64** %53, align 8
  %137 = load i64, i64* %135, align 8
  %138 = and i64 %137, -4294967296
  %139 = add i64 %137, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 acquire, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = and i16 %146, 7
  %148 = icmp eq i16 %147, 2
  br i1 %148, label %149, label %184

149:                                              ; preds = %134
  %150 = load i64*, i64** %53, align 8
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, -4294967296
  %153 = add i64 %151, -1
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %152, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = and i16 %160, 16
  %162 = icmp eq i16 %161, 0
  %163 = add i64 %151, 11
  %164 = inttoptr i64 %163 to %"class.v8::String::ExternalStringResource"**
  br i1 %162, label %177, label %165

165:                                              ; preds = %149
  %166 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %164, align 1
  %167 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %166, i64 0, i32 0
  %168 = bitcast %"class.v8::String::ExternalStringResource"* %166 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %169 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %169, i64 2
  %171 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.v8::String::ExternalStringResourceBase"* %167) #6
  br i1 %172, label %173, label %177

173:                                              ; preds = %165
  %174 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %164, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %174) #6
  %175 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %174, i64 0, i32 1
  %176 = load i16*, i16** %175, align 8
  br label %191

177:                                              ; preds = %149, %165
  %178 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %164, align 1
  %179 = bitcast %"class.v8::String::ExternalStringResource"* %178 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %180 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %179, align 8
  %181 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %180, i64 6
  %182 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %181, align 8
  %183 = tail call i16* %182(%"class.v8::String::ExternalStringResource"* %178) #6
  br label %191

184:                                              ; preds = %134
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %186 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to i8*
  tail call void @_ZN2v88internal4Heap21AddGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES4_S6_(%"class.v8::internal::Heap"* %185, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserItE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i32 15, i8* %186) #6
  %187 = load i64*, i64** %53, align 8
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 11
  %190 = inttoptr i64 %189 to i16*
  br label %191

191:                                              ; preds = %177, %173, %184
  %192 = phi i16* [ %190, %184 ], [ %176, %173 ], [ %183, %177 ]
  %193 = phi i8 [ 1, %184 ], [ 0, %173 ], [ 0, %177 ]
  %194 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  store i16* %192, i16** %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 3
  store i8 %193, i8* %195, align 1
  %196 = getelementptr inbounds i16, i16* %192, i64 %136
  %197 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  store i16* %196, i16** %197, align 8
  %198 = getelementptr inbounds i16, i16* %196, i64 %58
  %199 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  store i16* %198, i16** %199, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv(%"class.v8::Isolate"*, i32, i32, i8*) #0 comdat align 2 {
  %5 = getelementptr inbounds i8, i8* %3, i64 40
  %6 = bitcast i8* %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i16*
  %11 = getelementptr inbounds i8, i8* %3, i64 64
  %12 = bitcast i8* %11 to i16**
  %13 = load i16*, i16** %12, align 8
  %14 = icmp eq i16* %13, %10
  br i1 %14, label %31, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds i8, i8* %3, i64 48
  %17 = bitcast i8* %16 to i16**
  %18 = bitcast i8* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint i16* %13 to i64
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 1
  %23 = getelementptr inbounds i8, i8* %3, i64 56
  %24 = bitcast i8* %23 to i16**
  %25 = bitcast i8* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %20
  %28 = ashr exact i64 %27, 1
  store i16* %10, i16** %12, align 8
  %29 = getelementptr inbounds i16, i16* %10, i64 %22
  store i16* %29, i16** %17, align 8
  %30 = getelementptr inbounds i16, i16* %10, i64 %28
  store i16* %30, i16** %24, align 8
  br label %31

31:                                               ; preds = %4, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItED2Ev(%"class.v8::internal::JsonParser.1175"*) unnamed_addr #0 comdat($_ZN2v88internal10JsonParserItED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = and i16 %13, 7
  %15 = icmp eq i16 %14, 2
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to i8*
  tail call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %19, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal10JsonParserItE22UpdatePointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* %20) #6
  br label %21

21:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Isolate"* @_ZN2v88internal10JsonParserItE7isolateEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  ret %"class.v8::internal::Isolate"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE14ParseJsonValueEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.1182", align 8
  %3 = alloca %"class.v8::base::SmallVector", align 8
  %4 = alloca %"class.v8::base::SmallVector.1157", align 8
  %5 = alloca %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", align 8
  %6 = alloca %"class.v8::internal::JsonString", align 8
  %7 = bitcast %"class.std::__1::vector.1182"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = bitcast %"class.v8::base::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 3
  %10 = bitcast %"class.v8::base::SmallVector"* %3 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %9, %"struct.std::__1::aligned_storage<384, 8>::type"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 1
  %12 = bitcast %"struct.v8::internal::JsonProperty"** %11 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %9, %"struct.std::__1::aligned_storage<384, 8>::type"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.std::__1::aligned_storage<384, 8>::type", %"struct.std::__1::aligned_storage<384, 8>::type"* %9, i64 1
  %15 = bitcast %"struct.v8::internal::JsonProperty"** %13 to %"struct.std::__1::aligned_storage<384, 8>::type"**
  store %"struct.std::__1::aligned_storage<384, 8>::type"* %14, %"struct.std::__1::aligned_storage<384, 8>::type"** %15, align 8
  %16 = bitcast %"class.v8::base::SmallVector.1157"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 3
  %18 = bitcast %"class.v8::base::SmallVector.1157"* %4 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %17, %"struct.std::__1::aligned_storage<128, 8>::type"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Handle.1129"** %19 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %17, %"struct.std::__1::aligned_storage<128, 8>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.std::__1::aligned_storage<128, 8>::type", %"struct.std::__1::aligned_storage<128, 8>::type"* %17, i64 1
  %23 = bitcast %"class.v8::internal::Handle.1129"** %21 to %"struct.std::__1::aligned_storage<128, 8>::type"**
  store %"struct.std::__1::aligned_storage<128, 8>::type"* %22, %"struct.std::__1::aligned_storage<128, 8>::type"** %23, align 8
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.1182"* nonnull %2, i64 16)
  %24 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #6
  %25 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31
  %28 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* %26, %"class.v8::internal::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 0, i32 1
  %30 = bitcast i64** %29 to i64*
  %31 = bitcast %"struct.v8::internal::HandleScopeData"* %27 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 0, i32 2
  %34 = bitcast i64** %33 to i64*
  %35 = bitcast i64** %29 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 31, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 1
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 2
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5, i64 0, i32 3
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %44 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %45 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %2, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %5 to i64*
  %48 = bitcast i32* %39 to i8*
  %49 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45 to i64*
  %50 = bitcast %"class.v8::internal::Handle.1129"** %19 to i64*
  %51 = bitcast %"class.v8::base::SmallVector.1157"* %4 to i64*
  %52 = bitcast %"struct.v8::internal::JsonProperty"** %11 to i64*
  %53 = bitcast %"class.v8::base::SmallVector"* %3 to i64*
  %54 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %55 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 4, i32 0, i32 0
  %56 = bitcast %"class.v8::internal::JsonString"* %6 to i8*
  %57 = bitcast %"class.v8::internal::JsonString"* %6 to i64*
  %58 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %6, i64 0, i32 2
  %59 = bitcast i8* %58 to i32*
  %60 = bitcast %"class.v8::internal::Handle.1129"** %21 to i64*
  %61 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %4, i64 0, i32 0
  %62 = bitcast %"class.std::__1::vector.1182"* %2 to i64*
  %63 = bitcast %"struct.v8::internal::JsonProperty"** %13 to i64*
  %64 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 0
  store i8 13, i8* %42, align 8
  %65 = load i16*, i16** %43, align 8
  %66 = load i16*, i16** %44, align 8
  %67 = icmp eq i16* %65, %66
  br i1 %67, label %91, label %68

68:                                               ; preds = %1
  %69 = bitcast i64** %29 to <2 x i64>*
  %70 = bitcast i64** %29 to <2 x i64>*
  br label %71

71:                                               ; preds = %68, %1149
  %72 = phi i16* [ %1151, %1149 ], [ %66, %68 ]
  %73 = phi i16* [ %1150, %1149 ], [ %65, %68 ]
  %74 = phi i64 [ %556, %1149 ], [ 0, %68 ]
  br label %75

75:                                               ; preds = %71, %256
  %76 = phi i16* [ %72, %71 ], [ %258, %256 ]
  %77 = phi i16* [ %73, %71 ], [ %257, %256 ]
  br label %78

78:                                               ; preds = %75, %88
  %79 = phi i16* [ %89, %88 ], [ %77, %75 ]
  %80 = load i16, i16* %79, align 2
  %81 = icmp ult i16 %80, 256
  br i1 %81, label %83, label %82, !prof !2

82:                                               ; preds = %78
  store i8 12, i8* %42, align 8
  store i16* %79, i16** %43, align 8
  br label %472

83:                                               ; preds = %78
  %84 = zext i16 %80 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 9
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds i16, i16* %79, i64 1
  %90 = icmp eq i16* %89, %76
  br i1 %90, label %91, label %78

91:                                               ; preds = %1149, %256, %88, %1
  %92 = phi i16* [ %66, %1 ], [ %76, %88 ], [ %258, %256 ], [ %1151, %1149 ]
  %93 = phi i16* [ %65, %1 ], [ %76, %88 ], [ %257, %256 ], [ %1150, %1149 ]
  store i16* %93, i16** %43, align 8
  br label %472

94:                                               ; preds = %83
  store i8 %86, i8* %42, align 8
  store i16* %79, i16** %43, align 8
  switch i8 %86, label %470 [
    i8 1, label %95
    i8 0, label %102
    i8 2, label %105
    i8 4, label %260
    i8 6, label %344
    i8 7, label %386
    i8 8, label %428
    i8 10, label %472
    i8 11, label %472
    i8 12, label %472
    i8 3, label %472
    i8 5, label %472
    i8 13, label %472
  ]

95:                                               ; preds = %94
  %96 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %96, i16** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %56) #6
  %97 = call { i64, i32 } @_ZN2v88internal10JsonParserItE14ScanJsonStringEb(%"class.v8::internal::JsonParser.1175"* %0, i1 zeroext false)
  %98 = extractvalue { i64, i32 } %97, 0
  %99 = extractvalue { i64, i32 } %97, 1
  store i64 %98, i64* %57, align 8
  store i32 %99, i32* %59, align 8
  %100 = call i64* @_ZN2v88internal10JsonParserItE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"* %0, %"class.v8::internal::JsonString"* nonnull dereferenceable(12) %6, i64* null)
  %101 = ptrtoint i64* %100 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %56) #6
  br label %470

102:                                              ; preds = %94
  %103 = call i64* @_ZN2v88internal10JsonParserItE15ParseJsonNumberEv(%"class.v8::internal::JsonParser.1175"* %0)
  %104 = ptrtoint i64* %103 to i64
  br label %470

105:                                              ; preds = %94
  %106 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %106, i16** %43, align 8
  store i8 13, i8* %42, align 8
  %107 = icmp eq i16* %106, %76
  br i1 %107, label %130, label %108

108:                                              ; preds = %105, %118
  %109 = phi i16* [ %119, %118 ], [ %106, %105 ]
  %110 = load i16, i16* %109, align 2
  %111 = icmp ult i16 %110, 256
  br i1 %111, label %113, label %112, !prof !2

112:                                              ; preds = %108
  store i8 12, i8* %42, align 8
  br label %130

113:                                              ; preds = %108
  %114 = zext i16 %110 to i64
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 9
  br i1 %117, label %118, label %121

118:                                              ; preds = %113
  %119 = getelementptr inbounds i16, i16* %109, i64 1
  %120 = icmp eq i16* %119, %76
  br i1 %120, label %130, label %108

121:                                              ; preds = %113
  store i8 %116, i8* %42, align 8
  %122 = icmp eq i16 %110, 125
  %123 = getelementptr inbounds i16, i16* %109, i64 1
  %124 = select i1 %122, i16* %123, i16* %109
  store i16* %124, i16** %43, align 8
  br i1 %122, label %125, label %132

125:                                              ; preds = %121
  %126 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %127 = load i64*, i64** %55, align 8
  %128 = call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %126, i64* %127, i8 zeroext 0) #6
  %129 = ptrtoint i64* %128 to i64
  br label %470

130:                                              ; preds = %118, %105, %112
  %131 = phi i16* [ %109, %112 ], [ %76, %105 ], [ %76, %118 ]
  store i16* %131, i16** %43, align 8
  br label %132

132:                                              ; preds = %130, %121
  %133 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %134 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %46, align 8
  %135 = icmp ult %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133, %134
  br i1 %135, label %136, label %149

136:                                              ; preds = %132
  %137 = load i64, i64* %47, align 8
  %138 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133, i64 0, i32 0, i32 1
  %140 = load i64, i64* %30, align 8
  %141 = bitcast i64** %139 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133, i64 0, i32 0, i32 2
  %143 = load i64, i64* %34, align 8
  %144 = bitcast i64** %142 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %28, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133, i64 0, i32 1
  %146 = bitcast i32* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %48, i64 12, i1 false) #6
  %147 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %133, i64 1
  %148 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %147 to i64
  store i64 %148, i64* %49, align 8
  br label %151

149:                                              ; preds = %132
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1182"* nonnull %2, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull dereferenceable(40) %5) #6
  %150 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  br label %151

151:                                              ; preds = %136, %149
  %152 = phi %"class.v8::internal::Isolate"* [ null, %136 ], [ %150, %149 ]
  %153 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %154 = load i64, i64* %52, align 8
  %155 = load i64, i64* %53, align 8
  %156 = sub i64 %154, %155
  %157 = sdiv exact i64 %156, 24
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %153, i64 0, i32 31
  %159 = bitcast %"struct.v8::internal::HandleScopeData"* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %153, i64 0, i32 31, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 8
  %164 = trunc i64 %157 to i32
  %165 = shl i32 %164, 2
  %166 = or i32 %165, 1
  %167 = icmp eq %"class.v8::internal::Isolate"* %152, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %151
  %169 = ptrtoint %"class.v8::internal::Isolate"* %153 to i64
  store i64 %169, i64* %47, align 8
  br label %189

170:                                              ; preds = %151
  %171 = load i64*, i64** %29, align 8
  %172 = load i64*, i64** %33, align 8
  %173 = ptrtoint i64* %171 to i64
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31
  %175 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %174, i64 0, i32 0
  %176 = bitcast %"struct.v8::internal::HandleScopeData"* %174 to i64*
  %177 = load i64*, i64** %175, align 8
  store i64 %173, i64* %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %178, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 1
  %182 = load i64*, i64** %181, align 8
  %183 = icmp eq i64* %182, %172
  br i1 %183, label %186, label %184

184:                                              ; preds = %170
  store i64* %172, i64** %181, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %152) #6
  %185 = load i64*, i64** %175, align 8
  br label %186

186:                                              ; preds = %184, %170
  %187 = phi i64* [ %185, %184 ], [ %171, %170 ]
  %188 = phi i64* [ %172, %184 ], [ %177, %170 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %187, i64* %188) #6
  br label %189

189:                                              ; preds = %186, %168
  store <2 x i64> %160, <2 x i64>* %70, align 8
  store i32 %166, i32* %39, align 8
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 8
  store i8 13, i8* %42, align 8
  %190 = load i16*, i16** %43, align 8
  %191 = load i16*, i16** %44, align 8
  %192 = icmp eq i16* %190, %191
  br i1 %192, label %210, label %193

193:                                              ; preds = %189, %203
  %194 = phi i16* [ %204, %203 ], [ %190, %189 ]
  %195 = load i16, i16* %194, align 2
  %196 = icmp ult i16 %195, 256
  br i1 %196, label %198, label %197, !prof !2

197:                                              ; preds = %193
  store i8 12, i8* %42, align 8
  br label %210

198:                                              ; preds = %193
  %199 = zext i16 %195 to i64
  %200 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 9
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds i16, i16* %194, i64 1
  %205 = icmp eq i16* %204, %191
  br i1 %205, label %210, label %193

206:                                              ; preds = %198
  store i8 %201, i8* %42, align 8
  store i16* %194, i16** %43, align 8
  %207 = icmp eq i16 %195, 34
  br i1 %207, label %208, label %213, !prof !2

208:                                              ; preds = %206
  %209 = getelementptr inbounds i16, i16* %194, i64 1
  store i16* %209, i16** %43, align 8
  br label %215

210:                                              ; preds = %203, %189, %197
  %211 = phi i16* [ %194, %197 ], [ %190, %189 ], [ %191, %203 ]
  %212 = phi i8 [ 12, %197 ], [ 13, %189 ], [ 13, %203 ]
  store i16* %211, i16** %43, align 8
  br label %213

213:                                              ; preds = %210, %206
  %214 = phi i8 [ %201, %206 ], [ %212, %210 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %214) #6
  br label %215

215:                                              ; preds = %208, %213
  %216 = call { i64, i32 } @_ZN2v88internal10JsonParserItE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser.1175"* %0, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull %5)
  %217 = extractvalue { i64, i32 } %216, 0
  %218 = extractvalue { i64, i32 } %216, 1
  %219 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %220 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %13, align 8
  %221 = icmp eq %"struct.v8::internal::JsonProperty"* %219, %220
  br i1 %221, label %222, label %224, !prof !3

222:                                              ; preds = %215
  %223 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #6
  br label %224

224:                                              ; preds = %215, %222
  %225 = phi %"struct.v8::internal::JsonProperty"* [ %223, %222 ], [ %219, %215 ]
  %226 = bitcast %"struct.v8::internal::JsonProperty"* %225 to i64*
  store i64 %217, i64* %226, align 8
  %227 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %225, i64 0, i32 0, i32 2
  %228 = bitcast i8* %227 to i32*
  store i32 %218, i32* %228, align 8
  %229 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %225, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %229, align 8
  %230 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %225, i64 1
  store %"struct.v8::internal::JsonProperty"* %230, %"struct.v8::internal::JsonProperty"** %11, align 8
  store i8 13, i8* %42, align 8
  %231 = load i16*, i16** %43, align 8
  %232 = load i16*, i16** %44, align 8
  %233 = icmp eq i16* %231, %232
  br i1 %233, label %251, label %234

234:                                              ; preds = %224, %244
  %235 = phi i16* [ %245, %244 ], [ %231, %224 ]
  %236 = load i16, i16* %235, align 2
  %237 = icmp ult i16 %236, 256
  br i1 %237, label %239, label %238, !prof !2

238:                                              ; preds = %234
  store i8 12, i8* %42, align 8
  br label %251

239:                                              ; preds = %234
  %240 = zext i16 %236 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = icmp eq i8 %242, 9
  br i1 %243, label %244, label %247

244:                                              ; preds = %239
  %245 = getelementptr inbounds i16, i16* %235, i64 1
  %246 = icmp eq i16* %245, %232
  br i1 %246, label %251, label %234

247:                                              ; preds = %239
  store i8 %242, i8* %42, align 8
  store i16* %235, i16** %43, align 8
  %248 = icmp eq i16 %236, 58
  br i1 %248, label %249, label %254, !prof !2

249:                                              ; preds = %247
  %250 = getelementptr inbounds i16, i16* %235, i64 1
  store i16* %250, i16** %43, align 8
  br label %256

251:                                              ; preds = %244, %224, %238
  %252 = phi i16* [ %235, %238 ], [ %231, %224 ], [ %232, %244 ]
  %253 = phi i8 [ 12, %238 ], [ 13, %224 ], [ 13, %244 ]
  store i16* %252, i16** %43, align 8
  br label %254

254:                                              ; preds = %251, %247
  %255 = phi i8 [ %242, %247 ], [ %253, %251 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %255) #6
  br label %256

256:                                              ; preds = %254, %249, %343
  store i8 13, i8* %42, align 8
  %257 = load i16*, i16** %43, align 8
  %258 = load i16*, i16** %44, align 8
  %259 = icmp eq i16* %257, %258
  br i1 %259, label %91, label %75

260:                                              ; preds = %94
  %261 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %261, i16** %43, align 8
  store i8 13, i8* %42, align 8
  %262 = icmp eq i16* %261, %76
  br i1 %262, label %284, label %263

263:                                              ; preds = %260, %273
  %264 = phi i16* [ %274, %273 ], [ %261, %260 ]
  %265 = load i16, i16* %264, align 2
  %266 = icmp ult i16 %265, 256
  br i1 %266, label %268, label %267, !prof !2

267:                                              ; preds = %263
  store i8 12, i8* %42, align 8
  br label %284

268:                                              ; preds = %263
  %269 = zext i16 %265 to i64
  %270 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = icmp eq i8 %271, 9
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds i16, i16* %264, i64 1
  %275 = icmp eq i16* %274, %76
  br i1 %275, label %284, label %263

276:                                              ; preds = %268
  store i8 %271, i8* %42, align 8
  %277 = icmp eq i16 %265, 93
  %278 = getelementptr inbounds i16, i16* %264, i64 1
  %279 = select i1 %277, i16* %278, i16* %264
  store i16* %279, i16** %43, align 8
  br i1 %277, label %280, label %286

280:                                              ; preds = %276
  %281 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %282 = call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %281, i8 zeroext 0, i32 0, i32 0, i32 1, i8 zeroext 0) #6
  %283 = ptrtoint i64* %282 to i64
  br label %470

284:                                              ; preds = %273, %260, %267
  %285 = phi i16* [ %264, %267 ], [ %76, %260 ], [ %76, %273 ]
  store i16* %285, i16** %43, align 8
  br label %286

286:                                              ; preds = %284, %276
  %287 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %288 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %46, align 8
  %289 = icmp ult %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287, %288
  br i1 %289, label %290, label %303

290:                                              ; preds = %286
  %291 = load i64, i64* %47, align 8
  %292 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287, i64 0, i32 0, i32 1
  %294 = load i64, i64* %30, align 8
  %295 = bitcast i64** %293 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287, i64 0, i32 0, i32 2
  %297 = load i64, i64* %34, align 8
  %298 = bitcast i64** %296 to i64*
  store i64 %297, i64* %298, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %28, align 8
  %299 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287, i64 0, i32 1
  %300 = bitcast i32* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %48, i64 12, i1 false) #6
  %301 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %287, i64 1
  %302 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %301 to i64
  store i64 %302, i64* %49, align 8
  br label %305

303:                                              ; preds = %286
  call void @_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1182"* nonnull %2, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull dereferenceable(40) %5) #6
  %304 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  br label %305

305:                                              ; preds = %290, %303
  %306 = phi %"class.v8::internal::Isolate"* [ null, %290 ], [ %304, %303 ]
  %307 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %308 = load i64, i64* %50, align 8
  %309 = load i64, i64* %51, align 8
  %310 = sub i64 %308, %309
  %311 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %307, i64 0, i32 31
  %312 = bitcast %"struct.v8::internal::HandleScopeData"* %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %307, i64 0, i32 31, i32 2
  %315 = load i32, i32* %314, align 8
  %316 = add nsw i32 %315, 1
  store i32 %316, i32* %314, align 8
  %317 = lshr exact i64 %310, 1
  %318 = trunc i64 %317 to i32
  %319 = and i32 %318, -4
  %320 = or i32 %319, 2
  %321 = icmp eq %"class.v8::internal::Isolate"* %306, null
  br i1 %321, label %322, label %324

322:                                              ; preds = %305
  %323 = ptrtoint %"class.v8::internal::Isolate"* %307 to i64
  store i64 %323, i64* %47, align 8
  br label %343

324:                                              ; preds = %305
  %325 = load i64*, i64** %29, align 8
  %326 = load i64*, i64** %33, align 8
  %327 = ptrtoint i64* %325 to i64
  %328 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31
  %329 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %328, i64 0, i32 0
  %330 = bitcast %"struct.v8::internal::HandleScopeData"* %328 to i64*
  %331 = load i64*, i64** %329, align 8
  store i64 %327, i64* %330, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31, i32 2
  %333 = load i32, i32* %332, align 8
  %334 = add nsw i32 %333, -1
  store i32 %334, i32* %332, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31, i32 1
  %336 = load i64*, i64** %335, align 8
  %337 = icmp eq i64* %336, %326
  br i1 %337, label %340, label %338

338:                                              ; preds = %324
  store i64* %326, i64** %335, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %306) #6
  %339 = load i64*, i64** %329, align 8
  br label %340

340:                                              ; preds = %338, %324
  %341 = phi i64* [ %339, %338 ], [ %325, %324 ]
  %342 = phi i64* [ %326, %338 ], [ %331, %324 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %341, i64* %342) #6
  br label %343

343:                                              ; preds = %340, %322
  store <2 x i64> %313, <2 x i64>* %69, align 8
  store i32 %320, i32* %39, align 8
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 8
  br label %256

344:                                              ; preds = %94
  %345 = ptrtoint i16* %76 to i64
  %346 = ptrtoint i16* %79 to i64
  %347 = sub i64 %345, %346
  %348 = ashr exact i64 %347, 1
  %349 = icmp ugt i64 %348, 3
  br i1 %349, label %350, label %354, !prof !2

350:                                              ; preds = %344
  %351 = getelementptr inbounds i16, i16* %79, i64 1
  %352 = load i16, i16* %351, align 2
  %353 = icmp eq i16 %352, 114
  br i1 %353, label %1255, label %354, !prof !5

354:                                              ; preds = %350, %1255, %1259, %344
  %355 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %355, i16** %43, align 8
  %356 = add nsw i64 %348, -1
  %357 = icmp ult i64 %356, 3
  %358 = select i1 %357, i64 %356, i64 3
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %381, label %360

360:                                              ; preds = %354, %377
  %361 = phi i16* [ %378, %377 ], [ %355, %354 ]
  %362 = phi i64 [ %379, %377 ], [ 0, %354 ]
  %363 = getelementptr inbounds i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 1), i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = sext i8 %364 to i32
  %366 = load i16, i16* %361, align 2
  %367 = zext i16 %366 to i32
  %368 = icmp eq i32 %365, %367
  br i1 %368, label %377, label %369

369:                                              ; preds = %360
  %370 = icmp ult i16 %366, 256
  br i1 %370, label %371, label %375

371:                                              ; preds = %369
  %372 = zext i16 %366 to i64
  %373 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %372
  %374 = load i8, i8* %373, align 1
  br label %375

375:                                              ; preds = %371, %369
  %376 = phi i8 [ %374, %371 ], [ 12, %369 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %376) #6
  br label %382

377:                                              ; preds = %360
  %378 = getelementptr inbounds i16, i16* %361, i64 1
  store i16* %378, i16** %43, align 8
  %379 = add nuw i64 %362, 1
  %380 = icmp ult i64 %379, %358
  br i1 %380, label %360, label %381

381:                                              ; preds = %377, %354
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext 13) #6
  br label %382

382:                                              ; preds = %1263, %375, %381
  %383 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %383, i64 184
  %385 = ptrtoint %"class.v8::internal::Factory"* %384 to i64
  br label %470

386:                                              ; preds = %94
  %387 = ptrtoint i16* %76 to i64
  %388 = ptrtoint i16* %79 to i64
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 1
  %391 = icmp ugt i64 %390, 4
  br i1 %391, label %392, label %396, !prof !2

392:                                              ; preds = %386
  %393 = getelementptr inbounds i16, i16* %79, i64 1
  %394 = load i16, i16* %393, align 2
  %395 = icmp eq i16 %394, 97
  br i1 %395, label %1241, label %396, !prof !5

396:                                              ; preds = %392, %1241, %1245, %1249, %386
  %397 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %397, i16** %43, align 8
  %398 = add nsw i64 %390, -1
  %399 = icmp ult i64 %398, 4
  %400 = select i1 %399, i64 %398, i64 4
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %423, label %402

402:                                              ; preds = %396, %419
  %403 = phi i16* [ %420, %419 ], [ %397, %396 ]
  %404 = phi i64 [ %421, %419 ], [ 0, %396 ]
  %405 = getelementptr inbounds i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 1), i64 %404
  %406 = load i8, i8* %405, align 1
  %407 = sext i8 %406 to i32
  %408 = load i16, i16* %403, align 2
  %409 = zext i16 %408 to i32
  %410 = icmp eq i32 %407, %409
  br i1 %410, label %419, label %411

411:                                              ; preds = %402
  %412 = icmp ult i16 %408, 256
  br i1 %412, label %413, label %417

413:                                              ; preds = %411
  %414 = zext i16 %408 to i64
  %415 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %414
  %416 = load i8, i8* %415, align 1
  br label %417

417:                                              ; preds = %413, %411
  %418 = phi i8 [ %416, %413 ], [ 12, %411 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %418) #6
  br label %424

419:                                              ; preds = %402
  %420 = getelementptr inbounds i16, i16* %403, i64 1
  store i16* %420, i16** %43, align 8
  %421 = add nuw i64 %404, 1
  %422 = icmp ult i64 %421, %400
  br i1 %422, label %402, label %423

423:                                              ; preds = %419, %396
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext 13) #6
  br label %424

424:                                              ; preds = %1253, %417, %423
  %425 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %426 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %425, i64 192
  %427 = ptrtoint %"class.v8::internal::Factory"* %426 to i64
  br label %470

428:                                              ; preds = %94
  %429 = ptrtoint i16* %76 to i64
  %430 = ptrtoint i16* %79 to i64
  %431 = sub i64 %429, %430
  %432 = ashr exact i64 %431, 1
  %433 = icmp ugt i64 %432, 3
  br i1 %433, label %434, label %438, !prof !2

434:                                              ; preds = %428
  %435 = getelementptr inbounds i16, i16* %79, i64 1
  %436 = load i16, i16* %435, align 2
  %437 = icmp eq i16 %436, 117
  br i1 %437, label %1231, label %438, !prof !5

438:                                              ; preds = %434, %1231, %1235, %428
  %439 = getelementptr inbounds i16, i16* %79, i64 1
  store i16* %439, i16** %43, align 8
  %440 = add nsw i64 %432, -1
  %441 = icmp ult i64 %440, 3
  %442 = select i1 %441, i64 %440, i64 3
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %465, label %444

444:                                              ; preds = %438, %461
  %445 = phi i16* [ %462, %461 ], [ %439, %438 ]
  %446 = phi i64 [ %463, %461 ], [ 0, %438 ]
  %447 = getelementptr inbounds i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 1), i64 %446
  %448 = load i8, i8* %447, align 1
  %449 = sext i8 %448 to i32
  %450 = load i16, i16* %445, align 2
  %451 = zext i16 %450 to i32
  %452 = icmp eq i32 %449, %451
  br i1 %452, label %461, label %453

453:                                              ; preds = %444
  %454 = icmp ult i16 %450, 256
  br i1 %454, label %455, label %459

455:                                              ; preds = %453
  %456 = zext i16 %450 to i64
  %457 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %456
  %458 = load i8, i8* %457, align 1
  br label %459

459:                                              ; preds = %455, %453
  %460 = phi i8 [ %458, %455 ], [ 12, %453 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %460) #6
  br label %466

461:                                              ; preds = %444
  %462 = getelementptr inbounds i16, i16* %445, i64 1
  store i16* %462, i16** %43, align 8
  %463 = add nuw i64 %446, 1
  %464 = icmp ult i64 %463, %442
  br i1 %464, label %444, label %465

465:                                              ; preds = %461, %438
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext 13) #6
  br label %466

466:                                              ; preds = %1239, %459, %465
  %467 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %54, align 8
  %468 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %467, i64 176
  %469 = ptrtoint %"class.v8::internal::Factory"* %468 to i64
  br label %470

470:                                              ; preds = %94, %95, %102, %125, %280, %382, %424, %466
  %471 = phi i64 [ %101, %95 ], [ %104, %102 ], [ %129, %125 ], [ %283, %280 ], [ %385, %382 ], [ %427, %424 ], [ %469, %466 ], [ %74, %94 ]
  br label %555

472:                                              ; preds = %94, %94, %94, %94, %94, %94, %82, %91
  %473 = phi i16* [ %92, %91 ], [ %76, %82 ], [ %76, %94 ], [ %76, %94 ], [ %76, %94 ], [ %76, %94 ], [ %76, %94 ], [ %76, %94 ]
  %474 = phi i16* [ %93, %91 ], [ %79, %82 ], [ %79, %94 ], [ %79, %94 ], [ %79, %94 ], [ %79, %94 ], [ %79, %94 ], [ %79, %94 ]
  %475 = icmp eq i16* %474, %473
  br i1 %475, label %483, label %476, !prof !3

476:                                              ; preds = %472
  %477 = load i16, i16* %474, align 2
  %478 = icmp ult i16 %477, 256
  br i1 %478, label %479, label %483

479:                                              ; preds = %476
  %480 = zext i16 %477 to i64
  %481 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %480
  %482 = load i8, i8* %481, align 1
  br label %483

483:                                              ; preds = %472, %476, %479
  %484 = phi i8 [ %482, %479 ], [ 12, %476 ], [ 13, %472 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %484) #6
  %485 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %2, i64 0, i32 0, i32 0
  %486 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %485, align 8
  %487 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %488 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %486, %487
  br i1 %488, label %1153, label %489

489:                                              ; preds = %483, %552
  %490 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %527, %552 ], [ %487, %483 ]
  %491 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %490, i64 -1
  %492 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %493 = icmp eq %"class.v8::internal::Isolate"* %492, null
  br i1 %493, label %494, label %497

494:                                              ; preds = %489
  %495 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %491 to i64*
  %496 = load i64, i64* %495, align 8
  store i64 %496, i64* %47, align 8
  br label %516

497:                                              ; preds = %489
  %498 = load i64*, i64** %29, align 8
  %499 = load i64*, i64** %33, align 8
  %500 = ptrtoint i64* %498 to i64
  %501 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %492, i64 0, i32 31
  %502 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %501, i64 0, i32 0
  %503 = bitcast %"struct.v8::internal::HandleScopeData"* %501 to i64*
  %504 = load i64*, i64** %502, align 8
  store i64 %500, i64* %503, align 8
  %505 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %492, i64 0, i32 31, i32 2
  %506 = load i32, i32* %505, align 8
  %507 = add nsw i32 %506, -1
  store i32 %507, i32* %505, align 8
  %508 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %492, i64 0, i32 31, i32 1
  %509 = load i64*, i64** %508, align 8
  %510 = icmp eq i64* %509, %499
  br i1 %510, label %513, label %511

511:                                              ; preds = %497
  store i64* %499, i64** %508, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %492) #6
  %512 = load i64*, i64** %502, align 8
  br label %513

513:                                              ; preds = %511, %497
  %514 = phi i64* [ %512, %511 ], [ %498, %497 ]
  %515 = phi i64* [ %499, %511 ], [ %504, %497 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %514, i64* %515) #6
  br label %516

516:                                              ; preds = %494, %513
  %517 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %490, i64 -1, i32 0, i32 1
  %518 = bitcast i64** %517 to i64*
  %519 = load i64, i64* %518, align 8
  store i64 %519, i64* %30, align 8
  %520 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %490, i64 -1, i32 0, i32 2
  %521 = bitcast i64** %520 to i64*
  %522 = load i64, i64* %521, align 8
  store i64 %522, i64* %34, align 8
  %523 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %491, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %523, align 8
  %524 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %490, i64 -1, i32 1
  %525 = bitcast i32* %524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %525, i64 12, i1 false) #6
  %526 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %527 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %526, i64 -1
  %528 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %527, i64 0, i32 0, i32 0
  %529 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %528, align 8
  %530 = icmp eq %"class.v8::internal::Isolate"* %529, null
  br i1 %530, label %552, label %531

531:                                              ; preds = %516
  %532 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %526, i64 -1, i32 0, i32 1
  %533 = load i64*, i64** %532, align 8
  %534 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %526, i64 -1, i32 0, i32 2
  %535 = load i64*, i64** %534, align 8
  %536 = ptrtoint i64* %533 to i64
  %537 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31
  %538 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %537, i64 0, i32 0
  %539 = bitcast %"struct.v8::internal::HandleScopeData"* %537 to i64*
  %540 = load i64*, i64** %538, align 8
  store i64 %536, i64* %539, align 8
  %541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31, i32 2
  %542 = load i32, i32* %541, align 8
  %543 = add nsw i32 %542, -1
  store i32 %543, i32* %541, align 8
  %544 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %529, i64 0, i32 31, i32 1
  %545 = load i64*, i64** %544, align 8
  %546 = icmp eq i64* %545, %535
  br i1 %546, label %549, label %547

547:                                              ; preds = %531
  store i64* %535, i64** %544, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %529) #6
  %548 = load i64*, i64** %538, align 8
  br label %549

549:                                              ; preds = %547, %531
  %550 = phi i64* [ %548, %547 ], [ %533, %531 ]
  %551 = phi i64* [ %535, %547 ], [ %540, %531 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %550, i64* %551) #6
  br label %552

552:                                              ; preds = %516, %549
  store %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %527, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %553 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %485, align 8
  %554 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %553, %527
  br i1 %554, label %1153, label %489

555:                                              ; preds = %470, %982
  %556 = phi i64 [ %985, %982 ], [ %471, %470 ]
  %557 = load i32, i32* %39, align 8
  %558 = trunc i32 %557 to i8
  %559 = and i8 %558, 3
  switch i8 %559, label %1149 [
    i8 0, label %560
    i8 1, label %608
    i8 2, label %986
  ]

560:                                              ; preds = %555
  %561 = inttoptr i64 %556 to i64*
  %562 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31
  %564 = load i64, i64* %561, align 8
  %565 = load i64*, i64** %29, align 8
  %566 = load i64*, i64** %33, align 8
  %567 = ptrtoint i64* %565 to i64
  %568 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %563, i64 0, i32 0
  %569 = bitcast %"struct.v8::internal::HandleScopeData"* %563 to i64*
  %570 = load i64*, i64** %568, align 8
  store i64 %567, i64* %569, align 8
  %571 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 2
  %572 = load i32, i32* %571, align 8
  %573 = add nsw i32 %572, -1
  store i32 %573, i32* %571, align 8
  %574 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 1
  %575 = load i64*, i64** %574, align 8
  %576 = icmp eq i64* %575, %566
  br i1 %576, label %579, label %577

577:                                              ; preds = %560
  store i64* %566, i64** %574, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %562) #6
  %578 = load i64*, i64** %568, align 8
  br label %579

579:                                              ; preds = %577, %560
  %580 = phi i64* [ %578, %577 ], [ %565, %560 ]
  %581 = phi i64* [ %566, %577 ], [ %570, %560 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %580, i64* %581) #6
  %582 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %583 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %582, i64 0, i32 31, i32 4
  %584 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %583, align 8
  %585 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %584, null
  br i1 %585, label %588, label %586

586:                                              ; preds = %579
  %587 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %584, i64 %564) #6
  br label %601

588:                                              ; preds = %579
  %589 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %582, i64 0, i32 31, i32 0
  %590 = load i64*, i64** %589, align 8
  %591 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %582, i64 0, i32 31, i32 1
  %592 = load i64*, i64** %591, align 8
  %593 = icmp eq i64* %590, %592
  br i1 %593, label %594, label %596

594:                                              ; preds = %588
  %595 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %582) #6
  br label %596

596:                                              ; preds = %594, %588
  %597 = phi i64* [ %595, %594 ], [ %590, %588 ]
  %598 = ptrtoint i64* %597 to i64
  %599 = add i64 %598, 8
  %600 = inttoptr i64 %599 to i64*
  store i64* %600, i64** %589, align 8
  store i64 %564, i64* %597, align 8
  br label %601

601:                                              ; preds = %586, %596
  %602 = phi i64* [ %587, %586 ], [ %597, %596 ]
  %603 = bitcast %"struct.v8::internal::HandleScopeData"* %563 to <2 x i64>*
  %604 = load <2 x i64>, <2 x i64>* %603, align 8
  %605 = bitcast i64** %29 to <2 x i64>*
  store <2 x i64> %604, <2 x i64>* %605, align 8
  %606 = load i32, i32* %571, align 8
  %607 = add nsw i32 %606, 1
  store i32 %607, i32* %571, align 8
  br label %1153

608:                                              ; preds = %555
  %609 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %610 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %609, i64 -1, i32 1
  %611 = bitcast %"class.v8::internal::Handle.1129"* %610 to i64*
  store i64 %556, i64* %611, align 8
  store i8 13, i8* %42, align 8
  %612 = load i16*, i16** %43, align 8
  %613 = load i16*, i16** %44, align 8
  %614 = icmp eq i16* %612, %613
  br i1 %614, label %697, label %615

615:                                              ; preds = %608, %625
  %616 = phi i16* [ %626, %625 ], [ %612, %608 ]
  %617 = load i16, i16* %616, align 2
  %618 = icmp ult i16 %617, 256
  br i1 %618, label %620, label %619, !prof !2

619:                                              ; preds = %615
  store i8 12, i8* %42, align 8
  br label %697

620:                                              ; preds = %615
  %621 = zext i16 %617 to i64
  %622 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %621
  %623 = load i8, i8* %622, align 1
  %624 = icmp eq i8 %623, 9
  br i1 %624, label %625, label %628

625:                                              ; preds = %620
  %626 = getelementptr inbounds i16, i16* %616, i64 1
  %627 = icmp eq i16* %626, %613
  br i1 %627, label %697, label %615

628:                                              ; preds = %620
  store i8 %623, i8* %42, align 8
  %629 = icmp eq i16 %617, 44
  %630 = getelementptr inbounds i16, i16* %616, i64 1
  %631 = select i1 %629, i16* %630, i16* %616
  store i16* %631, i16** %43, align 8
  br i1 %629, label %632, label %699, !prof !2

632:                                              ; preds = %628
  store i8 13, i8* %42, align 8
  %633 = icmp eq i16* %631, %613
  br i1 %633, label %651, label %634

634:                                              ; preds = %632, %644
  %635 = phi i16* [ %645, %644 ], [ %630, %632 ]
  %636 = load i16, i16* %635, align 2
  %637 = icmp ult i16 %636, 256
  br i1 %637, label %639, label %638, !prof !2

638:                                              ; preds = %634
  store i8 12, i8* %42, align 8
  br label %651

639:                                              ; preds = %634
  %640 = zext i16 %636 to i64
  %641 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %640
  %642 = load i8, i8* %641, align 1
  %643 = icmp eq i8 %642, 9
  br i1 %643, label %644, label %647

644:                                              ; preds = %639
  %645 = getelementptr inbounds i16, i16* %635, i64 1
  %646 = icmp eq i16* %645, %613
  br i1 %646, label %651, label %634

647:                                              ; preds = %639
  store i8 %642, i8* %42, align 8
  store i16* %635, i16** %43, align 8
  %648 = icmp eq i16 %636, 34
  br i1 %648, label %649, label %654, !prof !2

649:                                              ; preds = %647
  %650 = getelementptr inbounds i16, i16* %635, i64 1
  store i16* %650, i16** %43, align 8
  br label %656

651:                                              ; preds = %644, %632, %638
  %652 = phi i16* [ %635, %638 ], [ %630, %632 ], [ %613, %644 ]
  %653 = phi i8 [ 12, %638 ], [ 13, %632 ], [ 13, %644 ]
  store i16* %652, i16** %43, align 8
  br label %654

654:                                              ; preds = %651, %647
  %655 = phi i8 [ %642, %647 ], [ %653, %651 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %655) #6
  br label %656

656:                                              ; preds = %649, %654
  %657 = call { i64, i32 } @_ZN2v88internal10JsonParserItE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser.1175"* %0, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull %5)
  %658 = extractvalue { i64, i32 } %657, 0
  %659 = extractvalue { i64, i32 } %657, 1
  %660 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %11, align 8
  %661 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %13, align 8
  %662 = icmp eq %"struct.v8::internal::JsonProperty"* %660, %661
  br i1 %662, label %663, label %665, !prof !3

663:                                              ; preds = %656
  %664 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #6
  br label %665

665:                                              ; preds = %656, %663
  %666 = phi %"struct.v8::internal::JsonProperty"* [ %664, %663 ], [ %660, %656 ]
  %667 = bitcast %"struct.v8::internal::JsonProperty"* %666 to i64*
  store i64 %658, i64* %667, align 8
  %668 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %666, i64 0, i32 0, i32 2
  %669 = bitcast i8* %668 to i32*
  store i32 %659, i32* %669, align 8
  %670 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %666, i64 0, i32 1, i32 0, i32 0
  store i64* null, i64** %670, align 8
  %671 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %666, i64 1
  store %"struct.v8::internal::JsonProperty"* %671, %"struct.v8::internal::JsonProperty"** %11, align 8
  store i8 13, i8* %42, align 8
  %672 = load i16*, i16** %43, align 8
  %673 = load i16*, i16** %44, align 8
  %674 = icmp eq i16* %672, %673
  br i1 %674, label %692, label %675

675:                                              ; preds = %665, %685
  %676 = phi i16* [ %686, %685 ], [ %672, %665 ]
  %677 = load i16, i16* %676, align 2
  %678 = icmp ult i16 %677, 256
  br i1 %678, label %680, label %679, !prof !2

679:                                              ; preds = %675
  store i8 12, i8* %42, align 8
  br label %692

680:                                              ; preds = %675
  %681 = zext i16 %677 to i64
  %682 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %681
  %683 = load i8, i8* %682, align 1
  %684 = icmp eq i8 %683, 9
  br i1 %684, label %685, label %688

685:                                              ; preds = %680
  %686 = getelementptr inbounds i16, i16* %676, i64 1
  %687 = icmp eq i16* %686, %673
  br i1 %687, label %692, label %675

688:                                              ; preds = %680
  store i8 %683, i8* %42, align 8
  store i16* %676, i16** %43, align 8
  %689 = icmp eq i16 %677, 58
  br i1 %689, label %690, label %695, !prof !2

690:                                              ; preds = %688
  %691 = getelementptr inbounds i16, i16* %676, i64 1
  store i16* %691, i16** %43, align 8
  br label %1149

692:                                              ; preds = %685, %665, %679
  %693 = phi i16* [ %676, %679 ], [ %672, %665 ], [ %673, %685 ]
  %694 = phi i8 [ 12, %679 ], [ 13, %665 ], [ 13, %685 ]
  store i16* %693, i16** %43, align 8
  br label %695

695:                                              ; preds = %692, %688
  %696 = phi i8 [ %683, %688 ], [ %694, %692 ]
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %696) #6
  br label %1149

697:                                              ; preds = %625, %608, %619
  %698 = phi i16* [ %616, %619 ], [ %612, %608 ], [ %613, %625 ]
  store i16* %698, i16** %43, align 8
  br label %699

699:                                              ; preds = %697, %628
  %700 = load i64, i64* %49, align 8
  %701 = load i64, i64* %62, align 8
  %702 = icmp eq i64 %700, %701
  br i1 %702, label %850, label %703

703:                                              ; preds = %699
  %704 = inttoptr i64 %700 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  %705 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %704, i64 -1, i32 1
  %706 = load i32, i32* %705, align 8
  %707 = and i32 %706, 3
  %708 = icmp eq i32 %707, 2
  br i1 %708, label %709, label %850

709:                                              ; preds = %703
  %710 = lshr i32 %706, 2
  %711 = zext i32 %710 to i64
  %712 = load i64, i64* %50, align 8
  %713 = load i64, i64* %51, align 8
  %714 = sub i64 %712, %713
  %715 = ashr exact i64 %714, 3
  %716 = icmp ugt i64 %715, %711
  br i1 %716, label %717, label %850

717:                                              ; preds = %709
  %718 = inttoptr i64 %712 to %"class.v8::internal::Handle.1129"*
  %719 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %718, i64 -1, i32 0, i32 0
  %720 = load i64*, i64** %719, align 8
  %721 = load i64, i64* %720, align 8
  %722 = and i64 %721, 1
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %850, label %724

724:                                              ; preds = %717
  %725 = and i64 %721, -4294967296
  %726 = add i64 %721, -1
  %727 = inttoptr i64 %726 to i32*
  %728 = load atomic i32, i32* %727 monotonic, align 4
  %729 = zext i32 %728 to i64
  %730 = or i64 %725, %729
  %731 = add i64 %730, 7
  %732 = inttoptr i64 %731 to i16*
  %733 = load atomic i16, i16* %732 monotonic, align 2
  %734 = icmp ugt i16 %733, 188
  br i1 %734, label %735, label %850

735:                                              ; preds = %724
  %736 = load atomic i32, i32* %727 monotonic, align 4
  %737 = zext i32 %736 to i64
  %738 = or i64 %725, %737
  %739 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %740 = add i64 %738, 11
  %741 = inttoptr i64 %740 to i32*
  %742 = load atomic i32, i32* %741 acquire, align 4
  %743 = and i32 %742, 1048576
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %850

745:                                              ; preds = %735
  %746 = add i64 %738, 7
  %747 = inttoptr i64 %746 to i16*
  %748 = load atomic i16, i16* %747 monotonic, align 2
  %749 = icmp eq i16 %748, 1057
  br i1 %749, label %750, label %818

750:                                              ; preds = %745
  %751 = load atomic i32, i32* %741 acquire, align 4
  %752 = and i32 %751, 1047552
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %818, label %754

754:                                              ; preds = %750
  %755 = add i64 %738, 19
  %756 = inttoptr i64 %755 to i32*
  %757 = load i32, i32* %756, align 4
  %758 = zext i32 %757 to i64
  %759 = or i64 %725, %758
  %760 = and i64 %758, 1
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %762, label %764

762:                                              ; preds = %754
  %763 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %790

764:                                              ; preds = %754
  %765 = add i64 %759, -1
  %766 = inttoptr i64 %765 to i32*
  %767 = load atomic i32, i32* %766 monotonic, align 4
  %768 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %769 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %768, null
  br i1 %769, label %776, label %770

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %768, i64 0, i32 0, i32 1
  %772 = load i8, i8* %771, align 8, !range !4
  %773 = icmp eq i8 %772, 0
  br i1 %773, label %776, label %774

774:                                              ; preds = %770
  %775 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %768, i64 0, i32 1, i64 0
  br label %784

776:                                              ; preds = %770, %764
  %777 = and i64 %738, -262144
  %778 = or i64 %777, 16
  %779 = inttoptr i64 %778 to i64*
  %780 = load i64, i64* %779, align 16
  %781 = add i64 %780, -41416
  %782 = inttoptr i64 %781 to %"class.v8::internal::Isolate"*
  %783 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %782, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %784

784:                                              ; preds = %776, %774
  %785 = phi i64* [ %783, %776 ], [ %775, %774 ]
  %786 = getelementptr inbounds i64, i64* %785, i64 10
  %787 = load i64, i64* %786, align 8
  %788 = trunc i64 %787 to i32
  %789 = icmp eq i32 %767, %788
  br i1 %789, label %811, label %790

790:                                              ; preds = %784, %762
  %791 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %763, %762 ], [ %768, %784 ]
  %792 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %791, null
  br i1 %792, label %799, label %793

793:                                              ; preds = %790
  %794 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %791, i64 0, i32 0, i32 1
  %795 = load i8, i8* %794, align 8, !range !4
  %796 = icmp eq i8 %795, 0
  br i1 %796, label %799, label %797

797:                                              ; preds = %793
  %798 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %791, i64 0, i32 1, i64 0
  br label %807

799:                                              ; preds = %793, %790
  %800 = and i64 %738, -262144
  %801 = or i64 %800, 16
  %802 = inttoptr i64 %801 to i64*
  %803 = load i64, i64* %802, align 16
  %804 = add i64 %803, -41416
  %805 = inttoptr i64 %804 to %"class.v8::internal::Isolate"*
  %806 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %805, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %807

807:                                              ; preds = %799, %797
  %808 = phi i64* [ %806, %799 ], [ %798, %797 ]
  %809 = getelementptr inbounds i64, i64* %808, i64 4
  %810 = load i64, i64* %809, align 8
  br label %811

811:                                              ; preds = %784, %807
  %812 = phi i64 [ %810, %807 ], [ %759, %784 ]
  %813 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %739, i64 0, i32 0, i32 7, i32 0, i64 4
  %814 = load i64, i64* %813, align 8
  %815 = trunc i64 %812 to i32
  %816 = trunc i64 %814 to i32
  %817 = icmp eq i32 %815, %816
  br i1 %817, label %850, label %818

818:                                              ; preds = %745, %750, %811
  %819 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %820 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31, i32 4
  %821 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %820, align 8
  %822 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %821, null
  br i1 %822, label %828, label %823

823:                                              ; preds = %818
  %824 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %821, i64 %738) #6
  %825 = load i64, i64* %824, align 8
  %826 = add i64 %825, 11
  %827 = inttoptr i64 %826 to i32*
  br label %841

828:                                              ; preds = %818
  %829 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31, i32 0
  %830 = load i64*, i64** %829, align 8
  %831 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %819, i64 0, i32 31, i32 1
  %832 = load i64*, i64** %831, align 8
  %833 = icmp eq i64* %830, %832
  br i1 %833, label %834, label %836

834:                                              ; preds = %828
  %835 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %819) #6
  br label %836

836:                                              ; preds = %834, %828
  %837 = phi i64* [ %835, %834 ], [ %830, %828 ]
  %838 = ptrtoint i64* %837 to i64
  %839 = add i64 %838, 8
  %840 = inttoptr i64 %839 to i64*
  store i64* %840, i64** %829, align 8
  store i64 %738, i64* %837, align 8
  br label %841

841:                                              ; preds = %823, %836
  %842 = phi i32* [ %827, %823 ], [ %741, %836 ]
  %843 = phi i64* [ %824, %823 ], [ %837, %836 ]
  %844 = load atomic i32, i32* %842 acquire, align 4
  %845 = and i32 %844, 16777216
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %850, label %847

847:                                              ; preds = %841
  %848 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %849 = call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %848, i64* %843) #6
  br label %850

850:                                              ; preds = %841, %735, %717, %699, %703, %709, %811, %847, %724
  %851 = phi i64* [ null, %724 ], [ null, %811 ], [ %849, %847 ], [ %843, %841 ], [ null, %709 ], [ null, %703 ], [ null, %699 ], [ null, %717 ], [ null, %735 ]
  %852 = call i64* @_ZN2v88internal10JsonParserItE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE(%"class.v8::internal::JsonParser.1175"* %0, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull dereferenceable(40) %5, %"class.v8::base::SmallVector"* nonnull dereferenceable(408) %3, i64* %851)
  %853 = load i32, i32* %39, align 8
  %854 = lshr i32 %853, 2
  %855 = zext i32 %854 to i64
  %856 = load i64, i64* %63, align 8
  %857 = load i64, i64* %53, align 8
  %858 = sub i64 %856, %857
  %859 = sdiv exact i64 %858, 24
  %860 = icmp ult i64 %859, %855
  %861 = inttoptr i64 %857 to %"struct.v8::internal::JsonProperty"*
  br i1 %860, label %862, label %865

862:                                              ; preds = %850
  %863 = call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %3, i64 %855) #6
  %864 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %64, align 8
  br label %865

865:                                              ; preds = %850, %862
  %866 = phi %"struct.v8::internal::JsonProperty"* [ %864, %862 ], [ %861, %850 ]
  %867 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %866, i64 %855
  store %"struct.v8::internal::JsonProperty"* %867, %"struct.v8::internal::JsonProperty"** %11, align 8
  %868 = load i8, i8* %42, align 8
  %869 = icmp eq i8 %868, 3
  br i1 %869, label %870, label %873, !prof !2

870:                                              ; preds = %865
  %871 = load i16*, i16** %43, align 8
  %872 = getelementptr inbounds i16, i16* %871, i64 1
  store i16* %872, i16** %43, align 8
  br label %874

873:                                              ; preds = %865
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %868) #6
  br label %874

874:                                              ; preds = %870, %873
  %875 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %876 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %875, i64 0, i32 31
  %877 = load i64, i64* %852, align 8
  %878 = load i64*, i64** %29, align 8
  %879 = load i64*, i64** %33, align 8
  %880 = ptrtoint i64* %878 to i64
  %881 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %876, i64 0, i32 0
  %882 = bitcast %"struct.v8::internal::HandleScopeData"* %876 to i64*
  %883 = load i64*, i64** %881, align 8
  store i64 %880, i64* %882, align 8
  %884 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %875, i64 0, i32 31, i32 2
  %885 = load i32, i32* %884, align 8
  %886 = add nsw i32 %885, -1
  store i32 %886, i32* %884, align 8
  %887 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %875, i64 0, i32 31, i32 1
  %888 = load i64*, i64** %887, align 8
  %889 = icmp eq i64* %888, %879
  br i1 %889, label %892, label %890

890:                                              ; preds = %874
  store i64* %879, i64** %887, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %875) #6
  %891 = load i64*, i64** %881, align 8
  br label %892

892:                                              ; preds = %890, %874
  %893 = phi i64* [ %891, %890 ], [ %878, %874 ]
  %894 = phi i64* [ %879, %890 ], [ %883, %874 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %893, i64* %894) #6
  %895 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %896 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %895, i64 0, i32 31, i32 4
  %897 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %896, align 8
  %898 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %897, null
  br i1 %898, label %901, label %899

899:                                              ; preds = %892
  %900 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %897, i64 %877) #6
  br label %914

901:                                              ; preds = %892
  %902 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %895, i64 0, i32 31, i32 0
  %903 = load i64*, i64** %902, align 8
  %904 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %895, i64 0, i32 31, i32 1
  %905 = load i64*, i64** %904, align 8
  %906 = icmp eq i64* %903, %905
  br i1 %906, label %907, label %909

907:                                              ; preds = %901
  %908 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %895) #6
  br label %909

909:                                              ; preds = %907, %901
  %910 = phi i64* [ %908, %907 ], [ %903, %901 ]
  %911 = ptrtoint i64* %910 to i64
  %912 = add i64 %911, 8
  %913 = inttoptr i64 %912 to i64*
  store i64* %913, i64** %902, align 8
  store i64 %877, i64* %910, align 8
  br label %914

914:                                              ; preds = %899, %909
  %915 = phi i64* [ %900, %899 ], [ %910, %909 ]
  %916 = load i64, i64* %882, align 8
  store i64 %916, i64* %30, align 8
  %917 = bitcast i64** %887 to i64*
  %918 = load i64, i64* %917, align 8
  store i64 %918, i64* %34, align 8
  %919 = load i32, i32* %884, align 8
  %920 = add nsw i32 %919, 1
  store i32 %920, i32* %884, align 8
  %921 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %922 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %921, i64 -1
  %923 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %924 = icmp eq %"class.v8::internal::Isolate"* %923, null
  %925 = inttoptr i64 %918 to i64*
  br i1 %924, label %926, label %929

926:                                              ; preds = %914
  %927 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %922 to i64*
  %928 = load i64, i64* %927, align 8
  store i64 %928, i64* %47, align 8
  br label %946

929:                                              ; preds = %914
  %930 = inttoptr i64 %916 to i64*
  %931 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %923, i64 0, i32 31
  %932 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %931, i64 0, i32 0
  %933 = bitcast %"struct.v8::internal::HandleScopeData"* %931 to i64*
  %934 = load i64*, i64** %932, align 8
  store i64 %916, i64* %933, align 8
  %935 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %923, i64 0, i32 31, i32 2
  %936 = load i32, i32* %935, align 8
  %937 = add nsw i32 %936, -1
  store i32 %937, i32* %935, align 8
  %938 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %923, i64 0, i32 31, i32 1
  %939 = load i64*, i64** %938, align 8
  %940 = icmp eq i64* %939, %925
  br i1 %940, label %943, label %941

941:                                              ; preds = %929
  store i64* %925, i64** %938, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %923) #6
  %942 = load i64*, i64** %932, align 8
  br label %943

943:                                              ; preds = %941, %929
  %944 = phi i64* [ %942, %941 ], [ %930, %929 ]
  %945 = phi i64* [ %925, %941 ], [ %934, %929 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %944, i64* %945) #6
  br label %946

946:                                              ; preds = %926, %943
  %947 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %921, i64 -1, i32 0, i32 1
  %948 = bitcast i64** %947 to i64*
  %949 = load i64, i64* %948, align 8
  store i64 %949, i64* %30, align 8
  %950 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %921, i64 -1, i32 0, i32 2
  %951 = bitcast i64** %950 to i64*
  %952 = load i64, i64* %951, align 8
  store i64 %952, i64* %34, align 8
  %953 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %922, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %953, align 8
  %954 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %921, i64 -1, i32 1
  %955 = bitcast i32* %954 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %955, i64 12, i1 false) #6
  %956 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %957 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %956, i64 -1
  %958 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %957, i64 0, i32 0, i32 0
  %959 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %958, align 8
  %960 = icmp eq %"class.v8::internal::Isolate"* %959, null
  br i1 %960, label %982, label %961

961:                                              ; preds = %946
  %962 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %956, i64 -1, i32 0, i32 1
  %963 = load i64*, i64** %962, align 8
  %964 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %956, i64 -1, i32 0, i32 2
  %965 = load i64*, i64** %964, align 8
  %966 = ptrtoint i64* %963 to i64
  %967 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %959, i64 0, i32 31
  %968 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %967, i64 0, i32 0
  %969 = bitcast %"struct.v8::internal::HandleScopeData"* %967 to i64*
  %970 = load i64*, i64** %968, align 8
  store i64 %966, i64* %969, align 8
  %971 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %959, i64 0, i32 31, i32 2
  %972 = load i32, i32* %971, align 8
  %973 = add nsw i32 %972, -1
  store i32 %973, i32* %971, align 8
  %974 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %959, i64 0, i32 31, i32 1
  %975 = load i64*, i64** %974, align 8
  %976 = icmp eq i64* %975, %965
  br i1 %976, label %979, label %977

977:                                              ; preds = %961
  store i64* %965, i64** %974, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %959) #6
  %978 = load i64*, i64** %968, align 8
  br label %979

979:                                              ; preds = %977, %961
  %980 = phi i64* [ %978, %977 ], [ %963, %961 ]
  %981 = phi i64* [ %965, %977 ], [ %970, %961 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %980, i64* %981) #6
  br label %982

982:                                              ; preds = %1146, %1113, %979, %946
  %983 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %957, %946 ], [ %957, %979 ], [ %1124, %1113 ], [ %1124, %1146 ]
  %984 = phi i64* [ %915, %946 ], [ %915, %979 ], [ %1082, %1113 ], [ %1082, %1146 ]
  store %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %983, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %985 = ptrtoint i64* %984 to i64
  br label %555

986:                                              ; preds = %555
  %987 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %19, align 8
  %988 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %21, align 8
  %989 = icmp eq %"class.v8::internal::Handle.1129"* %987, %988
  br i1 %989, label %990, label %992, !prof !3

990:                                              ; preds = %986
  %991 = call %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEv(%"class.v8::base::SmallVector.1157"* nonnull %4) #6
  br label %992

992:                                              ; preds = %986, %990
  %993 = phi %"class.v8::internal::Handle.1129"* [ %991, %990 ], [ %987, %986 ]
  %994 = bitcast %"class.v8::internal::Handle.1129"* %993 to i64*
  store i64 %556, i64* %994, align 8
  %995 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %993, i64 1
  store %"class.v8::internal::Handle.1129"* %995, %"class.v8::internal::Handle.1129"** %19, align 8
  store i8 13, i8* %42, align 8
  %996 = load i16*, i16** %43, align 8
  %997 = load i16*, i16** %44, align 8
  %998 = icmp eq i16* %996, %997
  br i1 %998, label %1016, label %999

999:                                              ; preds = %992, %1009
  %1000 = phi i16* [ %1010, %1009 ], [ %996, %992 ]
  %1001 = load i16, i16* %1000, align 2
  %1002 = icmp ult i16 %1001, 256
  br i1 %1002, label %1004, label %1003, !prof !2

1003:                                             ; preds = %999
  store i8 12, i8* %42, align 8
  br label %1016

1004:                                             ; preds = %999
  %1005 = zext i16 %1001 to i64
  %1006 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %1005
  %1007 = load i8, i8* %1006, align 1
  %1008 = icmp eq i8 %1007, 9
  br i1 %1008, label %1009, label %1012

1009:                                             ; preds = %1004
  %1010 = getelementptr inbounds i16, i16* %1000, i64 1
  %1011 = icmp eq i16* %1010, %997
  br i1 %1011, label %1016, label %999

1012:                                             ; preds = %1004
  store i8 %1007, i8* %42, align 8
  %1013 = icmp eq i16 %1001, 44
  %1014 = getelementptr inbounds i16, i16* %1000, i64 1
  %1015 = select i1 %1013, i16* %1014, i16* %1000
  store i16* %1015, i16** %43, align 8
  br i1 %1013, label %1149, label %1018, !prof !2

1016:                                             ; preds = %1009, %992, %1003
  %1017 = phi i16* [ %1000, %1003 ], [ %996, %992 ], [ %997, %1009 ]
  store i16* %1017, i16** %43, align 8
  br label %1018

1018:                                             ; preds = %1016, %1012
  %1019 = call i64* @_ZN2v88internal10JsonParserItE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE(%"class.v8::internal::JsonParser.1175"* %0, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* nonnull dereferenceable(40) %5, %"class.v8::base::SmallVector.1157"* nonnull dereferenceable(152) %4)
  %1020 = load i32, i32* %39, align 8
  %1021 = lshr i32 %1020, 2
  %1022 = zext i32 %1021 to i64
  %1023 = load i64, i64* %60, align 8
  %1024 = load i64, i64* %51, align 8
  %1025 = sub i64 %1023, %1024
  %1026 = ashr exact i64 %1025, 3
  %1027 = icmp ult i64 %1026, %1022
  %1028 = inttoptr i64 %1024 to %"class.v8::internal::Handle.1129"*
  br i1 %1027, label %1029, label %1032

1029:                                             ; preds = %1018
  %1030 = call %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEm(%"class.v8::base::SmallVector.1157"* nonnull %4, i64 %1022) #6
  %1031 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %61, align 8
  br label %1032

1032:                                             ; preds = %1018, %1029
  %1033 = phi %"class.v8::internal::Handle.1129"* [ %1031, %1029 ], [ %1028, %1018 ]
  %1034 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %1033, i64 %1022
  store %"class.v8::internal::Handle.1129"* %1034, %"class.v8::internal::Handle.1129"** %19, align 8
  %1035 = load i8, i8* %42, align 8
  %1036 = icmp eq i8 %1035, 5
  br i1 %1036, label %1037, label %1040, !prof !2

1037:                                             ; preds = %1032
  %1038 = load i16*, i16** %43, align 8
  %1039 = getelementptr inbounds i16, i16* %1038, i64 1
  store i16* %1039, i16** %43, align 8
  br label %1041

1040:                                             ; preds = %1032
  call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %1035) #6
  br label %1041

1041:                                             ; preds = %1037, %1040
  %1042 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1042, i64 0, i32 31
  %1044 = load i64, i64* %1019, align 8
  %1045 = load i64*, i64** %29, align 8
  %1046 = load i64*, i64** %33, align 8
  %1047 = ptrtoint i64* %1045 to i64
  %1048 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1043, i64 0, i32 0
  %1049 = bitcast %"struct.v8::internal::HandleScopeData"* %1043 to i64*
  %1050 = load i64*, i64** %1048, align 8
  store i64 %1047, i64* %1049, align 8
  %1051 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1042, i64 0, i32 31, i32 2
  %1052 = load i32, i32* %1051, align 8
  %1053 = add nsw i32 %1052, -1
  store i32 %1053, i32* %1051, align 8
  %1054 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1042, i64 0, i32 31, i32 1
  %1055 = load i64*, i64** %1054, align 8
  %1056 = icmp eq i64* %1055, %1046
  br i1 %1056, label %1059, label %1057

1057:                                             ; preds = %1041
  store i64* %1046, i64** %1054, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1042) #6
  %1058 = load i64*, i64** %1048, align 8
  br label %1059

1059:                                             ; preds = %1057, %1041
  %1060 = phi i64* [ %1058, %1057 ], [ %1045, %1041 ]
  %1061 = phi i64* [ %1046, %1057 ], [ %1050, %1041 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1060, i64* %1061) #6
  %1062 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1063 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1062, i64 0, i32 31, i32 4
  %1064 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1063, align 8
  %1065 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1064, null
  br i1 %1065, label %1068, label %1066

1066:                                             ; preds = %1059
  %1067 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1064, i64 %1044) #6
  br label %1081

1068:                                             ; preds = %1059
  %1069 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1062, i64 0, i32 31, i32 0
  %1070 = load i64*, i64** %1069, align 8
  %1071 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1062, i64 0, i32 31, i32 1
  %1072 = load i64*, i64** %1071, align 8
  %1073 = icmp eq i64* %1070, %1072
  br i1 %1073, label %1074, label %1076

1074:                                             ; preds = %1068
  %1075 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1062) #6
  br label %1076

1076:                                             ; preds = %1074, %1068
  %1077 = phi i64* [ %1075, %1074 ], [ %1070, %1068 ]
  %1078 = ptrtoint i64* %1077 to i64
  %1079 = add i64 %1078, 8
  %1080 = inttoptr i64 %1079 to i64*
  store i64* %1080, i64** %1069, align 8
  store i64 %1044, i64* %1077, align 8
  br label %1081

1081:                                             ; preds = %1066, %1076
  %1082 = phi i64* [ %1067, %1066 ], [ %1077, %1076 ]
  %1083 = load i64, i64* %1049, align 8
  store i64 %1083, i64* %30, align 8
  %1084 = bitcast i64** %1054 to i64*
  %1085 = load i64, i64* %1084, align 8
  store i64 %1085, i64* %34, align 8
  %1086 = load i32, i32* %1051, align 8
  %1087 = add nsw i32 %1086, 1
  store i32 %1087, i32* %1051, align 8
  %1088 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %1089 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1088, i64 -1
  %1090 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1091 = icmp eq %"class.v8::internal::Isolate"* %1090, null
  %1092 = inttoptr i64 %1085 to i64*
  br i1 %1091, label %1093, label %1096

1093:                                             ; preds = %1081
  %1094 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1089 to i64*
  %1095 = load i64, i64* %1094, align 8
  store i64 %1095, i64* %47, align 8
  br label %1113

1096:                                             ; preds = %1081
  %1097 = inttoptr i64 %1083 to i64*
  %1098 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1090, i64 0, i32 31
  %1099 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1098, i64 0, i32 0
  %1100 = bitcast %"struct.v8::internal::HandleScopeData"* %1098 to i64*
  %1101 = load i64*, i64** %1099, align 8
  store i64 %1083, i64* %1100, align 8
  %1102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1090, i64 0, i32 31, i32 2
  %1103 = load i32, i32* %1102, align 8
  %1104 = add nsw i32 %1103, -1
  store i32 %1104, i32* %1102, align 8
  %1105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1090, i64 0, i32 31, i32 1
  %1106 = load i64*, i64** %1105, align 8
  %1107 = icmp eq i64* %1106, %1092
  br i1 %1107, label %1110, label %1108

1108:                                             ; preds = %1096
  store i64* %1092, i64** %1105, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1090) #6
  %1109 = load i64*, i64** %1099, align 8
  br label %1110

1110:                                             ; preds = %1108, %1096
  %1111 = phi i64* [ %1109, %1108 ], [ %1097, %1096 ]
  %1112 = phi i64* [ %1092, %1108 ], [ %1101, %1096 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1111, i64* %1112) #6
  br label %1113

1113:                                             ; preds = %1093, %1110
  %1114 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1088, i64 -1, i32 0, i32 1
  %1115 = bitcast i64** %1114 to i64*
  %1116 = load i64, i64* %1115, align 8
  store i64 %1116, i64* %30, align 8
  %1117 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1088, i64 -1, i32 0, i32 2
  %1118 = bitcast i64** %1117 to i64*
  %1119 = load i64, i64* %1118, align 8
  store i64 %1119, i64* %34, align 8
  %1120 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1089, i64 0, i32 0, i32 0
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %1120, align 8
  %1121 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1088, i64 -1, i32 1
  %1122 = bitcast i32* %1121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %1122, i64 12, i1 false) #6
  %1123 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %1124 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1123, i64 -1
  %1125 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1124, i64 0, i32 0, i32 0
  %1126 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1125, align 8
  %1127 = icmp eq %"class.v8::internal::Isolate"* %1126, null
  br i1 %1127, label %982, label %1128

1128:                                             ; preds = %1113
  %1129 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1123, i64 -1, i32 0, i32 1
  %1130 = load i64*, i64** %1129, align 8
  %1131 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1123, i64 -1, i32 0, i32 2
  %1132 = load i64*, i64** %1131, align 8
  %1133 = ptrtoint i64* %1130 to i64
  %1134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1126, i64 0, i32 31
  %1135 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1134, i64 0, i32 0
  %1136 = bitcast %"struct.v8::internal::HandleScopeData"* %1134 to i64*
  %1137 = load i64*, i64** %1135, align 8
  store i64 %1133, i64* %1136, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1126, i64 0, i32 31, i32 2
  %1139 = load i32, i32* %1138, align 8
  %1140 = add nsw i32 %1139, -1
  store i32 %1140, i32* %1138, align 8
  %1141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1126, i64 0, i32 31, i32 1
  %1142 = load i64*, i64** %1141, align 8
  %1143 = icmp eq i64* %1142, %1132
  br i1 %1143, label %1146, label %1144

1144:                                             ; preds = %1128
  store i64* %1132, i64** %1141, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1126) #6
  %1145 = load i64*, i64** %1135, align 8
  br label %1146

1146:                                             ; preds = %1144, %1128
  %1147 = phi i64* [ %1145, %1144 ], [ %1130, %1128 ]
  %1148 = phi i64* [ %1132, %1144 ], [ %1137, %1128 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1147, i64* %1148) #6
  br label %982

1149:                                             ; preds = %555, %1012, %695, %690
  store i8 13, i8* %42, align 8
  %1150 = load i16*, i16** %43, align 8
  %1151 = load i16*, i16** %44, align 8
  %1152 = icmp eq i16* %1150, %1151
  br i1 %1152, label %91, label %71

1153:                                             ; preds = %552, %483, %601
  %1154 = phi i64* [ %602, %601 ], [ null, %483 ], [ null, %552 ]
  %1155 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %28, align 8
  %1156 = icmp eq %"class.v8::internal::Isolate"* %1155, null
  br i1 %1156, label %1176, label %1157

1157:                                             ; preds = %1153
  %1158 = load i64*, i64** %29, align 8
  %1159 = load i64*, i64** %33, align 8
  %1160 = ptrtoint i64* %1158 to i64
  %1161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1155, i64 0, i32 31
  %1162 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1161, i64 0, i32 0
  %1163 = bitcast %"struct.v8::internal::HandleScopeData"* %1161 to i64*
  %1164 = load i64*, i64** %1162, align 8
  store i64 %1160, i64* %1163, align 8
  %1165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1155, i64 0, i32 31, i32 2
  %1166 = load i32, i32* %1165, align 8
  %1167 = add nsw i32 %1166, -1
  store i32 %1167, i32* %1165, align 8
  %1168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1155, i64 0, i32 31, i32 1
  %1169 = load i64*, i64** %1168, align 8
  %1170 = icmp eq i64* %1169, %1159
  br i1 %1170, label %1173, label %1171

1171:                                             ; preds = %1157
  store i64* %1159, i64** %1168, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1155) #6
  %1172 = load i64*, i64** %1162, align 8
  br label %1173

1173:                                             ; preds = %1171, %1157
  %1174 = phi i64* [ %1172, %1171 ], [ %1158, %1157 ]
  %1175 = phi i64* [ %1159, %1171 ], [ %1164, %1157 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1174, i64* %1175) #6
  br label %1176

1176:                                             ; preds = %1153, %1173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #6
  %1177 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %61, align 8
  %1178 = bitcast %"struct.std::__1::aligned_storage<128, 8>::type"* %17 to %"class.v8::internal::Handle.1129"*
  %1179 = icmp eq %"class.v8::internal::Handle.1129"* %1177, %1178
  br i1 %1179, label %1182, label %1180

1180:                                             ; preds = %1176
  %1181 = bitcast %"class.v8::internal::Handle.1129"* %1177 to i8*
  call void @free(i8* %1181) #6
  br label %1182

1182:                                             ; preds = %1176, %1180
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #6
  %1183 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %64, align 8
  %1184 = bitcast %"struct.std::__1::aligned_storage<384, 8>::type"* %9 to %"struct.v8::internal::JsonProperty"*
  %1185 = icmp eq %"struct.v8::internal::JsonProperty"* %1183, %1184
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1182
  %1187 = bitcast %"struct.v8::internal::JsonProperty"* %1183 to i8*
  call void @free(i8* %1187) #6
  br label %1188

1188:                                             ; preds = %1182, %1186
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %8) #6
  %1189 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %2, i64 0, i32 0, i32 0
  %1190 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %1189, align 8
  %1191 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1190, null
  br i1 %1191, label %1230, label %1192

1192:                                             ; preds = %1188
  %1193 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1190 to i8*
  %1194 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  %1195 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1194, %1190
  br i1 %1195, label %1228, label %1196

1196:                                             ; preds = %1192, %1223
  %1197 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %1198, %1223 ], [ %1194, %1192 ]
  %1198 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1197, i64 -1
  %1199 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1198, i64 0, i32 0, i32 0
  %1200 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1199, align 8
  %1201 = icmp eq %"class.v8::internal::Isolate"* %1200, null
  br i1 %1201, label %1223, label %1202

1202:                                             ; preds = %1196
  %1203 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1197, i64 -1, i32 0, i32 1
  %1204 = load i64*, i64** %1203, align 8
  %1205 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1197, i64 -1, i32 0, i32 2
  %1206 = load i64*, i64** %1205, align 8
  %1207 = ptrtoint i64* %1204 to i64
  %1208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1200, i64 0, i32 31
  %1209 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1208, i64 0, i32 0
  %1210 = bitcast %"struct.v8::internal::HandleScopeData"* %1208 to i64*
  %1211 = load i64*, i64** %1209, align 8
  store i64 %1207, i64* %1210, align 8
  %1212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1200, i64 0, i32 31, i32 2
  %1213 = load i32, i32* %1212, align 8
  %1214 = add nsw i32 %1213, -1
  store i32 %1214, i32* %1212, align 8
  %1215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1200, i64 0, i32 31, i32 1
  %1216 = load i64*, i64** %1215, align 8
  %1217 = icmp eq i64* %1216, %1206
  br i1 %1217, label %1220, label %1218

1218:                                             ; preds = %1202
  store i64* %1206, i64** %1215, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1200) #6
  %1219 = load i64*, i64** %1209, align 8
  br label %1220

1220:                                             ; preds = %1218, %1202
  %1221 = phi i64* [ %1219, %1218 ], [ %1204, %1202 ]
  %1222 = phi i64* [ %1206, %1218 ], [ %1211, %1202 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1221, i64* %1222) #6
  br label %1223

1223:                                             ; preds = %1220, %1196
  %1224 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1198, %1190
  br i1 %1224, label %1225, label %1196

1225:                                             ; preds = %1223
  %1226 = bitcast %"class.std::__1::vector.1182"* %2 to i8**
  %1227 = load i8*, i8** %1226, align 8
  br label %1228

1228:                                             ; preds = %1225, %1192
  %1229 = phi i8* [ %1227, %1225 ], [ %1193, %1192 ]
  store %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1190, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %45, align 8
  call void @_ZdlPv(i8* %1229) #14
  br label %1230

1230:                                             ; preds = %1188, %1228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #6
  ret i64* %1154

1231:                                             ; preds = %434
  %1232 = getelementptr inbounds i16, i16* %79, i64 2
  %1233 = load i16, i16* %1232, align 2
  %1234 = icmp eq i16 %1233, 108
  br i1 %1234, label %1235, label %438, !prof !5

1235:                                             ; preds = %1231
  %1236 = getelementptr inbounds i16, i16* %79, i64 3
  %1237 = load i16, i16* %1236, align 2
  %1238 = icmp eq i16 %1237, 108
  br i1 %1238, label %1239, label %438, !prof !5

1239:                                             ; preds = %1235
  %1240 = getelementptr inbounds i16, i16* %79, i64 4
  store i16* %1240, i16** %43, align 8
  br label %466

1241:                                             ; preds = %392
  %1242 = getelementptr inbounds i16, i16* %79, i64 2
  %1243 = load i16, i16* %1242, align 2
  %1244 = icmp eq i16 %1243, 108
  br i1 %1244, label %1245, label %396, !prof !5

1245:                                             ; preds = %1241
  %1246 = getelementptr inbounds i16, i16* %79, i64 3
  %1247 = load i16, i16* %1246, align 2
  %1248 = icmp eq i16 %1247, 115
  br i1 %1248, label %1249, label %396, !prof !5

1249:                                             ; preds = %1245
  %1250 = getelementptr inbounds i16, i16* %79, i64 4
  %1251 = load i16, i16* %1250, align 2
  %1252 = icmp eq i16 %1251, 101
  br i1 %1252, label %1253, label %396, !prof !5

1253:                                             ; preds = %1249
  %1254 = getelementptr inbounds i16, i16* %79, i64 5
  store i16* %1254, i16** %43, align 8
  br label %424

1255:                                             ; preds = %350
  %1256 = getelementptr inbounds i16, i16* %79, i64 2
  %1257 = load i16, i16* %1256, align 2
  %1258 = icmp eq i16 %1257, 117
  br i1 %1258, label %1259, label %354, !prof !5

1259:                                             ; preds = %1255
  %1260 = getelementptr inbounds i16, i16* %79, i64 3
  %1261 = load i16, i16* %1260, align 2
  %1262 = icmp eq i16 %1261, 101
  br i1 %1262, label %1263, label %354, !prof !5

1263:                                             ; preds = %1259
  %1264 = getelementptr inbounds i16, i16* %79, i64 4
  store i16* %1264, i16** %43, align 8
  br label %382
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal10JsonParserItE5CheckENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %5, %7
  br i1 %8, label %23, label %9

9:                                                ; preds = %2, %20
  %10 = phi i16* [ %21, %20 ], [ %5, %2 ]
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 256
  br i1 %12, label %13, label %18, !prof !2

13:                                               ; preds = %9
  %14 = zext i16 %11 to i64
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 9
  br i1 %17, label %20, label %18

18:                                               ; preds = %13, %9
  %19 = phi i8 [ %16, %13 ], [ 12, %9 ]
  store i8 %19, i8* %3, align 8
  br label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds i16, i16* %10, i64 1
  %22 = icmp eq i16* %21, %7
  br i1 %22, label %23, label %9

23:                                               ; preds = %20, %2, %18
  %24 = phi i8 [ %19, %18 ], [ 13, %2 ], [ 13, %20 ]
  %25 = phi i16* [ %10, %18 ], [ %5, %2 ], [ %7, %20 ]
  %26 = icmp eq i8 %24, %1
  %27 = getelementptr inbounds i16, i16* %25, i64 1
  %28 = select i1 %26, i16* %27, i16* %25
  store i16* %28, i16** %4, align 8
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::MessageLocation", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = trunc i64 %7 to i32
  %12 = icmp eq i32 %10, %11
  %13 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::Factory"*
  br i1 %12, label %14, label %109

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  br i1 %27, label %28, label %42

28:                                               ; preds = %14
  %29 = load atomic i32, i32* %20 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %18, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = and i16 %34, 7
  %36 = icmp eq i16 %35, 3
  br i1 %36, label %37, label %42

37:                                               ; preds = %28
  %38 = add i64 %17, 15
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = ashr i32 %40, 1
  br label %42

42:                                               ; preds = %14, %28, %37
  %43 = phi i32 [ %41, %37 ], [ 0, %28 ], [ 0, %14 ]
  %44 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %45 = bitcast i16** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %48 = bitcast i16** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %46, %49
  %51 = lshr exact i64 %50, 1
  %52 = trunc i64 %51 to i32
  %53 = sub nsw i32 %52, %43
  %54 = sext i32 %53 to i64
  %55 = shl nsw i64 %54, 1
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %42
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #6
  %61 = ptrtoint i64* %60 to i64
  br label %75

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #6
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %55, i64* %71, align 8
  br label %75

75:                                               ; preds = %59, %70
  %76 = phi i64 [ %61, %59 ], [ %72, %70 ]
  %77 = phi i64* [ %60, %59 ], [ %71, %70 ]
  switch i8 %1, label %80 [
    i8 13, label %85
    i8 0, label %78
    i8 1, label %79
  ]

78:                                               ; preds = %75
  br label %85

79:                                               ; preds = %75
  br label %85

80:                                               ; preds = %75
  %81 = load i16*, i16** %44, align 8
  %82 = load i16, i16* %81, align 2
  %83 = tail call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %13, i16 zeroext %82) #6
  %84 = ptrtoint i64* %83 to i64
  br label %85

85:                                               ; preds = %75, %80, %79, %78
  %86 = phi i64* [ %77, %80 ], [ null, %79 ], [ null, %78 ], [ null, %75 ]
  %87 = phi i64 [ %84, %80 ], [ %76, %79 ], [ %76, %78 ], [ %76, %75 ]
  %88 = phi i32 [ 282, %80 ], [ 284, %79 ], [ 283, %78 ], [ 281, %75 ]
  %89 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::FactoryBase"*
  %90 = load i64*, i64** %15, align 8
  %91 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"* %89, i64* %90) #6
  %92 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %93 = tail call zeroext i1 @_ZNK2v88internal7Isolate32NeedsSourcePositionsForProfilingEv(%"class.v8::internal::Isolate"* %92) #6
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %95, i64* %91) #6
  br label %96

96:                                               ; preds = %94, %85
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 68
  %99 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %98, align 8
  tail call void @_ZN2v88internal5Debug14OnCompileErrorENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Debug"* %99, i64* %91) #6
  %100 = bitcast %"class.v8::internal::MessageLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #6
  %101 = add nsw i32 %53, 1
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %3, i64* %91, i32 %53, i32 %101) #6
  %102 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %103 = inttoptr i64 %87 to i64*
  %104 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %13, i32 %88, i64* %103, i64* %86, i64* null) #6
  %105 = call i64 @_ZN2v88internal7Isolate7ThrowAtENS0_6HandleINS0_8JSObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %102, i64* %104, %"class.v8::internal::MessageLocation"* nonnull %3) #6
  %106 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %107 = bitcast i16** %106 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #6
  br label %109

109:                                              ; preds = %2, %96
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i8 @_ZNK2v88internal10JsonParserItE4peekEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE7advanceEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds i16, i16* %3, i64 1
  store i16* %4, i16** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserItE16CurrentCharacterEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  br i1 %6, label %10, label %7, !prof !3

7:                                                ; preds = %1
  %8 = load i16, i16* %3, align 2
  %9 = zext i16 %8 to i32
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i32 [ %9, %7 ], [ -1, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK2v88internal10JsonParserItE9is_at_endEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserItE13NextCharacterEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds i16, i16* %3, i64 1
  store i16* %4, i16** %2, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %4, %6
  br i1 %7, label %11, label %8, !prof !3

8:                                                ; preds = %1
  %9 = load i16, i16* %4, align 2
  %10 = zext i16 %9 to i32
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %10, %8 ], [ -1, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE19AdvanceToNonDecimalEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %13
  %8 = phi i16* [ %14, %13 ], [ %3, %1 ]
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 %10, -48
  %12 = icmp ugt i32 %11, 9
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds i16, i16* %8, i64 1
  %15 = icmp eq i16* %14, %5
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %13, %1
  %17 = phi i16* [ %3, %1 ], [ %8, %7 ], [ %5, %13 ]
  store i16* %17, i16** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE7ConsumeENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds i16, i16* %4, i64 1
  store i16* %5, i16** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE6ExpectENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, %1
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds i16, i16* %8, i64 1
  store i16* %9, i16** %7, align 8
  br label %11

10:                                               ; preds = %2
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %4)
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE10ExpectNextENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  store i8 13, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %5, %7
  br i1 %8, label %23, label %9

9:                                                ; preds = %2, %20
  %10 = phi i16* [ %21, %20 ], [ %5, %2 ]
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 256
  br i1 %12, label %13, label %18, !prof !2

13:                                               ; preds = %9
  %14 = zext i16 %11 to i64
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 9
  br i1 %17, label %20, label %18

18:                                               ; preds = %13, %9
  %19 = phi i8 [ %16, %13 ], [ 12, %9 ]
  store i8 %19, i8* %3, align 8
  br label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds i16, i16* %10, i64 1
  %22 = icmp eq i16* %21, %7
  br i1 %22, label %23, label %9

23:                                               ; preds = %20, %2, %18
  %24 = phi i8 [ %19, %18 ], [ 13, %2 ], [ 13, %20 ]
  %25 = phi i16* [ %10, %18 ], [ %5, %2 ], [ %7, %20 ]
  store i16* %25, i16** %4, align 8
  %26 = icmp eq i8 %24, %1
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %23
  %28 = getelementptr inbounds i16, i16* %25, i64 1
  store i16* %28, i16** %4, align 8
  br label %30

29:                                               ; preds = %23
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %24) #6
  br label %30

30:                                               ; preds = %27, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE14SkipWhitespaceEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 2
  store i8 13, i8* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %4, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %1, %19
  %9 = phi i16* [ %20, %19 ], [ %4, %1 ]
  %10 = load i16, i16* %9, align 2
  %11 = icmp ult i16 %10, 256
  br i1 %11, label %12, label %17, !prof !2

12:                                               ; preds = %8
  %13 = zext i16 %10 to i64
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 9
  br i1 %16, label %19, label %17

17:                                               ; preds = %12, %8
  %18 = phi i8 [ %15, %12 ], [ 12, %8 ]
  store i8 %18, i8* %2, align 8
  br label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds i16, i16* %9, i64 1
  %21 = icmp eq i16* %20, %6
  br i1 %21, label %22, label %8

22:                                               ; preds = %19, %1, %17
  %23 = phi i16* [ %9, %17 ], [ %4, %1 ], [ %6, %19 ]
  store i16* %23, i16** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden { i64, i32 } @_ZN2v88internal10JsonParserItE14ScanJsonStringEb(%"class.v8::internal::JsonParser.1175"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = lshr exact i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %13 = inttoptr i64 %5 to i16*
  br label %14

14:                                               ; preds = %110, %2
  %15 = phi i16* [ %13, %2 ], [ %114, %110 ]
  %16 = phi i32 [ 0, %2 ], [ %112, %110 ]
  %17 = phi i32 [ 0, %2 ], [ 4, %110 ]
  %18 = phi i32 [ %11, %2 ], [ %113, %110 ]
  %19 = load i16*, i16** %12, align 8
  %20 = icmp eq i16* %15, %19
  br i1 %20, label %40, label %21

21:                                               ; preds = %14, %35
  %22 = phi i32 [ %36, %35 ], [ %16, %14 ]
  %23 = phi i16* [ %37, %35 ], [ %15, %14 ]
  %24 = load i16, i16* %23, align 2
  %25 = icmp ugt i16 %24, 255
  br i1 %25, label %26, label %29, !prof !3

26:                                               ; preds = %21
  %27 = zext i16 %24 to i32
  %28 = or i32 %22, %27
  br label %35

29:                                               ; preds = %21
  %30 = zext i16 %24 to i64
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %29, %26
  %36 = phi i32 [ %28, %26 ], [ %22, %29 ]
  %37 = getelementptr inbounds i16, i16* %23, i64 1
  %38 = icmp eq i16* %37, %19
  br i1 %38, label %39, label %21

39:                                               ; preds = %35
  store i16* %19, i16** %3, align 8
  br label %44

40:                                               ; preds = %29, %14
  %41 = phi i32 [ %16, %14 ], [ %22, %29 ]
  %42 = phi i16* [ %15, %14 ], [ %23, %29 ]
  store i16* %42, i16** %3, align 8
  %43 = icmp eq i16* %42, %19
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %40, %39
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext 13) #6
  br label %123

45:                                               ; preds = %40
  %46 = load i16, i16* %42, align 2
  switch i16 %46, label %115 [
    i16 34, label %47
    i16 92, label %68
  ]

47:                                               ; preds = %45
  %48 = ptrtoint i16* %42 to i64
  %49 = load i64, i64* %7, align 8
  %50 = sub i64 %48, %49
  %51 = lshr exact i64 %50, 1
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds i16, i16* %42, i64 1
  store i16* %53, i16** %3, align 8
  %54 = sub nsw i32 %52, %18
  %55 = icmp ult i32 %41, 256
  %56 = zext i1 %55 to i32
  br i1 %1, label %61, label %57

57:                                               ; preds = %47
  %58 = icmp slt i32 %54, 11
  %59 = zext i1 %58 to i32
  %60 = shl nuw nsw i32 %59, 1
  br label %61

61:                                               ; preds = %47, %57
  %62 = phi i32 [ 2, %47 ], [ %60, %57 ]
  %63 = or i32 %17, %56
  %64 = zext i32 %54 to i64
  %65 = shl nuw i64 %64, 32
  %66 = and i64 %10, 4294967295
  %67 = or i32 %63, %62
  br label %123

68:                                               ; preds = %45
  %69 = getelementptr inbounds i16, i16* %42, i64 1
  store i16* %69, i16** %3, align 8
  %70 = icmp eq i16* %69, %19
  br i1 %70, label %74, label %71, !prof !3

71:                                               ; preds = %68
  %72 = load i16, i16* %69, align 2
  %73 = icmp ult i16 %72, 256
  br i1 %73, label %76, label %74, !prof !2

74:                                               ; preds = %68, %71
  %75 = phi i8 [ 13, %68 ], [ 12, %71 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %75) #6
  br label %123

76:                                               ; preds = %71
  %77 = zext i16 %72 to i64
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, 7
  switch i8 %80, label %109 [
    i8 1, label %81
    i8 2, label %81
    i8 3, label %81
    i8 4, label %81
    i8 5, label %81
    i8 6, label %81
    i8 7, label %83
    i8 0, label %105
  ]

81:                                               ; preds = %76, %76, %76, %76, %76, %76
  %82 = add nsw i32 %18, 1
  br label %110

83:                                               ; preds = %76
  %84 = tail call i32 @_ZN2v88internal10JsonParserItE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser.1175"* %0)
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %97

86:                                               ; preds = %83
  %87 = load i16*, i16** %3, align 8
  %88 = load i16*, i16** %12, align 8
  %89 = icmp eq i16* %87, %88
  br i1 %89, label %103, label %90, !prof !3

90:                                               ; preds = %86
  %91 = load i16, i16* %87, align 2
  %92 = icmp ult i16 %91, 256
  br i1 %92, label %93, label %103

93:                                               ; preds = %90
  %94 = zext i16 %91 to i64
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  br label %103

97:                                               ; preds = %83
  %98 = or i32 %84, %41
  %99 = icmp ugt i32 %84, 65535
  %100 = select i1 %99, i32 4, i32 5
  %101 = add nsw i32 %100, %18
  %102 = load i16*, i16** %3, align 8
  br label %110

103:                                              ; preds = %86, %93, %90
  %104 = phi i8 [ %96, %93 ], [ 12, %90 ], [ 13, %86 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %104) #6
  br label %123

105:                                              ; preds = %76
  %106 = zext i16 %72 to i64
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %108) #6
  br label %123

109:                                              ; preds = %76
  unreachable

110:                                              ; preds = %81, %97
  %111 = phi i16* [ %69, %81 ], [ %102, %97 ]
  %112 = phi i32 [ %41, %81 ], [ %98, %97 ]
  %113 = phi i32 [ %82, %81 ], [ %101, %97 ]
  %114 = getelementptr inbounds i16, i16* %111, i64 1
  store i16* %114, i16** %3, align 8
  br label %14

115:                                              ; preds = %45
  %116 = icmp ult i16 %46, 256
  br i1 %116, label %117, label %121

117:                                              ; preds = %115
  %118 = zext i16 %46 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  br label %121

121:                                              ; preds = %115, %117
  %122 = phi i8 [ %120, %117 ], [ 12, %115 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %122) #6
  br label %123

123:                                              ; preds = %44, %121, %74, %103, %105, %61
  %124 = phi i64 [ %66, %61 ], [ 0, %105 ], [ 0, %103 ], [ 0, %74 ], [ 0, %121 ], [ 0, %44 ]
  %125 = phi i64 [ %65, %61 ], [ 0, %105 ], [ 0, %103 ], [ 0, %74 ], [ 0, %121 ], [ 0, %44 ]
  %126 = phi i32 [ %67, %61 ], [ 0, %105 ], [ 0, %103 ], [ 0, %74 ], [ 0, %121 ], [ 0, %44 ]
  %127 = or i64 %125, %124
  %128 = insertvalue { i64, i32 } undef, i64 %127, 0
  %129 = insertvalue { i64, i32 } %128, i32 %126, 1
  ret { i64, i32 } %129
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2v88internal10JsonParserItE8positionEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %6 = bitcast i16** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 1
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE25ReportUnexpectedCharacterEj(%"class.v8::internal::JsonParser.1175"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = icmp ult i32 %1, 256
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  br label %10

10:                                               ; preds = %2, %4, %6
  %11 = phi i8 [ %9, %6 ], [ 12, %4 ], [ 13, %2 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10JsonParserItE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %4 = load i16*, i16** %2, align 8
  %5 = getelementptr inbounds i16, i16* %4, i64 1
  store i16* %5, i16** %2, align 8
  %6 = load i16*, i16** %3, align 8
  %7 = icmp eq i16* %5, %6
  br i1 %7, label %13, label %8, !prof !3

8:                                                ; preds = %1
  %9 = load i16, i16* %5, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 %10, -48
  %12 = icmp ult i32 %11, 10
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %8
  %14 = phi i32 [ %11, %8 ], [ -49, %1 ]
  %15 = or i32 %14, 32
  %16 = add nsw i32 %15, -49
  %17 = icmp ult i32 %16, 6
  %18 = add nsw i32 %15, -39
  %19 = select i1 %17, i32 %18, i32 -1
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0, !prof !2
  %22 = icmp sgt i32 %19, -1
  br i1 %22, label %23, label %27

23:                                               ; preds = %8, %13
  %24 = phi i32 [ %21, %13 ], [ %11, %8 ]
  %25 = getelementptr inbounds i16, i16* %4, i64 2
  store i16* %25, i16** %2, align 8
  %26 = icmp eq i16* %25, %6
  br i1 %26, label %37, label %29, !prof !3

27:                                               ; preds = %97, %85, %61, %37, %13
  %28 = phi i32 [ -1, %13 ], [ -1, %37 ], [ -1, %61 ], [ -1, %85 ], [ %98, %97 ]
  ret i32 %28

29:                                               ; preds = %23
  %30 = load i16, i16* %25, align 2
  %31 = zext i16 %30 to i32
  %32 = add nsw i32 %31, -48
  %33 = icmp ult i32 %32, 10
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = shl i32 %24, 4
  %36 = add i32 %32, %35
  br label %49

37:                                               ; preds = %29, %23
  %38 = phi i32 [ %32, %29 ], [ -49, %23 ]
  %39 = or i32 %38, 32
  %40 = add nsw i32 %39, -49
  %41 = icmp ult i32 %40, 6
  %42 = add nsw i32 %39, -39
  %43 = select i1 %41, i32 %42, i32 -1
  %44 = icmp slt i32 %43, 0
  %45 = shl i32 %24, 4
  %46 = add i32 %43, %45
  %47 = select i1 %44, i32 %24, i32 %46, !prof !3
  %48 = icmp sgt i32 %43, -1
  br i1 %48, label %49, label %27

49:                                               ; preds = %37, %34
  %50 = phi i32 [ %36, %34 ], [ %47, %37 ]
  %51 = getelementptr inbounds i16, i16* %4, i64 3
  store i16* %51, i16** %2, align 8
  %52 = icmp eq i16* %51, %6
  br i1 %52, label %61, label %53, !prof !3

53:                                               ; preds = %49
  %54 = load i16, i16* %51, align 2
  %55 = zext i16 %54 to i32
  %56 = add nsw i32 %55, -48
  %57 = icmp ult i32 %56, 10
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = shl i32 %50, 4
  %60 = add i32 %56, %59
  br label %73

61:                                               ; preds = %53, %49
  %62 = phi i32 [ %56, %53 ], [ -49, %49 ]
  %63 = or i32 %62, 32
  %64 = add nsw i32 %63, -49
  %65 = icmp ult i32 %64, 6
  %66 = add nsw i32 %63, -39
  %67 = select i1 %65, i32 %66, i32 -1
  %68 = icmp slt i32 %67, 0
  %69 = shl i32 %50, 4
  %70 = add i32 %67, %69
  %71 = select i1 %68, i32 %50, i32 %70, !prof !3
  %72 = icmp sgt i32 %67, -1
  br i1 %72, label %73, label %27

73:                                               ; preds = %61, %58
  %74 = phi i32 [ %60, %58 ], [ %71, %61 ]
  %75 = getelementptr inbounds i16, i16* %4, i64 4
  store i16* %75, i16** %2, align 8
  %76 = icmp eq i16* %75, %6
  br i1 %76, label %85, label %77, !prof !3

77:                                               ; preds = %73
  %78 = load i16, i16* %75, align 2
  %79 = zext i16 %78 to i32
  %80 = add nsw i32 %79, -48
  %81 = icmp ult i32 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = shl i32 %74, 4
  %84 = add i32 %80, %83
  br label %97

85:                                               ; preds = %77, %73
  %86 = phi i32 [ %80, %77 ], [ -49, %73 ]
  %87 = or i32 %86, 32
  %88 = add nsw i32 %87, -49
  %89 = icmp ult i32 %88, 6
  %90 = add nsw i32 %87, -39
  %91 = select i1 %89, i32 %90, i32 -1
  %92 = icmp slt i32 %91, 0
  %93 = shl i32 %74, 4
  %94 = add i32 %91, %93
  %95 = select i1 %92, i32 %74, i32 %94, !prof !3
  %96 = icmp sgt i32 %91, -1
  br i1 %96, label %97, label %27

97:                                               ; preds = %85, %82
  %98 = phi i32 [ %84, %82 ], [ %95, %85 ]
  br label %27
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden { i64, i32 } @_ZN2v88internal10JsonParserItE19ScanJsonPropertyKeyEPNS2_16JsonContinuationE(%"class.v8::internal::JsonParser.1175"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i16*
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %8 = load i16*, i16** %7, align 8
  %9 = icmp eq i16* %8, %6
  br i1 %9, label %98, label %10, !prof !3

10:                                               ; preds = %2
  %11 = load i16, i16* %6, align 2
  %12 = zext i16 %11 to i32
  %13 = icmp eq i16 %11, 92
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = getelementptr inbounds i16, i16* %6, i64 1
  store i16* %15, i16** %3, align 8
  %16 = icmp eq i16* %15, %8
  br i1 %16, label %98, label %17, !prof !3

17:                                               ; preds = %14
  %18 = load i16, i16* %15, align 2
  %19 = icmp eq i16 %18, 117
  br i1 %19, label %20, label %98

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN2v88internal10JsonParserItE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser.1175"* %0)
  br label %22

22:                                               ; preds = %20, %10
  %23 = phi i32 [ %21, %20 ], [ %12, %10 ]
  %24 = add i32 %23, -48
  %25 = icmp ult i32 %24, 10
  br i1 %25, label %26, label %98

26:                                               ; preds = %22
  %27 = icmp eq i32 %23, 48
  br i1 %27, label %28, label %41

28:                                               ; preds = %26
  %29 = load i16*, i16** %3, align 8
  %30 = getelementptr inbounds i16, i16* %29, i64 1
  store i16* %30, i16** %3, align 8
  %31 = load i16*, i16** %7, align 8
  %32 = icmp eq i16* %30, %31
  br i1 %32, label %98, label %33, !prof !3

33:                                               ; preds = %28
  %34 = load i16, i16* %30, align 2
  %35 = icmp eq i16 %34, 34
  br i1 %35, label %36, label %98

36:                                               ; preds = %33
  %37 = getelementptr inbounds i16, i16* %29, i64 2
  store i16* %37, i16** %3, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %106

41:                                               ; preds = %26, %86
  %42 = phi i32 [ %88, %86 ], [ %24, %26 ]
  %43 = load i16*, i16** %3, align 8
  %44 = getelementptr inbounds i16, i16* %43, i64 1
  %45 = load i16*, i16** %7, align 8
  %46 = icmp eq i16* %44, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %41, %59
  %48 = phi i32 [ %61, %59 ], [ %42, %41 ]
  %49 = phi i16* [ %62, %59 ], [ %44, %41 ]
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = add nsw i32 %51, -48
  %53 = icmp ult i32 %52, 10
  br i1 %53, label %54, label %65

54:                                               ; preds = %47
  %55 = add nsw i32 %51, -45
  %56 = ashr i32 %55, 3
  %57 = sub nuw nsw i32 429496729, %56
  %58 = icmp ugt i32 %48, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %54
  %60 = mul i32 %48, 10
  %61 = add i32 %52, %60
  %62 = getelementptr inbounds i16, i16* %49, i64 1
  %63 = icmp eq i16* %62, %45
  br i1 %63, label %64, label %47

64:                                               ; preds = %59
  store i16* %45, i16** %3, align 8
  br label %98

65:                                               ; preds = %47, %54, %41
  %66 = phi i32 [ %42, %41 ], [ %48, %54 ], [ %48, %47 ]
  %67 = phi i16* [ %44, %41 ], [ %49, %54 ], [ %49, %47 ]
  store i16* %67, i16** %3, align 8
  %68 = icmp eq i16* %67, %45
  br i1 %68, label %98, label %69, !prof !3

69:                                               ; preds = %65
  %70 = load i16, i16* %67, align 2
  switch i16 %70, label %98 [
    i16 34, label %89
    i16 92, label %71
  ]

71:                                               ; preds = %69
  %72 = getelementptr inbounds i16, i16* %67, i64 1
  store i16* %72, i16** %3, align 8
  %73 = icmp eq i16* %72, %45
  br i1 %73, label %98, label %74, !prof !3

74:                                               ; preds = %71
  %75 = load i16, i16* %72, align 2
  %76 = icmp eq i16 %75, 117
  br i1 %76, label %77, label %98

77:                                               ; preds = %74
  %78 = tail call i32 @_ZN2v88internal10JsonParserItE20ScanUnicodeCharacterEv(%"class.v8::internal::JsonParser.1175"* %0)
  %79 = add i32 %78, -48
  %80 = icmp ult i32 %79, 10
  br i1 %80, label %81, label %98

81:                                               ; preds = %77
  %82 = add nsw i32 %78, -45
  %83 = ashr i32 %82, 3
  %84 = sub nuw nsw i32 429496729, %83
  %85 = icmp ugt i32 %66, %84
  br i1 %85, label %98, label %86

86:                                               ; preds = %81
  %87 = mul i32 %66, 10
  %88 = add i32 %79, %87
  br label %41

89:                                               ; preds = %69
  %90 = getelementptr inbounds i16, i16* %67, i64 1
  store i16* %90, i16** %3, align 8
  %91 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 1
  store i32 %93, i32* %91, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp ult i32 %95, %66
  %97 = select i1 %96, i32 %66, i32 %95
  store i32 %97, i32* %94, align 4
  br label %106

98:                                               ; preds = %81, %77, %71, %65, %74, %69, %64, %28, %14, %2, %17, %33, %22
  store i64 %5, i64* %4, align 8
  %99 = tail call { i64, i32 } @_ZN2v88internal10JsonParserItE14ScanJsonStringEb(%"class.v8::internal::JsonParser.1175"* %0, i1 zeroext true)
  %100 = extractvalue { i64, i32 } %99, 0
  %101 = extractvalue { i64, i32 } %99, 1
  %102 = trunc i64 %100 to i32
  %103 = and i64 %100, -4294967296
  %104 = and i32 %101, -256
  %105 = and i32 %101, 255
  br label %106

106:                                              ; preds = %89, %36, %98
  %107 = phi i32 [ %105, %98 ], [ 8, %36 ], [ 8, %89 ]
  %108 = phi i64 [ %103, %98 ], [ 0, %36 ], [ 0, %89 ]
  %109 = phi i32 [ %102, %98 ], [ 0, %36 ], [ %66, %89 ]
  %110 = phi i32 [ %104, %98 ], [ 0, %36 ], [ 0, %89 ]
  %111 = zext i32 %109 to i64
  %112 = or i64 %108, %111
  %113 = or i32 %110, %107
  %114 = insertvalue { i64, i32 } undef, i64 %112, 0
  %115 = insertvalue { i64, i32 } %114, i32 %113, 1
  ret { i64, i32 } %115
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Vector.1181", align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 200
  %13 = bitcast %"class.v8::internal::Factory"* %12 to i64*
  br label %85

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = and i8 %16, 6
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %68

19:                                               ; preds = %14
  %20 = icmp eq i64* %2, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %23 = load i16*, i16** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = sext i32 %7 to i64
  %29 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = load i64, i64* %2, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %32, i16* %27, i64 %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br i1 %33, label %85, label %34

34:                                               ; preds = %21, %19
  %35 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 3
  %36 = load i8, i8* %35, align 1, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %40 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 6, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %6, align 4
  %46 = load i8, i8* %15, align 4
  %47 = and i8 %46, 1
  %48 = icmp ne i8 %47, 0
  %49 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %40, i64* %42, i32 %44, i32 %45, i1 zeroext %48) #6
  br label %85

50:                                               ; preds = %34
  %51 = bitcast %"class.v8::internal::Vector.1181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #6
  %52 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %53, i64 %56
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"class.v8::internal::Vector.1181", %"class.v8::internal::Vector.1181"* %5, i64 0, i32 0
  store i16* %57, i16** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Vector.1181", %"class.v8::internal::Vector.1181"* %5, i64 0, i32 1
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::FactoryBase"**
  %63 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %62, align 8
  %64 = load i8, i8* %15, align 4
  %65 = and i8 %64, 1
  %66 = icmp ne i8 %65, 0
  %67 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKtEEb(%"class.v8::internal::FactoryBase"* %63, %"class.v8::internal::Vector.1181"* nonnull dereferenceable(16) %5, i1 zeroext %66) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #6
  br label %85

68:                                               ; preds = %14
  %69 = and i8 %16, 1
  %70 = icmp eq i8 %69, 0
  %71 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::FactoryBase"**
  %72 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %71, align 8
  br i1 %70, label %79, label %73

73:                                               ; preds = %68
  %74 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %72, i32 %7, i8 zeroext 0) #6
  %75 = icmp eq i64* %74, null
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

77:                                               ; preds = %73
  %78 = tail call i64* @_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser.1175"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1, i64* nonnull %74, i64* %2)
  br label %85

79:                                               ; preds = %68
  %80 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %72, i32 %7, i8 zeroext 0) #6
  %81 = icmp eq i64* %80, null
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %79
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

83:                                               ; preds = %79
  %84 = tail call i64* @_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser.1175"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1, i64* nonnull %80, i64* %2)
  br label %85

85:                                               ; preds = %21, %83, %77, %50, %38, %9
  %86 = phi i64* [ %13, %9 ], [ %78, %77 ], [ %84, %83 ], [ %49, %38 ], [ %67, %50 ], [ %2, %21 ]
  ret i64* %86
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Factory"* @_ZN2v88internal10JsonParserItE7factoryEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %3 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %2, align 8
  ret %"class.v8::internal::Factory"* %3
}

declare i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"*, i64*, i32, i32, i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKtEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector.1181"* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  tail call void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8* %8, i16* %19, i64 %22)
  br label %46

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN2v88internal10JsonParserItE12DecodeStringIhEEvPT_ii(%"class.v8::internal::JsonParser.1175"* %0, i8* %8, i32 %25, i32 %27)
  %28 = load i8, i8* %9, align 4
  %29 = and i8 %28, 2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %23
  %32 = icmp eq i64* %3, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %26, align 4
  %35 = sext i32 %34 to i64
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = load i64, i64* %3, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %40 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %39, i8* %8, i64 %35) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br i1 %40, label %46, label %41

41:                                               ; preds = %31, %33
  %42 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = load i32, i32* %26, align 4
  %45 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqOneByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %43, i64* %2, i32 0, i32 %44, i1 zeroext false) #6
  br label %46

46:                                               ; preds = %23, %33, %13, %41
  %47 = phi i64* [ %45, %41 ], [ %2, %13 ], [ %3, %33 ], [ %2, %23 ]
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JsonParserItE12DecodeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEERKNS0_10JsonStringENS5_IT_EES7_(%"class.v8::internal::JsonParser.1175"*, %"class.v8::internal::JsonString"* dereferenceable(12), i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = load i64, i64* %2, align 8
  %7 = add i64 %6, 11
  %8 = inttoptr i64 %7 to i16*
  %9 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %76

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  switch i64 %22, label %72 [
    i64 1, label %23
    i64 2, label %25
    i64 3, label %29
    i64 4, label %32
    i64 5, label %36
    i64 6, label %39
    i64 7, label %42
    i64 8, label %45
    i64 9, label %48
    i64 10, label %51
    i64 11, label %54
    i64 12, label %57
    i64 13, label %60
    i64 14, label %63
    i64 15, label %66
    i64 16, label %69
    i64 0, label %99
  ]

23:                                               ; preds = %13
  %24 = load i16, i16* %19, align 2
  store i16 %24, i16* %8, align 2
  br label %99

25:                                               ; preds = %13
  %26 = bitcast i16* %19 to i32*
  %27 = inttoptr i64 %7 to i32*
  %28 = load i32, i32* %26, align 2
  store i32 %28, i32* %27, align 2
  br label %99

29:                                               ; preds = %13
  %30 = inttoptr i64 %7 to i8*
  %31 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %30, i8* align 2 %31, i64 6, i1 false) #6
  br label %99

32:                                               ; preds = %13
  %33 = bitcast i16* %19 to i64*
  %34 = inttoptr i64 %7 to i64*
  %35 = load i64, i64* %33, align 2
  store i64 %35, i64* %34, align 2
  br label %99

36:                                               ; preds = %13
  %37 = inttoptr i64 %7 to i8*
  %38 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %37, i8* align 2 %38, i64 10, i1 false) #6
  br label %99

39:                                               ; preds = %13
  %40 = inttoptr i64 %7 to i8*
  %41 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %40, i8* align 2 %41, i64 12, i1 false) #6
  br label %99

42:                                               ; preds = %13
  %43 = inttoptr i64 %7 to i8*
  %44 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %43, i8* align 2 %44, i64 14, i1 false) #6
  br label %99

45:                                               ; preds = %13
  %46 = inttoptr i64 %7 to i8*
  %47 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %46, i8* align 2 %47, i64 16, i1 false) #6
  br label %99

48:                                               ; preds = %13
  %49 = inttoptr i64 %7 to i8*
  %50 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %49, i8* align 2 %50, i64 18, i1 false) #6
  br label %99

51:                                               ; preds = %13
  %52 = inttoptr i64 %7 to i8*
  %53 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %52, i8* align 2 %53, i64 20, i1 false) #6
  br label %99

54:                                               ; preds = %13
  %55 = inttoptr i64 %7 to i8*
  %56 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %55, i8* align 2 %56, i64 22, i1 false) #6
  br label %99

57:                                               ; preds = %13
  %58 = inttoptr i64 %7 to i8*
  %59 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %58, i8* align 2 %59, i64 24, i1 false) #6
  br label %99

60:                                               ; preds = %13
  %61 = inttoptr i64 %7 to i8*
  %62 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %61, i8* align 2 %62, i64 26, i1 false) #6
  br label %99

63:                                               ; preds = %13
  %64 = inttoptr i64 %7 to i8*
  %65 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %64, i8* align 2 %65, i64 28, i1 false) #6
  br label %99

66:                                               ; preds = %13
  %67 = inttoptr i64 %7 to i8*
  %68 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %67, i8* align 2 %68, i64 30, i1 false) #6
  br label %99

69:                                               ; preds = %13
  %70 = inttoptr i64 %7 to i8*
  %71 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %70, i8* align 2 %71, i64 32, i1 false) #6
  br label %99

72:                                               ; preds = %13
  %73 = shl nuw nsw i64 %22, 1
  %74 = inttoptr i64 %7 to i8*
  %75 = bitcast i16* %19 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %74, i8* align 2 %75, i64 %73, i1 false) #6
  br label %99

76:                                               ; preds = %4
  %77 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.v8::internal::JsonString", %"class.v8::internal::JsonString"* %1, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  tail call void @_ZN2v88internal10JsonParserItE12DecodeStringItEEvPT_ii(%"class.v8::internal::JsonParser.1175"* %0, i16* %8, i32 %78, i32 %80)
  %81 = load i8, i8* %9, align 4
  %82 = and i8 %81, 2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %99, label %84

84:                                               ; preds = %76
  %85 = icmp eq i64* %3, null
  br i1 %85, label %94, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %79, align 4
  %88 = sext i32 %87 to i64
  %89 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #6
  %90 = load i64, i64* %3, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %93 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %92, i16* %8, i64 %88) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #6
  br i1 %93, label %99, label %94

94:                                               ; preds = %84, %86
  %95 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %96 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %95, align 8
  %97 = load i32, i32* %79, align 4
  %98 = call i64* @_ZN2v88internal7Factory17InternalizeStringINS0_16SeqTwoByteStringEEENS0_6HandleINS0_6StringEEENS4_IT_EEiib(%"class.v8::internal::Factory"* %96, i64* %2, i32 0, i32 %97, i1 zeroext false) #6
  br label %99

99:                                               ; preds = %76, %72, %69, %66, %63, %60, %57, %54, %51, %48, %45, %42, %39, %36, %32, %29, %25, %23, %13, %86, %94
  %100 = phi i64* [ %98, %94 ], [ %3, %86 ], [ %2, %13 ], [ %2, %23 ], [ %2, %25 ], [ %2, %29 ], [ %2, %32 ], [ %2, %36 ], [ %2, %39 ], [ %2, %42 ], [ %2, %45 ], [ %2, %48 ], [ %2, %51 ], [ %2, %54 ], [ %2, %57 ], [ %2, %60 ], [ %2, %63 ], [ %2, %66 ], [ %2, %69 ], [ %2, %72 ], [ %2, %76 ]
  ret i64* %100
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE15ParseJsonNumberEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %3 = load i16*, i16** %2, align 8
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 45
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds i16, i16* %3, i64 1
  store i16* %7, i16** %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %9 = load i16*, i16** %8, align 8
  %10 = icmp eq i16* %7, %9
  br i1 %10, label %86, label %11, !prof !3

11:                                               ; preds = %6
  %12 = load i16, i16* %7, align 2
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i16* [ %3, %1 ], [ %7, %11 ]
  %15 = phi i16 [ %4, %1 ], [ %12, %11 ]
  %16 = phi i32 [ 1, %1 ], [ -1, %11 ]
  %17 = ptrtoint i16* %14 to i64
  %18 = icmp eq i16 %15, 48
  br i1 %18, label %19, label %82

19:                                               ; preds = %13
  %20 = getelementptr inbounds i16, i16* %14, i64 1
  store i16* %20, i16** %2, align 8
  %21 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %22 = load i16*, i16** %21, align 8
  %23 = icmp eq i16* %20, %22
  %24 = ptrtoint i16* %20 to i64
  br i1 %23, label %59, label %25, !prof !3

25:                                               ; preds = %19
  %26 = load i16, i16* %20, align 2
  %27 = zext i16 %26 to i32
  %28 = icmp ult i16 %26, 256
  br i1 %28, label %29, label %59

29:                                               ; preds = %25
  %30 = zext i16 %26 to i64
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 16
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %29
  %36 = add nsw i32 %27, -48
  %37 = icmp ult i32 %36, 10
  br i1 %37, label %38, label %230, !prof !3

38:                                               ; preds = %35
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext 0)
  %39 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 0) #6
  br label %408

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %40) #6
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 0, i64* %55, align 8
  br label %408

59:                                               ; preds = %29, %19, %25
  %60 = icmp sgt i32 %16, 0
  br i1 %60, label %61, label %230

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %63, i64 0, i32 31, i32 4
  %65 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %64, align 8
  %66 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %65, i64 0) #6
  br label %408

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %63, i64 0, i32 31, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %63, i64 0, i32 31, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %63) #6
  br label %77

77:                                               ; preds = %75, %69
  %78 = phi i64* [ %76, %75 ], [ %71, %69 ]
  %79 = ptrtoint i64* %78 to i64
  %80 = add i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  store i64* %81, i64** %70, align 8
  store i64 0, i64* %78, align 8
  br label %408

82:                                               ; preds = %13
  %83 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %84 = load i16*, i16** %83, align 8
  %85 = icmp eq i16* %14, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %82, %6
  %87 = phi i16* [ %84, %82 ], [ %7, %6 ]
  store i16* %87, i16** %2, align 8
  br label %109

88:                                               ; preds = %82, %94
  %89 = phi i16* [ %95, %94 ], [ %14, %82 ]
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %91, -48
  %93 = icmp ugt i32 %92, 9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds i16, i16* %89, i64 1
  %96 = icmp eq i16* %95, %84
  br i1 %96, label %97, label %88

97:                                               ; preds = %88, %94
  %98 = phi i16* [ %89, %88 ], [ %84, %94 ]
  store i16* %98, i16** %2, align 8
  %99 = icmp eq i16* %14, %98
  %100 = ptrtoint i16* %98 to i64
  br i1 %99, label %101, label %131, !prof !3

101:                                              ; preds = %97
  br i1 %85, label %109, label %102, !prof !3

102:                                              ; preds = %101
  %103 = load i16, i16* %14, align 2
  %104 = icmp ult i16 %103, 256
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = zext i16 %103 to i64
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  br label %109

109:                                              ; preds = %86, %101, %102, %105
  %110 = phi i8 [ %108, %105 ], [ 12, %102 ], [ 13, %101 ], [ 13, %86 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %110) #6
  %111 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 4
  %114 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %113, align 8
  %115 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %109
  %117 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %114, i64 0) #6
  br label %408

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 1
  %122 = load i64*, i64** %121, align 8
  %123 = icmp eq i64* %120, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %112) #6
  br label %126

126:                                              ; preds = %124, %118
  %127 = phi i64* [ %125, %124 ], [ %120, %118 ]
  %128 = ptrtoint i64* %127 to i64
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to i64*
  store i64* %130, i64** %119, align 8
  store i64 0, i64* %127, align 8
  br label %408

131:                                              ; preds = %97
  %132 = icmp eq i16* %98, %84
  br i1 %132, label %136, label %133, !prof !3

133:                                              ; preds = %131
  %134 = load i16, i16* %98, align 2
  %135 = zext i16 %134 to i32
  br label %136

136:                                              ; preds = %131, %133
  %137 = phi i32 [ %135, %133 ], [ -1, %131 ]
  %138 = sub i64 %100, %17
  %139 = icmp slt i64 %138, 20
  br i1 %139, label %140, label %230

140:                                              ; preds = %136
  %141 = icmp ult i32 %137, 256
  br i1 %141, label %142, label %148

142:                                              ; preds = %140
  %143 = zext i32 %137 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = and i8 %145, 16
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %230

148:                                              ; preds = %140, %142
  %149 = getelementptr i16, i16* %98, i64 -1
  %150 = ptrtoint i16* %149 to i64
  %151 = sub i64 %150, %17
  %152 = lshr i64 %151, 1
  %153 = add nuw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp ult i64 %151, 6
  br i1 %155, label %188, label %156

156:                                              ; preds = %148
  %157 = sub i64 %153, %154
  br label %158

158:                                              ; preds = %158, %156
  %159 = phi i16* [ %14, %156 ], [ %185, %158 ]
  %160 = phi i32 [ 0, %156 ], [ %184, %158 ]
  %161 = phi i64 [ %157, %156 ], [ %186, %158 ]
  %162 = mul nsw i32 %160, 10
  %163 = load i16, i16* %159, align 2
  %164 = zext i16 %163 to i32
  %165 = add i32 %162, -48
  %166 = add i32 %165, %164
  %167 = getelementptr inbounds i16, i16* %159, i64 1
  %168 = mul nsw i32 %166, 10
  %169 = load i16, i16* %167, align 2
  %170 = zext i16 %169 to i32
  %171 = add i32 %168, -48
  %172 = add i32 %171, %170
  %173 = getelementptr inbounds i16, i16* %159, i64 2
  %174 = mul nsw i32 %172, 10
  %175 = load i16, i16* %173, align 2
  %176 = zext i16 %175 to i32
  %177 = add i32 %174, -48
  %178 = add i32 %177, %176
  %179 = getelementptr inbounds i16, i16* %159, i64 3
  %180 = mul nsw i32 %178, 10
  %181 = load i16, i16* %179, align 2
  %182 = zext i16 %181 to i32
  %183 = add i32 %180, -48
  %184 = add i32 %183, %182
  %185 = getelementptr inbounds i16, i16* %159, i64 4
  %186 = add i64 %161, -4
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %158

188:                                              ; preds = %158, %148
  %189 = phi i32 [ undef, %148 ], [ %184, %158 ]
  %190 = phi i16* [ %14, %148 ], [ %185, %158 ]
  %191 = phi i32 [ 0, %148 ], [ %184, %158 ]
  %192 = icmp eq i64 %154, 0
  br i1 %192, label %205, label %193

193:                                              ; preds = %188, %193
  %194 = phi i16* [ %202, %193 ], [ %190, %188 ]
  %195 = phi i32 [ %201, %193 ], [ %191, %188 ]
  %196 = phi i64 [ %203, %193 ], [ %154, %188 ]
  %197 = mul nsw i32 %195, 10
  %198 = load i16, i16* %194, align 2
  %199 = zext i16 %198 to i32
  %200 = add i32 %197, -48
  %201 = add i32 %200, %199
  %202 = getelementptr inbounds i16, i16* %194, i64 1
  %203 = add i64 %196, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %193, !llvm.loop !6

205:                                              ; preds = %193, %188
  %206 = phi i32 [ %189, %188 ], [ %201, %193 ]
  %207 = mul nsw i32 %206, %16
  %208 = sext i32 %207 to i64
  %209 = shl nsw i64 %208, 1
  %210 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %211 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 4
  %213 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %212, align 8
  %214 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %205
  %216 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %213, i64 %209) #6
  br label %408

217:                                              ; preds = %205
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 0
  %219 = load i64*, i64** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 1
  %221 = load i64*, i64** %220, align 8
  %222 = icmp eq i64* %219, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %217
  %224 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %211) #6
  br label %225

225:                                              ; preds = %223, %217
  %226 = phi i64* [ %224, %223 ], [ %219, %217 ]
  %227 = ptrtoint i64* %226 to i64
  %228 = add i64 %227, 8
  %229 = inttoptr i64 %228 to i64*
  store i64* %229, i64** %218, align 8
  store i64 %209, i64* %226, align 8
  br label %408

230:                                              ; preds = %142, %136, %35, %59
  %231 = phi i64 [ %100, %142 ], [ %100, %136 ], [ %24, %35 ], [ %24, %59 ]
  %232 = phi i16* [ %84, %142 ], [ %84, %136 ], [ %22, %35 ], [ %22, %59 ]
  %233 = phi i16* [ %98, %142 ], [ %98, %136 ], [ %20, %35 ], [ %20, %59 ]
  %234 = icmp eq i16* %233, %232
  br i1 %234, label %360, label %235, !prof !3

235:                                              ; preds = %230
  %236 = load i16, i16* %233, align 2
  %237 = icmp eq i16 %236, 46
  br i1 %237, label %238, label %290

238:                                              ; preds = %235
  %239 = getelementptr inbounds i16, i16* %233, i64 1
  store i16* %239, i16** %2, align 8
  %240 = icmp eq i16* %239, %232
  br i1 %240, label %256, label %241, !prof !3

241:                                              ; preds = %238
  %242 = load i16, i16* %239, align 2
  %243 = zext i16 %242 to i32
  %244 = add nsw i32 %243, -48
  %245 = icmp ult i32 %244, 10
  br i1 %245, label %246, label %250

246:                                              ; preds = %241
  %247 = zext i16 %242 to i32
  %248 = add nsw i32 %247, -48
  %249 = icmp ugt i32 %248, 9
  br i1 %249, label %287, label %278

250:                                              ; preds = %241
  %251 = icmp ult i16 %242, 256
  br i1 %251, label %252, label %256

252:                                              ; preds = %250
  %253 = zext i16 %242 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  br label %256

256:                                              ; preds = %238, %250, %252
  %257 = phi i8 [ %255, %252 ], [ 12, %250 ], [ 13, %238 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %257) #6
  %258 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %259 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %258, align 8
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %259, i64 0, i32 31, i32 4
  %261 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %260, align 8
  %262 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %256
  %264 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %261, i64 0) #6
  br label %408

265:                                              ; preds = %256
  %266 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %259, i64 0, i32 31, i32 0
  %267 = load i64*, i64** %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %259, i64 0, i32 31, i32 1
  %269 = load i64*, i64** %268, align 8
  %270 = icmp eq i64* %267, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %265
  %272 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %259) #6
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi i64* [ %272, %271 ], [ %267, %265 ]
  %275 = ptrtoint i64* %274 to i64
  %276 = add i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  store i64* %277, i64** %266, align 8
  store i64 0, i64* %274, align 8
  br label %408

278:                                              ; preds = %246, %282
  %279 = phi i16* [ %280, %282 ], [ %239, %246 ]
  %280 = getelementptr inbounds i16, i16* %279, i64 1
  %281 = icmp eq i16* %280, %232
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = load i16, i16* %280, align 2
  %284 = zext i16 %283 to i32
  %285 = add nsw i32 %284, -48
  %286 = icmp ugt i32 %285, 9
  br i1 %286, label %287, label %278

287:                                              ; preds = %282, %278, %246
  %288 = phi i16* [ %239, %246 ], [ %280, %282 ], [ %232, %278 ]
  store i16* %288, i16** %2, align 8
  %289 = ptrtoint i16* %288 to i64
  br label %290

290:                                              ; preds = %287, %235
  %291 = phi i64 [ %289, %287 ], [ %231, %235 ]
  %292 = phi i16* [ %288, %287 ], [ %233, %235 ]
  %293 = icmp eq i16* %292, %232
  br i1 %293, label %360, label %294, !prof !3

294:                                              ; preds = %290
  %295 = load i16, i16* %292, align 2
  %296 = or i16 %295, 32
  %297 = icmp eq i16 %296, 101
  br i1 %297, label %298, label %360

298:                                              ; preds = %294
  %299 = getelementptr inbounds i16, i16* %292, i64 1
  store i16* %299, i16** %2, align 8
  %300 = icmp eq i16* %299, %232
  br i1 %300, label %320, label %301, !prof !3

301:                                              ; preds = %298
  %302 = load i16, i16* %299, align 2
  switch i16 %302, label %308 [
    i16 45, label %303
    i16 43, label %303
  ]

303:                                              ; preds = %301, %301
  %304 = getelementptr inbounds i16, i16* %292, i64 2
  store i16* %304, i16** %2, align 8
  %305 = icmp eq i16* %304, %232
  br i1 %305, label %320, label %306, !prof !3

306:                                              ; preds = %303
  %307 = load i16, i16* %304, align 2
  br label %308

308:                                              ; preds = %306, %301
  %309 = phi i16* [ %299, %301 ], [ %304, %306 ]
  %310 = phi i16 [ %302, %301 ], [ %307, %306 ]
  %311 = zext i16 %310 to i32
  %312 = add nsw i32 %311, -48
  %313 = icmp ult i32 %312, 10
  br i1 %313, label %342, label %314

314:                                              ; preds = %308
  %315 = icmp ult i16 %310, 256
  br i1 %315, label %316, label %320

316:                                              ; preds = %314
  %317 = zext i16 %310 to i64
  %318 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internal12_GLOBAL__N_120one_char_json_tokensE, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  br label %320

320:                                              ; preds = %303, %298, %314, %316
  %321 = phi i8 [ %319, %316 ], [ 12, %314 ], [ 13, %298 ], [ 13, %303 ]
  tail call void @_ZN2v88internal10JsonParserItE21ReportUnexpectedTokenENS0_9JsonTokenE(%"class.v8::internal::JsonParser.1175"* %0, i8 zeroext %321) #6
  %322 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %323 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %323, i64 0, i32 31, i32 4
  %325 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %324, align 8
  %326 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %325, null
  br i1 %326, label %329, label %327

327:                                              ; preds = %320
  %328 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %325, i64 0) #6
  br label %408

329:                                              ; preds = %320
  %330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %323, i64 0, i32 31, i32 0
  %331 = load i64*, i64** %330, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %323, i64 0, i32 31, i32 1
  %333 = load i64*, i64** %332, align 8
  %334 = icmp eq i64* %331, %333
  br i1 %334, label %335, label %337

335:                                              ; preds = %329
  %336 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %323) #6
  br label %337

337:                                              ; preds = %335, %329
  %338 = phi i64* [ %336, %335 ], [ %331, %329 ]
  %339 = ptrtoint i64* %338 to i64
  %340 = add i64 %339, 8
  %341 = inttoptr i64 %340 to i64*
  store i64* %341, i64** %330, align 8
  store i64 0, i64* %338, align 8
  br label %408

342:                                              ; preds = %308
  %343 = icmp eq i16* %309, %232
  br i1 %343, label %357, label %344

344:                                              ; preds = %342
  %345 = zext i16 %310 to i32
  %346 = add nsw i32 %345, -48
  %347 = icmp ugt i32 %346, 9
  br i1 %347, label %357, label %348

348:                                              ; preds = %344, %352
  %349 = phi i16* [ %350, %352 ], [ %309, %344 ]
  %350 = getelementptr inbounds i16, i16* %349, i64 1
  %351 = icmp eq i16* %350, %232
  br i1 %351, label %357, label %352

352:                                              ; preds = %348
  %353 = load i16, i16* %350, align 2
  %354 = zext i16 %353 to i32
  %355 = add nsw i32 %354, -48
  %356 = icmp ugt i32 %355, 9
  br i1 %356, label %357, label %348

357:                                              ; preds = %352, %348, %344, %342
  %358 = phi i16* [ %232, %342 ], [ %309, %344 ], [ %232, %348 ], [ %350, %352 ]
  store i16* %358, i16** %2, align 8
  %359 = ptrtoint i16* %358 to i64
  br label %360

360:                                              ; preds = %230, %290, %357, %294
  %361 = phi i64 [ %291, %290 ], [ %359, %357 ], [ %291, %294 ], [ %231, %230 ]
  %362 = ptrtoint i16* %3 to i64
  %363 = sub i64 %361, %362
  %364 = ashr exact i64 %363, 1
  %365 = tail call double @_ZN2v88internal14StringToDoubleENS0_6VectorIKtEEid(i16* %3, i64 %364, i32 0, double 0x7FF8000000000000) #6
  %366 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::FactoryBase"**
  %367 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %366, align 8
  %368 = fcmp ult double %365, 0xC1D0000000000000
  %369 = fcmp ugt double %365, 0x41CFFFFFFF800000
  %370 = or i1 %369, %368
  %371 = bitcast double %365 to i64
  %372 = icmp eq i64 %371, -9223372036854775808
  %373 = or i1 %370, %372
  br i1 %373, label %403, label %374

374:                                              ; preds = %360
  %375 = fptosi double %365 to i32
  %376 = sitofp i32 %375 to double
  %377 = fcmp oeq double %365, %376
  br i1 %377, label %378, label %403

378:                                              ; preds = %374
  %379 = sext i32 %375 to i64
  %380 = shl nsw i64 %379, 1
  %381 = bitcast %"class.v8::internal::FactoryBase"* %367 to %"class.v8::internal::Isolate"*
  %382 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %367, i64 45608
  %383 = bitcast %"class.v8::internal::FactoryBase"* %382 to %"class.v8::internal::CanonicalHandleScope"**
  %384 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %383, align 8
  %385 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %378
  %387 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %384, i64 %380) #6
  br label %408

388:                                              ; preds = %378
  %389 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %367, i64 45584
  %390 = bitcast %"class.v8::internal::FactoryBase"* %389 to i64**
  %391 = load i64*, i64** %390, align 8
  %392 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %367, i64 45592
  %393 = bitcast %"class.v8::internal::FactoryBase"* %392 to i64**
  %394 = load i64*, i64** %393, align 8
  %395 = icmp eq i64* %391, %394
  br i1 %395, label %396, label %398

396:                                              ; preds = %388
  %397 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %381) #6
  br label %398

398:                                              ; preds = %396, %388
  %399 = phi i64* [ %397, %396 ], [ %391, %388 ]
  %400 = ptrtoint i64* %399 to i64
  %401 = add i64 %400, 8
  %402 = inttoptr i64 %401 to i64*
  store i64* %402, i64** %390, align 8
  store i64 %380, i64* %399, align 8
  br label %408

403:                                              ; preds = %374, %360
  %404 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %367) #6
  %405 = load i64, i64* %404, align 8
  %406 = add i64 %405, 3
  %407 = inttoptr i64 %406 to double*
  store double %365, double* %407, align 1
  br label %408

408:                                              ; preds = %337, %327, %273, %263, %225, %215, %126, %116, %77, %67, %54, %44, %403, %398, %386
  %409 = phi i64* [ %404, %403 ], [ %387, %386 ], [ %399, %398 ], [ %78, %77 ], [ %68, %67 ], [ %55, %54 ], [ %45, %44 ], [ %226, %225 ], [ %216, %215 ], [ %127, %126 ], [ %117, %116 ], [ %274, %273 ], [ %264, %263 ], [ %338, %337 ], [ %328, %327 ]
  ret i64* %409
}

declare double @_ZN2v88internal14StringToDoubleENS0_6VectorIKtEEid(i16*, i64, i32, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.1182"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1182"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  br i1 %10, label %12, label %98

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %13 to i64*
  %15 = icmp ugt i64 %1, 461168601842738790
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #15
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 40
  %21 = mul i64 %1, 40
  %22 = tail call i8* @_Znwm(i64 %21) #14
  %23 = bitcast i8* %22 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  %24 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %23, i64 %20
  %25 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %24 to i64
  %26 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %23, i64 %1
  %27 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  %29 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %28, %11
  br i1 %29, label %59, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %32, i64 -1
  %35 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %34, i64 0, i32 0, i32 0
  %36 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %31, i64 -1, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %32, i64 -1, i32 0, i32 1
  %41 = bitcast i64** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i64** %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %31, i64 -1, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %32, i64 -1, i32 0, i32 2
  %46 = bitcast i64** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i64** %44 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %35, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %31, i64 -1, i32 1
  %50 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %32, i64 -1, i32 1
  %51 = bitcast i32* %49 to i8*
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 12, i1 false) #6
  %53 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %34, %11
  br i1 %53, label %54, label %30

54:                                               ; preds = %30
  %55 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33 to i64
  %56 = load i64, i64* %6, align 8
  %57 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %13, align 8
  %58 = inttoptr i64 %56 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  br label %59

59:                                               ; preds = %17, %54
  %60 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %58, %54 ], [ %28, %17 ]
  %61 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %57, %54 ], [ %11, %17 ]
  %62 = phi i64 [ %55, %54 ], [ %25, %17 ]
  %63 = phi i64 [ %56, %54 ], [ %18, %17 ]
  store i64 %62, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %64 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %61, %60
  br i1 %64, label %94, label %65

65:                                               ; preds = %59, %92
  %66 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %67, %92 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %66, i64 -1
  %68 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %68, align 8
  %70 = icmp eq %"class.v8::internal::Isolate"* %69, null
  br i1 %70, label %92, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %66, i64 -1, i32 0, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %66, i64 -1, i32 0, i32 2
  %75 = load i64*, i64** %74, align 8
  %76 = ptrtoint i64* %73 to i64
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31
  %78 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %77, i64 0, i32 0
  %79 = bitcast %"struct.v8::internal::HandleScopeData"* %77 to i64*
  %80 = load i64*, i64** %78, align 8
  store i64 %76, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %81, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 1
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %85, %75
  br i1 %86, label %89, label %87

87:                                               ; preds = %71
  store i64* %75, i64** %84, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %69) #6
  %88 = load i64*, i64** %78, align 8
  br label %89

89:                                               ; preds = %87, %71
  %90 = phi i64* [ %88, %87 ], [ %73, %71 ]
  %91 = phi i64* [ %75, %87 ], [ %80, %71 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %90, i64* %91) #6
  br label %92

92:                                               ; preds = %89, %65
  %93 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %67, %60
  br i1 %93, label %94, label %65

94:                                               ; preds = %92, %59
  %95 = icmp eq i64 %63, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %96, %94, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE15BuildJsonObjectERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_12JsonPropertyELm16EEENS0_6HandleINS0_3MapEEE(%"class.v8::internal::JsonParser.1175"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* dereferenceable(40), %"class.v8::base::SmallVector"* dereferenceable(408), i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Representation", align 1
  %9 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %10 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::FieldType", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::LookupIterator", align 8
  %15 = ptrtoint i64* %3 to i64
  %16 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 2
  %19 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 1
  %20 = bitcast %"struct.v8::internal::JsonProperty"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::base::SmallVector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 24
  %26 = trunc i64 %25 to i32
  %27 = sub i32 %26, %18
  %28 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = sub i32 %27, %29
  %31 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %32 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 0
  %34 = bitcast %"class.v8::internal::Factory"* %32 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 13840
  %36 = bitcast %"class.v8::internal::Factory"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 19
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %38, %47
  %49 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45608
  %50 = bitcast %"class.v8::internal::Factory"* %49 to %"class.v8::internal::CanonicalHandleScope"**
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %50, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %4
  %54 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %48) #6
  br label %70

55:                                               ; preds = %4
  %56 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45584
  %57 = bitcast %"class.v8::internal::Factory"* %56 to i64**
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %32, i64 45592
  %60 = bitcast %"class.v8::internal::Factory"* %59 to i64**
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %58, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #6
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i64* [ %64, %63 ], [ %58, %55 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %57, align 8
  store i64 %48, i64* %66, align 8
  br label %70

70:                                               ; preds = %53, %65
  %71 = phi i64* [ %54, %53 ], [ %66, %65 ]
  %72 = tail call i64* @_ZN2v88internal7Factory25ObjectLiteralMapFromCacheENS0_6HandleINS0_13NativeContextEEEi(%"class.v8::internal::Factory"* %32, i64* %71, i32 %30) #6
  %73 = ptrtoint i64* %72 to i64
  %74 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %74, i64 360
  %76 = bitcast %"class.v8::internal::Factory"* %75 to i64*
  %77 = load i32, i32* %28, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %222, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  %83 = ashr i32 %77, 1
  %84 = add nsw i32 %83, %77
  %85 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %84) #6
  %86 = icmp sgt i32 %85, 4
  %87 = select i1 %86, i32 %85, i32 4
  %88 = mul i32 %87, 9
  %89 = icmp ugt i32 %88, %82
  br i1 %89, label %124, label %90

90:                                               ; preds = %79
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %92 = load i32, i32* %28, align 8
  %93 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %91, i32 %92, i8 zeroext 0, i32 0) #6
  %94 = icmp sgt i32 %27, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %97 = zext i32 %18 to i64
  %98 = zext i32 %27 to i64
  br label %104

99:                                               ; preds = %120, %90
  %100 = phi i64* [ %93, %90 ], [ %121, %120 ]
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %102 = tail call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %101, i64* %72, i8 zeroext 12) #6
  %103 = ptrtoint i64* %102 to i64
  br label %222

104:                                              ; preds = %120, %95
  %105 = phi i64 [ 0, %95 ], [ %122, %120 ]
  %106 = phi i64* [ %93, %95 ], [ %121, %120 ]
  %107 = add nuw nsw i64 %105, %97
  %108 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %96, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 0, i32 2
  %110 = load i8, i8* %109, align 4
  %111 = and i8 %110, 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %108, i64 %107, i32 1, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %119 = tail call i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %118, i64* %106, i32 %115, i64* %117, i64* null, i32 0) #6
  br label %120

120:                                              ; preds = %104, %113
  %121 = phi i64* [ %119, %113 ], [ %106, %104 ]
  %122 = add nuw nsw i64 %105, 1
  %123 = icmp eq i64 %122, %98
  br i1 %123, label %99, label %104

124:                                              ; preds = %79
  %125 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::FactoryBase"**
  %126 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %125, align 8
  %127 = load i32, i32* %80, align 4
  %128 = add i32 %127, 1
  %129 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %126, i32 %128, i8 zeroext 0) #6
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 262144
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %124
  %138 = and i64 %134, 24
  %139 = icmp eq i64 %138, 0
  %140 = select i1 %139, i32 4, i32 0
  br label %141

141:                                              ; preds = %124, %137
  %142 = phi i32 [ 4, %124 ], [ %140, %137 ]
  %143 = icmp sgt i32 %27, 0
  br i1 %143, label %144, label %222

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %146 = icmp eq i32 %142, 0
  %147 = zext i32 %18 to i64
  %148 = zext i32 %27 to i64
  br i1 %146, label %149, label %173

149:                                              ; preds = %144, %170
  %150 = phi i64 [ %171, %170 ], [ 0, %144 ]
  %151 = add nuw nsw i64 %150, %147
  %152 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %145, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = and i8 %154, 8
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %152, i64 %151, i32 1, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = load i64, i64* %129, align 8
  %163 = load i64, i64* %161, align 8
  %164 = shl i32 %159, 2
  %165 = sext i32 %164 to i64
  %166 = add nsw i64 %165, 7
  %167 = add i64 %166, %162
  %168 = inttoptr i64 %167 to i32*
  %169 = trunc i64 %163 to i32
  store atomic volatile i32 %169, i32* %168 monotonic, align 4
  br label %170

170:                                              ; preds = %157, %149
  %171 = add nuw nsw i64 %150, 1
  %172 = icmp eq i64 %171, %148
  br i1 %172, label %222, label %149

173:                                              ; preds = %144, %219
  %174 = phi i64 [ %220, %219 ], [ 0, %144 ]
  %175 = add nuw nsw i64 %174, %147
  %176 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %145, align 8
  %177 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 0, i32 2
  %178 = load i8, i8* %177, align 4
  %179 = and i8 %178, 8
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %219, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %176, i64 %175, i32 1, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = load i64, i64* %129, align 8
  %187 = load i64, i64* %185, align 8
  %188 = shl i32 %183, 2
  %189 = sext i32 %188 to i64
  %190 = add nsw i64 %189, 7
  %191 = add i64 %190, %186
  %192 = inttoptr i64 %191 to i32*
  %193 = trunc i64 %187 to i32
  store atomic volatile i32 %193, i32* %192 monotonic, align 4
  %194 = and i64 %187, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %219, label %196

196:                                              ; preds = %181
  %197 = and i64 %186, -262144
  %198 = or i64 %197, 8
  %199 = inttoptr i64 %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 262144
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %196
  %204 = or i64 %197, 16
  %205 = inttoptr i64 %204 to %"class.v8::internal::Heap"**
  %206 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %205, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %206, i64 %186, i64 %191, i64 %187) #6
  br label %207

207:                                              ; preds = %196, %203
  %208 = and i64 %187, -262144
  %209 = or i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = load i64, i64* %199, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %186, i64 %191, i64 %187) #6
  br label %219

219:                                              ; preds = %173, %181, %218, %214, %207
  %220 = add nuw nsw i64 %174, 1
  %221 = icmp eq i64 %220, %148
  br i1 %221, label %222, label %173

222:                                              ; preds = %219, %170, %141, %70, %99
  %223 = phi i64* [ %76, %70 ], [ %100, %99 ], [ %129, %141 ], [ %129, %170 ], [ %129, %219 ]
  %224 = phi i64 [ %73, %70 ], [ %103, %99 ], [ %73, %141 ], [ %73, %170 ], [ %73, %219 ]
  %225 = inttoptr i64 %224 to i64*
  %226 = icmp eq i64* %3, null
  br i1 %226, label %253, label %227

227:                                              ; preds = %222
  %228 = load i64, i64* %3, align 8
  %229 = add i64 %228, 10
  %230 = inttoptr i64 %229 to i8*
  %231 = load i8, i8* %230, align 1
  %232 = inttoptr i64 %224 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, 10
  %235 = inttoptr i64 %234 to i8*
  %236 = load i8, i8* %235, align 1
  %237 = xor i8 %236, %231
  %238 = icmp ult i8 %237, 4
  br i1 %238, label %239, label %253

239:                                              ; preds = %227
  %240 = add i64 %228, 3
  %241 = inttoptr i64 %240 to i8*
  %242 = load atomic i8, i8* %241 monotonic, align 1
  %243 = add i64 %233, 3
  %244 = inttoptr i64 %243 to i8*
  %245 = load atomic i8, i8* %244 monotonic, align 1
  %246 = icmp eq i8 %242, %245
  br i1 %246, label %247, label %253

247:                                              ; preds = %239
  %248 = add i64 %228, 11
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 acquire, align 4
  %251 = lshr i32 %250, 10
  %252 = and i32 %251, 1023
  br label %253

253:                                              ; preds = %239, %227, %222, %247
  %254 = phi i32 [ %252, %247 ], [ 0, %239 ], [ 0, %227 ], [ 0, %222 ]
  %255 = icmp sgt i32 %27, 0
  br i1 %255, label %256, label %767

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %258 = bitcast %"class.v8::internal::TransitionsAccessor"* %9 to i8*
  %259 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 0
  %260 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 1, i32 0, i32 0
  %261 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 3, i32 0, i32 0
  %263 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 5
  %264 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 4
  %265 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5 to i8*
  %266 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0
  %268 = bitcast %"class.v8::internal::TransitionsAccessor"* %10 to i8*
  %269 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 0
  %270 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 1
  %271 = bitcast %"class.v8::internal::Handle.1160"* %270 to i64*
  %272 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 3, i32 0, i32 0
  %274 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 5
  %275 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %10, i64 0, i32 4
  %276 = bitcast %"class.v8::internal::FieldType"* %12 to i8*
  %277 = getelementptr inbounds %"class.v8::internal::FieldType", %"class.v8::internal::FieldType"* %12, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13 to i8*
  %279 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %13, i64 0, i32 0
  %281 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11 to i8*
  %282 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0
  %284 = zext i32 %18 to i64
  %285 = zext i32 %27 to i64
  br label %286

286:                                              ; preds = %758, %256
  %287 = phi i64 [ 0, %256 ], [ %763, %758 ]
  %288 = phi i32 [ %254, %256 ], [ %762, %758 ]
  %289 = phi i32 [ 0, %256 ], [ %761, %758 ]
  %290 = phi i32 [ 0, %256 ], [ %760, %758 ]
  %291 = phi i64 [ %224, %256 ], [ %759, %758 ]
  %292 = add nuw nsw i64 %287, %284
  %293 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %257, align 8
  %294 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 0
  %295 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 0, i32 2
  %296 = load i8, i8* %295, align 4
  %297 = and i8 %296, 8
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %758

299:                                              ; preds = %286
  %300 = sext i32 %289 to i64
  %301 = icmp slt i32 %289, %288
  br i1 %301, label %302, label %341

302:                                              ; preds = %299
  %303 = load i64, i64* %3, align 8
  %304 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 0, i32 4
  %306 = load i64, i64* %305, align 8
  %307 = add i64 %303, 23
  %308 = inttoptr i64 %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = and i64 %306, 4294967295
  %311 = icmp eq i64 %310, 0
  call void @llvm.assume(i1 %311) #6
  %312 = zext i32 %309 to i64
  %313 = or i64 %306, %312
  %314 = mul i64 %300, 51539607552
  %315 = add i64 %314, 68719476736
  %316 = ashr exact i64 %315, 32
  %317 = add nsw i64 %316, -1
  %318 = add i64 %317, %313
  %319 = inttoptr i64 %318 to i32*
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = zext i32 %320 to i64
  %322 = or i64 %306, %321
  %323 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 4
  %324 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %323, align 8
  %325 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %324, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %302
  %327 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %324, i64 %322) #6
  br label %454

328:                                              ; preds = %302
  %329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 0
  %330 = load i64*, i64** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %304, i64 0, i32 31, i32 1
  %332 = load i64*, i64** %331, align 8
  %333 = icmp eq i64* %330, %332
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %304) #6
  br label %336

336:                                              ; preds = %334, %328
  %337 = phi i64* [ %335, %334 ], [ %330, %328 ]
  %338 = ptrtoint i64* %337 to i64
  %339 = add i64 %338, 8
  %340 = inttoptr i64 %339 to i64*
  store i64* %340, i64** %329, align 8
  store i64 %322, i64* %337, align 8
  br label %454

341:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %258) #6
  %342 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %343 = inttoptr i64 %291 to i64*
  %344 = load i64, i64* %343, align 8
  store %"class.v8::internal::Isolate"* %342, %"class.v8::internal::Isolate"** %259, align 8
  store i64* null, i64** %260, align 8
  store i64 %344, i64* %261, align 8
  store i64 0, i64* %262, align 8
  store i8 0, i8* %263, align 4
  %345 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %342, i64 0, i32 0, i32 4
  %346 = load i64, i64* %345, align 8
  %347 = add i64 %344, 35
  %348 = inttoptr i64 %347 to i32*
  %349 = load atomic i32, i32* %348 acquire, align 4
  %350 = and i64 %346, 4294967295
  %351 = icmp eq i64 %350, 0
  call void @llvm.assume(i1 %351) #6
  %352 = zext i32 %349 to i64
  %353 = or i64 %346, %352
  store i64 %353, i64* %262, align 8
  %354 = and i64 %352, 1
  %355 = icmp eq i64 %354, 0
  %356 = icmp eq i32 %349, 3
  %357 = or i1 %356, %355
  br i1 %357, label %380, label %358

358:                                              ; preds = %341
  %359 = and i64 %352, 3
  switch i64 %359, label %379 [
    i64 3, label %380
    i64 1, label %360
  ]

360:                                              ; preds = %358
  %361 = add i64 %353, -1
  %362 = inttoptr i64 %361 to i32*
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = zext i32 %363 to i64
  %365 = or i64 %346, %364
  %366 = add i64 %365, 7
  %367 = inttoptr i64 %366 to i16*
  %368 = load atomic i16, i16* %367 monotonic, align 2
  %369 = icmp eq i16 %368, 160
  br i1 %369, label %380, label %370

370:                                              ; preds = %360
  %371 = load atomic i32, i32* %362 monotonic, align 4
  %372 = zext i32 %371 to i64
  %373 = or i64 %346, %372
  %374 = add i64 %373, 7
  %375 = inttoptr i64 %374 to i16*
  %376 = load atomic i16, i16* %375 monotonic, align 2
  %377 = icmp eq i16 %376, 110
  %378 = select i1 %377, i32 0, i32 2
  br label %380

379:                                              ; preds = %358
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

380:                                              ; preds = %370, %360, %358, %341
  %381 = phi i32 [ 1, %341 ], [ 3, %358 ], [ 4, %360 ], [ %378, %370 ]
  store i32 %381, i32* %264, align 8
  %382 = call i64* @_ZN2v88internal19TransitionsAccessor21ExpectedTransitionKeyEv(%"class.v8::internal::TransitionsAccessor"* nonnull %9)
  %383 = icmp eq i64* %382, null
  br i1 %383, label %452, label %384

384:                                              ; preds = %380
  %385 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %386 = load i64, i64* %343, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 0, i32 4
  %388 = load i64, i64* %387, align 8
  %389 = add i64 %386, 35
  %390 = inttoptr i64 %389 to i32*
  %391 = load atomic i32, i32* %390 acquire, align 4
  %392 = and i64 %388, 4294967295
  %393 = icmp eq i64 %392, 0
  call void @llvm.assume(i1 %393) #6
  %394 = zext i32 %391 to i64
  %395 = or i64 %388, %394
  %396 = and i64 %394, 1
  %397 = icmp eq i64 %396, 0
  %398 = icmp eq i32 %391, 3
  %399 = or i1 %398, %397
  br i1 %399, label %421, label %400

400:                                              ; preds = %384
  %401 = and i64 %394, 3
  switch i64 %401, label %420 [
    i64 3, label %422
    i64 1, label %402
  ]

402:                                              ; preds = %400
  %403 = add i64 %395, -1
  %404 = inttoptr i64 %403 to i32*
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = zext i32 %405 to i64
  %407 = or i64 %388, %406
  %408 = add i64 %407, 7
  %409 = inttoptr i64 %408 to i16*
  %410 = load atomic i16, i16* %409 monotonic, align 2
  %411 = icmp eq i16 %410, 160
  br i1 %411, label %424, label %412

412:                                              ; preds = %402
  %413 = inttoptr i64 %403 to i32*
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = zext i32 %414 to i64
  %416 = or i64 %388, %415
  %417 = add i64 %416, 7
  %418 = inttoptr i64 %417 to i16*
  %419 = load atomic i16, i16* %418 monotonic, align 2
  br label %421

420:                                              ; preds = %400
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

421:                                              ; preds = %384, %412
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

422:                                              ; preds = %400
  %423 = and i64 %395, -3
  br label %431

424:                                              ; preds = %402
  %425 = add i64 %395, 19
  %426 = inttoptr i64 %425 to i32*
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, -3
  %429 = zext i32 %428 to i64
  %430 = or i64 %388, %429
  br label %431

431:                                              ; preds = %424, %422
  %432 = phi i64 [ %430, %424 ], [ %423, %422 ]
  %433 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 4
  %434 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %433, align 8
  %435 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %434, null
  br i1 %435, label %439, label %436

436:                                              ; preds = %431
  %437 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %434, i64 %432) #6
  %438 = ptrtoint i64* %437 to i64
  br label %452

439:                                              ; preds = %431
  %440 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 0
  %441 = load i64*, i64** %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %385, i64 0, i32 31, i32 1
  %443 = load i64*, i64** %442, align 8
  %444 = icmp eq i64* %441, %443
  br i1 %444, label %445, label %447

445:                                              ; preds = %439
  %446 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %385) #6
  br label %447

447:                                              ; preds = %445, %439
  %448 = phi i64* [ %446, %445 ], [ %441, %439 ]
  %449 = ptrtoint i64* %448 to i64
  %450 = add i64 %449, 8
  %451 = inttoptr i64 %450 to i64*
  store i64* %451, i64** %440, align 8
  store i64 %432, i64* %448, align 8
  br label %452

452:                                              ; preds = %447, %436, %380
  %453 = phi i64 [ 0, %380 ], [ %438, %436 ], [ %449, %447 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %258) #6
  br label %454

454:                                              ; preds = %336, %326, %452
  %455 = phi i64 [ %453, %452 ], [ 0, %326 ], [ 0, %336 ]
  %456 = phi i64* [ %382, %452 ], [ %327, %326 ], [ %337, %336 ]
  %457 = call i64* @_ZN2v88internal10JsonParserItE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %294, i64* %456)
  %458 = icmp eq i64* %457, %456
  br i1 %458, label %469, label %459

459:                                              ; preds = %454
  %460 = icmp eq i64* %457, null
  %461 = icmp eq i64* %456, null
  %462 = or i1 %461, %460
  br i1 %462, label %471, label %463

463:                                              ; preds = %459
  %464 = load i64, i64* %457, align 8
  %465 = load i64, i64* %456, align 8
  %466 = trunc i64 %464 to i32
  %467 = trunc i64 %465 to i32
  %468 = icmp eq i32 %466, %467
  br i1 %468, label %469, label %471

469:                                              ; preds = %454, %463
  %470 = select i1 %301, i64 %15, i64 %455
  br label %554

471:                                              ; preds = %459, %463
  br i1 %301, label %472, label %504

472:                                              ; preds = %471
  %473 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %474 = inttoptr i64 %291 to i64*
  %475 = icmp eq i32 %289, 0
  br i1 %475, label %501, label %476

476:                                              ; preds = %472
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #6
  %477 = load i64, i64* %3, align 8
  store i64 %477, i64* %266, align 8
  %478 = add nsw i32 %289, -1
  %479 = sext i32 %478 to i64
  %480 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %267, %"class.v8::internal::Isolate"* %473, i64 %479) #6
  %481 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 4
  %482 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %481, align 8
  %483 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %482, null
  br i1 %483, label %486, label %484

484:                                              ; preds = %476
  %485 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %482, i64 %480) #6
  br label %499

486:                                              ; preds = %476
  %487 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 0
  %488 = load i64*, i64** %487, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 31, i32 1
  %490 = load i64*, i64** %489, align 8
  %491 = icmp eq i64* %488, %490
  br i1 %491, label %492, label %494

492:                                              ; preds = %486
  %493 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %473) #6
  br label %494

494:                                              ; preds = %492, %486
  %495 = phi i64* [ %493, %492 ], [ %488, %486 ]
  %496 = ptrtoint i64* %495 to i64
  %497 = add i64 %496, 8
  %498 = inttoptr i64 %497 to i64*
  store i64* %498, i64** %487, align 8
  store i64 %480, i64* %495, align 8
  br label %499

499:                                              ; preds = %494, %484
  %500 = phi i64* [ %485, %484 ], [ %495, %494 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #6
  br label %501

501:                                              ; preds = %472, %499
  %502 = phi i64* [ %500, %499 ], [ %474, %472 ]
  %503 = ptrtoint i64* %502 to i64
  br label %504

504:                                              ; preds = %501, %471
  %505 = phi i64 [ %503, %501 ], [ %291, %471 ]
  %506 = phi i32 [ 0, %501 ], [ %288, %471 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %268) #6
  %507 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %508 = inttoptr i64 %505 to i64*
  store %"class.v8::internal::Isolate"* %507, %"class.v8::internal::Isolate"** %269, align 8
  store i64 %505, i64* %271, align 8
  %509 = load i64, i64* %508, align 8
  store i64 %509, i64* %272, align 8
  store i64 0, i64* %273, align 8
  store i8 0, i8* %274, align 4
  %510 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %507, i64 0, i32 0, i32 4
  %511 = load i64, i64* %510, align 8
  %512 = add i64 %509, 35
  %513 = inttoptr i64 %512 to i32*
  %514 = load atomic i32, i32* %513 acquire, align 4
  %515 = and i64 %511, 4294967295
  %516 = icmp eq i64 %515, 0
  call void @llvm.assume(i1 %516) #6
  %517 = zext i32 %514 to i64
  %518 = or i64 %511, %517
  store i64 %518, i64* %273, align 8
  %519 = and i64 %517, 1
  %520 = icmp eq i64 %519, 0
  %521 = icmp eq i32 %514, 3
  %522 = or i1 %521, %520
  br i1 %522, label %545, label %523

523:                                              ; preds = %504
  %524 = and i64 %517, 3
  switch i64 %524, label %544 [
    i64 3, label %545
    i64 1, label %525
  ]

525:                                              ; preds = %523
  %526 = add i64 %518, -1
  %527 = inttoptr i64 %526 to i32*
  %528 = load atomic i32, i32* %527 monotonic, align 4
  %529 = zext i32 %528 to i64
  %530 = or i64 %511, %529
  %531 = add i64 %530, 7
  %532 = inttoptr i64 %531 to i16*
  %533 = load atomic i16, i16* %532 monotonic, align 2
  %534 = icmp eq i16 %533, 160
  br i1 %534, label %545, label %535

535:                                              ; preds = %525
  %536 = load atomic i32, i32* %527 monotonic, align 4
  %537 = zext i32 %536 to i64
  %538 = or i64 %511, %537
  %539 = add i64 %538, 7
  %540 = inttoptr i64 %539 to i16*
  %541 = load atomic i16, i16* %540 monotonic, align 2
  %542 = icmp eq i16 %541, 110
  %543 = select i1 %542, i32 0, i32 2
  br label %545

544:                                              ; preds = %523
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

545:                                              ; preds = %535, %525, %523, %504
  %546 = phi i32 [ 1, %504 ], [ 3, %523 ], [ 4, %525 ], [ %543, %535 ]
  store i32 %546, i32* %275, align 8
  %547 = call i64* @_ZN2v88internal19TransitionsAccessor28FindTransitionToDataPropertyENS0_6HandleINS0_4NameEEENS1_17RequestedLocationE(%"class.v8::internal::TransitionsAccessor"* nonnull %10, i64* %457, i32 1) #6
  %548 = icmp eq i64* %547, null
  br i1 %548, label %551, label %549

549:                                              ; preds = %545
  %550 = ptrtoint i64* %547 to i64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #6
  br label %554

551:                                              ; preds = %545
  %552 = inttoptr i64 %505 to i64*
  %553 = trunc i64 %287 to i32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %268) #6
  br label %767

554:                                              ; preds = %469, %549
  %555 = phi i64 [ %550, %549 ], [ %470, %469 ]
  %556 = phi i64 [ %505, %549 ], [ %291, %469 ]
  %557 = phi i32 [ %506, %549 ], [ %288, %469 ]
  %558 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %293, i64 %292, i32 1, i32 0, i32 0
  %559 = load i64*, i64** %558, align 8
  %560 = inttoptr i64 %555 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 0, i32 4
  %564 = load i64, i64* %563, align 8
  %565 = add i64 %561, 23
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = and i64 %564, 4294967295
  %569 = icmp eq i64 %568, 0
  call void @llvm.assume(i1 %569) #6
  %570 = zext i32 %567 to i64
  %571 = or i64 %564, %570
  %572 = mul i64 %300, 51539607552
  %573 = add i64 %572, 68719476736
  %574 = ashr exact i64 %573, 32
  %575 = or i64 %574, 3
  %576 = add i64 %571, %575
  %577 = inttoptr i64 %576 to i32*
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = ashr i32 %578, 1
  %580 = lshr i32 %579, 6
  %581 = trunc i32 %580 to i8
  %582 = and i8 %581, 7
  %583 = load i64, i64* %559, align 8
  %584 = load i8, i8* @_ZN2v88internal17FLAG_track_fieldsE, align 1, !range !4
  %585 = icmp eq i8 %584, 0
  %586 = xor i1 %585, true
  %587 = icmp eq i8 %582, 1
  %588 = and i1 %587, %586
  br i1 %588, label %589, label %592

589:                                              ; preds = %554
  %590 = and i64 %583, 1
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %728, label %623

592:                                              ; preds = %554
  %593 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !4
  %594 = icmp ne i8 %593, 0
  %595 = icmp eq i8 %582, 2
  %596 = and i1 %595, %594
  br i1 %596, label %597, label %600

597:                                              ; preds = %592
  %598 = and i64 %583, 1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %728, label %612

600:                                              ; preds = %592
  %601 = load i8, i8* @_ZN2v88internal29FLAG_track_heap_object_fieldsE, align 1, !range !4
  %602 = icmp ne i8 %601, 0
  %603 = icmp eq i8 %582, 3
  %604 = and i1 %603, %602
  br i1 %604, label %605, label %609

605:                                              ; preds = %600
  %606 = and i64 %583, 1
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %623, label %608

608:                                              ; preds = %605
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br label %730

609:                                              ; preds = %600
  %610 = icmp ne i8 %582, 0
  %611 = or i1 %585, %610
  br i1 %611, label %729, label %623

612:                                              ; preds = %597
  %613 = and i64 %583, -4294967296
  %614 = add i64 %583, -1
  %615 = inttoptr i64 %614 to i32*
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = zext i32 %616 to i64
  %618 = or i64 %613, %617
  %619 = add i64 %618, 7
  %620 = inttoptr i64 %619 to i16*
  %621 = load atomic i16, i16* %620 monotonic, align 2
  %622 = icmp eq i16 %621, 66
  br i1 %622, label %728, label %623

623:                                              ; preds = %605, %589, %609, %612
  br i1 %585, label %671, label %624

624:                                              ; preds = %623
  %625 = and i64 %583, 1
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %671, label %627

627:                                              ; preds = %624
  %628 = load i8, i8* @_ZN2v88internal24FLAG_track_double_fieldsE, align 1, !range !4
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %640, label %630

630:                                              ; preds = %627
  %631 = add i64 %583, -1
  %632 = inttoptr i64 %631 to i32*
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = zext i32 %633 to i64
  %635 = or i64 %564, %634
  %636 = add i64 %635, 7
  %637 = inttoptr i64 %636 to i16*
  %638 = load atomic i16, i16* %637 monotonic, align 2
  %639 = icmp eq i16 %638, 66
  br i1 %639, label %671, label %640

640:                                              ; preds = %630, %627
  %641 = load i8, i8* @_ZN2v88internal26FLAG_track_computed_fieldsE, align 1, !range !4
  %642 = icmp eq i8 %641, 0
  br i1 %642, label %667, label %643

643:                                              ; preds = %640
  %644 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %645 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %644, null
  br i1 %645, label %652, label %646

646:                                              ; preds = %643
  %647 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %644, i64 0, i32 0, i32 1
  %648 = load i8, i8* %647, align 8, !range !4
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %652, label %650

650:                                              ; preds = %646
  %651 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %644, i64 0, i32 1, i64 0
  br label %660

652:                                              ; preds = %646, %643
  %653 = and i64 %583, -262144
  %654 = or i64 %653, 16
  %655 = inttoptr i64 %654 to i64*
  %656 = load i64, i64* %655, align 16
  %657 = add i64 %656, -41416
  %658 = inttoptr i64 %657 to %"class.v8::internal::Isolate"*
  %659 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %658, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %660

660:                                              ; preds = %652, %650
  %661 = phi i64* [ %659, %652 ], [ %651, %650 ]
  %662 = getelementptr inbounds i64, i64* %661, i64 3
  %663 = load i64, i64* %662, align 8
  %664 = trunc i64 %583 to i32
  %665 = trunc i64 %663 to i32
  %666 = icmp eq i32 %664, %665
  br i1 %666, label %671, label %667

667:                                              ; preds = %660, %640
  %668 = load i8, i8* @_ZN2v88internal29FLAG_track_heap_object_fieldsE, align 1, !range !4
  %669 = icmp eq i8 %668, 0
  br i1 %669, label %671, label %670

670:                                              ; preds = %667
  switch i8 %582, label %679 [
    i8 0, label %722
    i8 3, label %722
  ]

671:                                              ; preds = %667, %623, %624, %630, %660
  %672 = phi i8 [ 0, %660 ], [ 2, %630 ], [ 1, %624 ], [ 4, %623 ], [ 4, %667 ]
  %673 = icmp ult i8 %672, %582
  br i1 %673, label %674, label %682

674:                                              ; preds = %671
  %675 = icmp eq i8 %582, 3
  br i1 %675, label %676, label %679

676:                                              ; preds = %674
  %677 = icmp eq i8 %672, 0
  %678 = select i1 %677, i8 3, i8 4
  br label %722

679:                                              ; preds = %670, %674
  %680 = phi i8 [ %672, %674 ], [ 3, %670 ]
  %681 = icmp slt i8 %680, %582
  br i1 %681, label %722, label %684

682:                                              ; preds = %671
  %683 = icmp eq i8 %582, %672
  br i1 %683, label %722, label %684

684:                                              ; preds = %679, %682
  %685 = phi i8 [ %672, %682 ], [ 4, %679 ]
  %686 = icmp eq i8 %582, 0
  br i1 %686, label %687, label %689

687:                                              ; preds = %684
  %688 = icmp eq i8 %685, 2
  br i1 %688, label %691, label %722

689:                                              ; preds = %684
  %690 = icmp eq i8 %685, 4
  br i1 %690, label %722, label %691

691:                                              ; preds = %687, %689
  %692 = trunc i64 %287 to i32
  %693 = inttoptr i64 %556 to i64*
  %694 = icmp eq i32 %289, 0
  br i1 %694, label %767, label %695

695:                                              ; preds = %691
  %696 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #6
  %697 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %561, i64* %697, align 8
  %698 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0
  %699 = add nsw i32 %289, -1
  %700 = sext i32 %699 to i64
  %701 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %698, %"class.v8::internal::Isolate"* %562, i64 %700) #6
  %702 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 4
  %703 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %702, align 8
  %704 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %703, null
  br i1 %704, label %707, label %705

705:                                              ; preds = %695
  %706 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %703, i64 %701) #6
  br label %720

707:                                              ; preds = %695
  %708 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 0
  %709 = load i64*, i64** %708, align 8
  %710 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %562, i64 0, i32 31, i32 1
  %711 = load i64*, i64** %710, align 8
  %712 = icmp eq i64* %709, %711
  br i1 %712, label %713, label %715

713:                                              ; preds = %707
  %714 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %562) #6
  br label %715

715:                                              ; preds = %713, %707
  %716 = phi i64* [ %714, %713 ], [ %709, %707 ]
  %717 = ptrtoint i64* %716 to i64
  %718 = add i64 %717, 8
  %719 = inttoptr i64 %718 to i64*
  store i64* %719, i64** %708, align 8
  store i64 %701, i64* %716, align 8
  br label %720

720:                                              ; preds = %715, %705
  %721 = phi i64* [ %706, %705 ], [ %716, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #6
  br label %767

722:                                              ; preds = %676, %670, %670, %687, %689, %682, %679
  %723 = phi i8 [ 4, %689 ], [ %685, %687 ], [ %582, %682 ], [ %582, %679 ], [ 3, %670 ], [ 3, %670 ], [ %678, %676 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #6
  store i64 %583, i64* %282, align 8
  %724 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %283, %"class.v8::internal::Isolate"* %562, i8 %723) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #6
  %725 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %726 = lshr i32 %579, 2
  %727 = and i32 %726, 1
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %725, i64* %560, i64 %300, i32 %727, i8 %723, i64* %724) #6
  br label %755

728:                                              ; preds = %589, %612, %597
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br label %747

729:                                              ; preds = %609
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #6
  br i1 %603, label %730, label %747

730:                                              ; preds = %608, %729
  %731 = add nsw i64 %574, 7
  %732 = add i64 %731, %571
  %733 = inttoptr i64 %732 to i32*
  %734 = load atomic i32, i32* %733 monotonic, align 4
  %735 = zext i32 %734 to i64
  %736 = or i64 %564, %735
  %737 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %736) #6
  store i64 %737, i64* %277, align 8
  %738 = load i64, i64* %559, align 8
  %739 = call zeroext i1 @_ZNK2v88internal9FieldType11NowContainsENS0_6ObjectE(%"class.v8::internal::FieldType"* nonnull %12, i64 %738) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #6
  br i1 %739, label %755, label %740

740:                                              ; preds = %730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #6
  %741 = load i64, i64* %559, align 8
  store i64 %741, i64* %279, align 8
  %742 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %743 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %280, %"class.v8::internal::Isolate"* %742, i8 %582) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #6
  %744 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %745 = lshr i32 %579, 2
  %746 = and i32 %745, 1
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %744, i64* %560, i64 %300, i32 %746, i8 %582, i64* %743) #6
  br label %755

747:                                              ; preds = %729, %728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #6
  %748 = icmp eq i8 %582, 2
  br i1 %748, label %749, label %755

749:                                              ; preds = %747
  %750 = load i64, i64* %559, align 8
  %751 = trunc i64 %750 to i32
  %752 = and i32 %751, 1
  %753 = xor i32 %752, 1
  %754 = add nsw i32 %753, %290
  br label %755

755:                                              ; preds = %730, %747, %722, %749, %740
  %756 = phi i32 [ %290, %740 ], [ %754, %749 ], [ %290, %722 ], [ %290, %747 ], [ %290, %730 ]
  %757 = add nsw i32 %289, 1
  br label %758

758:                                              ; preds = %286, %755
  %759 = phi i64 [ %291, %286 ], [ %555, %755 ]
  %760 = phi i32 [ %290, %286 ], [ %756, %755 ]
  %761 = phi i32 [ %289, %286 ], [ %757, %755 ]
  %762 = phi i32 [ %288, %286 ], [ %557, %755 ]
  %763 = add nuw nsw i64 %287, 1
  %764 = icmp eq i64 %763, %285
  br i1 %764, label %765, label %286

765:                                              ; preds = %758
  %766 = inttoptr i64 %759 to i64*
  br label %767

767:                                              ; preds = %691, %720, %765, %253, %551
  %768 = phi i32 [ %290, %551 ], [ 0, %253 ], [ %760, %765 ], [ %290, %720 ], [ %290, %691 ]
  %769 = phi i32 [ %289, %551 ], [ 0, %253 ], [ %761, %765 ], [ %289, %720 ], [ 0, %691 ]
  %770 = phi i32 [ %553, %551 ], [ 0, %253 ], [ %27, %765 ], [ %692, %720 ], [ %692, %691 ]
  %771 = phi i64* [ %552, %551 ], [ %225, %253 ], [ %766, %765 ], [ %721, %720 ], [ %693, %691 ]
  %772 = phi i32 [ %506, %551 ], [ %254, %253 ], [ %762, %765 ], [ %557, %720 ], [ %557, %691 ]
  %773 = icmp eq i32 %770, %27
  %774 = icmp slt i32 %769, %772
  %775 = and i1 %773, %774
  br i1 %775, label %776, label %807

776:                                              ; preds = %767
  %777 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %778 = icmp eq i32 %769, 0
  br i1 %778, label %807, label %779

779:                                              ; preds = %776
  %780 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %780) #6
  %781 = load i64, i64* %771, align 8
  %782 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %781, i64* %782, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %7, i64 0, i32 0
  %784 = add nsw i32 %769, -1
  %785 = sext i32 %784 to i64
  %786 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %783, %"class.v8::internal::Isolate"* %777, i64 %785) #6
  %787 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 4
  %788 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %787, align 8
  %789 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %788, null
  br i1 %789, label %792, label %790

790:                                              ; preds = %779
  %791 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %788, i64 %786) #6
  br label %805

792:                                              ; preds = %779
  %793 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 0
  %794 = load i64*, i64** %793, align 8
  %795 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %777, i64 0, i32 31, i32 1
  %796 = load i64*, i64** %795, align 8
  %797 = icmp eq i64* %794, %796
  br i1 %797, label %798, label %800

798:                                              ; preds = %792
  %799 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %777) #6
  br label %800

800:                                              ; preds = %798, %792
  %801 = phi i64* [ %799, %798 ], [ %794, %792 ]
  %802 = ptrtoint i64* %801 to i64
  %803 = add i64 %802, 8
  %804 = inttoptr i64 %803 to i64*
  store i64* %804, i64** %793, align 8
  store i64 %786, i64* %801, align 8
  br label %805

805:                                              ; preds = %800, %790
  %806 = phi i64* [ %791, %790 ], [ %801, %800 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %780) #6
  br label %807

807:                                              ; preds = %805, %776, %767
  %808 = phi i64* [ %771, %767 ], [ %806, %805 ], [ %771, %776 ]
  %809 = icmp sgt i32 %768, 0
  br i1 %809, label %810, label %815

810:                                              ; preds = %807
  %811 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::FactoryBase"**
  %812 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %811, align 8
  %813 = shl nsw i32 %768, 4
  %814 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %812, i32 %813, i8 zeroext 0) #6
  br label %815

815:                                              ; preds = %810, %807
  %816 = phi i64* [ %814, %810 ], [ null, %807 ]
  %817 = load i64, i64* %72, align 8
  %818 = add i64 %817, 11
  %819 = inttoptr i64 %818 to i32*
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2097152
  %822 = icmp eq i32 %821, 0
  %823 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  br i1 %822, label %826, label %824

824:                                              ; preds = %815
  %825 = call i64* @_ZN2v88internal7Factory22NewSlowJSObjectFromMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %823, i64* %808, i32 2, i8 zeroext 0, i64* null) #6
  br label %828

826:                                              ; preds = %815
  %827 = call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %823, i64* %808, i8 zeroext 0, i64* null) #6
  br label %828

828:                                              ; preds = %826, %824
  %829 = phi i64* [ %825, %824 ], [ %827, %826 ]
  %830 = load i64, i64* %829, align 8
  %831 = load i64, i64* %223, align 8
  %832 = add i64 %830, 7
  %833 = inttoptr i64 %832 to i32*
  %834 = trunc i64 %831 to i32
  store atomic volatile i32 %834, i32* %833 monotonic, align 4
  %835 = and i64 %831, 1
  %836 = icmp eq i64 %835, 0
  br i1 %836, label %848, label %837

837:                                              ; preds = %828
  %838 = and i64 %830, -262144
  %839 = or i64 %838, 8
  %840 = inttoptr i64 %839 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = and i64 %841, 262144
  %843 = icmp eq i64 %842, 0
  br i1 %843, label %848, label %844

844:                                              ; preds = %837
  %845 = or i64 %838, 16
  %846 = inttoptr i64 %845 to %"class.v8::internal::Heap"**
  %847 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %846, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %847, i64 %830, i64 %832, i64 %831) #6
  br label %848

848:                                              ; preds = %844, %837, %828
  %849 = and i64 %831, -262144
  %850 = or i64 %849, 8
  %851 = inttoptr i64 %850 to i64*
  %852 = load i64, i64* %851, align 8
  %853 = and i64 %852, 24
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %863, label %855

855:                                              ; preds = %848
  %856 = and i64 %830, -262144
  %857 = or i64 %856, 8
  %858 = inttoptr i64 %857 to i64*
  %859 = load i64, i64* %858, align 8
  %860 = and i64 %859, 24
  %861 = icmp eq i64 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %855
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %830, i64 %832, i64 %831) #6
  br label %863

863:                                              ; preds = %848, %855, %862
  %864 = load i64, i64* %829, align 8
  %865 = and i64 %864, -262144
  %866 = or i64 %865, 8
  %867 = inttoptr i64 %866 to i64*
  %868 = load i64, i64* %867, align 8
  %869 = and i64 %868, 262144
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %875

871:                                              ; preds = %863
  %872 = and i64 %868, 24
  %873 = icmp eq i64 %872, 0
  %874 = select i1 %873, i32 4, i32 0
  br label %875

875:                                              ; preds = %863, %871
  %876 = phi i32 [ 4, %863 ], [ %874, %871 ]
  %877 = icmp eq i64* %816, null
  br i1 %877, label %881, label %878

878:                                              ; preds = %875
  %879 = load i64, i64* %816, align 8
  %880 = add i64 %879, 7
  br label %881

881:                                              ; preds = %875, %878
  %882 = phi i64 [ %880, %878 ], [ 0, %875 ]
  %883 = and i64 %882, 7
  %884 = icmp eq i64 %883, 0
  %885 = icmp eq i32 %770, 0
  br i1 %885, label %896, label %886

886:                                              ; preds = %881
  %887 = add i64 %882, 4
  %888 = select i1 %884, i64 %887, i64 %882
  %889 = add i64 %882, 12
  %890 = select i1 %884, i64 %882, i64 %889
  %891 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %892 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %8, i64 0, i32 0
  %893 = icmp eq i32 %876, 0
  %894 = zext i32 %18 to i64
  %895 = zext i32 %770 to i64
  br label %897

896:                                              ; preds = %1082, %881
  br i1 %877, label %1092, label %1088

897:                                              ; preds = %1082, %886
  %898 = phi i64 [ 0, %886 ], [ %1086, %1082 ]
  %899 = phi i32 [ 0, %886 ], [ %1085, %1082 ]
  %900 = phi i64 [ %888, %886 ], [ %1084, %1082 ]
  %901 = phi i64 [ %890, %886 ], [ %1083, %1082 ]
  %902 = add nuw nsw i64 %898, %894
  %903 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %891, align 8
  %904 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %903, i64 %902, i32 0, i32 2
  %905 = load i8, i8* %904, align 4
  %906 = and i8 %905, 8
  %907 = icmp eq i8 %906, 0
  br i1 %907, label %908, label %1082

908:                                              ; preds = %897
  %909 = sext i32 %899 to i64
  %910 = load i64, i64* %808, align 8
  %911 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %912 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 4
  %913 = load i64, i64* %912, align 8
  %914 = add i64 %910, 23
  %915 = inttoptr i64 %914 to i32*
  %916 = load i32, i32* %915, align 4
  %917 = and i64 %913, 4294967295
  %918 = icmp eq i64 %917, 0
  call void @llvm.assume(i1 %918) #6
  %919 = zext i32 %916 to i64
  %920 = or i64 %913, %919
  %921 = mul i64 %909, 51539607552
  %922 = add i64 %921, 68719476736
  %923 = ashr exact i64 %922, 32
  %924 = or i64 %923, 3
  %925 = add i64 %920, %924
  %926 = inttoptr i64 %925 to i32*
  %927 = load atomic i32, i32* %926 monotonic, align 4
  %928 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %903, i64 %902, i32 1, i32 0, i32 0
  %929 = load i64*, i64** %928, align 8
  %930 = load i64, i64* %929, align 8
  %931 = and i64 %910, -4294967296
  %932 = load atomic i32, i32* %915 monotonic, align 4
  %933 = zext i32 %932 to i64
  %934 = or i64 %931, %933
  %935 = add i64 %934, %924
  %936 = inttoptr i64 %935 to i32*
  %937 = load atomic i32, i32* %936 monotonic, align 4
  %938 = ashr i32 %937, 1
  %939 = lshr i32 %938, 19
  %940 = and i32 %939, 1023
  %941 = lshr i32 %938, 6
  %942 = trunc i32 %941 to i8
  %943 = and i8 %942, 7
  %944 = add i64 %910, 3
  %945 = inttoptr i64 %944 to i8*
  %946 = load atomic i8, i8* %945 monotonic, align 1
  %947 = zext i8 %946 to i32
  %948 = add i64 %910, 4
  %949 = inttoptr i64 %948 to i8*
  %950 = load atomic i8, i8* %949 monotonic, align 1
  %951 = zext i8 %950 to i32
  %952 = sub nsw i32 %947, %951
  %953 = icmp slt i32 %940, %952
  br i1 %953, label %954, label %960

954:                                              ; preds = %908
  %955 = load atomic i8, i8* %949 monotonic, align 1
  %956 = load atomic i8, i8* %949 monotonic, align 1
  %957 = zext i8 %956 to i32
  %958 = add nuw nsw i32 %940, %957
  %959 = shl nuw nsw i32 %958, 2
  br label %964

960:                                              ; preds = %908
  %961 = sub nsw i32 %940, %952
  %962 = shl nsw i32 %961, 2
  %963 = add nsw i32 %962, 8
  br label %964

964:                                              ; preds = %960, %954
  %965 = phi i32 [ %959, %954 ], [ %963, %960 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %892) #6
  store i8 %943, i8* %892, align 1
  %966 = icmp ult i8 %943, 5
  br i1 %966, label %969, label %967

967:                                              ; preds = %964
  %968 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %8) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %968) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

969:                                              ; preds = %964
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %892) #6
  %970 = add nsw i32 %899, 1
  %971 = and i32 %927, 896
  %972 = icmp eq i32 %971, 256
  br i1 %972, label %973, label %1045

973:                                              ; preds = %969
  %974 = and i64 %930, 1
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %1024

976:                                              ; preds = %973
  %977 = add i64 %901, 1
  %978 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 7, i32 0, i64 1
  %979 = load i64, i64* %978, align 8
  %980 = inttoptr i64 %901 to i32*
  %981 = trunc i64 %979 to i32
  store atomic volatile i32 %981, i32* %980 monotonic, align 4
  %982 = and i64 %979, 1
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %995, label %984

984:                                              ; preds = %976
  %985 = and i64 %977, -262144
  %986 = or i64 %985, 8
  %987 = inttoptr i64 %986 to i64*
  %988 = load i64, i64* %987, align 8
  %989 = and i64 %988, 262144
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %995, label %991

991:                                              ; preds = %984
  %992 = or i64 %985, 16
  %993 = inttoptr i64 %992 to %"class.v8::internal::Heap"**
  %994 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %993, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %994, i64 %977, i64 0, i64 %979) #6
  br label %995

995:                                              ; preds = %976, %984, %991
  %996 = add i64 %901, 16
  %997 = trunc i64 %930 to i32
  %998 = ashr i32 %997, 1
  %999 = sitofp i32 %998 to double
  %1000 = add i64 %900, 1
  %1001 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %1002 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %1001, i64 320
  %1003 = bitcast %"class.v8::internal::Factory"* %1002 to i64*
  %1004 = load i64, i64* %1003, align 8
  %1005 = inttoptr i64 %900 to i32*
  %1006 = trunc i64 %1004 to i32
  store atomic volatile i32 %1006, i32* %1005 monotonic, align 4
  %1007 = and i64 %1004, 1
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1020, label %1009

1009:                                             ; preds = %995
  %1010 = and i64 %1000, -262144
  %1011 = or i64 %1010, 8
  %1012 = inttoptr i64 %1011 to i64*
  %1013 = load i64, i64* %1012, align 8
  %1014 = and i64 %1013, 262144
  %1015 = icmp eq i64 %1014, 0
  br i1 %1015, label %1020, label %1016

1016:                                             ; preds = %1009
  %1017 = or i64 %1010, 16
  %1018 = inttoptr i64 %1017 to %"class.v8::internal::Heap"**
  %1019 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1018, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1019, i64 %1000, i64 0, i64 %1004) #6
  br label %1020

1020:                                             ; preds = %995, %1009, %1016
  %1021 = add i64 %900, 4
  %1022 = inttoptr i64 %1021 to double*
  store double %999, double* %1022, align 1
  %1023 = add i64 %900, 16
  br label %1045

1024:                                             ; preds = %973
  %1025 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %911, i64 0, i32 0, i32 7, i32 0, i64 24
  %1026 = load i64, i64* %1025, align 8
  %1027 = add i64 %930, -1
  %1028 = inttoptr i64 %1027 to i32*
  %1029 = trunc i64 %1026 to i32
  store atomic volatile i32 %1029, i32* %1028 release, align 4
  %1030 = icmp eq i32 %1029, 0
  %1031 = and i64 %1026, 1
  %1032 = icmp eq i64 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %1045, label %1034

1034:                                             ; preds = %1024
  %1035 = and i64 %930, -262144
  %1036 = or i64 %1035, 8
  %1037 = inttoptr i64 %1036 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = and i64 %1038, 262144
  %1040 = icmp eq i64 %1039, 0
  br i1 %1040, label %1045, label %1041

1041:                                             ; preds = %1034
  %1042 = or i64 %1035, 16
  %1043 = inttoptr i64 %1042 to %"class.v8::internal::Heap"**
  %1044 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1043, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1044, i64 %930, i64 0, i64 %1026) #6
  br label %1045

1045:                                             ; preds = %1041, %1034, %1024, %1020, %969
  %1046 = phi i64 [ %1000, %1020 ], [ %930, %969 ], [ %930, %1024 ], [ %930, %1034 ], [ %930, %1041 ]
  %1047 = phi i64 [ %996, %1020 ], [ %901, %969 ], [ %901, %1024 ], [ %901, %1034 ], [ %901, %1041 ]
  %1048 = phi i64 [ %1023, %1020 ], [ %900, %969 ], [ %900, %1024 ], [ %900, %1034 ], [ %900, %1041 ]
  %1049 = load i64, i64* %829, align 8
  %1050 = and i32 %965, 8191
  %1051 = zext i32 %1050 to i64
  %1052 = add nsw i64 %1051, -1
  %1053 = add i64 %1052, %1049
  %1054 = inttoptr i64 %1053 to i32*
  %1055 = trunc i64 %1046 to i32
  store atomic volatile i32 %1055, i32* %1054 monotonic, align 4
  %1056 = and i64 %1046, 1
  %1057 = icmp eq i64 %1056, 0
  %1058 = or i1 %893, %1057
  br i1 %1058, label %1082, label %1059

1059:                                             ; preds = %1045
  %1060 = and i64 %1049, -262144
  %1061 = or i64 %1060, 8
  %1062 = inttoptr i64 %1061 to i64*
  %1063 = load i64, i64* %1062, align 8
  %1064 = and i64 %1063, 262144
  %1065 = icmp eq i64 %1064, 0
  br i1 %1065, label %1070, label %1066

1066:                                             ; preds = %1059
  %1067 = or i64 %1060, 16
  %1068 = inttoptr i64 %1067 to %"class.v8::internal::Heap"**
  %1069 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1068, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %1069, i64 %1049, i64 %1053, i64 %1046) #6
  br label %1070

1070:                                             ; preds = %1059, %1066
  %1071 = and i64 %1046, -262144
  %1072 = or i64 %1071, 8
  %1073 = inttoptr i64 %1072 to i64*
  %1074 = load i64, i64* %1073, align 8
  %1075 = and i64 %1074, 24
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1082, label %1077

1077:                                             ; preds = %1070
  %1078 = load i64, i64* %1062, align 8
  %1079 = and i64 %1078, 24
  %1080 = icmp eq i64 %1079, 0
  br i1 %1080, label %1081, label %1082

1081:                                             ; preds = %1077
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1049, i64 %1053, i64 %1046) #6
  br label %1082

1082:                                             ; preds = %897, %1045, %1081, %1077, %1070
  %1083 = phi i64 [ %901, %897 ], [ %1047, %1045 ], [ %1047, %1070 ], [ %1047, %1077 ], [ %1047, %1081 ]
  %1084 = phi i64 [ %900, %897 ], [ %1048, %1045 ], [ %1048, %1070 ], [ %1048, %1077 ], [ %1048, %1081 ]
  %1085 = phi i32 [ %899, %897 ], [ %970, %1045 ], [ %970, %1070 ], [ %970, %1077 ], [ %970, %1081 ]
  %1086 = add nuw nsw i64 %898, 1
  %1087 = icmp eq i64 %1086, %895
  br i1 %1087, label %896, label %897

1088:                                             ; preds = %896
  %1089 = load i64, i64* %816, align 8
  %1090 = add i64 %1089, 3
  %1091 = inttoptr i64 %1090 to i32*
  store atomic volatile i32 0, i32* %1091 monotonic, align 4
  br label %1092

1092:                                             ; preds = %1088, %896
  %1093 = icmp slt i32 %770, %27
  br i1 %1093, label %1094, label %1203

1094:                                             ; preds = %1092
  %1095 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %2, i64 0, i32 0
  %1096 = bitcast %"class.v8::internal::LookupIterator"* %14 to i8*
  %1097 = ptrtoint i64* %829 to i64
  %1098 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 0
  %1099 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 1
  %1100 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 2
  %1101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 3
  %1102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 4, i32 0
  %1103 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 5
  %1104 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 6, i32 0, i32 0
  %1105 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 7, i32 0, i32 0
  %1106 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 8, i32 0, i32 0
  %1107 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 9, i32 0, i32 0
  %1108 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 10
  %1109 = bitcast %"class.v8::internal::Handle.1129"* %1108 to i64*
  %1110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 11
  %1111 = bitcast i64* %1110 to i8*
  %1112 = zext i32 %770 to i64
  %1113 = zext i32 %18 to i64
  %1114 = zext i32 %27 to i64
  br label %1115

1115:                                             ; preds = %1200, %1094
  %1116 = phi i64 [ %1112, %1094 ], [ %1201, %1200 ]
  %1117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %1118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31
  %1119 = bitcast %"struct.v8::internal::HandleScopeData"* %1118 to i64*
  %1120 = load i64, i64* %1119, align 8
  %1121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31, i32 1
  %1122 = load i64*, i64** %1121, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1117, i64 0, i32 31, i32 2
  %1124 = load i32, i32* %1123, align 8
  %1125 = add nsw i32 %1124, 1
  store i32 %1125, i32* %1123, align 8
  %1126 = add nuw i64 %1116, %1113
  %1127 = load %"struct.v8::internal::JsonProperty"*, %"struct.v8::internal::JsonProperty"** %1095, align 8
  %1128 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 0, i32 2
  %1129 = load i8, i8* %1128, align 4
  %1130 = and i8 %1129, 8
  %1131 = icmp eq i8 %1130, 0
  br i1 %1131, label %1132, label %1185

1132:                                             ; preds = %1115
  %1133 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 0
  %1134 = call i64* @_ZN2v88internal10JsonParserItE10MakeStringERKNS0_10JsonStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonParser.1175"* %0, %"class.v8::internal::JsonString"* dereferenceable(12) %1133, i64* null)
  %1135 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %1127, i64 %1126, i32 1, i32 0, i32 0
  %1136 = load i64*, i64** %1135, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1096) #6
  %1137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %1138 = icmp eq i64* %1134, null
  br i1 %1138, label %1160, label %1139

1139:                                             ; preds = %1132
  %1140 = load i64, i64* %1134, align 8
  %1141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1137, i64 0, i32 0, i32 4
  %1142 = load i64, i64* %1141, align 8
  %1143 = add i64 %1140, -1
  %1144 = inttoptr i64 %1143 to i32*
  %1145 = load atomic i32, i32* %1144 monotonic, align 4
  %1146 = and i64 %1142, 4294967295
  %1147 = icmp eq i64 %1146, 0
  call void @llvm.assume(i1 %1147) #6
  %1148 = zext i32 %1145 to i64
  %1149 = or i64 %1142, %1148
  %1150 = add i64 %1149, 7
  %1151 = inttoptr i64 %1150 to i16*
  %1152 = load atomic i16, i16* %1151 monotonic, align 2
  %1153 = icmp eq i16 %1152, 64
  br i1 %1153, label %1154, label %1160

1154:                                             ; preds = %1139
  %1155 = add i64 %1140, 7
  %1156 = inttoptr i64 %1155 to i32*
  %1157 = load i32, i32* %1156, align 4
  %1158 = and i32 %1157, 1
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1160, label %1161

1160:                                             ; preds = %1154, %1139, %1132
  br label %1161

1161:                                             ; preds = %1160, %1154
  %1162 = phi i32 [ 1, %1160 ], [ 0, %1154 ]
  store i32 %1162, i32* %1098, align 8
  store i32 4, i32* %1099, align 4
  store i8 0, i8* %1100, align 8
  store i32 0, i32* %1101, align 4
  store i32 0, i32* %1102, align 8
  store %"class.v8::internal::Isolate"* %1137, %"class.v8::internal::Isolate"** %1103, align 8
  store i64* %1134, i64** %1104, align 8
  store i64* null, i64** %1105, align 8
  store i64* %829, i64** %1106, align 8
  store i64* null, i64** %1107, align 8
  store i64 %1097, i64* %1109, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1111, i8 -1, i64 16, i1 false) #6
  %1163 = load i64, i64* %1134, align 8
  %1164 = and i64 %1163, -4294967296
  %1165 = add i64 %1163, -1
  %1166 = inttoptr i64 %1165 to i32*
  %1167 = load atomic i32, i32* %1166 monotonic, align 4
  %1168 = zext i32 %1167 to i64
  %1169 = or i64 %1164, %1168
  %1170 = add i64 %1169, 7
  %1171 = inttoptr i64 %1170 to i16*
  %1172 = load atomic i16, i16* %1171 monotonic, align 2
  %1173 = and i16 %1172, -32
  %1174 = icmp eq i16 %1173, 32
  br i1 %1174, label %1175, label %1179

1175:                                             ; preds = %1161
  %1176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1137, i64 0, i32 5, i32 0, i32 0, i32 0
  %1177 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %1176, align 8
  %1178 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %1177, %"class.v8::internal::Isolate"* %1137, i64* %1134) #6
  br label %1179

1179:                                             ; preds = %1161, %1175
  %1180 = phi i64* [ %1178, %1175 ], [ %1134, %1161 ]
  store i64* %1180, i64** %1104, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %14) #6
  %1181 = call i64* @_ZN2v88internal8JSObject33DefineOwnPropertyIgnoreAttributesEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesENS1_20AccessorInfoHandlingE(%"class.v8::internal::LookupIterator"* nonnull %14, i64* %1136, i32 0, i32 1) #6
  %1182 = icmp eq i64* %1181, null
  br i1 %1182, label %1183, label %1184, !prof !3

1183:                                             ; preds = %1179
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #15
  unreachable

1184:                                             ; preds = %1179
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1096) #6
  br label %1185

1185:                                             ; preds = %1115, %1184
  %1186 = icmp eq %"class.v8::internal::Isolate"* %1117, null
  br i1 %1186, label %1200, label %1187

1187:                                             ; preds = %1185
  %1188 = inttoptr i64 %1120 to i64*
  %1189 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1118, i64 0, i32 0
  %1190 = load i64*, i64** %1189, align 8
  store i64 %1120, i64* %1119, align 8
  %1191 = load i32, i32* %1123, align 8
  %1192 = add nsw i32 %1191, -1
  store i32 %1192, i32* %1123, align 8
  %1193 = load i64*, i64** %1121, align 8
  %1194 = icmp eq i64* %1193, %1122
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1187
  store i64* %1122, i64** %1121, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1117) #6
  %1196 = load i64*, i64** %1189, align 8
  br label %1197

1197:                                             ; preds = %1195, %1187
  %1198 = phi i64* [ %1196, %1195 ], [ %1188, %1187 ]
  %1199 = phi i64* [ %1122, %1195 ], [ %1190, %1187 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1198, i64* %1199) #6
  br label %1200

1200:                                             ; preds = %1185, %1197
  %1201 = add nuw nsw i64 %1116, 1
  %1202 = icmp eq i64 %1201, %1114
  br i1 %1202, label %1203, label %1115

1203:                                             ; preds = %1200, %1092
  ret i64* %829
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE14BuildJsonArrayERKNS2_16JsonContinuationERKNS_4base11SmallVectorINS0_6HandleINS0_6ObjectEEELm16EEE(%"class.v8::internal::JsonParser.1175"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* dereferenceable(40), %"class.v8::base::SmallVector.1157"* dereferenceable(152)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 2
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 1
  %9 = bitcast %"class.v8::internal::Handle.1129"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::base::SmallVector.1157"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = sub i32 %15, %6
  %17 = icmp ugt i64 %14, %7
  %18 = inttoptr i64 %12 to %"class.v8::internal::Handle.1129"*
  br i1 %17, label %19, label %87

19:                                               ; preds = %3, %38
  %20 = phi i8 [ %39, %38 ], [ 0, %3 ]
  %21 = phi i64 [ %40, %38 ], [ %7, %3 ]
  %22 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %18, i64 %21, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %19
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp eq i16 %36, 66
  br i1 %37, label %38, label %87

38:                                               ; preds = %19, %27
  %39 = phi i8 [ %20, %19 ], [ 4, %27 ]
  %40 = add i64 %21, 1
  %41 = icmp eq i64 %40, %14
  br i1 %41, label %42, label %19

42:                                               ; preds = %38
  %43 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %44 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %43, align 8
  %45 = tail call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %44, i8 zeroext %39, i32 %16, i32 %16, i32 0, i8 zeroext 0) #6
  %46 = icmp eq i8 %39, 4
  br i1 %46, label %47, label %92

47:                                               ; preds = %42
  %48 = load i64, i64* %45, align 8
  %49 = and i64 %48, -4294967296
  %50 = add i64 %48, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = icmp sgt i32 %16, 0
  br i1 %55, label %56, label %212

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 0
  %58 = zext i32 %16 to i64
  br label %59

59:                                               ; preds = %76, %56
  %60 = phi i64 [ 0, %56 ], [ %85, %76 ]
  %61 = add nuw nsw i64 %60, %7
  %62 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %57, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %62, i64 %61, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = trunc i64 %65 to i32
  %70 = ashr i32 %69, 1
  %71 = sitofp i32 %70 to double
  br label %76

72:                                               ; preds = %59
  %73 = add i64 %65, 3
  %74 = inttoptr i64 %73 to double*
  %75 = load double, double* %74, align 1
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi double [ %71, %68 ], [ %75, %72 ]
  %78 = shl i64 %60, 3
  %79 = fcmp uno double %77, 0.000000e+00
  %80 = and i64 %78, 4294967288
  %81 = or i64 %80, 7
  %82 = add i64 %54, %81
  %83 = inttoptr i64 %82 to double*
  %84 = select i1 %79, double 0x7FF8000000000000, double %77
  store double %84, double* %83, align 1
  %85 = add nuw nsw i64 %60, 1
  %86 = icmp eq i64 %85, %58
  br i1 %86, label %212, label %59

87:                                               ; preds = %27, %3
  %88 = phi i8 [ 0, %3 ], [ 2, %27 ]
  %89 = bitcast %"class.v8::internal::JsonParser.1175"* %0 to %"class.v8::internal::Factory"**
  %90 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %89, align 8
  %91 = tail call i64* @_ZN2v88internal7Factory10NewJSArrayENS0_12ElementsKindEiiNS0_26ArrayStorageAllocationModeENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %90, i8 zeroext %88, i32 %16, i32 %16, i32 0, i8 zeroext 0) #6
  br label %92

92:                                               ; preds = %87, %42
  %93 = phi i64* [ %45, %42 ], [ %91, %87 ]
  %94 = phi i8 [ %39, %42 ], [ %88, %87 ]
  %95 = load i64, i64* %93, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, 7
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = icmp eq i8 %94, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %92
  %104 = and i64 %101, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 262144
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %103
  %111 = and i64 %107, 24
  %112 = icmp eq i64 %111, 0
  %113 = select i1 %112, i32 4, i32 0
  br label %114

114:                                              ; preds = %110, %103, %92
  %115 = phi i32 [ 0, %92 ], [ 4, %103 ], [ %113, %110 ]
  %116 = icmp sgt i32 %16, 0
  br i1 %116, label %117, label %212

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %2, i64 0, i32 0
  %119 = add i64 %101, 7
  %120 = icmp eq i32 %115, 0
  %121 = and i64 %101, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = or i64 %121, 16
  %125 = inttoptr i64 %124 to %"class.v8::internal::Heap"**
  %126 = zext i32 %16 to i64
  br i1 %120, label %127, label %161

127:                                              ; preds = %117
  %128 = and i64 %126, 1
  %129 = icmp eq i32 %16, 1
  br i1 %129, label %197, label %130

130:                                              ; preds = %127
  %131 = sub nsw i64 %126, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %158, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %159, %132 ]
  %135 = add nuw nsw i64 %133, %7
  %136 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %136, i64 %135, i32 0, i32 0
  %138 = load i64*, i64** %137, align 8
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %133 to i32
  %141 = shl i32 %140, 2
  %142 = sext i32 %141 to i64
  %143 = add i64 %119, %142
  %144 = inttoptr i64 %143 to i32*
  %145 = trunc i64 %139 to i32
  store atomic volatile i32 %145, i32* %144 monotonic, align 4
  %146 = or i64 %133, 1
  %147 = add nuw nsw i64 %146, %7
  %148 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %148, i64 %147, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = load i64, i64* %150, align 8
  %152 = trunc i64 %146 to i32
  %153 = shl i32 %152, 2
  %154 = sext i32 %153 to i64
  %155 = add i64 %119, %154
  %156 = inttoptr i64 %155 to i32*
  %157 = trunc i64 %151 to i32
  store atomic volatile i32 %157, i32* %156 monotonic, align 4
  %158 = add nuw nsw i64 %133, 2
  %159 = add i64 %134, -2
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %197, label %132

161:                                              ; preds = %117, %194
  %162 = phi i64 [ %195, %194 ], [ 0, %117 ]
  %163 = add nuw nsw i64 %162, %7
  %164 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %164, i64 %163, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %162 to i32
  %169 = shl i32 %168, 2
  %170 = sext i32 %169 to i64
  %171 = add i64 %119, %170
  %172 = inttoptr i64 %171 to i32*
  %173 = trunc i64 %167 to i32
  store atomic volatile i32 %173, i32* %172 monotonic, align 4
  %174 = and i64 %167, 1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %194, label %176

176:                                              ; preds = %161
  %177 = load i64, i64* %123, align 8
  %178 = and i64 %177, 262144
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %125, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %181, i64 %101, i64 %171, i64 %167) #6
  br label %182

182:                                              ; preds = %176, %180
  %183 = and i64 %167, -262144
  %184 = or i64 %183, 8
  %185 = inttoptr i64 %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, 24
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %182
  %190 = load i64, i64* %123, align 8
  %191 = and i64 %190, 24
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %101, i64 %171, i64 %167) #6
  br label %194

194:                                              ; preds = %161, %182, %189, %193
  %195 = add nuw nsw i64 %162, 1
  %196 = icmp eq i64 %195, %126
  br i1 %196, label %212, label %161

197:                                              ; preds = %132, %127
  %198 = phi i64 [ 0, %127 ], [ %158, %132 ]
  %199 = icmp eq i64 %128, 0
  br i1 %199, label %212, label %200

200:                                              ; preds = %197
  %201 = add nuw nsw i64 %198, %7
  %202 = load %"class.v8::internal::Handle.1129"*, %"class.v8::internal::Handle.1129"** %118, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %202, i64 %201, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = load i64, i64* %204, align 8
  %206 = trunc i64 %198 to i32
  %207 = shl i32 %206, 2
  %208 = sext i32 %207 to i64
  %209 = add i64 %119, %208
  %210 = inttoptr i64 %209 to i32*
  %211 = trunc i64 %205 to i32
  store atomic volatile i32 %211, i32* %210 monotonic, align 4
  br label %212

212:                                              ; preds = %194, %200, %197, %76, %47, %114
  %213 = phi i64* [ %93, %114 ], [ %45, %47 ], [ %45, %76 ], [ %93, %197 ], [ %93, %200 ], [ %93, %194 ]
  ret i64* %213
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10JsonParserItE18object_constructorEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10JsonParserItE14UpdatePointersEv(%"class.v8::internal::JsonParser.1175"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i16*
  %7 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %8 = load i16*, i16** %7, align 8
  %9 = icmp eq i16* %8, %6
  br i1 %9, label %24, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 7
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i16* %8 to i64
  %15 = sub i64 %13, %14
  %16 = ashr exact i64 %15, 1
  %17 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 8
  %18 = bitcast i16** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %14
  %21 = ashr exact i64 %20, 1
  store i16* %6, i16** %7, align 8
  %22 = getelementptr inbounds i16, i16* %6, i64 %16
  store i16* %22, i16** %11, align 8
  %23 = getelementptr inbounds i16, i16* %6, i64 %21
  store i16* %23, i16** %17, align 8
  br label %24

24:                                               ; preds = %1, %10
  ret void
}

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal21JsonParseInternalizer23InternalizeJsonPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* nocapture readonly, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.v8::internal::Handle.1129"], align 16
  %5 = getelementptr inbounds %"class.v8::internal::JsonParseInternalizer", %"class.v8::internal::JsonParseInternalizer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = bitcast i64** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %17 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %16, i64* %1, i64* %2)
  %18 = icmp eq i64* %17, null
  br i1 %18, label %285, label %19

19:                                               ; preds = %3
  %20 = ptrtoint i64* %17 to i64
  %21 = load i64, i64* %17, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %231, label %24

24:                                               ; preds = %19
  %25 = and i64 %21, -4294967296
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp ugt i16 %33, 185
  br i1 %34, label %35, label %231

35:                                               ; preds = %24
  %36 = load atomic i32, i32* %27 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %25, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 1085
  br i1 %42, label %57, label %43

43:                                               ; preds = %35
  %44 = load atomic i32, i32* %27 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %25, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 188
  br i1 %50, label %51, label %154

51:                                               ; preds = %43
  %52 = tail call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* nonnull %17) #6
  %53 = trunc i16 %52 to i8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %285, label %55

55:                                               ; preds = %51
  %56 = icmp ult i16 %52, 256
  br i1 %56, label %154, label %57

57:                                               ; preds = %35, %55
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %59 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %58, i64* nonnull %17) #6
  %60 = icmp eq i64* %59, null
  br i1 %60, label %285, label %61

61:                                               ; preds = %57
  %62 = load i64, i64* %59, align 8
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = trunc i64 %62 to i32
  %67 = ashr i32 %66, 1
  %68 = sitofp i32 %67 to double
  br label %73

69:                                               ; preds = %61
  %70 = add i64 %62, 3
  %71 = inttoptr i64 %70 to double*
  %72 = load double, double* %71, align 1
  br label %73

73:                                               ; preds = %65, %69
  %74 = phi double [ %68, %65 ], [ %72, %69 ]
  %75 = fcmp ogt double %74, 0.000000e+00
  br i1 %75, label %76, label %231

76:                                               ; preds = %73
  %77 = bitcast %"class.v8::internal::JsonParseInternalizer"* %0 to %"class.v8::internal::FactoryBase"**
  %78 = bitcast %"class.v8::internal::JsonParseInternalizer"* %0 to %"class.v8::internal::Factory"**
  br label %79

79:                                               ; preds = %76, %151
  %80 = phi double [ 0.000000e+00, %76 ], [ %152, %151 ]
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31
  %83 = bitcast %"struct.v8::internal::HandleScopeData"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31, i32 1
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 31, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %77, align 8
  %91 = fcmp ult double %80, 0xC1D0000000000000
  %92 = fcmp ugt double %80, 0x41CFFFFFFF800000
  %93 = or i1 %92, %91
  %94 = bitcast double %80 to i64
  %95 = icmp eq i64 %94, -9223372036854775808
  %96 = or i1 %93, %95
  br i1 %96, label %126, label %97

97:                                               ; preds = %79
  %98 = fptosi double %80 to i32
  %99 = sitofp i32 %98 to double
  %100 = fcmp oeq double %80, %99
  br i1 %100, label %101, label %126

101:                                              ; preds = %97
  %102 = sext i32 %98 to i64
  %103 = shl nsw i64 %102, 1
  %104 = bitcast %"class.v8::internal::FactoryBase"* %90 to %"class.v8::internal::Isolate"*
  %105 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %90, i64 45608
  %106 = bitcast %"class.v8::internal::FactoryBase"* %105 to %"class.v8::internal::CanonicalHandleScope"**
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %106, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %101
  %110 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 %103) #6
  br label %131

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %90, i64 45584
  %113 = bitcast %"class.v8::internal::FactoryBase"* %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %90, i64 45592
  %116 = bitcast %"class.v8::internal::FactoryBase"* %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %114, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %111
  %120 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %104) #6
  br label %121

121:                                              ; preds = %119, %111
  %122 = phi i64* [ %120, %119 ], [ %114, %111 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = add i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  store i64* %125, i64** %113, align 8
  store i64 %103, i64* %122, align 8
  br label %131

126:                                              ; preds = %97, %79
  %127 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %90) #6
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 3
  %130 = inttoptr i64 %129 to double*
  store double %80, double* %130, align 1
  br label %131

131:                                              ; preds = %109, %121, %126
  %132 = phi i64* [ %127, %126 ], [ %110, %109 ], [ %122, %121 ]
  %133 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %78, align 8
  %134 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %133, i64* %132, i32 2) #6
  %135 = tail call zeroext i1 @_ZN2v88internal21JsonParseInternalizer15RecurseAndApplyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* %0, i64* nonnull %17, i64* %134)
  %136 = icmp eq %"class.v8::internal::Isolate"* %81, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %131
  %138 = inttoptr i64 %84 to i64*
  %139 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %82, i64 0, i32 0
  %140 = load i64*, i64** %139, align 8
  store i64 %84, i64* %83, align 8
  %141 = load i32, i32* %87, align 8
  %142 = add nsw i32 %141, -1
  store i32 %142, i32* %87, align 8
  %143 = load i64*, i64** %85, align 8
  %144 = icmp eq i64* %143, %86
  br i1 %144, label %147, label %145

145:                                              ; preds = %137
  store i64* %86, i64** %85, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %81) #6
  %146 = load i64*, i64** %139, align 8
  br label %147

147:                                              ; preds = %145, %137
  %148 = phi i64* [ %146, %145 ], [ %138, %137 ]
  %149 = phi i64* [ %86, %145 ], [ %140, %137 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %148, i64* %149) #6
  br label %150

150:                                              ; preds = %131, %147
  br i1 %135, label %151, label %285

151:                                              ; preds = %150
  %152 = fadd double %80, 1.000000e+00
  %153 = fcmp olt double %152, %74
  br i1 %153, label %79, label %231

154:                                              ; preds = %43, %55
  %155 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* nonnull %17, i32 0, i32 18, i32 0, i1 zeroext false, i1 zeroext false) #6
  %156 = icmp eq i64* %155, null
  br i1 %156, label %285, label %157

157:                                              ; preds = %154
  %158 = load i64, i64* %155, align 8
  %159 = add i64 %158, 3
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 1
  br i1 %162, label %171, label %231

163:                                              ; preds = %229
  %164 = load i64, i64* %155, align 8
  %165 = add i64 %164, 3
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = ashr i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = icmp slt i64 %230, %169
  br i1 %170, label %171, label %231

171:                                              ; preds = %157, %163
  %172 = phi i64 [ %230, %163 ], [ 0, %157 ]
  %173 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31
  %175 = bitcast %"struct.v8::internal::HandleScopeData"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31, i32 1
  %178 = load i64*, i64** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31, i32 2
  %180 = load i32, i32* %179, align 8
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %179, align 8
  %182 = load i64, i64* %155, align 8
  %183 = and i64 %182, -4294967296
  %184 = trunc i64 %172 to i32
  %185 = shl i32 %184, 2
  %186 = sext i32 %185 to i64
  %187 = add nsw i64 %186, 7
  %188 = add i64 %187, %182
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %183, %191
  %193 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %193, i64 0, i32 31, i32 4
  %195 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %194, align 8
  %196 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %171
  %198 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %195, i64 %192) #6
  br label %212

199:                                              ; preds = %171
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %193, i64 0, i32 31, i32 0
  %201 = load i64*, i64** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %193, i64 0, i32 31, i32 1
  %203 = load i64*, i64** %202, align 8
  %204 = icmp eq i64* %201, %203
  br i1 %204, label %205, label %207

205:                                              ; preds = %199
  %206 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %193) #6
  br label %207

207:                                              ; preds = %205, %199
  %208 = phi i64* [ %206, %205 ], [ %201, %199 ]
  %209 = ptrtoint i64* %208 to i64
  %210 = add i64 %209, 8
  %211 = inttoptr i64 %210 to i64*
  store i64* %211, i64** %200, align 8
  store i64 %192, i64* %208, align 8
  br label %212

212:                                              ; preds = %197, %207
  %213 = phi i64* [ %198, %197 ], [ %208, %207 ]
  %214 = tail call zeroext i1 @_ZN2v88internal21JsonParseInternalizer15RecurseAndApplyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* %0, i64* nonnull %17, i64* %213)
  %215 = icmp eq %"class.v8::internal::Isolate"* %173, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %212
  %217 = inttoptr i64 %176 to i64*
  %218 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %174, i64 0, i32 0
  %219 = load i64*, i64** %218, align 8
  store i64 %176, i64* %175, align 8
  %220 = load i32, i32* %179, align 8
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %179, align 8
  %222 = load i64*, i64** %177, align 8
  %223 = icmp eq i64* %222, %178
  br i1 %223, label %226, label %224

224:                                              ; preds = %216
  store i64* %178, i64** %177, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %173) #6
  %225 = load i64*, i64** %218, align 8
  br label %226

226:                                              ; preds = %224, %216
  %227 = phi i64* [ %225, %224 ], [ %217, %216 ]
  %228 = phi i64* [ %178, %224 ], [ %219, %216 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %227, i64* %228) #6
  br label %229

229:                                              ; preds = %212, %226
  %230 = add nuw nsw i64 %172, 1
  br i1 %214, label %163, label %285

231:                                              ; preds = %163, %151, %73, %157, %19, %24
  %232 = bitcast [2 x %"class.v8::internal::Handle.1129"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #6
  %233 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1129"], [2 x %"class.v8::internal::Handle.1129"]* %4, i64 0, i64 0
  %234 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1129"], [2 x %"class.v8::internal::Handle.1129"]* %4, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %234, align 16
  %235 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1129"], [2 x %"class.v8::internal::Handle.1129"]* %4, i64 0, i64 1
  %236 = bitcast %"class.v8::internal::Handle.1129"* %235 to i64*
  store i64 %20, i64* %236, align 8
  %237 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %238 = getelementptr inbounds %"class.v8::internal::JsonParseInternalizer", %"class.v8::internal::JsonParseInternalizer"* %0, i64 0, i32 1, i32 0, i32 0
  %239 = load i64*, i64** %238, align 8
  %240 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %237, i64* %239, i64* %1, i32 2, %"class.v8::internal::Handle.1129"* nonnull %233) #6
  %241 = icmp eq i64* %240, null
  br i1 %241, label %281, label %242

242:                                              ; preds = %231
  %243 = load i64, i64* %240, align 8
  %244 = inttoptr i64 %9 to i64*
  %245 = inttoptr i64 %12 to i64*
  %246 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %247 = load i64*, i64** %246, align 8
  store i64 %9, i64* %8, align 8
  %248 = load i32, i32* %13, align 8
  %249 = add nsw i32 %248, -1
  store i32 %249, i32* %13, align 8
  %250 = load i64*, i64** %10, align 8
  %251 = icmp eq i64* %250, %245
  br i1 %251, label %254, label %252

252:                                              ; preds = %242
  store i64* %245, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  %253 = load i64*, i64** %246, align 8
  br label %254

254:                                              ; preds = %252, %242
  %255 = phi i64* [ %253, %252 ], [ %244, %242 ]
  %256 = phi i64* [ %245, %252 ], [ %247, %242 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %255, i64* %256) #6
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 4
  %258 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %257, align 8
  %259 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %258, null
  br i1 %259, label %263, label %260

260:                                              ; preds = %254
  %261 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %258, i64 %243) #6
  %262 = ptrtoint i64* %261 to i64
  br label %275

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 0
  %265 = load i64*, i64** %264, align 8
  %266 = load i64*, i64** %10, align 8
  %267 = icmp eq i64* %265, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %263
  %269 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  br label %270

270:                                              ; preds = %268, %263
  %271 = phi i64* [ %269, %268 ], [ %265, %263 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = add i64 %272, 8
  %274 = inttoptr i64 %273 to i64*
  store i64* %274, i64** %264, align 8
  store i64 %243, i64* %271, align 8
  br label %275

275:                                              ; preds = %260, %270
  %276 = phi i64 [ %262, %260 ], [ %272, %270 ]
  %277 = load i64, i64* %8, align 8
  %278 = load i64, i64* %11, align 8
  %279 = load i32, i32* %13, align 8
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %13, align 8
  br label %281

281:                                              ; preds = %231, %275
  %282 = phi i64 [ %277, %275 ], [ %9, %231 ]
  %283 = phi i64 [ %278, %275 ], [ %12, %231 ]
  %284 = phi i64 [ %276, %275 ], [ 0, %231 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #6
  br label %285

285:                                              ; preds = %229, %150, %154, %57, %51, %3, %281
  %286 = phi i64 [ %282, %281 ], [ %9, %3 ], [ %9, %51 ], [ %9, %57 ], [ %9, %154 ], [ %9, %150 ], [ %9, %229 ]
  %287 = phi i64 [ %283, %281 ], [ %12, %3 ], [ %12, %51 ], [ %12, %57 ], [ %12, %154 ], [ %12, %150 ], [ %12, %229 ]
  %288 = phi i64 [ %284, %281 ], [ 0, %3 ], [ 0, %51 ], [ 0, %57 ], [ 0, %154 ], [ 0, %150 ], [ 0, %229 ]
  %289 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %289, label %304, label %290

290:                                              ; preds = %285
  %291 = inttoptr i64 %286 to i64*
  %292 = inttoptr i64 %287 to i64*
  %293 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %294 = load i64*, i64** %293, align 8
  store i64 %286, i64* %8, align 8
  %295 = load i32, i32* %13, align 8
  %296 = add nsw i32 %295, -1
  store i32 %296, i32* %13, align 8
  %297 = load i64*, i64** %10, align 8
  %298 = icmp eq i64* %297, %292
  br i1 %298, label %301, label %299

299:                                              ; preds = %290
  store i64* %292, i64** %10, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #6
  %300 = load i64*, i64** %293, align 8
  br label %301

301:                                              ; preds = %299, %290
  %302 = phi i64* [ %300, %299 ], [ %291, %290 ]
  %303 = phi i64* [ %292, %299 ], [ %294, %290 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %302, i64* %303) #6
  br label %304

304:                                              ; preds = %285, %301
  %305 = inttoptr i64 %288 to i64*
  ret i64* %305
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %12 = and i64 %10, -4294967296
  %13 = add i64 %10, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  %22 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  br i1 %21, label %23, label %37

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %24, align 8
  %25 = add i64 %10, 3
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -536870910
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = lshr i32 %27, 2
  %32 = and i32 %31, 16777215
  %33 = zext i32 %32 to i64
  store i64 %33, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %45

34:                                               ; preds = %23
  %35 = and i32 %27, 3
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %47

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load i64, i64* %2, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  br label %47

45:                                               ; preds = %38, %30
  %46 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i64*
  store i64 %8, i64* %46, align 8
  br label %64

47:                                               ; preds = %40, %37
  %48 = phi i32* [ %44, %40 ], [ %14, %37 ]
  %49 = phi i64 [ %42, %40 ], [ %12, %37 ]
  store i64 -1, i64* %11, align 8
  %50 = load atomic i32, i32* %48 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %49, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, -32
  %57 = icmp eq i16 %56, 32
  br i1 %57, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %59, align 8
  %61 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %60, %"class.v8::internal::Isolate"* %0, i64* %2) #6
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i64* [ %61, %58 ], [ %2, %47 ]
  store i64* %63, i64** %9, align 8
  br label %64

64:                                               ; preds = %45, %62
  %65 = phi i64* [ %2, %45 ], [ %63, %62 ]
  %66 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %66) #6
  %67 = load i64, i64* %11, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %65, i64 %67, i64* %1, i32 3) #6
  %68 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret i64* %68
}

declare i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21JsonParseInternalizer15RecurseAndApplyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* nocapture readonly, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::JsonParseInternalizer", %"class.v8::internal::JsonParseInternalizer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 6, i32 1, i32 3
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %25

11:                                               ; preds = %3
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 6, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  br i1 %15, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %16) #6
  br label %48

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 6
  %21 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %20) #6
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %24 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %23) #6
  br label %48

25:                                               ; preds = %3, %19
  %26 = tail call i64* @_ZN2v88internal21JsonParseInternalizer23InternalizeJsonPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6StringEEE(%"class.v8::internal::JsonParseInternalizer"* %0, i64* %1, i64* %2)
  %27 = icmp eq i64* %26, null
  br i1 %27, label %48, label %28

28:                                               ; preds = %25
  %29 = load i64, i64* %26, align 8
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 4
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %29 to i32
  %34 = trunc i64 %32 to i32
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = tail call i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* %1, i64* %2, i1 zeroext false) #6
  br label %44

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds i64*, i64** %40, i64 1
  %42 = bitcast i64** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #6
  store i64* %26, i64** %40, align 8
  store i8 -1, i8* %39, align 8
  %43 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %30, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* nonnull %4, i64 4294967297) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #6
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i16 [ %37, %36 ], [ %43, %38 ]
  %46 = trunc i16 %45 to i8
  %47 = icmp ne i8 %46, 0
  br label %48

48:                                               ; preds = %44, %25, %22, %17
  %49 = phi i1 [ false, %17 ], [ false, %22 ], [ %47, %44 ], [ false, %25 ]
  ret i1 %49
}

declare i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64*, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1129"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal19TransitionsAccessor28FindTransitionToDataPropertyENS0_6HandleINS0_4NameEEENS1_17RequestedLocationE(%"class.v8::internal::TransitionsAccessor"*, i64*, i32) local_unnamed_addr #3

declare i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9FieldType11NowContainsENS0_6ObjectE(%"class.v8::internal::FieldType"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #2 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #6
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1129"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1167"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #6
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1167"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #6
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1167"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1167"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #6
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #3

declare i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

declare i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EhEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6, !alias.scope !8
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %162

14:                                               ; preds = %3, %148
  %15 = phi i64 [ %154, %148 ], [ %6, %3 ]
  %16 = phi i32 [ %149, %148 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %147 [
    i32 8, label %27
    i32 0, label %34
    i32 10, label %53
    i32 2, label %91
    i32 11, label %141
    i32 3, label %141
    i32 9, label %155
    i32 1, label %155
    i32 13, label %148
    i32 5, label %148
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = tail call i32 @bcmp(i8* %31, i8* %1, i64 %2) #6
  %33 = icmp eq i32 %32, 0
  br label %162

34:                                               ; preds = %14
  %35 = add i64 %15, 11
  %36 = inttoptr i64 %35 to i16*
  %37 = sext i32 %16 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds i16, i16* %38, i64 %2
  %40 = icmp sgt i64 %2, 0
  br i1 %40, label %41, label %162

41:                                               ; preds = %34, %49
  %42 = phi i16* [ %50, %49 ], [ %38, %34 ]
  %43 = phi i8* [ %51, %49 ], [ %1, %34 ]
  %44 = load i16, i16* %42, align 2
  %45 = zext i16 %44 to i32
  %46 = load i8, i8* %43, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %162

49:                                               ; preds = %41
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  %52 = icmp ult i16* %50, %39
  br i1 %52, label %41, label %162

53:                                               ; preds = %14
  %54 = inttoptr i64 %17 to i32*
  %55 = and i64 %15, -4294967296
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, 16
  %63 = icmp eq i16 %62, 0
  %64 = add i64 %15, 11
  %65 = inttoptr i64 %64 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %63, label %78, label %66

66:                                               ; preds = %53
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 0
  %69 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %70 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %70, i64 2
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.v8::String::ExternalStringResourceBase"* %68) #6
  br i1 %73, label %74, label %78

74:                                               ; preds = %66
  %75 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %75) #6
  %76 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %75, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  br label %85

78:                                               ; preds = %66, %53
  %79 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %80 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %79 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %81 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %80, align 8
  %82 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, i64 6
  %83 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %82, align 8
  %84 = tail call i8* %83(%"class.v8::String::ExternalOneByteStringResource"* %79) #6
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i8* [ %77, %74 ], [ %84, %78 ]
  %87 = sext i32 %16 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = tail call i32 @bcmp(i8* %88, i8* %1, i64 %2) #6
  %90 = icmp eq i32 %89, 0
  br label %162

91:                                               ; preds = %14
  %92 = inttoptr i64 %17 to i32*
  %93 = and i64 %15, -4294967296
  %94 = load atomic i32, i32* %92 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %93, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  %102 = add i64 %15, 11
  %103 = inttoptr i64 %102 to %"class.v8::String::ExternalStringResource"**
  br i1 %101, label %116, label %104

104:                                              ; preds = %91
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 0
  %107 = bitcast %"class.v8::String::ExternalStringResource"* %105 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %108 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %108, i64 2
  %110 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::String::ExternalStringResourceBase"* %106) #6
  br i1 %111, label %112, label %116

112:                                              ; preds = %104
  %113 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %113) #6
  %114 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %113, i64 0, i32 1
  %115 = load i16*, i16** %114, align 8
  br label %123

116:                                              ; preds = %104, %91
  %117 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %118 = bitcast %"class.v8::String::ExternalStringResource"* %117 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %119 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %118, align 8
  %120 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %119, i64 6
  %121 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %120, align 8
  %122 = tail call i16* %121(%"class.v8::String::ExternalStringResource"* %117) #6
  br label %123

123:                                              ; preds = %116, %112
  %124 = phi i16* [ %115, %112 ], [ %122, %116 ]
  %125 = sext i32 %16 to i64
  %126 = getelementptr inbounds i16, i16* %124, i64 %125
  %127 = getelementptr inbounds i16, i16* %126, i64 %2
  %128 = icmp sgt i64 %2, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %123, %137
  %130 = phi i16* [ %138, %137 ], [ %126, %123 ]
  %131 = phi i8* [ %139, %137 ], [ %1, %123 ]
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = load i8, i8* %131, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %129
  %138 = getelementptr inbounds i16, i16* %130, i64 1
  %139 = getelementptr inbounds i8, i8* %131, i64 1
  %140 = icmp ult i16* %138, %127
  br i1 %140, label %129, label %162

141:                                              ; preds = %14, %14
  %142 = add i64 %15, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = ashr i32 %144, 1
  %146 = add nsw i32 %145, %16
  br label %148

147:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

148:                                              ; preds = %141, %14, %14
  %149 = phi i32 [ %146, %141 ], [ %16, %14 ], [ %16, %14 ]
  %150 = add i64 %15, 11
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %7, %153
  br label %14

155:                                              ; preds = %14, %14
  %156 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i8* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #6
  %157 = load i8, i8* %8, align 8, !range !4
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %160, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %161) #6
  br label %162

162:                                              ; preds = %129, %137, %41, %49, %85, %27, %34, %123, %3, %155, %159
  %163 = phi i1 [ %156, %155 ], [ %156, %159 ], [ %90, %85 ], [ %33, %27 ], [ true, %34 ], [ true, %123 ], [ false, %3 ], [ false, %41 ], [ true, %49 ], [ false, %129 ], [ true, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i1 %163
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i8*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #6
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #6
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %189

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #6
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %189, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %189, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #6
  br label %25

25:                                               ; preds = %22, %185
  %26 = phi i64 [ %3, %22 ], [ %180, %185 ]
  %27 = phi i64 [ %19, %22 ], [ %186, %185 ]
  %28 = phi i8* [ %2, %22 ], [ %179, %185 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %169, %25
  %36 = phi i64 [ %27, %25 ], [ %175, %169 ]
  %37 = phi i32 [ 0, %25 ], [ %170, %169 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %168 [
    i32 8, label %48
    i32 0, label %55
    i32 10, label %74
    i32 2, label %112
    i32 11, label %162
    i32 3, label %162
    i32 9, label %176
    i32 1, label %176
    i32 13, label %169
    i32 5, label %169
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = call i32 @bcmp(i8* %52, i8* %28, i64 %34) #6
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %178, label %189

55:                                               ; preds = %35
  %56 = add i64 %36, 11
  %57 = inttoptr i64 %56 to i16*
  %58 = sext i32 %37 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = getelementptr inbounds i16, i16* %59, i64 %34
  %61 = icmp sgt i64 %34, 0
  br i1 %61, label %62, label %178

62:                                               ; preds = %55, %70
  %63 = phi i16* [ %71, %70 ], [ %59, %55 ]
  %64 = phi i8* [ %72, %70 ], [ %28, %55 ]
  %65 = load i16, i16* %63, align 2
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* %64, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %189

70:                                               ; preds = %62
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = getelementptr inbounds i8, i8* %64, i64 1
  %73 = icmp ult i16* %71, %60
  br i1 %73, label %62, label %178

74:                                               ; preds = %35
  %75 = inttoptr i64 %38 to i32*
  %76 = and i64 %36, -4294967296
  %77 = load atomic i32, i32* %75 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %76, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 16
  %84 = icmp eq i16 %83, 0
  %85 = add i64 %36, 11
  %86 = inttoptr i64 %85 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %84, label %99, label %87

87:                                               ; preds = %74
  %88 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %89 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %88, i64 0, i32 0
  %90 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %88 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %91 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %91, i64 2
  %93 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.v8::String::ExternalStringResourceBase"* %89) #6
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %96) #6
  %97 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %96, i64 0, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %106

99:                                               ; preds = %74, %87
  %100 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %101 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %100 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %102 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %101, align 8
  %103 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %102, i64 6
  %104 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %103, align 8
  %105 = call i8* %104(%"class.v8::String::ExternalOneByteStringResource"* %100) #6
  br label %106

106:                                              ; preds = %99, %95
  %107 = phi i8* [ %98, %95 ], [ %105, %99 ]
  %108 = sext i32 %37 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = call i32 @bcmp(i8* %109, i8* %28, i64 %34) #6
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %178, label %189

112:                                              ; preds = %35
  %113 = inttoptr i64 %38 to i32*
  %114 = and i64 %36, -4294967296
  %115 = load atomic i32, i32* %113 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %114, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = and i16 %120, 16
  %122 = icmp eq i16 %121, 0
  %123 = add i64 %36, 11
  %124 = inttoptr i64 %123 to %"class.v8::String::ExternalStringResource"**
  br i1 %122, label %137, label %125

125:                                              ; preds = %112
  %126 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %127 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %126, i64 0, i32 0
  %128 = bitcast %"class.v8::String::ExternalStringResource"* %126 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %129, i64 2
  %131 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %130, align 8
  %132 = call zeroext i1 %131(%"class.v8::String::ExternalStringResourceBase"* %127) #6
  br i1 %132, label %133, label %137

133:                                              ; preds = %125
  %134 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %134) #6
  %135 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %134, i64 0, i32 1
  %136 = load i16*, i16** %135, align 8
  br label %144

137:                                              ; preds = %112, %125
  %138 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %139 = bitcast %"class.v8::String::ExternalStringResource"* %138 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %140 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %139, align 8
  %141 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %140, i64 6
  %142 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %141, align 8
  %143 = call i16* %142(%"class.v8::String::ExternalStringResource"* %138) #6
  br label %144

144:                                              ; preds = %137, %133
  %145 = phi i16* [ %136, %133 ], [ %143, %137 ]
  %146 = sext i32 %37 to i64
  %147 = getelementptr inbounds i16, i16* %145, i64 %146
  %148 = getelementptr inbounds i16, i16* %147, i64 %34
  %149 = icmp sgt i64 %34, 0
  br i1 %149, label %150, label %178

150:                                              ; preds = %144, %158
  %151 = phi i16* [ %159, %158 ], [ %147, %144 ]
  %152 = phi i8* [ %160, %158 ], [ %28, %144 ]
  %153 = load i16, i16* %151, align 2
  %154 = zext i16 %153 to i32
  %155 = load i8, i8* %152, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %189

158:                                              ; preds = %150
  %159 = getelementptr inbounds i16, i16* %151, i64 1
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  %161 = icmp ult i16* %159, %148
  br i1 %161, label %150, label %178

162:                                              ; preds = %35, %35
  %163 = add i64 %36, 15
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = add nsw i32 %166, %37
  br label %169

168:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

169:                                              ; preds = %35, %35, %162
  %170 = phi i32 [ %167, %162 ], [ %37, %35 ], [ %37, %35 ]
  %171 = add i64 %36, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %174, %4
  br label %35

176:                                              ; preds = %35, %35
  %177 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIhEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i8* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #6
  br i1 %177, label %178, label %189

178:                                              ; preds = %158, %70, %55, %144, %106, %48, %176
  %179 = getelementptr inbounds i8, i8* %28, i64 %34
  %180 = sub i64 %26, %34
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %178
  store i32 0, i32* %7, align 4
  %183 = load i32, i32* %17, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  %186 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %187 = trunc i64 %186 to i32
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %25

189:                                              ; preds = %182, %178, %185, %106, %48, %176, %150, %62, %12, %13, %18
  %190 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %62 ], [ false, %150 ], [ true, %182 ], [ true, %178 ], [ true, %185 ], [ false, %106 ], [ false, %48 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #6
  ret i1 %190
}

declare void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"*, i64, i32) local_unnamed_addr #3

declare i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"*, i32*) local_unnamed_addr #3

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10JsonParserIhE12DecodeStringIhEEvPT_ii(%"class.v8::internal::JsonParser"*, i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i8, i8* %7, i64 %8
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %92, %4
  %12 = phi i64 [ %5, %4 ], [ %95, %92 ]
  %13 = phi i8* [ %9, %4 ], [ %96, %92 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = sub i64 %5, %12
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = icmp eq i8* %13, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %11, %23
  %19 = phi i64 [ %26, %23 ], [ %12, %11 ]
  %20 = phi i8* [ %27, %23 ], [ %13, %11 ]
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 92
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %19 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = ptrtoint i8* %25 to i64
  store i8 %21, i8* %24, align 1
  %27 = getelementptr inbounds i8, i8* %20, i64 1
  %28 = icmp eq i8* %27, %16
  br i1 %28, label %97, label %18

29:                                               ; preds = %18, %11
  %30 = phi i64 [ %12, %11 ], [ %19, %18 ]
  %31 = phi i8* [ %13, %11 ], [ %20, %18 ]
  %32 = icmp eq i8* %31, %16
  br i1 %32, label %97, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %31, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = and i8 %38, 7
  switch i8 %39, label %91 [
    i8 1, label %46
    i8 2, label %49
    i8 3, label %52
    i8 4, label %55
    i8 5, label %58
    i8 6, label %61
    i8 7, label %40
    i8 0, label %90
  ]

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %31, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = add nsw i32 %43, -48
  %45 = icmp ult i32 %44, 10
  br i1 %45, label %70, label %64

46:                                               ; preds = %33
  %47 = inttoptr i64 %30 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  store i8 %35, i8* %47, align 1
  br label %92

49:                                               ; preds = %33
  %50 = inttoptr i64 %30 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 8, i8* %50, align 1
  br label %92

52:                                               ; preds = %33
  %53 = inttoptr i64 %30 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 9, i8* %53, align 1
  br label %92

55:                                               ; preds = %33
  %56 = inttoptr i64 %30 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 10, i8* %56, align 1
  br label %92

58:                                               ; preds = %33
  %59 = inttoptr i64 %30 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 12, i8* %59, align 1
  br label %92

61:                                               ; preds = %33
  %62 = inttoptr i64 %30 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 13, i8* %62, align 1
  br label %92

64:                                               ; preds = %40
  %65 = or i32 %44, 32
  %66 = add nsw i32 %65, -49
  %67 = icmp ult i32 %66, 6
  %68 = add nsw i32 %65, -39
  %69 = select i1 %67, i32 %68, i32 -1
  br label %70

70:                                               ; preds = %40, %64
  %71 = phi i32 [ %69, %64 ], [ %44, %40 ]
  %72 = shl nsw i32 %71, 4
  %73 = getelementptr inbounds i8, i8* %31, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = add nsw i32 %75, -48
  %77 = icmp ult i32 %76, 10
  br i1 %77, label %104, label %98

78:                                               ; preds = %134
  %79 = trunc i32 %136 to i8
  %80 = inttoptr i64 %30 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8 %79, i8* %80, align 1
  br label %92

82:                                               ; preds = %134
  %83 = add i32 %136, 196608
  %84 = lshr i32 %83, 10
  %85 = trunc i32 %84 to i8
  %86 = inttoptr i64 %30 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  store i8 %85, i8* %86, align 1
  %88 = trunc i32 %136 to i8
  %89 = getelementptr inbounds i8, i8* %86, i64 2
  store i8 %88, i8* %87, align 1
  br label %92

90:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

91:                                               ; preds = %33
  unreachable

92:                                               ; preds = %46, %49, %52, %55, %58, %61, %82, %78
  %93 = phi i8* [ %81, %78 ], [ %89, %82 ], [ %63, %61 ], [ %60, %58 ], [ %57, %55 ], [ %54, %52 ], [ %51, %49 ], [ %48, %46 ]
  %94 = phi i8* [ %137, %78 ], [ %137, %82 ], [ %34, %61 ], [ %34, %58 ], [ %34, %55 ], [ %34, %52 ], [ %34, %49 ], [ %34, %46 ]
  %95 = ptrtoint i8* %93 to i64
  %96 = getelementptr inbounds i8, i8* %94, i64 1
  br label %11

97:                                               ; preds = %29, %23
  ret void

98:                                               ; preds = %70
  %99 = or i32 %76, 32
  %100 = add nsw i32 %99, -49
  %101 = icmp ult i32 %100, 6
  %102 = add nsw i32 %99, -39
  %103 = select i1 %101, i32 %102, i32 -1
  br label %104

104:                                              ; preds = %98, %70
  %105 = phi i32 [ %103, %98 ], [ %76, %70 ]
  %106 = add i32 %105, %72
  %107 = shl i32 %106, 4
  %108 = getelementptr inbounds i8, i8* %31, i64 4
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = add nsw i32 %110, -48
  %112 = icmp ult i32 %111, 10
  br i1 %112, label %119, label %113

113:                                              ; preds = %104
  %114 = or i32 %111, 32
  %115 = add nsw i32 %114, -49
  %116 = icmp ult i32 %115, 6
  %117 = add nsw i32 %114, -39
  %118 = select i1 %116, i32 %117, i32 -1
  br label %119

119:                                              ; preds = %113, %104
  %120 = phi i32 [ %118, %113 ], [ %111, %104 ]
  %121 = add i32 %120, %107
  %122 = shl i32 %121, 4
  %123 = getelementptr inbounds i8, i8* %31, i64 5
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = add nsw i32 %125, -48
  %127 = icmp ult i32 %126, 10
  br i1 %127, label %134, label %128

128:                                              ; preds = %119
  %129 = or i32 %126, 32
  %130 = add nsw i32 %129, -49
  %131 = icmp ult i32 %130, 6
  %132 = add nsw i32 %129, -39
  %133 = select i1 %131, i32 %132, i32 -1
  br label %134

134:                                              ; preds = %128, %119
  %135 = phi i32 [ %133, %128 ], [ %126, %119 ]
  %136 = add i32 %135, %122
  %137 = getelementptr i8, i8* %31, i64 5
  %138 = icmp ult i32 %136, 65536
  br i1 %138, label %78, label %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16*, i8*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %0 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = zext i8 %6 to i16
  store i16 %7, i16* %0, align 2
  %8 = getelementptr inbounds i16, i16* %0, i64 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i16, i16* %0, i64 2
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  store i16 %15, i16* %12, align 2
  %16 = getelementptr inbounds i16, i16* %0, i64 3
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %0, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  store i16 %23, i16* %20, align 2
  %24 = getelementptr inbounds i16, i16* %0, i64 5
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i16, i16* %0, i64 6
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i16, i16* %0, i64 7
  %33 = getelementptr inbounds i8, i8* %1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  store i16 %35, i16* %32, align 2
  %36 = getelementptr inbounds i16, i16* %0, i64 8
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds i16, i16* %0, i64 9
  %41 = getelementptr inbounds i8, i8* %1, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  store i16 %43, i16* %40, align 2
  %44 = getelementptr inbounds i16, i16* %0, i64 10
  %45 = getelementptr inbounds i8, i8* %1, i64 10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i16, i16* %0, i64 11
  %49 = getelementptr inbounds i8, i8* %1, i64 11
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  store i16 %51, i16* %48, align 2
  %52 = getelementptr inbounds i16, i16* %0, i64 12
  %53 = getelementptr inbounds i8, i8* %1, i64 12
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  store i16 %55, i16* %52, align 2
  %56 = getelementptr inbounds i16, i16* %0, i64 13
  %57 = getelementptr inbounds i8, i8* %1, i64 13
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  store i16 %59, i16* %56, align 2
  %60 = getelementptr inbounds i16, i16* %0, i64 14
  %61 = getelementptr inbounds i8, i8* %1, i64 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  store i16 %63, i16* %60, align 2
  %64 = getelementptr inbounds i16, i16* %0, i64 15
  %65 = getelementptr inbounds i8, i8* %1, i64 15
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  store i16 %67, i16* %64, align 2
  br label %615

68:                                               ; preds = %3
  %69 = load i8, i8* %1, align 1
  %70 = zext i8 %69 to i16
  store i16 %70, i16* %0, align 2
  %71 = getelementptr inbounds i16, i16* %0, i64 1
  %72 = getelementptr inbounds i8, i8* %1, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %71, align 2
  %75 = getelementptr inbounds i16, i16* %0, i64 2
  %76 = getelementptr inbounds i8, i8* %1, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  store i16 %78, i16* %75, align 2
  %79 = getelementptr inbounds i16, i16* %0, i64 3
  %80 = getelementptr inbounds i8, i8* %1, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  store i16 %82, i16* %79, align 2
  %83 = getelementptr inbounds i16, i16* %0, i64 4
  %84 = getelementptr inbounds i8, i8* %1, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  store i16 %86, i16* %83, align 2
  %87 = getelementptr inbounds i16, i16* %0, i64 5
  %88 = getelementptr inbounds i8, i8* %1, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  store i16 %90, i16* %87, align 2
  %91 = getelementptr inbounds i16, i16* %0, i64 6
  %92 = getelementptr inbounds i8, i8* %1, i64 6
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  store i16 %94, i16* %91, align 2
  %95 = getelementptr inbounds i16, i16* %0, i64 7
  %96 = getelementptr inbounds i8, i8* %1, i64 7
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  store i16 %98, i16* %95, align 2
  %99 = getelementptr inbounds i16, i16* %0, i64 8
  %100 = getelementptr inbounds i8, i8* %1, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  store i16 %102, i16* %99, align 2
  %103 = getelementptr inbounds i16, i16* %0, i64 9
  %104 = getelementptr inbounds i8, i8* %1, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  store i16 %106, i16* %103, align 2
  %107 = getelementptr inbounds i16, i16* %0, i64 10
  %108 = getelementptr inbounds i8, i8* %1, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  store i16 %110, i16* %107, align 2
  %111 = getelementptr inbounds i16, i16* %0, i64 11
  %112 = getelementptr inbounds i8, i8* %1, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  store i16 %114, i16* %111, align 2
  %115 = getelementptr inbounds i16, i16* %0, i64 12
  %116 = getelementptr inbounds i8, i8* %1, i64 12
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  store i16 %118, i16* %115, align 2
  %119 = getelementptr inbounds i16, i16* %0, i64 13
  %120 = getelementptr inbounds i8, i8* %1, i64 13
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  store i16 %122, i16* %119, align 2
  %123 = getelementptr inbounds i16, i16* %0, i64 14
  %124 = getelementptr inbounds i8, i8* %1, i64 14
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  store i16 %126, i16* %123, align 2
  br label %615

127:                                              ; preds = %3
  %128 = load i8, i8* %1, align 1
  %129 = zext i8 %128 to i16
  store i16 %129, i16* %0, align 2
  %130 = getelementptr inbounds i16, i16* %0, i64 1
  %131 = getelementptr inbounds i8, i8* %1, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  store i16 %133, i16* %130, align 2
  %134 = getelementptr inbounds i16, i16* %0, i64 2
  %135 = getelementptr inbounds i8, i8* %1, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i16
  store i16 %137, i16* %134, align 2
  %138 = getelementptr inbounds i16, i16* %0, i64 3
  %139 = getelementptr inbounds i8, i8* %1, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  store i16 %141, i16* %138, align 2
  %142 = getelementptr inbounds i16, i16* %0, i64 4
  %143 = getelementptr inbounds i8, i8* %1, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  store i16 %145, i16* %142, align 2
  %146 = getelementptr inbounds i16, i16* %0, i64 5
  %147 = getelementptr inbounds i8, i8* %1, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  store i16 %149, i16* %146, align 2
  %150 = getelementptr inbounds i16, i16* %0, i64 6
  %151 = getelementptr inbounds i8, i8* %1, i64 6
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  store i16 %153, i16* %150, align 2
  %154 = getelementptr inbounds i16, i16* %0, i64 7
  %155 = getelementptr inbounds i8, i8* %1, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  store i16 %157, i16* %154, align 2
  %158 = getelementptr inbounds i16, i16* %0, i64 8
  %159 = getelementptr inbounds i8, i8* %1, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %0, i64 9
  %163 = getelementptr inbounds i8, i8* %1, i64 9
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %0, i64 10
  %167 = getelementptr inbounds i8, i8* %1, i64 10
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %0, i64 11
  %171 = getelementptr inbounds i8, i8* %1, i64 11
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %0, i64 12
  %175 = getelementptr inbounds i8, i8* %1, i64 12
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  store i16 %177, i16* %174, align 2
  %178 = getelementptr inbounds i16, i16* %0, i64 13
  %179 = getelementptr inbounds i8, i8* %1, i64 13
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  store i16 %181, i16* %178, align 2
  br label %615

182:                                              ; preds = %3
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i16
  store i16 %184, i16* %0, align 2
  %185 = getelementptr inbounds i16, i16* %0, i64 1
  %186 = getelementptr inbounds i8, i8* %1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  store i16 %188, i16* %185, align 2
  %189 = getelementptr inbounds i16, i16* %0, i64 2
  %190 = getelementptr inbounds i8, i8* %1, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  store i16 %192, i16* %189, align 2
  %193 = getelementptr inbounds i16, i16* %0, i64 3
  %194 = getelementptr inbounds i8, i8* %1, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i16
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %0, i64 4
  %198 = getelementptr inbounds i8, i8* %1, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  store i16 %200, i16* %197, align 2
  %201 = getelementptr inbounds i16, i16* %0, i64 5
  %202 = getelementptr inbounds i8, i8* %1, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  store i16 %204, i16* %201, align 2
  %205 = getelementptr inbounds i16, i16* %0, i64 6
  %206 = getelementptr inbounds i8, i8* %1, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  store i16 %208, i16* %205, align 2
  %209 = getelementptr inbounds i16, i16* %0, i64 7
  %210 = getelementptr inbounds i8, i8* %1, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  store i16 %212, i16* %209, align 2
  %213 = getelementptr inbounds i16, i16* %0, i64 8
  %214 = getelementptr inbounds i8, i8* %1, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  store i16 %216, i16* %213, align 2
  %217 = getelementptr inbounds i16, i16* %0, i64 9
  %218 = getelementptr inbounds i8, i8* %1, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  store i16 %220, i16* %217, align 2
  %221 = getelementptr inbounds i16, i16* %0, i64 10
  %222 = getelementptr inbounds i8, i8* %1, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  store i16 %224, i16* %221, align 2
  %225 = getelementptr inbounds i16, i16* %0, i64 11
  %226 = getelementptr inbounds i8, i8* %1, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i16
  store i16 %228, i16* %225, align 2
  %229 = getelementptr inbounds i16, i16* %0, i64 12
  %230 = getelementptr inbounds i8, i8* %1, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i16
  store i16 %232, i16* %229, align 2
  br label %615

233:                                              ; preds = %3
  %234 = load i8, i8* %1, align 1
  %235 = zext i8 %234 to i16
  store i16 %235, i16* %0, align 2
  %236 = getelementptr inbounds i16, i16* %0, i64 1
  %237 = getelementptr inbounds i8, i8* %1, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  store i16 %239, i16* %236, align 2
  %240 = getelementptr inbounds i16, i16* %0, i64 2
  %241 = getelementptr inbounds i8, i8* %1, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  store i16 %243, i16* %240, align 2
  %244 = getelementptr inbounds i16, i16* %0, i64 3
  %245 = getelementptr inbounds i8, i8* %1, i64 3
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i16
  store i16 %247, i16* %244, align 2
  %248 = getelementptr inbounds i16, i16* %0, i64 4
  %249 = getelementptr inbounds i8, i8* %1, i64 4
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  store i16 %251, i16* %248, align 2
  %252 = getelementptr inbounds i16, i16* %0, i64 5
  %253 = getelementptr inbounds i8, i8* %1, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  store i16 %255, i16* %252, align 2
  %256 = getelementptr inbounds i16, i16* %0, i64 6
  %257 = getelementptr inbounds i8, i8* %1, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %0, i64 7
  %261 = getelementptr inbounds i8, i8* %1, i64 7
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  store i16 %263, i16* %260, align 2
  %264 = getelementptr inbounds i16, i16* %0, i64 8
  %265 = getelementptr inbounds i8, i8* %1, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  store i16 %267, i16* %264, align 2
  %268 = getelementptr inbounds i16, i16* %0, i64 9
  %269 = getelementptr inbounds i8, i8* %1, i64 9
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  store i16 %271, i16* %268, align 2
  %272 = getelementptr inbounds i16, i16* %0, i64 10
  %273 = getelementptr inbounds i8, i8* %1, i64 10
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  store i16 %275, i16* %272, align 2
  %276 = getelementptr inbounds i16, i16* %0, i64 11
  %277 = getelementptr inbounds i8, i8* %1, i64 11
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  store i16 %279, i16* %276, align 2
  br label %615

280:                                              ; preds = %3
  %281 = load i8, i8* %1, align 1
  %282 = zext i8 %281 to i16
  store i16 %282, i16* %0, align 2
  %283 = getelementptr inbounds i16, i16* %0, i64 1
  %284 = getelementptr inbounds i8, i8* %1, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i16
  store i16 %286, i16* %283, align 2
  %287 = getelementptr inbounds i16, i16* %0, i64 2
  %288 = getelementptr inbounds i8, i8* %1, i64 2
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  store i16 %290, i16* %287, align 2
  %291 = getelementptr inbounds i16, i16* %0, i64 3
  %292 = getelementptr inbounds i8, i8* %1, i64 3
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i16
  store i16 %294, i16* %291, align 2
  %295 = getelementptr inbounds i16, i16* %0, i64 4
  %296 = getelementptr inbounds i8, i8* %1, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i16
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %0, i64 5
  %300 = getelementptr inbounds i8, i8* %1, i64 5
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  store i16 %302, i16* %299, align 2
  %303 = getelementptr inbounds i16, i16* %0, i64 6
  %304 = getelementptr inbounds i8, i8* %1, i64 6
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  store i16 %306, i16* %303, align 2
  %307 = getelementptr inbounds i16, i16* %0, i64 7
  %308 = getelementptr inbounds i8, i8* %1, i64 7
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  store i16 %310, i16* %307, align 2
  %311 = getelementptr inbounds i16, i16* %0, i64 8
  %312 = getelementptr inbounds i8, i8* %1, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i16
  store i16 %314, i16* %311, align 2
  %315 = getelementptr inbounds i16, i16* %0, i64 9
  %316 = getelementptr inbounds i8, i8* %1, i64 9
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  store i16 %318, i16* %315, align 2
  %319 = getelementptr inbounds i16, i16* %0, i64 10
  %320 = getelementptr inbounds i8, i8* %1, i64 10
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  store i16 %322, i16* %319, align 2
  br label %615

323:                                              ; preds = %3
  %324 = load i8, i8* %1, align 1
  %325 = zext i8 %324 to i16
  store i16 %325, i16* %0, align 2
  %326 = getelementptr inbounds i16, i16* %0, i64 1
  %327 = getelementptr inbounds i8, i8* %1, i64 1
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i16
  store i16 %329, i16* %326, align 2
  %330 = getelementptr inbounds i16, i16* %0, i64 2
  %331 = getelementptr inbounds i8, i8* %1, i64 2
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %0, i64 3
  %335 = getelementptr inbounds i8, i8* %1, i64 3
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  store i16 %337, i16* %334, align 2
  %338 = getelementptr inbounds i16, i16* %0, i64 4
  %339 = getelementptr inbounds i8, i8* %1, i64 4
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i16
  store i16 %341, i16* %338, align 2
  %342 = getelementptr inbounds i16, i16* %0, i64 5
  %343 = getelementptr inbounds i8, i8* %1, i64 5
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i16
  store i16 %345, i16* %342, align 2
  %346 = getelementptr inbounds i16, i16* %0, i64 6
  %347 = getelementptr inbounds i8, i8* %1, i64 6
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i16
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %0, i64 7
  %351 = getelementptr inbounds i8, i8* %1, i64 7
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %0, i64 8
  %355 = getelementptr inbounds i8, i8* %1, i64 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i16
  store i16 %357, i16* %354, align 2
  %358 = getelementptr inbounds i16, i16* %0, i64 9
  %359 = getelementptr inbounds i8, i8* %1, i64 9
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i16
  store i16 %361, i16* %358, align 2
  br label %615

362:                                              ; preds = %3
  %363 = load i8, i8* %1, align 1
  %364 = zext i8 %363 to i16
  store i16 %364, i16* %0, align 2
  %365 = getelementptr inbounds i16, i16* %0, i64 1
  %366 = getelementptr inbounds i8, i8* %1, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i16
  store i16 %368, i16* %365, align 2
  %369 = getelementptr inbounds i16, i16* %0, i64 2
  %370 = getelementptr inbounds i8, i8* %1, i64 2
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  store i16 %372, i16* %369, align 2
  %373 = getelementptr inbounds i16, i16* %0, i64 3
  %374 = getelementptr inbounds i8, i8* %1, i64 3
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  store i16 %376, i16* %373, align 2
  %377 = getelementptr inbounds i16, i16* %0, i64 4
  %378 = getelementptr inbounds i8, i8* %1, i64 4
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i16
  store i16 %380, i16* %377, align 2
  %381 = getelementptr inbounds i16, i16* %0, i64 5
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  store i16 %384, i16* %381, align 2
  %385 = getelementptr inbounds i16, i16* %0, i64 6
  %386 = getelementptr inbounds i8, i8* %1, i64 6
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i16
  store i16 %388, i16* %385, align 2
  %389 = getelementptr inbounds i16, i16* %0, i64 7
  %390 = getelementptr inbounds i8, i8* %1, i64 7
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i16
  store i16 %392, i16* %389, align 2
  %393 = getelementptr inbounds i16, i16* %0, i64 8
  %394 = getelementptr inbounds i8, i8* %1, i64 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  store i16 %396, i16* %393, align 2
  br label %615

397:                                              ; preds = %3
  %398 = load i8, i8* %1, align 1
  %399 = zext i8 %398 to i16
  store i16 %399, i16* %0, align 2
  %400 = getelementptr inbounds i16, i16* %0, i64 1
  %401 = getelementptr inbounds i8, i8* %1, i64 1
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i16
  store i16 %403, i16* %400, align 2
  %404 = getelementptr inbounds i16, i16* %0, i64 2
  %405 = getelementptr inbounds i8, i8* %1, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i16
  store i16 %407, i16* %404, align 2
  %408 = getelementptr inbounds i16, i16* %0, i64 3
  %409 = getelementptr inbounds i8, i8* %1, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  store i16 %411, i16* %408, align 2
  %412 = getelementptr inbounds i16, i16* %0, i64 4
  %413 = getelementptr inbounds i8, i8* %1, i64 4
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i16
  store i16 %415, i16* %412, align 2
  %416 = getelementptr inbounds i16, i16* %0, i64 5
  %417 = getelementptr inbounds i8, i8* %1, i64 5
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i16
  store i16 %419, i16* %416, align 2
  %420 = getelementptr inbounds i16, i16* %0, i64 6
  %421 = getelementptr inbounds i8, i8* %1, i64 6
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i16
  store i16 %423, i16* %420, align 2
  %424 = getelementptr inbounds i16, i16* %0, i64 7
  %425 = getelementptr inbounds i8, i8* %1, i64 7
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  store i16 %427, i16* %424, align 2
  br label %615

428:                                              ; preds = %3
  %429 = load i8, i8* %1, align 1
  %430 = zext i8 %429 to i16
  store i16 %430, i16* %0, align 2
  %431 = getelementptr inbounds i16, i16* %0, i64 1
  %432 = getelementptr inbounds i8, i8* %1, i64 1
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i16
  store i16 %434, i16* %431, align 2
  %435 = getelementptr inbounds i16, i16* %0, i64 2
  %436 = getelementptr inbounds i8, i8* %1, i64 2
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  store i16 %438, i16* %435, align 2
  %439 = getelementptr inbounds i16, i16* %0, i64 3
  %440 = getelementptr inbounds i8, i8* %1, i64 3
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i16
  store i16 %442, i16* %439, align 2
  %443 = getelementptr inbounds i16, i16* %0, i64 4
  %444 = getelementptr inbounds i8, i8* %1, i64 4
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i16
  store i16 %446, i16* %443, align 2
  %447 = getelementptr inbounds i16, i16* %0, i64 5
  %448 = getelementptr inbounds i8, i8* %1, i64 5
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  store i16 %450, i16* %447, align 2
  %451 = getelementptr inbounds i16, i16* %0, i64 6
  %452 = getelementptr inbounds i8, i8* %1, i64 6
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  store i16 %454, i16* %451, align 2
  br label %615

455:                                              ; preds = %3
  %456 = load i8, i8* %1, align 1
  %457 = zext i8 %456 to i16
  store i16 %457, i16* %0, align 2
  %458 = getelementptr inbounds i16, i16* %0, i64 1
  %459 = getelementptr inbounds i8, i8* %1, i64 1
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i16
  store i16 %461, i16* %458, align 2
  %462 = getelementptr inbounds i16, i16* %0, i64 2
  %463 = getelementptr inbounds i8, i8* %1, i64 2
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i16
  store i16 %465, i16* %462, align 2
  %466 = getelementptr inbounds i16, i16* %0, i64 3
  %467 = getelementptr inbounds i8, i8* %1, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  store i16 %469, i16* %466, align 2
  %470 = getelementptr inbounds i16, i16* %0, i64 4
  %471 = getelementptr inbounds i8, i8* %1, i64 4
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i16
  store i16 %473, i16* %470, align 2
  %474 = getelementptr inbounds i16, i16* %0, i64 5
  %475 = getelementptr inbounds i8, i8* %1, i64 5
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i16
  store i16 %477, i16* %474, align 2
  br label %615

478:                                              ; preds = %3
  %479 = load i8, i8* %1, align 1
  %480 = zext i8 %479 to i16
  store i16 %480, i16* %0, align 2
  %481 = getelementptr inbounds i16, i16* %0, i64 1
  %482 = getelementptr inbounds i8, i8* %1, i64 1
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i16
  store i16 %484, i16* %481, align 2
  %485 = getelementptr inbounds i16, i16* %0, i64 2
  %486 = getelementptr inbounds i8, i8* %1, i64 2
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i16
  store i16 %488, i16* %485, align 2
  %489 = getelementptr inbounds i16, i16* %0, i64 3
  %490 = getelementptr inbounds i8, i8* %1, i64 3
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i16
  store i16 %492, i16* %489, align 2
  %493 = getelementptr inbounds i16, i16* %0, i64 4
  %494 = getelementptr inbounds i8, i8* %1, i64 4
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i16
  store i16 %496, i16* %493, align 2
  br label %615

497:                                              ; preds = %3
  %498 = load i8, i8* %1, align 1
  %499 = zext i8 %498 to i16
  store i16 %499, i16* %0, align 2
  %500 = getelementptr inbounds i16, i16* %0, i64 1
  %501 = getelementptr inbounds i8, i8* %1, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i16
  store i16 %503, i16* %500, align 2
  %504 = getelementptr inbounds i16, i16* %0, i64 2
  %505 = getelementptr inbounds i8, i8* %1, i64 2
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i16
  store i16 %507, i16* %504, align 2
  %508 = getelementptr inbounds i16, i16* %0, i64 3
  %509 = getelementptr inbounds i8, i8* %1, i64 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i16
  store i16 %511, i16* %508, align 2
  br label %615

512:                                              ; preds = %3
  %513 = load i8, i8* %1, align 1
  %514 = zext i8 %513 to i16
  store i16 %514, i16* %0, align 2
  %515 = getelementptr inbounds i16, i16* %0, i64 1
  %516 = getelementptr inbounds i8, i8* %1, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i16
  store i16 %518, i16* %515, align 2
  %519 = getelementptr inbounds i16, i16* %0, i64 2
  %520 = getelementptr inbounds i8, i8* %1, i64 2
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  store i16 %522, i16* %519, align 2
  br label %615

523:                                              ; preds = %3
  %524 = load i8, i8* %1, align 1
  %525 = zext i8 %524 to i16
  store i16 %525, i16* %0, align 2
  %526 = getelementptr inbounds i16, i16* %0, i64 1
  %527 = getelementptr inbounds i8, i8* %1, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  store i16 %529, i16* %526, align 2
  br label %615

530:                                              ; preds = %3
  %531 = load i8, i8* %1, align 1
  %532 = zext i8 %531 to i16
  store i16 %532, i16* %0, align 2
  br label %615

533:                                              ; preds = %3
  %534 = getelementptr inbounds i8, i8* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %615, label %536

536:                                              ; preds = %533
  %537 = icmp ult i64 %2, 16
  br i1 %537, label %604, label %538

538:                                              ; preds = %536
  %539 = getelementptr i16, i16* %0, i64 %2
  %540 = bitcast i16* %539 to i8*
  %541 = icmp ugt i8* %534, %4
  %542 = icmp ugt i8* %540, %1
  %543 = and i1 %541, %542
  br i1 %543, label %604, label %544

544:                                              ; preds = %538
  %545 = and i64 %2, -16
  %546 = getelementptr i16, i16* %0, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = add i64 %545, -16
  %549 = lshr exact i64 %548, 4
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %586, label %553

553:                                              ; preds = %544
  %554 = sub nuw nsw i64 %550, %551
  br label %555

555:                                              ; preds = %555, %553
  %556 = phi i64 [ 0, %553 ], [ %583, %555 ]
  %557 = phi i64 [ %554, %553 ], [ %584, %555 ]
  %558 = getelementptr i16, i16* %0, i64 %556
  %559 = getelementptr i8, i8* %1, i64 %556
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !11
  %562 = getelementptr i8, i8* %559, i64 8
  %563 = bitcast i8* %562 to <8 x i8>*
  %564 = load <8 x i8>, <8 x i8>* %563, align 1, !alias.scope !11
  %565 = zext <8 x i8> %561 to <8 x i16>
  %566 = zext <8 x i8> %564 to <8 x i16>
  %567 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %567, align 2, !alias.scope !14, !noalias !11
  %568 = getelementptr i16, i16* %558, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !14, !noalias !11
  %570 = or i64 %556, 16
  %571 = getelementptr i16, i16* %0, i64 %570
  %572 = getelementptr i8, i8* %1, i64 %570
  %573 = bitcast i8* %572 to <8 x i8>*
  %574 = load <8 x i8>, <8 x i8>* %573, align 1, !alias.scope !11
  %575 = getelementptr i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to <8 x i8>*
  %577 = load <8 x i8>, <8 x i8>* %576, align 1, !alias.scope !11
  %578 = zext <8 x i8> %574 to <8 x i16>
  %579 = zext <8 x i8> %577 to <8 x i16>
  %580 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %580, align 2, !alias.scope !14, !noalias !11
  %581 = getelementptr i16, i16* %571, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !14, !noalias !11
  %583 = add i64 %556, 32
  %584 = add i64 %557, -2
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %555, !llvm.loop !16

586:                                              ; preds = %555, %544
  %587 = phi i64 [ 0, %544 ], [ %583, %555 ]
  %588 = icmp eq i64 %551, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %586
  %590 = getelementptr i16, i16* %0, i64 %587
  %591 = getelementptr i8, i8* %1, i64 %587
  %592 = bitcast i8* %591 to <8 x i8>*
  %593 = load <8 x i8>, <8 x i8>* %592, align 1, !alias.scope !11
  %594 = getelementptr i8, i8* %591, i64 8
  %595 = bitcast i8* %594 to <8 x i8>*
  %596 = load <8 x i8>, <8 x i8>* %595, align 1, !alias.scope !11
  %597 = zext <8 x i8> %593 to <8 x i16>
  %598 = zext <8 x i8> %596 to <8 x i16>
  %599 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %599, align 2, !alias.scope !14, !noalias !11
  %600 = getelementptr i16, i16* %590, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !14, !noalias !11
  br label %602

602:                                              ; preds = %586, %589
  %603 = icmp eq i64 %545, %2
  br i1 %603, label %615, label %604

604:                                              ; preds = %602, %538, %536
  %605 = phi i16* [ %0, %538 ], [ %0, %536 ], [ %546, %602 ]
  %606 = phi i8* [ %1, %538 ], [ %1, %536 ], [ %547, %602 ]
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i16* [ %613, %607 ], [ %605, %604 ]
  %609 = phi i8* [ %612, %607 ], [ %606, %604 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i16
  store i16 %611, i16* %608, align 2
  %612 = getelementptr inbounds i8, i8* %609, i64 1
  %613 = getelementptr inbounds i16, i16* %608, i64 1
  %614 = icmp eq i8* %612, %534
  br i1 %614, label %615, label %607, !llvm.loop !18

615:                                              ; preds = %607, %602, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10JsonParserIhE12DecodeStringItEEvPT_ii(%"class.v8::internal::JsonParser"*, i16*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i16* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser", %"class.v8::internal::JsonParser"* %0, i64 0, i32 9
  %7 = load i8*, i8** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i8, i8* %7, i64 %8
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %100, %4
  %12 = phi i64 [ %5, %4 ], [ %103, %100 ]
  %13 = phi i8* [ %9, %4 ], [ %104, %100 ]
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = sub i64 %12, %5
  %16 = ashr exact i64 %15, 1
  %17 = sub nsw i64 0, %16
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = icmp eq i8* %13, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %11, %25
  %21 = phi i64 [ %29, %25 ], [ %12, %11 ]
  %22 = phi i8* [ %30, %25 ], [ %13, %11 ]
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 92
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = zext i8 %23 to i16
  %27 = inttoptr i64 %21 to i16*
  %28 = getelementptr inbounds i16, i16* %27, i64 1
  %29 = ptrtoint i16* %28 to i64
  store i16 %26, i16* %27, align 2
  %30 = getelementptr inbounds i8, i8* %22, i64 1
  %31 = icmp eq i8* %30, %18
  br i1 %31, label %105, label %20

32:                                               ; preds = %20, %11
  %33 = phi i64 [ %12, %11 ], [ %21, %20 ]
  %34 = phi i8* [ %13, %11 ], [ %22, %20 ]
  %35 = icmp eq i8* %34, %18
  br i1 %35, label %105, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, 7
  switch i8 %42, label %99 [
    i8 1, label %49
    i8 2, label %53
    i8 3, label %56
    i8 4, label %59
    i8 5, label %62
    i8 6, label %65
    i8 7, label %43
    i8 0, label %98
  ]

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %34, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = add nsw i32 %46, -48
  %48 = icmp ult i32 %47, 10
  br i1 %48, label %74, label %68

49:                                               ; preds = %36
  %50 = zext i8 %38 to i16
  %51 = inttoptr i64 %33 to i16*
  %52 = getelementptr inbounds i16, i16* %51, i64 1
  store i16 %50, i16* %51, align 2
  br label %100

53:                                               ; preds = %36
  %54 = inttoptr i64 %33 to i16*
  %55 = getelementptr inbounds i16, i16* %54, i64 1
  store i16 8, i16* %54, align 2
  br label %100

56:                                               ; preds = %36
  %57 = inttoptr i64 %33 to i16*
  %58 = getelementptr inbounds i16, i16* %57, i64 1
  store i16 9, i16* %57, align 2
  br label %100

59:                                               ; preds = %36
  %60 = inttoptr i64 %33 to i16*
  %61 = getelementptr inbounds i16, i16* %60, i64 1
  store i16 10, i16* %60, align 2
  br label %100

62:                                               ; preds = %36
  %63 = inttoptr i64 %33 to i16*
  %64 = getelementptr inbounds i16, i16* %63, i64 1
  store i16 12, i16* %63, align 2
  br label %100

65:                                               ; preds = %36
  %66 = inttoptr i64 %33 to i16*
  %67 = getelementptr inbounds i16, i16* %66, i64 1
  store i16 13, i16* %66, align 2
  br label %100

68:                                               ; preds = %43
  %69 = or i32 %47, 32
  %70 = add nsw i32 %69, -49
  %71 = icmp ult i32 %70, 6
  %72 = add nsw i32 %69, -39
  %73 = select i1 %71, i32 %72, i32 -1
  br label %74

74:                                               ; preds = %43, %68
  %75 = phi i32 [ %73, %68 ], [ %47, %43 ]
  %76 = shl nsw i32 %75, 4
  %77 = getelementptr inbounds i8, i8* %34, i64 3
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = add nsw i32 %79, -48
  %81 = icmp ult i32 %80, 10
  br i1 %81, label %112, label %106

82:                                               ; preds = %142
  %83 = trunc i32 %144 to i16
  %84 = inttoptr i64 %33 to i16*
  %85 = getelementptr inbounds i16, i16* %84, i64 1
  store i16 %83, i16* %84, align 2
  br label %100

86:                                               ; preds = %142
  %87 = add i32 %144, 983040
  %88 = lshr i32 %87, 10
  %89 = trunc i32 %88 to i16
  %90 = and i16 %89, 1023
  %91 = or i16 %90, -10240
  %92 = inttoptr i64 %33 to i16*
  %93 = getelementptr inbounds i16, i16* %92, i64 1
  store i16 %91, i16* %92, align 2
  %94 = trunc i32 %144 to i16
  %95 = and i16 %94, 1023
  %96 = or i16 %95, -9216
  %97 = getelementptr inbounds i16, i16* %92, i64 2
  store i16 %96, i16* %93, align 2
  br label %100

98:                                               ; preds = %36
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

99:                                               ; preds = %36
  unreachable

100:                                              ; preds = %49, %53, %56, %59, %62, %65, %86, %82
  %101 = phi i16* [ %85, %82 ], [ %97, %86 ], [ %67, %65 ], [ %64, %62 ], [ %61, %59 ], [ %58, %56 ], [ %55, %53 ], [ %52, %49 ]
  %102 = phi i8* [ %145, %82 ], [ %145, %86 ], [ %37, %65 ], [ %37, %62 ], [ %37, %59 ], [ %37, %56 ], [ %37, %53 ], [ %37, %49 ]
  %103 = ptrtoint i16* %101 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 1
  br label %11

105:                                              ; preds = %32, %25
  ret void

106:                                              ; preds = %74
  %107 = or i32 %80, 32
  %108 = add nsw i32 %107, -49
  %109 = icmp ult i32 %108, 6
  %110 = add nsw i32 %107, -39
  %111 = select i1 %109, i32 %110, i32 -1
  br label %112

112:                                              ; preds = %106, %74
  %113 = phi i32 [ %111, %106 ], [ %80, %74 ]
  %114 = add i32 %113, %76
  %115 = shl i32 %114, 4
  %116 = getelementptr inbounds i8, i8* %34, i64 4
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = add nsw i32 %118, -48
  %120 = icmp ult i32 %119, 10
  br i1 %120, label %127, label %121

121:                                              ; preds = %112
  %122 = or i32 %119, 32
  %123 = add nsw i32 %122, -49
  %124 = icmp ult i32 %123, 6
  %125 = add nsw i32 %122, -39
  %126 = select i1 %124, i32 %125, i32 -1
  br label %127

127:                                              ; preds = %121, %112
  %128 = phi i32 [ %126, %121 ], [ %119, %112 ]
  %129 = add i32 %128, %115
  %130 = shl i32 %129, 4
  %131 = getelementptr inbounds i8, i8* %34, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = add nsw i32 %133, -48
  %135 = icmp ult i32 %134, 10
  br i1 %135, label %142, label %136

136:                                              ; preds = %127
  %137 = or i32 %134, 32
  %138 = add nsw i32 %137, -49
  %139 = icmp ult i32 %138, 6
  %140 = add nsw i32 %137, -39
  %141 = select i1 %139, i32 %140, i32 -1
  br label %142

142:                                              ; preds = %136, %127
  %143 = phi i32 [ %141, %136 ], [ %134, %127 ]
  %144 = add i32 %143, %130
  %145 = getelementptr i8, i8* %34, i64 5
  %146 = icmp ult i32 %144, 65536
  br i1 %146, label %82, label %86
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10JsonParserIhE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1150"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* dereferenceable(40)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1150"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1150"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33, i64 %32
  %36 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %35 to i64
  %37 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 0, i32 0
  %38 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33, i64 %9, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 0, i32 1
  %43 = bitcast i64** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i64** %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33, i64 %9, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 0, i32 2
  %48 = bitcast i64** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i64** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %37, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %1, i64 0, i32 1
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #6
  %55 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %34, i64 1
  %56 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.1150", %"class.std::__1::vector.1150"* %0, i64 0, i32 0, i32 0
  %58 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %57, align 8
  %59 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %3, align 8
  %60 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %59, %58
  br i1 %60, label %61, label %63

61:                                               ; preds = %31
  %62 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %58 to i64
  br label %90

63:                                               ; preds = %31, %63
  %64 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %66, %63 ], [ %34, %31 ]
  %65 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %67, %63 ], [ %59, %31 ]
  %66 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %64, i64 -1
  %67 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %65, i64 -1
  %68 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %64, i64 -1, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %65, i64 -1, i32 0, i32 1
  %74 = bitcast i64** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast i64** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %64, i64 -1, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %65, i64 -1, i32 0, i32 2
  %79 = bitcast i64** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i64** %77 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %68, align 8
  %82 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %64, i64 -1, i32 1
  %83 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %65, i64 -1, i32 1
  %84 = bitcast i32* %82 to i8*
  %85 = bitcast i32* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 12, i1 false) #6
  %86 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %67, %58
  br i1 %86, label %87, label %63

87:                                               ; preds = %63
  %88 = load i64, i64* %6, align 8
  %89 = load %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"** %3, align 8
  br label %90

90:                                               ; preds = %61, %87
  %91 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %58, %61 ], [ %89, %87 ]
  %92 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %34, %61 ], [ %66, %87 ]
  %93 = phi i64 [ %62, %61 ], [ %88, %87 ]
  %94 = ptrtoint %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %92 to i64
  store i64 %94, i64* %6, align 8
  store i64 %56, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %95 = inttoptr i64 %93 to %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"*
  %96 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %91, %95
  br i1 %96, label %126, label %97

97:                                               ; preds = %90, %124
  %98 = phi %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* [ %99, %124 ], [ %91, %90 ]
  %99 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Isolate"* %101, null
  br i1 %102, label %124, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %98, i64 -1, i32 0, i32 1
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %98, i64 -1, i32 0, i32 2
  %107 = load i64*, i64** %106, align 8
  %108 = ptrtoint i64* %105 to i64
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31
  %110 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %109, i64 0, i32 0
  %111 = bitcast %"struct.v8::internal::HandleScopeData"* %109 to i64*
  %112 = load i64*, i64** %110, align 8
  store i64 %108, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = add nsw i32 %114, -1
  store i32 %115, i32* %113, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 1
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %117, %107
  br i1 %118, label %121, label %119

119:                                              ; preds = %103
  store i64* %107, i64** %116, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %101) #6
  %120 = load i64*, i64** %110, align 8
  br label %121

121:                                              ; preds = %119, %103
  %122 = phi i64* [ %120, %119 ], [ %105, %103 ]
  %123 = phi i64* [ %107, %119 ], [ %112, %103 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %122, i64* %123) #6
  br label %124

124:                                              ; preds = %121, %97
  %125 = icmp eq %"struct.v8::internal::JsonParser<unsigned char>::JsonContinuation"* %99, %95
  br i1 %125, label %126, label %97

126:                                              ; preds = %124, %90
  %127 = icmp eq i64 %93, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %93 to i8*
  tail call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #7 comdat align 2 {
  %2 = tail call %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret %"struct.v8::internal::JsonProperty"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::JsonProperty"* @_ZN2v84base11SmallVectorINS_8internal12JsonPropertyELm16EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"struct.v8::internal::JsonProperty"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"struct.v8::internal::JsonProperty"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = sdiv exact i64 %13, 24
  %15 = shl nsw i64 %14, 1
  %16 = icmp ugt i64 %15, %1
  %17 = select i1 %16, i64 %15, i64 %1
  %18 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %17) #6
  %19 = mul i64 %18, 24
  %20 = tail call noalias i8* @malloc(i64 %19) #6
  %21 = bitcast i8* %20 to %"struct.v8::internal::JsonProperty"*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15, i64 0, i64 0)) #15
  unreachable

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %26, i64 %8, i1 false) #6
  %27 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @free(i8* %26) #6
  br label %30

30:                                               ; preds = %24, %29
  store i8* %20, i8** %25, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %21, i64 %9
  store %"struct.v8::internal::JsonProperty"* %31, %"struct.v8::internal::JsonProperty"** %3, align 8
  %32 = getelementptr inbounds %"struct.v8::internal::JsonProperty", %"struct.v8::internal::JsonProperty"* %21, i64 %18
  store %"struct.v8::internal::JsonProperty"* %32, %"struct.v8::internal::JsonProperty"** %10, align 8
  ret %"struct.v8::internal::JsonProperty"* %31
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEv(%"class.v8::base::SmallVector.1157"*) local_unnamed_addr #7 comdat align 2 {
  %2 = tail call %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEm(%"class.v8::base::SmallVector.1157"* %0, i64 0)
  ret %"class.v8::internal::Handle.1129"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Handle.1129"* @_ZN2v84base11SmallVectorINS_8internal6HandleINS2_6ObjectEEELm16EE4GrowEm(%"class.v8::base::SmallVector.1157"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::Handle.1129"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector.1157"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::Handle.1129"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #6
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #6
  %20 = bitcast i8* %19 to %"class.v8::internal::Handle.1129"*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector.1157"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #6
  %26 = getelementptr inbounds %"class.v8::base::SmallVector.1157", %"class.v8::base::SmallVector.1157"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #6
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %20, i64 %9
  store %"class.v8::internal::Handle.1129"* %30, %"class.v8::internal::Handle.1129"** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129"* %20, i64 %17
  store %"class.v8::internal::Handle.1129"* %31, %"class.v8::internal::Handle.1129"** %10, align 8
  ret %"class.v8::internal::Handle.1129"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EtEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"*, i16*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6, !alias.scope !19
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %168

14:                                               ; preds = %3, %154
  %15 = phi i64 [ %160, %154 ], [ %6, %3 ]
  %16 = phi i32 [ %155, %154 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %153 [
    i32 8, label %27
    i32 0, label %46
    i32 10, label %56
    i32 2, label %106
    i32 11, label %147
    i32 3, label %147
    i32 9, label %161
    i32 1, label %161
    i32 13, label %154
    i32 5, label %154
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  %33 = icmp sgt i64 %2, 0
  br i1 %33, label %34, label %168

34:                                               ; preds = %27, %42
  %35 = phi i8* [ %43, %42 ], [ %31, %27 ]
  %36 = phi i16* [ %44, %42 ], [ %1, %27 ]
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = load i16, i16* %36, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %168

42:                                               ; preds = %34
  %43 = getelementptr inbounds i8, i8* %35, i64 1
  %44 = getelementptr inbounds i16, i16* %36, i64 1
  %45 = icmp ult i8* %43, %32
  br i1 %45, label %34, label %168

46:                                               ; preds = %14
  %47 = add i64 %15, 11
  %48 = inttoptr i64 %47 to i16*
  %49 = sext i32 %16 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  %51 = bitcast i16* %50 to i8*
  %52 = bitcast i16* %1 to i8*
  %53 = shl i64 %2, 1
  %54 = tail call i32 @bcmp(i8* %51, i8* %52, i64 %53) #6
  %55 = icmp eq i32 %54, 0
  br label %168

56:                                               ; preds = %14
  %57 = inttoptr i64 %17 to i32*
  %58 = and i64 %15, -4294967296
  %59 = load atomic i32, i32* %57 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %58, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, 16
  %66 = icmp eq i16 %65, 0
  %67 = add i64 %15, 11
  %68 = inttoptr i64 %67 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %66, label %81, label %69

69:                                               ; preds = %56
  %70 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  %71 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %70, i64 0, i32 0
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %70 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %73 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %73, i64 2
  %75 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"class.v8::String::ExternalStringResourceBase"* %71) #6
  br i1 %76, label %77, label %81

77:                                               ; preds = %69
  %78 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %78) #6
  %79 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %78, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8
  br label %88

81:                                               ; preds = %69, %56
  %82 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %68, align 1
  %83 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %82 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %84 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %83, align 8
  %85 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %84, i64 6
  %86 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %85, align 8
  %87 = tail call i8* %86(%"class.v8::String::ExternalOneByteStringResource"* %82) #6
  br label %88

88:                                               ; preds = %81, %77
  %89 = phi i8* [ %80, %77 ], [ %87, %81 ]
  %90 = sext i32 %16 to i64
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 %2
  %93 = icmp sgt i64 %2, 0
  br i1 %93, label %94, label %168

94:                                               ; preds = %88, %102
  %95 = phi i8* [ %103, %102 ], [ %91, %88 ]
  %96 = phi i16* [ %104, %102 ], [ %1, %88 ]
  %97 = load i8, i8* %95, align 1
  %98 = zext i8 %97 to i32
  %99 = load i16, i16* %96, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %102, label %168

102:                                              ; preds = %94
  %103 = getelementptr inbounds i8, i8* %95, i64 1
  %104 = getelementptr inbounds i16, i16* %96, i64 1
  %105 = icmp ult i8* %103, %92
  br i1 %105, label %94, label %168

106:                                              ; preds = %14
  %107 = inttoptr i64 %17 to i32*
  %108 = and i64 %15, -4294967296
  %109 = load atomic i32, i32* %107 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %108, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = and i16 %114, 16
  %116 = icmp eq i16 %115, 0
  %117 = add i64 %15, 11
  %118 = inttoptr i64 %117 to %"class.v8::String::ExternalStringResource"**
  br i1 %116, label %131, label %119

119:                                              ; preds = %106
  %120 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %121 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %120, i64 0, i32 0
  %122 = bitcast %"class.v8::String::ExternalStringResource"* %120 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %123 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %122, align 8
  %124 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %123, i64 2
  %125 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.v8::String::ExternalStringResourceBase"* %121) #6
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %128) #6
  %129 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %128, i64 0, i32 1
  %130 = load i16*, i16** %129, align 8
  br label %138

131:                                              ; preds = %119, %106
  %132 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %118, align 1
  %133 = bitcast %"class.v8::String::ExternalStringResource"* %132 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %134 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %133, align 8
  %135 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %134, i64 6
  %136 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %135, align 8
  %137 = tail call i16* %136(%"class.v8::String::ExternalStringResource"* %132) #6
  br label %138

138:                                              ; preds = %131, %127
  %139 = phi i16* [ %130, %127 ], [ %137, %131 ]
  %140 = sext i32 %16 to i64
  %141 = getelementptr inbounds i16, i16* %139, i64 %140
  %142 = bitcast i16* %141 to i8*
  %143 = bitcast i16* %1 to i8*
  %144 = shl i64 %2, 1
  %145 = tail call i32 @bcmp(i8* %142, i8* %143, i64 %144) #6
  %146 = icmp eq i32 %145, 0
  br label %168

147:                                              ; preds = %14, %14
  %148 = add i64 %15, 15
  %149 = inttoptr i64 %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 1
  %152 = add nsw i32 %151, %16
  br label %154

153:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

154:                                              ; preds = %147, %14, %14
  %155 = phi i32 [ %152, %147 ], [ %16, %14 ], [ %16, %14 ]
  %156 = add i64 %15, 11
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %7, %159
  br label %14

161:                                              ; preds = %14, %14
  %162 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i16* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #6
  %163 = load i8, i8* %8, align 8, !range !4
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %167 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %166, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %167) #6
  br label %168

168:                                              ; preds = %94, %102, %34, %42, %138, %46, %27, %88, %3, %161, %165
  %169 = phi i1 [ %162, %161 ], [ %162, %165 ], [ %146, %138 ], [ %55, %46 ], [ true, %27 ], [ true, %88 ], [ false, %3 ], [ false, %34 ], [ true, %42 ], [ false, %94 ], [ true, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret i1 %169
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i16*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #6
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #6
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %195

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #6
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %195, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %195, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #6
  br label %25

25:                                               ; preds = %22, %191
  %26 = phi i64 [ %3, %22 ], [ %186, %191 ]
  %27 = phi i64 [ %19, %22 ], [ %192, %191 ]
  %28 = phi i16* [ %2, %22 ], [ %185, %191 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %175, %25
  %36 = phi i64 [ %27, %25 ], [ %181, %175 ]
  %37 = phi i32 [ 0, %25 ], [ %176, %175 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %174 [
    i32 8, label %48
    i32 0, label %67
    i32 10, label %77
    i32 2, label %127
    i32 11, label %168
    i32 3, label %168
    i32 9, label %182
    i32 1, label %182
    i32 13, label %175
    i32 5, label %175
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 %34
  %54 = icmp sgt i64 %34, 0
  br i1 %54, label %55, label %184

55:                                               ; preds = %48, %63
  %56 = phi i8* [ %64, %63 ], [ %52, %48 ]
  %57 = phi i16* [ %65, %63 ], [ %28, %48 ]
  %58 = load i8, i8* %56, align 1
  %59 = zext i8 %58 to i32
  %60 = load i16, i16* %57, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %195

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %56, i64 1
  %65 = getelementptr inbounds i16, i16* %57, i64 1
  %66 = icmp ult i8* %64, %53
  br i1 %66, label %55, label %184

67:                                               ; preds = %35
  %68 = add i64 %36, 11
  %69 = inttoptr i64 %68 to i16*
  %70 = sext i32 %37 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = bitcast i16* %71 to i8*
  %73 = bitcast i16* %28 to i8*
  %74 = shl i64 %34, 1
  %75 = call i32 @bcmp(i8* %72, i8* %73, i64 %74) #6
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %184, label %195

77:                                               ; preds = %35
  %78 = inttoptr i64 %38 to i32*
  %79 = and i64 %36, -4294967296
  %80 = load atomic i32, i32* %78 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %79, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = and i16 %85, 16
  %87 = icmp eq i16 %86, 0
  %88 = add i64 %36, 11
  %89 = inttoptr i64 %88 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %87, label %102, label %90

90:                                               ; preds = %77
  %91 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %92 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %91, i64 0, i32 0
  %93 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %91 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %94 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %94, i64 2
  %96 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %95, align 8
  %97 = call zeroext i1 %96(%"class.v8::String::ExternalStringResourceBase"* %92) #6
  br i1 %97, label %98, label %102

98:                                               ; preds = %90
  %99 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %99) #6
  %100 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %99, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  br label %109

102:                                              ; preds = %77, %90
  %103 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %89, align 1
  %104 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %103 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %105 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %104, align 8
  %106 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %105, i64 6
  %107 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %106, align 8
  %108 = call i8* %107(%"class.v8::String::ExternalOneByteStringResource"* %103) #6
  br label %109

109:                                              ; preds = %102, %98
  %110 = phi i8* [ %101, %98 ], [ %108, %102 ]
  %111 = sext i32 %37 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = getelementptr inbounds i8, i8* %112, i64 %34
  %114 = icmp sgt i64 %34, 0
  br i1 %114, label %115, label %184

115:                                              ; preds = %109, %123
  %116 = phi i8* [ %124, %123 ], [ %112, %109 ]
  %117 = phi i16* [ %125, %123 ], [ %28, %109 ]
  %118 = load i8, i8* %116, align 1
  %119 = zext i8 %118 to i32
  %120 = load i16, i16* %117, align 2
  %121 = zext i16 %120 to i32
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %195

123:                                              ; preds = %115
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = getelementptr inbounds i16, i16* %117, i64 1
  %126 = icmp ult i8* %124, %113
  br i1 %126, label %115, label %184

127:                                              ; preds = %35
  %128 = inttoptr i64 %38 to i32*
  %129 = and i64 %36, -4294967296
  %130 = load atomic i32, i32* %128 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %129, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = and i16 %135, 16
  %137 = icmp eq i16 %136, 0
  %138 = add i64 %36, 11
  %139 = inttoptr i64 %138 to %"class.v8::String::ExternalStringResource"**
  br i1 %137, label %152, label %140

140:                                              ; preds = %127
  %141 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %142 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %141, i64 0, i32 0
  %143 = bitcast %"class.v8::String::ExternalStringResource"* %141 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %144 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %144, i64 2
  %146 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %145, align 8
  %147 = call zeroext i1 %146(%"class.v8::String::ExternalStringResourceBase"* %142) #6
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %149) #6
  %150 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %149, i64 0, i32 1
  %151 = load i16*, i16** %150, align 8
  br label %159

152:                                              ; preds = %127, %140
  %153 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %139, align 1
  %154 = bitcast %"class.v8::String::ExternalStringResource"* %153 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %155 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %154, align 8
  %156 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %155, i64 6
  %157 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %156, align 8
  %158 = call i16* %157(%"class.v8::String::ExternalStringResource"* %153) #6
  br label %159

159:                                              ; preds = %152, %148
  %160 = phi i16* [ %151, %148 ], [ %158, %152 ]
  %161 = sext i32 %37 to i64
  %162 = getelementptr inbounds i16, i16* %160, i64 %161
  %163 = bitcast i16* %162 to i8*
  %164 = bitcast i16* %28 to i8*
  %165 = shl i64 %34, 1
  %166 = call i32 @bcmp(i8* %163, i8* %164, i64 %165) #6
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %195

168:                                              ; preds = %35, %35
  %169 = add i64 %36, 15
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = ashr i32 %171, 1
  %173 = add nsw i32 %172, %37
  br label %175

174:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

175:                                              ; preds = %35, %35, %168
  %176 = phi i32 [ %173, %168 ], [ %37, %35 ], [ %37, %35 ]
  %177 = add i64 %36, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %180, %4
  br label %35

182:                                              ; preds = %35, %35
  %183 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplItEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i16* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #6
  br i1 %183, label %184, label %195

184:                                              ; preds = %123, %63, %48, %109, %159, %67, %182
  %185 = getelementptr inbounds i16, i16* %28, i64 %34
  %186 = sub i64 %26, %34
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  store i32 0, i32* %7, align 4
  %189 = load i32, i32* %17, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #6
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %25

195:                                              ; preds = %188, %184, %191, %159, %67, %182, %115, %55, %12, %13, %18
  %196 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %55 ], [ false, %115 ], [ true, %188 ], [ true, %184 ], [ true, %191 ], [ false, %159 ], [ false, %67 ], [ false, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #6
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8*, i16*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %1 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i16, i16* %1, align 2
  %7 = trunc i16 %6 to i8
  store i8 %7, i8* %0, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = getelementptr inbounds i16, i16* %1, i64 1
  %10 = load i16, i16* %9, align 2
  %11 = trunc i16 %10 to i8
  store i8 %11, i8* %8, align 1
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = getelementptr inbounds i16, i16* %1, i64 2
  %14 = load i16, i16* %13, align 2
  %15 = trunc i16 %14 to i8
  store i8 %15, i8* %12, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 3
  %17 = getelementptr inbounds i16, i16* %1, i64 3
  %18 = load i16, i16* %17, align 2
  %19 = trunc i16 %18 to i8
  store i8 %19, i8* %16, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 4
  %21 = getelementptr inbounds i16, i16* %1, i64 4
  %22 = load i16, i16* %21, align 2
  %23 = trunc i16 %22 to i8
  store i8 %23, i8* %20, align 1
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = getelementptr inbounds i16, i16* %1, i64 5
  %26 = load i16, i16* %25, align 2
  %27 = trunc i16 %26 to i8
  store i8 %27, i8* %24, align 1
  %28 = getelementptr inbounds i8, i8* %0, i64 6
  %29 = getelementptr inbounds i16, i16* %1, i64 6
  %30 = load i16, i16* %29, align 2
  %31 = trunc i16 %30 to i8
  store i8 %31, i8* %28, align 1
  %32 = getelementptr inbounds i8, i8* %0, i64 7
  %33 = getelementptr inbounds i16, i16* %1, i64 7
  %34 = load i16, i16* %33, align 2
  %35 = trunc i16 %34 to i8
  store i8 %35, i8* %32, align 1
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  %37 = getelementptr inbounds i16, i16* %1, i64 8
  %38 = load i16, i16* %37, align 2
  %39 = trunc i16 %38 to i8
  store i8 %39, i8* %36, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 9
  %41 = getelementptr inbounds i16, i16* %1, i64 9
  %42 = load i16, i16* %41, align 2
  %43 = trunc i16 %42 to i8
  store i8 %43, i8* %40, align 1
  %44 = getelementptr inbounds i8, i8* %0, i64 10
  %45 = getelementptr inbounds i16, i16* %1, i64 10
  %46 = load i16, i16* %45, align 2
  %47 = trunc i16 %46 to i8
  store i8 %47, i8* %44, align 1
  %48 = getelementptr inbounds i8, i8* %0, i64 11
  %49 = getelementptr inbounds i16, i16* %1, i64 11
  %50 = load i16, i16* %49, align 2
  %51 = trunc i16 %50 to i8
  store i8 %51, i8* %48, align 1
  %52 = getelementptr inbounds i8, i8* %0, i64 12
  %53 = getelementptr inbounds i16, i16* %1, i64 12
  %54 = load i16, i16* %53, align 2
  %55 = trunc i16 %54 to i8
  store i8 %55, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %0, i64 13
  %57 = getelementptr inbounds i16, i16* %1, i64 13
  %58 = load i16, i16* %57, align 2
  %59 = trunc i16 %58 to i8
  store i8 %59, i8* %56, align 1
  %60 = getelementptr inbounds i8, i8* %0, i64 14
  %61 = getelementptr inbounds i16, i16* %1, i64 14
  %62 = load i16, i16* %61, align 2
  %63 = trunc i16 %62 to i8
  store i8 %63, i8* %60, align 1
  %64 = getelementptr inbounds i8, i8* %0, i64 15
  %65 = getelementptr inbounds i16, i16* %1, i64 15
  %66 = load i16, i16* %65, align 2
  %67 = trunc i16 %66 to i8
  store i8 %67, i8* %64, align 1
  br label %675

68:                                               ; preds = %3
  %69 = load i16, i16* %1, align 2
  %70 = trunc i16 %69 to i8
  store i8 %70, i8* %0, align 1
  %71 = getelementptr inbounds i8, i8* %0, i64 1
  %72 = getelementptr inbounds i16, i16* %1, i64 1
  %73 = load i16, i16* %72, align 2
  %74 = trunc i16 %73 to i8
  store i8 %74, i8* %71, align 1
  %75 = getelementptr inbounds i8, i8* %0, i64 2
  %76 = getelementptr inbounds i16, i16* %1, i64 2
  %77 = load i16, i16* %76, align 2
  %78 = trunc i16 %77 to i8
  store i8 %78, i8* %75, align 1
  %79 = getelementptr inbounds i8, i8* %0, i64 3
  %80 = getelementptr inbounds i16, i16* %1, i64 3
  %81 = load i16, i16* %80, align 2
  %82 = trunc i16 %81 to i8
  store i8 %82, i8* %79, align 1
  %83 = getelementptr inbounds i8, i8* %0, i64 4
  %84 = getelementptr inbounds i16, i16* %1, i64 4
  %85 = load i16, i16* %84, align 2
  %86 = trunc i16 %85 to i8
  store i8 %86, i8* %83, align 1
  %87 = getelementptr inbounds i8, i8* %0, i64 5
  %88 = getelementptr inbounds i16, i16* %1, i64 5
  %89 = load i16, i16* %88, align 2
  %90 = trunc i16 %89 to i8
  store i8 %90, i8* %87, align 1
  %91 = getelementptr inbounds i8, i8* %0, i64 6
  %92 = getelementptr inbounds i16, i16* %1, i64 6
  %93 = load i16, i16* %92, align 2
  %94 = trunc i16 %93 to i8
  store i8 %94, i8* %91, align 1
  %95 = getelementptr inbounds i8, i8* %0, i64 7
  %96 = getelementptr inbounds i16, i16* %1, i64 7
  %97 = load i16, i16* %96, align 2
  %98 = trunc i16 %97 to i8
  store i8 %98, i8* %95, align 1
  %99 = getelementptr inbounds i8, i8* %0, i64 8
  %100 = getelementptr inbounds i16, i16* %1, i64 8
  %101 = load i16, i16* %100, align 2
  %102 = trunc i16 %101 to i8
  store i8 %102, i8* %99, align 1
  %103 = getelementptr inbounds i8, i8* %0, i64 9
  %104 = getelementptr inbounds i16, i16* %1, i64 9
  %105 = load i16, i16* %104, align 2
  %106 = trunc i16 %105 to i8
  store i8 %106, i8* %103, align 1
  %107 = getelementptr inbounds i8, i8* %0, i64 10
  %108 = getelementptr inbounds i16, i16* %1, i64 10
  %109 = load i16, i16* %108, align 2
  %110 = trunc i16 %109 to i8
  store i8 %110, i8* %107, align 1
  %111 = getelementptr inbounds i8, i8* %0, i64 11
  %112 = getelementptr inbounds i16, i16* %1, i64 11
  %113 = load i16, i16* %112, align 2
  %114 = trunc i16 %113 to i8
  store i8 %114, i8* %111, align 1
  %115 = getelementptr inbounds i8, i8* %0, i64 12
  %116 = getelementptr inbounds i16, i16* %1, i64 12
  %117 = load i16, i16* %116, align 2
  %118 = trunc i16 %117 to i8
  store i8 %118, i8* %115, align 1
  %119 = getelementptr inbounds i8, i8* %0, i64 13
  %120 = getelementptr inbounds i16, i16* %1, i64 13
  %121 = load i16, i16* %120, align 2
  %122 = trunc i16 %121 to i8
  store i8 %122, i8* %119, align 1
  %123 = getelementptr inbounds i8, i8* %0, i64 14
  %124 = getelementptr inbounds i16, i16* %1, i64 14
  %125 = load i16, i16* %124, align 2
  %126 = trunc i16 %125 to i8
  store i8 %126, i8* %123, align 1
  br label %675

127:                                              ; preds = %3
  %128 = load i16, i16* %1, align 2
  %129 = trunc i16 %128 to i8
  store i8 %129, i8* %0, align 1
  %130 = getelementptr inbounds i8, i8* %0, i64 1
  %131 = getelementptr inbounds i16, i16* %1, i64 1
  %132 = load i16, i16* %131, align 2
  %133 = trunc i16 %132 to i8
  store i8 %133, i8* %130, align 1
  %134 = getelementptr inbounds i8, i8* %0, i64 2
  %135 = getelementptr inbounds i16, i16* %1, i64 2
  %136 = load i16, i16* %135, align 2
  %137 = trunc i16 %136 to i8
  store i8 %137, i8* %134, align 1
  %138 = getelementptr inbounds i8, i8* %0, i64 3
  %139 = getelementptr inbounds i16, i16* %1, i64 3
  %140 = load i16, i16* %139, align 2
  %141 = trunc i16 %140 to i8
  store i8 %141, i8* %138, align 1
  %142 = getelementptr inbounds i8, i8* %0, i64 4
  %143 = getelementptr inbounds i16, i16* %1, i64 4
  %144 = load i16, i16* %143, align 2
  %145 = trunc i16 %144 to i8
  store i8 %145, i8* %142, align 1
  %146 = getelementptr inbounds i8, i8* %0, i64 5
  %147 = getelementptr inbounds i16, i16* %1, i64 5
  %148 = load i16, i16* %147, align 2
  %149 = trunc i16 %148 to i8
  store i8 %149, i8* %146, align 1
  %150 = getelementptr inbounds i8, i8* %0, i64 6
  %151 = getelementptr inbounds i16, i16* %1, i64 6
  %152 = load i16, i16* %151, align 2
  %153 = trunc i16 %152 to i8
  store i8 %153, i8* %150, align 1
  %154 = getelementptr inbounds i8, i8* %0, i64 7
  %155 = getelementptr inbounds i16, i16* %1, i64 7
  %156 = load i16, i16* %155, align 2
  %157 = trunc i16 %156 to i8
  store i8 %157, i8* %154, align 1
  %158 = getelementptr inbounds i8, i8* %0, i64 8
  %159 = getelementptr inbounds i16, i16* %1, i64 8
  %160 = load i16, i16* %159, align 2
  %161 = trunc i16 %160 to i8
  store i8 %161, i8* %158, align 1
  %162 = getelementptr inbounds i8, i8* %0, i64 9
  %163 = getelementptr inbounds i16, i16* %1, i64 9
  %164 = load i16, i16* %163, align 2
  %165 = trunc i16 %164 to i8
  store i8 %165, i8* %162, align 1
  %166 = getelementptr inbounds i8, i8* %0, i64 10
  %167 = getelementptr inbounds i16, i16* %1, i64 10
  %168 = load i16, i16* %167, align 2
  %169 = trunc i16 %168 to i8
  store i8 %169, i8* %166, align 1
  %170 = getelementptr inbounds i8, i8* %0, i64 11
  %171 = getelementptr inbounds i16, i16* %1, i64 11
  %172 = load i16, i16* %171, align 2
  %173 = trunc i16 %172 to i8
  store i8 %173, i8* %170, align 1
  %174 = getelementptr inbounds i8, i8* %0, i64 12
  %175 = getelementptr inbounds i16, i16* %1, i64 12
  %176 = load i16, i16* %175, align 2
  %177 = trunc i16 %176 to i8
  store i8 %177, i8* %174, align 1
  %178 = getelementptr inbounds i8, i8* %0, i64 13
  %179 = getelementptr inbounds i16, i16* %1, i64 13
  %180 = load i16, i16* %179, align 2
  %181 = trunc i16 %180 to i8
  store i8 %181, i8* %178, align 1
  br label %675

182:                                              ; preds = %3
  %183 = load i16, i16* %1, align 2
  %184 = trunc i16 %183 to i8
  store i8 %184, i8* %0, align 1
  %185 = getelementptr inbounds i8, i8* %0, i64 1
  %186 = getelementptr inbounds i16, i16* %1, i64 1
  %187 = load i16, i16* %186, align 2
  %188 = trunc i16 %187 to i8
  store i8 %188, i8* %185, align 1
  %189 = getelementptr inbounds i8, i8* %0, i64 2
  %190 = getelementptr inbounds i16, i16* %1, i64 2
  %191 = load i16, i16* %190, align 2
  %192 = trunc i16 %191 to i8
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 3
  %194 = getelementptr inbounds i16, i16* %1, i64 3
  %195 = load i16, i16* %194, align 2
  %196 = trunc i16 %195 to i8
  store i8 %196, i8* %193, align 1
  %197 = getelementptr inbounds i8, i8* %0, i64 4
  %198 = getelementptr inbounds i16, i16* %1, i64 4
  %199 = load i16, i16* %198, align 2
  %200 = trunc i16 %199 to i8
  store i8 %200, i8* %197, align 1
  %201 = getelementptr inbounds i8, i8* %0, i64 5
  %202 = getelementptr inbounds i16, i16* %1, i64 5
  %203 = load i16, i16* %202, align 2
  %204 = trunc i16 %203 to i8
  store i8 %204, i8* %201, align 1
  %205 = getelementptr inbounds i8, i8* %0, i64 6
  %206 = getelementptr inbounds i16, i16* %1, i64 6
  %207 = load i16, i16* %206, align 2
  %208 = trunc i16 %207 to i8
  store i8 %208, i8* %205, align 1
  %209 = getelementptr inbounds i8, i8* %0, i64 7
  %210 = getelementptr inbounds i16, i16* %1, i64 7
  %211 = load i16, i16* %210, align 2
  %212 = trunc i16 %211 to i8
  store i8 %212, i8* %209, align 1
  %213 = getelementptr inbounds i8, i8* %0, i64 8
  %214 = getelementptr inbounds i16, i16* %1, i64 8
  %215 = load i16, i16* %214, align 2
  %216 = trunc i16 %215 to i8
  store i8 %216, i8* %213, align 1
  %217 = getelementptr inbounds i8, i8* %0, i64 9
  %218 = getelementptr inbounds i16, i16* %1, i64 9
  %219 = load i16, i16* %218, align 2
  %220 = trunc i16 %219 to i8
  store i8 %220, i8* %217, align 1
  %221 = getelementptr inbounds i8, i8* %0, i64 10
  %222 = getelementptr inbounds i16, i16* %1, i64 10
  %223 = load i16, i16* %222, align 2
  %224 = trunc i16 %223 to i8
  store i8 %224, i8* %221, align 1
  %225 = getelementptr inbounds i8, i8* %0, i64 11
  %226 = getelementptr inbounds i16, i16* %1, i64 11
  %227 = load i16, i16* %226, align 2
  %228 = trunc i16 %227 to i8
  store i8 %228, i8* %225, align 1
  %229 = getelementptr inbounds i8, i8* %0, i64 12
  %230 = getelementptr inbounds i16, i16* %1, i64 12
  %231 = load i16, i16* %230, align 2
  %232 = trunc i16 %231 to i8
  store i8 %232, i8* %229, align 1
  br label %675

233:                                              ; preds = %3
  %234 = load i16, i16* %1, align 2
  %235 = trunc i16 %234 to i8
  store i8 %235, i8* %0, align 1
  %236 = getelementptr inbounds i8, i8* %0, i64 1
  %237 = getelementptr inbounds i16, i16* %1, i64 1
  %238 = load i16, i16* %237, align 2
  %239 = trunc i16 %238 to i8
  store i8 %239, i8* %236, align 1
  %240 = getelementptr inbounds i8, i8* %0, i64 2
  %241 = getelementptr inbounds i16, i16* %1, i64 2
  %242 = load i16, i16* %241, align 2
  %243 = trunc i16 %242 to i8
  store i8 %243, i8* %240, align 1
  %244 = getelementptr inbounds i8, i8* %0, i64 3
  %245 = getelementptr inbounds i16, i16* %1, i64 3
  %246 = load i16, i16* %245, align 2
  %247 = trunc i16 %246 to i8
  store i8 %247, i8* %244, align 1
  %248 = getelementptr inbounds i8, i8* %0, i64 4
  %249 = getelementptr inbounds i16, i16* %1, i64 4
  %250 = load i16, i16* %249, align 2
  %251 = trunc i16 %250 to i8
  store i8 %251, i8* %248, align 1
  %252 = getelementptr inbounds i8, i8* %0, i64 5
  %253 = getelementptr inbounds i16, i16* %1, i64 5
  %254 = load i16, i16* %253, align 2
  %255 = trunc i16 %254 to i8
  store i8 %255, i8* %252, align 1
  %256 = getelementptr inbounds i8, i8* %0, i64 6
  %257 = getelementptr inbounds i16, i16* %1, i64 6
  %258 = load i16, i16* %257, align 2
  %259 = trunc i16 %258 to i8
  store i8 %259, i8* %256, align 1
  %260 = getelementptr inbounds i8, i8* %0, i64 7
  %261 = getelementptr inbounds i16, i16* %1, i64 7
  %262 = load i16, i16* %261, align 2
  %263 = trunc i16 %262 to i8
  store i8 %263, i8* %260, align 1
  %264 = getelementptr inbounds i8, i8* %0, i64 8
  %265 = getelementptr inbounds i16, i16* %1, i64 8
  %266 = load i16, i16* %265, align 2
  %267 = trunc i16 %266 to i8
  store i8 %267, i8* %264, align 1
  %268 = getelementptr inbounds i8, i8* %0, i64 9
  %269 = getelementptr inbounds i16, i16* %1, i64 9
  %270 = load i16, i16* %269, align 2
  %271 = trunc i16 %270 to i8
  store i8 %271, i8* %268, align 1
  %272 = getelementptr inbounds i8, i8* %0, i64 10
  %273 = getelementptr inbounds i16, i16* %1, i64 10
  %274 = load i16, i16* %273, align 2
  %275 = trunc i16 %274 to i8
  store i8 %275, i8* %272, align 1
  %276 = getelementptr inbounds i8, i8* %0, i64 11
  %277 = getelementptr inbounds i16, i16* %1, i64 11
  %278 = load i16, i16* %277, align 2
  %279 = trunc i16 %278 to i8
  store i8 %279, i8* %276, align 1
  br label %675

280:                                              ; preds = %3
  %281 = load i16, i16* %1, align 2
  %282 = trunc i16 %281 to i8
  store i8 %282, i8* %0, align 1
  %283 = getelementptr inbounds i8, i8* %0, i64 1
  %284 = getelementptr inbounds i16, i16* %1, i64 1
  %285 = load i16, i16* %284, align 2
  %286 = trunc i16 %285 to i8
  store i8 %286, i8* %283, align 1
  %287 = getelementptr inbounds i8, i8* %0, i64 2
  %288 = getelementptr inbounds i16, i16* %1, i64 2
  %289 = load i16, i16* %288, align 2
  %290 = trunc i16 %289 to i8
  store i8 %290, i8* %287, align 1
  %291 = getelementptr inbounds i8, i8* %0, i64 3
  %292 = getelementptr inbounds i16, i16* %1, i64 3
  %293 = load i16, i16* %292, align 2
  %294 = trunc i16 %293 to i8
  store i8 %294, i8* %291, align 1
  %295 = getelementptr inbounds i8, i8* %0, i64 4
  %296 = getelementptr inbounds i16, i16* %1, i64 4
  %297 = load i16, i16* %296, align 2
  %298 = trunc i16 %297 to i8
  store i8 %298, i8* %295, align 1
  %299 = getelementptr inbounds i8, i8* %0, i64 5
  %300 = getelementptr inbounds i16, i16* %1, i64 5
  %301 = load i16, i16* %300, align 2
  %302 = trunc i16 %301 to i8
  store i8 %302, i8* %299, align 1
  %303 = getelementptr inbounds i8, i8* %0, i64 6
  %304 = getelementptr inbounds i16, i16* %1, i64 6
  %305 = load i16, i16* %304, align 2
  %306 = trunc i16 %305 to i8
  store i8 %306, i8* %303, align 1
  %307 = getelementptr inbounds i8, i8* %0, i64 7
  %308 = getelementptr inbounds i16, i16* %1, i64 7
  %309 = load i16, i16* %308, align 2
  %310 = trunc i16 %309 to i8
  store i8 %310, i8* %307, align 1
  %311 = getelementptr inbounds i8, i8* %0, i64 8
  %312 = getelementptr inbounds i16, i16* %1, i64 8
  %313 = load i16, i16* %312, align 2
  %314 = trunc i16 %313 to i8
  store i8 %314, i8* %311, align 1
  %315 = getelementptr inbounds i8, i8* %0, i64 9
  %316 = getelementptr inbounds i16, i16* %1, i64 9
  %317 = load i16, i16* %316, align 2
  %318 = trunc i16 %317 to i8
  store i8 %318, i8* %315, align 1
  %319 = getelementptr inbounds i8, i8* %0, i64 10
  %320 = getelementptr inbounds i16, i16* %1, i64 10
  %321 = load i16, i16* %320, align 2
  %322 = trunc i16 %321 to i8
  store i8 %322, i8* %319, align 1
  br label %675

323:                                              ; preds = %3
  %324 = load i16, i16* %1, align 2
  %325 = trunc i16 %324 to i8
  store i8 %325, i8* %0, align 1
  %326 = getelementptr inbounds i8, i8* %0, i64 1
  %327 = getelementptr inbounds i16, i16* %1, i64 1
  %328 = load i16, i16* %327, align 2
  %329 = trunc i16 %328 to i8
  store i8 %329, i8* %326, align 1
  %330 = getelementptr inbounds i8, i8* %0, i64 2
  %331 = getelementptr inbounds i16, i16* %1, i64 2
  %332 = load i16, i16* %331, align 2
  %333 = trunc i16 %332 to i8
  store i8 %333, i8* %330, align 1
  %334 = getelementptr inbounds i8, i8* %0, i64 3
  %335 = getelementptr inbounds i16, i16* %1, i64 3
  %336 = load i16, i16* %335, align 2
  %337 = trunc i16 %336 to i8
  store i8 %337, i8* %334, align 1
  %338 = getelementptr inbounds i8, i8* %0, i64 4
  %339 = getelementptr inbounds i16, i16* %1, i64 4
  %340 = load i16, i16* %339, align 2
  %341 = trunc i16 %340 to i8
  store i8 %341, i8* %338, align 1
  %342 = getelementptr inbounds i8, i8* %0, i64 5
  %343 = getelementptr inbounds i16, i16* %1, i64 5
  %344 = load i16, i16* %343, align 2
  %345 = trunc i16 %344 to i8
  store i8 %345, i8* %342, align 1
  %346 = getelementptr inbounds i8, i8* %0, i64 6
  %347 = getelementptr inbounds i16, i16* %1, i64 6
  %348 = load i16, i16* %347, align 2
  %349 = trunc i16 %348 to i8
  store i8 %349, i8* %346, align 1
  %350 = getelementptr inbounds i8, i8* %0, i64 7
  %351 = getelementptr inbounds i16, i16* %1, i64 7
  %352 = load i16, i16* %351, align 2
  %353 = trunc i16 %352 to i8
  store i8 %353, i8* %350, align 1
  %354 = getelementptr inbounds i8, i8* %0, i64 8
  %355 = getelementptr inbounds i16, i16* %1, i64 8
  %356 = load i16, i16* %355, align 2
  %357 = trunc i16 %356 to i8
  store i8 %357, i8* %354, align 1
  %358 = getelementptr inbounds i8, i8* %0, i64 9
  %359 = getelementptr inbounds i16, i16* %1, i64 9
  %360 = load i16, i16* %359, align 2
  %361 = trunc i16 %360 to i8
  store i8 %361, i8* %358, align 1
  br label %675

362:                                              ; preds = %3
  %363 = load i16, i16* %1, align 2
  %364 = trunc i16 %363 to i8
  store i8 %364, i8* %0, align 1
  %365 = getelementptr inbounds i8, i8* %0, i64 1
  %366 = getelementptr inbounds i16, i16* %1, i64 1
  %367 = load i16, i16* %366, align 2
  %368 = trunc i16 %367 to i8
  store i8 %368, i8* %365, align 1
  %369 = getelementptr inbounds i8, i8* %0, i64 2
  %370 = getelementptr inbounds i16, i16* %1, i64 2
  %371 = load i16, i16* %370, align 2
  %372 = trunc i16 %371 to i8
  store i8 %372, i8* %369, align 1
  %373 = getelementptr inbounds i8, i8* %0, i64 3
  %374 = getelementptr inbounds i16, i16* %1, i64 3
  %375 = load i16, i16* %374, align 2
  %376 = trunc i16 %375 to i8
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds i8, i8* %0, i64 4
  %378 = getelementptr inbounds i16, i16* %1, i64 4
  %379 = load i16, i16* %378, align 2
  %380 = trunc i16 %379 to i8
  store i8 %380, i8* %377, align 1
  %381 = getelementptr inbounds i8, i8* %0, i64 5
  %382 = getelementptr inbounds i16, i16* %1, i64 5
  %383 = load i16, i16* %382, align 2
  %384 = trunc i16 %383 to i8
  store i8 %384, i8* %381, align 1
  %385 = getelementptr inbounds i8, i8* %0, i64 6
  %386 = getelementptr inbounds i16, i16* %1, i64 6
  %387 = load i16, i16* %386, align 2
  %388 = trunc i16 %387 to i8
  store i8 %388, i8* %385, align 1
  %389 = getelementptr inbounds i8, i8* %0, i64 7
  %390 = getelementptr inbounds i16, i16* %1, i64 7
  %391 = load i16, i16* %390, align 2
  %392 = trunc i16 %391 to i8
  store i8 %392, i8* %389, align 1
  %393 = getelementptr inbounds i8, i8* %0, i64 8
  %394 = getelementptr inbounds i16, i16* %1, i64 8
  %395 = load i16, i16* %394, align 2
  %396 = trunc i16 %395 to i8
  store i8 %396, i8* %393, align 1
  br label %675

397:                                              ; preds = %3
  %398 = load i16, i16* %1, align 2
  %399 = trunc i16 %398 to i8
  store i8 %399, i8* %0, align 1
  %400 = getelementptr inbounds i8, i8* %0, i64 1
  %401 = getelementptr inbounds i16, i16* %1, i64 1
  %402 = load i16, i16* %401, align 2
  %403 = trunc i16 %402 to i8
  store i8 %403, i8* %400, align 1
  %404 = getelementptr inbounds i8, i8* %0, i64 2
  %405 = getelementptr inbounds i16, i16* %1, i64 2
  %406 = load i16, i16* %405, align 2
  %407 = trunc i16 %406 to i8
  store i8 %407, i8* %404, align 1
  %408 = getelementptr inbounds i8, i8* %0, i64 3
  %409 = getelementptr inbounds i16, i16* %1, i64 3
  %410 = load i16, i16* %409, align 2
  %411 = trunc i16 %410 to i8
  store i8 %411, i8* %408, align 1
  %412 = getelementptr inbounds i8, i8* %0, i64 4
  %413 = getelementptr inbounds i16, i16* %1, i64 4
  %414 = load i16, i16* %413, align 2
  %415 = trunc i16 %414 to i8
  store i8 %415, i8* %412, align 1
  %416 = getelementptr inbounds i8, i8* %0, i64 5
  %417 = getelementptr inbounds i16, i16* %1, i64 5
  %418 = load i16, i16* %417, align 2
  %419 = trunc i16 %418 to i8
  store i8 %419, i8* %416, align 1
  %420 = getelementptr inbounds i8, i8* %0, i64 6
  %421 = getelementptr inbounds i16, i16* %1, i64 6
  %422 = load i16, i16* %421, align 2
  %423 = trunc i16 %422 to i8
  store i8 %423, i8* %420, align 1
  %424 = getelementptr inbounds i8, i8* %0, i64 7
  %425 = getelementptr inbounds i16, i16* %1, i64 7
  %426 = load i16, i16* %425, align 2
  %427 = trunc i16 %426 to i8
  store i8 %427, i8* %424, align 1
  br label %675

428:                                              ; preds = %3
  %429 = load i16, i16* %1, align 2
  %430 = trunc i16 %429 to i8
  store i8 %430, i8* %0, align 1
  %431 = getelementptr inbounds i8, i8* %0, i64 1
  %432 = getelementptr inbounds i16, i16* %1, i64 1
  %433 = load i16, i16* %432, align 2
  %434 = trunc i16 %433 to i8
  store i8 %434, i8* %431, align 1
  %435 = getelementptr inbounds i8, i8* %0, i64 2
  %436 = getelementptr inbounds i16, i16* %1, i64 2
  %437 = load i16, i16* %436, align 2
  %438 = trunc i16 %437 to i8
  store i8 %438, i8* %435, align 1
  %439 = getelementptr inbounds i8, i8* %0, i64 3
  %440 = getelementptr inbounds i16, i16* %1, i64 3
  %441 = load i16, i16* %440, align 2
  %442 = trunc i16 %441 to i8
  store i8 %442, i8* %439, align 1
  %443 = getelementptr inbounds i8, i8* %0, i64 4
  %444 = getelementptr inbounds i16, i16* %1, i64 4
  %445 = load i16, i16* %444, align 2
  %446 = trunc i16 %445 to i8
  store i8 %446, i8* %443, align 1
  %447 = getelementptr inbounds i8, i8* %0, i64 5
  %448 = getelementptr inbounds i16, i16* %1, i64 5
  %449 = load i16, i16* %448, align 2
  %450 = trunc i16 %449 to i8
  store i8 %450, i8* %447, align 1
  %451 = getelementptr inbounds i8, i8* %0, i64 6
  %452 = getelementptr inbounds i16, i16* %1, i64 6
  %453 = load i16, i16* %452, align 2
  %454 = trunc i16 %453 to i8
  store i8 %454, i8* %451, align 1
  br label %675

455:                                              ; preds = %3
  %456 = load i16, i16* %1, align 2
  %457 = trunc i16 %456 to i8
  store i8 %457, i8* %0, align 1
  %458 = getelementptr inbounds i8, i8* %0, i64 1
  %459 = getelementptr inbounds i16, i16* %1, i64 1
  %460 = load i16, i16* %459, align 2
  %461 = trunc i16 %460 to i8
  store i8 %461, i8* %458, align 1
  %462 = getelementptr inbounds i8, i8* %0, i64 2
  %463 = getelementptr inbounds i16, i16* %1, i64 2
  %464 = load i16, i16* %463, align 2
  %465 = trunc i16 %464 to i8
  store i8 %465, i8* %462, align 1
  %466 = getelementptr inbounds i8, i8* %0, i64 3
  %467 = getelementptr inbounds i16, i16* %1, i64 3
  %468 = load i16, i16* %467, align 2
  %469 = trunc i16 %468 to i8
  store i8 %469, i8* %466, align 1
  %470 = getelementptr inbounds i8, i8* %0, i64 4
  %471 = getelementptr inbounds i16, i16* %1, i64 4
  %472 = load i16, i16* %471, align 2
  %473 = trunc i16 %472 to i8
  store i8 %473, i8* %470, align 1
  %474 = getelementptr inbounds i8, i8* %0, i64 5
  %475 = getelementptr inbounds i16, i16* %1, i64 5
  %476 = load i16, i16* %475, align 2
  %477 = trunc i16 %476 to i8
  store i8 %477, i8* %474, align 1
  br label %675

478:                                              ; preds = %3
  %479 = load i16, i16* %1, align 2
  %480 = trunc i16 %479 to i8
  store i8 %480, i8* %0, align 1
  %481 = getelementptr inbounds i8, i8* %0, i64 1
  %482 = getelementptr inbounds i16, i16* %1, i64 1
  %483 = load i16, i16* %482, align 2
  %484 = trunc i16 %483 to i8
  store i8 %484, i8* %481, align 1
  %485 = getelementptr inbounds i8, i8* %0, i64 2
  %486 = getelementptr inbounds i16, i16* %1, i64 2
  %487 = load i16, i16* %486, align 2
  %488 = trunc i16 %487 to i8
  store i8 %488, i8* %485, align 1
  %489 = getelementptr inbounds i8, i8* %0, i64 3
  %490 = getelementptr inbounds i16, i16* %1, i64 3
  %491 = load i16, i16* %490, align 2
  %492 = trunc i16 %491 to i8
  store i8 %492, i8* %489, align 1
  %493 = getelementptr inbounds i8, i8* %0, i64 4
  %494 = getelementptr inbounds i16, i16* %1, i64 4
  %495 = load i16, i16* %494, align 2
  %496 = trunc i16 %495 to i8
  store i8 %496, i8* %493, align 1
  br label %675

497:                                              ; preds = %3
  %498 = load i16, i16* %1, align 2
  %499 = trunc i16 %498 to i8
  store i8 %499, i8* %0, align 1
  %500 = getelementptr inbounds i8, i8* %0, i64 1
  %501 = getelementptr inbounds i16, i16* %1, i64 1
  %502 = load i16, i16* %501, align 2
  %503 = trunc i16 %502 to i8
  store i8 %503, i8* %500, align 1
  %504 = getelementptr inbounds i8, i8* %0, i64 2
  %505 = getelementptr inbounds i16, i16* %1, i64 2
  %506 = load i16, i16* %505, align 2
  %507 = trunc i16 %506 to i8
  store i8 %507, i8* %504, align 1
  %508 = getelementptr inbounds i8, i8* %0, i64 3
  %509 = getelementptr inbounds i16, i16* %1, i64 3
  %510 = load i16, i16* %509, align 2
  %511 = trunc i16 %510 to i8
  store i8 %511, i8* %508, align 1
  br label %675

512:                                              ; preds = %3
  %513 = load i16, i16* %1, align 2
  %514 = trunc i16 %513 to i8
  store i8 %514, i8* %0, align 1
  %515 = getelementptr inbounds i8, i8* %0, i64 1
  %516 = getelementptr inbounds i16, i16* %1, i64 1
  %517 = load i16, i16* %516, align 2
  %518 = trunc i16 %517 to i8
  store i8 %518, i8* %515, align 1
  %519 = getelementptr inbounds i8, i8* %0, i64 2
  %520 = getelementptr inbounds i16, i16* %1, i64 2
  %521 = load i16, i16* %520, align 2
  %522 = trunc i16 %521 to i8
  store i8 %522, i8* %519, align 1
  br label %675

523:                                              ; preds = %3
  %524 = load i16, i16* %1, align 2
  %525 = trunc i16 %524 to i8
  store i8 %525, i8* %0, align 1
  %526 = getelementptr inbounds i8, i8* %0, i64 1
  %527 = getelementptr inbounds i16, i16* %1, i64 1
  %528 = load i16, i16* %527, align 2
  %529 = trunc i16 %528 to i8
  store i8 %529, i8* %526, align 1
  br label %675

530:                                              ; preds = %3
  %531 = load i16, i16* %1, align 2
  %532 = trunc i16 %531 to i8
  store i8 %532, i8* %0, align 1
  br label %675

533:                                              ; preds = %3
  %534 = getelementptr inbounds i16, i16* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %675, label %536

536:                                              ; preds = %533
  %537 = shl nsw i64 %2, 1
  %538 = add i64 %537, -2
  %539 = lshr exact i64 %538, 1
  %540 = add nuw i64 %539, 1
  %541 = icmp ult i64 %540, 16
  br i1 %541, label %613, label %542

542:                                              ; preds = %536
  %543 = shl nsw i64 %2, 1
  %544 = add i64 %543, -2
  %545 = lshr exact i64 %544, 1
  %546 = add nuw i64 %545, 1
  %547 = getelementptr i8, i8* %0, i64 %546
  %548 = getelementptr i16, i16* %1, i64 %546
  %549 = bitcast i16* %548 to i8*
  %550 = icmp ugt i8* %549, %0
  %551 = icmp ugt i8* %547, %4
  %552 = and i1 %550, %551
  br i1 %552, label %613, label %553

553:                                              ; preds = %542
  %554 = and i64 %540, -16
  %555 = getelementptr i8, i8* %0, i64 %554
  %556 = getelementptr i16, i16* %1, i64 %554
  %557 = add i64 %554, -16
  %558 = lshr exact i64 %557, 4
  %559 = add nuw nsw i64 %558, 1
  %560 = and i64 %559, 1
  %561 = icmp eq i64 %557, 0
  br i1 %561, label %595, label %562

562:                                              ; preds = %553
  %563 = sub nuw nsw i64 %559, %560
  br label %564

564:                                              ; preds = %564, %562
  %565 = phi i64 [ 0, %562 ], [ %592, %564 ]
  %566 = phi i64 [ %563, %562 ], [ %593, %564 ]
  %567 = getelementptr i8, i8* %0, i64 %565
  %568 = getelementptr i16, i16* %1, i64 %565
  %569 = bitcast i16* %568 to <8 x i16>*
  %570 = load <8 x i16>, <8 x i16>* %569, align 2, !alias.scope !22
  %571 = getelementptr i16, i16* %568, i64 8
  %572 = bitcast i16* %571 to <8 x i16>*
  %573 = load <8 x i16>, <8 x i16>* %572, align 2, !alias.scope !22
  %574 = trunc <8 x i16> %570 to <8 x i8>
  %575 = trunc <8 x i16> %573 to <8 x i8>
  %576 = bitcast i8* %567 to <8 x i8>*
  store <8 x i8> %574, <8 x i8>* %576, align 1, !alias.scope !25, !noalias !22
  %577 = getelementptr i8, i8* %567, i64 8
  %578 = bitcast i8* %577 to <8 x i8>*
  store <8 x i8> %575, <8 x i8>* %578, align 1, !alias.scope !25, !noalias !22
  %579 = or i64 %565, 16
  %580 = getelementptr i8, i8* %0, i64 %579
  %581 = getelementptr i16, i16* %1, i64 %579
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !22
  %584 = getelementptr i16, i16* %581, i64 8
  %585 = bitcast i16* %584 to <8 x i16>*
  %586 = load <8 x i16>, <8 x i16>* %585, align 2, !alias.scope !22
  %587 = trunc <8 x i16> %583 to <8 x i8>
  %588 = trunc <8 x i16> %586 to <8 x i8>
  %589 = bitcast i8* %580 to <8 x i8>*
  store <8 x i8> %587, <8 x i8>* %589, align 1, !alias.scope !25, !noalias !22
  %590 = getelementptr i8, i8* %580, i64 8
  %591 = bitcast i8* %590 to <8 x i8>*
  store <8 x i8> %588, <8 x i8>* %591, align 1, !alias.scope !25, !noalias !22
  %592 = add i64 %565, 32
  %593 = add i64 %566, -2
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %564, !llvm.loop !27

595:                                              ; preds = %564, %553
  %596 = phi i64 [ 0, %553 ], [ %592, %564 ]
  %597 = icmp eq i64 %560, 0
  br i1 %597, label %611, label %598

598:                                              ; preds = %595
  %599 = getelementptr i8, i8* %0, i64 %596
  %600 = getelementptr i16, i16* %1, i64 %596
  %601 = bitcast i16* %600 to <8 x i16>*
  %602 = load <8 x i16>, <8 x i16>* %601, align 2, !alias.scope !22
  %603 = getelementptr i16, i16* %600, i64 8
  %604 = bitcast i16* %603 to <8 x i16>*
  %605 = load <8 x i16>, <8 x i16>* %604, align 2, !alias.scope !22
  %606 = trunc <8 x i16> %602 to <8 x i8>
  %607 = trunc <8 x i16> %605 to <8 x i8>
  %608 = bitcast i8* %599 to <8 x i8>*
  store <8 x i8> %606, <8 x i8>* %608, align 1, !alias.scope !25, !noalias !22
  %609 = getelementptr i8, i8* %599, i64 8
  %610 = bitcast i8* %609 to <8 x i8>*
  store <8 x i8> %607, <8 x i8>* %610, align 1, !alias.scope !25, !noalias !22
  br label %611

611:                                              ; preds = %595, %598
  %612 = icmp eq i64 %540, %554
  br i1 %612, label %675, label %613

613:                                              ; preds = %611, %542, %536
  %614 = phi i8* [ %0, %542 ], [ %0, %536 ], [ %555, %611 ]
  %615 = phi i16* [ %1, %542 ], [ %1, %536 ], [ %556, %611 ]
  %616 = ptrtoint i16* %615 to i64
  %617 = add i64 %2, -1
  %618 = getelementptr i16, i16* %1, i64 %617
  %619 = ptrtoint i16* %618 to i64
  %620 = sub i64 %619, %616
  %621 = lshr i64 %620, 1
  %622 = add nuw i64 %621, 1
  %623 = and i64 %622, 7
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %635, label %625

625:                                              ; preds = %613, %625
  %626 = phi i8* [ %632, %625 ], [ %614, %613 ]
  %627 = phi i16* [ %631, %625 ], [ %615, %613 ]
  %628 = phi i64 [ %633, %625 ], [ %623, %613 ]
  %629 = load i16, i16* %627, align 2
  %630 = trunc i16 %629 to i8
  store i8 %630, i8* %626, align 1
  %631 = getelementptr inbounds i16, i16* %627, i64 1
  %632 = getelementptr inbounds i8, i8* %626, i64 1
  %633 = add i64 %628, -1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %625, !llvm.loop !28

635:                                              ; preds = %625, %613
  %636 = phi i8* [ %614, %613 ], [ %632, %625 ]
  %637 = phi i16* [ %615, %613 ], [ %631, %625 ]
  %638 = icmp ult i64 %620, 14
  br i1 %638, label %675, label %639

639:                                              ; preds = %635, %639
  %640 = phi i8* [ %673, %639 ], [ %636, %635 ]
  %641 = phi i16* [ %672, %639 ], [ %637, %635 ]
  %642 = load i16, i16* %641, align 2
  %643 = trunc i16 %642 to i8
  store i8 %643, i8* %640, align 1
  %644 = getelementptr inbounds i16, i16* %641, i64 1
  %645 = getelementptr inbounds i8, i8* %640, i64 1
  %646 = load i16, i16* %644, align 2
  %647 = trunc i16 %646 to i8
  store i8 %647, i8* %645, align 1
  %648 = getelementptr inbounds i16, i16* %641, i64 2
  %649 = getelementptr inbounds i8, i8* %640, i64 2
  %650 = load i16, i16* %648, align 2
  %651 = trunc i16 %650 to i8
  store i8 %651, i8* %649, align 1
  %652 = getelementptr inbounds i16, i16* %641, i64 3
  %653 = getelementptr inbounds i8, i8* %640, i64 3
  %654 = load i16, i16* %652, align 2
  %655 = trunc i16 %654 to i8
  store i8 %655, i8* %653, align 1
  %656 = getelementptr inbounds i16, i16* %641, i64 4
  %657 = getelementptr inbounds i8, i8* %640, i64 4
  %658 = load i16, i16* %656, align 2
  %659 = trunc i16 %658 to i8
  store i8 %659, i8* %657, align 1
  %660 = getelementptr inbounds i16, i16* %641, i64 5
  %661 = getelementptr inbounds i8, i8* %640, i64 5
  %662 = load i16, i16* %660, align 2
  %663 = trunc i16 %662 to i8
  store i8 %663, i8* %661, align 1
  %664 = getelementptr inbounds i16, i16* %641, i64 6
  %665 = getelementptr inbounds i8, i8* %640, i64 6
  %666 = load i16, i16* %664, align 2
  %667 = trunc i16 %666 to i8
  store i8 %667, i8* %665, align 1
  %668 = getelementptr inbounds i16, i16* %641, i64 7
  %669 = getelementptr inbounds i8, i8* %640, i64 7
  %670 = load i16, i16* %668, align 2
  %671 = trunc i16 %670 to i8
  store i8 %671, i8* %669, align 1
  %672 = getelementptr inbounds i16, i16* %641, i64 8
  %673 = getelementptr inbounds i8, i8* %640, i64 8
  %674 = icmp eq i16* %672, %534
  br i1 %674, label %675, label %639, !llvm.loop !29

675:                                              ; preds = %635, %639, %611, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10JsonParserItE12DecodeStringIhEEvPT_ii(%"class.v8::internal::JsonParser.1175"*, i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %7 = load i16*, i16** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i16, i16* %7, i64 %8
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %94, %4
  %12 = phi i64 [ %5, %4 ], [ %97, %94 ]
  %13 = phi i16* [ %9, %4 ], [ %98, %94 ]
  %14 = getelementptr inbounds i16, i16* %13, i64 %10
  %15 = sub i64 %5, %12
  %16 = getelementptr inbounds i16, i16* %14, i64 %15
  %17 = icmp eq i16* %13, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %11, %23
  %19 = phi i64 [ %27, %23 ], [ %12, %11 ]
  %20 = phi i16* [ %28, %23 ], [ %13, %11 ]
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 92
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = trunc i16 %21 to i8
  %25 = inttoptr i64 %19 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = ptrtoint i8* %26 to i64
  store i8 %24, i8* %25, align 1
  %28 = getelementptr inbounds i16, i16* %20, i64 1
  %29 = icmp eq i16* %28, %16
  br i1 %29, label %99, label %18

30:                                               ; preds = %18, %11
  %31 = phi i64 [ %12, %11 ], [ %19, %18 ]
  %32 = phi i16* [ %13, %11 ], [ %20, %18 ]
  %33 = icmp eq i16* %32, %16
  br i1 %33, label %99, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, i16* %32, i64 1
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = and i8 %39, 7
  switch i8 %40, label %93 [
    i8 1, label %47
    i8 2, label %51
    i8 3, label %54
    i8 4, label %57
    i8 5, label %60
    i8 6, label %63
    i8 7, label %41
    i8 0, label %92
  ]

41:                                               ; preds = %34
  %42 = getelementptr inbounds i16, i16* %32, i64 2
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nsw i32 %44, -48
  %46 = icmp ult i32 %45, 10
  br i1 %46, label %72, label %66

47:                                               ; preds = %34
  %48 = trunc i16 %36 to i8
  %49 = inttoptr i64 %31 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 %48, i8* %49, align 1
  br label %94

51:                                               ; preds = %34
  %52 = inttoptr i64 %31 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  store i8 8, i8* %52, align 1
  br label %94

54:                                               ; preds = %34
  %55 = inttoptr i64 %31 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 1
  store i8 9, i8* %55, align 1
  br label %94

57:                                               ; preds = %34
  %58 = inttoptr i64 %31 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  store i8 10, i8* %58, align 1
  br label %94

60:                                               ; preds = %34
  %61 = inttoptr i64 %31 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 12, i8* %61, align 1
  br label %94

63:                                               ; preds = %34
  %64 = inttoptr i64 %31 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 13, i8* %64, align 1
  br label %94

66:                                               ; preds = %41
  %67 = or i32 %45, 32
  %68 = add nsw i32 %67, -49
  %69 = icmp ult i32 %68, 6
  %70 = add nsw i32 %67, -39
  %71 = select i1 %69, i32 %70, i32 -1
  br label %72

72:                                               ; preds = %41, %66
  %73 = phi i32 [ %71, %66 ], [ %45, %41 ]
  %74 = shl nsw i32 %73, 4
  %75 = getelementptr inbounds i16, i16* %32, i64 3
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = add nsw i32 %77, -48
  %79 = icmp ult i32 %78, 10
  br i1 %79, label %106, label %100

80:                                               ; preds = %136
  %81 = trunc i32 %138 to i8
  %82 = inttoptr i64 %31 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  store i8 %81, i8* %82, align 1
  br label %94

84:                                               ; preds = %136
  %85 = add i32 %138, 196608
  %86 = lshr i32 %85, 10
  %87 = trunc i32 %86 to i8
  %88 = inttoptr i64 %31 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  store i8 %87, i8* %88, align 1
  %90 = trunc i32 %138 to i8
  %91 = getelementptr inbounds i8, i8* %88, i64 2
  store i8 %90, i8* %89, align 1
  br label %94

92:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

93:                                               ; preds = %34
  unreachable

94:                                               ; preds = %47, %51, %54, %57, %60, %63, %84, %80
  %95 = phi i8* [ %83, %80 ], [ %91, %84 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %47 ]
  %96 = phi i16* [ %139, %80 ], [ %139, %84 ], [ %35, %63 ], [ %35, %60 ], [ %35, %57 ], [ %35, %54 ], [ %35, %51 ], [ %35, %47 ]
  %97 = ptrtoint i8* %95 to i64
  %98 = getelementptr inbounds i16, i16* %96, i64 1
  br label %11

99:                                               ; preds = %30, %23
  ret void

100:                                              ; preds = %72
  %101 = or i32 %78, 32
  %102 = add nsw i32 %101, -49
  %103 = icmp ult i32 %102, 6
  %104 = add nsw i32 %101, -39
  %105 = select i1 %103, i32 %104, i32 -1
  br label %106

106:                                              ; preds = %100, %72
  %107 = phi i32 [ %105, %100 ], [ %78, %72 ]
  %108 = add i32 %107, %74
  %109 = shl i32 %108, 4
  %110 = getelementptr inbounds i16, i16* %32, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nsw i32 %112, -48
  %114 = icmp ult i32 %113, 10
  br i1 %114, label %121, label %115

115:                                              ; preds = %106
  %116 = or i32 %113, 32
  %117 = add nsw i32 %116, -49
  %118 = icmp ult i32 %117, 6
  %119 = add nsw i32 %116, -39
  %120 = select i1 %118, i32 %119, i32 -1
  br label %121

121:                                              ; preds = %115, %106
  %122 = phi i32 [ %120, %115 ], [ %113, %106 ]
  %123 = add i32 %122, %109
  %124 = shl i32 %123, 4
  %125 = getelementptr inbounds i16, i16* %32, i64 5
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = add nsw i32 %127, -48
  %129 = icmp ult i32 %128, 10
  br i1 %129, label %136, label %130

130:                                              ; preds = %121
  %131 = or i32 %128, 32
  %132 = add nsw i32 %131, -49
  %133 = icmp ult i32 %132, 6
  %134 = add nsw i32 %131, -39
  %135 = select i1 %133, i32 %134, i32 -1
  br label %136

136:                                              ; preds = %130, %121
  %137 = phi i32 [ %135, %130 ], [ %128, %121 ]
  %138 = add i32 %137, %124
  %139 = getelementptr i16, i16* %32, i64 5
  %140 = icmp ult i32 %138, 65536
  br i1 %140, label %80, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10JsonParserItE12DecodeStringItEEvPT_ii(%"class.v8::internal::JsonParser.1175"*, i16*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i16* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::JsonParser.1175", %"class.v8::internal::JsonParser.1175"* %0, i64 0, i32 9
  %7 = load i16*, i16** %6, align 8
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i16, i16* %7, i64 %8
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %98, %4
  %12 = phi i64 [ %5, %4 ], [ %101, %98 ]
  %13 = phi i16* [ %9, %4 ], [ %102, %98 ]
  %14 = getelementptr inbounds i16, i16* %13, i64 %10
  %15 = sub i64 %12, %5
  %16 = ashr exact i64 %15, 1
  %17 = sub nsw i64 0, %16
  %18 = getelementptr inbounds i16, i16* %14, i64 %17
  %19 = icmp eq i16* %13, %18
  br i1 %19, label %31, label %20

20:                                               ; preds = %11, %25
  %21 = phi i64 [ %28, %25 ], [ %12, %11 ]
  %22 = phi i16* [ %29, %25 ], [ %13, %11 ]
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 92
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %21 to i16*
  %27 = getelementptr inbounds i16, i16* %26, i64 1
  %28 = ptrtoint i16* %27 to i64
  store i16 %23, i16* %26, align 2
  %29 = getelementptr inbounds i16, i16* %22, i64 1
  %30 = icmp eq i16* %29, %18
  br i1 %30, label %103, label %20

31:                                               ; preds = %20, %11
  %32 = phi i64 [ %12, %11 ], [ %21, %20 ]
  %33 = phi i16* [ %13, %11 ], [ %22, %20 ]
  %34 = icmp eq i16* %33, %18
  br i1 %34, label %103, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i16, i16* %33, i64 1
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [118 x i8], [138 x i8] }>* @_ZN2v88internal12_GLOBAL__N_125character_json_scan_flagsE to [256 x i8]*), i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 7
  switch i8 %41, label %97 [
    i8 1, label %48
    i8 2, label %51
    i8 3, label %54
    i8 4, label %57
    i8 5, label %60
    i8 6, label %63
    i8 7, label %42
    i8 0, label %96
  ]

42:                                               ; preds = %35
  %43 = getelementptr inbounds i16, i16* %33, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = add nsw i32 %45, -48
  %47 = icmp ult i32 %46, 10
  br i1 %47, label %72, label %66

48:                                               ; preds = %35
  %49 = inttoptr i64 %32 to i16*
  %50 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %37, i16* %49, align 2
  br label %98

51:                                               ; preds = %35
  %52 = inttoptr i64 %32 to i16*
  %53 = getelementptr inbounds i16, i16* %52, i64 1
  store i16 8, i16* %52, align 2
  br label %98

54:                                               ; preds = %35
  %55 = inttoptr i64 %32 to i16*
  %56 = getelementptr inbounds i16, i16* %55, i64 1
  store i16 9, i16* %55, align 2
  br label %98

57:                                               ; preds = %35
  %58 = inttoptr i64 %32 to i16*
  %59 = getelementptr inbounds i16, i16* %58, i64 1
  store i16 10, i16* %58, align 2
  br label %98

60:                                               ; preds = %35
  %61 = inttoptr i64 %32 to i16*
  %62 = getelementptr inbounds i16, i16* %61, i64 1
  store i16 12, i16* %61, align 2
  br label %98

63:                                               ; preds = %35
  %64 = inttoptr i64 %32 to i16*
  %65 = getelementptr inbounds i16, i16* %64, i64 1
  store i16 13, i16* %64, align 2
  br label %98

66:                                               ; preds = %42
  %67 = or i32 %46, 32
  %68 = add nsw i32 %67, -49
  %69 = icmp ult i32 %68, 6
  %70 = add nsw i32 %67, -39
  %71 = select i1 %69, i32 %70, i32 -1
  br label %72

72:                                               ; preds = %42, %66
  %73 = phi i32 [ %71, %66 ], [ %46, %42 ]
  %74 = shl nsw i32 %73, 4
  %75 = getelementptr inbounds i16, i16* %33, i64 3
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = add nsw i32 %77, -48
  %79 = icmp ult i32 %78, 10
  br i1 %79, label %110, label %104

80:                                               ; preds = %140
  %81 = trunc i32 %142 to i16
  %82 = inttoptr i64 %32 to i16*
  %83 = getelementptr inbounds i16, i16* %82, i64 1
  store i16 %81, i16* %82, align 2
  br label %98

84:                                               ; preds = %140
  %85 = add i32 %142, 983040
  %86 = lshr i32 %85, 10
  %87 = trunc i32 %86 to i16
  %88 = and i16 %87, 1023
  %89 = or i16 %88, -10240
  %90 = inttoptr i64 %32 to i16*
  %91 = getelementptr inbounds i16, i16* %90, i64 1
  store i16 %89, i16* %90, align 2
  %92 = trunc i32 %142 to i16
  %93 = and i16 %92, 1023
  %94 = or i16 %93, -9216
  %95 = getelementptr inbounds i16, i16* %90, i64 2
  store i16 %94, i16* %91, align 2
  br label %98

96:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

97:                                               ; preds = %35
  unreachable

98:                                               ; preds = %48, %51, %54, %57, %60, %63, %84, %80
  %99 = phi i16* [ %83, %80 ], [ %95, %84 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ]
  %100 = phi i16* [ %143, %80 ], [ %143, %84 ], [ %36, %63 ], [ %36, %60 ], [ %36, %57 ], [ %36, %54 ], [ %36, %51 ], [ %36, %48 ]
  %101 = ptrtoint i16* %99 to i64
  %102 = getelementptr inbounds i16, i16* %100, i64 1
  br label %11

103:                                              ; preds = %31, %25
  ret void

104:                                              ; preds = %72
  %105 = or i32 %78, 32
  %106 = add nsw i32 %105, -49
  %107 = icmp ult i32 %106, 6
  %108 = add nsw i32 %105, -39
  %109 = select i1 %107, i32 %108, i32 -1
  br label %110

110:                                              ; preds = %104, %72
  %111 = phi i32 [ %109, %104 ], [ %78, %72 ]
  %112 = add i32 %111, %74
  %113 = shl i32 %112, 4
  %114 = getelementptr inbounds i16, i16* %33, i64 4
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %116, -48
  %118 = icmp ult i32 %117, 10
  br i1 %118, label %125, label %119

119:                                              ; preds = %110
  %120 = or i32 %117, 32
  %121 = add nsw i32 %120, -49
  %122 = icmp ult i32 %121, 6
  %123 = add nsw i32 %120, -39
  %124 = select i1 %122, i32 %123, i32 -1
  br label %125

125:                                              ; preds = %119, %110
  %126 = phi i32 [ %124, %119 ], [ %117, %110 ]
  %127 = add i32 %126, %113
  %128 = shl i32 %127, 4
  %129 = getelementptr inbounds i16, i16* %33, i64 5
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %131, -48
  %133 = icmp ult i32 %132, 10
  br i1 %133, label %140, label %134

134:                                              ; preds = %125
  %135 = or i32 %132, 32
  %136 = add nsw i32 %135, -49
  %137 = icmp ult i32 %136, 6
  %138 = add nsw i32 %135, -39
  %139 = select i1 %137, i32 %138, i32 -1
  br label %140

140:                                              ; preds = %134, %125
  %141 = phi i32 [ %139, %134 ], [ %132, %125 ]
  %142 = add i32 %141, %128
  %143 = getelementptr i16, i16* %33, i64 5
  %144 = icmp ult i32 %142, 65536
  br i1 %144, label %80, label %84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10JsonParserItE16JsonContinuationENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector.1182"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* dereferenceable(40)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1182"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1182"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33, i64 %32
  %36 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %35 to i64
  %37 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 0, i32 0
  %38 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33, i64 %9, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 0, i32 1
  %43 = bitcast i64** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i64** %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33, i64 %9, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 0, i32 2
  %48 = bitcast i64** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i64** %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %37, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %1, i64 0, i32 1
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #6
  %55 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %34, i64 1
  %56 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.1182", %"class.std::__1::vector.1182"* %0, i64 0, i32 0, i32 0
  %58 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %57, align 8
  %59 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %3, align 8
  %60 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %59, %58
  br i1 %60, label %61, label %63

61:                                               ; preds = %31
  %62 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %58 to i64
  br label %90

63:                                               ; preds = %31, %63
  %64 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %66, %63 ], [ %34, %31 ]
  %65 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %67, %63 ], [ %59, %31 ]
  %66 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %64, i64 -1
  %67 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %65, i64 -1
  %68 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %64, i64 -1, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %65, i64 -1, i32 0, i32 1
  %74 = bitcast i64** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast i64** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %64, i64 -1, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %65, i64 -1, i32 0, i32 2
  %79 = bitcast i64** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i64** %77 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.v8::internal::Isolate"* null, %"class.v8::internal::Isolate"** %68, align 8
  %82 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %64, i64 -1, i32 1
  %83 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %65, i64 -1, i32 1
  %84 = bitcast i32* %82 to i8*
  %85 = bitcast i32* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 12, i1 false) #6
  %86 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %67, %58
  br i1 %86, label %87, label %63

87:                                               ; preds = %63
  %88 = load i64, i64* %6, align 8
  %89 = load %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*, %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"** %3, align 8
  br label %90

90:                                               ; preds = %61, %87
  %91 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %58, %61 ], [ %89, %87 ]
  %92 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %34, %61 ], [ %66, %87 ]
  %93 = phi i64 [ %62, %61 ], [ %88, %87 ]
  %94 = ptrtoint %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %92 to i64
  store i64 %94, i64* %6, align 8
  store i64 %56, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %95 = inttoptr i64 %93 to %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"*
  %96 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %91, %95
  br i1 %96, label %126, label %97

97:                                               ; preds = %90, %124
  %98 = phi %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* [ %99, %124 ], [ %91, %90 ]
  %99 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Isolate"* %101, null
  br i1 %102, label %124, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %98, i64 -1, i32 0, i32 1
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation", %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %98, i64 -1, i32 0, i32 2
  %107 = load i64*, i64** %106, align 8
  %108 = ptrtoint i64* %105 to i64
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31
  %110 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %109, i64 0, i32 0
  %111 = bitcast %"struct.v8::internal::HandleScopeData"* %109 to i64*
  %112 = load i64*, i64** %110, align 8
  store i64 %108, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = add nsw i32 %114, -1
  store i32 %115, i32* %113, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 1
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %117, %107
  br i1 %118, label %121, label %119

119:                                              ; preds = %103
  store i64* %107, i64** %116, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %101) #6
  %120 = load i64*, i64** %110, align 8
  br label %121

121:                                              ; preds = %119, %103
  %122 = phi i64* [ %120, %119 ], [ %105, %103 ]
  %123 = phi i64* [ %107, %119 ], [ %112, %103 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %122, i64* %123) #6
  br label %124

124:                                              ; preds = %121, %97
  %125 = icmp eq %"struct.v8::internal::JsonParser<unsigned short>::JsonContinuation"* %99, %95
  br i1 %125, label %126, label %97

126:                                              ; preds = %124, %90
  %127 = icmp eq i64 %93, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %93 to i8*
  tail call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !17}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !7}
!29 = distinct !{!29, !17}
