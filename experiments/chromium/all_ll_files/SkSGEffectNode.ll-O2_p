; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGEffectNode.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGEffectNode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.1 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.3, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.2 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.3 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg10EffectNodeE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::EffectNode"*)* @_ZN4sksg10EffectNodeD2Ev to i8*), i8* bitcast (void (%"class.sksg::EffectNode"*)* @_ZN4sksg10EffectNodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::EffectNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::EffectNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::EffectNode"*, %struct.SkPoint*)* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint to i8*)] }, align 8

@_ZN4sksg10EffectNodeC1E5sk_spINS_10RenderNodeEEj = hidden unnamed_addr alias void (%"class.sksg::EffectNode"*, %class.sk_sp*, i32), void (%"class.sksg::EffectNode"*, %class.sk_sp*, i32)* @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj
@_ZN4sksg10EffectNodeD1Ev = hidden unnamed_addr alias void (%"class.sksg::EffectNode"*), void (%"class.sksg::EffectNode"*)* @_ZN4sksg10EffectNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"*, %class.sk_sp* nocapture, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.1, align 8
  %5 = bitcast %"class.sksg::EffectNode"* %0 to %"class.sksg::RenderNode"*
  tail call void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"* %5, i32 %2) #5
  %6 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10EffectNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %8, align 8
  %11 = bitcast %class.sk_sp* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast %"class.sksg::EffectNode"* %0 to %"class.sksg::Node"*
  %13 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  %14 = inttoptr i64 %10 to %"class.sksg::RenderNode"*
  %15 = icmp eq i64 %10, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %3, %16
  %20 = bitcast %class.sk_sp.1* %4 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %14, %"class.sksg::RenderNode"** %20, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %12, %class.sk_sp.1* nonnull dereferenceable(8) %4) #5
  %21 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %22 = load %"class.sksg::Node"*, %"class.sksg::Node"** %21, align 8
  %23 = icmp eq %"class.sksg::Node"* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %"class.sksg::Node"* %22 to %class.SkRefCntBase*
  %30 = bitcast %"class.sksg::Node"* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #5
  br label %34

34:                                               ; preds = %19, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  ret void
}

declare void @_ZN4sksg10RenderNodeC2Ej(%"class.sksg::RenderNode"*, i32) unnamed_addr #1

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.1* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10EffectNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::EffectNode"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.1* %2 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %7, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.1* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #5
  ret void
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.1* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10EffectNodeD0Ev(%"class.sksg::EffectNode"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10EffectNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::EffectNode"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.1* %2 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %7, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.1* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #5
  %41 = bitcast %"class.sksg::EffectNode"* %0 to i8*
  call void @_ZdlPv(i8* %41) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"* nocapture readonly, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %4, align 8
  tail call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #5
  ret void
}

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"* nocapture readonly, %struct.SkPoint* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  %5 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"* %4, %struct.SkPoint* dereferenceable(8) %1) #5
  ret %"class.sksg::RenderNode"* %5
}

declare %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"* nocapture readonly, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::EffectNode", %"class.sksg::EffectNode"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.sksg::RenderNode"** %4 to %"class.sksg::Node"**
  %6 = load %"class.sksg::Node"*, %"class.sksg::Node"** %5, align 8
  %7 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %6, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %8 = bitcast %struct.SkRect* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  %11 = bitcast float* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %9, 0
  %14 = insertvalue { <2 x float>, <2 x float> } %13, <2 x float> %12, 1
  ret { <2 x float>, <2 x float> } %14
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #5
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
