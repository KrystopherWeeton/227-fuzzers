; ModuleID = '../../components/permissions/permission_request.cc'
source_filename = "../../components/permissions/permission_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.permissions::PermissionRequest" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.std::__1::basic_string.5" }
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }

$_ZN11permissions17PermissionRequestD2Ev = comdat any

$_ZN11permissions17PermissionRequestD0Ev = comdat any

@_ZTVN11permissions17PermissionRequestE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.permissions::PermissionRequest"*)* @_ZN11permissions17PermissionRequestD2Ev to i8*), i8* bitcast (void (%"class.permissions::PermissionRequest"*)* @_ZN11permissions17PermissionRequestD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.permissions::PermissionRequest"*, %"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_ to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest11GetChipTextEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest14GetGestureTypeEv to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest22GetContentSettingsTypeEv to i8*)] }, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11permissions17PermissionRequestC2Ev(%"class.permissions::PermissionRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequest", %"class.permissions::PermissionRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN11permissions17PermissionRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_(%"class.permissions::PermissionRequest"*, %"class.permissions::PermissionRequest"*) unnamed_addr #1 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = alloca %class.GURL, align 8
  %5 = bitcast %"class.permissions::PermissionRequest"* %0 to i32 (%"class.permissions::PermissionRequest"*)***
  %6 = load i32 (%"class.permissions::PermissionRequest"*)**, i32 (%"class.permissions::PermissionRequest"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.permissions::PermissionRequest"*)*, i32 (%"class.permissions::PermissionRequest"*)** %6, i64 2
  %8 = load i32 (%"class.permissions::PermissionRequest"*)*, i32 (%"class.permissions::PermissionRequest"*)** %7, align 8
  %9 = tail call i32 %8(%"class.permissions::PermissionRequest"* %0) #7
  %10 = bitcast %"class.permissions::PermissionRequest"* %1 to i32 (%"class.permissions::PermissionRequest"*)***
  %11 = load i32 (%"class.permissions::PermissionRequest"*)**, i32 (%"class.permissions::PermissionRequest"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.permissions::PermissionRequest"*)*, i32 (%"class.permissions::PermissionRequest"*)** %11, i64 2
  %13 = load i32 (%"class.permissions::PermissionRequest"*)*, i32 (%"class.permissions::PermissionRequest"*)** %12, align 8
  %14 = tail call i32 %13(%"class.permissions::PermissionRequest"* %1) #7
  %15 = icmp eq i32 %9, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %2
  %17 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #7
  %18 = bitcast %"class.permissions::PermissionRequest"* %0 to void (%class.GURL*, %"class.permissions::PermissionRequest"*)***
  %19 = load void (%class.GURL*, %"class.permissions::PermissionRequest"*)**, void (%class.GURL*, %"class.permissions::PermissionRequest"*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GURL*, %"class.permissions::PermissionRequest"*)*, void (%class.GURL*, %"class.permissions::PermissionRequest"*)** %19, i64 6
  %21 = load void (%class.GURL*, %"class.permissions::PermissionRequest"*)*, void (%class.GURL*, %"class.permissions::PermissionRequest"*)** %20, align 8
  call void %21(%class.GURL* nonnull sret %3, %"class.permissions::PermissionRequest"* %0) #7
  %22 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %22) #7
  %23 = bitcast %"class.permissions::PermissionRequest"* %1 to void (%class.GURL*, %"class.permissions::PermissionRequest"*)***
  %24 = load void (%class.GURL*, %"class.permissions::PermissionRequest"*)**, void (%class.GURL*, %"class.permissions::PermissionRequest"*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GURL*, %"class.permissions::PermissionRequest"*)*, void (%class.GURL*, %"class.permissions::PermissionRequest"*)** %24, i64 6
  %26 = load void (%class.GURL*, %"class.permissions::PermissionRequest"*)*, void (%class.GURL*, %"class.permissions::PermissionRequest"*)** %25, align 8
  call void %26(%class.GURL* nonnull sret %4, %"class.permissions::PermissionRequest"* %1) #7
  %27 = call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %3, %class.GURL* nonnull dereferenceable(120) %4) #7
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %22) #7
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #7
  br label %28

28:                                               ; preds = %2, %16
  %29 = phi i1 [ %27, %16 ], [ false, %2 ]
  ret i1 %29
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK11permissions17PermissionRequest14GetGestureTypeEv(%"class.permissions::PermissionRequest"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK11permissions17PermissionRequest22GetContentSettingsTypeEv(%"class.permissions::PermissionRequest"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11permissions17PermissionRequest11GetChipTextEv(%"class.absl::optional"* noalias nocapture sret, %"class.permissions::PermissionRequest"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %union.anon.4* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11permissions17PermissionRequestD2Ev(%"class.permissions::PermissionRequest"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11permissions17PermissionRequestD0Ev(%"class.permissions::PermissionRequest"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
