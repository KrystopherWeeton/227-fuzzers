; ModuleID = '../../components/metrics/system_memory_stats_recorder_linux.cc'
source_filename = "../../components/metrics/system_memory_stats_recorder_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::SystemMemoryInfoKB" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

@.str = private unnamed_addr constant [39 x i8] c"Memory.OOMKill.Contents.MemAllocatedMB\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Memory.OOMKill.Contents.MemAvailableMB\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Memory.OOMKill.Extensions.MemAllocatedMB\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"Memory.OOMKill.Extensions.MemAvailableMB\00", align 1
@_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeE(i32) local_unnamed_addr #0 {
  %2 = alloca %"struct.base::SystemMemoryInfoKB", align 4
  %3 = bitcast %"struct.base::SystemMemoryInfoKB"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %3) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 -86, i64 52, i1 false)
  call void @_ZN4base18SystemMemoryInfoKBC1Ev(%"struct.base::SystemMemoryInfoKB"* nonnull %2) #3
  %4 = call zeroext i1 @_ZN4base19GetSystemMemoryInfoEPNS_18SystemMemoryInfoKBE(%"struct.base::SystemMemoryInfoKB"* nonnull %2) #3
  br i1 %4, label %5, label %71

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.base::SystemMemoryInfoKB", %"struct.base::SystemMemoryInfoKB"* %2, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.base::SystemMemoryInfoKB", %"struct.base::SystemMemoryInfoKB"* %2, i64 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %7
  %11 = sdiv i32 %10, 1024
  %12 = getelementptr inbounds %"struct.base::SystemMemoryInfoKB", %"struct.base::SystemMemoryInfoKB"* %2, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.base::SystemMemoryInfoKB", %"struct.base::SystemMemoryInfoKB"* %2, i64 0, i32 10
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %13
  %17 = getelementptr inbounds %"struct.base::SystemMemoryInfoKB", %"struct.base::SystemMemoryInfoKB"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %16, %18
  %20 = sdiv i32 %19, 1024
  switch i32 %0, label %71 [
    i32 0, label %21
    i32 1, label %46
  ]

21:                                               ; preds = %5
  %22 = load atomic i64, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %23 = inttoptr i64 %22 to %"class.base::HistogramBase"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 250, i32 32768, i32 50, i32 1) #3
  %27 = ptrtoint %"class.base::HistogramBase"* %26 to i64
  store atomic i64 %27, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi %"class.base::HistogramBase"* [ %23, %21 ], [ %26, %25 ]
  %30 = bitcast %"class.base::HistogramBase"* %29 to void (%"class.base::HistogramBase"*, i32)***
  %31 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, i64 6
  %33 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %32, align 8
  call void %33(%"class.base::HistogramBase"* %29, i32 %11) #3
  %34 = load atomic i64, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %35 = inttoptr i64 %34 to %"class.base::HistogramBase"*
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 32768, i32 50, i32 1) #3
  %39 = ptrtoint %"class.base::HistogramBase"* %38 to i64
  store atomic i64 %39, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %40

40:                                               ; preds = %28, %37
  %41 = phi %"class.base::HistogramBase"* [ %35, %28 ], [ %38, %37 ]
  %42 = bitcast %"class.base::HistogramBase"* %41 to void (%"class.base::HistogramBase"*, i32)***
  %43 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %43, i64 6
  %45 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %44, align 8
  call void %45(%"class.base::HistogramBase"* %41, i32 %20) #3
  br label %71

46:                                               ; preds = %5
  %47 = load atomic i64, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %48 = inttoptr i64 %47 to %"class.base::HistogramBase"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 250, i32 32768, i32 50, i32 1) #3
  %52 = ptrtoint %"class.base::HistogramBase"* %51 to i64
  store atomic i64 %52, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi %"class.base::HistogramBase"* [ %48, %46 ], [ %51, %50 ]
  %55 = bitcast %"class.base::HistogramBase"* %54 to void (%"class.base::HistogramBase"*, i32)***
  %56 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %56, i64 6
  %58 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %57, align 8
  call void %58(%"class.base::HistogramBase"* %54, i32 %11) #3
  %59 = load atomic i64, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %60 = inttoptr i64 %59 to %"class.base::HistogramBase"*
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %53
  %63 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 32768, i32 50, i32 1) #3
  %64 = ptrtoint %"class.base::HistogramBase"* %63 to i64
  store atomic i64 %64, i64* @_ZZN7metrics17RecordMemoryStatsENS_21RecordMemoryStatsTypeEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %65

65:                                               ; preds = %53, %62
  %66 = phi %"class.base::HistogramBase"* [ %60, %53 ], [ %63, %62 ]
  %67 = bitcast %"class.base::HistogramBase"* %66 to void (%"class.base::HistogramBase"*, i32)***
  %68 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %68, i64 6
  %70 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %69, align 8
  call void %70(%"class.base::HistogramBase"* %66, i32 %20) #3
  br label %71

71:                                               ; preds = %40, %65, %5, %1
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %3) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base18SystemMemoryInfoKBC1Ev(%"struct.base::SystemMemoryInfoKB"*) unnamed_addr #2

declare zeroext i1 @_ZN4base19GetSystemMemoryInfoEPNS_18SystemMemoryInfoKBE(%"struct.base::SystemMemoryInfoKB"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
