; ModuleID = '../../chrome/browser/ui/commander/open_url_command_source.cc'
source_filename = "../../chrome/browser/ui/commander/open_url_command_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.commander::OpenURLCommandSource" = type { %"class.commander::CommandSource", %"class.std::__1::vector" }
%"class.commander::CommandSource" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %class.GURL }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.commander::CommandItem"* }
%"struct.commander::CommandItem" = type { i32 (...)**, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.absl::variant", double, %"class.std::__1::vector.27" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.24" }
%"union.absl::variant_internal::DestructibleUnionImpl.24" = type { %"struct.std::__1::pair.25" }
%"struct.std::__1::pair.25" = type { %"class.std::__1::basic_string", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.29" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.gfx::Range"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr.20"* }
%class.Browser = type opaque
%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor" = type { %"class.absl::variant"*, %"class.base::OnceCallback"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.commander::FuzzyFinder" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.42", %"class.std::__1::vector.42", %"class.std::__1::vector.49", %"class.std::__1::vector.55" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { i32*, i32*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i32* }
%"class.std::__1::vector.49" = type { i64*, i64, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { i64*, i64*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.60", %"class.std::__1::__tuple_leaf.61", %"class.std::__1::__tuple_leaf.62", [3 x i8] }>
%"class.std::__1::__tuple_leaf" = type { %"class.base::internal::UnretainedWrapper" }
%"class.base::internal::UnretainedWrapper" = type { %class.Browser* }
%"class.std::__1::__tuple_leaf.60" = type { %class.GURL }
%"class.std::__1::__tuple_leaf.61" = type { i32 }
%"class.std::__1::__tuple_leaf.62" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN9commander20OpenURLCommandSourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.commander::OpenURLCommandSource"*)* @_ZN9commander20OpenURLCommandSourceD2Ev to i8*), i8* bitcast (void (%"class.commander::OpenURLCommandSource"*)* @_ZN9commander20OpenURLCommandSourceD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.18"*, %"class.commander::OpenURLCommandSource"*, %"class.std::__1::basic_string"*, %class.Browser*)* @_ZNK9commander20OpenURLCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser to i8*)] }, align 8

@_ZN9commander20OpenURLCommandSourceC1Ev = hidden unnamed_addr alias void (%"class.commander::OpenURLCommandSource"*), void (%"class.commander::OpenURLCommandSource"*)* @_ZN9commander20OpenURLCommandSourceC2Ev
@_ZN9commander20OpenURLCommandSourceD1Ev = hidden unnamed_addr alias void (%"class.commander::OpenURLCommandSource"*), void (%"class.commander::OpenURLCommandSource"*)* @_ZN9commander20OpenURLCommandSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20OpenURLCommandSourceC2Ev(%"class.commander::OpenURLCommandSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander20OpenURLCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20OpenURLCommandSourceD2Ev(%"class.commander::OpenURLCommandSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander20OpenURLCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %9 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.std::__1::pair"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #9
  %16 = bitcast %"struct.std::__1::pair"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = bitcast %"struct.std::__1::pair"* %14 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"struct.std::__1::pair"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20OpenURLCommandSourceD0Ev(%"class.commander::OpenURLCommandSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander20OpenURLCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %9 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.std::__1::pair"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #9
  %16 = bitcast %"struct.std::__1::pair"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = bitcast %"struct.std::__1::pair"* %14 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"struct.std::__1::pair"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.commander::OpenURLCommandSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9commander20OpenURLCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser(%"class.std::__1::vector.18"* noalias sret, %"class.commander::OpenURLCommandSource"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %class.Browser*) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", align 8
  %6 = alloca %"class.std::__1::vector.27", align 8
  %7 = alloca %"class.commander::FuzzyFinder", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::unique_ptr.20", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector.18"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = bitcast %"class.std::__1::vector.27"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %6, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #9
  %17 = bitcast %"class.commander::FuzzyFinder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  %18 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %1, i64 0, i32 1, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.commander::OpenURLCommandSource", %"class.commander::OpenURLCommandSource"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %19, %21
  br i1 %22, label %44, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %28 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %29 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"class.std::__1::unique_ptr.20"* %9 to i8*
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %9, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.20"* %9 to i8**
  %34 = bitcast %"class.base::OnceCallback"* %10 to i8*
  %35 = ptrtoint %class.Browser* %3 to i64
  %36 = bitcast %"class.base::OnceCallback"* %10 to i8**
  %37 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5 to i8*
  %38 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.20"* %9 to i64*
  %42 = bitcast %"class.std::__1::unique_ptr.20"** %11 to i64*
  %43 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %52

44:                                               ; preds = %279, %4
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #9
  %45 = load %"class.gfx::Range"*, %"class.gfx::Range"** %15, align 8
  %46 = icmp eq %"class.gfx::Range"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = ptrtoint %"class.gfx::Range"* %45 to i64
  %49 = bitcast %"class.gfx::Range"** %16 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast %"class.gfx::Range"* %45 to i8*
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void

52:                                               ; preds = %23, %279
  %53 = phi %"struct.std::__1::pair"* [ %19, %23 ], [ %280, %279 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %54 = bitcast %"struct.std::__1::pair"* %53 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = bitcast %"struct.std::__1::pair"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %59, i64 24, i1 false) #9
  br label %230

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %64, 11
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = trunc i64 %64 to i8
  store i8 %67, i8* %30, align 1
  br label %82

68:                                               ; preds = %60
  %69 = icmp ugt i64 %64, 9223372036854775791
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %71) #11
  unreachable

72:                                               ; preds = %68
  %73 = add nuw nsw i64 %64, 8
  %74 = and i64 %73, -8
  %75 = icmp slt i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  call void @abort() #11
  unreachable

77:                                               ; preds = %72
  %78 = shl i64 %74, 1
  %79 = call i8* @_Znwm(i64 %78) #10
  %80 = bitcast i8* %79 to i16*
  store i8* %79, i8** %27, align 8
  %81 = or i64 %74, -9223372036854775808
  store i64 %81, i64* %26, align 8
  store i64 %64, i64* %25, align 8
  br label %82

82:                                               ; preds = %77, %66
  %83 = phi i16* [ %28, %66 ], [ %80, %77 ]
  %84 = add nuw nsw i64 %64, 1
  %85 = add i64 %64, 1
  %86 = icmp ult i64 %85, 16
  br i1 %86, label %177, label %87

87:                                               ; preds = %82
  %88 = getelementptr i16, i16* %83, i64 1
  %89 = getelementptr i16, i16* %88, i64 %64
  %90 = getelementptr i16, i16* %62, i64 1
  %91 = getelementptr i16, i16* %90, i64 %64
  %92 = icmp ult i16* %83, %91
  %93 = icmp ult i16* %62, %89
  %94 = and i1 %92, %93
  br i1 %94, label %177, label %95

95:                                               ; preds = %87
  %96 = and i64 %85, -16
  %97 = sub i64 %84, %96
  %98 = getelementptr i16, i16* %62, i64 %96
  %99 = getelementptr i16, i16* %83, i64 %96
  %100 = add i64 %96, -16
  %101 = lshr exact i64 %100, 4
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 48
  br i1 %104, label %156, label %105

105:                                              ; preds = %95
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i16, i16* %62, i64 %108
  %111 = getelementptr i16, i16* %83, i64 %108
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !5
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !5
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !8, !noalias !5
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !8, !noalias !5
  %120 = or i64 %108, 16
  %121 = getelementptr i16, i16* %62, i64 %120
  %122 = getelementptr i16, i16* %83, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !5
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !5
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !8, !noalias !5
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !8, !noalias !5
  %131 = or i64 %108, 32
  %132 = getelementptr i16, i16* %62, i64 %131
  %133 = getelementptr i16, i16* %83, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !5
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !5
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !8, !noalias !5
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !8, !noalias !5
  %142 = or i64 %108, 48
  %143 = getelementptr i16, i16* %62, i64 %142
  %144 = getelementptr i16, i16* %83, i64 %142
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !5
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !5
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !8, !noalias !5
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !8, !noalias !5
  %153 = add i64 %108, 64
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !10

156:                                              ; preds = %107, %95
  %157 = phi i64 [ 0, %95 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i16, i16* %62, i64 %160
  %163 = getelementptr i16, i16* %83, i64 %160
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !5
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !5
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !8, !noalias !5
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !8, !noalias !5
  %172 = add i64 %160, 16
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !12

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %85, %96
  br i1 %176, label %230, label %177

177:                                              ; preds = %175, %87, %82
  %178 = phi i64 [ %84, %87 ], [ %84, %82 ], [ %97, %175 ]
  %179 = phi i16* [ %62, %87 ], [ %62, %82 ], [ %98, %175 ]
  %180 = phi i16* [ %83, %87 ], [ %83, %82 ], [ %99, %175 ]
  %181 = add i64 %178, -1
  %182 = and i64 %178, 7
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %177, %184
  %185 = phi i64 [ %190, %184 ], [ %178, %177 ]
  %186 = phi i16* [ %192, %184 ], [ %179, %177 ]
  %187 = phi i16* [ %191, %184 ], [ %180, %177 ]
  %188 = phi i64 [ %193, %184 ], [ %182, %177 ]
  %189 = load i16, i16* %186, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %185, -1
  %191 = getelementptr inbounds i16, i16* %187, i64 1
  %192 = getelementptr inbounds i16, i16* %186, i64 1
  %193 = add i64 %188, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !14

195:                                              ; preds = %184, %177
  %196 = phi i64 [ %178, %177 ], [ %190, %184 ]
  %197 = phi i16* [ %179, %177 ], [ %192, %184 ]
  %198 = phi i16* [ %180, %177 ], [ %191, %184 ]
  %199 = icmp ult i64 %181, 7
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %200
  %201 = phi i64 [ %226, %200 ], [ %196, %195 ]
  %202 = phi i16* [ %228, %200 ], [ %197, %195 ]
  %203 = phi i16* [ %227, %200 ], [ %198, %195 ]
  %204 = load i16, i16* %202, align 2
  store i16 %204, i16* %203, align 2
  %205 = getelementptr inbounds i16, i16* %203, i64 1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %203, i64 2
  %209 = getelementptr inbounds i16, i16* %202, i64 2
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %203, i64 3
  %212 = getelementptr inbounds i16, i16* %202, i64 3
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %203, i64 4
  %215 = getelementptr inbounds i16, i16* %202, i64 4
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %203, i64 5
  %218 = getelementptr inbounds i16, i16* %202, i64 5
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %203, i64 6
  %221 = getelementptr inbounds i16, i16* %202, i64 6
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %203, i64 7
  %224 = getelementptr inbounds i16, i16* %202, i64 7
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = add i64 %201, -8
  %227 = getelementptr inbounds i16, i16* %203, i64 8
  %228 = getelementptr inbounds i16, i16* %202, i64 8
  %229 = icmp eq i64 %226, 0
  br i1 %229, label %230, label %200, !llvm.loop !15

230:                                              ; preds = %195, %200, %175, %58
  %231 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.27"* nonnull %6) #9
  %232 = fcmp oeq double %231, 0.000000e+00
  br i1 %232, label %274, label %233

233:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  store %"struct.commander::CommandItem"* inttoptr (i64 -6148914691236517206 to %"struct.commander::CommandItem"*), %"struct.commander::CommandItem"** %32, align 8
  %234 = call i8* @_Znwm(i64 136) #10
  %235 = bitcast i8* %234 to %"struct.commander::CommandItem"*
  call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %235, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, double %231, %"class.std::__1::vector.27"* nonnull dereferenceable(24) %6) #9
  store i8* %234, i8** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 1
  %237 = call i8* @_Znwm(i64 176) #10, !noalias !16
  %238 = bitcast i8* %237 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %238, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !16
  %239 = getelementptr inbounds i8, i8* %237, i64 32
  %240 = bitcast i8* %239 to i64*
  store i64 ptrtoint (void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional"*)* @_ZN6chrome8AddTabAtEP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEE to i64), i64* %240, align 8, !noalias !16
  %241 = getelementptr inbounds i8, i8* %237, i64 40
  %242 = bitcast i8* %241 to i64*
  store i64 %35, i64* %242, align 8, !noalias !16
  %243 = getelementptr inbounds i8, i8* %237, i64 48
  %244 = bitcast i8* %243 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %244, %class.GURL* dereferenceable(120) %236) #9, !noalias !16
  %245 = getelementptr inbounds i8, i8* %237, i64 168
  %246 = bitcast i8* %245 to i32*
  store i32 -1, i32* %246, align 4, !noalias !16
  %247 = getelementptr inbounds i8, i8* %237, i64 172
  store i8 1, i8* %247, align 1, !noalias !16
  store i8* %237, i8** %36, align 8, !alias.scope !16
  %248 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %32, align 8
  %249 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %248, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  store %"class.absl::variant"* %249, %"class.absl::variant"** %38, align 8
  store %"class.base::OnceCallback"* %10, %"class.base::OnceCallback"** %39, align 8
  %250 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %248, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %251 = load i64, i64* %250, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* nonnull dereferenceable(16) %5, i64 %251) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %252 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %11, align 8
  %253 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %12, align 8
  %254 = icmp ult %"class.std::__1::unique_ptr.20"* %252, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %233
  %256 = load i64, i64* %41, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %32, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.20"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %252, i64 1
  %259 = ptrtoint %"class.std::__1::unique_ptr.20"* %258 to i64
  store i64 %259, i64* %42, align 8
  br label %261

260:                                              ; preds = %233
  call void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.18"* %0, %"class.std::__1::unique_ptr.20"* nonnull dereferenceable(8) %9) #9
  br label %261

261:                                              ; preds = %255, %260
  %262 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %32, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %32, align 8
  %263 = icmp eq %"struct.commander::CommandItem"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %261
  %265 = bitcast %"struct.commander::CommandItem"* %262 to void (%"struct.commander::CommandItem"*)***
  %266 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %266, i64 1
  %268 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %267, align 8
  call void %268(%"struct.commander::CommandItem"* nonnull %262) #9
  br label %269

269:                                              ; preds = %261, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %270 = load i8, i8* %30, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %279

272:                                              ; preds = %269
  %273 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %273) #10
  br label %279

274:                                              ; preds = %230
  %275 = load i8, i8* %30, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  %278 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %278) #10
  br label %279

279:                                              ; preds = %277, %274, %272, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 1
  %281 = icmp eq %"struct.std::__1::pair"* %280, %21
  br i1 %281, label %44, label %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

declare double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.27"*) local_unnamed_addr #3

declare void @_ZN6chrome8AddTabAtEP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEE(%class.Browser*, %class.GURL* dereferenceable(120), i32, i1 zeroext, %"class.absl::optional"*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"*, %"class.std::__1::basic_string"* dereferenceable(24), double, %"class.std::__1::vector.27"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES5_ibNS8_9nullopt_tEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.std::__1::tuple"*
  %7 = bitcast void ()** %5 to %class.Browser**
  %8 = load %class.Browser*, %class.Browser** %7, align 8
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %10 = bitcast void ()** %9 to %class.GURL*
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 16
  %12 = bitcast void ()** %11 to i32*
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 3, i32 0
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = load void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional"*)*, void (%class.Browser*, %class.GURL*, i32, i1, %"class.absl::optional"*)** %4, align 8
  %16 = load i32, i32* %12, align 4
  %17 = load i8, i8* %13, align 1, !range !21
  %18 = icmp ne i8 %17, 0
  store i8 0, i8* %14, align 8
  call void %15(%class.Browser* %8, %class.GURL* dereferenceable(120) %10, i32 %16, i1 zeroext %18, %"class.absl::optional"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS2_EES4_ibNS7_9nullopt_tEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* dereferenceable(16), i64) local_unnamed_addr #0 comdat align 2 {
  switch i64 %1, label %34 [
    i64 0, label %3
    i64 1, label %11
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %5 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %4, align 8
  %6 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0 to %"class.base::OnceCallback"**
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %8, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #9
  br label %57

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %13 = load %"class.absl::variant"*, %"class.absl::variant"** %12, align 8
  %14 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %15 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %14, align 8
  %16 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %29 [
    i64 0, label %18
    i64 1, label %20
  ]

18:                                               ; preds = %11
  %19 = bitcast %"class.absl::variant"* %13 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #9
  br label %29

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #9
  %22 = bitcast %"class.absl::variant"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.absl::variant"* %13 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %11, %18, %20, %26
  store i64 -1, i64* %16, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.absl::variant"* %13 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  store i64 0, i64* %16, align 8
  br label %57

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %36 = load %"class.absl::variant"*, %"class.absl::variant"** %35, align 8
  %37 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %38 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  %39 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %52 [
    i64 0, label %41
    i64 1, label %43
  ]

41:                                               ; preds = %34
  %42 = bitcast %"class.absl::variant"* %36 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #9
  br label %52

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #9
  %45 = bitcast %"class.absl::variant"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = bitcast %"class.absl::variant"* %36 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %34, %41, %43, %49
  store i64 -1, i64* %39, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %38, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.base::OnceCallback"* %38 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.absl::variant"* %36 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  store i64 0, i64* %39, align 8
  br label %57

57:                                               ; preds = %52, %29, %3
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.18"*, %"class.std::__1::unique_ptr.20"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.20"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.20"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.20"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.20"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.20"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.20"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.20"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.20"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.20"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.20"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.commander::CommandItem"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.20"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.20"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.20"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.20"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !22

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.20"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.20"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.20"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.20"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.20"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.20"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.20"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.20"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.20"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.20"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.20"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.20"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.20"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.20"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.20"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.20"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.20"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.20"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.20"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.20"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.20"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.20"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.20"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.20"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.20"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.20"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.20"*
  %138 = icmp eq %"class.std::__1::unique_ptr.20"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.20"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %142, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %142, align 8
  %144 = icmp eq %"struct.commander::CommandItem"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"struct.commander::CommandItem"* %143 to void (%"struct.commander::CommandItem"*)***
  %147 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %147, i64 1
  %149 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %148, align 8
  tail call void %149(%"struct.commander::CommandItem"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.20"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9commander12_GLOBAL__N_117CreateTitleURLMapEv: argument 0"}
!4 = distinct !{!4, !"_ZN9commander12_GLOBAL__N_117CreateTitleURLMapEv"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !11}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES7_ibRKNS8_9nullopt_tEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS0_17UnretainedWrapperIS3_EES7_ibRKNS8_9nullopt_tEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS_8internal17UnretainedWrapperIS1_EES5_ibRKNS6_9nullopt_tEEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIPFvP7BrowserRK4GURLibN4absl8optionalIN10tab_groups10TabGroupIdEEEEJNS_8internal17UnretainedWrapperIS1_EES5_ibRKNS6_9nullopt_tEEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!21 = !{i8 0, i8 2}
!22 = distinct !{!22, !13}
