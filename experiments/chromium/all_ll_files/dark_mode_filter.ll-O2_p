; ModuleID = '../../third_party/blink/renderer/platform/graphics/dark_mode_filter.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/dark_mode_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.26, %class.sk_sp.27, %class.sk_sp.68, %class.sk_sp, %class.sk_sp.69, %class.sk_sp.70, i32, float, float, i32, %union.anon.77, [4 x i8] }>
%class.sk_sp.26 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.27 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.28", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.34, i32, %"class.absl::optional.44", %"class.std::__1::vector.49", %"class.std::__1::vector.56", %class.sk_sp.63, %class.sk_sp.33, i32, [4 x i8] }>
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.33, %class.sk_sp.34, %"class.gfx::Rect", i32, %class.sk_sp.39, %class.sk_sp.43, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.33, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.39 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.20, i32, i32 }
%class.sk_sp.20 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.40" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.43 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.34 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.35", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i8* }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i32*, i32*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i32* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { float*, float*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { float* }
%class.sk_sp.63 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.64", [7 x i8] }>
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i8 }
%class.sk_sp.33 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.68 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.69 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.70 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.71, i32, %"class.absl::optional.72", i8, i32 }
%class.sk_sp.71 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %struct.SkRect }
%union.anon.77 = type { i32 }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional", %"class.std::__1::unique_ptr.14" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %class.sk_sp }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type { i8 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type { %"class.WTF::LruCache" }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.WTF::IntegralWithAllKeys", %"class.std::__1::unique_ptr.127" }
%"struct.WTF::IntegralWithAllKeys" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey" = type { %"struct.WTF::IntegralWithAllKeys", i32, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* }
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* }
%"class.blink::ScopedDarkModeElementRoleOverride" = type { %"class.blink::GraphicsContext"*, %"class.absl::optional" }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.121", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.83"*, i32, i32 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.26 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.91, %"class.std::__1::unique_ptr.92" }
%class.scoped_refptr.91 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.95", %struct.SkRect }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.100, [384 x i64], %class.sk_sp.101, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.102", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.108" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.100 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.101 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::DarkModeFilter"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkColorMatrix = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [20 x float] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, [7 x i8], %union.anon.82 }
%union.anon.82 = type { %"class.cc::PaintFlags" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.135 }
%union.anon.135 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink26DarkModeInvertedColorCache16GetInvertedColorEPNS_19DarkModeColorFilterEj = comdat any

$_ZN3WTF8LruCacheINS_19IntegralWithAllKeysIjEEjNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE3PutERKS2_Oj = comdat any

$_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKS2_SF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_ = comdat any

$_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_ = comdat any

@__const._ZN5blink14DarkModeFilter20ApplyToFlagsIfNeededERKN2cc10PaintFlagsENS0_11ElementRoleE.dark_mode_flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.26 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.27 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.68 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.69 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.70 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.77 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_19IntegralWithAllKeysIjEENSt3__110unique_ptrINS_8LruCacheIS3_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEEEEPKcv = private unnamed_addr constant [545 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::IntegralWithAllKeys<unsigned int>, std::__1::unique_ptr<WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey, std::__1::default_delete<WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey> > >]\00", align 1

@_ZN5blink14DarkModeFilterC1ERKNS_16DarkModeSettingsE = hidden unnamed_addr alias void (%"class.blink::DarkModeFilter"*, %"struct.blink::DarkModeSettings"*), void (%"class.blink::DarkModeFilter"*, %"struct.blink::DarkModeSettings"*)* @_ZN5blink14DarkModeFilterC2ERKNS_16DarkModeSettingsE
@_ZN5blink14DarkModeFilterD1Ev = hidden unnamed_addr alias void (%"class.blink::DarkModeFilter"*), void (%"class.blink::DarkModeFilter"*)* @_ZN5blink14DarkModeFilterD2Ev
@_ZN5blink14DarkModeFilter13ImmutableDataC1ERKNS_16DarkModeSettingsE = hidden unnamed_addr alias void (%"struct.blink::DarkModeFilter::ImmutableData"*, %"struct.blink::DarkModeSettings"*), void (%"struct.blink::DarkModeFilter::ImmutableData"*, %"struct.blink::DarkModeSettings"*)* @_ZN5blink14DarkModeFilter13ImmutableDataC2ERKNS_16DarkModeSettingsE
@_ZN5blink33ScopedDarkModeElementRoleOverrideC1EPNS_15GraphicsContextENS_14DarkModeFilter11ElementRoleE = hidden unnamed_addr alias void (%"class.blink::ScopedDarkModeElementRoleOverride"*, %"class.blink::GraphicsContext"*, i32), void (%"class.blink::ScopedDarkModeElementRoleOverride"*, %"class.blink::GraphicsContext"*, i32)* @_ZN5blink33ScopedDarkModeElementRoleOverrideC2EPNS_15GraphicsContextENS_14DarkModeFilter11ElementRoleE
@_ZN5blink33ScopedDarkModeElementRoleOverrideD1Ev = hidden unnamed_addr alias void (%"class.blink::ScopedDarkModeElementRoleOverride"*), void (%"class.blink::ScopedDarkModeElementRoleOverride"*)* @_ZN5blink33ScopedDarkModeElementRoleOverrideD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DarkModeFilterC2ERKNS_16DarkModeSettingsE(%"class.blink::DarkModeFilter"* nocapture, %"struct.blink::DarkModeSettings"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0
  tail call void @_ZN5blink14DarkModeFilter13ImmutableDataC2ERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeFilter::ImmutableData"* %3, %"struct.blink::DarkModeSettings"* dereferenceable(32) %1)
  %4 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 2
  %6 = tail call i8* @_Znwm(i64 48) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds i8, i8* %6, i64 40
  %9 = bitcast i8* %8 to i64*
  store i64 1024, i64* %9, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.14"* %5 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DarkModeFilterD2Ev(%"class.blink::DarkModeFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DarkModeInvertedColorCache"*, %"class.blink::DarkModeInvertedColorCache"** %2, align 8
  store %"class.blink::DarkModeInvertedColorCache"* null, %"class.blink::DarkModeInvertedColorCache"** %2, align 8
  %4 = icmp eq %"class.blink::DarkModeInvertedColorCache"* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %31, label %9, !prof !2

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %26, %13
  %16 = phi i64 [ 0, %13 ], [ %27, %26 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %16, i32 0, i32 1
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %16, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %21, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %21, align 8
  %23 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %22 to i8*
  tail call void @free(i8* %25) #10
  br label %26

26:                                               ; preds = %24, %20, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = icmp eq i64 %27, %14
  br i1 %28, label %29, label %15

29:                                               ; preds = %26, %9
  %30 = bitcast %"struct.WTF::KeyValuePair"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #10
  br label %31

31:                                               ; preds = %29, %5
  %32 = bitcast %"class.blink::DarkModeInvertedColorCache"* %3 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %1, %31
  %34 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 5, i32 0
  %35 = load %class.SkColorFilter*, %class.SkColorFilter** %34, align 8
  %36 = icmp eq %class.SkColorFilter* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorFilter* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkColorFilter* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  tail call void %46(%class.SkRefCntBase* nonnull %42) #10
  br label %47

47:                                               ; preds = %41, %37, %33
  %48 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %48, align 8
  store %"class.blink::DarkModeColorFilter"* null, %"class.blink::DarkModeColorFilter"** %48, align 8
  %50 = icmp eq %"class.blink::DarkModeColorFilter"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::DarkModeColorFilter"* %49 to void (%"class.blink::DarkModeColorFilter"*)***
  %53 = load void (%"class.blink::DarkModeColorFilter"*)**, void (%"class.blink::DarkModeColorFilter"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::DarkModeColorFilter"*)*, void (%"class.blink::DarkModeColorFilter"*)** %53, i64 1
  %55 = load void (%"class.blink::DarkModeColorFilter"*)*, void (%"class.blink::DarkModeColorFilter"*)** %54, align 8
  tail call void %55(%"class.blink::DarkModeColorFilter"* nonnull %49) #10
  br label %56

56:                                               ; preds = %51, %47
  %57 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::DarkModeImageClassifier"*, %"class.blink::DarkModeImageClassifier"** %57, align 8
  store %"class.blink::DarkModeImageClassifier"* null, %"class.blink::DarkModeImageClassifier"** %57, align 8
  %59 = icmp eq %"class.blink::DarkModeImageClassifier"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  tail call void @_ZN5blink23DarkModeImageClassifierD1Ev(%"class.blink::DarkModeImageClassifier"* nonnull %58) #10
  %61 = getelementptr inbounds %"class.blink::DarkModeImageClassifier", %"class.blink::DarkModeImageClassifier"* %58, i64 0, i32 0
  tail call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %60, %56
  %63 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %63, align 8
  store %"class.blink::DarkModeColorClassifier"* null, %"class.blink::DarkModeColorClassifier"** %63, align 8
  %65 = icmp eq %"class.blink::DarkModeColorClassifier"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::DarkModeColorClassifier"* %64 to void (%"class.blink::DarkModeColorClassifier"*)***
  %68 = load void (%"class.blink::DarkModeColorClassifier"*)**, void (%"class.blink::DarkModeColorClassifier"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %68, i64 1
  %70 = load void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %69, align 8
  tail call void %70(%"class.blink::DarkModeColorClassifier"* nonnull %64) #10
  br label %71

71:                                               ; preds = %66, %62
  %72 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %72, align 8
  store %"class.blink::DarkModeColorClassifier"* null, %"class.blink::DarkModeColorClassifier"** %72, align 8
  %74 = icmp eq %"class.blink::DarkModeColorClassifier"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::DarkModeColorClassifier"* %73 to void (%"class.blink::DarkModeColorClassifier"*)***
  %77 = load void (%"class.blink::DarkModeColorClassifier"*)**, void (%"class.blink::DarkModeColorClassifier"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %77, i64 1
  %79 = load void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %78, align 8
  tail call void %79(%"class.blink::DarkModeColorClassifier"* nonnull %73) #10
  br label %80

80:                                               ; preds = %71, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DarkModeFilter13ImmutableDataC2ERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeFilter::ImmutableData"* nocapture, %"struct.blink::DarkModeSettings"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkColorMatrix, align 4
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = bitcast %"struct.blink::DarkModeFilter::ImmutableData"* %0 to i8*
  %7 = bitcast %"struct.blink::DarkModeSettings"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 32, i1 false)
  %8 = getelementptr inbounds %"struct.blink::DarkModeFilter::ImmutableData", %"struct.blink::DarkModeFilter::ImmutableData"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %10 = getelementptr inbounds %"struct.blink::DarkModeFilter::ImmutableData", %"struct.blink::DarkModeFilter::ImmutableData"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  %12 = getelementptr inbounds %"struct.blink::DarkModeFilter::ImmutableData", %"struct.blink::DarkModeFilter::ImmutableData"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::unique_ptr.1"* %12 to i64*
  %14 = getelementptr inbounds %"struct.blink::DarkModeFilter::ImmutableData", %"struct.blink::DarkModeFilter::ImmutableData"* %0, i64 0, i32 4
  %15 = bitcast %"class.std::__1::unique_ptr.7"* %14 to i64*
  %16 = getelementptr inbounds %"struct.blink::DarkModeFilter::ImmutableData", %"struct.blink::DarkModeFilter::ImmutableData"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %16, i64 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 40, i1 false)
  %19 = tail call %"class.blink::DarkModeColorFilter"* @_ZN5blink19DarkModeColorFilter12FromSettingsERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32) %1) #10
  %20 = ptrtoint %"class.blink::DarkModeColorFilter"* %19 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %21, align 8
  store i64 %20, i64* %15, align 8
  %23 = icmp eq %"class.blink::DarkModeColorFilter"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::DarkModeColorFilter"* %22 to void (%"class.blink::DarkModeColorFilter"*)***
  %26 = load void (%"class.blink::DarkModeColorFilter"*)**, void (%"class.blink::DarkModeColorFilter"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::DarkModeColorFilter"*)*, void (%"class.blink::DarkModeColorFilter"*)** %26, i64 1
  %28 = load void (%"class.blink::DarkModeColorFilter"*)*, void (%"class.blink::DarkModeColorFilter"*)** %27, align 8
  tail call void %28(%"class.blink::DarkModeColorFilter"* nonnull %22) #10
  %29 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %21, align 8
  br label %30

30:                                               ; preds = %24, %2
  %31 = phi %"class.blink::DarkModeColorFilter"* [ %29, %24 ], [ %19, %2 ]
  %32 = icmp eq %"class.blink::DarkModeColorFilter"* %31, null
  br i1 %32, label %148, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.blink::DarkModeSettings", %"struct.blink::DarkModeSettings"* %1, i64 0, i32 3
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %35, 0.000000e+00
  br i1 %36, label %37, label %81

37:                                               ; preds = %33
  %38 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  %39 = bitcast %class.SkColorMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %39) #10, !noalias !3
  %40 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 0
  store float 1.000000e+00, float* %40, align 4, !noalias !3
  %41 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 1
  %42 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 6
  %43 = bitcast float* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 20, i1 false) #10, !noalias !3
  store float 1.000000e+00, float* %42, align 4, !noalias !3
  %44 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 7
  %45 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 12
  %46 = bitcast float* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 20, i1 false) #10, !noalias !3
  store float 1.000000e+00, float* %45, align 4, !noalias !3
  %47 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 13
  %48 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 18
  %49 = bitcast float* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 20, i1 false) #10, !noalias !3
  store float 1.000000e+00, float* %48, align 4, !noalias !3
  %50 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %3, i64 0, i32 0, i32 0, i64 19
  store float 0.000000e+00, float* %50, align 4, !noalias !3
  %51 = fsub float 1.000000e+00, %35
  call void @_ZN13SkColorMatrix13setSaturationEf(%class.SkColorMatrix* nonnull %3, float %51) #10, !noalias !3
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp* nonnull sret %4, %class.SkColorMatrix* nonnull dereferenceable(80) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %39) #10, !noalias !3
  %52 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %53 = bitcast %class.sk_sp* %4 to i64*
  %54 = load i64, i64* %53, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %52, align 8
  %55 = load %class.SkColorFilter*, %class.SkColorFilter** %17, align 8
  %56 = bitcast %class.sk_sp* %16 to i64*
  store i64 %54, i64* %56, align 8
  %57 = icmp eq %class.SkColorFilter* %55, null
  br i1 %57, label %116, label %58

58:                                               ; preds = %37
  %59 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkColorFilter* %55 to %class.SkRefCntBase*
  %64 = bitcast %class.SkColorFilter* %55 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #10
  br label %68

68:                                               ; preds = %58, %62
  %69 = load %class.SkColorFilter*, %class.SkColorFilter** %52, align 8
  %70 = icmp eq %class.SkColorFilter* %69, null
  br i1 %70, label %116, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %116

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorFilter* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkColorFilter* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #10
  br label %116

81:                                               ; preds = %33
  %82 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  %83 = bitcast %"class.blink::DarkModeColorFilter"* %31 to void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)***
  %84 = load void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)**, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)** %84, i64 3
  %86 = load void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)** %85, align 8
  call void %86(%class.sk_sp* nonnull sret %5, %"class.blink::DarkModeColorFilter"* nonnull %31) #10
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %5 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %87, align 8
  %90 = load %class.SkColorFilter*, %class.SkColorFilter** %17, align 8
  %91 = bitcast %class.sk_sp* %16 to i64*
  store i64 %89, i64* %91, align 8
  %92 = icmp eq %class.SkColorFilter* %90, null
  br i1 %92, label %116, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %90, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorFilter* %90 to %class.SkRefCntBase*
  %99 = bitcast %class.SkColorFilter* %90 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #10
  br label %103

103:                                              ; preds = %93, %97
  %104 = load %class.SkColorFilter*, %class.SkColorFilter** %87, align 8
  %105 = icmp eq %class.SkColorFilter* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %104, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorFilter* %104 to %class.SkRefCntBase*
  %112 = bitcast %class.SkColorFilter* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #10
  br label %116

116:                                              ; preds = %110, %106, %103, %81, %75, %71, %68, %37
  %117 = phi i8* [ %38, %37 ], [ %38, %68 ], [ %38, %71 ], [ %38, %75 ], [ %82, %81 ], [ %82, %103 ], [ %82, %106 ], [ %82, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #10
  %118 = call %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier23MakeTextColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32) %1) #10
  %119 = ptrtoint %"class.blink::DarkModeColorClassifier"* %118 to i64
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %120, align 8
  store i64 %119, i64* %9, align 8
  %122 = icmp eq %"class.blink::DarkModeColorClassifier"* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %116
  %124 = bitcast %"class.blink::DarkModeColorClassifier"* %121 to void (%"class.blink::DarkModeColorClassifier"*)***
  %125 = load void (%"class.blink::DarkModeColorClassifier"*)**, void (%"class.blink::DarkModeColorClassifier"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %125, i64 1
  %127 = load void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %126, align 8
  call void %127(%"class.blink::DarkModeColorClassifier"* nonnull %121) #10
  br label %128

128:                                              ; preds = %123, %116
  %129 = call %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier29MakeBackgroundColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32) %1) #10
  %130 = ptrtoint %"class.blink::DarkModeColorClassifier"* %129 to i64
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %131, align 8
  store i64 %130, i64* %11, align 8
  %133 = icmp eq %"class.blink::DarkModeColorClassifier"* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %128
  %135 = bitcast %"class.blink::DarkModeColorClassifier"* %132 to void (%"class.blink::DarkModeColorClassifier"*)***
  %136 = load void (%"class.blink::DarkModeColorClassifier"*)**, void (%"class.blink::DarkModeColorClassifier"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %136, i64 1
  %138 = load void (%"class.blink::DarkModeColorClassifier"*)*, void (%"class.blink::DarkModeColorClassifier"*)** %137, align 8
  call void %138(%"class.blink::DarkModeColorClassifier"* nonnull %132) #10
  br label %139

139:                                              ; preds = %134, %128
  %140 = call i8* @_Znwm(i64 1) #9
  %141 = bitcast i8* %140 to %"class.blink::DarkModeImageClassifier"*
  call void @_ZN5blink23DarkModeImageClassifierC1Ev(%"class.blink::DarkModeImageClassifier"* nonnull %141) #10
  %142 = ptrtoint i8* %140 to i64
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %12, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::DarkModeImageClassifier"*, %"class.blink::DarkModeImageClassifier"** %143, align 8
  store i64 %142, i64* %13, align 8
  %145 = icmp eq %"class.blink::DarkModeImageClassifier"* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %139
  call void @_ZN5blink23DarkModeImageClassifierD1Ev(%"class.blink::DarkModeImageClassifier"* nonnull %144) #10
  %147 = getelementptr inbounds %"class.blink::DarkModeImageClassifier", %"class.blink::DarkModeImageClassifier"* %144, i64 0, i32 0
  call void @_ZdlPv(i8* %147) #9
  br label %148

148:                                              ; preds = %30, %139, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::DarkModeColorFilter"* @_ZN5blink19DarkModeColorFilter12FromSettingsERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier23MakeTextColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32)) local_unnamed_addr #3

declare %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier29MakeBackgroundColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14DarkModeFilter19InvertColorIfNeededEjNS0_11ElementRoleE(%"class.blink::DarkModeFilter"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %4, align 8
  %6 = icmp eq %"class.blink::DarkModeColorFilter"* %5, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i32 [ %13, %11 ], [ %2, %7 ]
  switch i32 %15, label %48 [
    i32 0, label %34
    i32 1, label %16
    i32 2, label %25
  ]

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %17, align 8
  %19 = bitcast %"class.blink::DarkModeColorClassifier"* %18 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %20 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %20, i64 2
  %22 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %21, align 8
  %23 = tail call zeroext i8 %22(%"class.blink::DarkModeColorClassifier"* %18, i32 %1) #10
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %43, label %48

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %26, align 8
  %28 = bitcast %"class.blink::DarkModeColorClassifier"* %27 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %29 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %29, i64 2
  %31 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %30, align 8
  %32 = tail call zeroext i8 %31(%"class.blink::DarkModeColorClassifier"* %27, i32 %1) #10
  %33 = icmp eq i8 %32, 1
  br i1 %33, label %43, label %48

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %35, align 8
  %37 = bitcast %"class.blink::DarkModeColorClassifier"* %36 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %38 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %38, i64 2
  %40 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %39, align 8
  %41 = tail call zeroext i8 %40(%"class.blink::DarkModeColorClassifier"* %36, i32 %1) #10
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %43, label %48

43:                                               ; preds = %16, %25, %34
  %44 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"class.blink::DarkModeInvertedColorCache"*, %"class.blink::DarkModeInvertedColorCache"** %44, align 8
  %46 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %4, align 8
  %47 = tail call i32 @_ZN5blink26DarkModeInvertedColorCache16GetInvertedColorEPNS_19DarkModeColorFilterEj(%"class.blink::DarkModeInvertedColorCache"* %45, %"class.blink::DarkModeColorFilter"* %46, i32 %1)
  br label %48

48:                                               ; preds = %3, %14, %16, %25, %34, %43
  %49 = phi i32 [ %47, %43 ], [ %1, %3 ], [ %1, %34 ], [ %1, %25 ], [ %1, %16 ], [ %1, %14 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14DarkModeFilter18ShouldApplyToColorEjNS0_11ElementRoleE(%"class.blink::DarkModeFilter"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %2, label %31 [
    i32 0, label %4
    i32 1, label %13
    i32 2, label %22
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %5, align 8
  %7 = bitcast %"class.blink::DarkModeColorClassifier"* %6 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %8 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %8, i64 2
  %10 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %9, align 8
  %11 = tail call zeroext i8 %10(%"class.blink::DarkModeColorClassifier"* %6, i32 %1) #10
  %12 = icmp eq i8 %11, 1
  br label %31

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %14, align 8
  %16 = bitcast %"class.blink::DarkModeColorClassifier"* %15 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %17 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %17, i64 2
  %19 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %18, align 8
  %20 = tail call zeroext i8 %19(%"class.blink::DarkModeColorClassifier"* %15, i32 %1) #10
  %21 = icmp eq i8 %20, 1
  br label %31

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %23, align 8
  %25 = bitcast %"class.blink::DarkModeColorClassifier"* %24 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %26 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %26, i64 2
  %28 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %27, align 8
  %29 = tail call zeroext i8 %28(%"class.blink::DarkModeColorClassifier"* %24, i32 %1) #10
  %30 = icmp eq i8 %29, 1
  br label %31

31:                                               ; preds = %3, %22, %13, %4
  %32 = phi i1 [ %30, %22 ], [ %21, %13 ], [ %12, %4 ], [ false, %3 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink26DarkModeInvertedColorCache16GetInvertedColorEPNS_19DarkModeColorFilterEj(%"class.blink::DarkModeInvertedColorCache"*, %"class.blink::DarkModeColorFilter"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.WTF::IntegralWithAllKeys"*
  %6 = alloca i32, align 4
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast i64* %4 to i32*
  store i64 -6148915417085990230, i64* %4, align 8
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %123, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  %17 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  br i1 %16, label %77, label %19

19:                                               ; preds = %13
  %20 = add i32 %18, -1
  %21 = zext i32 %20 to i64
  %22 = zext i32 %2 to i64
  %23 = mul i64 %22, 5146158508761418231
  %24 = add i64 %23, -682818954288075998
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %20, %26
  %28 = zext i32 %27 to i64
  %29 = xor i32 %26, -1
  %30 = lshr i64 %24, 55
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, %29
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %28
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %2
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %28, i32 0, i32 1
  %48 = load i8, i8* %47, align 4
  %49 = icmp eq i8 %48, 1
  %50 = and i1 %46, %49
  br i1 %50, label %72, label %51

51:                                               ; preds = %19, %59
  %52 = phi i8 [ %69, %59 ], [ %48, %19 ]
  %53 = phi i32 [ %66, %59 ], [ %45, %19 ]
  %54 = phi i64 [ %63, %59 ], [ %28, %19 ]
  %55 = phi i64 [ %61, %59 ], [ 0, %19 ]
  %56 = icmp eq i32 %53, 0
  %57 = icmp eq i8 %52, 0
  %58 = and i1 %57, %56
  br i1 %58, label %77, label %59

59:                                               ; preds = %51
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %42, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %21
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %63, i32 0, i32 1
  %69 = load i8, i8* %68, align 4
  %70 = icmp eq i8 %69, 1
  %71 = and i1 %67, %70
  br i1 %71, label %72, label %51

72:                                               ; preds = %59, %19
  %73 = phi %"struct.WTF::KeyValuePair"* [ %43, %19 ], [ %64, %59 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = zext i32 %18 to i64
  br label %80

77:                                               ; preds = %51, %72, %13
  %78 = zext i32 %18 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %78
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi i64 [ %76, %75 ], [ %78, %77 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %73, %75 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %81
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %82, %83
  br i1 %84, label %123, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, i64 0, i32 2
  %90 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %89, align 8
  %91 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %90, null
  %92 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, i64 0, i32 3
  %93 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::DoublyLinkedList"* %88 to i64*
  %96 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %90, i64 0, i32 3
  %97 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %96 to i64*
  %98 = select i1 %91, i64* %95, i64* %97
  store i64 %94, i64* %98, align 8
  %99 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %92, align 8
  %100 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %99, null
  %101 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %89 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 1, i32 1
  %104 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %99, i64 0, i32 2
  %105 = select i1 %100, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %103, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %104
  %106 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %105 to i64*
  store i64 %102, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %88, i64 0, i32 0
  %108 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %107, align 8
  %109 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %108, null
  br i1 %109, label %110, label %113

110:                                              ; preds = %85
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %107, align 8
  %111 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %0, i64 0, i32 0, i32 1, i32 1
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %111, align 8
  %112 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #10
  br label %117

113:                                              ; preds = %85
  %114 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %108, i64 0, i32 2
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %114, align 8
  %115 = bitcast %"class.WTF::DoublyLinkedList"* %88 to i64*
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %93, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %89, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %107, align 8
  br label %117

117:                                              ; preds = %110, %113
  %118 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %86, align 8
  %119 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %118, i64 0, i32 1
  %120 = icmp eq i32* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = load i32, i32* %119, align 4
  br label %130

123:                                              ; preds = %80, %3, %117
  %124 = bitcast %"class.blink::DarkModeColorFilter"* %1 to i32 (%"class.blink::DarkModeColorFilter"*, i32)***
  %125 = load i32 (%"class.blink::DarkModeColorFilter"*, i32)**, i32 (%"class.blink::DarkModeColorFilter"*, i32)*** %124, align 8
  %126 = getelementptr inbounds i32 (%"class.blink::DarkModeColorFilter"*, i32)*, i32 (%"class.blink::DarkModeColorFilter"*, i32)** %125, i64 2
  %127 = load i32 (%"class.blink::DarkModeColorFilter"*, i32)*, i32 (%"class.blink::DarkModeColorFilter"*, i32)** %126, align 8
  %128 = tail call i32 %127(%"class.blink::DarkModeColorFilter"* %1, i32 %2) #10
  %129 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #10
  store i32 %128, i32* %6, align 4
  call void @_ZN3WTF8LruCacheINS_19IntegralWithAllKeysIjEEjNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE3PutERKS2_Oj(%"class.WTF::LruCache"* %9, %"struct.WTF::IntegralWithAllKeys"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #10
  br label %130

130:                                              ; preds = %123, %121
  %131 = phi i32 [ %122, %121 ], [ %128, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret i32 %131
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink14DarkModeFilter25AnalyzeShouldApplyToImageERK7SkIRectS3_(%"class.blink::DarkModeFilter"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 0, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %7 [
    i32 1, label %36
    i32 0, label %6
  ]

6:                                                ; preds = %3
  br label %36

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sub i32 %9, %11
  %13 = icmp slt i32 %12, 9
  br i1 %13, label %36, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %16, %18
  %20 = icmp slt i32 %19, 9
  br i1 %20, label %36, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %23, %25
  %27 = icmp slt i32 %26, 101
  br i1 %27, label %28, label %36

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 %30, %32
  %34 = icmp sgt i32 %33, 100
  %35 = select i1 %34, i8 0, i8 2
  br label %36

36:                                               ; preds = %21, %28, %7, %14, %3, %6
  %37 = phi i8 [ 1, %6 ], [ 0, %3 ], [ 2, %14 ], [ 2, %7 ], [ 0, %21 ], [ %35, %28 ]
  ret i8 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14DarkModeFilter12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp* noalias nocapture sret, %"class.blink::DarkModeFilter"* nocapture readonly, %class.SkPixmap* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DarkModeImageClassifier"*, %"class.blink::DarkModeImageClassifier"** %5, align 8
  %7 = tail call zeroext i8 @_ZNK5blink23DarkModeImageClassifier8ClassifyERK8SkPixmapRK7SkIRect(%"class.blink::DarkModeImageClassifier"* %6, %class.SkPixmap* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %3) #10
  %8 = icmp eq i8 %7, 1
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  br i1 %8, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 5, i32 0
  %12 = load %class.SkColorFilter*, %class.SkColorFilter** %11, align 8
  %13 = icmp eq %class.SkColorFilter* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %4, %14, %10
  %18 = phi %class.SkColorFilter* [ null, %10 ], [ %12, %14 ], [ null, %4 ]
  store %class.SkColorFilter* %18, %class.SkColorFilter** %9, align 8
  ret void
}

declare zeroext i8 @_ZNK5blink23DarkModeImageClassifier8ClassifyERK8SkPixmapRK7SkIRect(%"class.blink::DarkModeImageClassifier"*, %class.SkPixmap* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink14DarkModeFilter14GetImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::DarkModeFilter"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 5, i32 0
  %5 = load %class.SkColorFilter*, %class.SkColorFilter** %4, align 8
  %6 = icmp eq %class.SkColorFilter* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkColorFilter* %5, %class.SkColorFilter** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DarkModeFilter20ApplyToFlagsIfNeededERKN2cc10PaintFlagsENS0_11ElementRoleE(%"class.absl::optional.78"* noalias sret, %"class.blink::DarkModeFilter"* nocapture readonly, %"class.cc::PaintFlags"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %7, align 8
  %9 = icmp eq %"class.blink::DarkModeColorFilter"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %union.anon.82* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 72, i1 false) #10
  br label %109

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !6
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i32 [ %20, %18 ], [ %3, %14 ]
  %23 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink14DarkModeFilter20ApplyToFlagsIfNeededERKN2cc10PaintFlagsENS0_11ElementRoleE.dark_mode_flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %5, %"class.cc::PaintFlags"* dereferenceable(72) %2) #10
  %24 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 1, i32 0
  %25 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %24, align 8
  %26 = icmp eq %"class.cc::PaintShader"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %25, i64 0, i32 1
  %29 = load i8, i8* %28, align 4
  %30 = or i8 %29, 1
  %31 = icmp eq i8 %30, 7
  br i1 %31, label %106, label %32

32:                                               ; preds = %27
  %33 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %7, align 8
  %34 = bitcast %"class.blink::DarkModeColorFilter"* %33 to void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)***
  %35 = load void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)**, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)** %35, i64 3
  %37 = load void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)*, void (%class.sk_sp*, %"class.blink::DarkModeColorFilter"*)** %36, align 8
  call void %37(%class.sk_sp* nonnull sret %6, %"class.blink::DarkModeColorFilter"* %33) #10
  %38 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 3
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %40 = bitcast %class.sk_sp* %6 to i64*
  %41 = load i64, i64* %40, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %39, align 8
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %38, i64 0, i32 0
  %43 = load %class.SkColorFilter*, %class.SkColorFilter** %42, align 8
  %44 = bitcast %class.sk_sp* %38 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq %class.SkColorFilter* %43, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorFilter* %43 to %class.SkRefCntBase*
  %52 = bitcast %class.SkColorFilter* %43 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #10
  br label %56

56:                                               ; preds = %32, %46, %50
  %57 = load %class.SkColorFilter*, %class.SkColorFilter** %39, align 8
  %58 = icmp eq %class.SkColorFilter* %57, null
  br i1 %58, label %106, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %106

63:                                               ; preds = %59
  %64 = bitcast %class.SkColorFilter* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkColorFilter* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #10
  br label %106

69:                                               ; preds = %21
  %70 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 6
  %71 = load i32, i32* %70, align 8
  switch i32 %22, label %106 [
    i32 0, label %90
    i32 1, label %72
    i32 2, label %81
  ]

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %73, align 8
  %75 = bitcast %"class.blink::DarkModeColorClassifier"* %74 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %76 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %75, align 8
  %77 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %76, i64 2
  %78 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %77, align 8
  %79 = call zeroext i8 %78(%"class.blink::DarkModeColorClassifier"* %74, i32 %71) #10
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %99, label %106

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %83 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %82, align 8
  %84 = bitcast %"class.blink::DarkModeColorClassifier"* %83 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %85 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %84, align 8
  %86 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %85, i64 2
  %87 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %86, align 8
  %88 = call zeroext i8 %87(%"class.blink::DarkModeColorClassifier"* %83, i32 %71) #10
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %99, label %106

90:                                               ; preds = %69
  %91 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"class.blink::DarkModeColorClassifier"*, %"class.blink::DarkModeColorClassifier"** %91, align 8
  %93 = bitcast %"class.blink::DarkModeColorClassifier"* %92 to i8 (%"class.blink::DarkModeColorClassifier"*, i32)***
  %94 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)**, i8 (%"class.blink::DarkModeColorClassifier"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %94, i64 2
  %96 = load i8 (%"class.blink::DarkModeColorClassifier"*, i32)*, i8 (%"class.blink::DarkModeColorClassifier"*, i32)** %95, align 8
  %97 = call zeroext i8 %96(%"class.blink::DarkModeColorClassifier"* %92, i32 %71) #10
  %98 = icmp eq i8 %97, 1
  br i1 %98, label %99, label %106

99:                                               ; preds = %72, %81, %90
  %100 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %"class.blink::DarkModeInvertedColorCache"*, %"class.blink::DarkModeInvertedColorCache"** %100, align 8
  %102 = load %"class.blink::DarkModeColorFilter"*, %"class.blink::DarkModeColorFilter"** %7, align 8
  %103 = load i32, i32* %70, align 8
  %104 = call i32 @_ZN5blink26DarkModeInvertedColorCache16GetInvertedColorEPNS_19DarkModeColorFilterEj(%"class.blink::DarkModeInvertedColorCache"* %101, %"class.blink::DarkModeColorFilter"* %102, i32 %103)
  %105 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  store i32 %104, i32* %105, align 8
  br label %106

106:                                              ; preds = %69, %72, %81, %63, %59, %56, %27, %90, %99
  %107 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %107, align 8, !alias.scope !7
  %108 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"* %108, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %5) #10
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #10
  br label %109

109:                                              ; preds = %106, %10
  ret void
}

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink14DarkModeFilter35GetInvertedColorCacheSizeForTestingEv(%"class.blink::DarkModeFilter"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DarkModeInvertedColorCache"*, %"class.blink::DarkModeInvertedColorCache"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DarkModeInvertedColorCache", %"class.blink::DarkModeInvertedColorCache"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ScopedDarkModeElementRoleOverrideC2EPNS_15GraphicsContextENS_14DarkModeFilter11ElementRoleE(%"class.blink::ScopedDarkModeElementRoleOverride"* nocapture, %"class.blink::GraphicsContext"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScopedDarkModeElementRoleOverride", %"class.blink::ScopedDarkModeElementRoleOverride"* %0, i64 0, i32 0
  store %"class.blink::GraphicsContext"* %1, %"class.blink::GraphicsContext"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ScopedDarkModeElementRoleOverride", %"class.blink::ScopedDarkModeElementRoleOverride"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = tail call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %1) #10
  %8 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast %"class.absl::optional"* %5 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  %12 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %4, align 8
  %13 = tail call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %12) #10
  %14 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast i8* %14 to i64*
  %16 = zext i32 %2 to i64
  %17 = shl nuw i64 %16, 32
  %18 = or i64 %17, 1
  store i64 %18, i64* %15, align 8
  ret void
}

declare %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ScopedDarkModeElementRoleOverrideD2Ev(%"class.blink::ScopedDarkModeElementRoleOverride"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScopedDarkModeElementRoleOverride", %"class.blink::ScopedDarkModeElementRoleOverride"* %0, i64 0, i32 0
  %3 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %2, align 8
  %4 = tail call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %3) #10
  %5 = getelementptr inbounds %"class.blink::DarkModeFilter", %"class.blink::DarkModeFilter"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ScopedDarkModeElementRoleOverride", %"class.blink::ScopedDarkModeElementRoleOverride"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %5 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN13SkColorMatrix13setSaturationEf(%class.SkColorMatrix*, float) local_unnamed_addr #3

declare void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp* sret, %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8LruCacheINS_19IntegralWithAllKeysIjEEjNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE3PutERKS2_Oj(%"class.WTF::LruCache"*, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.127", align 8
  %5 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %5, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8) %1) #10
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %55, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %16, align 8
  %18 = load i32, i32* %2, align 4
  %19 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %17, i64 0, i32 1
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %21 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %16, align 8
  %22 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %21, i64 0, i32 2
  %23 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %22, align 8
  %24 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %23, null
  %25 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %21, i64 0, i32 3
  %26 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::DoublyLinkedList"* %20 to i64*
  %29 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %23, i64 0, i32 3
  %30 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %29 to i64*
  %31 = select i1 %24, i64* %28, i64* %30
  store i64 %27, i64* %31, align 8
  %32 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %25, align 8
  %33 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %32, null
  %34 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %22 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %32, i64 0, i32 2
  %37 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %38 = select i1 %33, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %37, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %36
  %39 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %38 to i64*
  store i64 %35, i64* %39, align 8
  %40 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %16, align 8
  %41 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %20, i64 0, i32 0
  %42 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %41, align 8
  %43 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %15
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %41, align 8
  %45 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, i64 0, i32 2
  %47 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #10
  br label %92

48:                                               ; preds = %15
  %49 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %42, i64 0, i32 2
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %49, align 8
  %50 = bitcast %"class.WTF::DoublyLinkedList"* %20 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, i64 0, i32 3
  %53 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, i64 0, i32 2
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %54, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %40, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %41, align 8
  br label %92

55:                                               ; preds = %3
  %56 = bitcast %"class.std::__1::unique_ptr.127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = tail call noalias i8* @malloc(i64 32) #10
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = bitcast %"struct.WTF::IntegralWithAllKeys"* %1 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %58, i64 8
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %2, align 4
  store i32 %65, i32* %64, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #10
  %66 = bitcast %"class.std::__1::unique_ptr.127"* %4 to i8**
  store i8* %58, i8** %66, align 8
  %67 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKS2_SF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.127"* nonnull dereferenceable(8) %4) #10
  %68 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %67, 0
  %69 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %69, i64 0, i32 0
  %73 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %72, align 8
  %74 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %72, align 8
  %76 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, i64 0, i32 2
  %78 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #10
  br label %86

79:                                               ; preds = %55
  %80 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %73, i64 0, i32 2
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %80, align 8
  %81 = bitcast %"class.WTF::DoublyLinkedList"* %69 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, i64 0, i32 3
  %84 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, i64 0, i32 2
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %85, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %71, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %72, align 8
  br label %86

86:                                               ; preds = %75, %79
  %87 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %57, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %57, align 8
  %88 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %87 to i8*
  call void @free(i8* %90) #10
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %92

92:                                               ; preds = %48, %44, %91
  %93 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %97, %95
  br i1 %98, label %99, label %157

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %101 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %100, align 8
  %102 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %101, i64 0, i32 2
  %103 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %102, align 8
  %104 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %103, null
  %105 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %101, i64 0, i32 3
  %106 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %109 = bitcast %"class.WTF::DoublyLinkedList"* %108 to i64*
  %110 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %103, i64 0, i32 3
  %111 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %110 to i64*
  %112 = select i1 %104, i64* %109, i64* %111
  store i64 %107, i64* %112, align 8
  %113 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %105, align 8
  %114 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %113, null
  %115 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %102 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %113, i64 0, i32 2
  %118 = select i1 %114, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %100, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %117
  %119 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %118 to i64*
  store i64 %116, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey", %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %101, i64 0, i32 0
  %121 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %5, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8) %120) #10
  %122 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %121, 0
  %123 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %124 = load i32, i32* %10, align 8
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 %125
  %127 = icmp eq %"struct.WTF::KeyValuePair"* %126, %122
  br i1 %127, label %157, label %128

128:                                              ; preds = %99
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %129, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %129, align 8
  %131 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %130 to i8*
  call void @free(i8* %133) #10
  br label %134

134:                                              ; preds = %132, %128
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 0
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0, i32 1
  store i8 2, i8* %136, align 4
  %137 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = add i32 %138, 1
  %140 = and i32 %139, 2147483647
  %141 = and i32 %138, -2147483648
  %142 = or i32 %140, %141
  store i32 %142, i32* %137, align 8
  %143 = load i32, i32* %93, align 4
  %144 = add i32 %143, -1
  store i32 %144, i32* %93, align 4
  %145 = mul i32 %144, 6
  %146 = load i32, i32* %10, align 8
  %147 = icmp ult i32 %145, %146
  %148 = icmp ugt i32 %146, 8
  %149 = and i1 %147, %148
  br i1 %149, label %150, label %157

150:                                              ; preds = %134
  %151 = lshr i32 %146, 1
  %152 = zext i32 %151 to i64
  %153 = shl nuw nsw i64 %152, 4
  %154 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %153, i8* getelementptr inbounds ([545 x i8], [545 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_19IntegralWithAllKeysIjEENSt3__110unique_ptrINS_8LruCacheIS3_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %154, i8 0, i64 %153, i1 false) #10
  %155 = bitcast i8* %154 to %"struct.WTF::KeyValuePair"*
  %156 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable"* %5, %"struct.WTF::KeyValuePair"* %155, i32 %151, %"struct.WTF::KeyValuePair"* null) #10
  br label %157

157:                                              ; preds = %150, %134, %99, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"*, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::IntegralWithAllKeys", %"struct.WTF::IntegralWithAllKeys"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.WTF::IntegralWithAllKeys", %"struct.WTF::IntegralWithAllKeys"* %1, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i32 %12 to i64
  %16 = mul i64 %15, 5146158508761418231
  %17 = zext i8 %14 to i64
  %18 = mul i64 %17, -682818954288075998
  %19 = add i64 %18, %16
  %20 = lshr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %22 = and i32 %9, %21
  %23 = zext i32 %22 to i64
  %24 = xor i32 %21, -1
  %25 = lshr i64 %19, 55
  %26 = trunc i64 %25 to i32
  %27 = add i32 %26, %24
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %23
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %12
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %23, i32 0, i32 1
  %43 = load i8, i8* %42, align 4
  %44 = icmp eq i8 %43, %14
  %45 = and i1 %41, %44
  br i1 %45, label %67, label %46

46:                                               ; preds = %8, %54
  %47 = phi i8 [ %64, %54 ], [ %43, %8 ]
  %48 = phi i32 [ %61, %54 ], [ %40, %8 ]
  %49 = phi i64 [ %58, %54 ], [ %23, %8 ]
  %50 = phi i64 [ %56, %54 ], [ 0, %8 ]
  %51 = icmp eq i32 %48, 0
  %52 = icmp eq i8 %47, 0
  %53 = and i1 %52, %51
  br i1 %53, label %70, label %54

54:                                               ; preds = %46
  %55 = icmp eq i64 %50, 0
  %56 = select i1 %55, i64 %37, i64 %50
  %57 = add i64 %56, %49
  %58 = and i64 %57, %10
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %58, i32 0, i32 1
  %64 = load i8, i8* %63, align 4
  %65 = icmp eq i8 %64, %14
  %66 = and i1 %62, %65
  br i1 %66, label %67, label %46

67:                                               ; preds = %54, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %38, %8 ], [ %59, %54 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %46, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKS2_SF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.WTF::IntegralWithAllKeys"* dereferenceable(8), %"class.std::__1::unique_ptr.127"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::IntegralWithAllKeys", %"struct.WTF::IntegralWithAllKeys"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.WTF::IntegralWithAllKeys", %"struct.WTF::IntegralWithAllKeys"* %1, i64 0, i32 1
  %19 = load i8, i8* %18, align 4
  %20 = zext i32 %17 to i64
  %21 = mul i64 %20, 5146158508761418231
  %22 = zext i8 %19 to i64
  %23 = mul i64 %22, -682818954288075998
  %24 = add i64 %23, %21
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %14, %26
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %28, i32 0, i32 1
  %34 = load i8, i8* %33, align 4
  %35 = icmp eq i8 %34, 0
  %36 = and i1 %32, %35
  br i1 %36, label %79, label %37

37:                                               ; preds = %10
  %38 = xor i32 %26, -1
  %39 = lshr i64 %24, 55
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, %38
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %37, %62
  %53 = phi i32 [ %31, %37 ], [ %71, %62 ]
  %54 = phi i8 [ %34, %37 ], [ %74, %62 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %29, %37 ], [ %69, %62 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ null, %37 ], [ %64, %62 ]
  %57 = phi i64 [ %28, %37 ], [ %68, %62 ]
  %58 = phi i64 [ 0, %37 ], [ %66, %62 ]
  %59 = icmp eq i32 %53, %17
  %60 = icmp eq i8 %54, %19
  %61 = and i1 %59, %60
  br i1 %61, label %116, label %62

62:                                               ; preds = %52
  %63 = icmp eq i8 %54, 2
  %64 = select i1 %63, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %56
  %65 = icmp eq i64 %58, 0
  %66 = select i1 %65, i64 %51, i64 %58
  %67 = add i64 %66, %57
  %68 = and i64 %67, %15
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %68
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %68, i32 0, i32 1
  %74 = load i8, i8* %73, align 4
  %75 = icmp eq i8 %74, 0
  %76 = and i1 %72, %75
  br i1 %76, label %77, label %52

77:                                               ; preds = %62
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %64, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %10, %77
  %80 = phi %"struct.WTF::KeyValuePair"* [ %69, %77 ], [ %29, %10 ]
  %81 = bitcast %"struct.WTF::KeyValuePair"* %80 to i8*
  br label %90

82:                                               ; preds = %77
  %83 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #10
  %84 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, 2147483647
  %87 = and i32 %86, 2147483647
  %88 = and i32 %85, -2147483648
  %89 = or i32 %87, %88
  store i32 %89, i32* %84, align 8
  br label %90

90:                                               ; preds = %79, %82
  %91 = phi i8* [ %81, %79 ], [ %83, %82 ]
  %92 = phi %"struct.WTF::KeyValuePair"* [ %80, %79 ], [ %64, %82 ]
  %93 = bitcast %"struct.WTF::IntegralWithAllKeys"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 4 %93, i64 5, i1 false) #10
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %2, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr.127"* %2 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %95, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %94, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.127"* %94 to i64*
  store i64 %97, i64* %100, align 8
  %101 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %90
  %103 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %99 to i8*
  tail call void @free(i8* %103) #10
  br label %104

104:                                              ; preds = %90, %102
  %105 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %92)
  br label %116

116:                                              ; preds = %52, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %52 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %92, %104 ], [ %115, %114 ], [ %55, %52 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([545 x i8], [545 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_19IntegralWithAllKeysIjEENSt3__110unique_ptrINS_8LruCacheIS3_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS3_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_19IntegralWithAllKeysIjEENS_12KeyValuePairIS2_NSt3__110unique_ptrINS_8LruCacheIS2_jNS_23IntegralWithAllKeysHashIjEENS_10HashTraitsIS2_EEE21MappedListNodeWithKeyENS4_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %51

18:                                               ; preds = %162
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %163, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %166, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %164, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0, i32 1
  %34 = load i8, i8* %33, align 4
  %35 = icmp eq i8 %34, 2
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %37, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %37, align 8
  %39 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %38 to i8*
  tail call void @free(i8* %41) #10
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #10
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair"* %23

51:                                               ; preds = %13, %162
  %52 = phi i64 [ %17, %13 ], [ %163, %162 ]
  %53 = phi i32 [ %7, %13 ], [ %164, %162 ]
  %54 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %165, %162 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %166, %162 ]
  %56 = phi i32 [ 0, %13 ], [ %167, %162 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 0, i32 1
  %63 = load i8, i8* %62, align 4
  %64 = icmp eq i8 %63, 0
  %65 = and i1 %61, %64
  %66 = icmp eq i8 %63, 2
  %67 = or i1 %66, %65
  br i1 %67, label %162, label %68

68:                                               ; preds = %51
  %69 = zext i32 %60 to i64
  %70 = mul i64 %69, 5146158508761418231
  %71 = zext i8 %63 to i64
  %72 = mul i64 %71, -682818954288075998
  %73 = add i64 %72, %70
  %74 = lshr i64 %73, 32
  %75 = trunc i64 %74 to i32
  %76 = and i32 %14, %75
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %77, i32 0, i32 1
  %84 = load i8, i8* %83, align 4
  %85 = icmp eq i8 %84, 0
  %86 = and i1 %82, %85
  br i1 %86, label %105, label %87

87:                                               ; preds = %68
  %88 = xor i32 %75, -1
  %89 = lshr i64 %73, 55
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  br label %111

102:                                              ; preds = %122
  %103 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %104 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair"*
  br label %105

105:                                              ; preds = %102, %68
  %106 = phi i64 [ %103, %102 ], [ %79, %68 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %104, %102 ], [ null, %68 ]
  %108 = icmp eq %"struct.WTF::KeyValuePair"* %107, null
  %109 = ptrtoint %"struct.WTF::KeyValuePair"* %107 to i64
  %110 = select i1 %108, i64 %106, i64 %109
  br label %138

111:                                              ; preds = %122, %87
  %112 = phi i64 [ 0, %87 ], [ %124, %122 ]
  %113 = phi i8 [ %84, %87 ], [ %135, %122 ]
  %114 = phi i64 [ %79, %87 ], [ %130, %122 ]
  %115 = phi i64 [ %77, %87 ], [ %128, %122 ]
  %116 = phi i64 [ 0, %87 ], [ %126, %122 ]
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %115, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, %60
  %120 = icmp eq i8 %113, %63
  %121 = and i1 %120, %119
  br i1 %121, label %138, label %122

122:                                              ; preds = %111
  %123 = icmp eq i8 %113, 2
  %124 = select i1 %123, i64 %114, i64 %112
  %125 = icmp eq i64 %116, 0
  %126 = select i1 %125, i64 %101, i64 %116
  %127 = add i64 %126, %115
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %128, i32 0, i32 1
  %135 = load i8, i8* %134, align 4
  %136 = icmp eq i8 %135, 0
  %137 = and i1 %133, %136
  br i1 %137, label %102, label %111

138:                                              ; preds = %111, %105
  %139 = phi i64 [ %110, %105 ], [ %114, %111 ]
  %140 = inttoptr i64 %139 to %"struct.WTF::KeyValuePair"*
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"*, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %141, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %141, align 8
  %143 = icmp eq %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* %142 to i8*
  tail call void @free(i8* %145) #10
  br label %146

146:                                              ; preds = %138, %144
  %147 = bitcast %"struct.WTF::KeyValuePair"* %58 to i64*
  %148 = inttoptr i64 %139 to i64*
  %149 = load i64, i64* %147, align 8
  store i64 %149, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 0, i32 1
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = bitcast %"class.std::__1::unique_ptr.127"* %151 to i64*
  %154 = load i64, i64* %153, align 8
  store %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<WTF::IntegralWithAllKeys<unsigned int>, unsigned int, WTF::IntegralWithAllKeysHash<unsigned int>, WTF::HashTraits<WTF::IntegralWithAllKeys<unsigned int> > >::MappedListNodeWithKey"** %152, align 8
  %155 = bitcast %"class.std::__1::unique_ptr.127"* %150 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %156, i64 %57
  %158 = icmp eq %"struct.WTF::KeyValuePair"* %157, %3
  %159 = select i1 %158, %"struct.WTF::KeyValuePair"* %140, %"struct.WTF::KeyValuePair"* %55
  %160 = load i32, i32* %6, align 8
  %161 = ptrtoint %"struct.WTF::KeyValuePair"* %156 to i64
  br label %162

162:                                              ; preds = %51, %146
  %163 = phi i64 [ %52, %51 ], [ %161, %146 ]
  %164 = phi i32 [ %53, %51 ], [ %160, %146 ]
  %165 = phi %"struct.WTF::KeyValuePair"* [ %54, %51 ], [ %156, %146 ]
  %166 = phi %"struct.WTF::KeyValuePair"* [ %55, %51 ], [ %159, %146 ]
  %167 = add i32 %56, 1
  %168 = icmp eq i32 %167, %164
  br i1 %168, label %18, label %51
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink23DarkModeImageClassifierD1Ev(%"class.blink::DarkModeImageClassifier"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN5blink23DarkModeImageClassifierC1Ev(%"class.blink::DarkModeImageClassifier"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_119MakeGrayscaleFilterEf: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_119MakeGrayscaleFilterEf"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl13make_optionalIN2cc10PaintFlagsEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!9 = distinct !{!9, !"_ZN4absl13make_optionalIN2cc10PaintFlagsEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
