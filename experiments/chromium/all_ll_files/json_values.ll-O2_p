; ModuleID = '../../third_party/blink/renderer/platform/json/json_values.cc'
source_filename = "../../third_party/blink/renderer/platform/json/json_values.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.22" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.36" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [16 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.blink::JSONBasicValue" = type { %"class.blink::JSONValue.base", %union.anon.7 }
%union.anon.7 = type { double }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::JSONString" = type { %"class.blink::JSONValue.base", %"class.WTF::String" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::JSONObject"* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::JSONArray"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::JSONBasicValue"* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::JSONString"* }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE = comdat any

$_ZN5blink10JSONObject3SetIS0_EEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE = comdat any

$_ZN5blink10JSONObject3SetINS_9JSONArrayEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN5blink9JSONValueD0Ev = comdat any

$_ZN5blink9JSONValueD2Ev = comdat any

$_ZN5blink14JSONBasicValueD0Ev = comdat any

$_ZN5blink10JSONStringD2Ev = comdat any

$_ZN5blink10JSONStringD0Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_10JSONObjectENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_9JSONArrayENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_14JSONBasicValueENS5_ISB_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONStringENS5_ISB_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONObjectENS5_ISB_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_9JSONArrayENS5_ISB_EEEEEEvOT_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink15kJSONNullStringE = hidden constant [5 x i8] c"null\00", align 1
@_ZN5blink15kJSONTrueStringE = hidden constant [5 x i8] c"true\00", align 1
@_ZN5blink16kJSONFalseStringE = hidden constant [6 x i8] c"false\00", align 1
@_ZTVN5blink10JSONObjectE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JSONObject"*)* @_ZN5blink10JSONObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::JSONObject"*)* @_ZN5blink10JSONObjectD0Ev to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i8*)* @_ZNK5blink9JSONValue9AsBooleanEPb to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, double*)* @_ZNK5blink9JSONValue8AsDoubleEPd to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i32*)* @_ZNK5blink9JSONValue9AsIntegerEPi to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)* @_ZNK5blink9JSONValue8AsStringEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::JSONObject"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink10JSONObject9WriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.blink::JSONValue"* (%"class.blink::JSONObject"*)* @_ZNK5blink10JSONObject5CloneEv to i8*), i8* bitcast (void (%"class.blink::JSONObject"*, %"class.WTF::StringBuilder"*, i32)* @_ZNK5blink10JSONObject23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi to i8*)] }, align 8
@.str = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/json/json_values.cc\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"it != data_.end()\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVN5blink9JSONArrayE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JSONArray"*)* @_ZN5blink9JSONArrayD2Ev to i8*), i8* bitcast (void (%"class.blink::JSONArray"*)* @_ZN5blink9JSONArrayD0Ev to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i8*)* @_ZNK5blink9JSONValue9AsBooleanEPb to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, double*)* @_ZNK5blink9JSONValue8AsDoubleEPd to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i32*)* @_ZNK5blink9JSONValue9AsIntegerEPi to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)* @_ZNK5blink9JSONValue8AsStringEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::JSONArray"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONArray9WriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.blink::JSONValue"* (%"class.blink::JSONArray"*)* @_ZNK5blink9JSONArray5CloneEv to i8*), i8* bitcast (void (%"class.blink::JSONArray"*, %"class.WTF::StringBuilder"*, i32)* @_ZNK5blink9JSONArray23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi to i8*)] }, align 8
@_ZTVN5blink9JSONValueE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JSONValue"*)* @_ZN5blink9JSONValueD2Ev to i8*), i8* bitcast (void (%"class.blink::JSONValue"*)* @_ZN5blink9JSONValueD0Ev to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i8*)* @_ZNK5blink9JSONValue9AsBooleanEPb to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, double*)* @_ZNK5blink9JSONValue8AsDoubleEPd to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i32*)* @_ZNK5blink9JSONValue9AsIntegerEPi to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)* @_ZNK5blink9JSONValue8AsStringEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue9WriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.blink::JSONValue"* (%"class.blink::JSONValue"*)* @_ZNK5blink9JSONValue5CloneEv to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)* @_ZNK5blink9JSONValue23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi to i8*)] }, align 8
@_ZTVN5blink14JSONBasicValueE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JSONValue"*)* @_ZN5blink9JSONValueD2Ev to i8*), i8* bitcast (void (%"class.blink::JSONBasicValue"*)* @_ZN5blink14JSONBasicValueD0Ev to i8*), i8* bitcast (i1 (%"class.blink::JSONBasicValue"*, i8*)* @_ZNK5blink14JSONBasicValue9AsBooleanEPb to i8*), i8* bitcast (i1 (%"class.blink::JSONBasicValue"*, double*)* @_ZNK5blink14JSONBasicValue8AsDoubleEPd to i8*), i8* bitcast (i1 (%"class.blink::JSONBasicValue"*, i32*)* @_ZNK5blink14JSONBasicValue9AsIntegerEPi to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)* @_ZNK5blink9JSONValue8AsStringEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::JSONBasicValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink14JSONBasicValue9WriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.blink::JSONValue"* (%"class.blink::JSONBasicValue"*)* @_ZNK5blink14JSONBasicValue5CloneEv to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)* @_ZNK5blink9JSONValue23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi to i8*)] }, align 8
@_ZTVN5blink10JSONStringE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::JSONString"*)* @_ZN5blink10JSONStringD2Ev to i8*), i8* bitcast (void (%"class.blink::JSONString"*)* @_ZN5blink10JSONStringD0Ev to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i8*)* @_ZNK5blink9JSONValue9AsBooleanEPb to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, double*)* @_ZNK5blink9JSONValue8AsDoubleEPd to i8*), i8* bitcast (i1 (%"class.blink::JSONValue"*, i32*)* @_ZNK5blink9JSONValue9AsIntegerEPi to i8*), i8* bitcast (i1 (%"class.blink::JSONString"*, %"class.WTF::String"*)* @_ZNK5blink10JSONString8AsStringEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::JSONString"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink10JSONString9WriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)* @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.blink::JSONValue"* (%"class.blink::JSONString"*)* @_ZNK5blink10JSONString5CloneEv to i8*), i8* bitcast (void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)* @_ZNK5blink9JSONValue23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [3 x i8] c"\5Cb\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\5Cf\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\5Ct\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"\5C\22\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"\5Cu\00", align 1
@_ZN5blink12_GLOBAL__N_110kHexDigitsE = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@.str.13 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [164 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, std::__1::unique_ptr<blink::JSONValue, std::__1::default_delete<blink::JSONValue> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [131 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::JSONValue, std::__1::default_delete<blink::JSONValue> >]\00", align 1

@_ZN5blink10JSONObjectD1Ev = hidden unnamed_addr alias void (%"class.blink::JSONObject"*), void (%"class.blink::JSONObject"*)* @_ZN5blink10JSONObjectD2Ev
@_ZN5blink10JSONObjectC1Ev = hidden unnamed_addr alias void (%"class.blink::JSONObject"*), void (%"class.blink::JSONObject"*)* @_ZN5blink10JSONObjectC2Ev
@_ZN5blink9JSONArrayD1Ev = hidden unnamed_addr alias void (%"class.blink::JSONArray"*), void (%"class.blink::JSONArray"*)* @_ZN5blink9JSONArrayD2Ev
@_ZN5blink9JSONArrayC1Ev = hidden unnamed_addr alias void (%"class.blink::JSONArray"*), void (%"class.blink::JSONArray"*)* @_ZN5blink9JSONArrayC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::StringBuilder"*) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca i16, align 2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringView"* %10 to i8*
  %14 = bitcast %"class.WTF::StringView"* %10 to i64*
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %17 = bitcast %"class.WTF::StringView"* %9 to i8*
  %18 = bitcast %"class.WTF::StringView"* %9 to i64*
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %21 = bitcast %"class.WTF::StringView"* %8 to i8*
  %22 = bitcast %"class.WTF::StringView"* %8 to i64*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %7 to i8*
  %26 = bitcast %"class.WTF::StringView"* %7 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %29 = bitcast %"class.WTF::StringView"* %6 to i8*
  %30 = bitcast %"class.WTF::StringView"* %6 to i64*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i8*
  %34 = bitcast %"class.WTF::StringView"* %5 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %37 = bitcast %"class.WTF::StringView"* %4 to i8*
  %38 = bitcast %"class.WTF::StringView"* %4 to i64*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %41 = bitcast i16* %11 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon* %44 to i16**
  %48 = bitcast %union.anon* %44 to %"class.WTF::Vector.1"*
  %49 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 2
  %50 = bitcast %"class.WTF::StringView"* %3 to i8*
  %51 = bitcast %"class.WTF::StringView"* %3 to i64*
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %54

54:                                               ; preds = %154, %2
  %55 = phi i64 [ %155, %154 ], [ 0, %2 ]
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi i32 [ %60, %58 ], [ 0, %54 ]
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %55, %63
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  ret void

66:                                               ; preds = %61
  br i1 %57, label %103, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %55, %70
  br i1 %71, label %72, label %103

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  br i1 %76, label %83, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.WTF::StringImpl"* %77 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 %55
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  br label %87

83:                                               ; preds = %72
  %84 = bitcast %"class.WTF::StringImpl"* %77 to i16*
  %85 = getelementptr inbounds i16, i16* %84, i64 %55
  %86 = load i16, i16* %85, align 2
  br label %87

87:                                               ; preds = %78, %83
  %88 = phi i16 [ %82, %78 ], [ %86, %83 ]
  switch i16 %88, label %103 [
    i16 8, label %89
    i16 12, label %91
    i16 10, label %93
    i16 13, label %95
    i16 9, label %97
    i16 92, label %99
    i16 34, label %101
  ]

89:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %90, i64* %38, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %39, align 8
  store i32 2, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br label %154

91:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %92, i64* %34, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %35, align 8
  store i32 2, i32* %36, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  br label %154

93:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %94, i64* %30, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %31, align 8
  store i32 2, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %154

95:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %96, i64* %26, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %27, align 8
  store i32 2, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  br label %154

97:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %98, i64* %22, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8** %23, align 8
  store i32 2, i32* %24, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  br label %154

99:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %100, i64* %18, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8** %19, align 8
  store i32 2, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  br label %154

101:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %102, i64* %14, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8** %15, align 8
  store i32 2, i32* %16, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br label %154

103:                                              ; preds = %66, %67, %87
  %104 = phi i16 [ %88, %87 ], [ 0, %67 ], [ 0, %66 ]
  %105 = add i16 %104, -32
  %106 = icmp ugt i16 %105, 94
  %107 = or i16 %104, 2
  %108 = icmp eq i16 %107, 62
  %109 = or i1 %108, %106
  br i1 %109, label %110, label %130

110:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %111, i64* %51, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8** %52, align 8
  store i32 2, i32* %53, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  %112 = lshr i16 %104, 12
  %113 = zext i16 %112 to i64
  %114 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN5blink12_GLOBAL__N_110kHexDigitsE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %115) #12
  %116 = and i16 %104, 15
  %117 = lshr i16 %104, 8
  %118 = and i16 %117, 15
  %119 = zext i16 %118 to i64
  %120 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN5blink12_GLOBAL__N_110kHexDigitsE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %121) #12
  %122 = lshr i16 %104, 4
  %123 = and i16 %122, 15
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN5blink12_GLOBAL__N_110kHexDigitsE, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %126) #12
  %127 = zext i16 %116 to i64
  %128 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZN5blink12_GLOBAL__N_110kHexDigitsE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %129) #12
  br label %154

130:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %41)
  store i16 %104, i16* %11, align 2
  %131 = load i8, i8* %42, align 4, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = trunc i16 %104 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %134) #12
  br label %153

135:                                              ; preds = %130
  %136 = load i8, i8* %43, align 1, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %1, i32 1) #12
  br label %139

139:                                              ; preds = %138, %135
  %140 = load i32, i32* %45, align 4
  %141 = load i32, i32* %46, align 8
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %149, label %143, !prof !3

143:                                              ; preds = %139
  %144 = load i16*, i16** %47, align 8
  %145 = zext i32 %140 to i64
  %146 = getelementptr inbounds i16, i16* %144, i64 %145
  store i16 %104, i16* %146, align 2
  %147 = load i32, i32* %45, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %45, align 4
  br label %150

149:                                              ; preds = %139
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %48, i16* nonnull dereferenceable(2) %11) #12
  br label %150

150:                                              ; preds = %149, %143
  %151 = load i32, i32* %49, align 8
  %152 = add i32 %151, 1
  store i32 %152, i32* %49, align 8
  br label %153

153:                                              ; preds = %133, %150
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %41)
  br label %154

154:                                              ; preds = %89, %91, %93, %95, %97, %99, %101, %110, %153
  %155 = add nuw nsw i64 %55, 1
  br label %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DoubleQuoteStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::StringBuilder"*) local_unnamed_addr #0 {
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  tail call void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::StringBuilder"* %1)
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 34) #12
  call void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 34) #12
  %10 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #12
  br label %26

26:                                               ; preds = %1, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #12
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9JSONValue9AsBooleanEPb(%"class.blink::JSONValue"* nocapture readnone, i8* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9JSONValue8AsDoubleEPd(%"class.blink::JSONValue"* nocapture readnone, double* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9JSONValue9AsIntegerEPi(%"class.blink::JSONValue"* nocapture readnone, i32* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9JSONValue8AsStringEPN3WTF6StringE(%"class.blink::JSONValue"* nocapture readnone, %"class.WTF::String"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue12ToJSONStringEv(%"class.blink::JSONValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 512) #12
  %10 = bitcast %"class.blink::JSONValue"* %0 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %11 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %11, i64 6
  %13 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %12, align 8
  call void %13(%"class.blink::JSONValue"* %0, %"class.WTF::StringBuilder"* nonnull %2) #12
  %14 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %1, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #12
  ret %"class.WTF::StringImpl"* %14
}

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue18ToPrettyJSONStringEv(%"class.blink::JSONValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 512) #12
  %10 = bitcast %"class.blink::JSONValue"* %0 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %11 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %11, i64 7
  %13 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %12, align 8
  call void %13(%"class.blink::JSONValue"* %0, %"class.WTF::StringBuilder"* nonnull %2) #12
  %14 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %1, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #12
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9JSONValue9WriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONValue"* nocapture readnone, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blink15kJSONNullStringE, i64 0, i64 0), i32 4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9JSONValue15PrettyWriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::JSONValue"* %0 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)***
  %4 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %4, i64 9
  %6 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %5, align 8
  tail call void %6(%"class.blink::JSONValue"* %0, %"class.WTF::StringBuilder"* %1, i32 0) #12
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9JSONValue23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi(%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::JSONValue"* %0 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %5 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %5, i64 6
  %7 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %6, align 8
  tail call void %7(%"class.blink::JSONValue"* %0, %"class.WTF::StringBuilder"* %1) #12
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.blink::JSONValue"* @_ZNK5blink9JSONValue5CloneEv(%"class.blink::JSONValue"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = tail call noalias i8* @malloc(i64 16) #12
  %3 = bitcast i8* %2 to %"class.blink::JSONValue"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9JSONValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  ret %"class.blink::JSONValue"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14JSONBasicValue9AsBooleanEPb(%"class.blink::JSONBasicValue"* nocapture readonly, i8* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.7* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %1, align 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14JSONBasicValue8AsDoubleEPd(%"class.blink::JSONBasicValue"* nocapture readonly, double* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %15 [
    i32 3, label %5
    i32 2, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1, i32 0
  %7 = bitcast double* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast double* %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %12 = bitcast %union.anon.7* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  store double %14, double* %1, align 8
  br label %15

15:                                               ; preds = %2, %10, %5
  %16 = phi i1 [ true, %5 ], [ true, %10 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14JSONBasicValue9AsIntegerEPi(%"class.blink::JSONBasicValue"* nocapture readonly, i32* nocapture) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.7* %7 to i32*
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %1, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14JSONBasicValue9WriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONBasicValue"* nocapture readonly, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %132 [
    i32 1, label %9
    i32 3, label %16
    i32 2, label %53
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %11 = bitcast %union.anon.7* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blink15kJSONTrueStringE, i64 0, i64 0), i32 4) #12
  br label %132

15:                                               ; preds = %9
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink16kJSONFalseStringE, i64 0, i64 0), i32 5) #12
  br label %132

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1, i32 0
  %18 = load double, double* %17, align 8
  %19 = tail call double @llvm.fabs.f64(double %18) #13
  %20 = fcmp ueq double %19, 0x7FF0000000000000
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blink15kJSONNullStringE, i64 0, i64 0), i32 4) #12
  br label %132

22:                                               ; preds = %16
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %5, double %18) #12
  %25 = call %"class.WTF::StringImpl"* @_ZNK5blink7Decimal8ToStringEv(%"class.blink::Decimal"* nonnull %5) #12
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %31, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %52

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %32
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %32
  %49 = phi i32 [ %47, %46 ], [ %45, %32 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %52

52:                                               ; preds = %27, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br label %132

53:                                               ; preds = %2
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %56 = bitcast %union.anon.7* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #12
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %60 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %61 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 13
  %63 = icmp slt i32 %57, 0
  %64 = sub i32 0, %57
  %65 = select i1 %63, i32 %64, i32 %57
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #12
  store i8* %59, i8** %60, align 8
  %66 = urem i32 %65, 10
  %67 = udiv i32 %65, 10
  %68 = trunc i32 %66 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %59, align 4
  %70 = icmp ugt i32 %65, 9
  br i1 %70, label %71, label %93

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  store i8* %72, i8** %60, align 8
  %73 = urem i32 %67, 10
  %74 = trunc i32 %73 to i8
  %75 = or i8 %74, 48
  store i8 %75, i8* %72, align 1
  %76 = icmp ugt i32 %65, 99
  br i1 %76, label %77, label %93

77:                                               ; preds = %71
  %78 = udiv i32 %65, 100
  %79 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %79, i8** %60, align 8
  %80 = urem i32 %78, 10
  %81 = trunc i32 %80 to i8
  %82 = or i8 %81, 48
  store i8 %82, i8* %79, align 2
  %83 = icmp ugt i32 %65, 999
  br i1 %83, label %84, label %93

84:                                               ; preds = %77, %84
  %85 = phi i32 [ %87, %84 ], [ %78, %77 ]
  %86 = load i8*, i8** %60, align 8
  %87 = udiv i32 %85, 10
  %88 = getelementptr inbounds i8, i8* %86, i64 -1
  store i8* %88, i8** %60, align 8
  %89 = urem i32 %87, 10
  %90 = trunc i32 %89 to i8
  %91 = or i8 %90, 48
  store i8 %91, i8* %88, align 1
  %92 = icmp ugt i32 %85, 99
  br i1 %92, label %84, label %93

93:                                               ; preds = %84, %77, %71, %53
  br i1 %63, label %94, label %97

94:                                               ; preds = %93
  %95 = load i8*, i8** %60, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 -1
  store i8* %96, i8** %60, align 8
  store i8 45, i8* %96, align 1
  br label %97

97:                                               ; preds = %93, %94
  %98 = bitcast i8** %60 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = ptrtoint i8* %62 to i64
  %101 = sub i64 %100, %99
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* %61, align 8
  %103 = inttoptr i64 %99 to i8*
  %104 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %103, i32 %102) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #12
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %106, label %111

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %107, align 8
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %109 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %110, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %131

111:                                              ; preds = %97
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 1
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %117 = bitcast i8** %116 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %114, i32* %118, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %111
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %111
  %128 = phi i32 [ %126, %125 ], [ %124, %111 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #12
  br label %131

131:                                              ; preds = %106, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br label %132

132:                                              ; preds = %2, %52, %131, %14, %15, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* sret, double) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink7Decimal8ToStringEv(%"class.blink::Decimal"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink14JSONBasicValue5CloneEv(%"class.blink::JSONBasicValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %36 [
    i32 3, label %4
    i32 2, label %15
    i32 1, label %26
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1, i32 0
  %6 = tail call noalias i8* @malloc(i64 24) #12
  %7 = bitcast double* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = ptrtoint i8* %6 to i64
  br label %36

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %17 = bitcast %union.anon.7* %16 to i32*
  %18 = tail call noalias i8* @malloc(i64 24) #12
  %19 = load i32, i32* %17, align 4
  %20 = bitcast i8* %18 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 2, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 %19, i32* %24, align 8
  %25 = ptrtoint i8* %18 to i64
  br label %36

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::JSONBasicValue", %"class.blink::JSONBasicValue"* %0, i64 0, i32 1
  %28 = bitcast %union.anon.7* %27 to i8*
  %29 = tail call noalias i8* @malloc(i64 24) #12
  %30 = load i8, i8* %28, align 1, !range !2
  %31 = bitcast i8* %29 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 16
  store i8 %30, i8* %34, align 8
  %35 = ptrtoint i8* %29 to i64
  br label %36

36:                                               ; preds = %1, %26, %15, %4
  %37 = phi i64 [ %35, %26 ], [ %25, %15 ], [ %14, %4 ], [ 0, %1 ]
  %38 = inttoptr i64 %37 to %"class.blink::JSONValue"*
  ret %"class.blink::JSONValue"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONString8AsStringEPN3WTF6StringE(%"class.blink::JSONString"* nocapture readonly, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.WTF::String"* %1 to i64*
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %23, %38, %41
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10JSONString9WriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONString"* nocapture readonly, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 1
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  tail call void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::StringBuilder"* %1) #12
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink10JSONString5CloneEv(%"class.blink::JSONString"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 4, i32* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %1
  %29 = bitcast i8* %2 to %"class.blink::JSONValue"*
  ret %"class.blink::JSONValue"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObjectD2Ev(%"class.blink::JSONObject"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %41, label %7, !prof !4

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.22"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 0
  %43 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %42, align 8
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, null
  br i1 %44, label %90, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %88, label %49

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  br label %51

51:                                               ; preds = %85, %49
  %52 = phi i64 [ 0, %49 ], [ %86, %85 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair"* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %85, label %57

57:                                               ; preds = %51
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 %52, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %59, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %59, align 8
  %61 = icmp eq %"class.blink::JSONValue"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::JSONValue"* %60 to void (%"class.blink::JSONValue"*)***
  %64 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %64, i64 1
  %66 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %65, align 8
  tail call void %66(%"class.blink::JSONValue"* nonnull %60) #12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  br label %69

69:                                               ; preds = %62, %57
  %70 = phi %"class.WTF::StringImpl"* [ %68, %62 ], [ %58, %57 ]
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #12
  br label %85

85:                                               ; preds = %84, %81, %69, %51
  %86 = add nuw nsw i64 %52, 1
  %87 = icmp eq i64 %86, %50
  br i1 %87, label %88, label %51

88:                                               ; preds = %85, %45
  %89 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %42, align 8
  br label %90

90:                                               ; preds = %41, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObjectD0Ev(%"class.blink::JSONObject"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink10JSONObjectD2Ev(%"class.blink::JSONObject"* %0) #12
  %2 = bitcast %"class.blink::JSONObject"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = zext i1 %2 to i8
  %6 = tail call noalias i8* @malloc(i64 24) #12
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  store i8 %5, i8* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %6, i8** %13, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #12
  %14 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %12, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %12, align 8
  %15 = icmp eq %"class.blink::JSONValue"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::JSONValue"* %14 to void (%"class.blink::JSONValue"*)***
  %18 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %18, i64 1
  %20 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %19, align 8
  call void %20(%"class.blink::JSONValue"* nonnull %14) #12
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject8SetValueERKN3WTF6StringENSt3__110unique_ptrINS_9JSONValueENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONValue"* %2, %"class.blink::JSONValue"** %5, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4)
  %6 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %5, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %5, align 8
  %7 = icmp eq %"class.blink::JSONValue"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::JSONValue"* %6 to void (%"class.blink::JSONValue"*)***
  %10 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %10, i64 1
  %12 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %11, align 8
  call void %12(%"class.blink::JSONValue"* nonnull %6) #12
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject10SetIntegerERKN3WTF6StringEi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call noalias i8* @malloc(i64 24) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 2, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 %2, i32* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %13, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #12
  %14 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %12, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %12, align 8
  %15 = icmp eq %"class.blink::JSONValue"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::JSONValue"* %14 to void (%"class.blink::JSONValue"*)***
  %18 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %18, i64 1
  %20 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %19, align 8
  call void %20(%"class.blink::JSONValue"* nonnull %14) #12
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject9SetDoubleERKN3WTF6StringEd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call noalias i8* @malloc(i64 24) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 3, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to double*
  store double %2, double* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %13, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #12
  %14 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %12, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %12, align 8
  %15 = icmp eq %"class.blink::JSONValue"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::JSONValue"* %14 to void (%"class.blink::JSONValue"*)***
  %18 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %18, i64 1
  %20 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %19, align 8
  call void %20(%"class.blink::JSONValue"* nonnull %14) #12
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call noalias i8* @malloc(i64 24) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 4, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #12
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  tail call void @llvm.trap() #12
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %34, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #12
  %35 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %33, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %33, align 8
  %36 = icmp eq %"class.blink::JSONValue"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::JSONValue"* %35 to void (%"class.blink::JSONValue"*)***
  %39 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %39, i64 1
  %41 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %40, align 8
  call void %41(%"class.blink::JSONValue"* nonnull %35) #12
  br label %42

42:                                               ; preds = %37, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* dereferenceable(8) %2) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %12, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %14, i64* %17, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %9
  %20 = bitcast %"class.blink::JSONValue"* %16 to void (%"class.blink::JSONValue"*)***
  %21 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %21, i64 1
  %23 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %22, align 8
  tail call void %23(%"class.blink::JSONValue"* nonnull %16) #12
  br label %60

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %59, label %31, !prof !3

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %25, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %34, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %31
  %57 = load i32, i32* %26, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %26, align 4
  br label %60

59:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.22"* %25, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %60

60:                                               ; preds = %19, %9, %59, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject9SetObjectERKN3WTF6StringENSt3__110unique_ptrIS0_NS5_14default_deleteIS0_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.27", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONObject"* %2, %"class.blink::JSONObject"** %5, align 8
  call void @_ZN5blink10JSONObject3SetIS0_EEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.27"* nonnull dereferenceable(8) %4)
  %6 = load %"class.blink::JSONObject"*, %"class.blink::JSONObject"** %5, align 8
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %5, align 8
  %7 = icmp eq %"class.blink::JSONObject"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::JSONObject"* %6 to void (%"class.blink::JSONObject"*)***
  %10 = load void (%"class.blink::JSONObject"*)**, void (%"class.blink::JSONObject"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %10, i64 1
  %12 = load void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %11, align 8
  call void %12(%"class.blink::JSONObject"* nonnull %6) #12
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10JSONObject3SetIS0_EEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.27"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_10JSONObjectENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.27"* dereferenceable(8) %2) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 0
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr.27"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %11, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %9
  %20 = bitcast %"class.blink::JSONValue"* %16 to void (%"class.blink::JSONValue"*)***
  %21 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %21, i64 1
  %23 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %22, align 8
  tail call void %23(%"class.blink::JSONValue"* nonnull %16) #12
  br label %60

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %59, label %31, !prof !3

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %25, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %34, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %31
  %57 = load i32, i32* %26, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %26, align 4
  br label %60

59:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.22"* %25, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %60

60:                                               ; preds = %19, %9, %59, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONArray"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.33", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONArray"* %2, %"class.blink::JSONArray"** %5, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONArrayEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.33"* nonnull dereferenceable(8) %4)
  %6 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %5, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %5, align 8
  %7 = icmp eq %"class.blink::JSONArray"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::JSONArray"* %6 to void (%"class.blink::JSONArray"*)***
  %10 = load void (%"class.blink::JSONArray"*)**, void (%"class.blink::JSONArray"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::JSONArray"*)*, void (%"class.blink::JSONArray"*)** %10, i64 1
  %12 = load void (%"class.blink::JSONArray"*)*, void (%"class.blink::JSONArray"*)** %11, align 8
  call void %12(%"class.blink::JSONArray"* nonnull %6) #12
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10JSONObject3SetINS_9JSONArrayEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.33"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_9JSONArrayENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.33"* dereferenceable(8) %2) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 0
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr.33"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %11, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %9
  %20 = bitcast %"class.blink::JSONValue"* %16 to void (%"class.blink::JSONValue"*)***
  %21 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %21, i64 1
  %23 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %22, align 8
  tail call void %23(%"class.blink::JSONValue"* nonnull %16) #12
  br label %60

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %59, label %31, !prof !3

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %25, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %34, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %31
  %57 = load i32, i32* %26, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %26, align 4
  br label %60

59:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.22"* %25, %"class.WTF::String"* dereferenceable(8) %1) #12
  br label %60

60:                                               ; preds = %19, %9, %59, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONObject10GetBooleanERKN3WTF6StringEPb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #12
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %16, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::JSONValue"* %17 to i1 (%"class.blink::JSONValue"*, i8*)***
  %21 = load i1 (%"class.blink::JSONValue"*, i8*)**, i1 (%"class.blink::JSONValue"*, i8*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %21, i64 2
  %23 = load i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::JSONValue"* nonnull %17, i8* %2) #12
  br label %25

25:                                               ; preds = %3, %15, %19
  %26 = phi i1 [ %24, %19 ], [ false, %15 ], [ false, %3 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %6, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  br label %17

17:                                               ; preds = %2, %14
  %18 = phi %"class.blink::JSONValue"* [ %16, %14 ], [ null, %2 ]
  ret %"class.blink::JSONValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONObject10GetIntegerERKN3WTF6StringEPi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #12
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %16, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::JSONValue"* %17 to i1 (%"class.blink::JSONValue"*, i32*)***
  %21 = load i1 (%"class.blink::JSONValue"*, i32*)**, i1 (%"class.blink::JSONValue"*, i32*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %21, i64 4
  %23 = load i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::JSONValue"* nonnull %17, i32* %2) #12
  br label %25

25:                                               ; preds = %3, %15, %19
  %26 = phi i1 [ %24, %19 ], [ false, %15 ], [ false, %3 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONObject9GetDoubleERKN3WTF6StringEPd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #12
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %16, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::JSONValue"* %17 to i1 (%"class.blink::JSONValue"*, double*)***
  %21 = load i1 (%"class.blink::JSONValue"*, double*)**, i1 (%"class.blink::JSONValue"*, double*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %21, i64 3
  %23 = load i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::JSONValue"* nonnull %17, double* %2) #12
  br label %25

25:                                               ; preds = %3, %15, %19
  %26 = phi i1 [ %24, %19 ], [ false, %15 ], [ false, %3 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #12
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %16, align 8
  %18 = icmp eq %"class.blink::JSONValue"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::JSONValue"* %17 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %21 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %21, i64 5
  %23 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::JSONValue"* nonnull %17, %"class.WTF::String"* %2) #12
  br label %25

25:                                               ; preds = %3, %15, %19
  %26 = phi i1 [ %24, %19 ], [ false, %15 ], [ false, %3 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %6, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  %17 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 5
  %22 = bitcast %"class.blink::JSONValue"* %16 to %"class.blink::JSONObject"*
  %23 = select i1 %21, %"class.blink::JSONObject"* %22, %"class.blink::JSONObject"* null
  br label %24

24:                                               ; preds = %2, %14, %18
  %25 = phi %"class.blink::JSONObject"* [ %23, %18 ], [ null, %14 ], [ null, %2 ]
  ret %"class.blink::JSONObject"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %6, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %15, align 8
  %17 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  %22 = bitcast %"class.blink::JSONValue"* %16 to %"class.blink::JSONArray"*
  %23 = select i1 %21, %"class.blink::JSONArray"* %22, %"class.blink::JSONArray"* null
  br label %24

24:                                               ; preds = %2, %14, %18
  %25 = phi %"class.blink::JSONArray"* [ %23, %18 ], [ null, %14 ], [ null, %2 ]
  ret %"class.blink::JSONArray"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %7 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %6, i32 %1) #12
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %5, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0
  %30 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %29, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %31 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %30, 0
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %32, align 8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } { %"class.WTF::StringImpl"* null, %"class.blink::JSONValue"* undef }, %"class.blink::JSONValue"* %33, 1
  br label %77

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } undef, %"class.WTF::StringImpl"* %34, 0
  %45 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %44, %"class.blink::JSONValue"* %33, 1
  br label %62

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } undef, %"class.WTF::StringImpl"* %34, 0
  %60 = insertvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %59, %"class.blink::JSONValue"* %33, 1
  %61 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %43, %56
  %63 = phi { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } [ %45, %43 ], [ %60, %56 ]
  %64 = phi %"class.WTF::StringImpl"* [ %34, %43 ], [ %58, %56 ]
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %62
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %62
  %74 = phi i32 [ %72, %71 ], [ %70, %62 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #12
  br label %77

77:                                               ; preds = %36, %56, %73, %76
  %78 = phi { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } [ %37, %36 ], [ %60, %56 ], [ %63, %73 ], [ %63, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10JSONObject15BooleanPropertyERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %7, %"class.WTF::String"* dereferenceable(8) %1) #12
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %18, align 8
  %20 = icmp eq %"class.blink::JSONValue"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::JSONValue"* %19 to i1 (%"class.blink::JSONValue"*, i8*)***
  %23 = load i1 (%"class.blink::JSONValue"*, i8*)**, i1 (%"class.blink::JSONValue"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %23, i64 2
  %25 = load i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::JSONValue"* nonnull %19, i8* nonnull %4) #12
  %27 = load i8, i8* %4, align 1, !range !2
  br label %28

28:                                               ; preds = %3, %17, %21
  %29 = phi i8 [ %5, %3 ], [ %5, %17 ], [ %27, %21 ]
  %30 = icmp ne i8 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10JSONObject15IntegerPropertyERKN3WTF6StringEi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %7, %"class.WTF::String"* dereferenceable(8) %1) #12
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %18, align 8
  %20 = icmp eq %"class.blink::JSONValue"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::JSONValue"* %19 to i1 (%"class.blink::JSONValue"*, i32*)***
  %23 = load i1 (%"class.blink::JSONValue"*, i32*)**, i1 (%"class.blink::JSONValue"*, i32*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %23, i64 4
  %25 = load i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::JSONValue"* nonnull %19, i32* nonnull %4) #12
  %27 = load i32, i32* %4, align 4
  br label %28

28:                                               ; preds = %3, %17, %21
  %29 = phi i32 [ %2, %3 ], [ %2, %17 ], [ %27, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink10JSONObject14DoublePropertyERKN3WTF6StringEd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store double %2, double* %4, align 8
  %6 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %7, %"class.WTF::String"* dereferenceable(8) %1) #12
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %18, align 8
  %20 = icmp eq %"class.blink::JSONValue"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::JSONValue"* %19 to i1 (%"class.blink::JSONValue"*, double*)***
  %23 = load i1 (%"class.blink::JSONValue"*, double*)**, i1 (%"class.blink::JSONValue"*, double*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %23, i64 3
  %25 = load i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::JSONValue"* nonnull %19, double* nonnull %4) #12
  %27 = load double, double* %4, align 8
  br label %28

28:                                               ; preds = %3, %17, %21
  %29 = phi double [ %2, %3 ], [ %2, %17 ], [ %27, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret double %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObject6RemoveERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %4, %"class.WTF::String"* dereferenceable(8) %1) #12
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, %6
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"* %4, %"struct.WTF::KeyValuePair"* %6) #12
  br label %15

15:                                               ; preds = %2, %14
  %16 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %20, %30
  %23 = phi i32 [ 0, %20 ], [ %31, %30 ]
  %24 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %16, i32 %23) #12
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %28 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* %27) #12
  br i1 %28, label %29, label %30

29:                                               ; preds = %22
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.22"* %16, i32 %23)
  br label %34

30:                                               ; preds = %22
  %31 = add nuw i32 %23, 1
  %32 = load i32, i32* %17, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %22, label %34

34:                                               ; preds = %30, %15, %29
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %22, %39, %42
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 1
  %45 = icmp ne %"class.WTF::String"* %26, null
  %46 = icmp ne %"class.WTF::String"* %44, null
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %58, !prof !4

48:                                               ; preds = %43
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %50 = load i32, i32* %8, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %51
  %53 = bitcast %"class.WTF::String"* %26 to i8*
  %54 = bitcast %"class.WTF::String"* %44 to i8*
  %55 = ptrtoint %"class.WTF::String"* %52 to i64
  %56 = ptrtoint %"class.WTF::String"* %44 to i64
  %57 = sub i64 %55, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* nonnull align 8 %54, i64 %57, i1 false) #12
  br label %58

58:                                               ; preds = %43, %48
  %59 = load i32, i32* %8, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10JSONObject9WriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONObject"*, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 123) #12
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %15

14:                                               ; preds = %30, %2
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 125) #12
  ret void

15:                                               ; preds = %7, %30
  %16 = phi i32 [ 0, %7 ], [ %38, %30 ]
  %17 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %8, i32 %16) #12
  %18 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %10, %"class.WTF::String"* dereferenceable(8) %17) #12
  %19 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %18, 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %21 = load i32, i32* %12, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %19, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 359, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %27

27:                                               ; preds = %15, %25
  %28 = icmp eq i32 %16, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 44) #12
  br label %30

30:                                               ; preds = %27, %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  call void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8) %31, %"class.WTF::StringBuilder"* %1) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 58) #12
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %32, align 8
  %34 = bitcast %"class.blink::JSONValue"* %33 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %35 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %35, i64 6
  %37 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %36, align 8
  call void %37(%"class.blink::JSONValue"* %33, %"class.WTF::StringBuilder"* %1) #12
  %38 = add nuw i32 %16, 1
  %39 = load i32, i32* %4, align 4
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %15, label %14
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10JSONObject23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi(%"class.blink::JSONObject"*, %"class.WTF::StringBuilder"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %14, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %15 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %20, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.logging::CheckError"* %7 to i8*
  %25 = bitcast %"class.WTF::StringView"* %8 to i8*
  %26 = bitcast %"class.WTF::StringView"* %8 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %29 = add nsw i32 %2, 1
  %30 = icmp sgt i32 %2, -1
  %31 = bitcast %"class.WTF::StringView"* %4 to i8*
  %32 = bitcast %"class.WTF::StringView"* %4 to i64*
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %35 = bitcast %"class.WTF::StringView"* %9 to i8*
  %36 = bitcast %"class.WTF::StringView"* %9 to i64*
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  br label %52

39:                                               ; preds = %74, %3
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 10) #12
  %40 = icmp sgt i32 %2, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %39
  %42 = bitcast %"class.WTF::StringView"* %5 to i8*
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %46

46:                                               ; preds = %46, %41
  %47 = phi i32 [ 0, %41 ], [ %49, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %43, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %44, align 8
  store i32 2, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %49 = add nuw nsw i32 %47, 1
  %50 = icmp eq i32 %49, %2
  br i1 %50, label %51, label %46

51:                                               ; preds = %46, %39
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 125) #12
  ret void

52:                                               ; preds = %18, %74
  %53 = phi i32 [ 0, %18 ], [ %83, %74 ]
  %54 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %19, i32 %53) #12
  %55 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %21, %"class.WTF::String"* dereferenceable(8) %54) #12
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %55, 0
  %57 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %22, align 8
  %58 = load i32, i32* %23, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 %59
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %56, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0)) #12
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %64

64:                                               ; preds = %52, %62
  %65 = icmp eq i32 %53, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %67, i64* %26, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %27, align 8
  store i32 2, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  br label %68

68:                                               ; preds = %64, %66
  br i1 %30, label %69, label %74

69:                                               ; preds = %68, %69
  %70 = phi i32 [ %72, %69 ], [ 0, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %71, i64* %32, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %33, align 8
  store i32 2, i32* %34, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %72 = add nuw nsw i32 %70, 1
  %73 = icmp eq i32 %72, %29
  br i1 %73, label %74, label %69

74:                                               ; preds = %69, %68
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  call void @_ZN5blink19EscapeStringForJSONERKN3WTF6StringEPNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8) %75, %"class.WTF::StringBuilder"* %1) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %76, i64* %36, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %37, align 8
  store i32 2, i32* %38, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %77, align 8
  %79 = bitcast %"class.blink::JSONValue"* %78 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)***
  %80 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %80, i64 9
  %82 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %81, align 8
  call void %82(%"class.blink::JSONValue"* %78, %"class.WTF::StringBuilder"* %1, i32 %29) #12
  %83 = add nuw i32 %53, 1
  %84 = load i32, i32* %15, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %52, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink10JSONObject5CloneEv(%"class.blink::JSONObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call noalias i8* @malloc(i64 56) #12
  %4 = bitcast i8* %3 to %"class.blink::JSONObject"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 5, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #12
  %9 = getelementptr inbounds i8, i8* %3, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  br label %23

21:                                               ; preds = %41, %1
  %22 = bitcast i8* %3 to %"class.blink::JSONValue"*
  ret %"class.blink::JSONValue"* %22

23:                                               ; preds = %17, %41
  %24 = phi %"class.WTF::String"* [ %11, %17 ], [ %42, %41 ]
  %25 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %18, %"class.WTF::String"* dereferenceable(8) %24) #12
  %26 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %25, 0
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %27, align 8
  %29 = bitcast %"class.blink::JSONValue"* %28 to %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)***
  %30 = load %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)**, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)** %30, i64 8
  %32 = load %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)** %31, align 8
  %33 = call %"class.blink::JSONValue"* %32(%"class.blink::JSONValue"* %28) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  store %"class.blink::JSONValue"* %33, %"class.blink::JSONValue"** %20, align 8
  call void @_ZN5blink10JSONObject3SetINS_9JSONValueEEEvRKN3WTF6StringERNSt3__110unique_ptrIT_NS7_14default_deleteIS9_EEEE(%"class.blink::JSONObject"* %4, %"class.WTF::String"* dereferenceable(8) %24, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #12
  %34 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %20, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %20, align 8
  %35 = icmp eq %"class.blink::JSONValue"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %23
  %37 = bitcast %"class.blink::JSONValue"* %34 to void (%"class.blink::JSONValue"*)***
  %38 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %38, i64 1
  %40 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %39, align 8
  call void %40(%"class.blink::JSONValue"* nonnull %34) #12
  br label %41

41:                                               ; preds = %23, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %15
  br i1 %43, label %21, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10JSONObjectC2Ev(%"class.blink::JSONObject"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 0, i32 1
  store i32 5, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2
  %5 = bitcast %"class.WTF::HashMap"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %6 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 3
  %7 = bitcast %"class.WTF::Vector.22"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArrayD2Ev(%"class.blink::JSONArray"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9JSONArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %33, label %7, !prof !4

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %13
  br label %15

15:                                               ; preds = %25, %12
  %16 = phi %"class.std::__1::unique_ptr"* [ %26, %25 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %17, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %17, align 8
  %19 = icmp eq %"class.blink::JSONValue"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::JSONValue"* %18 to void (%"class.blink::JSONValue"*)***
  %22 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %22, i64 1
  %24 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %23, align 8
  tail call void %24(%"class.blink::JSONValue"* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %15
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 1
  %27 = icmp eq %"class.std::__1::unique_ptr"* %26, %14
  br i1 %27, label %28, label %15

28:                                               ; preds = %25
  store i32 0, i32* %9, align 4
  %29 = bitcast %"class.WTF::Vector.36"* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %7
  %32 = phi i8* [ %30, %28 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #12
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %4, align 8
  br label %33

33:                                               ; preds = %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArrayD0Ev(%"class.blink::JSONArray"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9JSONArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %33, label %7, !prof !4

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %13
  br label %15

15:                                               ; preds = %25, %12
  %16 = phi %"class.std::__1::unique_ptr"* [ %26, %25 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %17, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %17, align 8
  %19 = icmp eq %"class.blink::JSONValue"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::JSONValue"* %18 to void (%"class.blink::JSONValue"*)***
  %22 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %22, i64 1
  %24 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %23, align 8
  tail call void %24(%"class.blink::JSONValue"* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %15
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 1
  %27 = icmp eq %"class.std::__1::unique_ptr"* %26, %14
  br i1 %27, label %28, label %15

28:                                               ; preds = %25
  store i32 0, i32* %9, align 4
  %29 = bitcast %"class.WTF::Vector.36"* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %7
  %32 = phi i8* [ %30, %28 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #12
  br label %33

33:                                               ; preds = %1, %31
  %34 = bitcast %"class.blink::JSONArray"* %0 to i8*
  tail call void @free(i8* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9JSONArray9WriteJSONEPN3WTF13StringBuilderE(%"class.blink::JSONArray"* nocapture readonly, %"class.WTF::StringBuilder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 91) #12
  %3 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %11, align 8
  %13 = bitcast %"class.blink::JSONValue"* %12 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %14 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %14, i64 6
  %16 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %15, align 8
  tail call void %16(%"class.blink::JSONValue"* %12, %"class.WTF::StringBuilder"* %1) #12
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %18 = icmp eq i32 %6, 1
  br i1 %18, label %19, label %20

19:                                               ; preds = %10, %20, %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 93) #12
  ret void

20:                                               ; preds = %10, %20
  %21 = phi %"class.std::__1::unique_ptr"* [ %28, %20 ], [ %17, %10 ]
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 44) #12
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %22, align 8
  %24 = bitcast %"class.blink::JSONValue"* %23 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)***
  %25 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %25, i64 6
  %27 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*)** %26, align 8
  tail call void %27(%"class.blink::JSONValue"* %23, %"class.WTF::StringBuilder"* %1) #12
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %8
  br i1 %29, label %19, label %20, !llvm.loop !5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9JSONArray23PrettyWriteJSONInternalEPN3WTF13StringBuilderEi(%"class.blink::JSONArray"* nocapture readonly, %"class.WTF::StringBuilder"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 91) #12
  %7 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %74, label %14

14:                                               ; preds = %3
  %15 = icmp sgt i32 %2, -1
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  %21 = bitcast %"class.WTF::StringView"* %5 to i64*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %24 = add nsw i32 %2, 1
  br label %26

25:                                               ; preds = %53
  br i1 %35, label %62, label %74

26:                                               ; preds = %14, %53
  %27 = phi %"class.std::__1::unique_ptr"* [ %8, %14 ], [ %60, %53 ]
  %28 = phi i8 [ 1, %14 ], [ %54, %53 ]
  %29 = phi i1 [ false, %14 ], [ %35, %53 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -4
  %35 = icmp ult i32 %34, 3
  %36 = and i8 %28, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %26
  br i1 %35, label %39, label %53

39:                                               ; preds = %38
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 10) #12
  br i1 %15, label %40, label %53

40:                                               ; preds = %39, %40
  %41 = phi i32 [ %43, %40 ], [ 0, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %42, i64* %17, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %18, align 8
  store i32 2, i32* %19, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %43 = add nuw nsw i32 %41, 1
  %44 = icmp eq i32 %41, %2
  br i1 %44, label %53, label %40

45:                                               ; preds = %26
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 44) #12
  br i1 %29, label %46, label %52

46:                                               ; preds = %45
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 10) #12
  br i1 %15, label %47, label %53

47:                                               ; preds = %46, %47
  %48 = phi i32 [ %50, %47 ], [ 0, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %49, i64* %21, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %22, align 8
  store i32 2, i32* %23, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %50 = add nuw nsw i32 %48, 1
  %51 = icmp eq i32 %48, %2
  br i1 %51, label %53, label %47

52:                                               ; preds = %45
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 32) #12
  br label %53

53:                                               ; preds = %40, %47, %46, %39, %38, %52
  %54 = phi i8 [ %28, %52 ], [ 0, %38 ], [ 0, %39 ], [ %28, %46 ], [ %28, %47 ], [ 0, %40 ]
  %55 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %30, align 8
  %56 = bitcast %"class.blink::JSONValue"* %55 to void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)***
  %57 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)**, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %57, i64 9
  %59 = load void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)*, void (%"class.blink::JSONValue"*, %"class.WTF::StringBuilder"*, i32)** %58, align 8
  call void %59(%"class.blink::JSONValue"* %55, %"class.WTF::StringBuilder"* %1, i32 %24) #12
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr"* %60, %12
  br i1 %61, label %25, label %26

62:                                               ; preds = %25
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 10) #12
  %63 = icmp sgt i32 %2, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::StringView"* %6 to i8*
  %66 = bitcast %"class.WTF::StringView"* %6 to i64*
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %69

69:                                               ; preds = %69, %64
  %70 = phi i32 [ 0, %64 ], [ %72, %69 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %71, i64* %66, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %67, align 8
  store i32 2, i32* %68, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  %72 = add nuw nsw i32 %70, 1
  %73 = icmp eq i32 %72, %2
  br i1 %73, label %74, label %69

74:                                               ; preds = %69, %3, %62, %25
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 93) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink9JSONArray5CloneEv(%"class.blink::JSONArray"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call noalias i8* @malloc(i64 32) #12
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 6, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9JSONArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds i8, i8* %3, i64 28
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds i8, i8* %3, i64 24
  %21 = bitcast i8* %20 to i32*
  %22 = bitcast i8* %7 to %"class.std::__1::unique_ptr"**
  %23 = bitcast i8* %7 to %"class.WTF::Vector.36"*
  br label %26

24:                                               ; preds = %55, %1
  %25 = bitcast i8* %3 to %"class.blink::JSONValue"*
  ret %"class.blink::JSONValue"* %25

26:                                               ; preds = %15, %55
  %27 = phi %"class.std::__1::unique_ptr"* [ %9, %15 ], [ %56, %55 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %28, align 8
  %30 = bitcast %"class.blink::JSONValue"* %29 to %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)***
  %31 = load %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)**, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)** %31, i64 8
  %33 = load %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)*, %"class.blink::JSONValue"* (%"class.blink::JSONValue"*)** %32, align 8
  %34 = call %"class.blink::JSONValue"* %33(%"class.blink::JSONValue"* %29) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  store %"class.blink::JSONValue"* %34, %"class.blink::JSONValue"** %17, align 8
  %35 = load i32, i32* %19, align 4
  %36 = load i32, i32* %21, align 8
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %46, label %38, !prof !3

38:                                               ; preds = %26
  %39 = ptrtoint %"class.blink::JSONValue"* %34 to i64
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %41 = zext i32 %35 to i64
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 %41
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %17, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %39, i64* %43, align 8
  %44 = load i32, i32* %19, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %19, align 4
  br label %47

46:                                               ; preds = %26
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"* %23, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #12
  br label %47

47:                                               ; preds = %46, %38
  %48 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %17, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %17, align 8
  %49 = icmp eq %"class.blink::JSONValue"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::JSONValue"* %48 to void (%"class.blink::JSONValue"*)***
  %52 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %52, i64 1
  %54 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %53, align 8
  call void %54(%"class.blink::JSONValue"* nonnull %48) #12
  br label %55

55:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr"* %56, %13
  br i1 %57, label %24, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray9PushValueENSt3__110unique_ptrINS_9JSONValueENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONValue"* %1, %"class.blink::JSONValue"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %20, label %11, !prof !3

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::JSONValue"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %15
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %4, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %21

20:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"* %5, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #12
  br label %21

21:                                               ; preds = %11, %20
  %22 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %4, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %4, align 8
  %23 = icmp eq %"class.blink::JSONValue"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::JSONValue"* %22 to void (%"class.blink::JSONValue"*)***
  %26 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %26, i64 1
  %28 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %27, align 8
  call void %28(%"class.blink::JSONValue"* nonnull %22) #12
  br label %29

29:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArrayC2Ev(%"class.blink::JSONArray"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 0, i32 1
  store i32 6, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink9JSONArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::Vector.36"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray11PushBooleanEb(%"class.blink::JSONArray"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.8", align 8
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = tail call noalias i8* @malloc(i64 24) #12
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  store i8 %4, i8* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8**
  store i8* %7, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %28, label %19, !prof !3

19:                                               ; preds = %2
  %20 = ptrtoint i8* %7 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %5, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 %23
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = load i32, i32* %14, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %14, align 4
  br label %29

28:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_14JSONBasicValueENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %5, %"class.std::__1::unique_ptr.8"* nonnull dereferenceable(8) %3) #12
  br label %29

29:                                               ; preds = %19, %28
  %30 = load %"class.blink::JSONBasicValue"*, %"class.blink::JSONBasicValue"** %12, align 8
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %31 = icmp eq %"class.blink::JSONBasicValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::JSONBasicValue"* %30 to void (%"class.blink::JSONBasicValue"*)***
  %34 = load void (%"class.blink::JSONBasicValue"*)**, void (%"class.blink::JSONBasicValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %34, i64 1
  %36 = load void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %35, align 8
  call void %36(%"class.blink::JSONBasicValue"* nonnull %30) #12
  br label %37

37:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray11PushIntegerEi(%"class.blink::JSONArray"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.8", align 8
  %4 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = tail call noalias i8* @malloc(i64 24) #12
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 2, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8**
  store i8* %6, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %28, label %19, !prof !3

19:                                               ; preds = %2
  %20 = ptrtoint i8* %6 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 %23
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = load i32, i32* %14, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %14, align 4
  br label %29

28:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_14JSONBasicValueENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %4, %"class.std::__1::unique_ptr.8"* nonnull dereferenceable(8) %3) #12
  br label %29

29:                                               ; preds = %19, %28
  %30 = load %"class.blink::JSONBasicValue"*, %"class.blink::JSONBasicValue"** %12, align 8
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %31 = icmp eq %"class.blink::JSONBasicValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::JSONBasicValue"* %30 to void (%"class.blink::JSONBasicValue"*)***
  %34 = load void (%"class.blink::JSONBasicValue"*)**, void (%"class.blink::JSONBasicValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %34, i64 1
  %36 = load void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %35, align 8
  call void %36(%"class.blink::JSONBasicValue"* nonnull %30) #12
  br label %37

37:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray10PushDoubleEd(%"class.blink::JSONArray"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.8", align 8
  %4 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = tail call noalias i8* @malloc(i64 24) #12
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 3, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink14JSONBasicValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to double*
  store double %1, double* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.8"* %3 to i8**
  store i8* %6, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %28, label %19, !prof !3

19:                                               ; preds = %2
  %20 = ptrtoint i8* %6 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 %23
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = load i32, i32* %14, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %14, align 4
  br label %29

28:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_14JSONBasicValueENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %4, %"class.std::__1::unique_ptr.8"* nonnull dereferenceable(8) %3) #12
  br label %29

29:                                               ; preds = %19, %28
  %30 = load %"class.blink::JSONBasicValue"*, %"class.blink::JSONBasicValue"** %12, align 8
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %12, align 8
  %31 = icmp eq %"class.blink::JSONBasicValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::JSONBasicValue"* %30 to void (%"class.blink::JSONBasicValue"*)***
  %34 = load void (%"class.blink::JSONBasicValue"*)**, void (%"class.blink::JSONBasicValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %34, i64 1
  %36 = load void (%"class.blink::JSONBasicValue"*)*, void (%"class.blink::JSONBasicValue"*)** %35, align 8
  call void %36(%"class.blink::JSONBasicValue"* nonnull %30) #12
  br label %37

37:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray10PushStringERKN3WTF6StringE(%"class.blink::JSONArray"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.14", align 8
  %4 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = tail call noalias i8* @malloc(i64 24) #12
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 4, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 16
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #12
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.14"* %3 to i8**
  store i8* %6, i8** %34, align 8
  %35 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %32
  %41 = ptrtoint i8* %6 to i64
  %42 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %4, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = zext i32 %36 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 %44
  store %"class.blink::JSONString"* null, %"class.blink::JSONString"** %33, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %41, i64* %46, align 8
  %47 = load i32, i32* %35, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %35, align 4
  br label %50

49:                                               ; preds = %32
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONStringENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %4, %"class.std::__1::unique_ptr.14"* nonnull dereferenceable(8) %3) #12
  br label %50

50:                                               ; preds = %40, %49
  %51 = load %"class.blink::JSONString"*, %"class.blink::JSONString"** %33, align 8
  store %"class.blink::JSONString"* null, %"class.blink::JSONString"** %33, align 8
  %52 = icmp eq %"class.blink::JSONString"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::JSONString"* %51 to void (%"class.blink::JSONString"*)***
  %55 = load void (%"class.blink::JSONString"*)**, void (%"class.blink::JSONString"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::JSONString"*)*, void (%"class.blink::JSONString"*)** %55, i64 1
  %57 = load void (%"class.blink::JSONString"*)*, void (%"class.blink::JSONString"*)** %56, align 8
  call void %57(%"class.blink::JSONString"* nonnull %51) #12
  br label %58

58:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray10PushObjectENSt3__110unique_ptrINS_10JSONObjectENS1_14default_deleteIS3_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.27", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONObject"* %1, %"class.blink::JSONObject"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %20, label %11, !prof !3

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::JSONObject"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %15
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %4, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %21

20:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONObjectENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %5, %"class.std::__1::unique_ptr.27"* nonnull dereferenceable(8) %3) #12
  br label %21

21:                                               ; preds = %11, %20
  %22 = load %"class.blink::JSONObject"*, %"class.blink::JSONObject"** %4, align 8
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %4, align 8
  %23 = icmp eq %"class.blink::JSONObject"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::JSONObject"* %22 to void (%"class.blink::JSONObject"*)***
  %26 = load void (%"class.blink::JSONObject"*)**, void (%"class.blink::JSONObject"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %26, i64 1
  %28 = load void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %27, align 8
  call void %28(%"class.blink::JSONObject"* nonnull %22) #12
  br label %29

29:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9JSONArray9PushArrayENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.blink::JSONArray"*, %"class.blink::JSONArray"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.33", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::JSONArray"* %1, %"class.blink::JSONArray"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %20, label %11, !prof !3

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::JSONArray"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %15
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %4, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %21

20:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_9JSONArrayENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"* %5, %"class.std::__1::unique_ptr.33"* nonnull dereferenceable(8) %3) #12
  br label %21

21:                                               ; preds = %11, %20
  %22 = load %"class.blink::JSONArray"*, %"class.blink::JSONArray"** %4, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %4, align 8
  %23 = icmp eq %"class.blink::JSONArray"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::JSONArray"* %22 to void (%"class.blink::JSONArray"*)***
  %26 = load void (%"class.blink::JSONArray"*)**, void (%"class.blink::JSONArray"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::JSONArray"*)*, void (%"class.blink::JSONArray"*)** %26, i64 1
  %28 = load void (%"class.blink::JSONArray"*)*, void (%"class.blink::JSONArray"*)** %27, align 8
  call void %28(%"class.blink::JSONArray"* nonnull %22) #12
  br label %29

29:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %0, i64 0, i32 1
  %4 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.36"* %3, i32 %1) #12
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %5, align 8
  ret %"class.blink::JSONValue"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9JSONValueD0Ev(%"class.blink::JSONValue"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::JSONValue"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9JSONValueD2Ev(%"class.blink::JSONValue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14JSONBasicValueD0Ev(%"class.blink::JSONBasicValue"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::JSONBasicValue"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10JSONStringD2Ev(%"class.blink::JSONString"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10JSONStringD0Ev(%"class.blink::JSONString"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink10JSONStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::JSONString", %"class.blink::JSONString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::JSONString"* %0 to i8*
  tail call void @free(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #10

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %144, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %120, align 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  store i64 %122, i64* %125, align 8
  %126 = icmp eq %"class.blink::JSONValue"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.blink::JSONValue"* %124 to void (%"class.blink::JSONValue"*)***
  %129 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %129, i64 1
  %131 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %130, align 8
  tail call void %131(%"class.blink::JSONValue"* nonnull %124) #12
  br label %132

132:                                              ; preds = %118, %127
  %133 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %135
  %139 = shl i32 %138, 1
  %140 = load i32, i32* %12, align 8
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %144

144:                                              ; preds = %54, %132, %142
  %145 = phi i8 [ 1, %132 ], [ 1, %142 ], [ 0, %54 ]
  %146 = phi %"struct.WTF::KeyValuePair"* [ %79, %132 ], [ %143, %142 ], [ %47, %54 ]
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %146, 0
  %148 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %147, i8 %145, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %84

24:                                               ; preds = %139
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %140, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %143, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %141, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %49, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %49, align 8
  %51 = icmp eq %"class.blink::JSONValue"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::JSONValue"* %50 to void (%"class.blink::JSONValue"*)***
  %54 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %54, i64 1
  %56 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %55, align 8
  call void %56(%"class.blink::JSONValue"* nonnull %50) #12
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  br label %59

59:                                               ; preds = %52, %47
  %60 = phi %"class.WTF::StringImpl"* [ %58, %52 ], [ %48, %47 ]
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71, %59, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair"* %33

84:                                               ; preds = %21, %139
  %85 = phi i64 [ %140, %139 ], [ %23, %21 ]
  %86 = phi i32 [ %141, %139 ], [ %13, %21 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %142, %139 ], [ %22, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair"* [ %143, %139 ], [ null, %21 ]
  %89 = phi i32 [ %144, %139 ], [ 0, %21 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %90
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"struct.WTF::KeyValuePair"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %95 [
    i64 -1, label %139
    i64 0, label %139
  ]

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 0
  %97 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %96) #12
  %98 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %97, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %99, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %99, align 8
  %101 = icmp eq %"class.blink::JSONValue"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %95
  %103 = bitcast %"class.blink::JSONValue"* %100 to void (%"class.blink::JSONValue"*)***
  %104 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %104, i64 1
  %106 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %105, align 8
  call void %106(%"class.blink::JSONValue"* nonnull %100) #12
  br label %107

107:                                              ; preds = %102, %95
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #12
  br label %124

124:                                              ; preds = %107, %120, %123
  %125 = load i64, i64* %93, align 8
  %126 = bitcast %"struct.WTF::KeyValuePair"* %98 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 %90, i32 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 %90
  %135 = icmp eq %"struct.WTF::KeyValuePair"* %134, %3
  %136 = select i1 %135, %"struct.WTF::KeyValuePair"* %98, %"struct.WTF::KeyValuePair"* %88
  %137 = load i32, i32* %12, align 8
  %138 = ptrtoint %"struct.WTF::KeyValuePair"* %133 to i64
  br label %139

139:                                              ; preds = %84, %84, %124
  %140 = phi i64 [ %85, %84 ], [ %138, %124 ], [ %85, %84 ]
  %141 = phi i32 [ %86, %84 ], [ %137, %124 ], [ %86, %84 ]
  %142 = phi %"struct.WTF::KeyValuePair"* [ %87, %84 ], [ %133, %124 ], [ %87, %84 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ %88, %84 ], [ %136, %124 ], [ %88, %84 ]
  %144 = add i32 %89, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %24, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.22"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.22"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.22"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_10JSONObjectENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.27"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %144, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %2, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr.27"* %2 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %119, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq %"class.blink::JSONValue"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.blink::JSONValue"* %124 to void (%"class.blink::JSONValue"*)***
  %129 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %129, i64 1
  %131 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %130, align 8
  tail call void %131(%"class.blink::JSONValue"* nonnull %124) #12
  br label %132

132:                                              ; preds = %118, %127
  %133 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %135
  %139 = shl i32 %138, 1
  %140 = load i32, i32* %12, align 8
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %144

144:                                              ; preds = %54, %132, %142
  %145 = phi i8 [ 1, %132 ], [ 1, %142 ], [ 0, %54 ]
  %146 = phi %"struct.WTF::KeyValuePair"* [ %79, %132 ], [ %143, %142 ], [ %47, %54 ]
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %146, 0
  %148 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %147, i8 %145, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_NS4_INS5_9JSONArrayENS7_ISP_EEEEEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.33"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %144, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %2, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr.33"* %2 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %119, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq %"class.blink::JSONValue"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.blink::JSONValue"* %124 to void (%"class.blink::JSONValue"*)***
  %129 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %129, i64 1
  %131 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %130, align 8
  tail call void %131(%"class.blink::JSONValue"* nonnull %124) #12
  br label %132

132:                                              ; preds = %118, %127
  %133 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %135
  %139 = shl i32 %138, 1
  %140 = load i32, i32* %12, align 8
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %132
  %143 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %144

144:                                              ; preds = %54, %132, %142
  %145 = phi i8 [ 1, %132 ], [ 1, %142 ], [ 0, %54 ]
  %146 = phi %"struct.WTF::KeyValuePair"* [ %79, %132 ], [ %143, %142 ], [ %47, %54 ]
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %146, 0
  %148 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %147, i8 %145, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %3, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %3, align 8
  %5 = icmp eq %"class.blink::JSONValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::JSONValue"* %4 to void (%"class.blink::JSONValue"*)***
  %8 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %8, i64 1
  %10 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %9, align 8
  tail call void %10(%"class.blink::JSONValue"* nonnull %4) #12
  br label %11

11:                                               ; preds = %6, %2
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %11, %24, %27
  %29 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  %33 = and i32 %32, 2147483647
  %34 = and i32 %31, -2147483648
  %35 = or i32 %33, %34
  store i32 %35, i32* %30, align 8
  %36 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %36, align 4
  %39 = mul i32 %38, 6
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ult i32 %39, %41
  %43 = icmp ugt i32 %41, 8
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %28
  %46 = lshr i32 %41, 1
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %48, i1 false) #12
  %50 = bitcast i8* %49 to %"struct.WTF::KeyValuePair"*
  %51 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %50, i32 %46, %"struct.WTF::KeyValuePair"* null) #12
  br label %52

52:                                               ; preds = %45, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink9JSONValueENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_14JSONBasicValueENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"*, %"class.std::__1::unique_ptr.8"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.8"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::JSONBasicValue"* null, %"class.blink::JSONBasicValue"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONStringENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"*, %"class.std::__1::unique_ptr.14"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.14"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::JSONString"* null, %"class.blink::JSONString"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::JSONValue"* null, %"class.blink::JSONValue"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_10JSONObjectENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"*, %"class.std::__1::unique_ptr.27"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.27"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::JSONObject"* null, %"class.blink::JSONObject"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_9JSONArrayENS5_ISB_EEEEEEvOT_(%"class.WTF::Vector.36"*, %"class.std::__1::unique_ptr.33"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink9JSONValueENS2_14default_deleteIS5_EEEEEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.33"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::JSONArray"* null, %"class.blink::JSONArray"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink9JSONValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
