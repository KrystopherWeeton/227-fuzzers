; ModuleID = '../../v8/src/heap/concurrent-marking.cc'
source_filename = "../../v8/src/heap/concurrent-marking.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.147", [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.613", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.253" }
%"class.std::__1::unordered_map.253" = type { %"class.std::__1::__hash_table.254" }
%"class.std::__1::__hash_table.254" = type <{ %"class.std::__1::unique_ptr.255", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.273", [4 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.std::__1::__hash_node_base.258"** }
%"struct.std::__1::__hash_node_base.258" = type { %"struct.std::__1::__hash_node_base.258"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator.260" }
%"class.std::__1::__bucket_list_deallocator.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base.258" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__cxx_atomic_impl.149" }
%"struct.std::__1::__cxx_atomic_impl.149" = type { %"struct.std::__1::__cxx_atomic_base_impl.150" }
%"struct.std::__1::__cxx_atomic_base_impl.150" = type { i8 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.24", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.156", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.160", %"class.std::__1::vector.160", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.175", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.412", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.442", %"class.std::__1::shared_ptr.448", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.471", %"class.std::__1::unique_ptr.497", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.503", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.516", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.322", i8, [7 x i8], %"class.std::__1::unordered_map.522", %"class.std::__1::unordered_map.548", %"class.std::__1::unordered_map.522", %"class.std::__1::unordered_map.572", %"class.std::__1::vector.600", i8, %"class.std::__1::unique_ptr.607", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.685", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.691", %"class.std::__1::unique_ptr.712", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.722", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.842", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.855", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.865", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.876", %"struct.std::__1::atomic.147", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.951", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.994"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1006", i32, i8, i8, i32, i32, %"class.std::__1::vector.1012", %"class.std::__1::vector.1012", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1019", i64, %"class.std::__1::unordered_map.1020", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.509", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.155", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1076", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.680", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.680" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl.682" }
%"struct.std::__1::__cxx_atomic_impl.682" = type { %"struct.std::__1::__cxx_atomic_base_impl.683" }
%"struct.std::__1::__cxx_atomic_base_impl.683" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.509" }
%"class.std::__1::shared_ptr.691" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.134", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.692", %"class.std::__1::unique_ptr.706" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.136" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.63", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.695" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.134", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.695" = type { %"class.std::__1::__vector_base.696" }
%"class.std::__1::__vector_base.696" = type { %"class.std::__1::unique_ptr.697"*, %"class.std::__1::unique_ptr.697"*, %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.std::__1::unique_ptr.697"* }
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.715", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.715" = type { %"struct.std::__1::__atomic_base.716" }
%"struct.std::__1::__atomic_base.716" = type { %"struct.std::__1::__cxx_atomic_impl.717" }
%"struct.std::__1::__cxx_atomic_impl.717" = type { %"struct.std::__1::__cxx_atomic_base_impl.718" }
%"struct.std::__1::__cxx_atomic_base_impl.718" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.722" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.723", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.723" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.724", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { %"class.std::__1::unique_ptr.726"*, %"class.std::__1::unique_ptr.726"*, %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::unique_ptr.726" = type opaque
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.std::__1::unique_ptr.726"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.732", %"class.std::__1::unique_ptr.738", %"struct.std::__1::atomic.147", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.750", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.762", %"class.std::__1::unique_ptr.768", %"class.std::__1::set.774", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.774" = type { %"class.std::__1::__tree.775" }
%"class.std::__1::__tree.775" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.776", %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.783" }
%"class.v8::internal::TaggedImpl.783" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.782" }
%"class.v8::internal::TaggedImpl.782" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.650", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.784", %"class.v8::internal::DetachableVector.785", %"class.v8::internal::DetachableVector.784", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.785" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.784" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.644", %"class.std::__1::unique_ptr.449" }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.452", %"class.std::__1::set.460" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.452" = type { %"class.std::__1::__tree.453" }
%"class.std::__1::__tree.453" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::set.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.786", %"class.std::__1::vector.792", %"class.std::__1::unique_ptr.799", %"class.std::__1::vector.806", %"class.std::__1::unique_ptr.813", i64, %"class.std::__1::vector.819", %"class.std::__1::vector.827", %"class.std::__1::vector.835", i8, i8, i32 }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.794" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.v8::internal::GlobalHandles::NodeSpace.802"* }
%"class.v8::internal::GlobalHandles::NodeSpace.802" = type opaque
%"class.std::__1::vector.806" = type { %"class.std::__1::__vector_base.807" }
%"class.std::__1::__vector_base.807" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.808" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"struct.std::__1::pair.821"*, %"struct.std::__1::pair.821"*, %"class.std::__1::__compressed_pair.822" }
%"struct.std::__1::pair.821" = type opaque
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::pair.821"* }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { %"struct.std::__1::pair.829"*, %"struct.std::__1::pair.829"*, %"class.std::__1::__compressed_pair.830" }
%"struct.std::__1::pair.829" = type opaque
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.std::__1::pair.829"* }
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.837" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.656", %"class.std::__1::vector.842" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { i64**, i64**, %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.849" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.855" = type { %"struct.std::__1::__atomic_base.856" }
%"struct.std::__1::__atomic_base.856" = type { %"struct.std::__1::__cxx_atomic_impl.857" }
%"struct.std::__1::__cxx_atomic_impl.857" = type { %"struct.std::__1::__cxx_atomic_base_impl.858" }
%"struct.std::__1::__cxx_atomic_base_impl.858" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.865" = type { %"struct.std::__1::__atomic_base.866" }
%"struct.std::__1::__atomic_base.866" = type { %"struct.std::__1::__cxx_atomic_impl.867" }
%"struct.std::__1::__cxx_atomic_impl.867" = type { %"struct.std::__1::__cxx_atomic_base_impl.868" }
%"struct.std::__1::__cxx_atomic_base_impl.868" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.872 }
%union.anon.872 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.902", %"class.v8::internal::Handle.908", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.909", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.908" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.909" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"class.std::__1::unique_ptr.924", %"class.std::__1::unique_ptr.930", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.936", %"class.std::__1::vector.942", %"struct.std::__1::pair.950" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"class.std::__1::unique_ptr.918"*, %"class.std::__1::unique_ptr.918"*, %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::unique_ptr.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.std::__1::unique_ptr.918"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.942" = type { %"class.std::__1::__vector_base.943" }
%"class.std::__1::__vector_base.943" = type { %"struct.std::__1::pair.944"*, %"struct.std::__1::pair.944"*, %"class.std::__1::__compressed_pair.945" }
%"struct.std::__1::pair.944" = type opaque
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"struct.std::__1::pair.944"* }
%"struct.std::__1::pair.950" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.684"*, i16, i8*)*, i8* }
%"class.v8::Local.684" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.954", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.954" = type { %"class.std::__1::__hash_table.955" }
%"class.std::__1::__hash_table.955" = type <{ %"class.std::__1::unique_ptr.956", %"class.std::__1::__compressed_pair.966", %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.975", [4 x i8] }>
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958", %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::__hash_node_base.959"** }
%"struct.std::__1::__hash_node_base.959" = type { %"struct.std::__1::__hash_node_base.959"* }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.std::__1::__bucket_list_deallocator.961" }
%"class.std::__1::__bucket_list_deallocator.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"struct.std::__1::__hash_node_base.959" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.989" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.983"**, %"struct.std::__1::pair.983"**, %"struct.std::__1::pair.983"**, %"class.std::__1::__compressed_pair.984" }
%"struct.std::__1::pair.983" = type opaque
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.std::__1::pair.983"** }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.994" = type { %"class.std::__1::__vector_base.995" }
%"class.std::__1::__vector_base.995" = type { %"class.v8::internal::Handle.996"*, %"class.v8::internal::Handle.996"*, %"class.std::__1::__compressed_pair.997" }
%"class.v8::internal::Handle.996" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.v8::internal::Handle.996"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1002" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1002" = type { %"class.std::__1::__vector_base.1003" }
%"class.std::__1::__vector_base.1003" = type { %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"*, %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::pair.983"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.860", i32, %"class.v8::Local.684" }
%"class.v8::Local.860" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.656", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1012" = type { %"class.std::__1::__vector_base.1013" }
%"class.std::__1::__vector_base.1013" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1019" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.155" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1044", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1073", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1074", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1044" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1069, %union.anon.1071, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1069 = type { i64 }
%union.anon.1071 = type { i64 }
%"class.std::__1::weak_ptr.1073" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.155" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1074" = type { %"class.v8::PersistentBase.1075" }
%"class.v8::PersistentBase.1075" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1045", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1045" = type { %"class.std::__1::__hash_table.1046" }
%"class.std::__1::__hash_table.1046" = type <{ %"class.std::__1::unique_ptr.1047", %"class.std::__1::__compressed_pair.1057", %"class.std::__1::__compressed_pair.1062", %"class.std::__1::__compressed_pair.1065", [4 x i8] }>
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049", %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.std::__1::__hash_node_base.1050"** }
%"struct.std::__1::__hash_node_base.1050" = type { %"struct.std::__1::__hash_node_base.1050"* }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.std::__1::__bucket_list_deallocator.1052" }
%"class.std::__1::__bucket_list_deallocator.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::__hash_node_base.1050" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.637", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.442", %"class.std::__1::vector.672", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.637" = type { %"struct.std::__1::__atomic_base.638" }
%"struct.std::__1::__atomic_base.638" = type { %"struct.std::__1::__cxx_atomic_impl.639" }
%"struct.std::__1::__cxx_atomic_impl.639" = type { %"struct.std::__1::__cxx_atomic_base_impl.640" }
%"struct.std::__1::__cxx_atomic_base_impl.640" = type { i32 }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.656" }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.672" = type { %"class.std::__1::__vector_base.673" }
%"class.std::__1::__vector_base.673" = type { %"struct.std::__1::pair.674"*, %"struct.std::__1::pair.674"*, %"class.std::__1::__compressed_pair.675" }
%"struct.std::__1::pair.674" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::pair.674"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.92" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.33", %"class.std::__1::vector.33", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.35" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.40" }
%"class.std::__1::__hash_table.40" = type <{ %"class.std::__1::unique_ptr.41", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.44"** }
%"struct.std::__1::__hash_node_base.44" = type { %"struct.std::__1::__hash_node_base.44"* }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__bucket_list_deallocator.46" }
%"class.std::__1::__bucket_list_deallocator.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base.44" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.19", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.81", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.19", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.69" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.85", i8, [7 x i8] }>
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { i64*, i64*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.861", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.861" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.98" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.std::__1::pair.100"*, %"struct.std::__1::pair.100"*, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::pair.100" = type { i32, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::pair.100"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.106" }
%"class.std::__1::unordered_map.106" = type { %"class.std::__1::__hash_table.107" }
%"class.std::__1::__hash_table.107" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base.111"** }
%"struct.std::__1::__hash_node_base.111" = type { %"struct.std::__1::__hash_node_base.111"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator.113" }
%"class.std::__1::__bucket_list_deallocator.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base.111" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.147", %"struct.std::__1::atomic.151", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__cxx_atomic_impl.153" }
%"struct.std::__1::__cxx_atomic_impl.153" = type { %"struct.std::__1::__cxx_atomic_base_impl.154" }
%"struct.std::__1::__cxx_atomic_base_impl.154" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.162" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::GCTracer::Event", %"class.v8::internal::GCTracer::Event", i64, double, double, double, double, double, [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"], double, i64, i64, i64, double, i64, i64, i64, double, i32, double, double, double, double, %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer.171", %"class.v8::base::Mutex", [124 x %"struct.v8::internal::GCTracer::BackgroundCounter"] }
%"class.v8::internal::GCTracer::Event" = type { i32, i32, i8*, double, double, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, [124 x double], [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"] }
%"struct.v8::internal::GCTracer::IncrementalMarkingInfos" = type <{ double, double, i32, [4 x i8] }>
%"class.v8::base::RingBuffer" = type { [10 x %"struct.std::__1::pair.170"], i32, i32 }
%"struct.std::__1::pair.170" = type { i64, double }
%"class.v8::base::RingBuffer.171" = type { [10 x double], i32, i32 }
%"struct.v8::internal::GCTracer::BackgroundCounter" = type { double }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.277", %"class.std::__1::vector.277", %"class.std::__1::vector.277", %"class.std::__1::vector.284", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.178", %"class.std::__1::vector.179", %"class.std::__1::vector.186", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.178" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, [16 x %"class.v8::internal::HeapObject"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.181" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"class.std::__1::unique_ptr.188"*, %"class.std::__1::unique_ptr.188"*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::unique_ptr.188" = type opaque
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.std::__1::unique_ptr.188"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, i64, [64 x %"class.v8::internal::TransitionArray"] }
%"class.v8::internal::TransitionArray" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, i64, [64 x %"class.v8::internal::EphemeronHashTable"] }
%"class.v8::internal::EphemeronHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, i64, [64 x %"struct.v8::internal::Ephemeron"] }
%"struct.v8::internal::Ephemeron" = type { %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, i64, [64 x %"struct.std::__1::pair.1162"] }
%"struct.std::__1::pair.1162" = type { %"class.v8::internal::HeapObject", %"class.v8::internal::CompressedHeapObjectSlot" }
%"class.v8::internal::CompressedHeapObjectSlot" = type { %"class.v8::internal::SlotBase.1163" }
%"class.v8::internal::SlotBase.1163" = type { i64 }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, i64, [64 x %"struct.std::__1::pair.1164"] }
%"struct.std::__1::pair.1164" = type { %"class.v8::internal::HeapObject", %"class.v8::internal::Code" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, i64, [64 x %"class.v8::internal::JSWeakRef"] }
%"class.v8::internal::JSWeakRef" = type { %"class.v8::internal::TorqueGeneratedJSWeakRef" }
%"class.v8::internal::TorqueGeneratedJSWeakRef" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, i64, [64 x %"class.v8::internal::WeakCell"] }
%"class.v8::internal::WeakCell" = type { %"class.v8::internal::TorqueGeneratedWeakCell" }
%"class.v8::internal::TorqueGeneratedWeakCell" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, i64, [64 x %"class.v8::internal::SharedFunctionInfo"] }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, i64, [64 x %"class.v8::internal::JSFunction"] }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.210", i8, i64 }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.226" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.178"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.226" = type { %"class.std::__1::__hash_table.227" }
%"class.std::__1::__hash_table.227" = type <{ %"class.std::__1::unique_ptr.228", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.246", [4 x i8] }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.231"** }
%"struct.std::__1::__hash_node_base.231" = type { %"struct.std::__1::__hash_node_base.231"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator.233" }
%"class.std::__1::__bucket_list_deallocator.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base.231" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*, %"class.std::__1::__compressed_pair.287" }
%"struct.std::__1::pair.286" = type opaque
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::pair.286"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.277"], [3 x %"class.std::__1::vector.277"], i8, %"struct.std::__1::atomic.147", [6 x i8], %"class.std::__1::vector.277", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.296"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.277", %"class.std::__1::vector.277", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.296" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, i64, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.322", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.315"], %"class.std::__1::unique_ptr" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.354", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.358", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.363" }
%"struct.std::__1::atomic.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__cxx_atomic_impl.356" }
%"struct.std::__1::__cxx_atomic_impl.356" = type { %"struct.std::__1::__cxx_atomic_base_impl.357" }
%"struct.std::__1::__cxx_atomic_base_impl.357" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.358" = type { %"struct.std::__1::__atomic_base.359" }
%"struct.std::__1::__atomic_base.359" = type { %"struct.std::__1::__cxx_atomic_impl.360" }
%"struct.std::__1::__cxx_atomic_impl.360" = type { %"struct.std::__1::__cxx_atomic_base_impl.361" }
%"struct.std::__1::__cxx_atomic_base_impl.361" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.363" = type { %"class.std::__1::__hash_table.364" }
%"class.std::__1::__hash_table.364" = type <{ %"class.std::__1::unique_ptr.365", %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.383", [4 x i8] }>
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367", %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"struct.std::__1::__hash_node_base.368"** }
%"struct.std::__1::__hash_node_base.368" = type { %"struct.std::__1::__hash_node_base.368"* }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::__bucket_list_deallocator.370" }
%"class.std::__1::__bucket_list_deallocator.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.368" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.405" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.v8::internal::DefaultEmbedderRootsHandler", i32, i8, [3 x i8], %"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics", %"struct.v8::WrapperDescriptor", [4 x i8] }>
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.v8::internal::DefaultEmbedderRootsHandler" = type { %"class.v8::EmbedderRootsHandler", %"class.v8::EmbedderHeapTracer"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics" = type { i64, i64, i64 }
%"struct.v8::WrapperDescriptor" = type <{ i32, i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.448" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.467", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.449", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.467" = type { %"struct.std::__1::__atomic_base.468" }
%"struct.std::__1::__atomic_base.468" = type { %"struct.std::__1::__cxx_atomic_impl.469" }
%"struct.std::__1::__cxx_atomic_impl.469" = type { %"struct.std::__1::__cxx_atomic_base_impl.470" }
%"struct.std::__1::__cxx_atomic_base_impl.470" = type { i8* }
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.471" = type { %"class.std::__1::__hash_table.472" }
%"class.std::__1::__hash_table.472" = type <{ %"class.std::__1::unique_ptr.473", %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.491", [4 x i8] }>
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475", %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.std::__1::__hash_node_base.476"** }
%"struct.std::__1::__hash_node_base.476" = type { %"struct.std::__1::__hash_node_base.476"* }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.std::__1::__bucket_list_deallocator.478" }
%"class.std::__1::__bucket_list_deallocator.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::__hash_node_base.476" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.509", %"class.std::__1::vector.509" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.322" = type { %"class.std::__1::__hash_table.323" }
%"class.std::__1::__hash_table.323" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.343", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base.327"** }
%"struct.std::__1::__hash_node_base.327" = type { %"struct.std::__1::__hash_node_base.327"* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__bucket_list_deallocator.329" }
%"class.std::__1::__bucket_list_deallocator.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.327" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unordered_map.548" = type { %"class.std::__1::__hash_table.549" }
%"class.std::__1::__hash_table.549" = type <{ %"class.std::__1::unique_ptr.550", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.565", %"class.std::__1::__compressed_pair.568", [4 x i8] }>
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552", %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.std::__1::__hash_node_base.553"** }
%"struct.std::__1::__hash_node_base.553" = type { %"struct.std::__1::__hash_node_base.553"* }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.std::__1::__bucket_list_deallocator.555" }
%"class.std::__1::__bucket_list_deallocator.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.553" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unordered_map.522" = type { %"class.std::__1::__hash_table.523" }
%"class.std::__1::__hash_table.523" = type <{ %"class.std::__1::unique_ptr.524", %"class.std::__1::__compressed_pair.534", %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.542", [4 x i8] }>
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526", %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.std::__1::__hash_node_base.527"** }
%"struct.std::__1::__hash_node_base.527" = type { %"struct.std::__1::__hash_node_base.527"* }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::__bucket_list_deallocator.529" }
%"class.std::__1::__bucket_list_deallocator.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.527" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unordered_map.572" = type { %"class.std::__1::__hash_table.573" }
%"class.std::__1::__hash_table.573" = type <{ %"class.std::__1::unique_ptr.574", %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.589", %"class.std::__1::__compressed_pair.594", [4 x i8] }>
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576", %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.577"** }
%"struct.std::__1::__hash_node_base.577" = type { %"struct.std::__1::__hash_node_base.577"* }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.std::__1::__bucket_list_deallocator.579" }
%"class.std::__1::__bucket_list_deallocator.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.577" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::vector.600" = type { %"class.std::__1::__vector_base.601" }
%"class.std::__1::__vector_base.601" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ConcurrentMarking::PauseScope" = type <{ %"class.v8::internal::ConcurrentMarking"*, i8, [7 x i8] }>
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::tuple.1192" = type { %"struct.std::__1::__tuple_impl.1193" }
%"struct.std::__1::__tuple_impl.1193" = type { %"class.std::__1::__tuple_leaf.1194" }
%"class.std::__1::__tuple_leaf.1194" = type { i64* }
%"class.std::__1::tuple.1177" = type { i8 }
%"class.v8::internal::BytecodeArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8::internal::MemoryChunk"** }
%"class.v8::internal::JSArrayBuffer" = type { %"class.v8::internal::TorqueGeneratedJSArrayBuffer" }
%"class.v8::internal::TorqueGeneratedJSArrayBuffer" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::ConcurrentMarkingVisitor" = type { %"class.v8::internal::MarkingVisitorBase.base", %"class.v8::internal::ConcurrentMarkingState", %"class.std::__1::unordered_map.613"*, %"class.v8::internal::SlotSnapshot" }
%"class.v8::internal::MarkingVisitorBase.base" = type <{ %"class.v8::internal::HeapVisitor", %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::WeakObjects"*, %"class.v8::internal::Heap"*, i32, i32, i32, i8, i8, i8 }>
%"class.v8::internal::HeapVisitor" = type { %"class.v8::internal::ObjectVisitor" }
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.v8::internal::ConcurrentMarkingState" = type { %"class.std::__1::unordered_map.613"* }
%"class.v8::internal::SlotSnapshot" = type { i32, [255 x %"struct.std::__1::pair.1136"] }
%"struct.std::__1::pair.1136" = type { %"class.v8::internal::CompressedObjectSlot", %"class.v8::internal::Object" }
%"class.v8::internal::CompressedObjectSlot" = type { %"class.v8::internal::SlotBase.1137" }
%"class.v8::internal::SlotBase.1137" = type { i64 }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::MarkingVisitorBase" = type <{ %"class.v8::internal::HeapVisitor", %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::WeakObjects"*, %"class.v8::internal::Heap"*, i32, i32, i32, i8, i8, i8, i8 }>
%"class.v8::internal::wasm::ArrayType" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::StructType" = type { i32, i32*, %"class.v8::internal::wasm::ValueType"*, i8* }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::JobTask" = type { i32 (...)** }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.618", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1150" }
%"struct.std::__1::pair.1150" = type { %"class.v8::internal::MemoryChunk"*, %"struct.v8::internal::MemoryChunkData" }
%"struct.v8::internal::MemoryChunkData" = type { i64, %"class.std::__1::unique_ptr.1151" }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::internal::TypedSlots"* }
%"class.v8::internal::SlotSet::Bucket" = type { [32 x i32] }
%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo" = type { %"class.v8::internal::MemoryChunk"*, i32, i8, i32 }
%"class.v8::internal::ConcurrentMarking::JobTask" = type <{ %"class.v8::JobTask", %"class.v8::internal::ConcurrentMarking"*, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::GCTracer::Scope" = type { %"class.v8::internal::GCTracer"*, i32, i32, double, %"class.v8::internal::RuntimeCallTimer", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::base::Optional.1246" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::base::Optional.1246" = type { %"class.v8::base::internal::OptionalBase.1247" }
%"class.v8::base::internal::OptionalBase.1247" = type { %"struct.v8::base::internal::OptionalStorage.1248" }
%"struct.v8::base::internal::OptionalStorage.1248" = type { %"struct.v8::base::internal::OptionalStorageBase.1249" }
%"struct.v8::base::internal::OptionalStorageBase.1249" = type { i8, %union.anon.1250 }
%union.anon.1250 = type { %"class.v8::internal::WorkerThreadRuntimeCallStatsScope" }
%"class.v8::internal::WorkerThreadRuntimeCallStatsScope" = type { %"class.v8::internal::RuntimeCallStats"* }

$_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor16ProcessEphemeronENS0_10HeapObjectES2_ = comdat any

$_ZN2v88internal8WorklistINS0_15TransitionArrayELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_9EphemeronELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_24CompressedHeapObjectSlotEEELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_9JSWeakRefELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_8WeakCellELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_4CodeEEELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_18SharedFunctionInfoELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_10JSFunctionELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitorD0Ev = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES6_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm = comdat any

$_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEED0Ev = comdat any

$_ZN2v88internal13ObjectVisitorD2Ev = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S4_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor15VisitConsStringENS0_3MapENS0_10ConsStringE = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor17VisitSlicedStringENS0_3MapENS0_12SlicedStringE = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_13JSArrayBufferENS3_14BodyDescriptorEEEiNS0_3MapET_ = comdat any

$_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_10JSDataViewENS3_14BodyDescriptorEEEiNS0_3MapET_ = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_12JSTypedArrayEEEiNS0_3MapET_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_9JSWeakRefENS3_14BodyDescriptorEEEiNS0_3MapET_ = comdat any

$_ZN2v88internal13PrototypeInfo14BodyDescriptor11IterateBodyINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_ = comdat any

$_ZN2v88internal24ConcurrentMarkingVisitor23VisitPointersInSnapshotENS0_10HeapObjectERKNS0_12SlotSnapshotE = comdat any

$_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_8JSObjectEEEiNS0_3MapET_ = comdat any

$_ZN2v87JobTaskD2Ev = comdat any

$_ZN2v88internal17ConcurrentMarking7JobTaskD0Ev = comdat any

$_ZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateE = comdat any

$_ZNK2v88internal17ConcurrentMarking7JobTask17GetMaxConcurrencyEm = comdat any

$_ZTVN2v88internal24ConcurrentMarkingVisitorE = comdat any

$_ZTVN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEEE = comdat any

$_ZTVN2v88internal17ConcurrentMarking7JobTaskE = comdat any

$_ZZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic381 = comdat any

@_ZN2v88internal29FLAG_trace_concurrent_markingE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [37 x i8] c"Starting concurrent marking task %d\0A\00", align 1
@_ZZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjbE28trace_event_unique_atomic505 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [26 x i8] c"disabled-by-default-v8.gc\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"ConcurrentMarking::Run Preempted\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"Task %d concurrently marked %dKB in %.2fms\0A\00", align 1
@_ZN2v88internal23FLAG_concurrent_markingE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal24ConcurrentMarkingVisitorE = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentMarkingVisitor"*)* @_ZN2v88internal24ConcurrentMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE to i8*)] }, comdat, align 8
@_ZTVN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEEE = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEED0Ev to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::MarkingVisitorBase"*, i64)* @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN2v88internal10TypedSlotsE = external unnamed_addr constant { [4 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"!host_.is_null()\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1
@_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE = external constant [15 x i16], align 16
@.str.9 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@_ZTVN2v88internal17ConcurrentMarking7JobTaskE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::JobTask"*)* @_ZN2v87JobTaskD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentMarking::JobTask"*)* @_ZN2v88internal17ConcurrentMarking7JobTaskD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentMarking::JobTask"*, %"class.v8::JobDelegate"*)* @_ZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateE to i8*), i8* bitcast (i64 (%"class.v8::internal::ConcurrentMarking::JobTask"*, i64)* @_ZNK2v88internal17ConcurrentMarking7JobTask17GetMaxConcurrencyEm to i8*)] }, comdat, align 8
@_ZZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic381 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.10 = private unnamed_addr constant [44 x i8] c"devtools.timeline,disabled-by-default-v8.gc\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1

@_ZN2v88internal17ConcurrentMarkingC1EPNS0_4HeapEPNS0_16MarkingWorklistsEPNS0_11WeakObjectsE = hidden unnamed_addr alias void (%"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*), void (%"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*)* @_ZN2v88internal17ConcurrentMarkingC2EPNS0_4HeapEPNS0_16MarkingWorklistsEPNS0_11WeakObjectsE
@_ZN2v88internal17ConcurrentMarking10PauseScopeC1EPS1_ = hidden unnamed_addr alias void (%"class.v8::internal::ConcurrentMarking::PauseScope"*, %"class.v8::internal::ConcurrentMarking"*), void (%"class.v8::internal::ConcurrentMarking::PauseScope"*, %"class.v8::internal::ConcurrentMarking"*)* @_ZN2v88internal17ConcurrentMarking10PauseScopeC2EPS1_
@_ZN2v88internal17ConcurrentMarking10PauseScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::ConcurrentMarking::PauseScope"*), void (%"class.v8::internal::ConcurrentMarking::PauseScope"*)* @_ZN2v88internal17ConcurrentMarking10PauseScopeD2Ev

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_10ConsStringEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_12SlicedStringEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_10ThinStringEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_16SeqOneByteStringEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_16SeqTwoByteStringEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_10FixedArrayEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal24ConcurrentMarkingVisitor4CastINS0_21StrongDescriptorArrayEEET_NS0_10HeapObjectE(i64 returned) local_unnamed_addr #0 align 2 {
  ret i64 %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarkingC2EPNS0_4HeapEPNS0_16MarkingWorklistsEPNS0_11WeakObjectsE(%"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.v8::internal::ConcurrentMarking"* %0 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 1
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 2
  store %"class.v8::internal::MarkingWorklists"* %2, %"class.v8::internal::MarkingWorklists"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 3
  store %"class.v8::internal::WeakObjects"* %3, %"class.v8::internal::WeakObjects"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 0
  %10 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 0, i32 1, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.633"* %10 to i32*
  %12 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 0, i32 4
  %14 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 0, i32 4, i32 0, i32 0, i32 3
  %15 = bitcast %"class.std::__1::__compressed_pair.273"* %14 to i32*
  %16 = bitcast %"class.v8::internal::NativeContextStats"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1
  %18 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1, i32 1, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.633"* %18 to i32*
  %20 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1, i32 4
  %22 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1, i32 4, i32 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.273"* %22 to i32*
  %24 = bitcast %"class.v8::internal::NativeContextStats"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2
  %26 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2, i32 1, i32 0, i32 3
  %27 = bitcast %"class.std::__1::__compressed_pair.633"* %26 to i32*
  %28 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %27, align 4
  %29 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2, i32 4, i32 0, i32 0, i32 3
  %31 = bitcast %"class.std::__1::__compressed_pair.273"* %30 to i32*
  %32 = bitcast %"class.v8::internal::NativeContextStats"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %31, align 4
  %33 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3
  %34 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3, i32 1, i32 0, i32 3
  %35 = bitcast %"class.std::__1::__compressed_pair.633"* %34 to i32*
  %36 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %35, align 4
  %37 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3, i32 4
  %38 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3, i32 4, i32 0, i32 0, i32 3
  %39 = bitcast %"class.std::__1::__compressed_pair.273"* %38 to i32*
  %40 = bitcast %"class.v8::internal::NativeContextStats"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %39, align 4
  %41 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4
  %42 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4, i32 1, i32 0, i32 3
  %43 = bitcast %"class.std::__1::__compressed_pair.633"* %42 to i32*
  %44 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4, i32 4
  %46 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4, i32 4, i32 0, i32 0, i32 3
  %47 = bitcast %"class.std::__1::__compressed_pair.273"* %46 to i32*
  %48 = bitcast %"class.v8::internal::NativeContextStats"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %47, align 4
  %49 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5
  %50 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5, i32 1, i32 0, i32 3
  %51 = bitcast %"class.std::__1::__compressed_pair.633"* %50 to i32*
  %52 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %51, align 4
  %53 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5, i32 4
  %54 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5, i32 4, i32 0, i32 0, i32 3
  %55 = bitcast %"class.std::__1::__compressed_pair.273"* %54 to i32*
  %56 = bitcast %"class.v8::internal::NativeContextStats"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %55, align 4
  %57 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6
  %58 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6, i32 1, i32 0, i32 3
  %59 = bitcast %"class.std::__1::__compressed_pair.633"* %58 to i32*
  %60 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %59, align 4
  %61 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6, i32 4
  %62 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6, i32 4, i32 0, i32 0, i32 3
  %63 = bitcast %"class.std::__1::__compressed_pair.273"* %62 to i32*
  %64 = bitcast %"class.v8::internal::NativeContextStats"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %63, align 4
  %65 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7
  %66 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7, i32 1, i32 0, i32 3
  %67 = bitcast %"class.std::__1::__compressed_pair.633"* %66 to i32*
  %68 = bitcast %"struct.v8::internal::ConcurrentMarking::TaskState"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 40, i1 false) #13
  store i32 1065353216, i32* %67, align 4
  %69 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7, i32 4
  %70 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7, i32 4, i32 0, i32 0, i32 3
  %71 = bitcast %"class.std::__1::__compressed_pair.273"* %70 to i32*
  %72 = bitcast %"class.v8::internal::NativeContextStats"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %71, align 4
  %73 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %74, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjb(%"class.v8::internal::ConcurrentMarking"*, %"class.v8::JobDelegate"*, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca [2 x %"class.std::__1::unique_ptr.1210"], align 16
  %7 = alloca %"class.std::__1::tuple.1192", align 8
  %8 = alloca %"class.std::__1::tuple.1177", align 1
  %9 = alloca i64, align 8
  %10 = alloca %"class.v8::internal::BytecodeArray", align 8
  %11 = alloca %"class.v8::internal::DescriptorArray", align 8
  %12 = alloca %"class.std::__1::tuple", align 8
  %13 = alloca %"class.std::__1::tuple.1177", align 1
  %14 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %15 = alloca %"class.v8::internal::HeapObject", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.v8::internal::HeapObject", align 8
  %19 = alloca %"class.std::__1::tuple", align 8
  %20 = alloca %"class.std::__1::tuple.1177", align 1
  %21 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %22 = alloca %"class.v8::internal::HeapObject", align 8
  %23 = alloca %"class.v8::internal::DescriptorArray", align 8
  %24 = alloca %"class.v8::internal::JSArrayBuffer", align 8
  %25 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %26 = alloca %"class.v8::internal::HeapObject", align 8
  %27 = alloca %"class.v8::internal::HeapObject", align 8
  %28 = alloca %"class.v8::internal::RelocIterator", align 8
  %29 = alloca %"class.v8::internal::BytecodeArray", align 8
  %30 = alloca %"class.v8::internal::MarkingWorklists::Local", align 8
  %31 = alloca %"class.v8::internal::ConcurrentMarkingVisitor", align 8
  %32 = alloca %"struct.v8::internal::Ephemeron", align 8
  %33 = alloca %"class.v8::internal::HeapObject", align 8
  %34 = alloca i64, align 8
  %35 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %36 = alloca %"struct.v8::internal::Ephemeron", align 8
  %37 = bitcast %"class.v8::JobDelegate"* %1 to i8 (%"class.v8::JobDelegate"*)***
  %38 = load i8 (%"class.v8::JobDelegate"*)**, i8 (%"class.v8::JobDelegate"*)*** %37, align 8
  %39 = getelementptr inbounds i8 (%"class.v8::JobDelegate"*)*, i8 (%"class.v8::JobDelegate"*)** %38, i64 2
  %40 = load i8 (%"class.v8::JobDelegate"*)*, i8 (%"class.v8::JobDelegate"*)** %39, align 8
  %41 = tail call zeroext i8 %40(%"class.v8::JobDelegate"* %1) #13
  %42 = add i8 %41, 1
  %43 = zext i8 %42 to i64
  %44 = bitcast %"class.v8::internal::MarkingWorklists::Local"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 2
  %46 = load %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::MarkingWorklists"** %45, align 8
  call void @_ZN2v88internal16MarkingWorklists5LocalC1EPS1_(%"class.v8::internal::MarkingWorklists::Local"* nonnull %30, %"class.v8::internal::MarkingWorklists"* %46) #13
  %47 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4152, i8* nonnull %47) #13
  %48 = zext i8 %42 to i32
  %49 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 3
  %50 = bitcast %"class.v8::internal::WeakObjects"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 1
  %53 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %53, i64 0, i32 96, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LocalEmbedderHeapTracer", %"class.v8::internal::LocalEmbedderHeapTracer"* %55, i64 0, i32 1
  %57 = load %"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer"** %56, align 8
  %58 = icmp ne %"class.v8::EmbedderHeapTracer"* %57, null
  %59 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %43, i32 1
  %60 = zext i1 %58 to i8
  %61 = zext i1 %4 to i8
  %62 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 1
  store %"class.v8::internal::MarkingWorklists::Local"* %30, %"class.v8::internal::MarkingWorklists::Local"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 2
  %65 = bitcast %"class.v8::internal::WeakObjects"** %64 to i64*
  store i64 %51, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 3
  store %"class.v8::internal::Heap"* %53, %"class.v8::internal::Heap"** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 4
  store i32 %48, i32* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 5
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 6
  store i32 %2, i32* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 7
  store i8 %60, i8* %70, align 4
  %71 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 8
  store i8 %61, i8* %71, align 1
  %72 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 9
  %73 = call zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"* %53) #13
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %72, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal24ConcurrentMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 1, i32 0
  store %"class.std::__1::unordered_map.613"* %59, %"class.std::__1::unordered_map.613"** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 2
  store %"class.std::__1::unordered_map.613"* %59, %"class.std::__1::unordered_map.613"** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 3, i32 0
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 3, i32 1, i64 0
  %79 = bitcast %"struct.std::__1::pair.1136"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 4080, i1 false) #13
  %80 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %43, i32 2
  %81 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %43, i32 4
  %82 = bitcast %"class.v8::internal::Heap"** %52 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, -41416
  %85 = inttoptr i64 %84 to %"class.v8::internal::Isolate"*
  %86 = load i8, i8* @_ZN2v88internal29FLAG_trace_concurrent_markingE, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %5
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %85, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 %48) #13
  br label %89

89:                                               ; preds = %5, %88
  %90 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %91 = bitcast %"class.v8::Platform"* %90 to double (%"class.v8::Platform"*)***
  %92 = load double (%"class.v8::Platform"*)**, double (%"class.v8::Platform"*)*** %91, align 8
  %93 = getelementptr inbounds double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %92, i64 13
  %94 = load double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %93, align 8
  %95 = call double %94(%"class.v8::Platform"* %90) #13
  %96 = fmul double %95, 1.000000e+03
  %97 = bitcast %"struct.v8::internal::Ephemeron"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 16, i1 false) #13
  %98 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %99 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %98, i64 0, i32 2
  %100 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_(%"class.v8::internal::Worklist.196"* %99, i32 %48, %"struct.v8::internal::Ephemeron"* nonnull %32)
  br i1 %100, label %101, label %113

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"struct.v8::internal::Ephemeron", %"struct.v8::internal::Ephemeron"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.v8::internal::Ephemeron", %"struct.v8::internal::Ephemeron"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %101, %104
  %105 = phi i8 [ 0, %101 ], [ %109, %104 ]
  %106 = load i64, i64* %102, align 8
  %107 = load i64, i64* %103, align 8
  %108 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor16ProcessEphemeronENS0_10HeapObjectES2_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %106, i64 %107)
  %109 = select i1 %108, i8 1, i8 %105
  %110 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %111 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %110, i64 0, i32 2
  %112 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_(%"class.v8::internal::Worklist.196"* %111, i32 %48, %"struct.v8::internal::Ephemeron"* nonnull %32)
  br i1 %112, label %104, label %113

113:                                              ; preds = %104, %89
  %114 = phi i8 [ 0, %89 ], [ %109, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #13
  %115 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 5
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp ne i8 %116, 0
  %118 = bitcast %"class.v8::internal::HeapObject"* %33 to i8*
  %119 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %33, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 2, i32 2
  %121 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 2, i32 1
  %122 = bitcast %"class.heap::base::internal::SegmentBase"** %121 to i64*
  %123 = bitcast %"class.heap::base::internal::SegmentBase"** %120 to i64*
  %124 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 2, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 0, i32 4
  %126 = bitcast i64* %34 to i8*
  %127 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 3
  %128 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 0
  %129 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %31 to %"class.v8::internal::MarkingVisitorBase"*
  %130 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 8
  %131 = bitcast %"class.v8::internal::HeapVisitor"* %130 to %"class.v8::internal::SlotSnapshot"*
  %132 = bitcast %"class.v8::internal::HeapVisitor"* %130 to i32*
  %133 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 9
  %134 = bitcast %"class.v8::internal::HeapVisitor"* %133 to i64*
  %135 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 10
  %136 = bitcast %"class.v8::internal::HeapVisitor"* %135 to i64*
  %137 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 0, i32 0, i32 0
  %138 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %31 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %139 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 5
  %140 = bitcast %"class.v8::internal::HeapVisitor"* %139 to i32*
  %141 = bitcast %"class.v8::internal::BytecodeArray"* %10 to i8*
  %142 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 2
  %144 = bitcast %"class.v8::internal::HeapVisitor"* %143 to %"class.v8::internal::WeakObjects"**
  %145 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 4
  %146 = bitcast %"class.v8::internal::HeapVisitor"* %145 to i32*
  %147 = bitcast %"class.v8::internal::DescriptorArray"* %11 to i8*
  %148 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 6
  %150 = bitcast %"class.v8::internal::HeapObject"* %15 to i8*
  %151 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %15, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.v8::internal::MemoryChunk"** %14 to i8*
  %153 = bitcast %"class.v8::internal::HeapVisitor"* %149 to %"class.std::__1::unordered_map.613"**
  %154 = bitcast %"class.std::__1::tuple"* %12 to i8*
  %155 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.std::__1::tuple.1177", %"class.std::__1::tuple.1177"* %13, i64 0, i32 0
  %157 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 1
  %158 = bitcast %"class.v8::internal::HeapVisitor"* %157 to %"class.v8::internal::MarkingWorklists::Local"**
  %159 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  %160 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  %162 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.v8::internal::HeapObject"* %18 to i8*
  %164 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %18, i64 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %128, i64 3
  %166 = bitcast %"class.v8::internal::HeapVisitor"* %165 to i64*
  %167 = bitcast %"class.v8::internal::HeapObject"* %22 to i8*
  %168 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %22, i64 0, i32 0, i32 0, i32 0
  %169 = bitcast %"class.v8::internal::MemoryChunk"** %21 to i8*
  %170 = bitcast %"class.std::__1::tuple"* %19 to i8*
  %171 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.std::__1::tuple.1177", %"class.std::__1::tuple.1177"* %20, i64 0, i32 0
  %173 = bitcast %"class.v8::internal::DescriptorArray"* %23 to i8*
  %174 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.v8::internal::JSArrayBuffer"* %24 to i8*
  %176 = getelementptr inbounds %"class.v8::internal::JSArrayBuffer", %"class.v8::internal::JSArrayBuffer"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.v8::internal::EphemeronHashTable"* %25 to i8*
  %178 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %25, i64 0, i32 0
  %181 = bitcast %"class.v8::internal::HeapObject"* %26 to i8*
  %182 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %26, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.v8::internal::HeapObject"* %27 to i8*
  %184 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %27, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.v8::internal::RelocIterator"* %28 to i8*
  %186 = bitcast %"class.v8::internal::BytecodeArray"* %29 to i8*
  %187 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = bitcast i64* %9 to i8*
  %189 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %81, i64 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::tuple.1192"* %7 to i8*
  %191 = getelementptr inbounds %"class.std::__1::tuple.1192", %"class.std::__1::tuple.1192"* %7, i64 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::tuple.1177", %"class.std::__1::tuple.1177"* %8, i64 0, i32 0
  %193 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 0, i32 1
  %194 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %30, i64 0, i32 0, i32 0
  %195 = bitcast %"class.heap::base::internal::SegmentBase"** %193 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %196 = bitcast %"class.heap::base::internal::SegmentBase"** %193 to i8**
  %197 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %43, i32 0
  %198 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  br label %199

199:                                              ; preds = %3279, %113
  %200 = phi i8 [ 0, %113 ], [ %3281, %3279 ]
  %201 = phi i64 [ 0, %113 ], [ %3282, %3279 ]
  %202 = and i8 %200, 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %3356

204:                                              ; preds = %199, %3274
  %205 = phi i64 [ %3275, %3274 ], [ 0, %199 ]
  %206 = phi i32 [ %261, %3274 ], [ 0, %199 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #13
  store i64 0, i64* %119, align 8
  %207 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %120, align 8
  %208 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %207, i64 0, i32 1
  %209 = load i16, i16* %208, align 2
  %210 = icmp eq i16 %209, 0
  %211 = ptrtoint %"class.heap::base::internal::SegmentBase"* %207 to i64
  %212 = bitcast %"class.heap::base::internal::SegmentBase"* %207 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %210, label %213, label %247

213:                                              ; preds = %204
  %214 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %121, align 8
  %215 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %214, i64 0, i32 1
  %216 = load i16, i16* %215, align 2
  %217 = icmp eq i16 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %213
  %219 = ptrtoint %"class.heap::base::internal::SegmentBase"* %214 to i64
  store i64 %211, i64* %122, align 8
  store i64 %219, i64* %123, align 8
  %220 = bitcast %"class.heap::base::internal::SegmentBase"* %214 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %247

221:                                              ; preds = %213
  %222 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %124, align 8
  %223 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %222, i64 0, i32 1
  %224 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %223 to i64*
  %225 = load atomic i64, i64* %224 monotonic, align 8
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %255, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %222, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %228) #13
  %229 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %223, align 8
  %230 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %229, null
  br i1 %230, label %231, label %232

231:                                              ; preds = %227
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %228) #13
  br label %255

232:                                              ; preds = %227
  %233 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %229 to i64
  %234 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw sub i64* %234, i64 1 monotonic
  %236 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %229, i64 0, i32 1
  %237 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  store atomic i64 %238, i64* %224 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %228) #13
  %239 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %120, align 8
  %240 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %241 = icmp eq %"class.heap::base::internal::SegmentBase"* %240, %239
  %242 = icmp eq %"class.heap::base::internal::SegmentBase"* %239, null
  %243 = or i1 %242, %241
  br i1 %243, label %246, label %244

244:                                              ; preds = %232
  %245 = bitcast %"class.heap::base::internal::SegmentBase"* %239 to i8*
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %244, %232
  store i64 %233, i64* %123, align 8
  br label %247

247:                                              ; preds = %204, %218, %246
  %248 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %229, %246 ], [ %220, %218 ], [ %212, %204 ]
  %249 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %248, i64 0, i32 0, i32 1
  %250 = load i16, i16* %249, align 2
  %251 = add i16 %250, -1
  store i16 %251, i16* %249, align 2
  %252 = zext i16 %251 to i64
  %253 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %248, i64 0, i32 2, i64 %252, i32 0, i32 0, i32 0
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %119, align 8
  br label %260

255:                                              ; preds = %221, %231
  %256 = load i8, i8* %115, align 8, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %3273, label %258

258:                                              ; preds = %255
  %259 = call zeroext i1 @_ZN2v88internal16MarkingWorklists5Local10PopContextEPNS0_10HeapObjectE(%"class.v8::internal::MarkingWorklists::Local"* nonnull %30, %"class.v8::internal::HeapObject"* nonnull %33) #13
  br i1 %259, label %260, label %3273

260:                                              ; preds = %247, %258
  %261 = add nuw nsw i32 %206, 1
  %262 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 8
  %263 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %262, i64 0, i32 24
  %264 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %263, align 8
  %265 = icmp eq %"class.v8::internal::NewSpace"* %264, null
  br i1 %265, label %274, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i64, i64* %267 acquire, align 8
  %269 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %269, i64 0, i32 24
  %271 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %271, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i64, i64* %272 monotonic, align 8
  br label %274

274:                                              ; preds = %260, %266
  %275 = phi %"class.v8::internal::Heap"* [ %269, %266 ], [ %262, %260 ]
  %276 = phi i64 [ %273, %266 ], [ 0, %260 ]
  %277 = phi i64 [ %268, %266 ], [ 0, %260 ]
  %278 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %275, i64 0, i32 30
  %279 = load %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"** %278, align 8
  %280 = icmp eq %"class.v8::internal::NewLargeObjectSpace"* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"class.v8::internal::NewLargeObjectSpace", %"class.v8::internal::NewLargeObjectSpace"* %279, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i64, i64* %282 acquire, align 8
  br label %284

284:                                              ; preds = %274, %281
  %285 = phi i64 [ %283, %281 ], [ 0, %274 ]
  %286 = load i64, i64* %119, align 8
  %287 = add i64 %286, -1
  %288 = icmp ule i64 %277, %287
  %289 = icmp ult i64 %287, %276
  %290 = and i1 %288, %289
  %291 = icmp eq i64 %287, %285
  %292 = or i1 %291, %290
  br i1 %292, label %293, label %330

293:                                              ; preds = %284
  %294 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %193, align 8
  %295 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %294, i64 0, i32 1
  %296 = load i16, i16* %295, align 2
  %297 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %294, i64 0, i32 0
  %298 = load i16, i16* %297, align 2
  %299 = icmp eq i16 %296, %298
  %300 = bitcast %"class.heap::base::internal::SegmentBase"* %294 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %299, label %301, label %323, !prof !3

301:                                              ; preds = %293
  %302 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %303 = icmp eq %"class.heap::base::internal::SegmentBase"* %294, %302
  br i1 %303, label %316, label %304

304:                                              ; preds = %301
  %305 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %194, align 8
  %306 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %195, align 8
  %307 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %305, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %307) #13
  %308 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %305, i64 0, i32 1
  %309 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %306, i64 0, i32 1
  %312 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %311 to i64*
  store i64 %310, i64* %312, align 8
  %313 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %306 to i64
  store atomic i64 %313, i64* %309 monotonic, align 8
  %314 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = atomicrmw add i64* %314, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %307) #13
  br label %316

316:                                              ; preds = %304, %301
  %317 = call i8* @_Znwm(i64 528) #14
  %318 = bitcast i8* %317 to i16*
  store i16 64, i16* %318, align 2
  %319 = getelementptr inbounds i8, i8* %317, i64 2
  %320 = bitcast i8* %319 to i16*
  store i16 0, i16* %320, align 2
  %321 = getelementptr inbounds i8, i8* %317, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 520, i1 false) #13
  store i8* %317, i8** %196, align 8
  %322 = bitcast i8* %317 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %323

323:                                              ; preds = %293, %316
  %324 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %322, %316 ], [ %300, %293 ]
  %325 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %324, i64 0, i32 0, i32 1
  %326 = load i16, i16* %325, align 2
  %327 = add i16 %326, 1
  store i16 %327, i16* %325, align 2
  %328 = zext i16 %326 to i64
  %329 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %324, i64 0, i32 2, i64 %328, i32 0, i32 0, i32 0
  store i64 %286, i64* %329, align 8
  br label %3274

330:                                              ; preds = %284
  %331 = load i64, i64* %125, align 8
  %332 = inttoptr i64 %287 to i32*
  %333 = load atomic i32, i32* %332 acquire, align 4
  %334 = and i64 %331, 4294967295
  %335 = icmp eq i64 %334, 0
  call void @llvm.assume(i1 %335) #13
  %336 = zext i32 %333 to i64
  %337 = or i64 %331, %336
  br i1 %117, label %341, label %338

338:                                              ; preds = %330
  %339 = add i64 %337, 6
  %340 = inttoptr i64 %339 to i8*
  br label %360

341:                                              ; preds = %330
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  %342 = load i64, i64* %119, align 8
  %343 = add i64 %337, 6
  %344 = inttoptr i64 %343 to i8*
  %345 = load atomic i8, i8* %344 monotonic, align 1
  switch i8 %345, label %359 [
    i8 52, label %351
    i8 27, label %346
    i8 20, label %347
    i8 17, label %349
    i8 18, label %349
    i8 21, label %349
    i8 22, label %349
    i8 23, label %349
    i8 25, label %349
  ]

346:                                              ; preds = %341
  store i64 %342, i64* %34, align 8
  br label %353

347:                                              ; preds = %341
  %348 = call zeroext i1 @_ZN2v88internal21NativeContextInferrer18InferForJSFunctionEPNS0_7IsolateENS0_10JSFunctionEPm(%"class.v8::internal::NativeContextInferrer"* %80, %"class.v8::internal::Isolate"* %85, i64 %342, i64* nonnull %34) #13
  br i1 %348, label %353, label %359

349:                                              ; preds = %341, %341, %341, %341, %341, %341
  %350 = call zeroext i1 @_ZN2v88internal21NativeContextInferrer16InferForJSObjectEPNS0_7IsolateENS0_3MapENS0_8JSObjectEPm(%"class.v8::internal::NativeContextInferrer"* %80, %"class.v8::internal::Isolate"* %85, i64 %337, i64 %342, i64* nonnull %34) #13
  br i1 %350, label %353, label %359

351:                                              ; preds = %341
  %352 = call zeroext i1 @_ZN2v88internal21NativeContextInferrer15InferForContextEPNS0_7IsolateENS0_7ContextEPm(%"class.v8::internal::NativeContextInferrer"* %80, %"class.v8::internal::Isolate"* %85, i64 %342, i64* nonnull %34) #13
  br i1 %352, label %353, label %359

353:                                              ; preds = %347, %349, %346, %351
  %354 = load i64, i64* %34, align 8
  %355 = load i64, i64* %127, align 8
  %356 = icmp eq i64 %355, %354
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = call i64 @_ZN2v88internal16MarkingWorklists5Local19SwitchToContextSlowEm(%"class.v8::internal::MarkingWorklists::Local"* nonnull %30, i64 %354) #13
  br label %359

359:                                              ; preds = %341, %357, %353, %347, %349, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  br label %360

360:                                              ; preds = %338, %359
  %361 = phi i8* [ %340, %338 ], [ %344, %359 ]
  %362 = load i64, i64* %119, align 8
  %363 = load atomic i8, i8* %361 monotonic, align 1
  switch i8 %363, label %3248 [
    i8 7, label %364
    i8 0, label %388
    i8 1, label %397
    i8 8, label %406
    i8 9, label %470
    i8 10, label %489
    i8 11, label %517
    i8 2, label %520
    i8 12, label %528
    i8 13, label %572
    i8 14, label %601
    i8 15, label %750
    i8 4, label %769
    i8 5, label %784
    i8 18, label %793
    i8 19, label %843
    i8 20, label %891
    i8 21, label %1004
    i8 23, label %1022
    i8 51, label %1024
    i8 25, label %1142
    i8 24, label %1160
    i8 26, label %1216
    i8 27, label %1435
    i8 28, label %1454
    i8 29, label %1497
    i8 30, label %1519
    i8 31, label %1538
    i8 33, label %1542
    i8 34, label %1574
    i8 35, label %1604
    i8 36, label %1634
    i8 38, label %1669
    i8 39, label %1699
    i8 40, label %1718
    i8 41, label %1753
    i8 42, label %1813
    i8 43, label %1884
    i8 44, label %1903
    i8 45, label %1922
    i8 46, label %1925
    i8 47, label %1947
    i8 48, label %2007
    i8 49, label %2026
    i8 50, label %2125
    i8 52, label %2160
    i8 53, label %2186
    i8 54, label %2205
    i8 55, label %2374
    i8 56, label %2406
    i8 57, label %2432
    i8 58, label %2525
    i8 59, label %2587
    i8 60, label %2620
    i8 61, label %2652
    i8 62, label %2684
    i8 63, label %2709
    i8 64, label %2815
    i8 65, label %2834
    i8 66, label %2874
    i8 67, label %2893
    i8 68, label %2895
    i8 69, label %2903
    i8 70, label %2912
    i8 71, label %2914
    i8 72, label %2942
    i8 73, label %2961
    i8 74, label %2980
    i8 75, label %2999
    i8 76, label %3018
    i8 77, label %3054
    i8 78, label %3057
    i8 79, label %3060
    i8 80, label %3086
    i8 81, label %3112
    i8 82, label %3148
    i8 32, label %3167
    i8 3, label %3169
    i8 22, label %3177
    i8 17, label %3212
    i8 37, label %3214
    i8 16, label %3240
    i8 6, label %3247
    i8 83, label %3247
  ]

364:                                              ; preds = %360
  %365 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %365, label %366, label %3249

366:                                              ; preds = %364
  %367 = add i64 %337, 3
  %368 = inttoptr i64 %367 to i8*
  %369 = load atomic i8, i8* %368 monotonic, align 1
  %370 = zext i8 %369 to i32
  %371 = shl nuw nsw i32 %370, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %372 = add i64 %362, 3
  %373 = add i64 %362, 15
  %374 = icmp ult i64 %372, %373
  br i1 %374, label %375, label %3249

375:                                              ; preds = %366, %385
  %376 = phi i64 [ %386, %385 ], [ %372, %366 ]
  %377 = inttoptr i64 %376 to i32*
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = zext i32 %378 to i64
  %380 = and i64 %379, 1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %385, label %382

382:                                              ; preds = %375
  %383 = and i64 %376, -4294967296
  %384 = or i64 %383, %379
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %376, i64 %384) #13
  br label %385

385:                                              ; preds = %382, %375
  %386 = add i64 %376, 4
  %387 = icmp ult i64 %386, %373
  br i1 %387, label %375, label %3249

388:                                              ; preds = %360
  %389 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %389, label %390, label %3249

390:                                              ; preds = %388
  %391 = add i64 %362, 3
  %392 = inttoptr i64 %391 to i32*
  %393 = load atomic i32, i32* %392 acquire, align 4
  %394 = lshr i32 %393, 1
  %395 = shl i32 %394, 3
  %396 = add nsw i32 %395, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

397:                                              ; preds = %360
  %398 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %398, label %399, label %3249

399:                                              ; preds = %397
  %400 = add i64 %362, 3
  %401 = inttoptr i64 %400 to i32*
  %402 = load atomic i32, i32* %401 acquire, align 4
  %403 = ashr i32 %402, 1
  %404 = add nsw i32 %403, 11
  %405 = and i32 %404, -4
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

406:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #13
  store i64 %362, i64* %187, align 8
  %407 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %407, label %408, label %468

408:                                              ; preds = %406
  %409 = add i64 %362, 3
  %410 = inttoptr i64 %409 to i32*
  %411 = load atomic i32, i32* %410 acquire, align 4
  %412 = ashr i32 %411, 1
  %413 = add nsw i32 %412, 37
  %414 = and i32 %413, -4
  %415 = load i64, i64* %187, align 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %415) #13
  %416 = add i64 %415, 7
  %417 = add i64 %415, 11
  %418 = icmp ult i64 %416, -4
  br i1 %418, label %419, label %432

419:                                              ; preds = %408, %429
  %420 = phi i64 [ %430, %429 ], [ %416, %408 ]
  %421 = inttoptr i64 %420 to i32*
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = zext i32 %422 to i64
  %424 = and i64 %423, 1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %429, label %426

426:                                              ; preds = %419
  %427 = and i64 %420, -4294967296
  %428 = or i64 %427, %423
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %415, i64 %420, i64 %428) #13
  br label %429

429:                                              ; preds = %426, %419
  %430 = add i64 %420, 4
  %431 = icmp ult i64 %430, %417
  br i1 %431, label %419, label %432

432:                                              ; preds = %429, %408
  %433 = add i64 %415, 15
  %434 = icmp ult i64 %417, -4
  br i1 %434, label %435, label %448

435:                                              ; preds = %432, %445
  %436 = phi i64 [ %446, %445 ], [ %417, %432 ]
  %437 = inttoptr i64 %436 to i32*
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = zext i32 %438 to i64
  %440 = and i64 %439, 1
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %445, label %442

442:                                              ; preds = %435
  %443 = and i64 %436, -4294967296
  %444 = or i64 %443, %439
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %415, i64 %436, i64 %444) #13
  br label %445

445:                                              ; preds = %442, %435
  %446 = add i64 %436, 4
  %447 = icmp ult i64 %446, %433
  br i1 %447, label %435, label %448

448:                                              ; preds = %445, %432
  %449 = add i64 %415, 19
  %450 = icmp ult i64 %433, -4
  br i1 %450, label %451, label %464

451:                                              ; preds = %448, %461
  %452 = phi i64 [ %462, %461 ], [ %433, %448 ]
  %453 = inttoptr i64 %452 to i32*
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = zext i32 %454 to i64
  %456 = and i64 %455, 1
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %451
  %459 = and i64 %452, -4294967296
  %460 = or i64 %459, %455
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %415, i64 %452, i64 %460) #13
  br label %461

461:                                              ; preds = %458, %451
  %462 = add i64 %452, 4
  %463 = icmp ult i64 %462, %449
  br i1 %463, label %451, label %464

464:                                              ; preds = %461, %448
  %465 = load i8, i8* %71, align 1, !range !2
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %464
  call void @_ZN2v88internal13BytecodeArray9MakeOlderEv(%"class.v8::internal::BytecodeArray"* nonnull %29) #13
  br label %468

468:                                              ; preds = %467, %464, %406
  %469 = phi i32 [ 0, %406 ], [ %414, %464 ], [ %414, %467 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #13
  br label %3249

470:                                              ; preds = %360
  %471 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %471, label %472, label %3249

472:                                              ; preds = %470
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %473 = add i64 %362, 3
  %474 = add i64 %362, 7
  %475 = icmp ult i64 %473, %474
  br i1 %475, label %476, label %3249

476:                                              ; preds = %472, %486
  %477 = phi i64 [ %487, %486 ], [ %473, %472 ]
  %478 = inttoptr i64 %477 to i32*
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = zext i32 %479 to i64
  %481 = and i64 %480, 1
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %486, label %483

483:                                              ; preds = %476
  %484 = and i64 %477, -4294967296
  %485 = or i64 %484, %480
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %477, i64 %485) #13
  br label %486

486:                                              ; preds = %483, %476
  %487 = add i64 %477, 4
  %488 = icmp ult i64 %487, %474
  br i1 %488, label %476, label %3249

489:                                              ; preds = %360
  %490 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %490, label %491, label %3249

491:                                              ; preds = %489
  %492 = add i64 %362, 19
  %493 = inttoptr i64 %492 to i32*
  %494 = load i32, i32* %493, align 4
  %495 = add i64 %362, 23
  %496 = inttoptr i64 %495 to i32*
  %497 = load i32, i32* %496, align 4
  %498 = add i32 %494, 95
  %499 = add i32 %498, %497
  %500 = and i32 %499, -32
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %501 = add i64 %362, 3
  %502 = icmp ult i64 %501, %492
  br i1 %502, label %503, label %516

503:                                              ; preds = %491, %513
  %504 = phi i64 [ %514, %513 ], [ %501, %491 ]
  %505 = inttoptr i64 %504 to i32*
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = zext i32 %506 to i64
  %508 = and i64 %507, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %513, label %510

510:                                              ; preds = %503
  %511 = and i64 %504, -4294967296
  %512 = or i64 %511, %507
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %504, i64 %512) #13
  br label %513

513:                                              ; preds = %510, %503
  %514 = add i64 %504, 4
  %515 = icmp ult i64 %514, %492
  br i1 %515, label %503, label %516

516:                                              ; preds = %513, %491
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %185) #13
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %28, i64 %362, i32 7998) #13
  call void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"* nonnull %137, %"class.v8::internal::RelocIterator"* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %185) #13
  br label %3249

517:                                              ; preds = %360
  %518 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %518, label %519, label %3249

519:                                              ; preds = %517
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

520:                                              ; preds = %360
  %521 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %521, label %522, label %3249

522:                                              ; preds = %520
  %523 = add i64 %362, 3
  %524 = inttoptr i64 %523 to i32*
  %525 = load i32, i32* %524, align 4
  %526 = shl nsw i32 %525, 4
  %527 = or i32 %526, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

528:                                              ; preds = %360
  %529 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %529, label %530, label %3249

530:                                              ; preds = %528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #13
  store i64 %362, i64* %184, align 8
  %531 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %27, i64 %337) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %532 = add i64 %362, -1
  %533 = add i64 %362, 3
  %534 = add i64 %362, 11
  %535 = icmp ult i64 %533, %534
  br i1 %535, label %536, label %549

536:                                              ; preds = %530, %546
  %537 = phi i64 [ %547, %546 ], [ %533, %530 ]
  %538 = inttoptr i64 %537 to i32*
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = zext i32 %539 to i64
  %541 = and i64 %540, 1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %546, label %543

543:                                              ; preds = %536
  %544 = and i64 %537, -4294967296
  %545 = or i64 %544, %540
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %537, i64 %545) #13
  br label %546

546:                                              ; preds = %543, %536
  %547 = add i64 %537, 4
  %548 = icmp ult i64 %547, %534
  br i1 %548, label %536, label %549

549:                                              ; preds = %546, %530
  %550 = sext i32 %531 to i64
  %551 = add i64 %532, %550
  %552 = icmp ult i64 %534, %551
  br i1 %552, label %553, label %3249

553:                                              ; preds = %549, %569
  %554 = phi i64 [ %570, %569 ], [ %534, %549 ]
  %555 = inttoptr i64 %554 to i32*
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i64 %554, -4294967296
  %558 = zext i32 %556 to i64
  %559 = or i64 %557, %558
  %560 = and i64 %558, 3
  %561 = icmp eq i64 %560, 1
  br i1 %561, label %562, label %563

562:                                              ; preds = %553
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %554, i64 %559) #13
  br label %569

563:                                              ; preds = %553
  %564 = icmp eq i64 %560, 3
  %565 = icmp ne i32 %556, 3
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %569

567:                                              ; preds = %563
  %568 = and i64 %559, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %554, i64 %568) #13
  br label %569

569:                                              ; preds = %567, %563, %562
  %570 = add i64 %554, 4
  %571 = icmp ult i64 %570, %551
  br i1 %571, label %553, label %3249

572:                                              ; preds = %360
  %573 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %573, label %574, label %3249

574:                                              ; preds = %572
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #13
  store i64 %362, i64* %182, align 8
  %575 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %26, i64 %337) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %576 = icmp sgt i32 %575, 8
  br i1 %576, label %577, label %3249

577:                                              ; preds = %574
  %578 = add i64 %362, -1
  br label %579

579:                                              ; preds = %597, %577
  %580 = phi i64 [ 8, %577 ], [ %598, %597 ]
  %581 = add i64 %578, %580
  %582 = add i64 %581, 4
  %583 = icmp ult i64 %581, -4
  br i1 %583, label %584, label %597

584:                                              ; preds = %579, %594
  %585 = phi i64 [ %595, %594 ], [ %581, %579 ]
  %586 = inttoptr i64 %585 to i32*
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = zext i32 %587 to i64
  %589 = and i64 %588, 1
  %590 = icmp eq i64 %589, 0
  br i1 %590, label %594, label %591

591:                                              ; preds = %584
  %592 = and i64 %585, -4294967296
  %593 = or i64 %592, %588
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %585, i64 %593) #13
  br label %594

594:                                              ; preds = %591, %584
  %595 = add i64 %585, 4
  %596 = icmp ult i64 %595, %582
  br i1 %596, label %584, label %597

597:                                              ; preds = %594, %579
  %598 = add nuw i64 %580, 8
  %599 = trunc i64 %598 to i32
  %600 = icmp sgt i32 %575, %599
  br i1 %600, label %579, label %3249

601:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #13
  store i64 %362, i64* %178, align 8
  %602 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %602, label %603, label %748

603:                                              ; preds = %601
  %604 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %605 = load i32, i32* %146, align 8
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %604, i64 0, i32 1, i32 0, i64 %606, i32 0
  %608 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %607, align 8
  %609 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %608, i64 0, i32 1
  %610 = load i64, i64* %609, align 8
  %611 = icmp eq i64 %610, 64
  br i1 %611, label %615, label %612

612:                                              ; preds = %603
  %613 = add i64 %610, 1
  store i64 %613, i64* %609, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %608, i64 0, i32 2, i64 %610, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %631

615:                                              ; preds = %603
  %616 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %604, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %616) #13
  %617 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %604, i64 0, i32 1, i32 1, i32 1
  %618 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %608 to i64*
  store i64 %619, i64* %620, align 8
  %621 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %608 to i64
  store atomic volatile i64 %621, i64* %618 monotonic, align 8
  %622 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %604, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = atomicrmw add i64* %622, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %616) #13
  %624 = call i8* @_Znwm(i64 528) #14
  %625 = getelementptr inbounds i8, i8* %624, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %625, i8 0, i64 504, i1 false) #13
  %626 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %607 to i8**
  store i8* %624, i8** %626, align 8
  %627 = getelementptr inbounds i8, i8* %624, i64 8
  %628 = bitcast i8* %627 to i64*
  store i64 1, i64* %628, align 8
  %629 = getelementptr inbounds i8, i8* %624, i64 16
  %630 = bitcast i8* %629 to i64*
  br label %631

631:                                              ; preds = %615, %612
  %632 = phi i64* [ %630, %615 ], [ %614, %612 ]
  store i64 %362, i64* %632, align 8
  %633 = load i64, i64* %178, align 8
  %634 = add i64 %633, 15
  %635 = inttoptr i64 %634 to i32*
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = ashr i32 %636, 1
  %638 = sext i32 %637 to i64
  %639 = icmp eq i32 %637, 0
  br i1 %639, label %640, label %642

640:                                              ; preds = %743, %631
  %641 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %179, i64 %337) #13
  br label %748

642:                                              ; preds = %631, %746
  %643 = phi i64 [ %747, %746 ], [ %633, %631 ]
  %644 = phi i64 [ %744, %746 ], [ 0, %631 ]
  %645 = trunc i64 %644 to i32
  %646 = shl i32 %645, 3
  %647 = add i32 %646, 12
  %648 = sext i32 %647 to i64
  %649 = add i64 %643, 7
  %650 = add i64 %649, %648
  %651 = and i64 %643, -4294967296
  %652 = inttoptr i64 %650 to i32*
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = zext i32 %653 to i64
  %655 = or i64 %651, %654
  call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %643, i64 %650, i64 %655) #13
  %656 = add i32 %646, 16
  %657 = load i64, i64* %178, align 8
  %658 = or i32 %656, 7
  %659 = sext i32 %658 to i64
  %660 = add i64 %657, %659
  %661 = and i64 %655, -262144
  %662 = or i64 %661, 272
  %663 = sub i64 %655, %661
  %664 = trunc i64 %663 to i32
  %665 = lshr i32 %664, 2
  %666 = and i32 %665, 31
  %667 = shl i32 1, %666
  %668 = inttoptr i64 %662 to i32*
  %669 = lshr i64 %663, 7
  %670 = and i64 %669, 33554431
  %671 = getelementptr inbounds i32, i32* %668, i64 %670
  %672 = load atomic i32, i32* %671 acquire, align 4
  %673 = and i32 %667, %672
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %692, label %675

675:                                              ; preds = %642
  %676 = load i64, i64* %178, align 8
  %677 = add i64 %660, 4
  %678 = icmp ult i64 %660, -4
  br i1 %678, label %679, label %743

679:                                              ; preds = %675, %689
  %680 = phi i64 [ %690, %689 ], [ %660, %675 ]
  %681 = inttoptr i64 %680 to i32*
  %682 = load atomic i32, i32* %681 monotonic, align 4
  %683 = zext i32 %682 to i64
  %684 = and i64 %683, 1
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %689, label %686

686:                                              ; preds = %679
  %687 = and i64 %680, -4294967296
  %688 = or i64 %687, %683
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %676, i64 %680, i64 %688) #13
  br label %689

689:                                              ; preds = %686, %679
  %690 = add i64 %680, 4
  %691 = icmp ult i64 %690, %677
  br i1 %691, label %679, label %743

692:                                              ; preds = %642
  %693 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %180, i64 %644) #13
  %694 = and i64 %693, 1
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %743, label %696

696:                                              ; preds = %692
  %697 = load i64, i64* %178, align 8
  call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %697, i64 %660, i64 %693) #13
  %698 = and i64 %693, -262144
  %699 = or i64 %698, 272
  %700 = sub i64 %693, %698
  %701 = trunc i64 %700 to i32
  %702 = lshr i32 %701, 2
  %703 = and i32 %702, 31
  %704 = shl i32 1, %703
  %705 = inttoptr i64 %699 to i32*
  %706 = lshr i64 %700, 7
  %707 = and i64 %706, 33554431
  %708 = getelementptr inbounds i32, i32* %705, i64 %707
  %709 = load atomic i32, i32* %708 acquire, align 4
  %710 = and i32 %709, %704
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %743

712:                                              ; preds = %696
  %713 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %714 = load i32, i32* %146, align 8
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %713, i64 0, i32 4, i32 0, i64 %715, i32 0
  %717 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %716, align 8
  %718 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %717, i64 0, i32 1
  %719 = load i64, i64* %718, align 8
  %720 = icmp eq i64 %719, 64
  br i1 %720, label %725, label %721

721:                                              ; preds = %712
  %722 = add i64 %719, 1
  store i64 %722, i64* %718, align 8
  %723 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %717, i64 0, i32 2, i64 %719, i32 0, i32 0, i32 0, i32 0
  store i64 %655, i64* %723, align 8
  %724 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %717, i64 0, i32 2, i64 %719, i32 1, i32 0, i32 0, i32 0
  store i64 %693, i64* %724, align 8
  br label %743

725:                                              ; preds = %712
  %726 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %713, i64 0, i32 4, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %726) #13
  %727 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %713, i64 0, i32 4, i32 1, i32 1
  %728 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %717 to i64*
  store i64 %729, i64* %730, align 8
  %731 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %717 to i64
  store atomic volatile i64 %731, i64* %728 monotonic, align 8
  %732 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %713, i64 0, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %733 = atomicrmw add i64* %732, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %726) #13
  %734 = call i8* @_Znwm(i64 1040) #14
  %735 = getelementptr inbounds i8, i8* %734, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %735, i8 0, i64 1008, i1 false) #13
  %736 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %716 to i8**
  store i8* %734, i8** %736, align 8
  %737 = getelementptr inbounds i8, i8* %734, i64 8
  %738 = bitcast i8* %737 to i64*
  store i64 1, i64* %738, align 8
  %739 = getelementptr inbounds i8, i8* %734, i64 16
  %740 = bitcast i8* %739 to i64*
  store i64 %655, i64* %740, align 8
  %741 = getelementptr inbounds i8, i8* %734, i64 24
  %742 = bitcast i8* %741 to i64*
  store i64 %693, i64* %742, align 8
  br label %743

743:                                              ; preds = %689, %725, %721, %696, %692, %675
  %744 = add i64 %644, 1
  %745 = icmp eq i64 %744, %638
  br i1 %745, label %640, label %746

746:                                              ; preds = %743
  %747 = load i64, i64* %178, align 8
  br label %642

748:                                              ; preds = %640, %601
  %749 = phi i32 [ %641, %640 ], [ 0, %601 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #13
  br label %3249

750:                                              ; preds = %360
  %751 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %751, label %752, label %3249

752:                                              ; preds = %750
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %753 = add i64 %362, 3
  %754 = add i64 %362, 7
  %755 = icmp ult i64 %753, %754
  br i1 %755, label %756, label %3249

756:                                              ; preds = %752, %766
  %757 = phi i64 [ %767, %766 ], [ %753, %752 ]
  %758 = inttoptr i64 %757 to i32*
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = zext i32 %759 to i64
  %761 = and i64 %760, 1
  %762 = icmp eq i64 %761, 0
  br i1 %762, label %766, label %763

763:                                              ; preds = %756
  %764 = and i64 %757, -4294967296
  %765 = or i64 %764, %760
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %757, i64 %765) #13
  br label %766

766:                                              ; preds = %763, %756
  %767 = add i64 %757, 4
  %768 = icmp ult i64 %767, %754
  br i1 %768, label %756, label %3249

769:                                              ; preds = %360
  %770 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %770, label %771, label %3249

771:                                              ; preds = %769
  %772 = add i64 %362, 3
  %773 = inttoptr i64 %772 to i32*
  %774 = load atomic i32, i32* %773 acquire, align 4
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %782, label %776

776:                                              ; preds = %771
  %777 = add nsw i32 %774, -1
  %778 = sdiv i32 %777, 6
  %779 = shl nsw i32 %778, 2
  %780 = add i32 %779, 19
  %781 = and i32 %780, -4
  br label %782

782:                                              ; preds = %776, %771
  %783 = phi i32 [ %781, %776 ], [ 12, %771 ]
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

784:                                              ; preds = %360
  %785 = add i64 %362, 3
  %786 = inttoptr i64 %785 to i32*
  %787 = load atomic i32, i32* %786 acquire, align 4
  %788 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %788, label %789, label %3249

789:                                              ; preds = %784
  %790 = lshr i32 %787, 1
  %791 = shl i32 %790, 3
  %792 = add nsw i32 %791, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

793:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #13
  store i64 %362, i64* %176, align 8
  call void @_ZN2v88internal13JSArrayBuffer13MarkExtensionEv(%"class.v8::internal::JSArrayBuffer"* nonnull %24) #13
  %794 = load i64, i64* %176, align 8
  %795 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_13JSArrayBufferENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %794) #13
  %796 = icmp eq i32 %795, 0
  %797 = load i8, i8* %70, align 4
  %798 = icmp eq i8 %797, 0
  %799 = or i1 %796, %798
  br i1 %799, label %842, label %800

800:                                              ; preds = %793
  %801 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %158, align 8
  %802 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %801, i64 0, i32 1, i32 1
  %803 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %802, align 8
  %804 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %803, i64 0, i32 1
  %805 = load i16, i16* %804, align 2
  %806 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %803, i64 0, i32 0
  %807 = load i16, i16* %806, align 2
  %808 = icmp eq i16 %805, %807
  %809 = bitcast %"class.heap::base::internal::SegmentBase"* %803 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br i1 %808, label %810, label %835, !prof !3

810:                                              ; preds = %800
  %811 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %812 = icmp eq %"class.heap::base::internal::SegmentBase"* %803, %811
  br i1 %812, label %827, label %813

813:                                              ; preds = %810
  %814 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %801, i64 0, i32 1, i32 0
  %815 = load %"class.heap::base::Worklist.178"*, %"class.heap::base::Worklist.178"** %814, align 8
  %816 = bitcast %"class.heap::base::internal::SegmentBase"** %802 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"**
  %817 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %816, align 8
  %818 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %815, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %818) #13
  %819 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %815, i64 0, i32 1
  %820 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %819 to i64*
  %821 = load i64, i64* %820, align 8
  %822 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %817, i64 0, i32 1
  %823 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %822 to i64*
  store i64 %821, i64* %823, align 8
  %824 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %817 to i64
  store atomic i64 %824, i64* %820 monotonic, align 8
  %825 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %826 = atomicrmw add i64* %825, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %818) #13
  br label %827

827:                                              ; preds = %813, %810
  %828 = call i8* @_Znwm(i64 144) #14
  %829 = bitcast i8* %828 to i16*
  store i16 16, i16* %829, align 2
  %830 = getelementptr inbounds i8, i8* %828, i64 2
  %831 = bitcast i8* %830 to i16*
  store i16 0, i16* %831, align 2
  %832 = getelementptr inbounds i8, i8* %828, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %832, i8 0, i64 136, i1 false) #13
  %833 = bitcast %"class.heap::base::internal::SegmentBase"** %802 to i8**
  store i8* %828, i8** %833, align 8
  %834 = bitcast i8* %828 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br label %835

835:                                              ; preds = %827, %800
  %836 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %834, %827 ], [ %809, %800 ]
  %837 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %836, i64 0, i32 0, i32 1
  %838 = load i16, i16* %837, align 2
  %839 = add i16 %838, 1
  store i16 %839, i16* %837, align 2
  %840 = zext i16 %838 to i64
  %841 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %836, i64 0, i32 2, i64 %840, i32 0, i32 0, i32 0
  store i64 %794, i64* %841, align 8
  br label %842

842:                                              ; preds = %835, %793
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #13
  br label %3249

843:                                              ; preds = %360
  %844 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_10JSDataViewENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %362) #13
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %3249, label %846

846:                                              ; preds = %843
  %847 = load i8, i8* %70, align 4, !range !2
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %3249, label %849

849:                                              ; preds = %846
  %850 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %158, align 8
  %851 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %850, i64 0, i32 1, i32 1
  %852 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %851, align 8
  %853 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %852, i64 0, i32 1
  %854 = load i16, i16* %853, align 2
  %855 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %852, i64 0, i32 0
  %856 = load i16, i16* %855, align 2
  %857 = icmp eq i16 %854, %856
  %858 = bitcast %"class.heap::base::internal::SegmentBase"* %852 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br i1 %857, label %859, label %884, !prof !3

859:                                              ; preds = %849
  %860 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %861 = icmp eq %"class.heap::base::internal::SegmentBase"* %852, %860
  br i1 %861, label %876, label %862

862:                                              ; preds = %859
  %863 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %850, i64 0, i32 1, i32 0
  %864 = load %"class.heap::base::Worklist.178"*, %"class.heap::base::Worklist.178"** %863, align 8
  %865 = bitcast %"class.heap::base::internal::SegmentBase"** %851 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"**
  %866 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %865, align 8
  %867 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %864, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %867) #13
  %868 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %864, i64 0, i32 1
  %869 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %868 to i64*
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %866, i64 0, i32 1
  %872 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %871 to i64*
  store i64 %870, i64* %872, align 8
  %873 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %866 to i64
  store atomic i64 %873, i64* %869 monotonic, align 8
  %874 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %864, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = atomicrmw add i64* %874, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %867) #13
  br label %876

876:                                              ; preds = %862, %859
  %877 = call i8* @_Znwm(i64 144) #14
  %878 = bitcast i8* %877 to i16*
  store i16 16, i16* %878, align 2
  %879 = getelementptr inbounds i8, i8* %877, i64 2
  %880 = bitcast i8* %879 to i16*
  store i16 0, i16* %880, align 2
  %881 = getelementptr inbounds i8, i8* %877, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %881, i8 0, i64 136, i1 false) #13
  %882 = bitcast %"class.heap::base::internal::SegmentBase"** %851 to i8**
  store i8* %877, i8** %882, align 8
  %883 = bitcast i8* %877 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br label %884

884:                                              ; preds = %876, %849
  %885 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %883, %876 ], [ %858, %849 ]
  %886 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %885, i64 0, i32 0, i32 1
  %887 = load i16, i16* %886, align 2
  %888 = add i16 %887, 1
  store i16 %888, i16* %886, align 2
  %889 = zext i16 %887 to i64
  %890 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %885, i64 0, i32 2, i64 %889, i32 0, i32 0, i32 0
  store i64 %362, i64* %890, align 8
  br label %3249

891:                                              ; preds = %360
  %892 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %892, label %893, label %909

893:                                              ; preds = %891
  %894 = add i64 %337, 3
  %895 = inttoptr i64 %894 to i8*
  %896 = load atomic i8, i8* %895 monotonic, align 1
  %897 = zext i8 %896 to i32
  %898 = shl nuw nsw i32 %897, 2
  %899 = add i64 %337, 5
  %900 = inttoptr i64 %899 to i8*
  %901 = load atomic i8, i8* %900 monotonic, align 1
  %902 = icmp ult i8 %901, 3
  br i1 %902, label %903, label %905

903:                                              ; preds = %893
  %904 = load atomic i8, i8* %895 monotonic, align 1
  br label %905

905:                                              ; preds = %903, %893
  %906 = phi i8 [ %904, %903 ], [ %901, %893 ]
  %907 = zext i8 %906 to i32
  %908 = shl nuw nsw i32 %907, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %337, i64 %362, i32 4, i32 %908, %"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31) #13
  br label %909

909:                                              ; preds = %905, %891
  %910 = phi i32 [ %898, %905 ], [ 0, %891 ]
  %911 = load i32, i32* %140, align 8
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %3249, label %913

913:                                              ; preds = %909
  %914 = add i64 %362, 11
  %915 = inttoptr i64 %914 to i32*
  %916 = load atomic i32, i32* %915 acquire, align 4
  %917 = and i64 %362, -4294967296
  %918 = zext i32 %916 to i64
  %919 = or i64 %917, %918
  %920 = add i64 %362, 23
  %921 = inttoptr i64 %920 to i32*
  %922 = load atomic i32, i32* %921 monotonic, align 4
  %923 = zext i32 %922 to i64
  %924 = or i64 %917, %923
  %925 = and i64 %918, 1
  %926 = icmp eq i64 %925, 0
  br i1 %926, label %3249, label %927

927:                                              ; preds = %913
  %928 = add i64 %919, -1
  %929 = inttoptr i64 %928 to i32*
  %930 = load atomic i32, i32* %929 monotonic, align 4
  %931 = zext i32 %930 to i64
  %932 = or i64 %917, %931
  %933 = add i64 %932, 7
  %934 = inttoptr i64 %933 to i16*
  %935 = load atomic i16, i16* %934 monotonic, align 2
  %936 = icmp ne i16 %935, 179
  %937 = and i64 %923, 1
  %938 = icmp eq i64 %937, 0
  %939 = or i1 %938, %936
  br i1 %939, label %3249, label %940

940:                                              ; preds = %927
  %941 = add i64 %924, -1
  %942 = inttoptr i64 %941 to i32*
  %943 = load atomic i32, i32* %942 monotonic, align 4
  %944 = zext i32 %943 to i64
  %945 = or i64 %917, %944
  %946 = add i64 %945, 7
  %947 = inttoptr i64 %946 to i16*
  %948 = load atomic i16, i16* %947 monotonic, align 2
  %949 = icmp eq i16 %948, 162
  br i1 %949, label %950, label %3249

950:                                              ; preds = %940
  %951 = add i64 %919, 3
  %952 = inttoptr i64 %951 to i32*
  %953 = load atomic i32, i32* %952 acquire, align 4
  %954 = zext i32 %953 to i64
  %955 = or i64 %917, %954
  %956 = icmp eq i32 %953, 170
  br i1 %956, label %971, label %957

957:                                              ; preds = %950
  %958 = and i64 %954, 1
  %959 = icmp eq i64 %958, 0
  br i1 %959, label %3249, label %960

960:                                              ; preds = %957
  %961 = add i64 %955, -1
  %962 = inttoptr i64 %961 to i32*
  %963 = load atomic i32, i32* %962 monotonic, align 4
  %964 = zext i32 %963 to i64
  %965 = or i64 %917, %964
  %966 = add i64 %965, 7
  %967 = inttoptr i64 %966 to i16*
  %968 = load atomic i16, i16* %967 monotonic, align 2
  %969 = add i16 %968, -157
  %970 = icmp ugt i16 %969, 1
  br i1 %970, label %3249, label %971

971:                                              ; preds = %960, %950
  %972 = add i64 %924, 31
  %973 = inttoptr i64 %972 to i32*
  %974 = load atomic i32, i32* %973 monotonic, align 4
  %975 = icmp eq i32 %974, 85
  br i1 %975, label %3249, label %976

976:                                              ; preds = %971
  %977 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %978 = load i32, i32* %146, align 8
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %977, i64 0, i32 10, i32 0, i64 %979, i32 0
  %981 = load %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %980, align 8
  %982 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %981, i64 0, i32 1
  %983 = load i64, i64* %982, align 8
  %984 = icmp eq i64 %983, 64
  br i1 %984, label %988, label %985

985:                                              ; preds = %976
  %986 = add i64 %983, 1
  store i64 %986, i64* %982, align 8
  %987 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %981, i64 0, i32 2, i64 %983, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %987, align 8
  br label %3249

988:                                              ; preds = %976
  %989 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %977, i64 0, i32 10, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %989) #13
  %990 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %977, i64 0, i32 10, i32 1, i32 1
  %991 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %990 to i64*
  %992 = load i64, i64* %991, align 8
  %993 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %981 to i64*
  store i64 %992, i64* %993, align 8
  %994 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %981 to i64
  store atomic volatile i64 %994, i64* %991 monotonic, align 8
  %995 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %977, i64 0, i32 10, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %996 = atomicrmw add i64* %995, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %989) #13
  %997 = call i8* @_Znwm(i64 528) #14
  %998 = getelementptr inbounds i8, i8* %997, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %998, i8 0, i64 504, i1 false) #13
  %999 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %980 to i8**
  store i8* %997, i8** %999, align 8
  %1000 = getelementptr inbounds i8, i8* %997, i64 8
  %1001 = bitcast i8* %1000 to i64*
  store i64 1, i64* %1001, align 8
  %1002 = getelementptr inbounds i8, i8* %997, i64 16
  %1003 = bitcast i8* %1002 to i64*
  store i64 %362, i64* %1003, align 8
  br label %3249

1004:                                             ; preds = %360
  %1005 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1005, label %1006, label %3249

1006:                                             ; preds = %1004
  %1007 = add i64 %337, 3
  %1008 = inttoptr i64 %1007 to i8*
  %1009 = load atomic i8, i8* %1008 monotonic, align 1
  %1010 = zext i8 %1009 to i32
  %1011 = shl nuw nsw i32 %1010, 2
  %1012 = add i64 %337, 5
  %1013 = inttoptr i64 %1012 to i8*
  %1014 = load atomic i8, i8* %1013 monotonic, align 1
  %1015 = icmp ult i8 %1014, 3
  br i1 %1015, label %1016, label %1018

1016:                                             ; preds = %1006
  %1017 = load atomic i8, i8* %1008 monotonic, align 1
  br label %1018

1018:                                             ; preds = %1016, %1006
  %1019 = phi i8 [ %1017, %1016 ], [ %1014, %1006 ]
  %1020 = zext i8 %1019 to i32
  %1021 = shl nuw nsw i32 %1020, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %337, i64 %362, i32 4, i32 %1021, %"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31) #13
  br label %3249

1022:                                             ; preds = %360
  %1023 = call i32 @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_12JSTypedArrayEEEiNS0_3MapET_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %337, i64 %362) #13
  br label %3249

1024:                                             ; preds = %360
  %1025 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1025, label %1026, label %3249

1026:                                             ; preds = %1024
  %1027 = add i64 %337, 3
  %1028 = inttoptr i64 %1027 to i8*
  %1029 = load atomic i8, i8* %1028 monotonic, align 1
  %1030 = zext i8 %1029 to i32
  %1031 = shl nuw nsw i32 %1030, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1032 = add i64 %362, -1
  %1033 = add i64 %362, 3
  %1034 = add i64 %362, 7
  %1035 = icmp ult i64 %1033, %1034
  br i1 %1035, label %1036, label %1049

1036:                                             ; preds = %1026, %1046
  %1037 = phi i64 [ %1047, %1046 ], [ %1033, %1026 ]
  %1038 = inttoptr i64 %1037 to i32*
  %1039 = load atomic i32, i32* %1038 monotonic, align 4
  %1040 = zext i32 %1039 to i64
  %1041 = and i64 %1040, 1
  %1042 = icmp eq i64 %1041, 0
  br i1 %1042, label %1046, label %1043

1043:                                             ; preds = %1036
  %1044 = and i64 %1037, -4294967296
  %1045 = or i64 %1044, %1040
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1037, i64 %1045) #13
  br label %1046

1046:                                             ; preds = %1043, %1036
  %1047 = add i64 %1037, 4
  %1048 = icmp ult i64 %1047, %1034
  br i1 %1048, label %1036, label %1049

1049:                                             ; preds = %1046, %1026
  %1050 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %138, align 8
  %1051 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %1050, i64 7
  %1052 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %1051, align 8
  call void %1052(%"class.v8::internal::ObjectVisitor"* nonnull %137, i64 %362, i64 %1034) #13
  %1053 = add i64 %362, 11
  %1054 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %138, align 8
  %1055 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %1054, i64 7
  %1056 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %1055, align 8
  call void %1056(%"class.v8::internal::ObjectVisitor"* nonnull %137, i64 %362, i64 %1053) #13
  %1057 = add i64 %362, 15
  %1058 = zext i32 %1031 to i64
  %1059 = add i64 %1032, %1058
  %1060 = icmp ult i64 %1057, %1059
  br i1 %1060, label %1061, label %1074

1061:                                             ; preds = %1049, %1071
  %1062 = phi i64 [ %1072, %1071 ], [ %1057, %1049 ]
  %1063 = inttoptr i64 %1062 to i32*
  %1064 = load atomic i32, i32* %1063 monotonic, align 4
  %1065 = zext i32 %1064 to i64
  %1066 = and i64 %1065, 1
  %1067 = icmp eq i64 %1066, 0
  br i1 %1067, label %1071, label %1068

1068:                                             ; preds = %1061
  %1069 = and i64 %1062, -4294967296
  %1070 = or i64 %1069, %1065
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1062, i64 %1070) #13
  br label %1071

1071:                                             ; preds = %1068, %1061
  %1072 = add i64 %1062, 4
  %1073 = icmp ult i64 %1072, %1059
  br i1 %1073, label %1061, label %1074

1074:                                             ; preds = %1071, %1049
  %1075 = inttoptr i64 %1034 to i32*
  %1076 = load atomic i32, i32* %1075 monotonic, align 4
  %1077 = and i64 %362, -4294967296
  %1078 = zext i32 %1076 to i64
  %1079 = or i64 %1077, %1078
  %1080 = inttoptr i64 %1053 to i32*
  %1081 = load i32, i32* %1080, align 4
  %1082 = zext i32 %1081 to i64
  %1083 = or i64 %1077, %1082
  %1084 = and i64 %1079, -262144
  %1085 = or i64 %1084, 272
  %1086 = sub i64 %1079, %1084
  %1087 = trunc i64 %1086 to i32
  %1088 = lshr i32 %1087, 2
  %1089 = and i32 %1088, 31
  %1090 = shl i32 1, %1089
  %1091 = inttoptr i64 %1085 to i32*
  %1092 = lshr i64 %1086, 7
  %1093 = and i64 %1092, 33554431
  %1094 = getelementptr inbounds i32, i32* %1091, i64 %1093
  %1095 = load atomic i32, i32* %1094 acquire, align 4
  %1096 = and i32 %1090, %1095
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1114, label %1098

1098:                                             ; preds = %1074
  %1099 = and i64 %1083, -262144
  %1100 = or i64 %1099, 272
  %1101 = sub i64 %1083, %1099
  %1102 = trunc i64 %1101 to i32
  %1103 = lshr i32 %1102, 2
  %1104 = and i32 %1103, 31
  %1105 = shl i32 1, %1104
  %1106 = inttoptr i64 %1100 to i32*
  %1107 = lshr i64 %1101, 7
  %1108 = and i64 %1107, 33554431
  %1109 = getelementptr inbounds i32, i32* %1106, i64 %1108
  %1110 = load atomic i32, i32* %1109 acquire, align 4
  %1111 = and i32 %1110, %1105
  %1112 = icmp eq i32 %1111, 0
  br i1 %1112, label %1114, label %1113

1113:                                             ; preds = %1098
  call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362, i64 %1034, i64 %1079) #13
  call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362, i64 %1053, i64 %1083) #13
  br label %3249

1114:                                             ; preds = %1098, %1074
  %1115 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %1116 = load i32, i32* %146, align 8
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1115, i64 0, i32 8, i32 0, i64 %1117, i32 0
  %1119 = load %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %1118, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %1119, i64 0, i32 1
  %1121 = load i64, i64* %1120, align 8
  %1122 = icmp eq i64 %1121, 64
  br i1 %1122, label %1126, label %1123

1123:                                             ; preds = %1114
  %1124 = add i64 %1121, 1
  store i64 %1124, i64* %1120, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %1119, i64 0, i32 2, i64 %1121, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %1125, align 8
  br label %3249

1126:                                             ; preds = %1114
  %1127 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1115, i64 0, i32 8, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1127) #13
  %1128 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1115, i64 0, i32 8, i32 1, i32 1
  %1129 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %1128 to i64*
  %1130 = load i64, i64* %1129, align 8
  %1131 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %1119 to i64*
  store i64 %1130, i64* %1131, align 8
  %1132 = ptrtoint %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %1119 to i64
  store atomic volatile i64 %1132, i64* %1129 monotonic, align 8
  %1133 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1115, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1134 = atomicrmw add i64* %1133, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1127) #13
  %1135 = call i8* @_Znwm(i64 528) #14
  %1136 = getelementptr inbounds i8, i8* %1135, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %1136, i8 0, i64 504, i1 false) #13
  %1137 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %1118 to i8**
  store i8* %1135, i8** %1137, align 8
  %1138 = getelementptr inbounds i8, i8* %1135, i64 8
  %1139 = bitcast i8* %1138 to i64*
  store i64 1, i64* %1139, align 8
  %1140 = getelementptr inbounds i8, i8* %1135, i64 16
  %1141 = bitcast i8* %1140 to i64*
  store i64 %362, i64* %1141, align 8
  br label %3249

1142:                                             ; preds = %360
  %1143 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1143, label %1144, label %3249

1144:                                             ; preds = %1142
  %1145 = add i64 %337, 3
  %1146 = inttoptr i64 %1145 to i8*
  %1147 = load atomic i8, i8* %1146 monotonic, align 1
  %1148 = zext i8 %1147 to i32
  %1149 = shl nuw nsw i32 %1148, 2
  %1150 = add i64 %337, 5
  %1151 = inttoptr i64 %1150 to i8*
  %1152 = load atomic i8, i8* %1151 monotonic, align 1
  %1153 = icmp ult i8 %1152, 3
  br i1 %1153, label %1154, label %1156

1154:                                             ; preds = %1144
  %1155 = load atomic i8, i8* %1146 monotonic, align 1
  br label %1156

1156:                                             ; preds = %1154, %1144
  %1157 = phi i8 [ %1155, %1154 ], [ %1152, %1144 ]
  %1158 = zext i8 %1157 to i32
  %1159 = shl nuw nsw i32 %1158, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %337, i64 %362, i32 4, i32 %1159, %"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31) #13
  br label %3249

1160:                                             ; preds = %360
  %1161 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_9JSWeakRefENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %362) #13
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %3249, label %1163

1163:                                             ; preds = %1160
  %1164 = and i64 %362, -4294967296
  %1165 = add i64 %362, 11
  %1166 = inttoptr i64 %1165 to i32*
  %1167 = load i32, i32* %1166, align 4
  %1168 = zext i32 %1167 to i64
  %1169 = or i64 %1164, %1168
  %1170 = and i64 %1168, 1
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %3249, label %1172

1172:                                             ; preds = %1163
  %1173 = and i64 %1169, -262144
  %1174 = or i64 %1173, 272
  %1175 = sub i64 %1169, %1173
  %1176 = trunc i64 %1175 to i32
  %1177 = lshr i32 %1176, 2
  %1178 = and i32 %1177, 31
  %1179 = shl i32 1, %1178
  %1180 = inttoptr i64 %1174 to i32*
  %1181 = lshr i64 %1175, 7
  %1182 = and i64 %1181, 33554431
  %1183 = getelementptr inbounds i32, i32* %1180, i64 %1182
  %1184 = load atomic i32, i32* %1183 acquire, align 4
  %1185 = and i32 %1184, %1179
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1188, label %1187

1187:                                             ; preds = %1172
  call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362, i64 %1165, i64 %1169) #13
  br label %3249

1188:                                             ; preds = %1172
  %1189 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %1190 = load i32, i32* %146, align 8
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1189, i64 0, i32 7, i32 0, i64 %1191, i32 0
  %1193 = load %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %1192, align 8
  %1194 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %1193, i64 0, i32 1
  %1195 = load i64, i64* %1194, align 8
  %1196 = icmp eq i64 %1195, 64
  br i1 %1196, label %1200, label %1197

1197:                                             ; preds = %1188
  %1198 = add i64 %1195, 1
  store i64 %1198, i64* %1194, align 8
  %1199 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %1193, i64 0, i32 2, i64 %1195, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %1199, align 8
  br label %3249

1200:                                             ; preds = %1188
  %1201 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1189, i64 0, i32 7, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1201) #13
  %1202 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1189, i64 0, i32 7, i32 1, i32 1
  %1203 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %1202 to i64*
  %1204 = load i64, i64* %1203, align 8
  %1205 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %1193 to i64*
  store i64 %1204, i64* %1205, align 8
  %1206 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %1193 to i64
  store atomic volatile i64 %1206, i64* %1203 monotonic, align 8
  %1207 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1189, i64 0, i32 7, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1208 = atomicrmw add i64* %1207, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1201) #13
  %1209 = call i8* @_Znwm(i64 528) #14
  %1210 = getelementptr inbounds i8, i8* %1209, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %1210, i8 0, i64 504, i1 false) #13
  %1211 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %1192 to i8**
  store i8* %1209, i8** %1211, align 8
  %1212 = getelementptr inbounds i8, i8* %1209, i64 8
  %1213 = bitcast i8* %1212 to i64*
  store i64 1, i64* %1213, align 8
  %1214 = getelementptr inbounds i8, i8* %1209, i64 16
  %1215 = bitcast i8* %1214 to i64*
  store i64 %362, i64* %1215, align 8
  br label %3249

1216:                                             ; preds = %360
  %1217 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1217, label %1218, label %3249

1218:                                             ; preds = %1216
  %1219 = add i64 %362, 7
  %1220 = inttoptr i64 %1219 to i16*
  %1221 = load atomic i16, i16* %1220 monotonic, align 2
  %1222 = icmp ugt i16 %1221, 188
  br i1 %1222, label %1223, label %1394

1223:                                             ; preds = %1218
  %1224 = load i64, i64* %166, align 8
  %1225 = add i64 %1224, -41416
  %1226 = inttoptr i64 %1225 to %"class.v8::internal::Isolate"*
  %1227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1226, i64 0, i32 0, i32 4
  %1228 = load i64, i64* %1227, align 8
  %1229 = add i64 %362, 23
  %1230 = inttoptr i64 %1229 to i32*
  %1231 = load atomic i32, i32* %1230 acquire, align 4
  %1232 = and i64 %1228, 4294967295
  %1233 = icmp eq i64 %1232, 0
  call void @llvm.assume(i1 %1233) #13
  %1234 = zext i32 %1231 to i64
  %1235 = or i64 %1228, %1234
  %1236 = and i64 %1234, 1
  %1237 = icmp eq i64 %1236, 0
  br i1 %1237, label %1394, label %1238

1238:                                             ; preds = %1223
  %1239 = add i64 %1235, -1
  %1240 = inttoptr i64 %1239 to i32*
  %1241 = load atomic i32, i32* %1240 monotonic, align 4
  %1242 = zext i32 %1241 to i64
  %1243 = or i64 %1228, %1242
  %1244 = add i64 %1243, 7
  %1245 = inttoptr i64 %1244 to i16*
  %1246 = load atomic i16, i16* %1245 monotonic, align 2
  %1247 = icmp eq i16 %1246, 154
  br i1 %1247, label %1394, label %1248

1248:                                             ; preds = %1238
  %1249 = and i64 %1235, -262144
  %1250 = or i64 %1249, 272
  %1251 = sub i64 %1235, %1249
  %1252 = trunc i64 %1251 to i32
  %1253 = lshr i32 %1252, 2
  %1254 = and i32 %1253, 31
  %1255 = shl i32 1, %1254
  %1256 = inttoptr i64 %1250 to i32*
  %1257 = lshr i64 %1251, 7
  %1258 = and i64 %1257, 33554431
  %1259 = getelementptr inbounds i32, i32* %1256, i64 %1258
  %1260 = load atomic i32, i32* %1259 monotonic, align 4
  br label %1261

1261:                                             ; preds = %1265, %1248
  %1262 = phi i32 [ %1260, %1248 ], [ %1268, %1265 ]
  %1263 = and i32 %1262, %1255
  %1264 = icmp eq i32 %1263, %1255
  br i1 %1264, label %1270, label %1265

1265:                                             ; preds = %1261
  %1266 = or i32 %1262, %1255
  %1267 = cmpxchg volatile i32* %1259, i32 %1262, i32 %1266 release monotonic
  %1268 = extractvalue { i32, i1 } %1267, 0
  %1269 = extractvalue { i32, i1 } %1267, 1
  br i1 %1269, label %1270, label %1261

1270:                                             ; preds = %1265, %1261
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #13
  store i64 %1235, i64* %168, align 8
  %1271 = xor i64 %1249, -1
  %1272 = add i64 %1235, %1271
  %1273 = trunc i64 %1272 to i32
  %1274 = lshr i32 %1273, 2
  %1275 = and i32 %1274, 31
  %1276 = shl i32 1, %1275
  %1277 = lshr i64 %1272, 7
  %1278 = and i64 %1277, 33554431
  %1279 = getelementptr inbounds i32, i32* %1256, i64 %1278
  %1280 = load atomic i32, i32* %1279 acquire, align 4
  %1281 = and i32 %1280, %1276
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1299, label %1283

1283:                                             ; preds = %1270
  %1284 = shl i32 %1276, 1
  %1285 = icmp eq i32 %1284, 0
  %1286 = getelementptr inbounds i32, i32* %1279, i64 1
  %1287 = select i1 %1285, i32 1, i32 %1284
  %1288 = select i1 %1285, i32* %1286, i32* %1279
  %1289 = load atomic i32, i32* %1288 monotonic, align 4
  br label %1290

1290:                                             ; preds = %1294, %1283
  %1291 = phi i32 [ %1289, %1283 ], [ %1297, %1294 ]
  %1292 = and i32 %1291, %1287
  %1293 = icmp eq i32 %1292, %1287
  br i1 %1293, label %1299, label %1294

1294:                                             ; preds = %1290
  %1295 = or i32 %1291, %1287
  %1296 = cmpxchg volatile i32* %1288, i32 %1291, i32 %1295 release monotonic
  %1297 = extractvalue { i32, i1 } %1296, 0
  %1298 = extractvalue { i32, i1 } %1296, 1
  br i1 %1298, label %1300, label %1290

1299:                                             ; preds = %1290, %1270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  br label %1343

1300:                                             ; preds = %1294
  %1301 = inttoptr i64 %1249 to %"class.v8::internal::MemoryChunk"*
  %1302 = load i64, i64* %168, align 8
  %1303 = and i64 %1302, -4294967296
  %1304 = add i64 %1302, -1
  %1305 = inttoptr i64 %1304 to i32*
  %1306 = load atomic i32, i32* %1305 monotonic, align 4
  %1307 = zext i32 %1306 to i64
  %1308 = or i64 %1303, %1307
  %1309 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %22, i64 %1308) #13
  %1310 = sext i32 %1309 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #13
  store %"class.v8::internal::MemoryChunk"* %1301, %"class.v8::internal::MemoryChunk"** %21, align 8
  %1311 = load %"class.std::__1::unordered_map.613"*, %"class.std::__1::unordered_map.613"** %153, align 8
  %1312 = getelementptr inbounds %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.613"* %1311, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #13
  store %"class.v8::internal::MemoryChunk"** %21, %"class.v8::internal::MemoryChunk"*** %171, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #13
  %1313 = call { %"struct.std::__1::__hash_node_base.618"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.614"* %1312, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.1177"* nonnull dereferenceable(1) %20) #13
  %1314 = extractvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } %1313, 0
  %1315 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %1314, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #13
  %1316 = bitcast %"struct.std::__1::__hash_node_base.618"* %1315 to i64*
  %1317 = load i64, i64* %1316, align 8
  %1318 = add nsw i64 %1317, %1310
  store i64 %1318, i64* %1316, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %1235) #13
  %1319 = add i64 %1235, 11
  %1320 = add i64 %1235, 15
  %1321 = icmp ult i64 %1319, %1320
  br i1 %1321, label %1322, label %1335

1322:                                             ; preds = %1300, %1332
  %1323 = phi i64 [ %1333, %1332 ], [ %1319, %1300 ]
  %1324 = inttoptr i64 %1323 to i32*
  %1325 = load atomic i32, i32* %1324 monotonic, align 4
  %1326 = zext i32 %1325 to i64
  %1327 = and i64 %1326, 1
  %1328 = icmp eq i64 %1327, 0
  br i1 %1328, label %1332, label %1329

1329:                                             ; preds = %1322
  %1330 = and i64 %1323, -4294967296
  %1331 = or i64 %1330, %1326
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %1235, i64 %1323, i64 %1331) #13
  br label %1332

1332:                                             ; preds = %1329, %1322
  %1333 = add i64 %1323, 4
  %1334 = icmp ult i64 %1333, %1320
  br i1 %1334, label %1322, label %1335

1335:                                             ; preds = %1332, %1300
  %1336 = load atomic i32, i32* %1240 monotonic, align 4
  %1337 = add i64 %1235, 3
  %1338 = inttoptr i64 %1337 to i16*
  %1339 = load i16, i16* %1338, align 2
  %1340 = zext i16 %1339 to i32
  %1341 = mul nuw nsw i32 %1340, 12
  %1342 = add nuw nsw i32 %1341, 16
  br label %1343

1343:                                             ; preds = %1335, %1299
  %1344 = phi i32 [ %1342, %1335 ], [ 0, %1299 ]
  %1345 = add i64 %362, 11
  %1346 = inttoptr i64 %1345 to i32*
  %1347 = load atomic i32, i32* %1346 acquire, align 4
  %1348 = lshr i32 %1347, 10
  %1349 = and i32 %1348, 1023
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %1394, label %1351

1351:                                             ; preds = %1343
  %1352 = add i64 %1235, 5
  %1353 = inttoptr i64 %1352 to i16*
  %1354 = load atomic i16, i16* %1353 monotonic, align 2
  %1355 = sext i16 %1354 to i32
  %1356 = icmp sgt i32 %1349, %1355
  %1357 = select i1 %1356, i32 %1355, i32 %1349
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #13
  store i64 %1235, i64* %174, align 8
  %1358 = trunc i32 %1357 to i16
  %1359 = load i32, i32* %68, align 4
  %1360 = call signext i16 @_ZN2v88internal15DescriptorArray31UpdateNumberOfMarkedDescriptorsEjs(%"class.v8::internal::DescriptorArray"* nonnull %23, i32 %1359, i16 signext %1358) #13
  %1361 = sext i16 %1360 to i32
  %1362 = icmp sgt i32 %1357, %1361
  br i1 %1362, label %1363, label %1393

1363:                                             ; preds = %1351
  %1364 = load i64, i64* %174, align 8
  %1365 = mul nsw i32 %1361, 12
  %1366 = add nsw i32 %1365, 15
  %1367 = sext i32 %1366 to i64
  %1368 = add i64 %1364, %1367
  %1369 = mul nsw i32 %1357, 12
  %1370 = add nsw i32 %1369, 15
  %1371 = sext i32 %1370 to i64
  %1372 = add i64 %1364, %1371
  %1373 = icmp ult i64 %1368, %1372
  br i1 %1373, label %1374, label %1393

1374:                                             ; preds = %1363, %1390
  %1375 = phi i64 [ %1391, %1390 ], [ %1368, %1363 ]
  %1376 = inttoptr i64 %1375 to i32*
  %1377 = load atomic i32, i32* %1376 monotonic, align 4
  %1378 = and i64 %1375, -4294967296
  %1379 = zext i32 %1377 to i64
  %1380 = or i64 %1378, %1379
  %1381 = and i64 %1379, 3
  %1382 = icmp eq i64 %1381, 1
  br i1 %1382, label %1383, label %1384

1383:                                             ; preds = %1374
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %1364, i64 %1375, i64 %1380) #13
  br label %1390

1384:                                             ; preds = %1374
  %1385 = icmp eq i64 %1381, 3
  %1386 = icmp ne i32 %1377, 3
  %1387 = and i1 %1386, %1385
  br i1 %1387, label %1388, label %1390

1388:                                             ; preds = %1384
  %1389 = and i64 %1380, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %1364, i64 %1375, i64 %1389) #13
  br label %1390

1390:                                             ; preds = %1388, %1384, %1383
  %1391 = add i64 %1375, 4
  %1392 = icmp ult i64 %1391, %1372
  br i1 %1392, label %1374, label %1393

1393:                                             ; preds = %1390, %1363, %1351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #13
  br label %1394

1394:                                             ; preds = %1393, %1343, %1238, %1223, %1218
  %1395 = phi i32 [ 0, %1218 ], [ 0, %1223 ], [ 0, %1238 ], [ %1344, %1343 ], [ %1344, %1393 ]
  %1396 = add nsw i32 %1395, 40
  %1397 = add i64 %362, 15
  %1398 = add i64 %362, 35
  %1399 = icmp ult i64 %1397, %1398
  br i1 %1399, label %1400, label %1413

1400:                                             ; preds = %1394, %1410
  %1401 = phi i64 [ %1411, %1410 ], [ %1397, %1394 ]
  %1402 = inttoptr i64 %1401 to i32*
  %1403 = load atomic i32, i32* %1402 monotonic, align 4
  %1404 = zext i32 %1403 to i64
  %1405 = and i64 %1404, 1
  %1406 = icmp eq i64 %1405, 0
  br i1 %1406, label %1410, label %1407

1407:                                             ; preds = %1400
  %1408 = and i64 %1401, -4294967296
  %1409 = or i64 %1408, %1404
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1401, i64 %1409) #13
  br label %1410

1410:                                             ; preds = %1407, %1400
  %1411 = add i64 %1401, 4
  %1412 = icmp ult i64 %1411, %1398
  br i1 %1412, label %1400, label %1413

1413:                                             ; preds = %1410, %1394
  %1414 = add i64 %362, 39
  %1415 = icmp ult i64 %1398, -4
  br i1 %1415, label %1416, label %3249

1416:                                             ; preds = %1413, %1432
  %1417 = phi i64 [ %1433, %1432 ], [ %1398, %1413 ]
  %1418 = inttoptr i64 %1417 to i32*
  %1419 = load atomic i32, i32* %1418 monotonic, align 4
  %1420 = and i64 %1417, -4294967296
  %1421 = zext i32 %1419 to i64
  %1422 = or i64 %1420, %1421
  %1423 = and i64 %1421, 3
  %1424 = icmp eq i64 %1423, 1
  br i1 %1424, label %1425, label %1426

1425:                                             ; preds = %1416
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1417, i64 %1422) #13
  br label %1432

1426:                                             ; preds = %1416
  %1427 = icmp eq i64 %1423, 3
  %1428 = icmp ne i32 %1419, 3
  %1429 = and i1 %1428, %1427
  br i1 %1429, label %1430, label %1432

1430:                                             ; preds = %1426
  %1431 = and i64 %1422, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1417, i64 %1431) #13
  br label %1432

1432:                                             ; preds = %1430, %1426, %1425
  %1433 = add i64 %1417, 4
  %1434 = icmp ult i64 %1433, %1414
  br i1 %1434, label %1416, label %3249

1435:                                             ; preds = %360
  %1436 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1436, label %1437, label %3249

1437:                                             ; preds = %1435
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1438 = add i64 %362, 3
  %1439 = add i64 %362, 1015
  %1440 = icmp ult i64 %1438, %1439
  br i1 %1440, label %1441, label %3249

1441:                                             ; preds = %1437, %1451
  %1442 = phi i64 [ %1452, %1451 ], [ %1438, %1437 ]
  %1443 = inttoptr i64 %1442 to i32*
  %1444 = load atomic i32, i32* %1443 monotonic, align 4
  %1445 = zext i32 %1444 to i64
  %1446 = and i64 %1445, 1
  %1447 = icmp eq i64 %1446, 0
  br i1 %1447, label %1451, label %1448

1448:                                             ; preds = %1441
  %1449 = and i64 %1442, -4294967296
  %1450 = or i64 %1449, %1445
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1442, i64 %1450) #13
  br label %1451

1451:                                             ; preds = %1448, %1441
  %1452 = add i64 %1442, 4
  %1453 = icmp ult i64 %1452, %1439
  br i1 %1453, label %1441, label %3249

1454:                                             ; preds = %360
  %1455 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1455, label %1456, label %3249

1456:                                             ; preds = %1454
  %1457 = add i64 %362, 3
  %1458 = inttoptr i64 %1457 to i32*
  %1459 = load i32, i32* %1458, align 4
  %1460 = add i64 %362, 7
  %1461 = inttoptr i64 %1460 to i32*
  %1462 = load i32, i32* %1461, align 4
  %1463 = add i32 %1459, 15
  %1464 = and i32 %1463, -4
  %1465 = shl i32 %1462, 2
  %1466 = add nsw i32 %1464, %1465
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1467 = load i32, i32* %1458, align 4
  %1468 = add i32 %1467, 15
  %1469 = and i32 %1468, -4
  %1470 = load i32, i32* %1461, align 4
  %1471 = shl i32 %1470, 2
  %1472 = add nsw i32 %1469, %1471
  %1473 = icmp eq i32 %1469, 0
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1456
  %1475 = sext i32 %1469 to i64
  br label %1477

1476:                                             ; preds = %1456
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %1477

1477:                                             ; preds = %1476, %1474
  %1478 = phi i64 [ %1475, %1474 ], [ 4, %1476 ]
  %1479 = add i64 %362, -1
  %1480 = add i64 %1478, %1479
  %1481 = sext i32 %1472 to i64
  %1482 = add i64 %1479, %1481
  %1483 = icmp ult i64 %1480, %1482
  br i1 %1483, label %1484, label %3249

1484:                                             ; preds = %1477, %1494
  %1485 = phi i64 [ %1495, %1494 ], [ %1480, %1477 ]
  %1486 = inttoptr i64 %1485 to i32*
  %1487 = load atomic i32, i32* %1486 monotonic, align 4
  %1488 = zext i32 %1487 to i64
  %1489 = and i64 %1488, 1
  %1490 = icmp eq i64 %1489, 0
  br i1 %1490, label %1494, label %1491

1491:                                             ; preds = %1484
  %1492 = and i64 %1485, -4294967296
  %1493 = or i64 %1492, %1488
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1485, i64 %1493) #13
  br label %1494

1494:                                             ; preds = %1491, %1484
  %1495 = add i64 %1485, 4
  %1496 = icmp ult i64 %1495, %1482
  br i1 %1496, label %1484, label %3249

1497:                                             ; preds = %360
  %1498 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1498, label %1499, label %3249

1499:                                             ; preds = %1497
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #13
  store i64 %362, i64* %164, align 8
  %1500 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %18, i64 %337) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1501 = add i64 %362, -1
  %1502 = add i64 %362, 7
  %1503 = sext i32 %1500 to i64
  %1504 = add i64 %1501, %1503
  %1505 = icmp ult i64 %1502, %1504
  br i1 %1505, label %1506, label %3249

1506:                                             ; preds = %1499, %1516
  %1507 = phi i64 [ %1517, %1516 ], [ %1502, %1499 ]
  %1508 = inttoptr i64 %1507 to i32*
  %1509 = load atomic i32, i32* %1508 monotonic, align 4
  %1510 = zext i32 %1509 to i64
  %1511 = and i64 %1510, 1
  %1512 = icmp eq i64 %1511, 0
  br i1 %1512, label %1516, label %1513

1513:                                             ; preds = %1506
  %1514 = and i64 %1507, -4294967296
  %1515 = or i64 %1514, %1510
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1507, i64 %1515) #13
  br label %1516

1516:                                             ; preds = %1513, %1506
  %1517 = add i64 %1507, 4
  %1518 = icmp ult i64 %1517, %1504
  br i1 %1518, label %1506, label %3249

1519:                                             ; preds = %360
  %1520 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1520, label %1521, label %3249

1521:                                             ; preds = %1519
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1522 = add i64 %362, 3
  %1523 = add i64 %362, 19
  %1524 = icmp ult i64 %1522, %1523
  br i1 %1524, label %1525, label %3249

1525:                                             ; preds = %1521, %1535
  %1526 = phi i64 [ %1536, %1535 ], [ %1522, %1521 ]
  %1527 = inttoptr i64 %1526 to i32*
  %1528 = load atomic i32, i32* %1527 monotonic, align 4
  %1529 = zext i32 %1528 to i64
  %1530 = and i64 %1529, 1
  %1531 = icmp eq i64 %1530, 0
  br i1 %1531, label %1535, label %1532

1532:                                             ; preds = %1525
  %1533 = and i64 %1526, -4294967296
  %1534 = or i64 %1533, %1529
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1526, i64 %1534) #13
  br label %1535

1535:                                             ; preds = %1532, %1525
  %1536 = add i64 %1526, 4
  %1537 = icmp ult i64 %1536, %1523
  br i1 %1537, label %1525, label %3249

1538:                                             ; preds = %360
  %1539 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1539, label %1540, label %3249

1540:                                             ; preds = %1538
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #13
  store i64 %362, i64* %162, align 8
  %1541 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %337) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  call void @_ZN2v88internal13PrototypeInfo14BodyDescriptor11IterateBodyINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64 %337, i64 %362, i32 %1541, %"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31) #13
  br label %3249

1542:                                             ; preds = %360
  %1543 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1543, label %1544, label %3249

1544:                                             ; preds = %1542
  %1545 = add i64 %362, 5
  %1546 = inttoptr i64 %1545 to i8*
  %1547 = load i8, i8* %1546, align 1
  %1548 = zext i8 %1547 to i32
  %1549 = mul nuw nsw i32 %1548, 18
  %1550 = add nuw nsw i32 %1548, 11
  %1551 = add nuw nsw i32 %1550, %1549
  %1552 = and i32 %1551, 16380
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1553 = load i8, i8* %1546, align 1
  %1554 = zext i8 %1553 to i64
  %1555 = shl nuw nsw i64 %1554, 4
  %1556 = or i64 %1555, 8
  %1557 = add i64 %362, -1
  %1558 = add i64 %362, 7
  %1559 = add i64 %1557, %1556
  %1560 = icmp ult i64 %1558, %1559
  br i1 %1560, label %1561, label %3249

1561:                                             ; preds = %1544, %1571
  %1562 = phi i64 [ %1572, %1571 ], [ %1558, %1544 ]
  %1563 = inttoptr i64 %1562 to i32*
  %1564 = load atomic i32, i32* %1563 monotonic, align 4
  %1565 = zext i32 %1564 to i64
  %1566 = and i64 %1565, 1
  %1567 = icmp eq i64 %1566, 0
  br i1 %1567, label %1571, label %1568

1568:                                             ; preds = %1561
  %1569 = and i64 %1562, -4294967296
  %1570 = or i64 %1569, %1565
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1562, i64 %1570) #13
  br label %1571

1571:                                             ; preds = %1568, %1561
  %1572 = add i64 %1562, 4
  %1573 = icmp ult i64 %1572, %1559
  br i1 %1573, label %1561, label %3249

1574:                                             ; preds = %360
  %1575 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1575, label %1576, label %3249

1576:                                             ; preds = %1574
  %1577 = add i64 %362, 5
  %1578 = inttoptr i64 %1577 to i8*
  %1579 = load i8, i8* %1578, align 1
  %1580 = zext i8 %1579 to i32
  %1581 = mul nuw nsw i32 %1580, 10
  %1582 = add nuw nsw i32 %1580, 11
  %1583 = add nuw nsw i32 %1582, %1581
  %1584 = and i32 %1583, 8188
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1585 = load i8, i8* %1578, align 1
  %1586 = zext i8 %1585 to i64
  %1587 = shl nuw nsw i64 %1586, 3
  %1588 = add i64 %362, 7
  %1589 = add i64 %1587, %1588
  %1590 = icmp ult i64 %1588, %1589
  br i1 %1590, label %1591, label %3249

1591:                                             ; preds = %1576, %1601
  %1592 = phi i64 [ %1602, %1601 ], [ %1588, %1576 ]
  %1593 = inttoptr i64 %1592 to i32*
  %1594 = load atomic i32, i32* %1593 monotonic, align 4
  %1595 = zext i32 %1594 to i64
  %1596 = and i64 %1595, 1
  %1597 = icmp eq i64 %1596, 0
  br i1 %1597, label %1601, label %1598

1598:                                             ; preds = %1591
  %1599 = and i64 %1592, -4294967296
  %1600 = or i64 %1599, %1595
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1592, i64 %1600) #13
  br label %1601

1601:                                             ; preds = %1598, %1591
  %1602 = add i64 %1592, 4
  %1603 = icmp ult i64 %1602, %1589
  br i1 %1603, label %1591, label %3249

1604:                                             ; preds = %360
  %1605 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1605, label %1606, label %3249

1606:                                             ; preds = %1604
  %1607 = add i64 %362, 9
  %1608 = inttoptr i64 %1607 to i8*
  %1609 = load i8, i8* %1608, align 1
  %1610 = zext i8 %1609 to i32
  %1611 = mul nuw nsw i32 %1610, 26
  %1612 = add nuw nsw i32 %1610, 15
  %1613 = add nuw nsw i32 %1612, %1611
  %1614 = and i32 %1613, 16380
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1615 = load i8, i8* %1608, align 1
  %1616 = zext i8 %1615 to i64
  %1617 = mul nuw nsw i64 %1616, 24
  %1618 = add i64 %362, 11
  %1619 = add i64 %1617, %1618
  %1620 = icmp ult i64 %1618, %1619
  br i1 %1620, label %1621, label %3249

1621:                                             ; preds = %1606, %1631
  %1622 = phi i64 [ %1632, %1631 ], [ %1618, %1606 ]
  %1623 = inttoptr i64 %1622 to i32*
  %1624 = load atomic i32, i32* %1623 monotonic, align 4
  %1625 = zext i32 %1624 to i64
  %1626 = and i64 %1625, 1
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1631, label %1628

1628:                                             ; preds = %1621
  %1629 = and i64 %1622, -4294967296
  %1630 = or i64 %1629, %1625
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1622, i64 %1630) #13
  br label %1631

1631:                                             ; preds = %1628, %1621
  %1632 = add i64 %1622, 4
  %1633 = icmp ult i64 %1632, %1619
  br i1 %1633, label %1621, label %3249

1634:                                             ; preds = %360
  %1635 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1635, label %1636, label %3249

1636:                                             ; preds = %1634
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1637 = add i64 %362, 3
  %1638 = add i64 %362, 27
  %1639 = icmp ult i64 %1637, %1638
  br i1 %1639, label %1640, label %1653

1640:                                             ; preds = %1636, %1650
  %1641 = phi i64 [ %1651, %1650 ], [ %1637, %1636 ]
  %1642 = inttoptr i64 %1641 to i32*
  %1643 = load atomic i32, i32* %1642 monotonic, align 4
  %1644 = zext i32 %1643 to i64
  %1645 = and i64 %1644, 1
  %1646 = icmp eq i64 %1645, 0
  br i1 %1646, label %1650, label %1647

1647:                                             ; preds = %1640
  %1648 = and i64 %1641, -4294967296
  %1649 = or i64 %1648, %1644
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1641, i64 %1649) #13
  br label %1650

1650:                                             ; preds = %1647, %1640
  %1651 = add i64 %1641, 4
  %1652 = icmp ult i64 %1651, %1638
  br i1 %1652, label %1640, label %1653

1653:                                             ; preds = %1650, %1636
  %1654 = add i64 %362, 71
  %1655 = icmp ult i64 %1638, %1654
  br i1 %1655, label %1656, label %3249

1656:                                             ; preds = %1653, %1666
  %1657 = phi i64 [ %1667, %1666 ], [ %1638, %1653 ]
  %1658 = inttoptr i64 %1657 to i32*
  %1659 = load atomic i32, i32* %1658 monotonic, align 4
  %1660 = zext i32 %1659 to i64
  %1661 = and i64 %1660, 1
  %1662 = icmp eq i64 %1661, 0
  br i1 %1662, label %1666, label %1663

1663:                                             ; preds = %1656
  %1664 = and i64 %1657, -4294967296
  %1665 = or i64 %1664, %1660
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1657, i64 %1665) #13
  br label %1666

1666:                                             ; preds = %1663, %1656
  %1667 = add i64 %1657, 4
  %1668 = icmp ult i64 %1667, %1654
  br i1 %1668, label %1656, label %3249

1669:                                             ; preds = %360
  %1670 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1670, label %1671, label %3249

1671:                                             ; preds = %1669
  %1672 = add i64 %362, 7
  %1673 = inttoptr i64 %1672 to i32*
  %1674 = load i32, i32* %1673, align 4
  %1675 = mul i32 %1674, 9
  %1676 = add i32 %1674, 32
  %1677 = add i32 %1676, %1675
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1678 = load i32, i32* %1673, align 4
  %1679 = shl i32 %1678, 3
  %1680 = add nsw i32 %1679, 16
  %1681 = add i64 %362, -1
  %1682 = add i64 %362, 11
  %1683 = sext i32 %1680 to i64
  %1684 = add i64 %1681, %1683
  %1685 = icmp ult i64 %1682, %1684
  br i1 %1685, label %1686, label %3249

1686:                                             ; preds = %1671, %1696
  %1687 = phi i64 [ %1697, %1696 ], [ %1682, %1671 ]
  %1688 = inttoptr i64 %1687 to i32*
  %1689 = load atomic i32, i32* %1688 monotonic, align 4
  %1690 = zext i32 %1689 to i64
  %1691 = and i64 %1690, 1
  %1692 = icmp eq i64 %1691, 0
  br i1 %1692, label %1696, label %1693

1693:                                             ; preds = %1686
  %1694 = and i64 %1687, -4294967296
  %1695 = or i64 %1694, %1690
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1687, i64 %1695) #13
  br label %1696

1696:                                             ; preds = %1693, %1686
  %1697 = add i64 %1687, 4
  %1698 = icmp ult i64 %1697, %1684
  br i1 %1698, label %1686, label %3249

1699:                                             ; preds = %360
  %1700 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1700, label %1701, label %3249

1701:                                             ; preds = %1699
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1702 = add i64 %362, 11
  %1703 = add i64 %362, 15
  %1704 = icmp ult i64 %1702, %1703
  br i1 %1704, label %1705, label %3249

1705:                                             ; preds = %1701, %1715
  %1706 = phi i64 [ %1716, %1715 ], [ %1702, %1701 ]
  %1707 = inttoptr i64 %1706 to i32*
  %1708 = load atomic i32, i32* %1707 monotonic, align 4
  %1709 = zext i32 %1708 to i64
  %1710 = and i64 %1709, 1
  %1711 = icmp eq i64 %1710, 0
  br i1 %1711, label %1715, label %1712

1712:                                             ; preds = %1705
  %1713 = and i64 %1706, -4294967296
  %1714 = or i64 %1713, %1709
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1706, i64 %1714) #13
  br label %1715

1715:                                             ; preds = %1712, %1705
  %1716 = add i64 %1706, 4
  %1717 = icmp ult i64 %1716, %1703
  br i1 %1717, label %1705, label %3249

1718:                                             ; preds = %360
  %1719 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1719, label %1720, label %3249

1720:                                             ; preds = %1718
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1721 = add i64 %362, 3
  %1722 = add i64 %362, 27
  %1723 = icmp ult i64 %1721, %1722
  br i1 %1723, label %1724, label %1737

1724:                                             ; preds = %1720, %1734
  %1725 = phi i64 [ %1735, %1734 ], [ %1721, %1720 ]
  %1726 = inttoptr i64 %1725 to i32*
  %1727 = load atomic i32, i32* %1726 monotonic, align 4
  %1728 = zext i32 %1727 to i64
  %1729 = and i64 %1728, 1
  %1730 = icmp eq i64 %1729, 0
  br i1 %1730, label %1734, label %1731

1731:                                             ; preds = %1724
  %1732 = and i64 %1725, -4294967296
  %1733 = or i64 %1732, %1728
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1725, i64 %1733) #13
  br label %1734

1734:                                             ; preds = %1731, %1724
  %1735 = add i64 %1725, 4
  %1736 = icmp ult i64 %1735, %1722
  br i1 %1736, label %1724, label %1737

1737:                                             ; preds = %1734, %1720
  %1738 = add i64 %362, 39
  %1739 = icmp ult i64 %1722, %1738
  br i1 %1739, label %1740, label %3249

1740:                                             ; preds = %1737, %1750
  %1741 = phi i64 [ %1751, %1750 ], [ %1722, %1737 ]
  %1742 = inttoptr i64 %1741 to i32*
  %1743 = load atomic i32, i32* %1742 monotonic, align 4
  %1744 = zext i32 %1743 to i64
  %1745 = and i64 %1744, 1
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1750, label %1747

1747:                                             ; preds = %1740
  %1748 = and i64 %1741, -4294967296
  %1749 = or i64 %1748, %1744
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1741, i64 %1749) #13
  br label %1750

1750:                                             ; preds = %1747, %1740
  %1751 = add i64 %1741, 4
  %1752 = icmp ult i64 %1751, %1738
  br i1 %1752, label %1740, label %3249

1753:                                             ; preds = %360
  %1754 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1754, label %1755, label %3249

1755:                                             ; preds = %1753
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1756 = add i64 %362, 3
  %1757 = inttoptr i64 %1756 to i32*
  %1758 = load atomic i32, i32* %1757 acquire, align 4
  %1759 = lshr i32 %1758, 1
  %1760 = shl i32 %1759, 2
  %1761 = add nsw i32 %1760, 8
  %1762 = add i64 %362, -1
  %1763 = sext i32 %1761 to i64
  %1764 = add i64 %1762, %1763
  %1765 = icmp ult i64 %1756, %1764
  br i1 %1765, label %1766, label %1785

1766:                                             ; preds = %1755, %1782
  %1767 = phi i64 [ %1783, %1782 ], [ %1756, %1755 ]
  %1768 = inttoptr i64 %1767 to i32*
  %1769 = load atomic i32, i32* %1768 monotonic, align 4
  %1770 = and i64 %1767, -4294967296
  %1771 = zext i32 %1769 to i64
  %1772 = or i64 %1770, %1771
  %1773 = and i64 %1771, 3
  %1774 = icmp eq i64 %1773, 1
  br i1 %1774, label %1775, label %1776

1775:                                             ; preds = %1766
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1767, i64 %1772) #13
  br label %1782

1776:                                             ; preds = %1766
  %1777 = icmp eq i64 %1773, 3
  %1778 = icmp ne i32 %1769, 3
  %1779 = and i1 %1778, %1777
  br i1 %1779, label %1780, label %1782

1780:                                             ; preds = %1776
  %1781 = and i64 %1772, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1767, i64 %1781) #13
  br label %1782

1782:                                             ; preds = %1780, %1776, %1775
  %1783 = add i64 %1767, 4
  %1784 = icmp ult i64 %1783, %1764
  br i1 %1784, label %1766, label %1785

1785:                                             ; preds = %1782, %1755
  %1786 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %1787 = load i32, i32* %146, align 8
  %1788 = sext i32 %1787 to i64
  %1789 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1786, i64 0, i32 0, i32 0, i64 %1788, i32 0
  %1790 = load %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %1789, align 8
  %1791 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %1790, i64 0, i32 1
  %1792 = load i64, i64* %1791, align 8
  %1793 = icmp eq i64 %1792, 64
  br i1 %1793, label %1797, label %1794

1794:                                             ; preds = %1785
  %1795 = add i64 %1792, 1
  store i64 %1795, i64* %1791, align 8
  %1796 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %1790, i64 0, i32 2, i64 %1792, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %1796, align 8
  br label %3249

1797:                                             ; preds = %1785
  %1798 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1786, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1798) #13
  %1799 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1786, i64 0, i32 0, i32 1, i32 1
  %1800 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %1799 to i64*
  %1801 = load i64, i64* %1800, align 8
  %1802 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %1790 to i64*
  store i64 %1801, i64* %1802, align 8
  %1803 = ptrtoint %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %1790 to i64
  store atomic volatile i64 %1803, i64* %1800 monotonic, align 8
  %1804 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %1786, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1805 = atomicrmw add i64* %1804, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1798) #13
  %1806 = call i8* @_Znwm(i64 528) #14
  %1807 = getelementptr inbounds i8, i8* %1806, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %1807, i8 0, i64 504, i1 false) #13
  %1808 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %1789 to i8**
  store i8* %1806, i8** %1808, align 8
  %1809 = getelementptr inbounds i8, i8* %1806, i64 8
  %1810 = bitcast i8* %1809 to i64*
  store i64 1, i64* %1810, align 8
  %1811 = getelementptr inbounds i8, i8* %1806, i64 16
  %1812 = bitcast i8* %1811 to i64*
  store i64 %362, i64* %1812, align 8
  br label %3249

1813:                                             ; preds = %360
  %1814 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1814, label %1815, label %3249

1815:                                             ; preds = %1813
  %1816 = add i64 %362, 7
  %1817 = inttoptr i64 %1816 to i32*
  %1818 = load i32, i32* %1817, align 4
  %1819 = add i64 %337, 19
  %1820 = inttoptr i64 %1819 to i32*
  %1821 = load i32, i32* %1820, align 4
  %1822 = zext i32 %1821 to i64
  %1823 = or i64 %331, %1822
  %1824 = add i64 %1823, -1
  %1825 = inttoptr i64 %1824 to i32*
  %1826 = load atomic i32, i32* %1825 monotonic, align 4
  %1827 = zext i32 %1826 to i64
  %1828 = or i64 %331, %1827
  %1829 = and i64 %1827, 3
  %1830 = icmp eq i64 %1829, 0
  %1831 = add i64 %1828, 1
  %1832 = select i1 %1830, i64 %1831, i64 %1823
  %1833 = add i64 %1832, 3
  %1834 = inttoptr i64 %1833 to %"class.v8::internal::wasm::ArrayType"**
  %1835 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %1834, align 1
  %1836 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %1835, i64 0, i32 0, i32 0
  %1837 = load i32, i32* %1836, align 4
  %1838 = and i32 %1837, 31
  %1839 = zext i32 %1838 to i64
  %1840 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %1839
  %1841 = load i8, i8* %1840, align 1
  %1842 = sext i8 %1841 to i32
  %1843 = mul nsw i32 %1818, %1842
  %1844 = add i32 %1843, 15
  %1845 = and i32 %1844, -4
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1846 = load i32, i32* %1820, align 4
  %1847 = zext i32 %1846 to i64
  %1848 = or i64 %331, %1847
  %1849 = add i64 %1848, -1
  %1850 = inttoptr i64 %1849 to i32*
  %1851 = load atomic i32, i32* %1850 monotonic, align 4
  %1852 = zext i32 %1851 to i64
  %1853 = or i64 %331, %1852
  %1854 = and i64 %1852, 3
  %1855 = icmp eq i64 %1854, 0
  %1856 = add i64 %1853, 1
  %1857 = select i1 %1855, i64 %1856, i64 %1848
  %1858 = add i64 %1857, 3
  %1859 = inttoptr i64 %1858 to %"class.v8::internal::wasm::ArrayType"**
  %1860 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %1859, align 1
  %1861 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %1860, i64 0, i32 0, i32 0
  %1862 = load i32, i32* %1861, align 4
  %1863 = and i32 %1862, 28
  %1864 = icmp eq i32 %1863, 8
  br i1 %1864, label %1865, label %3249

1865:                                             ; preds = %1815
  %1866 = add i64 %362, -1
  %1867 = add i64 %362, 11
  %1868 = sext i32 %1845 to i64
  %1869 = add i64 %1866, %1868
  %1870 = icmp ult i64 %1867, %1869
  br i1 %1870, label %1871, label %3249

1871:                                             ; preds = %1865, %1881
  %1872 = phi i64 [ %1882, %1881 ], [ %1867, %1865 ]
  %1873 = inttoptr i64 %1872 to i32*
  %1874 = load atomic i32, i32* %1873 monotonic, align 4
  %1875 = zext i32 %1874 to i64
  %1876 = and i64 %1875, 1
  %1877 = icmp eq i64 %1876, 0
  br i1 %1877, label %1881, label %1878

1878:                                             ; preds = %1871
  %1879 = and i64 %1872, -4294967296
  %1880 = or i64 %1879, %1875
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1872, i64 %1880) #13
  br label %1881

1881:                                             ; preds = %1878, %1871
  %1882 = add i64 %1872, 4
  %1883 = icmp ult i64 %1882, %1869
  br i1 %1883, label %1871, label %3249

1884:                                             ; preds = %360
  %1885 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1885, label %1886, label %3249

1886:                                             ; preds = %1884
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1887 = add i64 %362, 11
  %1888 = add i64 %362, 27
  %1889 = icmp ult i64 %1887, %1888
  br i1 %1889, label %1890, label %3249

1890:                                             ; preds = %1886, %1900
  %1891 = phi i64 [ %1901, %1900 ], [ %1887, %1886 ]
  %1892 = inttoptr i64 %1891 to i32*
  %1893 = load atomic i32, i32* %1892 monotonic, align 4
  %1894 = zext i32 %1893 to i64
  %1895 = and i64 %1894, 1
  %1896 = icmp eq i64 %1895, 0
  br i1 %1896, label %1900, label %1897

1897:                                             ; preds = %1890
  %1898 = and i64 %1891, -4294967296
  %1899 = or i64 %1898, %1894
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1891, i64 %1899) #13
  br label %1900

1900:                                             ; preds = %1897, %1890
  %1901 = add i64 %1891, 4
  %1902 = icmp ult i64 %1901, %1888
  br i1 %1902, label %1890, label %3249

1903:                                             ; preds = %360
  %1904 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1904, label %1905, label %3249

1905:                                             ; preds = %1903
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1906 = add i64 %362, 11
  %1907 = add i64 %362, 43
  %1908 = icmp ult i64 %1906, %1907
  br i1 %1908, label %1909, label %3249

1909:                                             ; preds = %1905, %1919
  %1910 = phi i64 [ %1920, %1919 ], [ %1906, %1905 ]
  %1911 = inttoptr i64 %1910 to i32*
  %1912 = load atomic i32, i32* %1911 monotonic, align 4
  %1913 = zext i32 %1912 to i64
  %1914 = and i64 %1913, 1
  %1915 = icmp eq i64 %1914, 0
  br i1 %1915, label %1919, label %1916

1916:                                             ; preds = %1909
  %1917 = and i64 %1910, -4294967296
  %1918 = or i64 %1917, %1913
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1910, i64 %1918) #13
  br label %1919

1919:                                             ; preds = %1916, %1909
  %1920 = add i64 %1910, 4
  %1921 = icmp ult i64 %1920, %1907
  br i1 %1921, label %1909, label %3249

1922:                                             ; preds = %360
  %1923 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1923, label %1924, label %3249

1924:                                             ; preds = %1922
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

1925:                                             ; preds = %360
  %1926 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1926, label %1927, label %3249

1927:                                             ; preds = %1925
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #13
  store i64 %362, i64* %160, align 8
  %1928 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %337) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #13
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1929 = add i64 %362, -1
  %1930 = add i64 %362, 23
  %1931 = sext i32 %1928 to i64
  %1932 = add i64 %1929, %1931
  %1933 = icmp ult i64 %1930, %1932
  br i1 %1933, label %1934, label %3249

1934:                                             ; preds = %1927, %1944
  %1935 = phi i64 [ %1945, %1944 ], [ %1930, %1927 ]
  %1936 = inttoptr i64 %1935 to i32*
  %1937 = load atomic i32, i32* %1936 monotonic, align 4
  %1938 = zext i32 %1937 to i64
  %1939 = and i64 %1938, 1
  %1940 = icmp eq i64 %1939, 0
  br i1 %1940, label %1944, label %1941

1941:                                             ; preds = %1934
  %1942 = and i64 %1935, -4294967296
  %1943 = or i64 %1942, %1938
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1935, i64 %1943) #13
  br label %1944

1944:                                             ; preds = %1941, %1934
  %1945 = add i64 %1935, 4
  %1946 = icmp ult i64 %1945, %1932
  br i1 %1946, label %1934, label %3249

1947:                                             ; preds = %360
  %1948 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %1948, label %1949, label %3249

1949:                                             ; preds = %1947
  %1950 = add i64 %337, 3
  %1951 = inttoptr i64 %1950 to i8*
  %1952 = load atomic i8, i8* %1951 monotonic, align 1
  %1953 = zext i8 %1952 to i32
  %1954 = shl nuw nsw i32 %1953, 2
  %1955 = add i64 %337, 5
  %1956 = inttoptr i64 %1955 to i8*
  %1957 = load atomic i8, i8* %1956 monotonic, align 1
  %1958 = icmp ult i8 %1957, 3
  br i1 %1958, label %1959, label %1961

1959:                                             ; preds = %1949
  %1960 = load atomic i8, i8* %1951 monotonic, align 1
  br label %1961

1961:                                             ; preds = %1959, %1949
  %1962 = phi i8 [ %1960, %1959 ], [ %1957, %1949 ]
  %1963 = zext i8 %1962 to i32
  %1964 = shl nuw nsw i32 %1963, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %1965 = add i64 %362, -1
  %1966 = add i64 %362, 3
  %1967 = add i64 %362, 11
  %1968 = icmp ult i64 %1966, %1967
  br i1 %1968, label %1969, label %1982

1969:                                             ; preds = %1961, %1979
  %1970 = phi i64 [ %1980, %1979 ], [ %1966, %1961 ]
  %1971 = inttoptr i64 %1970 to i32*
  %1972 = load atomic i32, i32* %1971 monotonic, align 4
  %1973 = zext i32 %1972 to i64
  %1974 = and i64 %1973, 1
  %1975 = icmp eq i64 %1974, 0
  br i1 %1975, label %1979, label %1976

1976:                                             ; preds = %1969
  %1977 = and i64 %1970, -4294967296
  %1978 = or i64 %1977, %1973
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1970, i64 %1978) #13
  br label %1979

1979:                                             ; preds = %1976, %1969
  %1980 = add i64 %1970, 4
  %1981 = icmp ult i64 %1980, %1967
  br i1 %1981, label %1969, label %1982

1982:                                             ; preds = %1979, %1961
  br label %1983

1983:                                             ; preds = %1982, %2003
  %1984 = phi i16* [ %2004, %2003 ], [ getelementptr inbounds ([15 x i16], [15 x i16]* @_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE, i64 0, i64 0), %1982 ]
  %1985 = load i16, i16* %1984, align 2
  %1986 = zext i16 %1985 to i64
  %1987 = add i64 %1965, %1986
  %1988 = add i64 %1987, 4
  %1989 = icmp ult i64 %1987, -4
  br i1 %1989, label %1990, label %2003

1990:                                             ; preds = %1983, %2000
  %1991 = phi i64 [ %2001, %2000 ], [ %1987, %1983 ]
  %1992 = inttoptr i64 %1991 to i32*
  %1993 = load atomic i32, i32* %1992 monotonic, align 4
  %1994 = zext i32 %1993 to i64
  %1995 = and i64 %1994, 1
  %1996 = icmp eq i64 %1995, 0
  br i1 %1996, label %2000, label %1997

1997:                                             ; preds = %1990
  %1998 = and i64 %1991, -4294967296
  %1999 = or i64 %1998, %1994
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %1991, i64 %1999) #13
  br label %2000

2000:                                             ; preds = %1997, %1990
  %2001 = add i64 %1991, 4
  %2002 = icmp ult i64 %2001, %1988
  br i1 %2002, label %1990, label %2003

2003:                                             ; preds = %2000, %1983
  %2004 = getelementptr inbounds i16, i16* %1984, i64 1
  %2005 = icmp eq i16* %2004, getelementptr inbounds ([15 x i16], [15 x i16]* @_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE, i64 1, i64 0)
  br i1 %2005, label %2006, label %1983

2006:                                             ; preds = %2003
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %337, i64 %362, i32 216, i32 %1964, %"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31) #13
  br label %3249

2007:                                             ; preds = %360
  %2008 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2008, label %2009, label %3249

2009:                                             ; preds = %2007
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2010 = add i64 %362, 11
  %2011 = add i64 %362, 35
  %2012 = icmp ult i64 %2010, %2011
  br i1 %2012, label %2013, label %3249

2013:                                             ; preds = %2009, %2023
  %2014 = phi i64 [ %2024, %2023 ], [ %2010, %2009 ]
  %2015 = inttoptr i64 %2014 to i32*
  %2016 = load atomic i32, i32* %2015 monotonic, align 4
  %2017 = zext i32 %2016 to i64
  %2018 = and i64 %2017, 1
  %2019 = icmp eq i64 %2018, 0
  br i1 %2019, label %2023, label %2020

2020:                                             ; preds = %2013
  %2021 = and i64 %2014, -4294967296
  %2022 = or i64 %2021, %2017
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2014, i64 %2022) #13
  br label %2023

2023:                                             ; preds = %2020, %2013
  %2024 = add i64 %2014, 4
  %2025 = icmp ult i64 %2024, %2011
  br i1 %2025, label %2013, label %3249

2026:                                             ; preds = %360
  %2027 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2027, label %2028, label %3249

2028:                                             ; preds = %2026
  %2029 = add i64 %337, 19
  %2030 = inttoptr i64 %2029 to i32*
  %2031 = load i32, i32* %2030, align 4
  %2032 = zext i32 %2031 to i64
  %2033 = or i64 %331, %2032
  %2034 = add i64 %2033, -1
  %2035 = inttoptr i64 %2034 to i32*
  %2036 = load atomic i32, i32* %2035 monotonic, align 4
  %2037 = zext i32 %2036 to i64
  %2038 = or i64 %331, %2037
  %2039 = and i64 %2037, 3
  %2040 = icmp eq i64 %2039, 0
  %2041 = add i64 %2038, 1
  %2042 = select i1 %2040, i64 %2041, i64 %2033
  %2043 = add i64 %2042, 3
  %2044 = inttoptr i64 %2043 to %"class.v8::internal::wasm::StructType"**
  %2045 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %2044, align 1
  %2046 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %2045, i64 0, i32 0
  %2047 = load i32, i32* %2046, align 8
  %2048 = icmp eq i32 %2047, 0
  br i1 %2048, label %2059, label %2049

2049:                                             ; preds = %2028
  %2050 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %2045, i64 0, i32 1
  %2051 = load i32*, i32** %2050, align 8
  %2052 = add i32 %2047, -1
  %2053 = zext i32 %2052 to i64
  %2054 = getelementptr inbounds i32, i32* %2051, i64 %2053
  %2055 = load i32, i32* %2054, align 4
  %2056 = add i32 %2055, 8
  %2057 = icmp sgt i32 %2056, 8
  %2058 = select i1 %2057, i32 %2056, i32 8
  br label %2059

2059:                                             ; preds = %2049, %2028
  %2060 = phi i32 [ %2058, %2049 ], [ 8, %2028 ]
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2061 = load i32, i32* %2030, align 4
  %2062 = zext i32 %2061 to i64
  %2063 = or i64 %331, %2062
  %2064 = add i64 %2063, -1
  %2065 = inttoptr i64 %2064 to i32*
  %2066 = load atomic i32, i32* %2065 monotonic, align 4
  %2067 = zext i32 %2066 to i64
  %2068 = or i64 %331, %2067
  %2069 = and i64 %2067, 3
  %2070 = icmp eq i64 %2069, 0
  %2071 = add i64 %2068, 1
  %2072 = select i1 %2070, i64 %2071, i64 %2063
  %2073 = add i64 %2072, 3
  %2074 = inttoptr i64 %2073 to %"class.v8::internal::wasm::StructType"**
  %2075 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %2074, align 1
  %2076 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %2075, i64 0, i32 0
  %2077 = load i32, i32* %2076, align 8
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %3249, label %2079

2079:                                             ; preds = %2059
  %2080 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %2075, i64 0, i32 2
  %2081 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %2075, i64 0, i32 1
  %2082 = add i64 %362, 7
  br label %2083

2083:                                             ; preds = %2120, %2079
  %2084 = phi i32 [ %2077, %2079 ], [ %2121, %2120 ]
  %2085 = phi i64 [ 0, %2079 ], [ %2122, %2120 ]
  %2086 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %2080, align 8
  %2087 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2086, i64 %2085, i32 0
  %2088 = load i32, i32* %2087, align 4
  %2089 = and i32 %2088, 28
  %2090 = icmp eq i32 %2089, 8
  br i1 %2090, label %2091, label %2120

2091:                                             ; preds = %2083
  %2092 = icmp eq i64 %2085, 0
  br i1 %2092, label %2099, label %2093

2093:                                             ; preds = %2091
  %2094 = load i32*, i32** %2081, align 8
  %2095 = add nuw nsw i64 %2085, 4294967295
  %2096 = and i64 %2095, 4294967295
  %2097 = getelementptr inbounds i32, i32* %2094, i64 %2096
  %2098 = load i32, i32* %2097, align 4
  br label %2099

2099:                                             ; preds = %2093, %2091
  %2100 = phi i32 [ %2098, %2093 ], [ 0, %2091 ]
  %2101 = sext i32 %2100 to i64
  %2102 = add i64 %2082, %2101
  %2103 = add i64 %2102, 4
  %2104 = icmp ult i64 %2102, -4
  br i1 %2104, label %2105, label %2120

2105:                                             ; preds = %2099, %2115
  %2106 = phi i64 [ %2116, %2115 ], [ %2102, %2099 ]
  %2107 = inttoptr i64 %2106 to i32*
  %2108 = load atomic i32, i32* %2107 monotonic, align 4
  %2109 = zext i32 %2108 to i64
  %2110 = and i64 %2109, 1
  %2111 = icmp eq i64 %2110, 0
  br i1 %2111, label %2115, label %2112

2112:                                             ; preds = %2105
  %2113 = and i64 %2106, -4294967296
  %2114 = or i64 %2113, %2109
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2106, i64 %2114) #13
  br label %2115

2115:                                             ; preds = %2112, %2105
  %2116 = add i64 %2106, 4
  %2117 = icmp ult i64 %2116, %2103
  br i1 %2117, label %2105, label %2118

2118:                                             ; preds = %2115
  %2119 = load i32, i32* %2076, align 8
  br label %2120

2120:                                             ; preds = %2118, %2099, %2083
  %2121 = phi i32 [ %2119, %2118 ], [ %2084, %2099 ], [ %2084, %2083 ]
  %2122 = add nuw nsw i64 %2085, 1
  %2123 = zext i32 %2121 to i64
  %2124 = icmp ult i64 %2122, %2123
  br i1 %2124, label %2083, label %3249

2125:                                             ; preds = %360
  %2126 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2126, label %2127, label %3249

2127:                                             ; preds = %2125
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2128 = add i64 %362, 11
  %2129 = add i64 %362, 15
  %2130 = icmp ult i64 %2128, -4
  br i1 %2130, label %2131, label %2144

2131:                                             ; preds = %2127, %2141
  %2132 = phi i64 [ %2142, %2141 ], [ %2128, %2127 ]
  %2133 = inttoptr i64 %2132 to i32*
  %2134 = load atomic i32, i32* %2133 monotonic, align 4
  %2135 = zext i32 %2134 to i64
  %2136 = and i64 %2135, 1
  %2137 = icmp eq i64 %2136, 0
  br i1 %2137, label %2141, label %2138

2138:                                             ; preds = %2131
  %2139 = and i64 %2132, -4294967296
  %2140 = or i64 %2139, %2135
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2132, i64 %2140) #13
  br label %2141

2141:                                             ; preds = %2138, %2131
  %2142 = add i64 %2132, 4
  %2143 = icmp ult i64 %2142, %2129
  br i1 %2143, label %2131, label %2144

2144:                                             ; preds = %2141, %2127
  %2145 = add i64 %362, 19
  %2146 = icmp ult i64 %2129, -4
  br i1 %2146, label %2147, label %3249

2147:                                             ; preds = %2144, %2157
  %2148 = phi i64 [ %2158, %2157 ], [ %2129, %2144 ]
  %2149 = inttoptr i64 %2148 to i32*
  %2150 = load atomic i32, i32* %2149 monotonic, align 4
  %2151 = zext i32 %2150 to i64
  %2152 = and i64 %2151, 1
  %2153 = icmp eq i64 %2152, 0
  br i1 %2153, label %2157, label %2154

2154:                                             ; preds = %2147
  %2155 = and i64 %2148, -4294967296
  %2156 = or i64 %2155, %2151
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2148, i64 %2156) #13
  br label %2157

2157:                                             ; preds = %2154, %2147
  %2158 = add i64 %2148, 4
  %2159 = icmp ult i64 %2158, %2145
  br i1 %2159, label %2147, label %3249

2160:                                             ; preds = %360
  %2161 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2161, label %2162, label %3249

2162:                                             ; preds = %2160
  %2163 = add i64 %362, 3
  %2164 = inttoptr i64 %2163 to i32*
  %2165 = load i32, i32* %2164, align 4
  %2166 = lshr i32 %2165, 1
  %2167 = shl i32 %2166, 2
  %2168 = add nsw i32 %2167, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2169 = add i64 %362, -1
  %2170 = sext i32 %2168 to i64
  %2171 = add i64 %2169, %2170
  %2172 = icmp ult i64 %2163, %2171
  br i1 %2172, label %2173, label %3249

2173:                                             ; preds = %2162, %2183
  %2174 = phi i64 [ %2184, %2183 ], [ %2163, %2162 ]
  %2175 = inttoptr i64 %2174 to i32*
  %2176 = load atomic i32, i32* %2175 monotonic, align 4
  %2177 = zext i32 %2176 to i64
  %2178 = and i64 %2177, 1
  %2179 = icmp eq i64 %2178, 0
  br i1 %2179, label %2183, label %2180

2180:                                             ; preds = %2173
  %2181 = and i64 %2174, -4294967296
  %2182 = or i64 %2181, %2177
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2174, i64 %2182) #13
  br label %2183

2183:                                             ; preds = %2180, %2173
  %2184 = add i64 %2174, 4
  %2185 = icmp ult i64 %2184, %2171
  br i1 %2185, label %2173, label %3249

2186:                                             ; preds = %360
  %2187 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2187, label %2188, label %3249

2188:                                             ; preds = %2186
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2189 = add i64 %362, 11
  %2190 = add i64 %362, 27
  %2191 = icmp ult i64 %2189, %2190
  br i1 %2191, label %2192, label %3249

2192:                                             ; preds = %2188, %2202
  %2193 = phi i64 [ %2203, %2202 ], [ %2189, %2188 ]
  %2194 = inttoptr i64 %2193 to i32*
  %2195 = load atomic i32, i32* %2194 monotonic, align 4
  %2196 = zext i32 %2195 to i64
  %2197 = and i64 %2196, 1
  %2198 = icmp eq i64 %2197, 0
  br i1 %2198, label %2202, label %2199

2199:                                             ; preds = %2192
  %2200 = and i64 %2193, -4294967296
  %2201 = or i64 %2200, %2196
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2193, i64 %2201) #13
  br label %2202

2202:                                             ; preds = %2199, %2192
  %2203 = add i64 %2193, 4
  %2204 = icmp ult i64 %2203, %2190
  br i1 %2204, label %2192, label %3249

2205:                                             ; preds = %360
  %2206 = and i64 %362, -262144
  %2207 = inttoptr i64 %2206 to %"class.v8::internal::MemoryChunk"*
  %2208 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2207, i64 0, i32 0, i32 1
  %2209 = load atomic i64, i64* %2208 monotonic, align 8
  %2210 = and i64 %2209, 256
  %2211 = icmp eq i64 %2210, 0
  br i1 %2211, label %2348, label %2212

2212:                                             ; preds = %2205
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #13
  store i64 %362, i64* %151, align 8
  %2213 = or i64 %2206, 272
  %2214 = xor i64 %2206, -1
  %2215 = add i64 %362, %2214
  %2216 = trunc i64 %2215 to i32
  %2217 = lshr i32 %2216, 2
  %2218 = and i32 %2217, 31
  %2219 = shl i32 1, %2218
  %2220 = inttoptr i64 %2213 to i32*
  %2221 = lshr i64 %2215, 7
  %2222 = and i64 %2221, 33554431
  %2223 = getelementptr inbounds i32, i32* %2220, i64 %2222
  %2224 = load atomic i32, i32* %2223 acquire, align 4
  %2225 = and i32 %2224, %2219
  %2226 = icmp eq i32 %2225, 0
  br i1 %2226, label %2261, label %2227

2227:                                             ; preds = %2212
  %2228 = shl i32 %2219, 1
  %2229 = icmp eq i32 %2228, 0
  %2230 = getelementptr inbounds i32, i32* %2223, i64 1
  %2231 = select i1 %2229, i32 1, i32 %2228
  %2232 = select i1 %2229, i32* %2230, i32* %2223
  %2233 = load atomic i32, i32* %2232 monotonic, align 4
  br label %2234

2234:                                             ; preds = %2238, %2227
  %2235 = phi i32 [ %2233, %2227 ], [ %2241, %2238 ]
  %2236 = and i32 %2235, %2231
  %2237 = icmp eq i32 %2236, %2231
  br i1 %2237, label %2261, label %2238

2238:                                             ; preds = %2234
  %2239 = or i32 %2235, %2231
  %2240 = cmpxchg volatile i32* %2232, i32 %2235, i32 %2239 release monotonic
  %2241 = extractvalue { i32, i1 } %2240, 0
  %2242 = extractvalue { i32, i1 } %2240, 1
  br i1 %2242, label %2243, label %2234

2243:                                             ; preds = %2238
  %2244 = load i64, i64* %151, align 8
  %2245 = and i64 %2244, -4294967296
  %2246 = add i64 %2244, -1
  %2247 = inttoptr i64 %2246 to i32*
  %2248 = load atomic i32, i32* %2247 monotonic, align 4
  %2249 = zext i32 %2248 to i64
  %2250 = or i64 %2245, %2249
  %2251 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %15, i64 %2250) #13
  %2252 = sext i32 %2251 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #13
  store %"class.v8::internal::MemoryChunk"* %2207, %"class.v8::internal::MemoryChunk"** %14, align 8
  %2253 = load %"class.std::__1::unordered_map.613"*, %"class.std::__1::unordered_map.613"** %153, align 8
  %2254 = getelementptr inbounds %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.613"* %2253, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #13
  store %"class.v8::internal::MemoryChunk"** %14, %"class.v8::internal::MemoryChunk"*** %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #13
  %2255 = call { %"struct.std::__1::__hash_node_base.618"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.614"* %2254, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.1177"* nonnull dereferenceable(1) %13) #13
  %2256 = extractvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } %2255, 0
  %2257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %2256, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #13
  %2258 = bitcast %"struct.std::__1::__hash_node_base.618"* %2257 to i64*
  %2259 = load i64, i64* %2258, align 8
  %2260 = add nsw i64 %2259, %2252
  store i64 %2260, i64* %2258, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #13
  br label %2261

2261:                                             ; preds = %2234, %2243, %2212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #13
  %2262 = add i64 %362, 3
  %2263 = inttoptr i64 %2262 to i32*
  %2264 = load atomic i32, i32* %2263 acquire, align 4
  %2265 = lshr i32 %2264, 1
  %2266 = shl i32 %2265, 2
  %2267 = add nsw i32 %2266, 8
  %2268 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2269 = load atomic i64, i64* %2268 acquire, align 16
  %2270 = trunc i64 %2269 to i32
  %2271 = icmp eq i32 %2270, 0
  br i1 %2271, label %2272, label %2273

2272:                                             ; preds = %2261
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %2273

2273:                                             ; preds = %2272, %2261
  %2274 = phi i32 [ 4, %2272 ], [ %2270, %2261 ]
  %2275 = add nsw i32 %2274, 131072
  %2276 = icmp slt i32 %2275, %2267
  %2277 = select i1 %2276, i32 %2275, i32 %2267
  %2278 = icmp sgt i32 %2277, %2274
  br i1 %2278, label %2279, label %2346

2279:                                             ; preds = %2273
  %2280 = sext i32 %2274 to i64
  %2281 = add i64 %362, -1
  %2282 = add i64 %2281, %2280
  %2283 = sext i32 %2277 to i64
  %2284 = add i64 %2281, %2283
  %2285 = icmp ult i64 %2282, %2284
  br i1 %2285, label %2286, label %2299

2286:                                             ; preds = %2279, %2296
  %2287 = phi i64 [ %2297, %2296 ], [ %2282, %2279 ]
  %2288 = inttoptr i64 %2287 to i32*
  %2289 = load atomic i32, i32* %2288 monotonic, align 4
  %2290 = zext i32 %2289 to i64
  %2291 = and i64 %2290, 1
  %2292 = icmp eq i64 %2291, 0
  br i1 %2292, label %2296, label %2293

2293:                                             ; preds = %2286
  %2294 = and i64 %2287, -4294967296
  %2295 = or i64 %2294, %2290
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2287, i64 %2295) #13
  br label %2296

2296:                                             ; preds = %2293, %2286
  %2297 = add i64 %2287, 4
  %2298 = icmp ult i64 %2297, %2284
  br i1 %2298, label %2286, label %2299

2299:                                             ; preds = %2296, %2279
  %2300 = cmpxchg i64* %2268, i64 %2269, i64 %2283 acq_rel monotonic
  %2301 = extractvalue { i64, i1 } %2300, 1
  br i1 %2301, label %2303, label %2302, !prof !4

2302:                                             ; preds = %2299
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

2303:                                             ; preds = %2299
  br i1 %2276, label %2304, label %2346

2304:                                             ; preds = %2303
  %2305 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %158, align 8
  %2306 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %2305, i64 0, i32 2, i32 1
  %2307 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2306, align 8
  %2308 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %2307, i64 0, i32 1
  %2309 = load i16, i16* %2308, align 2
  %2310 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %2307, i64 0, i32 0
  %2311 = load i16, i16* %2310, align 2
  %2312 = icmp eq i16 %2309, %2311
  %2313 = bitcast %"class.heap::base::internal::SegmentBase"* %2307 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %2312, label %2314, label %2339, !prof !3

2314:                                             ; preds = %2304
  %2315 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %2316 = icmp eq %"class.heap::base::internal::SegmentBase"* %2307, %2315
  br i1 %2316, label %2331, label %2317

2317:                                             ; preds = %2314
  %2318 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %2305, i64 0, i32 2, i32 0
  %2319 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %2318, align 8
  %2320 = bitcast %"class.heap::base::internal::SegmentBase"** %2306 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %2321 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %2320, align 8
  %2322 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %2319, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2322) #13
  %2323 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %2319, i64 0, i32 1
  %2324 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %2323 to i64*
  %2325 = load i64, i64* %2324, align 8
  %2326 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %2321, i64 0, i32 1
  %2327 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %2326 to i64*
  store i64 %2325, i64* %2327, align 8
  %2328 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %2321 to i64
  store atomic i64 %2328, i64* %2324 monotonic, align 8
  %2329 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %2319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2330 = atomicrmw add i64* %2329, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2322) #13
  br label %2331

2331:                                             ; preds = %2317, %2314
  %2332 = call i8* @_Znwm(i64 528) #14
  %2333 = bitcast i8* %2332 to i16*
  store i16 64, i16* %2333, align 2
  %2334 = getelementptr inbounds i8, i8* %2332, i64 2
  %2335 = bitcast i8* %2334 to i16*
  store i16 0, i16* %2335, align 2
  %2336 = getelementptr inbounds i8, i8* %2332, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %2336, i8 0, i64 520, i1 false) #13
  %2337 = bitcast %"class.heap::base::internal::SegmentBase"** %2306 to i8**
  store i8* %2332, i8** %2337, align 8
  %2338 = bitcast i8* %2332 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %2339

2339:                                             ; preds = %2331, %2304
  %2340 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %2338, %2331 ], [ %2313, %2304 ]
  %2341 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %2340, i64 0, i32 0, i32 1
  %2342 = load i16, i16* %2341, align 2
  %2343 = add i16 %2342, 1
  store i16 %2343, i16* %2341, align 2
  %2344 = zext i16 %2342 to i64
  %2345 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %2340, i64 0, i32 2, i64 %2344, i32 0, i32 0, i32 0
  store i64 %362, i64* %2345, align 8
  br label %2346

2346:                                             ; preds = %2339, %2303, %2273
  %2347 = sub nsw i32 %2277, %2274
  br label %3249

2348:                                             ; preds = %2205
  %2349 = add i64 %362, 3
  %2350 = inttoptr i64 %2349 to i32*
  %2351 = load atomic i32, i32* %2350 acquire, align 4
  %2352 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2352, label %2353, label %3249

2353:                                             ; preds = %2348
  %2354 = lshr i32 %2351, 1
  %2355 = shl i32 %2354, 2
  %2356 = add nsw i32 %2355, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2357 = add i64 %362, -1
  %2358 = sext i32 %2356 to i64
  %2359 = add i64 %2357, %2358
  %2360 = icmp ult i64 %2349, %2359
  br i1 %2360, label %2361, label %3249

2361:                                             ; preds = %2353, %2371
  %2362 = phi i64 [ %2372, %2371 ], [ %2349, %2353 ]
  %2363 = inttoptr i64 %2362 to i32*
  %2364 = load atomic i32, i32* %2363 monotonic, align 4
  %2365 = zext i32 %2364 to i64
  %2366 = and i64 %2365, 1
  %2367 = icmp eq i64 %2366, 0
  br i1 %2367, label %2371, label %2368

2368:                                             ; preds = %2361
  %2369 = and i64 %2362, -4294967296
  %2370 = or i64 %2369, %2365
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2362, i64 %2370) #13
  br label %2371

2371:                                             ; preds = %2368, %2361
  %2372 = add i64 %2362, 4
  %2373 = icmp ult i64 %2372, %2359
  br i1 %2373, label %2361, label %3249

2374:                                             ; preds = %360
  %2375 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2375, label %2376, label %3249

2376:                                             ; preds = %2374
  %2377 = add i64 %362, 3
  %2378 = inttoptr i64 %2377 to i32*
  %2379 = load atomic i32, i32* %2378 acquire, align 4
  %2380 = lshr i32 %2379, 1
  %2381 = shl i32 %2380, 2
  %2382 = add nsw i32 %2381, 8
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2383 = add i64 %362, -1
  %2384 = sext i32 %2382 to i64
  %2385 = add i64 %2383, %2384
  %2386 = icmp ult i64 %2377, %2385
  br i1 %2386, label %2387, label %3249

2387:                                             ; preds = %2376, %2403
  %2388 = phi i64 [ %2404, %2403 ], [ %2377, %2376 ]
  %2389 = inttoptr i64 %2388 to i32*
  %2390 = load atomic i32, i32* %2389 monotonic, align 4
  %2391 = and i64 %2388, -4294967296
  %2392 = zext i32 %2390 to i64
  %2393 = or i64 %2391, %2392
  %2394 = and i64 %2392, 3
  %2395 = icmp eq i64 %2394, 1
  br i1 %2395, label %2396, label %2397

2396:                                             ; preds = %2387
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2388, i64 %2393) #13
  br label %2403

2397:                                             ; preds = %2387
  %2398 = icmp eq i64 %2394, 3
  %2399 = icmp ne i32 %2390, 3
  %2400 = and i1 %2399, %2398
  br i1 %2400, label %2401, label %2403

2401:                                             ; preds = %2397
  %2402 = and i64 %2393, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2388, i64 %2402) #13
  br label %2403

2403:                                             ; preds = %2401, %2397, %2396
  %2404 = add i64 %2388, 4
  %2405 = icmp ult i64 %2404, %2385
  br i1 %2405, label %2387, label %3249

2406:                                             ; preds = %360
  %2407 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2407, label %2408, label %3249

2408:                                             ; preds = %2406
  %2409 = add i64 %362, 3
  %2410 = inttoptr i64 %2409 to i32*
  %2411 = load i32, i32* %2410, align 4
  %2412 = lshr i32 %2411, 1
  %2413 = shl i32 %2412, 2
  %2414 = add nsw i32 %2413, 16
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2415 = add i64 %362, -1
  %2416 = sext i32 %2414 to i64
  %2417 = add i64 %2415, %2416
  %2418 = icmp ult i64 %2409, %2417
  br i1 %2418, label %2419, label %3249

2419:                                             ; preds = %2408, %2429
  %2420 = phi i64 [ %2430, %2429 ], [ %2409, %2408 ]
  %2421 = inttoptr i64 %2420 to i32*
  %2422 = load atomic i32, i32* %2421 monotonic, align 4
  %2423 = zext i32 %2422 to i64
  %2424 = and i64 %2423, 1
  %2425 = icmp eq i64 %2424, 0
  br i1 %2425, label %2429, label %2426

2426:                                             ; preds = %2419
  %2427 = and i64 %2420, -4294967296
  %2428 = or i64 %2427, %2423
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2420, i64 %2428) #13
  br label %2429

2429:                                             ; preds = %2426, %2419
  %2430 = add i64 %2420, 4
  %2431 = icmp ult i64 %2430, %2417
  br i1 %2431, label %2419, label %3249

2432:                                             ; preds = %360
  %2433 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2433, label %2434, label %3249

2434:                                             ; preds = %2432
  %2435 = add i64 %362, 11
  %2436 = inttoptr i64 %2435 to i32*
  %2437 = load i32, i32* %2436, align 4, !noalias !5
  %2438 = ashr i32 %2437, 1
  %2439 = sext i32 %2438 to i64
  %2440 = shl nsw i64 %2439, 3
  %2441 = add nsw i64 %2440, 16
  %2442 = add i64 %362, 3
  %2443 = inttoptr i64 %2442 to i32*
  %2444 = load i32, i32* %2443, align 4, !noalias !28
  %2445 = lshr i32 %2444, 9
  %2446 = and i32 %2445, 4
  %2447 = zext i32 %2446 to i64
  %2448 = or i64 %2441, %2447
  %2449 = lshr i32 %2444, 8
  %2450 = and i32 %2449, 3
  %2451 = add nsw i32 %2450, -1
  %2452 = icmp ult i32 %2451, 2
  %2453 = zext i1 %2452 to i64
  %2454 = and i32 %2444, 24576
  %2455 = icmp ne i32 %2454, 0
  %2456 = zext i1 %2455 to i64
  %2457 = shl nuw nsw i64 %2456, 3
  %2458 = lshr i32 %2444, 13
  %2459 = and i32 %2458, 4
  %2460 = lshr i32 %2444, 1
  %2461 = and i32 %2460, 15
  switch i32 %2461, label %2462 [
    i32 2, label %2466
    i32 4, label %2466
    i32 1, label %2466
  ]

2462:                                             ; preds = %2434
  %2463 = icmp eq i32 %2461, 3
  %2464 = zext i1 %2463 to i64
  %2465 = shl nuw nsw i64 %2464, 3
  br label %2466

2466:                                             ; preds = %2462, %2434, %2434, %2434
  %2467 = phi i64 [ 8, %2434 ], [ %2465, %2462 ], [ 8, %2434 ], [ 8, %2434 ]
  %2468 = lshr i32 %2444, 21
  %2469 = and i32 %2468, 4
  %2470 = add nuw nsw i32 %2469, %2459
  %2471 = lshr i32 %2444, 27
  %2472 = and i32 %2471, 4
  %2473 = add nuw nsw i32 %2470, %2472
  %2474 = zext i32 %2473 to i64
  %2475 = and i32 %2444, 30
  %2476 = icmp eq i32 %2475, 6
  %2477 = zext i1 %2476 to i64
  %2478 = add nuw nsw i64 %2453, %2477
  %2479 = shl nuw nsw i64 %2478, 2
  %2480 = add nsw i64 %2457, %2448
  %2481 = add nsw i64 %2480, %2474
  %2482 = add nsw i64 %2481, %2479
  %2483 = shl nuw nsw i64 %2477, 2
  %2484 = add i64 %2482, %2483
  %2485 = add i64 %2484, %2467
  br i1 %2476, label %2488, label %2486

2486:                                             ; preds = %2466
  %2487 = add i64 %362, -1
  br label %2504

2488:                                             ; preds = %2466
  switch i32 %2461, label %2489 [
    i32 2, label %2493
    i32 4, label %2493
    i32 1, label %2493
  ]

2489:                                             ; preds = %2488
  %2490 = icmp eq i32 %2461, 3
  %2491 = zext i1 %2490 to i64
  %2492 = shl nuw nsw i64 %2491, 3
  br label %2493

2493:                                             ; preds = %2489, %2488, %2488, %2488
  %2494 = phi i64 [ 8, %2488 ], [ %2492, %2489 ], [ 8, %2488 ], [ 8, %2488 ]
  %2495 = add i64 %2494, %2482
  %2496 = add i64 %362, -1
  %2497 = shl i64 %2495, 32
  %2498 = ashr exact i64 %2497, 32
  %2499 = add i64 %2498, %2496
  %2500 = inttoptr i64 %2499 to i32*
  %2501 = load i32, i32* %2500, align 4, !noalias !29
  %2502 = ashr i32 %2501, 1
  %2503 = mul i32 %2502, 12
  br label %2504

2504:                                             ; preds = %2493, %2486
  %2505 = phi i64 [ %2487, %2486 ], [ %2496, %2493 ]
  %2506 = phi i32 [ 0, %2486 ], [ %2503, %2493 ]
  %2507 = trunc i64 %2485 to i32
  %2508 = add nsw i32 %2506, %2507
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2509 = sext i32 %2508 to i64
  %2510 = add i64 %2505, %2509
  %2511 = icmp ult i64 %2442, %2510
  br i1 %2511, label %2512, label %3249

2512:                                             ; preds = %2504, %2522
  %2513 = phi i64 [ %2523, %2522 ], [ %2442, %2504 ]
  %2514 = inttoptr i64 %2513 to i32*
  %2515 = load atomic i32, i32* %2514 monotonic, align 4
  %2516 = zext i32 %2515 to i64
  %2517 = and i64 %2516, 1
  %2518 = icmp eq i64 %2517, 0
  br i1 %2518, label %2522, label %2519

2519:                                             ; preds = %2512
  %2520 = and i64 %2513, -4294967296
  %2521 = or i64 %2520, %2516
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2513, i64 %2521) #13
  br label %2522

2522:                                             ; preds = %2519, %2512
  %2523 = add i64 %2513, 4
  %2524 = icmp ult i64 %2523, %2510
  br i1 %2524, label %2512, label %3249

2525:                                             ; preds = %360
  %2526 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2526, label %2527, label %3249

2527:                                             ; preds = %2525
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2528 = add i64 %362, 3
  %2529 = inttoptr i64 %2528 to i16*
  %2530 = load i16, i16* %2529, align 2
  %2531 = zext i16 %2530 to i32
  %2532 = mul nuw nsw i32 %2531, 12
  %2533 = add nuw nsw i32 %2532, 16
  %2534 = add i64 %362, 11
  %2535 = add i64 %362, 15
  %2536 = icmp ult i64 %2534, %2535
  br i1 %2536, label %2537, label %2550

2537:                                             ; preds = %2527, %2547
  %2538 = phi i64 [ %2548, %2547 ], [ %2534, %2527 ]
  %2539 = inttoptr i64 %2538 to i32*
  %2540 = load atomic i32, i32* %2539 monotonic, align 4
  %2541 = zext i32 %2540 to i64
  %2542 = and i64 %2541, 1
  %2543 = icmp eq i64 %2542, 0
  br i1 %2543, label %2547, label %2544

2544:                                             ; preds = %2537
  %2545 = and i64 %2538, -4294967296
  %2546 = or i64 %2545, %2541
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2538, i64 %2546) #13
  br label %2547

2547:                                             ; preds = %2544, %2537
  %2548 = add i64 %2538, 4
  %2549 = icmp ult i64 %2548, %2535
  br i1 %2549, label %2537, label %2550

2550:                                             ; preds = %2547, %2527
  %2551 = add i64 %362, 5
  %2552 = inttoptr i64 %2551 to i16*
  %2553 = load atomic i16, i16* %2552 monotonic, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #13
  store i64 %362, i64* %148, align 8
  %2554 = load i32, i32* %68, align 4
  %2555 = call signext i16 @_ZN2v88internal15DescriptorArray31UpdateNumberOfMarkedDescriptorsEjs(%"class.v8::internal::DescriptorArray"* nonnull %11, i32 %2554, i16 signext %2553) #13
  %2556 = icmp sgt i16 %2553, %2555
  br i1 %2556, label %2557, label %2586

2557:                                             ; preds = %2550
  %2558 = sext i16 %2553 to i64
  %2559 = sext i16 %2555 to i64
  %2560 = load i64, i64* %148, align 8
  %2561 = mul nsw i64 %2559, 12
  %2562 = add i64 %2560, 15
  %2563 = add i64 %2562, %2561
  %2564 = mul nsw i64 %2558, 12
  %2565 = add i64 %2562, %2564
  %2566 = icmp ult i64 %2563, %2565
  br i1 %2566, label %2567, label %2586

2567:                                             ; preds = %2557, %2583
  %2568 = phi i64 [ %2584, %2583 ], [ %2563, %2557 ]
  %2569 = inttoptr i64 %2568 to i32*
  %2570 = load atomic i32, i32* %2569 monotonic, align 4
  %2571 = and i64 %2568, -4294967296
  %2572 = zext i32 %2570 to i64
  %2573 = or i64 %2571, %2572
  %2574 = and i64 %2572, 3
  %2575 = icmp eq i64 %2574, 1
  br i1 %2575, label %2576, label %2577

2576:                                             ; preds = %2567
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %2560, i64 %2568, i64 %2573) #13
  br label %2583

2577:                                             ; preds = %2567
  %2578 = icmp eq i64 %2574, 3
  %2579 = icmp ne i32 %2570, 3
  %2580 = and i1 %2579, %2578
  br i1 %2580, label %2581, label %2583

2581:                                             ; preds = %2577
  %2582 = and i64 %2573, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %2560, i64 %2568, i64 %2582) #13
  br label %2583

2583:                                             ; preds = %2581, %2577, %2576
  %2584 = add i64 %2568, 4
  %2585 = icmp ult i64 %2584, %2565
  br i1 %2585, label %2567, label %2586

2586:                                             ; preds = %2583, %2557, %2550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #13
  br label %3249

2587:                                             ; preds = %360
  %2588 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2588, label %2589, label %3249

2589:                                             ; preds = %2587
  %2590 = add i64 %362, 3
  %2591 = inttoptr i64 %2590 to i16*
  %2592 = load atomic i16, i16* %2591 monotonic, align 2
  %2593 = sext i16 %2592 to i32
  %2594 = mul nsw i32 %2593, 12
  %2595 = add nsw i32 %2594, 16
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2596 = add i64 %362, -1
  %2597 = add i64 %362, 11
  %2598 = sext i32 %2595 to i64
  %2599 = add i64 %2596, %2598
  %2600 = icmp ult i64 %2597, %2599
  br i1 %2600, label %2601, label %3249

2601:                                             ; preds = %2589, %2617
  %2602 = phi i64 [ %2618, %2617 ], [ %2597, %2589 ]
  %2603 = inttoptr i64 %2602 to i32*
  %2604 = load atomic i32, i32* %2603 monotonic, align 4
  %2605 = and i64 %2602, -4294967296
  %2606 = zext i32 %2604 to i64
  %2607 = or i64 %2605, %2606
  %2608 = and i64 %2606, 3
  %2609 = icmp eq i64 %2608, 1
  br i1 %2609, label %2610, label %2611

2610:                                             ; preds = %2601
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2602, i64 %2607) #13
  br label %2617

2611:                                             ; preds = %2601
  %2612 = icmp eq i64 %2608, 3
  %2613 = icmp ne i32 %2604, 3
  %2614 = and i1 %2613, %2612
  br i1 %2614, label %2615, label %2617

2615:                                             ; preds = %2611
  %2616 = and i64 %2607, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2602, i64 %2616) #13
  br label %2617

2617:                                             ; preds = %2615, %2611, %2610
  %2618 = add i64 %2602, 4
  %2619 = icmp ult i64 %2618, %2599
  br i1 %2619, label %2601, label %3249

2620:                                             ; preds = %360
  %2621 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2621, label %2622, label %3249

2622:                                             ; preds = %2620
  %2623 = add i64 %362, 3
  %2624 = inttoptr i64 %2623 to i32*
  %2625 = load i32, i32* %2624, align 4
  %2626 = shl i32 %2625, 2
  %2627 = add nsw i32 %2626, 32
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2628 = add i64 %362, -1
  %2629 = add i64 %362, 19
  %2630 = sext i32 %2627 to i64
  %2631 = add i64 %2628, %2630
  %2632 = icmp ult i64 %2629, %2631
  br i1 %2632, label %2633, label %3249

2633:                                             ; preds = %2622, %2649
  %2634 = phi i64 [ %2650, %2649 ], [ %2629, %2622 ]
  %2635 = inttoptr i64 %2634 to i32*
  %2636 = load atomic i32, i32* %2635 monotonic, align 4
  %2637 = and i64 %2634, -4294967296
  %2638 = zext i32 %2636 to i64
  %2639 = or i64 %2637, %2638
  %2640 = and i64 %2638, 3
  %2641 = icmp eq i64 %2640, 1
  br i1 %2641, label %2642, label %2643

2642:                                             ; preds = %2633
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2634, i64 %2639) #13
  br label %2649

2643:                                             ; preds = %2633
  %2644 = icmp eq i64 %2640, 3
  %2645 = icmp ne i32 %2636, 3
  %2646 = and i1 %2645, %2644
  br i1 %2646, label %2647, label %2649

2647:                                             ; preds = %2643
  %2648 = and i64 %2639, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2634, i64 %2648) #13
  br label %2649

2649:                                             ; preds = %2647, %2643, %2642
  %2650 = add i64 %2634, 4
  %2651 = icmp ult i64 %2650, %2631
  br i1 %2651, label %2633, label %3249

2652:                                             ; preds = %360
  %2653 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2653, label %2654, label %3249

2654:                                             ; preds = %2652
  %2655 = add i64 %362, 3
  %2656 = inttoptr i64 %2655 to i32*
  %2657 = load i32, i32* %2656, align 4
  %2658 = lshr i32 %2657, 1
  %2659 = shl i32 %2658, 2
  %2660 = add nsw i32 %2659, 12
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2661 = add i64 %362, -1
  %2662 = sext i32 %2660 to i64
  %2663 = add i64 %2661, %2662
  %2664 = icmp ult i64 %2655, %2663
  br i1 %2664, label %2665, label %3249

2665:                                             ; preds = %2654, %2681
  %2666 = phi i64 [ %2682, %2681 ], [ %2655, %2654 ]
  %2667 = inttoptr i64 %2666 to i32*
  %2668 = load atomic i32, i32* %2667 monotonic, align 4
  %2669 = and i64 %2666, -4294967296
  %2670 = zext i32 %2668 to i64
  %2671 = or i64 %2669, %2670
  %2672 = and i64 %2670, 3
  %2673 = icmp eq i64 %2672, 1
  br i1 %2673, label %2674, label %2675

2674:                                             ; preds = %2665
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2666, i64 %2671) #13
  br label %2681

2675:                                             ; preds = %2665
  %2676 = icmp eq i64 %2672, 3
  %2677 = icmp ne i32 %2668, 3
  %2678 = and i1 %2677, %2676
  br i1 %2678, label %2679, label %2681

2679:                                             ; preds = %2675
  %2680 = and i64 %2671, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2666, i64 %2680) #13
  br label %2681

2681:                                             ; preds = %2679, %2675, %2674
  %2682 = add i64 %2666, 4
  %2683 = icmp ult i64 %2682, %2663
  br i1 %2683, label %2665, label %3249

2684:                                             ; preds = %360
  %2685 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2685, label %2686, label %3249

2686:                                             ; preds = %2684
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2687 = add i64 %362, 3
  %2688 = add i64 %362, 11
  %2689 = icmp ult i64 %2687, %2688
  br i1 %2689, label %2690, label %3249

2690:                                             ; preds = %2686, %2706
  %2691 = phi i64 [ %2707, %2706 ], [ %2687, %2686 ]
  %2692 = inttoptr i64 %2691 to i32*
  %2693 = load atomic i32, i32* %2692 monotonic, align 4
  %2694 = and i64 %2691, -4294967296
  %2695 = zext i32 %2693 to i64
  %2696 = or i64 %2694, %2695
  %2697 = and i64 %2695, 3
  %2698 = icmp eq i64 %2697, 1
  br i1 %2698, label %2699, label %2700

2699:                                             ; preds = %2690
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2691, i64 %2696) #13
  br label %2706

2700:                                             ; preds = %2690
  %2701 = icmp eq i64 %2697, 3
  %2702 = icmp ne i32 %2693, 3
  %2703 = and i1 %2702, %2701
  br i1 %2703, label %2704, label %2706

2704:                                             ; preds = %2700
  %2705 = and i64 %2696, -3
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2691, i64 %2705) #13
  br label %2706

2706:                                             ; preds = %2704, %2700, %2699
  %2707 = add i64 %2691, 4
  %2708 = icmp ult i64 %2707, %2688
  br i1 %2708, label %2690, label %3249

2709:                                             ; preds = %360
  %2710 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2710, label %2711, label %3249

2711:                                             ; preds = %2709
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2712 = add i64 %362, 3
  %2713 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %138, align 8
  %2714 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %2713, i64 7
  %2715 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %2714, align 8
  call void %2715(%"class.v8::internal::ObjectVisitor"* nonnull %137, i64 %362, i64 %2712) #13
  %2716 = add i64 %362, 7
  %2717 = add i64 %362, 19
  %2718 = icmp ult i64 %2716, %2717
  br i1 %2718, label %2719, label %2732

2719:                                             ; preds = %2711, %2729
  %2720 = phi i64 [ %2730, %2729 ], [ %2716, %2711 ]
  %2721 = inttoptr i64 %2720 to i32*
  %2722 = load atomic i32, i32* %2721 monotonic, align 4
  %2723 = zext i32 %2722 to i64
  %2724 = and i64 %2723, 1
  %2725 = icmp eq i64 %2724, 0
  br i1 %2725, label %2729, label %2726

2726:                                             ; preds = %2719
  %2727 = and i64 %2720, -4294967296
  %2728 = or i64 %2727, %2723
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2720, i64 %2728) #13
  br label %2729

2729:                                             ; preds = %2726, %2719
  %2730 = add i64 %2720, 4
  %2731 = icmp ult i64 %2730, %2717
  br i1 %2731, label %2719, label %2732

2732:                                             ; preds = %2729, %2711
  %2733 = load i32, i32* %140, align 8
  %2734 = icmp eq i32 %2733, 0
  br i1 %2734, label %2800, label %2735

2735:                                             ; preds = %2732
  %2736 = add i64 %362, 27
  %2737 = inttoptr i64 %2736 to i32*
  %2738 = load atomic i32, i32* %2737 monotonic, align 4
  %2739 = trunc i32 %2738 to i8
  %2740 = and i8 %2739, 31
  %2741 = add nsw i8 %2740, -12
  %2742 = icmp ult i8 %2741, 10
  %2743 = add nsw i8 %2740, -1
  %2744 = icmp ult i8 %2743, 2
  %2745 = or i1 %2742, %2744
  br i1 %2745, label %2800, label %2746

2746:                                             ; preds = %2735
  %2747 = load atomic i32, i32* %2737 monotonic, align 4
  %2748 = and i32 %2747, 4096
  %2749 = icmp eq i32 %2748, 0
  br i1 %2749, label %2800, label %2750

2750:                                             ; preds = %2746
  %2751 = and i64 %362, -4294967296
  %2752 = inttoptr i64 %2712 to i32*
  %2753 = load atomic i32, i32* %2752 acquire, align 4
  %2754 = zext i32 %2753 to i64
  %2755 = or i64 %2751, %2754
  %2756 = and i64 %2754, 1
  %2757 = icmp eq i64 %2756, 0
  br i1 %2757, label %2800, label %2758

2758:                                             ; preds = %2750
  %2759 = add i64 %2755, -1
  %2760 = inttoptr i64 %2759 to i32*
  %2761 = load atomic i32, i32* %2760 monotonic, align 4
  %2762 = zext i32 %2761 to i64
  %2763 = or i64 %2751, %2762
  %2764 = add i64 %2763, 7
  %2765 = inttoptr i64 %2764 to i16*
  %2766 = load atomic i16, i16* %2765 monotonic, align 2
  %2767 = icmp eq i16 %2766, 133
  br i1 %2767, label %2768, label %2800

2768:                                             ; preds = %2758
  %2769 = icmp eq i32 %2733, 2
  br i1 %2769, label %2772, label %2770

2770:                                             ; preds = %2768
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #13
  store i64 %2755, i64* %142, align 8
  %2771 = call zeroext i1 @_ZNK2v88internal13BytecodeArray5IsOldEv(%"class.v8::internal::BytecodeArray"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #13
  br i1 %2771, label %2772, label %2800

2772:                                             ; preds = %2770, %2768
  %2773 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %144, align 8
  %2774 = load i32, i32* %146, align 8
  %2775 = sext i32 %2774 to i64
  %2776 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %2773, i64 0, i32 9, i32 0, i64 %2775, i32 0
  %2777 = load %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %2776, align 8
  %2778 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %2777, i64 0, i32 1
  %2779 = load i64, i64* %2778, align 8
  %2780 = icmp eq i64 %2779, 64
  br i1 %2780, label %2784, label %2781

2781:                                             ; preds = %2772
  %2782 = add i64 %2779, 1
  store i64 %2782, i64* %2778, align 8
  %2783 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %2777, i64 0, i32 2, i64 %2779, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %2783, align 8
  br label %3249

2784:                                             ; preds = %2772
  %2785 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %2773, i64 0, i32 9, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2785) #13
  %2786 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %2773, i64 0, i32 9, i32 1, i32 1
  %2787 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %2786 to i64*
  %2788 = load i64, i64* %2787, align 8
  %2789 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %2777 to i64*
  store i64 %2788, i64* %2789, align 8
  %2790 = ptrtoint %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %2777 to i64
  store atomic volatile i64 %2790, i64* %2787 monotonic, align 8
  %2791 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %2773, i64 0, i32 9, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2792 = atomicrmw add i64* %2791, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2785) #13
  %2793 = call i8* @_Znwm(i64 528) #14
  %2794 = getelementptr inbounds i8, i8* %2793, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %2794, i8 0, i64 504, i1 false) #13
  %2795 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %2776 to i8**
  store i8* %2793, i8** %2795, align 8
  %2796 = getelementptr inbounds i8, i8* %2793, i64 8
  %2797 = bitcast i8* %2796 to i64*
  store i64 1, i64* %2797, align 8
  %2798 = getelementptr inbounds i8, i8* %2793, i64 16
  %2799 = bitcast i8* %2798 to i64*
  store i64 %362, i64* %2799, align 8
  br label %3249

2800:                                             ; preds = %2770, %2758, %2750, %2746, %2735, %2732
  %2801 = icmp ult i64 %2712, -4
  br i1 %2801, label %2802, label %3249

2802:                                             ; preds = %2800, %2812
  %2803 = phi i64 [ %2813, %2812 ], [ %2712, %2800 ]
  %2804 = inttoptr i64 %2803 to i32*
  %2805 = load atomic i32, i32* %2804 monotonic, align 4
  %2806 = zext i32 %2805 to i64
  %2807 = and i64 %2806, 1
  %2808 = icmp eq i64 %2807, 0
  br i1 %2808, label %2812, label %2809

2809:                                             ; preds = %2802
  %2810 = and i64 %2803, -4294967296
  %2811 = or i64 %2810, %2806
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2803, i64 %2811) #13
  br label %2812

2812:                                             ; preds = %2809, %2802
  %2813 = add i64 %2803, 4
  %2814 = icmp ult i64 %2813, %2716
  br i1 %2814, label %2802, label %3249

2815:                                             ; preds = %360
  %2816 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2816, label %2817, label %3249

2817:                                             ; preds = %2815
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2818 = add i64 %362, 3
  %2819 = add i64 %362, 7
  %2820 = icmp ult i64 %2818, %2819
  br i1 %2820, label %2821, label %3249

2821:                                             ; preds = %2817, %2831
  %2822 = phi i64 [ %2832, %2831 ], [ %2818, %2817 ]
  %2823 = inttoptr i64 %2822 to i32*
  %2824 = load atomic i32, i32* %2823 monotonic, align 4
  %2825 = zext i32 %2824 to i64
  %2826 = and i64 %2825, 1
  %2827 = icmp eq i64 %2826, 0
  br i1 %2827, label %2831, label %2828

2828:                                             ; preds = %2821
  %2829 = and i64 %2822, -4294967296
  %2830 = or i64 %2829, %2825
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2822, i64 %2830) #13
  br label %2831

2831:                                             ; preds = %2828, %2821
  %2832 = add i64 %2822, 4
  %2833 = icmp ult i64 %2832, %2819
  br i1 %2833, label %2821, label %3249

2834:                                             ; preds = %360
  %2835 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2835, label %2836, label %3249

2836:                                             ; preds = %2834
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2837 = add i64 %362, 3
  %2838 = add i64 %362, 7
  %2839 = icmp ult i64 %2837, -4
  br i1 %2839, label %2842, label %2840

2840:                                             ; preds = %2836
  %2841 = add nsw i64 %362, 15
  br label %2858

2842:                                             ; preds = %2836, %2852
  %2843 = phi i64 [ %2853, %2852 ], [ %2837, %2836 ]
  %2844 = inttoptr i64 %2843 to i32*
  %2845 = load atomic i32, i32* %2844 monotonic, align 4
  %2846 = zext i32 %2845 to i64
  %2847 = and i64 %2846, 1
  %2848 = icmp eq i64 %2847, 0
  br i1 %2848, label %2852, label %2849

2849:                                             ; preds = %2842
  %2850 = and i64 %2843, -4294967296
  %2851 = or i64 %2850, %2846
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2843, i64 %2851) #13
  br label %2852

2852:                                             ; preds = %2849, %2842
  %2853 = add i64 %2843, 4
  %2854 = icmp ult i64 %2853, %2838
  br i1 %2854, label %2842, label %2855

2855:                                             ; preds = %2852
  %2856 = add i64 %362, 15
  %2857 = icmp ult i64 %2856, -4
  br i1 %2857, label %2858, label %3249

2858:                                             ; preds = %2855, %2840
  %2859 = phi i64 [ %2841, %2840 ], [ %2856, %2855 ]
  %2860 = add i64 %362, 19
  br label %2861

2861:                                             ; preds = %2871, %2858
  %2862 = phi i64 [ %2872, %2871 ], [ %2859, %2858 ]
  %2863 = inttoptr i64 %2862 to i32*
  %2864 = load atomic i32, i32* %2863 monotonic, align 4
  %2865 = zext i32 %2864 to i64
  %2866 = and i64 %2865, 1
  %2867 = icmp eq i64 %2866, 0
  br i1 %2867, label %2871, label %2868

2868:                                             ; preds = %2861
  %2869 = and i64 %2862, -4294967296
  %2870 = or i64 %2869, %2865
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2862, i64 %2870) #13
  br label %2871

2871:                                             ; preds = %2868, %2861
  %2872 = add i64 %2862, 4
  %2873 = icmp ult i64 %2872, %2860
  br i1 %2873, label %2861, label %3249

2874:                                             ; preds = %360
  %2875 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2875, label %2876, label %3249

2876:                                             ; preds = %2874
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2877 = add i64 %362, 3
  %2878 = add i64 %362, 27
  %2879 = icmp ult i64 %2877, %2878
  br i1 %2879, label %2880, label %3249

2880:                                             ; preds = %2876, %2890
  %2881 = phi i64 [ %2891, %2890 ], [ %2877, %2876 ]
  %2882 = inttoptr i64 %2881 to i32*
  %2883 = load atomic i32, i32* %2882 monotonic, align 4
  %2884 = zext i32 %2883 to i64
  %2885 = and i64 %2884, 1
  %2886 = icmp eq i64 %2885, 0
  br i1 %2886, label %2890, label %2887

2887:                                             ; preds = %2880
  %2888 = and i64 %2881, -4294967296
  %2889 = or i64 %2888, %2884
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2881, i64 %2889) #13
  br label %2890

2890:                                             ; preds = %2887, %2880
  %2891 = add i64 %2881, 4
  %2892 = icmp ult i64 %2891, %2878
  br i1 %2892, label %2880, label %3249

2893:                                             ; preds = %360
  %2894 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor15VisitConsStringENS0_3MapENS0_10ConsStringE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %362) #13
  br label %3249

2895:                                             ; preds = %360
  %2896 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2896, label %2897, label %3249

2897:                                             ; preds = %2895
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2898 = add i64 %362, 7
  %2899 = inttoptr i64 %2898 to i32*
  %2900 = load atomic i32, i32* %2899 acquire, align 4
  %2901 = add i32 %2900, 15
  %2902 = and i32 %2901, -4
  br label %3249

2903:                                             ; preds = %360
  %2904 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2904, label %2905, label %3249

2905:                                             ; preds = %2903
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2906 = add i64 %362, 7
  %2907 = inttoptr i64 %2906 to i32*
  %2908 = load atomic i32, i32* %2907 acquire, align 4
  %2909 = shl i32 %2908, 1
  %2910 = add i32 %2909, 15
  %2911 = and i32 %2910, -4
  br label %3249

2912:                                             ; preds = %360
  %2913 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor17VisitSlicedStringENS0_3MapENS0_12SlicedStringE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %362) #13
  br label %3249

2914:                                             ; preds = %360
  %2915 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2915, label %2916, label %3249

2916:                                             ; preds = %2914
  store i32 0, i32* %132, align 8
  %2917 = add i64 %362, -1
  %2918 = add i64 %362, 3
  %2919 = icmp ult i64 %2917, %2918
  br i1 %2919, label %2920, label %2926

2920:                                             ; preds = %2916
  %2921 = inttoptr i64 %2917 to i32*
  %2922 = load atomic i32, i32* %2921 monotonic, align 4
  %2923 = and i64 %2917, -4294967296
  %2924 = zext i32 %2922 to i64
  %2925 = or i64 %2923, %2924
  store i32 1, i32* %132, align 8
  store i64 %2917, i64* %134, align 8
  store i64 %2925, i64* %136, align 8
  br label %2926

2926:                                             ; preds = %2920, %2916
  %2927 = phi i32 [ 1, %2920 ], [ 0, %2916 ]
  %2928 = add i64 %362, 11
  %2929 = add i64 %362, 15
  %2930 = icmp ult i64 %2928, %2929
  br i1 %2930, label %2931, label %2941

2931:                                             ; preds = %2926
  %2932 = inttoptr i64 %2928 to i32*
  %2933 = load atomic i32, i32* %2932 monotonic, align 4
  %2934 = and i64 %2928, -4294967296
  %2935 = zext i32 %2933 to i64
  %2936 = or i64 %2934, %2935
  %2937 = add nuw nsw i32 %2927, 1
  store i32 %2937, i32* %132, align 8
  %2938 = zext i32 %2927 to i64
  %2939 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 3, i32 1, i64 %2938, i32 0, i32 0, i32 0
  store i64 %2928, i64* %2939, align 8
  %2940 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %31, i64 0, i32 3, i32 1, i64 %2938, i32 1, i32 0, i32 0
  store i64 %2936, i64* %2940, align 8
  br label %2941

2941:                                             ; preds = %2931, %2926
  call void @_ZN2v88internal24ConcurrentMarkingVisitor23VisitPointersInSnapshotENS0_10HeapObjectERKNS0_12SlotSnapshotE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362, %"class.v8::internal::SlotSnapshot"* dereferenceable(4088) %131) #13
  br label %3249

2942:                                             ; preds = %360
  %2943 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2943, label %2944, label %3249

2944:                                             ; preds = %2942
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2945 = add i64 %362, 3
  %2946 = add i64 %362, 11
  %2947 = icmp ult i64 %2945, %2946
  br i1 %2947, label %2948, label %3249

2948:                                             ; preds = %2944, %2958
  %2949 = phi i64 [ %2959, %2958 ], [ %2945, %2944 ]
  %2950 = inttoptr i64 %2949 to i32*
  %2951 = load atomic i32, i32* %2950 monotonic, align 4
  %2952 = zext i32 %2951 to i64
  %2953 = and i64 %2952, 1
  %2954 = icmp eq i64 %2953, 0
  br i1 %2954, label %2958, label %2955

2955:                                             ; preds = %2948
  %2956 = and i64 %2949, -4294967296
  %2957 = or i64 %2956, %2952
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2949, i64 %2957) #13
  br label %2958

2958:                                             ; preds = %2955, %2948
  %2959 = add i64 %2949, 4
  %2960 = icmp ult i64 %2959, %2946
  br i1 %2960, label %2948, label %3249

2961:                                             ; preds = %360
  %2962 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2962, label %2963, label %3249

2963:                                             ; preds = %2961
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2964 = add i64 %362, 3
  %2965 = add i64 %362, 11
  %2966 = icmp ult i64 %2964, %2965
  br i1 %2966, label %2967, label %3249

2967:                                             ; preds = %2963, %2977
  %2968 = phi i64 [ %2978, %2977 ], [ %2964, %2963 ]
  %2969 = inttoptr i64 %2968 to i32*
  %2970 = load atomic i32, i32* %2969 monotonic, align 4
  %2971 = zext i32 %2970 to i64
  %2972 = and i64 %2971, 1
  %2973 = icmp eq i64 %2972, 0
  br i1 %2973, label %2977, label %2974

2974:                                             ; preds = %2967
  %2975 = and i64 %2968, -4294967296
  %2976 = or i64 %2975, %2971
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2968, i64 %2976) #13
  br label %2977

2977:                                             ; preds = %2974, %2967
  %2978 = add i64 %2968, 4
  %2979 = icmp ult i64 %2978, %2965
  br i1 %2979, label %2967, label %3249

2980:                                             ; preds = %360
  %2981 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %2981, label %2982, label %3249

2982:                                             ; preds = %2980
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %2983 = add i64 %362, 3
  %2984 = add i64 %362, 11
  %2985 = icmp ult i64 %2983, %2984
  br i1 %2985, label %2986, label %3249

2986:                                             ; preds = %2982, %2996
  %2987 = phi i64 [ %2997, %2996 ], [ %2983, %2982 ]
  %2988 = inttoptr i64 %2987 to i32*
  %2989 = load atomic i32, i32* %2988 monotonic, align 4
  %2990 = zext i32 %2989 to i64
  %2991 = and i64 %2990, 1
  %2992 = icmp eq i64 %2991, 0
  br i1 %2992, label %2996, label %2993

2993:                                             ; preds = %2986
  %2994 = and i64 %2987, -4294967296
  %2995 = or i64 %2994, %2990
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %2987, i64 %2995) #13
  br label %2996

2996:                                             ; preds = %2993, %2986
  %2997 = add i64 %2987, 4
  %2998 = icmp ult i64 %2997, %2984
  br i1 %2998, label %2986, label %3249

2999:                                             ; preds = %360
  %3000 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3000, label %3001, label %3249

3001:                                             ; preds = %2999
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3002 = add i64 %362, 3
  %3003 = add i64 %362, 11
  %3004 = icmp ult i64 %3002, %3003
  br i1 %3004, label %3005, label %3249

3005:                                             ; preds = %3001, %3015
  %3006 = phi i64 [ %3016, %3015 ], [ %3002, %3001 ]
  %3007 = inttoptr i64 %3006 to i32*
  %3008 = load atomic i32, i32* %3007 monotonic, align 4
  %3009 = zext i32 %3008 to i64
  %3010 = and i64 %3009, 1
  %3011 = icmp eq i64 %3010, 0
  br i1 %3011, label %3015, label %3012

3012:                                             ; preds = %3005
  %3013 = and i64 %3006, -4294967296
  %3014 = or i64 %3013, %3009
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3006, i64 %3014) #13
  br label %3015

3015:                                             ; preds = %3012, %3005
  %3016 = add i64 %3006, 4
  %3017 = icmp ult i64 %3016, %3003
  br i1 %3017, label %3005, label %3249

3018:                                             ; preds = %360
  %3019 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3019, label %3020, label %3249

3020:                                             ; preds = %3018
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3021 = add i64 %362, 3
  %3022 = add i64 %362, 11
  %3023 = icmp ult i64 %3021, %3022
  br i1 %3023, label %3024, label %3037

3024:                                             ; preds = %3020, %3034
  %3025 = phi i64 [ %3035, %3034 ], [ %3021, %3020 ]
  %3026 = inttoptr i64 %3025 to i32*
  %3027 = load atomic i32, i32* %3026 monotonic, align 4
  %3028 = zext i32 %3027 to i64
  %3029 = and i64 %3028, 1
  %3030 = icmp eq i64 %3029, 0
  br i1 %3030, label %3034, label %3031

3031:                                             ; preds = %3024
  %3032 = and i64 %3025, -4294967296
  %3033 = or i64 %3032, %3028
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3025, i64 %3033) #13
  br label %3034

3034:                                             ; preds = %3031, %3024
  %3035 = add i64 %3025, 4
  %3036 = icmp ult i64 %3035, %3022
  br i1 %3036, label %3024, label %3037

3037:                                             ; preds = %3034, %3020
  %3038 = add i64 %362, 19
  %3039 = add i64 %362, 23
  %3040 = icmp ult i64 %3038, -4
  br i1 %3040, label %3041, label %3249

3041:                                             ; preds = %3037, %3051
  %3042 = phi i64 [ %3052, %3051 ], [ %3038, %3037 ]
  %3043 = inttoptr i64 %3042 to i32*
  %3044 = load atomic i32, i32* %3043 monotonic, align 4
  %3045 = zext i32 %3044 to i64
  %3046 = and i64 %3045, 1
  %3047 = icmp eq i64 %3046, 0
  br i1 %3047, label %3051, label %3048

3048:                                             ; preds = %3041
  %3049 = and i64 %3042, -4294967296
  %3050 = or i64 %3049, %3045
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3042, i64 %3050) #13
  br label %3051

3051:                                             ; preds = %3048, %3041
  %3052 = add i64 %3042, 4
  %3053 = icmp ult i64 %3052, %3039
  br i1 %3053, label %3041, label %3249

3054:                                             ; preds = %360
  %3055 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3055, label %3056, label %3249

3056:                                             ; preds = %3054
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

3057:                                             ; preds = %360
  %3058 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3058, label %3059, label %3249

3059:                                             ; preds = %3057
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

3060:                                             ; preds = %360
  %3061 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3061, label %3062, label %3249

3062:                                             ; preds = %3060
  %3063 = add i64 %362, 3
  %3064 = inttoptr i64 %3063 to i32*
  %3065 = load i32, i32* %3064, align 4
  %3066 = lshr i32 %3065, 1
  %3067 = shl i32 %3066, 2
  %3068 = add nsw i32 %3067, 16
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3069 = add i64 %362, -1
  %3070 = sext i32 %3068 to i64
  %3071 = add i64 %3069, %3070
  %3072 = icmp ult i64 %3063, %3071
  br i1 %3072, label %3073, label %3249

3073:                                             ; preds = %3062, %3083
  %3074 = phi i64 [ %3084, %3083 ], [ %3063, %3062 ]
  %3075 = inttoptr i64 %3074 to i32*
  %3076 = load atomic i32, i32* %3075 monotonic, align 4
  %3077 = zext i32 %3076 to i64
  %3078 = and i64 %3077, 1
  %3079 = icmp eq i64 %3078, 0
  br i1 %3079, label %3083, label %3080

3080:                                             ; preds = %3073
  %3081 = and i64 %3074, -4294967296
  %3082 = or i64 %3081, %3077
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3074, i64 %3082) #13
  br label %3083

3083:                                             ; preds = %3080, %3073
  %3084 = add i64 %3074, 4
  %3085 = icmp ult i64 %3084, %3071
  br i1 %3085, label %3073, label %3249

3086:                                             ; preds = %360
  %3087 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3087, label %3088, label %3249

3088:                                             ; preds = %3086
  %3089 = add i64 %362, 11
  %3090 = inttoptr i64 %3089 to i32*
  %3091 = load i32, i32* %3090, align 4
  %3092 = ashr i32 %3091, 1
  %3093 = mul i32 %3092, 12
  %3094 = add i32 %3093, 24
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3095 = add i64 %362, -1
  %3096 = sext i32 %3094 to i64
  %3097 = add i64 %3095, %3096
  %3098 = icmp ult i64 %3089, %3097
  br i1 %3098, label %3099, label %3249

3099:                                             ; preds = %3088, %3109
  %3100 = phi i64 [ %3110, %3109 ], [ %3089, %3088 ]
  %3101 = inttoptr i64 %3100 to i32*
  %3102 = load atomic i32, i32* %3101 monotonic, align 4
  %3103 = zext i32 %3102 to i64
  %3104 = and i64 %3103, 1
  %3105 = icmp eq i64 %3104, 0
  br i1 %3105, label %3109, label %3106

3106:                                             ; preds = %3099
  %3107 = and i64 %3100, -4294967296
  %3108 = or i64 %3107, %3103
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3100, i64 %3108) #13
  br label %3109

3109:                                             ; preds = %3106, %3099
  %3110 = add i64 %3100, 4
  %3111 = icmp ult i64 %3110, %3097
  br i1 %3111, label %3099, label %3249

3112:                                             ; preds = %360
  %3113 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3113, label %3114, label %3249

3114:                                             ; preds = %3112
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3115 = add i64 %362, 3
  %3116 = add i64 %362, 11
  %3117 = icmp ult i64 %3115, %3116
  br i1 %3117, label %3118, label %3131

3118:                                             ; preds = %3114, %3128
  %3119 = phi i64 [ %3129, %3128 ], [ %3115, %3114 ]
  %3120 = inttoptr i64 %3119 to i32*
  %3121 = load atomic i32, i32* %3120 monotonic, align 4
  %3122 = zext i32 %3121 to i64
  %3123 = and i64 %3122, 1
  %3124 = icmp eq i64 %3123, 0
  br i1 %3124, label %3128, label %3125

3125:                                             ; preds = %3118
  %3126 = and i64 %3119, -4294967296
  %3127 = or i64 %3126, %3122
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3119, i64 %3127) #13
  br label %3128

3128:                                             ; preds = %3125, %3118
  %3129 = add i64 %3119, 4
  %3130 = icmp ult i64 %3129, %3116
  br i1 %3130, label %3118, label %3131

3131:                                             ; preds = %3128, %3114
  %3132 = add i64 %362, 19
  %3133 = add i64 %362, 23
  %3134 = icmp ult i64 %3132, -4
  br i1 %3134, label %3135, label %3249

3135:                                             ; preds = %3131, %3145
  %3136 = phi i64 [ %3146, %3145 ], [ %3132, %3131 ]
  %3137 = inttoptr i64 %3136 to i32*
  %3138 = load atomic i32, i32* %3137 monotonic, align 4
  %3139 = zext i32 %3138 to i64
  %3140 = and i64 %3139, 1
  %3141 = icmp eq i64 %3140, 0
  br i1 %3141, label %3145, label %3142

3142:                                             ; preds = %3135
  %3143 = and i64 %3136, -4294967296
  %3144 = or i64 %3143, %3139
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3136, i64 %3144) #13
  br label %3145

3145:                                             ; preds = %3142, %3135
  %3146 = add i64 %3136, 4
  %3147 = icmp ult i64 %3146, %3133
  br i1 %3147, label %3135, label %3249

3148:                                             ; preds = %360
  %3149 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3149, label %3150, label %3249

3150:                                             ; preds = %3148
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3151 = add i64 %362, 3
  %3152 = add i64 %362, 67
  %3153 = icmp ult i64 %3151, %3152
  br i1 %3153, label %3154, label %3249

3154:                                             ; preds = %3150, %3164
  %3155 = phi i64 [ %3165, %3164 ], [ %3151, %3150 ]
  %3156 = inttoptr i64 %3155 to i32*
  %3157 = load atomic i32, i32* %3156 monotonic, align 4
  %3158 = zext i32 %3157 to i64
  %3159 = and i64 %3158, 1
  %3160 = icmp eq i64 %3159, 0
  br i1 %3160, label %3164, label %3161

3161:                                             ; preds = %3154
  %3162 = and i64 %3155, -4294967296
  %3163 = or i64 %3162, %3158
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3155, i64 %3163) #13
  br label %3164

3164:                                             ; preds = %3161, %3154
  %3165 = add i64 %3155, 4
  %3166 = icmp ult i64 %3165, %3152
  br i1 %3166, label %3154, label %3249

3167:                                             ; preds = %360
  %3168 = call i32 @_ZN2v88internal24ConcurrentMarkingVisitor15VisitConsStringENS0_3MapENS0_10ConsStringE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %337, i64 %362) #13
  br label %3249

3169:                                             ; preds = %360
  %3170 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3170, label %3171, label %3249

3171:                                             ; preds = %3169
  %3172 = add i64 %337, 3
  %3173 = inttoptr i64 %3172 to i8*
  %3174 = load atomic i8, i8* %3173 monotonic, align 1
  %3175 = zext i8 %3174 to i32
  %3176 = shl nuw nsw i32 %3175, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  br label %3249

3177:                                             ; preds = %360
  %3178 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3178, label %3179, label %3249

3179:                                             ; preds = %3177
  %3180 = add i64 %337, 3
  %3181 = inttoptr i64 %3180 to i8*
  %3182 = load atomic i8, i8* %3181 monotonic, align 1
  %3183 = zext i8 %3182 to i32
  %3184 = shl nuw nsw i32 %3183, 2
  %3185 = add i64 %337, 5
  %3186 = inttoptr i64 %3185 to i8*
  %3187 = load atomic i8, i8* %3186 monotonic, align 1
  %3188 = icmp ult i8 %3187, 3
  br i1 %3188, label %3189, label %3191

3189:                                             ; preds = %3179
  %3190 = load atomic i8, i8* %3181 monotonic, align 1
  br label %3191

3191:                                             ; preds = %3189, %3179
  %3192 = phi i8 [ %3190, %3189 ], [ %3187, %3179 ]
  %3193 = zext i8 %3192 to i64
  %3194 = shl nuw nsw i64 %3193, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3195 = add i64 %362, -1
  %3196 = add i64 %362, 3
  %3197 = add i64 %3195, %3194
  %3198 = icmp ult i64 %3196, %3197
  br i1 %3198, label %3199, label %3249

3199:                                             ; preds = %3191, %3209
  %3200 = phi i64 [ %3210, %3209 ], [ %3196, %3191 ]
  %3201 = inttoptr i64 %3200 to i32*
  %3202 = load atomic i32, i32* %3201 monotonic, align 4
  %3203 = zext i32 %3202 to i64
  %3204 = and i64 %3203, 1
  %3205 = icmp eq i64 %3204, 0
  br i1 %3205, label %3209, label %3206

3206:                                             ; preds = %3199
  %3207 = and i64 %3200, -4294967296
  %3208 = or i64 %3207, %3203
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3200, i64 %3208) #13
  br label %3209

3209:                                             ; preds = %3206, %3199
  %3210 = add i64 %3200, 4
  %3211 = icmp ult i64 %3210, %3197
  br i1 %3211, label %3199, label %3249

3212:                                             ; preds = %360
  %3213 = call i32 @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_8JSObjectEEEiNS0_3MapET_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %337, i64 %362) #13
  br label %3249

3214:                                             ; preds = %360
  %3215 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3215, label %3216, label %3249

3216:                                             ; preds = %3214
  %3217 = add i64 %337, 3
  %3218 = inttoptr i64 %3217 to i8*
  %3219 = load atomic i8, i8* %3218 monotonic, align 1
  %3220 = zext i8 %3219 to i32
  %3221 = shl nuw nsw i32 %3220, 2
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3222 = add i64 %362, -1
  %3223 = add i64 %362, 3
  %3224 = zext i32 %3221 to i64
  %3225 = add i64 %3222, %3224
  %3226 = icmp ult i64 %3223, %3225
  br i1 %3226, label %3227, label %3249

3227:                                             ; preds = %3216, %3237
  %3228 = phi i64 [ %3238, %3237 ], [ %3223, %3216 ]
  %3229 = inttoptr i64 %3228 to i32*
  %3230 = load atomic i32, i32* %3229 monotonic, align 4
  %3231 = zext i32 %3230 to i64
  %3232 = and i64 %3231, 1
  %3233 = icmp eq i64 %3232, 0
  br i1 %3233, label %3237, label %3234

3234:                                             ; preds = %3227
  %3235 = and i64 %3228, -4294967296
  %3236 = or i64 %3235, %3231
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362, i64 %3228, i64 %3236) #13
  br label %3237

3237:                                             ; preds = %3234, %3227
  %3238 = add i64 %3228, 4
  %3239 = icmp ult i64 %3238, %3225
  br i1 %3239, label %3227, label %3249

3240:                                             ; preds = %360
  %3241 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %362) #13
  br i1 %3241, label %3242, label %3249

3242:                                             ; preds = %3240
  call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* nonnull %129, i64 %362) #13
  %3243 = add i64 %362, 3
  %3244 = inttoptr i64 %3243 to i32*
  %3245 = load atomic i32, i32* %3244 monotonic, align 4
  %3246 = ashr i32 %3245, 1
  br label %3249

3247:                                             ; preds = %360, %360
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

3248:                                             ; preds = %360
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

3249:                                             ; preds = %3237, %3209, %3164, %3145, %3109, %3083, %3051, %3015, %2996, %2977, %2958, %2890, %2871, %2831, %2812, %2706, %2681, %2649, %2617, %2522, %2429, %2403, %2371, %2202, %2183, %2157, %2120, %2023, %1944, %1919, %1900, %1881, %1750, %1715, %1696, %1666, %1631, %1601, %1571, %1535, %1516, %1494, %1451, %1432, %766, %597, %569, %486, %385, %364, %366, %388, %390, %397, %399, %468, %470, %472, %489, %516, %517, %519, %520, %522, %528, %549, %572, %574, %748, %750, %752, %769, %782, %784, %789, %842, %843, %846, %884, %909, %913, %927, %940, %957, %960, %971, %985, %988, %1004, %1018, %1022, %1024, %1113, %1123, %1126, %1142, %1156, %1160, %1163, %1187, %1197, %1200, %1216, %1413, %1435, %1437, %1454, %1477, %1497, %1499, %1519, %1521, %1538, %1540, %1542, %1544, %1574, %1576, %1604, %1606, %1634, %1653, %1669, %1671, %1699, %1701, %1718, %1737, %1753, %1794, %1797, %1813, %1815, %1865, %1884, %1886, %1903, %1905, %1922, %1924, %1925, %1927, %1947, %2006, %2007, %2009, %2026, %2059, %2125, %2144, %2160, %2162, %2186, %2188, %2346, %2348, %2353, %2374, %2376, %2406, %2408, %2432, %2504, %2525, %2586, %2587, %2589, %2620, %2622, %2652, %2654, %2684, %2686, %2709, %2781, %2784, %2800, %2815, %2817, %2834, %2855, %2874, %2876, %2893, %2895, %2897, %2903, %2905, %2912, %2914, %2941, %2942, %2944, %2961, %2963, %2980, %2982, %2999, %3001, %3018, %3037, %3054, %3056, %3057, %3059, %3060, %3062, %3086, %3088, %3112, %3131, %3148, %3150, %3167, %3169, %3171, %3177, %3191, %3212, %3214, %3216, %3240, %3242
  %3250 = phi i32 [ %3213, %3212 ], [ %3168, %3167 ], [ %2913, %2912 ], [ %2894, %2893 ], [ %1023, %1022 ], [ %795, %842 ], [ %749, %748 ], [ %469, %468 ], [ 0, %364 ], [ %371, %366 ], [ %396, %390 ], [ 0, %388 ], [ %405, %399 ], [ 0, %397 ], [ 0, %470 ], [ 8, %472 ], [ %500, %516 ], [ 0, %489 ], [ 12, %519 ], [ 0, %517 ], [ %527, %522 ], [ 0, %520 ], [ 0, %528 ], [ %531, %549 ], [ 0, %572 ], [ %575, %574 ], [ 0, %750 ], [ 12, %752 ], [ %783, %782 ], [ 0, %769 ], [ %792, %789 ], [ 0, %784 ], [ 0, %843 ], [ %844, %846 ], [ %844, %884 ], [ %910, %909 ], [ %910, %913 ], [ %910, %927 ], [ %910, %940 ], [ %910, %957 ], [ %910, %960 ], [ %910, %971 ], [ %910, %985 ], [ %910, %988 ], [ %1011, %1018 ], [ 0, %1004 ], [ 0, %1024 ], [ %1031, %1113 ], [ %1031, %1123 ], [ %1031, %1126 ], [ %1149, %1156 ], [ 0, %1142 ], [ 0, %1160 ], [ %1161, %1163 ], [ %1161, %1187 ], [ %1161, %1197 ], [ %1161, %1200 ], [ 0, %1216 ], [ %1396, %1413 ], [ 0, %1435 ], [ 1036, %1437 ], [ 0, %1454 ], [ %1466, %1477 ], [ 0, %1497 ], [ %1500, %1499 ], [ 0, %1519 ], [ 20, %1521 ], [ %1541, %1540 ], [ 0, %1538 ], [ 0, %1542 ], [ %1552, %1544 ], [ 0, %1574 ], [ %1584, %1576 ], [ 0, %1604 ], [ %1614, %1606 ], [ 0, %1634 ], [ 72, %1653 ], [ 0, %1669 ], [ %1677, %1671 ], [ 0, %1699 ], [ 16, %1701 ], [ 0, %1718 ], [ 40, %1737 ], [ 0, %1753 ], [ %1761, %1794 ], [ %1761, %1797 ], [ 0, %1813 ], [ %1845, %1815 ], [ %1845, %1865 ], [ 0, %1884 ], [ 28, %1886 ], [ 0, %1903 ], [ 44, %1905 ], [ 12, %1924 ], [ 0, %1922 ], [ 0, %1925 ], [ %1928, %1927 ], [ %1954, %2006 ], [ 0, %1947 ], [ 0, %2007 ], [ 36, %2009 ], [ 0, %2026 ], [ %2060, %2059 ], [ 0, %2125 ], [ 24, %2144 ], [ 0, %2160 ], [ %2168, %2162 ], [ 0, %2186 ], [ 28, %2188 ], [ %2347, %2346 ], [ 0, %2348 ], [ %2356, %2353 ], [ 0, %2374 ], [ %2382, %2376 ], [ 0, %2406 ], [ %2414, %2408 ], [ 0, %2432 ], [ %2508, %2504 ], [ %2533, %2586 ], [ 0, %2525 ], [ 0, %2587 ], [ %2595, %2589 ], [ 0, %2620 ], [ %2627, %2622 ], [ 0, %2652 ], [ %2660, %2654 ], [ 0, %2684 ], [ 12, %2686 ], [ 0, %2709 ], [ 36, %2781 ], [ 36, %2784 ], [ 36, %2800 ], [ 0, %2815 ], [ 16, %2817 ], [ 0, %2834 ], [ 20, %2855 ], [ 0, %2874 ], [ 28, %2876 ], [ %2902, %2897 ], [ 0, %2895 ], [ %2911, %2905 ], [ 0, %2903 ], [ 16, %2941 ], [ 0, %2914 ], [ 0, %2942 ], [ 12, %2944 ], [ 0, %2961 ], [ 12, %2963 ], [ 0, %2980 ], [ 12, %2982 ], [ 0, %2999 ], [ 12, %3001 ], [ 0, %3018 ], [ 24, %3037 ], [ 4, %3056 ], [ 0, %3054 ], [ 4, %3059 ], [ 0, %3057 ], [ 0, %3060 ], [ %3068, %3062 ], [ 0, %3086 ], [ %3094, %3088 ], [ 0, %3112 ], [ 24, %3131 ], [ 0, %3148 ], [ 68, %3150 ], [ 0, %3169 ], [ %3176, %3171 ], [ 0, %3177 ], [ %3184, %3191 ], [ 0, %3214 ], [ %3221, %3216 ], [ %3246, %3242 ], [ 0, %3240 ], [ %371, %385 ], [ 8, %486 ], [ %531, %569 ], [ %575, %597 ], [ 12, %766 ], [ %1396, %1432 ], [ 1036, %1451 ], [ %1466, %1494 ], [ %1500, %1516 ], [ 20, %1535 ], [ %1552, %1571 ], [ %1584, %1601 ], [ %1614, %1631 ], [ 72, %1666 ], [ %1677, %1696 ], [ 16, %1715 ], [ 40, %1750 ], [ %1845, %1881 ], [ 28, %1900 ], [ 44, %1919 ], [ %1928, %1944 ], [ 36, %2023 ], [ %2060, %2120 ], [ 24, %2157 ], [ %2168, %2183 ], [ 28, %2202 ], [ %2356, %2371 ], [ %2382, %2403 ], [ %2414, %2429 ], [ %2508, %2522 ], [ %2595, %2617 ], [ %2627, %2649 ], [ %2660, %2681 ], [ 12, %2706 ], [ 36, %2812 ], [ 16, %2831 ], [ 20, %2871 ], [ 28, %2890 ], [ 12, %2958 ], [ 12, %2977 ], [ 12, %2996 ], [ 12, %3015 ], [ 24, %3051 ], [ %3068, %3083 ], [ %3094, %3109 ], [ 24, %3145 ], [ 68, %3164 ], [ %3184, %3209 ], [ %3221, %3237 ]
  %3251 = sext i32 %3250 to i64
  br i1 %117, label %3252, label %3271

3252:                                             ; preds = %3249
  %3253 = load i64, i64* %127, align 8
  %3254 = load i64, i64* %119, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188)
  store i64 %3253, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #13
  store i64* %9, i64** %191, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %192) #13
  %3255 = call { %"struct.std::__1::__hash_node_base.258"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.254"* %189, i64* nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1192"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1177"* nonnull dereferenceable(1) %8) #13
  %3256 = extractvalue { %"struct.std::__1::__hash_node_base.258"*, i8 } %3255, 0
  %3257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %3256, i64 3
  %3258 = bitcast %"struct.std::__1::__hash_node_base.258"* %3257 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %192) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #13
  %3259 = load i64, i64* %3258, align 8
  %3260 = add i64 %3259, %3251
  store i64 %3260, i64* %3258, align 8
  %3261 = add i64 %337, 7
  %3262 = inttoptr i64 %3261 to i16*
  %3263 = load atomic i16, i16* %3262 monotonic, align 2
  %3264 = icmp eq i16 %3263, 1086
  %3265 = and i16 %3263, -57
  %3266 = icmp eq i16 %3265, 2
  %3267 = or i1 %3264, %3266
  br i1 %3267, label %3268, label %3270

3268:                                             ; preds = %3252
  %3269 = load i64, i64* %9, align 8
  call void @_ZN2v88internal18NativeContextStats21IncrementExternalSizeEmNS0_3MapENS0_10HeapObjectE(%"class.v8::internal::NativeContextStats"* %81, i64 %3269, i64 %337, i64 %3254) #13
  br label %3270

3270:                                             ; preds = %3252, %3268
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188)
  br label %3271

3271:                                             ; preds = %3270, %3249
  %3272 = add i64 %205, %3251
  br label %3274

3273:                                             ; preds = %258, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  br label %3279

3274:                                             ; preds = %323, %3271
  %3275 = phi i64 [ %205, %323 ], [ %3272, %3271 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  %3276 = icmp ult i64 %3275, 65536
  %3277 = icmp ult i32 %261, 1000
  %3278 = and i1 %3277, %3276
  br i1 %3278, label %204, label %3279

3279:                                             ; preds = %3274, %3273
  %3280 = phi i64 [ %205, %3273 ], [ %3275, %3274 ]
  %3281 = phi i8 [ 1, %3273 ], [ %200, %3274 ]
  %3282 = add i64 %3280, %201
  store atomic volatile i64 %3282, i64* %197 monotonic, align 8
  %3283 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %198, align 8
  %3284 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %3283, align 8
  %3285 = call zeroext i1 %3284(%"class.v8::JobDelegate"* %1) #13
  br i1 %3285, label %3286, label %199

3286:                                             ; preds = %3279
  %3287 = load atomic i64, i64* @_ZZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjbE28trace_event_unique_atomic505 monotonic, align 8
  %3288 = inttoptr i64 %3287 to i8*
  %3289 = icmp eq i64 %3287, 0
  br i1 %3289, label %3290, label %3298

3290:                                             ; preds = %3286
  %3291 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %3292 = bitcast %"class.v8::TracingController"* %3291 to i8* (%"class.v8::TracingController"*, i8*)***
  %3293 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %3292, align 8
  %3294 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %3293, i64 2
  %3295 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %3294, align 8
  %3296 = call i8* %3295(%"class.v8::TracingController"* %3291, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  %3297 = ptrtoint i8* %3296 to i64
  store atomic volatile i64 %3297, i64* @_ZZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjbE28trace_event_unique_atomic505 monotonic, align 8
  br label %3298

3298:                                             ; preds = %3286, %3290
  %3299 = phi i8* [ %3288, %3286 ], [ %3296, %3290 ]
  %3300 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3300) #13
  %3301 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %3301, align 8
  %3302 = load atomic i8, i8* %3299 monotonic, align 1
  %3303 = and i8 %3302, 5
  %3304 = icmp eq i8 %3303, 0
  br i1 %3304, label %3353, label %3305

3305:                                             ; preds = %3298
  %3306 = bitcast [2 x %"class.std::__1::unique_ptr.1210"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3306) #13
  %3307 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3306, i8 0, i64 16, i1 false) #13
  %3308 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %3309 = bitcast %"class.v8::TracingController"* %3308 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)***
  %3310 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*** %3309, align 8
  %3311 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)** %3310, i64 3
  %3312 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)** %3311, align 8
  %3313 = call i64 %3312(%"class.v8::TracingController"* %3308, i8 signext 88, i8* %3299, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1210"* nonnull %3307, i32 0) #13
  %3314 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %3315 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %3314, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %3314, align 8
  %3316 = icmp eq %"class.v8::ConvertableToTraceFormat"* %3315, null
  br i1 %3316, label %3322, label %3317

3317:                                             ; preds = %3305
  %3318 = bitcast %"class.v8::ConvertableToTraceFormat"* %3315 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %3319 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %3318, align 8
  %3320 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %3319, i64 1
  %3321 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %3320, align 8
  call void %3321(%"class.v8::ConvertableToTraceFormat"* nonnull %3315) #13
  br label %3322

3322:                                             ; preds = %3317, %3305
  %3323 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %3324 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %3323, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %3323, align 16
  %3325 = icmp eq %"class.v8::ConvertableToTraceFormat"* %3324, null
  br i1 %3325, label %3331, label %3326

3326:                                             ; preds = %3322
  %3327 = bitcast %"class.v8::ConvertableToTraceFormat"* %3324 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %3328 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %3327, align 8
  %3329 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %3328, i64 1
  %3330 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %3329, align 8
  call void %3330(%"class.v8::ConvertableToTraceFormat"* nonnull %3324) #13
  br label %3331

3331:                                             ; preds = %3326, %3322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3306) #13
  %3332 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1
  %3333 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %3332, i64 0, i32 0
  store i8* %3299, i8** %3333, align 8
  %3334 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8** %3334, align 8
  %3335 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1, i32 2
  store i64 %3313, i64* %3335, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %3332, %"struct.v8::internal::tracing::ScopedTracer::Data"** %3301, align 8
  %3336 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %3332, null
  br i1 %3336, label %3353, label %3337

3337:                                             ; preds = %3331
  %3338 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1, i32 0
  %3339 = load i8*, i8** %3338, align 8
  %3340 = load atomic i8, i8* %3339 monotonic, align 1
  %3341 = icmp eq i8 %3340, 0
  br i1 %3341, label %3353, label %3342

3342:                                             ; preds = %3337
  %3343 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %3344 = load i8*, i8** %3338, align 8
  %3345 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1, i32 1
  %3346 = load i8*, i8** %3345, align 8
  %3347 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %35, i64 0, i32 1, i32 2
  %3348 = load i64, i64* %3347, align 8
  %3349 = bitcast %"class.v8::TracingController"* %3343 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %3350 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %3349, align 8
  %3351 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %3350, i64 5
  %3352 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %3351, align 8
  call void %3352(%"class.v8::TracingController"* %3343, i8* %3344, i8* %3346, i64 %3348) #13
  br label %3353

3353:                                             ; preds = %3298, %3342, %3337, %3331
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3300) #13
  %3354 = and i8 %3281, 1
  %3355 = icmp eq i8 %3354, 0
  br i1 %3355, label %3376, label %3356

3356:                                             ; preds = %199, %3353
  %3357 = phi i64 [ %3282, %3353 ], [ %201, %199 ]
  %3358 = bitcast %"struct.v8::internal::Ephemeron"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3358) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3358, i8 0, i64 16, i1 false) #13
  %3359 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3360 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3359, i64 0, i32 4
  %3361 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_(%"class.v8::internal::Worklist.196"* %3360, i32 %48, %"struct.v8::internal::Ephemeron"* nonnull %36)
  br i1 %3361, label %3362, label %3374

3362:                                             ; preds = %3356
  %3363 = getelementptr inbounds %"struct.v8::internal::Ephemeron", %"struct.v8::internal::Ephemeron"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %3364 = getelementptr inbounds %"struct.v8::internal::Ephemeron", %"struct.v8::internal::Ephemeron"* %36, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %3365

3365:                                             ; preds = %3362, %3365
  %3366 = phi i8 [ %114, %3362 ], [ %3370, %3365 ]
  %3367 = load i64, i64* %3363, align 8
  %3368 = load i64, i64* %3364, align 8
  %3369 = call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor16ProcessEphemeronENS0_10HeapObjectES2_(%"class.v8::internal::ConcurrentMarkingVisitor"* nonnull %31, i64 %3367, i64 %3368)
  %3370 = select i1 %3369, i8 1, i8 %3366
  %3371 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3372 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3371, i64 0, i32 4
  %3373 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_(%"class.v8::internal::Worklist.196"* %3372, i32 %48, %"struct.v8::internal::Ephemeron"* nonnull %36)
  br i1 %3373, label %3365, label %3374

3374:                                             ; preds = %3365, %3356
  %3375 = phi i8 [ %114, %3356 ], [ %3370, %3365 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3358) #13
  br label %3376

3376:                                             ; preds = %3353, %3374
  %3377 = phi i64 [ %3357, %3374 ], [ %3282, %3353 ]
  %3378 = phi i8 [ %3375, %3374 ], [ %114, %3353 ]
  call void @_ZN2v88internal16MarkingWorklists5Local7PublishEv(%"class.v8::internal::MarkingWorklists::Local"* nonnull %30) #13
  %3379 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3380 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3379, i64 0, i32 0
  call void @_ZN2v88internal8WorklistINS0_15TransitionArrayELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist"* %3380, i32 %48)
  %3381 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3382 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3381, i64 0, i32 1
  call void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.194"* %3382, i32 %48)
  %3383 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3384 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3383, i64 0, i32 2
  call void @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.196"* %3384, i32 %48)
  %3385 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3386 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3385, i64 0, i32 3
  call void @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.196"* %3386, i32 %48)
  %3387 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3388 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3387, i64 0, i32 4
  call void @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.196"* %3388, i32 %48)
  %3389 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3390 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3389, i64 0, i32 5
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_24CompressedHeapObjectSlotEEELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.198"* %3390, i32 %48)
  %3391 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3392 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3391, i64 0, i32 7
  call void @_ZN2v88internal8WorklistINS0_9JSWeakRefELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.202"* %3392, i32 %48)
  %3393 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3394 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3393, i64 0, i32 8
  call void @_ZN2v88internal8WorklistINS0_8WeakCellELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.204"* %3394, i32 %48)
  %3395 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3396 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3395, i64 0, i32 6
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_4CodeEEELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.200"* %3396, i32 %48)
  %3397 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3398 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3397, i64 0, i32 9
  call void @_ZN2v88internal8WorklistINS0_18SharedFunctionInfoELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.206"* %3398, i32 %48)
  %3399 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %49, align 8
  %3400 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %3399, i64 0, i32 10
  call void @_ZN2v88internal8WorklistINS0_10JSFunctionELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.208"* %3400, i32 %48)
  store atomic volatile i64 0, i64* %197 monotonic, align 8
  %3401 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %3402 = atomicrmw add i64* %3401, i64 %3377 seq_cst
  %3403 = and i8 %3378, 1
  %3404 = icmp eq i8 %3403, 0
  br i1 %3404, label %3407, label %3405

3405:                                             ; preds = %3376
  %3406 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %3406 seq_cst, align 1
  br label %3407

3407:                                             ; preds = %3376, %3405
  %3408 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %3409 = bitcast %"class.v8::Platform"* %3408 to double (%"class.v8::Platform"*)***
  %3410 = load double (%"class.v8::Platform"*)**, double (%"class.v8::Platform"*)*** %3409, align 8
  %3411 = getelementptr inbounds double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %3410, i64 13
  %3412 = load double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %3411, align 8
  %3413 = call double %3412(%"class.v8::Platform"* %3408) #13
  %3414 = load i8, i8* @_ZN2v88internal29FLAG_trace_concurrent_markingE, align 1, !range !2
  %3415 = icmp eq i8 %3414, 0
  br i1 %3415, label %3424, label %3416

3416:                                             ; preds = %3407
  %3417 = fmul double %3413, 1.000000e+03
  %3418 = fsub double %3417, %96
  %3419 = load i64, i64* %82, align 8
  %3420 = add i64 %3419, -41416
  %3421 = inttoptr i64 %3420 to %"class.v8::internal::Isolate"*
  %3422 = lshr i64 %3377, 10
  %3423 = trunc i64 %3422 to i32
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %3421, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i32 %48, i32 %3423, double %3418) #13
  br label %3424

3424:                                             ; preds = %3407, %3416
  call void @llvm.lifetime.end.p0i8(i64 4152, i8* nonnull %47) #13
  call void @_ZN2v88internal16MarkingWorklists5LocalD1Ev(%"class.v8::internal::MarkingWorklists::Local"* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %44) #13
  ret void
}

declare void @_ZN2v88internal16MarkingWorklists5LocalC1EPS1_(%"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists"*) unnamed_addr #3

declare void @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE3PopEiPS2_(%"class.v8::internal::Worklist.196"*, i32, %"struct.v8::internal::Ephemeron"*) local_unnamed_addr #2 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 0, i64 %4, i32 1
  %6 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %6 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %3
  %12 = add i64 %8, -1
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %6, i64 0, i32 2, i64 %12
  %14 = bitcast %"struct.v8::internal::Ephemeron"* %2 to i8*
  %15 = bitcast %"struct.v8::internal::Ephemeron"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false) #13
  br label %58

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 0, i64 %4, i32 0
  %18 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %18 to i64
  %24 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %5 to i64*
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %17 to i64*
  store i64 %23, i64* %24, align 8
  store i64 %10, i64* %25, align 8
  br label %48

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 1
  %28 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %32) #13
  %33 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %27, align 8
  %34 = icmp eq %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %32) #13
  br label %58

36:                                               ; preds = %31
  %37 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %33 to i64*
  %38 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %33 to i64
  %39 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i64* %39, i64 1 monotonic
  %41 = load i64, i64* %37, align 8
  store atomic volatile i64 %41, i64* %28 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %32) #13
  %42 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %5, align 8
  %43 = icmp eq %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %36, %44
  %47 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %5 to i64*
  store i64 %38, i64* %47, align 8
  br label %48

48:                                               ; preds = %46, %22
  %49 = phi %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* [ %33, %46 ], [ %18, %22 ]
  %50 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %49, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = add i64 %51, -1
  store i64 %54, i64* %50, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %49, i64 0, i32 2, i64 %54
  %56 = bitcast %"struct.v8::internal::Ephemeron"* %2 to i8*
  %57 = bitcast %"struct.v8::internal::Ephemeron"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #13
  br label %58

58:                                               ; preds = %35, %26, %53, %48, %11
  %59 = phi i1 [ true, %11 ], [ true, %48 ], [ true, %53 ], [ false, %26 ], [ false, %35 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor16ProcessEphemeronENS0_10HeapObjectES2_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = and i64 %1, -262144
  %5 = or i64 %4, 272
  %6 = sub i64 %1, %4
  %7 = trunc i64 %6 to i32
  %8 = lshr i32 %7, 2
  %9 = and i32 %8, 31
  %10 = shl i32 1, %9
  %11 = inttoptr i64 %5 to i32*
  %12 = lshr i64 %6, 7
  %13 = and i64 %12, 33554431
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = and i32 %15, %10
  %17 = icmp eq i32 %16, 0
  %18 = and i64 %2, -262144
  %19 = or i64 %18, 272
  %20 = sub i64 %2, %18
  %21 = trunc i64 %20 to i32
  %22 = lshr i32 %21, 2
  %23 = and i32 %22, 31
  %24 = shl i32 1, %23
  %25 = inttoptr i64 %19 to i32*
  %26 = lshr i64 %20, 7
  %27 = and i64 %26, 33554431
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  br i1 %17, label %83, label %29

29:                                               ; preds = %3
  %30 = load atomic i32, i32* %28 monotonic, align 4
  br label %31

31:                                               ; preds = %35, %29
  %32 = phi i32 [ %30, %29 ], [ %38, %35 ]
  %33 = and i32 %32, %24
  %34 = icmp eq i32 %33, %24
  br i1 %34, label %120, label %35

35:                                               ; preds = %31
  %36 = or i32 %32, %24
  %37 = cmpxchg volatile i32* %28, i32 %32, i32 %36 release monotonic
  %38 = extractvalue { i32, i1 } %37, 0
  %39 = extractvalue { i32, i1 } %37, 1
  br i1 %39, label %40, label %31

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1
  %42 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %42, i64 0, i32 2, i32 1
  %44 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %43, align 8
  %45 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %44, i64 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %44, i64 0, i32 0
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %46, %48
  %50 = bitcast %"class.heap::base::internal::SegmentBase"* %44 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %49, label %51, label %76, !prof !3

51:                                               ; preds = %40
  %52 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %53 = icmp eq %"class.heap::base::internal::SegmentBase"* %44, %52
  br i1 %53, label %68, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %42, i64 0, i32 2, i32 0
  %56 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %55, align 8
  %57 = bitcast %"class.heap::base::internal::SegmentBase"** %43 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %58 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %57, align 8
  %59 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %59) #13
  %60 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 1
  %61 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %58, i64 0, i32 1
  %64 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %58 to i64
  store atomic i64 %65, i64* %61 monotonic, align 8
  %66 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i64* %66, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %59) #13
  br label %68

68:                                               ; preds = %54, %51
  %69 = tail call i8* @_Znwm(i64 528) #14
  %70 = bitcast i8* %69 to i16*
  store i16 64, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %69, i64 2
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 520, i1 false) #13
  %74 = bitcast %"class.heap::base::internal::SegmentBase"** %43 to i8**
  store i8* %69, i8** %74, align 8
  %75 = bitcast i8* %69 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %76

76:                                               ; preds = %40, %68
  %77 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %75, %68 ], [ %50, %40 ]
  %78 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %77, i64 0, i32 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, 1
  store i16 %80, i16* %78, align 2
  %81 = zext i16 %79 to i64
  %82 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %77, i64 0, i32 2, i64 %81, i32 0, i32 0, i32 0
  store i64 %2, i64* %82, align 8
  br label %120

83:                                               ; preds = %3
  %84 = load atomic i32, i32* %28 acquire, align 4
  %85 = and i32 %84, %24
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %120

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 2
  %89 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %89, i64 0, i32 3, i32 0, i64 %92, i32 0
  %94 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %94, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, 64
  br i1 %97, label %102, label %98

98:                                               ; preds = %87
  %99 = add i64 %96, 1
  store i64 %99, i64* %95, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %94, i64 0, i32 2, i64 %96, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %94, i64 0, i32 2, i64 %96, i32 1, i32 0, i32 0, i32 0
  store i64 %2, i64* %101, align 8
  br label %120

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %89, i64 0, i32 3, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %103) #13
  %104 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %89, i64 0, i32 3, i32 1, i32 1
  %105 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %94 to i64*
  store i64 %106, i64* %107, align 8
  %108 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %94 to i64
  store atomic volatile i64 %108, i64* %105 monotonic, align 8
  %109 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %89, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i64* %109, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %103) #13
  %111 = tail call i8* @_Znwm(i64 1040) #14
  %112 = getelementptr inbounds i8, i8* %111, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 1008, i1 false) #13
  %113 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %93 to i8**
  store i8* %111, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 8
  %115 = bitcast i8* %114 to i64*
  store i64 1, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %111, i64 16
  %117 = bitcast i8* %116 to i64*
  store i64 %1, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %111, i64 24
  %119 = bitcast i8* %118 to i64*
  store i64 %2, i64* %119, align 8
  br label %120

120:                                              ; preds = %31, %102, %98, %83, %76
  %121 = phi i1 [ true, %76 ], [ false, %83 ], [ false, %98 ], [ false, %102 ], [ false, %31 ]
  ret i1 %121
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

declare void @_ZN2v88internal16MarkingWorklists5Local7PublishEv(%"class.v8::internal::MarkingWorklists::Local"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_15TransitionArrayELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist", %"class.v8::internal::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.194"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.194"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_9EphemeronELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.196"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 1040) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 1032, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.196"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 1040) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 1032, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_24CompressedHeapObjectSlotEEELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.198"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 1040) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 1032, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.198"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 1040) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 1032, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_9JSWeakRefELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.202"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_8WeakCellELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.204"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.204"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectENS0_4CodeEEELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.200"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 1040) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 1032, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 1040) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 1032, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_18SharedFunctionInfoELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.206"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_10JSFunctionELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.208"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #13
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #13
  %18 = tail call i8* @_Znwm(i64 528) #14
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 520, i1 false) #13
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #13
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.208"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #13
  %36 = tail call i8* @_Znwm(i64 528) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 520, i1 false) #13
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal16MarkingWorklists5LocalD1Ev(%"class.v8::internal::MarkingWorklists::Local"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ConcurrentMarking17GetMaxConcurrencyEm(%"class.v8::internal::ConcurrentMarking"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca [3 x i64], align 8
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::MarkingWorklists"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %5, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %5, i64 0, i32 3, i32 0, i32 0
  %9 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %5, i64 0, i32 3, i32 0, i32 1
  %11 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %9, %11
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = ptrtoint %"struct.v8::internal::ContextWorklistPair"* %9 to i64
  %15 = getelementptr %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %11, i64 -1, i32 0
  %16 = ptrtoint i64* %15 to i64
  %17 = sub i64 %16, %14
  %18 = lshr i64 %17, 4
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 7
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %13, %22
  %23 = phi i64 [ %30, %22 ], [ %7, %13 ]
  %24 = phi %"struct.v8::internal::ContextWorklistPair"* [ %31, %22 ], [ %9, %13 ]
  %25 = phi i64 [ %32, %22 ], [ %20, %13 ]
  %26 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %24, i64 0, i32 1
  %27 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %26, align 8
  %28 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = add i64 %29, %23
  %31 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %24, i64 1
  %32 = add i64 %25, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %22, !llvm.loop !30

34:                                               ; preds = %22, %13
  %35 = phi i64 [ undef, %13 ], [ %30, %22 ]
  %36 = phi i64 [ %7, %13 ], [ %30, %22 ]
  %37 = phi %"struct.v8::internal::ContextWorklistPair"* [ %9, %13 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 112
  br i1 %38, label %39, label %60

39:                                               ; preds = %34, %60, %2
  %40 = phi i64 [ %7, %2 ], [ %35, %34 ], [ %102, %60 ]
  %41 = bitcast [3 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  %42 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i64 0, i64 0
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i64 0, i64 1
  %44 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 3
  %45 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %45, i64 0, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i64, i64* %46 monotonic, align 8
  store i64 %47, i64* %43, align 8
  %48 = getelementptr inbounds [3 x i64], [3 x i64]* %3, i64 0, i64 2
  %49 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %45, i64 0, i32 2, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i64, i64* %49 monotonic, align 8
  store i64 %50, i64* %48, align 8
  %51 = icmp ult i64 %40, %47
  %52 = load i64, i64* %43, align 8
  %53 = load i64, i64* %42, align 8
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp ult i64 %54, %50
  %56 = select i1 %55, i64 %50, i64 %54
  %57 = add i64 %56, %1
  %58 = icmp ult i64 %57, 7
  %59 = select i1 %58, i64 %57, i64 7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  ret i64 %59

60:                                               ; preds = %34, %60
  %61 = phi i64 [ %102, %60 ], [ %36, %34 ]
  %62 = phi %"struct.v8::internal::ContextWorklistPair"* [ %103, %60 ], [ %37, %34 ]
  %63 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 0, i32 1
  %64 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %63, align 8
  %65 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = add i64 %66, %61
  %68 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 1, i32 1
  %69 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %68, align 8
  %70 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = add i64 %71, %67
  %73 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 2, i32 1
  %74 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %73, align 8
  %75 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = add i64 %76, %72
  %78 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 3, i32 1
  %79 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %78, align 8
  %80 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i64, i64* %80 monotonic, align 8
  %82 = add i64 %81, %77
  %83 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 4, i32 1
  %84 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %83, align 8
  %85 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i64, i64* %85 monotonic, align 8
  %87 = add i64 %86, %82
  %88 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 5, i32 1
  %89 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %88, align 8
  %90 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i64, i64* %90 monotonic, align 8
  %92 = add i64 %91, %87
  %93 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 6, i32 1
  %94 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %93, align 8
  %95 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i64, i64* %95 monotonic, align 8
  %97 = add i64 %96, %92
  %98 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 7, i32 1
  %99 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %98, align 8
  %100 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i64, i64* %100 monotonic, align 8
  %102 = add i64 %101, %97
  %103 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %62, i64 8
  %104 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %103, %11
  br i1 %104, label %39, label %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking11ScheduleJobENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"*, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %4 = ptrtoint %"class.v8::internal::ConcurrentMarking"* %0 to i64
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 81, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %8, i64 0, i32 26
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %8, i64 0, i32 27
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 118
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = tail call i8* @_Znwm(i64 32) #14
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal17ConcurrentMarking7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %4, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to i32*
  store i32 %10, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 20
  %22 = bitcast i8* %21 to i32*
  store i32 %12, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %15, i64 24
  store i8 %14, i8* %23, align 8
  %24 = bitcast i8* %15 to %"class.v8::JobTask"*
  %25 = bitcast %"class.v8::Platform"* %3 to %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)***
  %26 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)**, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %26, i64 12
  %28 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %27, align 8
  %29 = tail call %"class.v8::JobHandle"* %28(%"class.v8::Platform"* %3, i8 zeroext %1, %"class.v8::JobTask"* nonnull %24) #13
  %30 = ptrtoint %"class.v8::JobHandle"* %29 to i64
  %31 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %31, align 8
  %33 = bitcast %"class.v8::internal::ConcurrentMarking"* %0 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.v8::JobHandle"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %2
  %36 = bitcast %"class.v8::JobHandle"* %32 to void (%"class.v8::JobHandle"*)***
  %37 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %37, i64 1
  %39 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %38, align 8
  tail call void %39(%"class.v8::JobHandle"* nonnull %32) #13
  br label %40

40:                                               ; preds = %2, %35
  ret void
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking21RescheduleJobIfNeededENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"*, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %4, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %87, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 2
  %10 = load %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::MarkingWorklists"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %10, i64 0, i32 0, i32 1
  %12 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %11 to i64*
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 3
  %17 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %17, i64 0, i32 2, i32 1, i32 1
  %19 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %17, i64 0, i32 4, i32 1, i32 1
  %24 = bitcast %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"** %23 to i64*
  %25 = load atomic i64, i64* %24 monotonic, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %87, label %27

27:                                               ; preds = %22, %15, %8
  %28 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %28, align 8
  %30 = icmp eq %"class.v8::JobHandle"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.v8::JobHandle"* %29 to i1 (%"class.v8::JobHandle"*)***
  %33 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %33, i64 7
  %35 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.v8::JobHandle"* nonnull %29) #13
  br i1 %36, label %73, label %37

37:                                               ; preds = %27, %31
  %38 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %39 = ptrtoint %"class.v8::internal::ConcurrentMarking"* %0 to i64
  %40 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %40, i64 0, i32 81, i32 0, i32 0, i32 0
  %42 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %42, i64 0, i32 26
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %42, i64 0, i32 27
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %40, i64 0, i32 118
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = tail call i8* @_Znwm(i64 32) #14
  %50 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal17ConcurrentMarking7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %39, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 16
  %54 = bitcast i8* %53 to i32*
  store i32 %44, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %49, i64 20
  %56 = bitcast i8* %55 to i32*
  store i32 %46, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %49, i64 24
  store i8 %48, i8* %57, align 8
  %58 = bitcast i8* %49 to %"class.v8::JobTask"*
  %59 = bitcast %"class.v8::Platform"* %38 to %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)***
  %60 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)**, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %60, i64 12
  %62 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %61, align 8
  %63 = tail call %"class.v8::JobHandle"* %62(%"class.v8::Platform"* %38, i8 zeroext %1, %"class.v8::JobTask"* nonnull %58) #13
  %64 = ptrtoint %"class.v8::JobHandle"* %63 to i64
  %65 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %28, align 8
  %66 = bitcast %"class.v8::internal::ConcurrentMarking"* %0 to i64*
  store i64 %64, i64* %66, align 8
  %67 = icmp eq %"class.v8::JobHandle"* %65, null
  br i1 %67, label %87, label %68

68:                                               ; preds = %37
  %69 = bitcast %"class.v8::JobHandle"* %65 to void (%"class.v8::JobHandle"*)***
  %70 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %70, i64 1
  %72 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %71, align 8
  tail call void %72(%"class.v8::JobHandle"* nonnull %65) #13
  br label %87

73:                                               ; preds = %31
  %74 = icmp eq i8 %1, 1
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %28, align 8
  %77 = bitcast %"class.v8::JobHandle"* %76 to void (%"class.v8::JobHandle"*, i8)***
  %78 = load void (%"class.v8::JobHandle"*, i8)**, void (%"class.v8::JobHandle"*, i8)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.v8::JobHandle"*, i8)*, void (%"class.v8::JobHandle"*, i8)** %78, i64 9
  %80 = load void (%"class.v8::JobHandle"*, i8)*, void (%"class.v8::JobHandle"*, i8)** %79, align 8
  tail call void %80(%"class.v8::JobHandle"* %76, i8 zeroext %1) #13
  br label %81

81:                                               ; preds = %73, %75
  %82 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %28, align 8
  %83 = bitcast %"class.v8::JobHandle"* %82 to void (%"class.v8::JobHandle"*)***
  %84 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %84, i64 2
  %86 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %85, align 8
  tail call void %86(%"class.v8::JobHandle"* %82) #13
  br label %87

87:                                               ; preds = %68, %37, %22, %2, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking4JoinEv(%"class.v8::internal::ConcurrentMarking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #13
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 3
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #13
  br label %17

17:                                               ; preds = %1, %5, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17ConcurrentMarking5PauseEv(%"class.v8::internal::ConcurrentMarking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #13
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 4
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #13
  br label %17

17:                                               ; preds = %1, %5, %11
  %18 = phi i1 [ true, %11 ], [ false, %5 ], [ false, %1 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17ConcurrentMarking9IsStoppedEv(%"class.v8::internal::ConcurrentMarking"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %5, align 8
  %7 = icmp eq %"class.v8::JobHandle"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::JobHandle"* %6 to i1 (%"class.v8::JobHandle"*)***
  %10 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %10, i64 7
  %12 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::JobHandle"* nonnull %6) #13
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %4, %8, %1
  %16 = phi i1 [ true, %1 ], [ true, %4 ], [ %14, %8 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking19FlushNativeContextsEPNS0_18NativeContextStatsE(%"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::NativeContextStats"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %3) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %4) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %4) #13
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %5) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %6) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %6) #13
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %7) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %7) #13
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %8) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7, i32 4
  tail call void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"* %1, %"class.v8::internal::NativeContextStats"* dereferenceable(40) %9) #13
  tail call void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* %9) #13
  ret void
}

declare void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"*, %"class.v8::internal::NativeContextStats"* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking20FlushMemoryChunkDataEPNS0_26MajorNonAtomicMarkingStateE(%"class.v8::internal::ConcurrentMarking"* nocapture, %"class.v8::internal::MajorNonAtomicMarkingState"* nocapture readnone) local_unnamed_addr #2 align 2 {
  br label %5

3:                                                ; preds = %74
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %4 seq_cst, align 8
  ret void

5:                                                ; preds = %74, %2
  %6 = phi i64 [ 1, %2 ], [ %76, %74 ]
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %6, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base.618"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %78

11:                                               ; preds = %108, %5
  %12 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %6, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %74, label %15

15:                                               ; preds = %11
  %16 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %7, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.618"* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %15, %31
  %19 = phi %"struct.std::__1::__hash_node_base.618"* [ %21, %31 ], [ %16, %15 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %19, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base.618"* %22 to %"class.v8::internal::TypedSlots"**
  %24 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %23, align 8
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %23, align 8
  %25 = icmp eq %"class.v8::internal::TypedSlots"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.v8::internal::TypedSlots"* %24 to void (%"class.v8::internal::TypedSlots"*)***
  %28 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %28, i64 1
  %30 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %29, align 8
  tail call void %30(%"class.v8::internal::TypedSlots"* nonnull %24) #13
  br label %31

31:                                               ; preds = %26, %18
  %32 = bitcast %"struct.std::__1::__hash_node_base.618"* %19 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  %33 = icmp eq %"struct.std::__1::__hash_node_base.618"* %21, null
  br i1 %33, label %34, label %18

34:                                               ; preds = %31, %15
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %7, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %6, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %6, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = add i64 %36, -1
  %41 = and i64 %36, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = sub i64 %36, %41
  br label %57

45:                                               ; preds = %57, %38
  %46 = phi i64 [ 0, %38 ], [ %71, %57 ]
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %45, %48
  %49 = phi i64 [ %53, %48 ], [ %46, %45 ]
  %50 = phi i64 [ %54, %48 ], [ %41, %45 ]
  %51 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %39, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %51, i64 %49
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %52, align 8
  %53 = add nuw i64 %49, 1
  %54 = add i64 %50, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48, !llvm.loop !32

56:                                               ; preds = %45, %48, %34
  store i64 0, i64* %12, align 8
  br label %74

57:                                               ; preds = %57, %43
  %58 = phi i64 [ 0, %43 ], [ %71, %57 ]
  %59 = phi i64 [ %44, %43 ], [ %72, %57 ]
  %60 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %39, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %61, align 8
  %62 = or i64 %58, 1
  %63 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %39, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %63, i64 %62
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %64, align 8
  %65 = or i64 %58, 2
  %66 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %39, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %66, i64 %65
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %67, align 8
  %68 = or i64 %58, 3
  %69 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %39, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %69, i64 %68
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %70, align 8
  %71 = add nuw i64 %58, 4
  %72 = add i64 %59, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %45, label %57

74:                                               ; preds = %11, %56
  %75 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %6, i32 0
  store i64 0, i64* %75, align 8
  %76 = add nuw nsw i64 %6, 1
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %3, label %5

78:                                               ; preds = %5, %108
  %79 = phi i64 [ %110, %108 ], [ %9, %5 ]
  %80 = inttoptr i64 %79 to %"struct.std::__1::__hash_node"*
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 1, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %82, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i64* %87, i64 %84 monotonic
  br label %89

89:                                               ; preds = %78, %86
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %90, align 8
  %92 = icmp eq %"class.v8::internal::TypedSlots"* %91, null
  br i1 %92, label %108, label %93

93:                                               ; preds = %89
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %90, align 8
  %94 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %82, i64 0, i32 5, i64 1
  %95 = bitcast %"class.v8::internal::TypedSlotSet"** %94 to i64*
  %96 = load atomic i64, i64* %95 acquire, align 8
  %97 = inttoptr i64 %96 to %"class.v8::internal::TypedSlotSet"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = tail call %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"* %82) #13
  br label %101

101:                                              ; preds = %93, %99
  %102 = phi %"class.v8::internal::TypedSlotSet"* [ %100, %99 ], [ %97, %93 ]
  %103 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %102, i64 0, i32 0
  tail call void @_ZN2v88internal10TypedSlots5MergeEPS1_(%"class.v8::internal::TypedSlots"* %103, %"class.v8::internal::TypedSlots"* nonnull %91) #13
  %104 = bitcast %"class.v8::internal::TypedSlots"* %91 to void (%"class.v8::internal::TypedSlots"*)***
  %105 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %105, i64 1
  %107 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %106, align 8
  tail call void %107(%"class.v8::internal::TypedSlots"* nonnull %91) #13
  br label %108

108:                                              ; preds = %89, %101
  %109 = inttoptr i64 %79 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %11, label %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking20ClearMemoryChunkDataEPNS0_11MemoryChunkE(%"class.v8::internal::ConcurrentMarking"* nocapture readonly, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2 align 2 {
  %3 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %4 = lshr i64 %3, 18
  br label %6

5:                                                ; preds = %87
  ret void

6:                                                ; preds = %87, %2
  %7 = phi i64 [ 1, %2 ], [ %88, %87 ]
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %7, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %87, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !33
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 70368744177663
  %16 = and i64 %15, %4
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %4, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %4, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %4, %17 ]
  %23 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 %7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.618"* %26, null
  br i1 %27, label %87, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.618"* %30, null
  br i1 %31, label %87, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br i1 %13, label %34, label %56

34:                                               ; preds = %32, %52
  %35 = phi %"struct.std::__1::__hash_node_base.618"* [ %54, %52 ], [ %30, %32 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.618"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %4
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = icmp ult i64 %38, %9
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %52, label %87

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %35, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.618"* %48 to %"class.v8::internal::MemoryChunk"**
  %50 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %49, align 8
  %51 = icmp eq %"class.v8::internal::MemoryChunk"* %50, %1
  br i1 %51, label %74, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %35, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.618"* %54, null
  br i1 %55, label %87, label %34

56:                                               ; preds = %32, %70
  %57 = phi %"struct.std::__1::__hash_node_base.618"* [ %72, %70 ], [ %30, %32 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.618"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %4
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = and i64 %60, %33
  %64 = icmp eq i64 %63, %22
  br i1 %64, label %70, label %87

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %57, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.618"* %66 to %"class.v8::internal::MemoryChunk"**
  %68 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %67, align 8
  %69 = icmp eq %"class.v8::internal::MemoryChunk"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %57, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.618"* %72, null
  br i1 %73, label %87, label %56

74:                                               ; preds = %65, %47
  %75 = phi %"struct.std::__1::__hash_node_base.618"* [ %35, %47 ], [ %57, %65 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %75, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.618"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %75, i64 4
  %79 = bitcast %"struct.std::__1::__hash_node_base.618"* %78 to %"class.v8::internal::TypedSlots"**
  %80 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %79, align 8
  store %"class.v8::internal::TypedSlots"* null, %"class.v8::internal::TypedSlots"** %79, align 8
  %81 = icmp eq %"class.v8::internal::TypedSlots"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.v8::internal::TypedSlots"* %80 to void (%"class.v8::internal::TypedSlots"*)***
  %84 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %84, i64 1
  %86 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %85, align 8
  tail call void %86(%"class.v8::internal::TypedSlots"* nonnull %80) #13
  br label %87

87:                                               ; preds = %70, %62, %52, %44, %28, %6, %21, %82, %74
  %88 = add nuw nsw i64 %7, 1
  %89 = icmp eq i64 %88, 8
  br i1 %89, label %5, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 1, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 2, i32 0
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = add i64 %5, %3
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 3, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = add i64 %8, %6
  %10 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 4, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = add i64 %11, %9
  %13 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 5, i32 0
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = add i64 %14, %12
  %16 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 6, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = add i64 %17, %15
  %19 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 4, i64 7, i32 0
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = add i64 %20, %18
  %22 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 seq_cst, align 8
  %24 = add i64 %23, %21
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking10PauseScopeC2EPS1_(%"class.v8::internal::ConcurrentMarking::PauseScope"* nocapture, %"class.v8::internal::ConcurrentMarking"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::PauseScope", %"class.v8::internal::ConcurrentMarking::PauseScope"* %0, i64 0, i32 0
  store %"class.v8::internal::ConcurrentMarking"* %1, %"class.v8::internal::ConcurrentMarking"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::PauseScope", %"class.v8::internal::ConcurrentMarking::PauseScope"* %0, i64 0, i32 1
  %5 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %8, align 8
  %10 = icmp eq %"class.v8::JobHandle"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.v8::JobHandle"* %9 to i1 (%"class.v8::JobHandle"*)***
  %13 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %13, i64 7
  %15 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.v8::JobHandle"* nonnull %9) #13
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %8, align 8
  %19 = bitcast %"class.v8::JobHandle"* %18 to void (%"class.v8::JobHandle"*)***
  %20 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %20, i64 4
  %22 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %21, align 8
  tail call void %22(%"class.v8::JobHandle"* %18) #13
  br label %23

23:                                               ; preds = %17, %11, %7, %2
  %24 = phi i8 [ 0, %2 ], [ 1, %17 ], [ 0, %11 ], [ 0, %7 ]
  store i8 %24, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ConcurrentMarking10PauseScopeD2Ev(%"class.v8::internal::ConcurrentMarking::PauseScope"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::PauseScope", %"class.v8::internal::ConcurrentMarking::PauseScope"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::PauseScope", %"class.v8::internal::ConcurrentMarking::PauseScope"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %6, align 8
  tail call void @_ZN2v88internal17ConcurrentMarking21RescheduleJobIfNeededENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"* %7, i8 zeroext 1)
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ConcurrentMarkingVisitorD0Ev(%"class.v8::internal::ConcurrentMarkingVisitor"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64) unnamed_addr #7 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %19

6:                                                ; preds = %4, %16
  %7 = phi i64 [ %17, %16 ], [ %2, %4 ]
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = and i64 %7, -4294967296
  %15 = or i64 %14, %10
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %15) #13
  br label %16

16:                                               ; preds = %13, %6
  %17 = add i64 %7, 4
  %18 = icmp ult i64 %17, %3
  br i1 %18, label %6, label %19

19:                                               ; preds = %16, %4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES6_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64) unnamed_addr #7 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %25

6:                                                ; preds = %4, %22
  %7 = phi i64 [ %23, %22 ], [ %2, %4 ]
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %7, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = and i64 %11, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %6
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %12) #13
  br label %22

16:                                               ; preds = %6
  %17 = icmp eq i64 %13, 3
  %18 = icmp ne i32 %9, 3
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = and i64 %12, -3
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %21) #13
  br label %22

22:                                               ; preds = %20, %16, %15
  %23 = add i64 %7, 4
  %24 = icmp ult i64 %23, %3
  br i1 %24, label %6, label %25

25:                                               ; preds = %22, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES6_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::MarkingVisitorBase"*, i64, i64) unnamed_addr #7 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = icmp ult i64 %2, -4
  br i1 %5, label %6, label %19

6:                                                ; preds = %3, %16
  %7 = phi i64 [ %17, %16 ], [ %2, %3 ]
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = and i64 %7, -4294967296
  %15 = or i64 %14, %10
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %15) #13
  br label %16

16:                                               ; preds = %13, %6
  %17 = add i64 %7, 4
  %18 = icmp ult i64 %17, %4
  br i1 %18, label %6, label %19

19:                                               ; preds = %16, %3
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE(%"class.v8::internal::MarkingVisitorBase"*, i64, i64) unnamed_addr #7 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = icmp ult i64 %2, -4
  br i1 %5, label %6, label %25

6:                                                ; preds = %3, %22
  %7 = phi i64 [ %23, %22 ], [ %2, %3 ]
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %7, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = and i64 %11, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %6
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %12) #13
  br label %22

16:                                               ; preds = %6
  %17 = icmp eq i64 %13, 3
  %18 = icmp ne i32 %9, 3
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = and i64 %12, -3
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %1, i64 %7, i64 %21) #13
  br label %22

22:                                               ; preds = %20, %16, %15
  %23 = add i64 %7, 4
  %24 = icmp ult i64 %23, %4
  br i1 %24, label %6, label %25

25:                                               ; preds = %22, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #2 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 4
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64) unnamed_addr #2 comdat align 2 {
  %6 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %7 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %7, i64 5
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %3) #13
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %10, i64 5
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %4) #13
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 1
  %8 = sext i32 %7 to i64
  %9 = add i64 %5, 4
  %10 = add i64 %9, %8
  %11 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #13
  %12 = ptrtoint i8* %11 to i64
  %13 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #13
  %14 = icmp uge i64 %10, %12
  %15 = zext i32 %13 to i64
  %16 = add i64 %15, %12
  %17 = icmp ugt i64 %16, %10
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

20:                                               ; preds = %3
  %21 = add i64 %10, -63
  %22 = and i64 %21, -262144
  %23 = or i64 %22, 272
  %24 = sub i64 %21, %22
  %25 = trunc i64 %24 to i32
  %26 = lshr i32 %25, 2
  %27 = and i32 %26, 31
  %28 = shl i32 1, %27
  %29 = inttoptr i64 %23 to i32*
  %30 = lshr i64 %24, 7
  %31 = and i64 %30, 33554431
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load atomic i32, i32* %32 monotonic, align 4
  br label %34

34:                                               ; preds = %38, %20
  %35 = phi i32 [ %33, %20 ], [ %41, %38 ]
  %36 = and i32 %35, %28
  %37 = icmp eq i32 %36, %28
  br i1 %37, label %86, label %38

38:                                               ; preds = %34
  %39 = or i32 %35, %28
  %40 = cmpxchg volatile i32* %32, i32 %35, i32 %39 release monotonic
  %41 = extractvalue { i32, i1 } %40, 0
  %42 = extractvalue { i32, i1 } %40, 1
  br i1 %42, label %43, label %34

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %45 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %45, i64 0, i32 2, i32 1
  %47 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %46, align 8
  %48 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %47, i64 0, i32 1
  %49 = load i16, i16* %48, align 2
  %50 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %47, i64 0, i32 0
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %49, %51
  %53 = bitcast %"class.heap::base::internal::SegmentBase"* %47 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %52, label %54, label %79, !prof !3

54:                                               ; preds = %43
  %55 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %56 = icmp eq %"class.heap::base::internal::SegmentBase"* %47, %55
  br i1 %56, label %71, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %45, i64 0, i32 2, i32 0
  %59 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %58, align 8
  %60 = bitcast %"class.heap::base::internal::SegmentBase"** %46 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %61 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %60, align 8
  %62 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %59, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %62) #13
  %63 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %59, i64 0, i32 1
  %64 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %61, i64 0, i32 1
  %67 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %61 to i64
  store atomic i64 %68, i64* %64 monotonic, align 8
  %69 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i64* %69, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %62) #13
  br label %71

71:                                               ; preds = %57, %54
  %72 = tail call i8* @_Znwm(i64 528) #14
  %73 = bitcast i8* %72 to i16*
  store i16 64, i16* %73, align 2
  %74 = getelementptr inbounds i8, i8* %72, i64 2
  %75 = bitcast i8* %74 to i16*
  store i16 0, i16* %75, align 2
  %76 = getelementptr inbounds i8, i8* %72, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 520, i1 false) #13
  %77 = bitcast %"class.heap::base::internal::SegmentBase"** %46 to i8**
  store i8* %72, i8** %77, align 8
  %78 = bitcast i8* %72 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %79

79:                                               ; preds = %71, %43
  %80 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %78, %71 ], [ %53, %43 ]
  %81 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %80, i64 0, i32 0, i32 1
  %82 = load i16, i16* %81, align 2
  %83 = add i16 %82, 1
  store i16 %83, i16* %81, align 2
  %84 = zext i16 %82 to i64
  %85 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %80, i64 0, i32 2, i64 %84, i32 0, i32 0, i32 0
  store i64 %21, i64* %85, align 8
  br label %86

86:                                               ; preds = %34, %79
  %87 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %87, i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %21)
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::MarkingVisitorBase"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 3
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13, !prof !3

12:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %7
  %14 = bitcast %"class.v8::internal::RelocInfo"* %2 to i32**
  %15 = load i32*, i32** %14, align 8
  %16 = load i32, i32* %15, align 1
  %17 = and i64 %9, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  br label %24

20:                                               ; preds = %3
  %21 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %22, align 1
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i64 [ %19, %13 ], [ %23, %20 ]
  %26 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  %27 = and i64 %25, -262144
  %28 = or i64 %27, 272
  %29 = sub i64 %25, %27
  %30 = trunc i64 %29 to i32
  %31 = lshr i32 %30, 2
  %32 = and i32 %31, 31
  %33 = shl i32 1, %32
  %34 = inttoptr i64 %28 to i32*
  %35 = lshr i64 %29, 7
  %36 = and i64 %35, 33554431
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = and i32 %33, %38
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %166

41:                                               ; preds = %24
  %42 = add i64 %1, 27
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 14
  %46 = icmp eq i32 %45, 12
  br i1 %46, label %47, label %112

47:                                               ; preds = %41
  %48 = and i64 %1, -4294967296
  %49 = add i64 %1, 15
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 acquire, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %112, label %59

59:                                               ; preds = %47
  %60 = and i64 %25, -4294967296
  %61 = add i64 %25, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 acquire, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  switch i16 %68, label %74 [
    i16 172, label %69
    i16 177, label %79
  ]

69:                                               ; preds = %59
  %70 = add i64 %25, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp ugt i16 %72, 188
  br i1 %73, label %79, label %112

74:                                               ; preds = %59
  %75 = icmp ugt i16 %68, 185
  %76 = add nsw i16 %68, -137
  %77 = icmp ult i16 %76, 10
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %112

79:                                               ; preds = %59, %74, %69
  %80 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 2
  %81 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %81, i64 0, i32 6, i32 0, i64 %84, i32 0
  %86 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %86, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 64
  br i1 %89, label %94, label %90

90:                                               ; preds = %79
  %91 = add i64 %88, 1
  store i64 %91, i64* %87, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %86, i64 0, i32 2, i64 %88, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %86, i64 0, i32 2, i64 %88, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %93, align 8
  br label %166

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %81, i64 0, i32 6, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %95) #13
  %96 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %81, i64 0, i32 6, i32 1, i32 1
  %97 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %86 to i64*
  store i64 %98, i64* %99, align 8
  %100 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"* %86 to i64
  store atomic volatile i64 %100, i64* %97 monotonic, align 8
  %101 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %81, i64 0, i32 6, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i64* %101, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %95) #13
  %103 = tail call i8* @_Znwm(i64 1040) #14
  %104 = getelementptr inbounds i8, i8* %103, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 1008, i1 false) #13
  %105 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"** %85 to i8**
  store i8* %103, i8** %105, align 8
  %106 = getelementptr inbounds i8, i8* %103, i64 8
  %107 = bitcast i8* %106 to i64*
  store i64 1, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %103, i64 16
  %109 = bitcast i8* %108 to i64*
  store i64 %25, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %103, i64 24
  %111 = bitcast i8* %110 to i64*
  store i64 %1, i64* %111, align 8
  br label %166

112:                                              ; preds = %74, %41, %47, %69
  %113 = load atomic i32, i32* %37 monotonic, align 4
  br label %114

114:                                              ; preds = %118, %112
  %115 = phi i32 [ %113, %112 ], [ %121, %118 ]
  %116 = and i32 %115, %33
  %117 = icmp eq i32 %116, %33
  br i1 %117, label %166, label %118

118:                                              ; preds = %114
  %119 = or i32 %115, %33
  %120 = cmpxchg volatile i32* %37, i32 %115, i32 %119 release monotonic
  %121 = extractvalue { i32, i1 } %120, 0
  %122 = extractvalue { i32, i1 } %120, 1
  br i1 %122, label %123, label %114

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %125 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %125, i64 0, i32 2, i32 1
  %127 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %126, align 8
  %128 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %127, i64 0, i32 1
  %129 = load i16, i16* %128, align 2
  %130 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %127, i64 0, i32 0
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %129, %131
  %133 = bitcast %"class.heap::base::internal::SegmentBase"* %127 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %132, label %134, label %159, !prof !3

134:                                              ; preds = %123
  %135 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %136 = icmp eq %"class.heap::base::internal::SegmentBase"* %127, %135
  br i1 %136, label %151, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %125, i64 0, i32 2, i32 0
  %139 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %138, align 8
  %140 = bitcast %"class.heap::base::internal::SegmentBase"** %126 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %141 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %140, align 8
  %142 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %139, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %142) #13
  %143 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %139, i64 0, i32 1
  %144 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %141, i64 0, i32 1
  %147 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %141 to i64
  store atomic i64 %148, i64* %144 monotonic, align 8
  %149 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i64* %149, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %142) #13
  br label %151

151:                                              ; preds = %137, %134
  %152 = tail call i8* @_Znwm(i64 528) #14
  %153 = bitcast i8* %152 to i16*
  store i16 64, i16* %153, align 2
  %154 = getelementptr inbounds i8, i8* %152, i64 2
  %155 = bitcast i8* %154 to i16*
  store i16 0, i16* %155, align 2
  %156 = getelementptr inbounds i8, i8* %152, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 520, i1 false) #13
  %157 = bitcast %"class.heap::base::internal::SegmentBase"** %126 to i8**
  store i8* %152, i8** %157, align 8
  %158 = bitcast i8* %152 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %159

159:                                              ; preds = %151, %123
  %160 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %158, %151 ], [ %133, %123 ]
  %161 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %160, i64 0, i32 0, i32 1
  %162 = load i16, i16* %161, align 2
  %163 = add i16 %162, 1
  store i16 %163, i16* %161, align 2
  %164 = zext i16 %162 to i64
  %165 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %160, i64 0, i32 2, i64 %164, i32 0, i32 0, i32 0
  store i64 %25, i64* %165, align 8
  br label %166

166:                                              ; preds = %114, %24, %159, %94, %90
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %26, i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %25)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm(%"class.v8::internal::ObjectVisitor"*, i64, i64*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"*, i64) unnamed_addr #2 comdat align 2 {
  %3 = and i64 %1, -4294967296
  %4 = add i64 %1, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = and i64 %8, -262144
  %10 = or i64 %9, 272
  %11 = sub i64 %8, %9
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 2
  %14 = and i32 %13, 31
  %15 = shl i32 1, %14
  %16 = inttoptr i64 %10 to i32*
  %17 = lshr i64 %11, 7
  %18 = and i64 %17, 33554431
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load atomic i32, i32* %19 monotonic, align 4
  br label %21

21:                                               ; preds = %25, %2
  %22 = phi i32 [ %20, %2 ], [ %28, %25 ]
  %23 = and i32 %22, %15
  %24 = icmp eq i32 %23, %15
  br i1 %24, label %73, label %25

25:                                               ; preds = %21
  %26 = or i32 %22, %15
  %27 = cmpxchg volatile i32* %19, i32 %22, i32 %26 release monotonic
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  br i1 %29, label %30, label %21

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %32 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %32, i64 0, i32 2, i32 1
  %34 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %34, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %36, %38
  %40 = bitcast %"class.heap::base::internal::SegmentBase"* %34 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %39, label %41, label %66, !prof !3

41:                                               ; preds = %30
  %42 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %43 = icmp eq %"class.heap::base::internal::SegmentBase"* %34, %42
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %32, i64 0, i32 2, i32 0
  %46 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %45, align 8
  %47 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %48 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %47, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %46, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %49) #13
  %50 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %46, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %48, i64 0, i32 1
  %54 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %48 to i64
  store atomic i64 %55, i64* %51 monotonic, align 8
  %56 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i64* %56, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %49) #13
  br label %58

58:                                               ; preds = %44, %41
  %59 = tail call i8* @_Znwm(i64 528) #14
  %60 = bitcast i8* %59 to i16*
  store i16 64, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %59, i64 2
  %62 = bitcast i8* %61 to i16*
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %59, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 520, i1 false) #13
  %64 = bitcast %"class.heap::base::internal::SegmentBase"** %33 to i8**
  store i8* %59, i8** %64, align 8
  %65 = bitcast i8* %59 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %66

66:                                               ; preds = %58, %30
  %67 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %65, %58 ], [ %40, %30 ]
  %68 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %67, i64 0, i32 0, i32 1
  %69 = load i16, i16* %68, align 2
  %70 = add i16 %69, 1
  store i16 %70, i16* %68, align 2
  %71 = zext i16 %69 to i64
  %72 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %67, i64 0, i32 2, i64 %71, i32 0, i32 0, i32 0
  store i64 %8, i64* %72, align 8
  br label %73

73:                                               ; preds = %21, %66
  ret void
}

declare zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEED0Ev(%"class.v8::internal::MarkingVisitorBase"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitorD2Ev(%"class.v8::internal::ObjectVisitor"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = and i64 %3, -262144
  %6 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = inttoptr i64 %5 to %"class.v8::internal::BasicMemoryChunk"*
  %11 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 8388608
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %81

15:                                               ; preds = %9, %4
  %16 = or i64 %5, 272
  %17 = sub i64 %3, %5
  %18 = trunc i64 %17 to i32
  %19 = lshr i32 %18, 2
  %20 = and i32 %19, 31
  %21 = shl i32 1, %20
  %22 = inttoptr i64 %16 to i32*
  %23 = lshr i64 %17, 7
  %24 = and i64 %23, 33554431
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  %26 = load atomic i32, i32* %25 monotonic, align 4
  br label %27

27:                                               ; preds = %31, %15
  %28 = phi i32 [ %26, %15 ], [ %34, %31 ]
  %29 = and i32 %28, %21
  %30 = icmp eq i32 %29, %21
  br i1 %30, label %79, label %31

31:                                               ; preds = %27
  %32 = or i32 %28, %21
  %33 = cmpxchg volatile i32* %25, i32 %28, i32 %32 release monotonic
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = extractvalue { i32, i1 } %33, 1
  br i1 %35, label %36, label %27

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %38 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %38, i64 0, i32 2, i32 1
  %40 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %39, align 8
  %41 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %40, i64 0, i32 1
  %42 = load i16, i16* %41, align 2
  %43 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %40, i64 0, i32 0
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %42, %44
  %46 = bitcast %"class.heap::base::internal::SegmentBase"* %40 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %45, label %47, label %72, !prof !3

47:                                               ; preds = %36
  %48 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %49 = icmp eq %"class.heap::base::internal::SegmentBase"* %40, %48
  br i1 %49, label %64, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %38, i64 0, i32 2, i32 0
  %52 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %51, align 8
  %53 = bitcast %"class.heap::base::internal::SegmentBase"** %39 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %54 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %53, align 8
  %55 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %52, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %55) #13
  %56 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %52, i64 0, i32 1
  %57 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %54, i64 0, i32 1
  %60 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %54 to i64
  store atomic i64 %61, i64* %57 monotonic, align 8
  %62 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i64* %62, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %55) #13
  br label %64

64:                                               ; preds = %50, %47
  %65 = tail call i8* @_Znwm(i64 528) #14
  %66 = bitcast i8* %65 to i16*
  store i16 64, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %65, i64 2
  %68 = bitcast i8* %67 to i16*
  store i16 0, i16* %68, align 2
  %69 = getelementptr inbounds i8, i8* %65, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 520, i1 false) #13
  %70 = bitcast %"class.heap::base::internal::SegmentBase"** %39 to i8**
  store i8* %65, i8** %70, align 8
  %71 = bitcast i8* %65 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %72

72:                                               ; preds = %64, %36
  %73 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %71, %64 ], [ %46, %36 ]
  %74 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %73, i64 0, i32 0, i32 1
  %75 = load i16, i16* %74, align 2
  %76 = add i16 %75, 1
  store i16 %76, i16* %74, align 2
  %77 = zext i16 %75 to i64
  %78 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %73, i64 0, i32 2, i64 %77, i32 0, i32 0, i32 0
  store i64 %3, i64* %78, align 8
  br label %79

79:                                               ; preds = %27, %72
  %80 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* %80, i64 %1, i64 %2, i64 %3)
  br label %81

81:                                               ; preds = %9, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = and i64 %3, -262144
  %6 = inttoptr i64 %5 to %"class.v8::internal::BasicMemoryChunk"*
  %7 = and i64 %1, -262144
  %8 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  %9 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %6, i64 0, i32 1
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = and i64 %10, 64
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %74, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %8, i64 0, i32 0, i32 1
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = and i64 %15, 88
  %17 = icmp ne i64 %16, 0
  %18 = trunc i64 %15 to i16
  %19 = icmp sgt i16 %18, -1
  %20 = and i1 %19, %17
  br i1 %20, label %74, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %8, i64 0, i32 1, i64 1
  %23 = bitcast %"class.v8::internal::SlotSet"** %22 to i64*
  %24 = load atomic i64, i64* %23 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.v8::internal::SlotSet"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %8) #13
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi %"class.v8::internal::SlotSet"* [ %28, %27 ], [ %25, %21 ]
  %31 = sub i64 %2, %7
  %32 = lshr i64 %31, 2
  %33 = lshr i64 %31, 12
  %34 = lshr i64 %31, 7
  %35 = and i64 %34, 31
  %36 = trunc i64 %32 to i32
  %37 = and i32 %36, 31
  %38 = bitcast %"class.v8::internal::SlotSet"* %30 to %"class.v8::internal::SlotSet::Bucket"**
  %39 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %38, i64 %33
  %40 = bitcast %"class.v8::internal::SlotSet::Bucket"** %39 to i64*
  %41 = load atomic i64, i64* %40 acquire, align 8
  %42 = inttoptr i64 %41 to %"class.v8::internal::SlotSet::Bucket"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %29
  %45 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #13
  %46 = bitcast i8* %45 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 128, i1 false) #13
  %47 = ptrtoint i8* %45 to i64
  %48 = cmpxchg volatile i64* %40, i64 0, i64 %47 release monotonic
  %49 = extractvalue { i64, i1 } %48, 1
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = icmp eq i8* %45, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %45) #13
  br label %53

53:                                               ; preds = %52, %50
  %54 = load atomic i64, i64* %40 acquire, align 8
  %55 = inttoptr i64 %54 to %"class.v8::internal::SlotSet::Bucket"*
  br label %56

56:                                               ; preds = %53, %44, %29
  %57 = phi %"class.v8::internal::SlotSet::Bucket"* [ %46, %44 ], [ %55, %53 ], [ %42, %29 ]
  %58 = shl i32 1, %37
  %59 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %57, i64 0, i32 0, i64 %35
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = and i32 %60, %58
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %74

63:                                               ; preds = %56
  %64 = load atomic i32, i32* %59 monotonic, align 4
  br label %65

65:                                               ; preds = %69, %63
  %66 = phi i32 [ %64, %63 ], [ %72, %69 ]
  %67 = and i32 %66, %58
  %68 = icmp eq i32 %67, %58
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = or i32 %66, %58
  %71 = cmpxchg volatile i32* %59, i32 %66, i32 %70 release monotonic
  %72 = extractvalue { i32, i1 } %71, 0
  %73 = extractvalue { i32, i1 } %71, 1
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %69, %4, %13, %56
  ret void
}

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #3

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #3

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = and i64 %3, -262144
  %6 = or i64 %5, 272
  %7 = sub i64 %3, %5
  %8 = trunc i64 %7 to i32
  %9 = lshr i32 %8, 2
  %10 = and i32 %9, 31
  %11 = shl i32 1, %10
  %12 = inttoptr i64 %6 to i32*
  %13 = lshr i64 %7, 7
  %14 = and i64 %13, 33554431
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = and i32 %16, %11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* %20, i64 %1, i64 %2, i64 %3)
  br label %54

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %23, i64 0, i32 5, i32 0, i64 %26, i32 0
  %28 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 64
  br i1 %31, label %36, label %32

32:                                               ; preds = %21
  %33 = add i64 %30, 1
  store i64 %33, i64* %29, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %28, i64 0, i32 2, i64 %30, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %28, i64 0, i32 2, i64 %30, i32 1, i32 0, i32 0
  store i64 %2, i64* %35, align 8
  br label %54

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %23, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %37) #13
  %38 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %23, i64 0, i32 5, i32 1, i32 1
  %39 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %28 to i64*
  store i64 %40, i64* %41, align 8
  %42 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"* %28 to i64
  store atomic volatile i64 %42, i64* %39 monotonic, align 8
  %43 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %23, i64 0, i32 5, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i64* %43, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %37) #13
  %45 = tail call i8* @_Znwm(i64 1040) #14
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 1008, i1 false) #13
  %47 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"** %27 to i8**
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 1, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %45, i64 16
  %51 = bitcast i8* %50 to i64*
  store i64 %1, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 24
  %53 = bitcast i8* %52 to i64*
  store i64 %2, i64* %53, align 8
  br label %54

54:                                               ; preds = %36, %32, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ConcurrentMarkingVisitor15RecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1177", align 1
  %7 = alloca %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", align 8
  %8 = bitcast %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  call void @_ZN2v88internal20MarkCompactCollector22PrepareRecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* nonnull sret %7, i64 %1, %"class.v8::internal::RelocInfo"* %2, i64 %3) #13
  %9 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 2
  %14 = load %"class.std::__1::unordered_map.613"*, %"class.std::__1::unordered_map.613"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.613"* %14, i64 0, i32 0
  %17 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::MemoryChunk"** %15, %"class.v8::internal::MemoryChunk"*** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::tuple.1177", %"class.std::__1::tuple.1177"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #13
  %20 = call { %"struct.std::__1::__hash_node_base.618"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.614"* %16, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1177"* nonnull dereferenceable(1) %6) #13
  %21 = extractvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } %20, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %21, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base.618"* %22 to %"class.v8::internal::TypedSlots"**
  %24 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %23, align 8
  %25 = icmp eq %"class.v8::internal::TypedSlots"* %24, null
  br i1 %25, label %26, label %40

26:                                               ; preds = %12
  %27 = call i8* @_Znwm(i64 24) #14
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal10TypedSlotsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %23, align 8
  %31 = bitcast %"struct.std::__1::__hash_node_base.618"* %22 to i8**
  store i8* %27, i8** %31, align 8
  %32 = icmp eq %"class.v8::internal::TypedSlots"* %30, null
  %33 = bitcast i8* %27 to %"class.v8::internal::TypedSlots"*
  br i1 %32, label %40, label %34

34:                                               ; preds = %26
  %35 = bitcast %"class.v8::internal::TypedSlots"* %30 to void (%"class.v8::internal::TypedSlots"*)***
  %36 = load void (%"class.v8::internal::TypedSlots"*)**, void (%"class.v8::internal::TypedSlots"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %36, i64 1
  %38 = load void (%"class.v8::internal::TypedSlots"*)*, void (%"class.v8::internal::TypedSlots"*)** %37, align 8
  call void %38(%"class.v8::internal::TypedSlots"* nonnull %30) #13
  %39 = load %"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"** %23, align 8
  br label %40

40:                                               ; preds = %12, %34, %26
  %41 = phi %"class.v8::internal::TypedSlots"* [ %24, %12 ], [ %39, %34 ], [ %33, %26 ]
  %42 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo", %"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* %7, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  call void @_ZN2v88internal10TypedSlots6InsertENS0_8SlotTypeEj(%"class.v8::internal::TypedSlots"* %41, i32 %43, i32 %45) #13
  br label %46

46:                                               ; preds = %4, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  ret void
}

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #3

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #10

declare void @_ZN2v88internal20MarkCompactCollector22PrepareRecordRelocSlotENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"struct.v8::internal::MarkCompactCollector::RecordRelocSlotInfo"* sret, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal10TypedSlots6InsertENS0_8SlotTypeEj(%"class.v8::internal::TypedSlots"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.618"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.614"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1177"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = bitcast %"class.v8::internal::MemoryChunk"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 18
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  br i1 %11, label %72, label %13

13:                                               ; preds = %5
  %14 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !33
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %10, 70368744177663
  %18 = and i64 %17, %8
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %8, %10
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %8, %10
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %8, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.618"* %28, null
  br i1 %29, label %72, label %30

30:                                               ; preds = %23
  %31 = add i64 %10, -1
  br i1 %15, label %32, label %54

32:                                               ; preds = %30, %49
  %33 = phi %"struct.std::__1::__hash_node_base.618"* [ %35, %49 ], [ %28, %30 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.618"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.618"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %8
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = icmp ult i64 %40, %10
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %40, %10
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %45, %44 ], [ %40, %42 ]
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %72

49:                                               ; preds = %46, %37
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %35, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.618"* %50 to %"class.v8::internal::MemoryChunk"**
  %52 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %51, align 8
  %53 = icmp eq %"class.v8::internal::MemoryChunk"* %52, %12
  br i1 %53, label %162, label %32

54:                                               ; preds = %30, %67
  %55 = phi %"struct.std::__1::__hash_node_base.618"* [ %57, %67 ], [ %28, %30 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.618"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.618"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %8
  %64 = and i64 %62, %31
  %65 = icmp eq i64 %64, %24
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %57, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.618"* %68 to %"class.v8::internal::MemoryChunk"**
  %70 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %69, align 8
  %71 = icmp eq %"class.v8::internal::MemoryChunk"* %70, %12
  br i1 %71, label %162, label %54

72:                                               ; preds = %59, %54, %46, %32, %23, %5
  %73 = phi i64 [ %24, %23 ], [ undef, %5 ], [ %24, %32 ], [ %24, %46 ], [ %24, %54 ], [ %24, %59 ]
  %74 = tail call i8* @_Znwm(i64 40) #14, !noalias !34
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %77 = load i64*, i64** %76, align 8, !noalias !34
  %78 = load i64, i64* %77, align 8, !noalias !34
  %79 = bitcast i8* %75 to i64*
  store i64 %78, i64* %79, align 8, !noalias !34
  %80 = getelementptr inbounds i8, i8* %74, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #13, !noalias !34
  %81 = getelementptr inbounds i8, i8* %74, i64 8
  %82 = bitcast i8* %81 to i64*
  store i64 %8, i64* %82, align 8, !noalias !34
  %83 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.618"**
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %83, align 8, !noalias !34
  %84 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  %87 = uitofp i64 %86 to float
  %88 = uitofp i64 %10 to float
  %89 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 3, i32 0, i32 0
  %90 = load float, float* %89, align 4
  %91 = fmul float %90, %88
  %92 = fcmp olt float %91, %87
  %93 = or i1 %11, %92
  br i1 %93, label %94, label %117

94:                                               ; preds = %72
  %95 = shl i64 %10, 1
  %96 = icmp ult i64 %10, 3
  %97 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !33
  %98 = icmp ugt i64 %97, 1
  %99 = or i1 %96, %98
  %100 = zext i1 %99 to i64
  %101 = or i64 %95, %100
  %102 = fdiv float %87, %90
  %103 = tail call float @llvm.ceil.f32(float %102) #13
  %104 = fptoui float %103 to i64
  %105 = icmp ult i64 %101, %104
  %106 = select i1 %105, i64 %104, i64 %101
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.614"* %0, i64 %106)
  %107 = load i64, i64* %9, align 8
  %108 = tail call i64 @llvm.ctpop.i64(i64 %107) #13, !range !33
  %109 = icmp ugt i64 %108, 1
  br i1 %109, label %113, label %110

110:                                              ; preds = %94
  %111 = add i64 %107, 70368744177663
  %112 = and i64 %111, %8
  br label %117

113:                                              ; preds = %94
  %114 = icmp ult i64 %8, %107
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = urem i64 %8, %107
  br label %117

117:                                              ; preds = %115, %113, %110, %72
  %118 = phi i64 [ %10, %72 ], [ %107, %110 ], [ %107, %113 ], [ %107, %115 ]
  %119 = phi i64 [ %73, %72 ], [ %112, %110 ], [ %8, %113 ], [ %116, %115 ]
  %120 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %121, i64 %119
  %123 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.618"* %123, null
  br i1 %124, label %125, label %151

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 1, i32 0, i32 0
  %127 = bitcast %"struct.std::__1::__hash_node_base.618"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8* %74 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast %"struct.std::__1::__hash_node_base.618"* %126 to i8**
  store i8* %74, i8** %130, align 8
  store %"struct.std::__1::__hash_node_base.618"* %126, %"struct.std::__1::__hash_node_base.618"** %122, align 8
  %131 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %83, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.618"* %131, null
  br i1 %132, label %158, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %131, i64 1
  %135 = bitcast %"struct.std::__1::__hash_node_base.618"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = tail call i64 @llvm.ctpop.i64(i64 %118) #13, !range !33
  %138 = icmp ugt i64 %137, 1
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = add i64 %118, -1
  %141 = and i64 %136, %140
  br label %146

142:                                              ; preds = %133
  %143 = icmp ult i64 %136, %118
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %136, %118
  br label %146

146:                                              ; preds = %139, %142, %144
  %147 = phi i64 [ %141, %139 ], [ %145, %144 ], [ %136, %142 ]
  %148 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %120, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %148, i64 %147
  %150 = bitcast %"struct.std::__1::__hash_node_base.618"** %149 to i8**
  br label %156

151:                                              ; preds = %117
  %152 = bitcast %"struct.std::__1::__hash_node_base.618"* %123 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast i8* %74 to i64*
  store i64 %153, i64* %154, align 8
  %155 = bitcast %"struct.std::__1::__hash_node_base.618"* %123 to i8**
  br label %156

156:                                              ; preds = %146, %151
  %157 = phi i8** [ %155, %151 ], [ %150, %146 ]
  store i8* %74, i8** %157, align 8
  br label %158

158:                                              ; preds = %156, %125
  %159 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.618"*
  %160 = load i64, i64* %84, align 8
  %161 = add i64 %160, 1
  store i64 %161, i64* %84, align 8
  br label %162

162:                                              ; preds = %67, %49, %158
  %163 = phi i8 [ 1, %158 ], [ 0, %49 ], [ 0, %67 ]
  %164 = phi %"struct.std::__1::__hash_node_base.618"* [ %159, %158 ], [ %35, %49 ], [ %57, %67 ]
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } undef, %"struct.std::__1::__hash_node_base.618"* %164, 0
  %166 = insertvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } %165, i8 %163, 1
  ret { %"struct.std::__1::__hash_node_base.618"*, i8 } %166
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.614"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !33
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.614"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !33
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !33
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.614"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.614"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.614"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.618"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.618"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.620", %"class.std::__1::__bucket_list_deallocator.620"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.618"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.618"* null, %"struct.std::__1::__hash_node_base.618"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.618"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !33
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.618"* %36, %"struct.std::__1::__hash_node_base.618"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.618"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.618"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.618"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.618"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.618"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.618"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.618"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.618"* %103 to %"class.v8::internal::MemoryChunk"**
  %105 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %130, align 8
  %106 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %104, align 8
  %107 = icmp eq %"class.v8::internal::MemoryChunk"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.618"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.618"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.618"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.618"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.618"* %80, %"struct.std::__1::__hash_node_base.618"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.618"* %82, %"struct.std::__1::__hash_node_base.618"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.618"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.618"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.618"* %129 to %"class.v8::internal::MemoryChunk"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.618"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.618"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.618"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.618"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.618"* %146 to %"class.v8::internal::MemoryChunk"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.618"* %134, %"struct.std::__1::__hash_node_base.618"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.618"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.618"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.618"* %155 to %"class.v8::internal::MemoryChunk"**
  %157 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %147, align 8
  %158 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %156, align 8
  %159 = icmp eq %"class.v8::internal::MemoryChunk"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.618"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.618"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.618"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.618"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.618"* %132, %"struct.std::__1::__hash_node_base.618"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.618"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.618"*, %"struct.std::__1::__hash_node_base.618"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.618"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.614", %"class.std::__1::__hash_table.614"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.618"**, %"struct.std::__1::__hash_node_base.618"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.618"** null, %"struct.std::__1::__hash_node_base.618"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.618"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.618"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.620", %"class.std::__1::__bucket_list_deallocator.620"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

declare zeroext i1 @_ZN2v88internal16MarkingWorklists5Local10PopContextEPNS0_10HeapObjectE(%"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::HeapObject"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal21NativeContextInferrer15InferForContextEPNS0_7IsolateENS0_7ContextEPm(%"class.v8::internal::NativeContextInferrer"*, %"class.v8::internal::Isolate"*, i64, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal21NativeContextInferrer18InferForJSFunctionEPNS0_7IsolateENS0_10JSFunctionEPm(%"class.v8::internal::NativeContextInferrer"*, %"class.v8::internal::Isolate"*, i64, i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal21NativeContextInferrer16InferForJSObjectEPNS0_7IsolateENS0_3MapENS0_8JSObjectEPm(%"class.v8::internal::NativeContextInferrer"*, %"class.v8::internal::Isolate"*, i64, i64, i64*) local_unnamed_addr #3

declare i64 @_ZN2v88internal16MarkingWorklists5Local19SwitchToContextSlowEm(%"class.v8::internal::MarkingWorklists::Local"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal18NativeContextStats21IncrementExternalSizeEmNS0_3MapENS0_10HeapObjectE(%"class.v8::internal::NativeContextStats"*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.258"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.254"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1192"* dereferenceable(8), %"class.std::__1::tuple.1177"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !33
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.258"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br i1 %12, label %29, label %51

29:                                               ; preds = %27, %46
  %30 = phi %"struct.std::__1::__hash_node_base.258"* [ %32, %46 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.258"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.258"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.258"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %6
  br i1 %50, label %160, label %29

51:                                               ; preds = %27, %64
  %52 = phi %"struct.std::__1::__hash_node_base.258"* [ %54, %64 ], [ %25, %27 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.258"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.258"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %6
  %61 = and i64 %59, %28
  %62 = icmp eq i64 %61, %21
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.258"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %6
  br i1 %68, label %160, label %51

69:                                               ; preds = %56, %51, %43, %29, %20, %5
  %70 = phi i64 [ %21, %20 ], [ undef, %5 ], [ %21, %29 ], [ %21, %43 ], [ %21, %51 ], [ %21, %56 ]
  %71 = tail call i8* @_Znwm(i64 32) #14, !noalias !38
  %72 = getelementptr inbounds %"class.std::__1::tuple.1192", %"class.std::__1::tuple.1192"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8, !noalias !38
  %74 = getelementptr inbounds i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %73, align 8, !noalias !38
  store i64 %76, i64* %75, align 8, !noalias !38
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !38
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !38
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.258"**
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %81, align 8, !noalias !38
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !33
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.254"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !33
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %6, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %8, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.258"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.258"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.258"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.258"* %124, %"struct.std::__1::__hash_node_base.258"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.258"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.258"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !33
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.258"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.258"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.258"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.258"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %46, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %46 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.258"* [ %157, %156 ], [ %32, %46 ], [ %54, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.258"*, i8 } undef, %"struct.std::__1::__hash_node_base.258"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.258"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.258"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.254"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !33
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.254"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !33
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !33
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.254"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.254"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.254"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.258"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.258"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.260", %"class.std::__1::__bucket_list_deallocator.260"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !41

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.258"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.258"* null, %"struct.std::__1::__hash_node_base.258"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.258"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !33
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.258"* %36, %"struct.std::__1::__hash_node_base.258"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.258"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.258"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.258"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.258"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.258"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.258"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.258"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.258"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.258"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.258"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.258"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.258"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.258"* %80, %"struct.std::__1::__hash_node_base.258"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.258"* %82, %"struct.std::__1::__hash_node_base.258"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.258"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.258"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.258"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.258"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.258"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.258"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.258"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.258"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.258"* %134, %"struct.std::__1::__hash_node_base.258"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.258"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.258"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.258"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.258"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.258"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.258"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.258"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.258"* %132, %"struct.std::__1::__hash_node_base.258"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.258"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.258", %"struct.std::__1::__hash_node_base.258"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.258"*, %"struct.std::__1::__hash_node_base.258"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.258"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.254", %"class.std::__1::__hash_table.254"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.258"**, %"struct.std::__1::__hash_node_base.258"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.258"** null, %"struct.std::__1::__hash_node_base.258"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.258"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.258"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.260", %"class.std::__1::__bucket_list_deallocator.260"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal24ConcurrentMarkingVisitor15VisitConsStringENS0_3MapENS0_10ConsStringE(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2) #13
  br i1 %4, label %5, label %63

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::SlotSnapshot", %"class.v8::internal::SlotSnapshot"* %6, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = add i64 %2, -1
  %9 = add i64 %2, 3
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = inttoptr i64 %8 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %8, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  store i32 1, i32* %7, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 0, i32 1, i32 0, i32 0
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %5
  %20 = phi i32 [ 1, %11 ], [ 0, %5 ]
  %21 = add i64 %2, 11
  %22 = add i64 %2, 19
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %62

24:                                               ; preds = %19
  %25 = inttoptr i64 %21 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add nuw nsw i32 %20, 1
  store i32 %30, i32* %7, align 8
  %31 = zext i32 %20 to i64
  %32 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %31, i32 0, i32 0, i32 0
  store i64 %21, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %31, i32 1, i32 0, i32 0
  store i64 %29, i64* %33, align 8
  %34 = add i64 %2, 15
  %35 = icmp ult i64 %34, %22
  br i1 %35, label %36, label %62

36:                                               ; preds = %24
  %37 = inttoptr i64 %34 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i64 %34, -4294967296
  %40 = zext i32 %38 to i64
  %41 = or i64 %39, %40
  %42 = or i32 %20, 2
  store i32 %42, i32* %7, align 8
  %43 = zext i32 %30 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %43, i32 0, i32 0, i32 0
  store i64 %34, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %43, i32 1, i32 0, i32 0
  store i64 %41, i64* %45, align 8
  %46 = add i64 %2, 19
  %47 = icmp ult i64 %46, %22
  br i1 %47, label %48, label %62

48:                                               ; preds = %36, %48
  %49 = phi i64 [ %60, %48 ], [ %46, %36 ]
  %50 = load i32, i32* %7, align 8
  %51 = inttoptr i64 %49 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add nsw i32 %50, 1
  store i32 %56, i32* %7, align 8
  %57 = sext i32 %50 to i64
  %58 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %57, i32 0, i32 0, i32 0
  store i64 %49, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %57, i32 1, i32 0, i32 0
  store i64 %55, i64* %59, align 8
  %60 = add i64 %49, 4
  %61 = icmp ult i64 %60, %22
  br i1 %61, label %48, label %62

62:                                               ; preds = %48, %36, %24, %19
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor23VisitPointersInSnapshotENS0_10HeapObjectERKNS0_12SlotSnapshotE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2, %"class.v8::internal::SlotSnapshot"* dereferenceable(4088) %6) #13
  br label %63

63:                                               ; preds = %3, %62
  %64 = phi i32 [ 20, %62 ], [ 0, %3 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal24ConcurrentMarkingVisitor17VisitSlicedStringENS0_3MapENS0_12SlicedStringE(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2) #13
  br i1 %4, label %5, label %63

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::SlotSnapshot", %"class.v8::internal::SlotSnapshot"* %6, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = add i64 %2, -1
  %9 = add i64 %2, 3
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = inttoptr i64 %8 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %8, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  store i32 1, i32* %7, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 0, i32 1, i32 0, i32 0
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %5
  %20 = phi i32 [ 1, %11 ], [ 0, %5 ]
  %21 = add i64 %2, 11
  %22 = add i64 %2, 19
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %62

24:                                               ; preds = %19
  %25 = inttoptr i64 %21 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add nuw nsw i32 %20, 1
  store i32 %30, i32* %7, align 8
  %31 = zext i32 %20 to i64
  %32 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %31, i32 0, i32 0, i32 0
  store i64 %21, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %31, i32 1, i32 0, i32 0
  store i64 %29, i64* %33, align 8
  %34 = add i64 %2, 15
  %35 = icmp ult i64 %34, %22
  br i1 %35, label %36, label %62

36:                                               ; preds = %24
  %37 = inttoptr i64 %34 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i64 %34, -4294967296
  %40 = zext i32 %38 to i64
  %41 = or i64 %39, %40
  %42 = or i32 %20, 2
  store i32 %42, i32* %7, align 8
  %43 = zext i32 %30 to i64
  %44 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %43, i32 0, i32 0, i32 0
  store i64 %34, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %43, i32 1, i32 0, i32 0
  store i64 %41, i64* %45, align 8
  %46 = add i64 %2, 19
  %47 = icmp ult i64 %46, %22
  br i1 %47, label %48, label %62

48:                                               ; preds = %36, %48
  %49 = phi i64 [ %60, %48 ], [ %46, %36 ]
  %50 = load i32, i32* %7, align 8
  %51 = inttoptr i64 %49 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add nsw i32 %50, 1
  store i32 %56, i32* %7, align 8
  %57 = sext i32 %50 to i64
  %58 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %57, i32 0, i32 0, i32 0
  store i64 %49, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 3, i32 1, i64 %57, i32 1, i32 0, i32 0
  store i64 %55, i64* %59, align 8
  %60 = add i64 %49, 4
  %61 = icmp ult i64 %60, %22
  br i1 %61, label %48, label %62

62:                                               ; preds = %48, %36, %24, %19
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor23VisitPointersInSnapshotENS0_10HeapObjectERKNS0_12SlotSnapshotE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2, %"class.v8::internal::SlotSnapshot"* dereferenceable(4088) %6) #13
  br label %63

63:                                               ; preds = %3, %62
  %64 = phi i32 [ 20, %62 ], [ 0, %3 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1177", align 1
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = and i64 %1, -262144
  %10 = or i64 %9, 272
  %11 = xor i64 %9, -1
  %12 = add i64 %11, %1
  %13 = trunc i64 %12 to i32
  %14 = lshr i32 %13, 2
  %15 = and i32 %14, 31
  %16 = shl i32 1, %15
  %17 = inttoptr i64 %10 to i32*
  %18 = lshr i64 %12, 7
  %19 = and i64 %18, 33554431
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = and i32 %21, %16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %64, label %24

24:                                               ; preds = %2
  %25 = shl i32 %16, 1
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds i32, i32* %20, i64 1
  %28 = select i1 %26, i32 1, i32 %25
  %29 = select i1 %26, i32* %27, i32* %20
  %30 = load atomic i32, i32* %29 monotonic, align 4
  br label %31

31:                                               ; preds = %35, %24
  %32 = phi i32 [ %30, %24 ], [ %38, %35 ]
  %33 = and i32 %32, %28
  %34 = icmp eq i32 %33, %28
  br i1 %34, label %64, label %35

35:                                               ; preds = %31
  %36 = or i32 %32, %28
  %37 = cmpxchg volatile i32* %29, i32 %32, i32 %36 release monotonic
  %38 = extractvalue { i32, i1 } %37, 0
  %39 = extractvalue { i32, i1 } %37, 1
  br i1 %39, label %40, label %31

40:                                               ; preds = %35
  %41 = inttoptr i64 %9 to %"class.v8::internal::MemoryChunk"*
  %42 = load i64, i64* %8, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %48) #13
  %50 = sext i32 %49 to i64
  %51 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store %"class.v8::internal::MemoryChunk"* %41, %"class.v8::internal::MemoryChunk"** %5, align 8
  %52 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 0
  %53 = load %"class.std::__1::unordered_map.613"*, %"class.std::__1::unordered_map.613"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.613"* %53, i64 0, i32 0
  %55 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::MemoryChunk"** %5, %"class.v8::internal::MemoryChunk"*** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::tuple.1177", %"class.std::__1::tuple.1177"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #13
  %58 = call { %"struct.std::__1::__hash_node_base.618"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.614"* %54, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1177"* nonnull dereferenceable(1) %4) #13
  %59 = extractvalue { %"struct.std::__1::__hash_node_base.618"*, i8 } %58, 0
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.618", %"struct.std::__1::__hash_node_base.618"* %59, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %61 = bitcast %"struct.std::__1::__hash_node_base.618"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add nsw i64 %62, %50
  store i64 %63, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %64

64:                                               ; preds = %31, %2, %40
  %65 = phi i1 [ true, %40 ], [ false, %2 ], [ false, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  ret i1 %65
}

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal13BytecodeArray9MakeOlderEv(%"class.v8::internal::BytecodeArray"*) local_unnamed_addr #3

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = and i64 %3, -262144
  %6 = inttoptr i64 %5 to %"class.v8::internal::BasicMemoryChunk"*
  %7 = and i64 %1, -262144
  %8 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  %9 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %6, i64 0, i32 1
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = and i64 %10, 64
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %74, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %8, i64 0, i32 0, i32 1
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = and i64 %15, 88
  %17 = icmp ne i64 %16, 0
  %18 = trunc i64 %15 to i16
  %19 = icmp sgt i16 %18, -1
  %20 = and i1 %19, %17
  br i1 %20, label %74, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %8, i64 0, i32 1, i64 1
  %23 = bitcast %"class.v8::internal::SlotSet"** %22 to i64*
  %24 = load atomic i64, i64* %23 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.v8::internal::SlotSet"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %8) #13
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi %"class.v8::internal::SlotSet"* [ %28, %27 ], [ %25, %21 ]
  %31 = sub i64 %2, %7
  %32 = lshr i64 %31, 2
  %33 = lshr i64 %31, 12
  %34 = lshr i64 %31, 7
  %35 = and i64 %34, 31
  %36 = trunc i64 %32 to i32
  %37 = and i32 %36, 31
  %38 = bitcast %"class.v8::internal::SlotSet"* %30 to %"class.v8::internal::SlotSet::Bucket"**
  %39 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %38, i64 %33
  %40 = bitcast %"class.v8::internal::SlotSet::Bucket"** %39 to i64*
  %41 = load atomic i64, i64* %40 acquire, align 8
  %42 = inttoptr i64 %41 to %"class.v8::internal::SlotSet::Bucket"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %29
  %45 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #13
  %46 = bitcast i8* %45 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 128, i1 false) #13
  %47 = ptrtoint i8* %45 to i64
  %48 = cmpxchg volatile i64* %40, i64 0, i64 %47 release monotonic
  %49 = extractvalue { i64, i1 } %48, 1
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = icmp eq i8* %45, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %45) #13
  br label %53

53:                                               ; preds = %52, %50
  %54 = load atomic i64, i64* %40 acquire, align 8
  %55 = inttoptr i64 %54 to %"class.v8::internal::SlotSet::Bucket"*
  br label %56

56:                                               ; preds = %53, %44, %29
  %57 = phi %"class.v8::internal::SlotSet::Bucket"* [ %46, %44 ], [ %55, %53 ], [ %42, %29 ]
  %58 = shl i32 1, %37
  %59 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %57, i64 0, i32 0, i64 %35
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = and i32 %60, %58
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %74

63:                                               ; preds = %56
  %64 = load atomic i32, i32* %59 monotonic, align 4
  br label %65

65:                                               ; preds = %69, %63
  %66 = phi i32 [ %64, %63 ], [ %72, %69 ]
  %67 = and i32 %66, %58
  %68 = icmp eq i32 %67, %58
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = or i32 %66, %58
  %71 = cmpxchg volatile i32* %59, i32 %66, i32 %70 release monotonic
  %72 = extractvalue { i32, i1 } %71, 0
  %73 = extractvalue { i32, i1 } %71, 1
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %69, %4, %13, %56
  ret void
}

declare i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"*, i64) local_unnamed_addr #3

declare void @_ZN2v88internal13JSArrayBuffer13MarkExtensionEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_13JSArrayBufferENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2)
  br i1 %4, label %5, label %39

5:                                                ; preds = %3
  %6 = add i64 %1, 3
  %7 = inttoptr i64 %6 to i8*
  %8 = load atomic i8, i8* %7 monotonic, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 2
  %11 = add i64 %1, 5
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp ult i8 %13, 3
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = load atomic i8, i8* %7 monotonic, align 1
  br label %17

17:                                               ; preds = %5, %15
  %18 = phi i8 [ %16, %15 ], [ %13, %5 ]
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %0 to %"class.v8::internal::MarkingVisitorBase"*
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2)
  %22 = add i64 %2, 3
  %23 = add i64 %2, 11
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %17, %35
  %26 = phi i64 [ %36, %35 ], [ %22, %17 ]
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = and i64 %26, -4294967296
  %34 = or i64 %33, %29
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2, i64 %26, i64 %34) #13
  br label %35

35:                                               ; preds = %32, %25
  %36 = add i64 %26, 4
  %37 = icmp ult i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %35, %17
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %1, i64 %2, i32 48, i32 %20, %"class.v8::internal::ConcurrentMarkingVisitor"* %0) #13
  br label %39

39:                                               ; preds = %3, %38
  %40 = phi i32 [ %10, %38 ], [ 0, %3 ]
  ret i32 %40
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64, i64, i32, i32, %"class.v8::internal::ConcurrentMarkingVisitor"*) local_unnamed_addr #6 comdat align 2 {
  %6 = add i64 %0, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp eq i16 %8, 1057
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = add i64 %0, 9
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp slt i8 %13, 0
  %15 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %8, i1 zeroext %14) #13
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i32 [ %15, %10 ], [ 12, %5 ]
  %18 = add i64 %0, 4
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = icmp slt i32 %17, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %4 to %"class.v8::internal::MarkingVisitorBase"*
  br label %75

26:                                               ; preds = %16
  %27 = icmp eq i32 %2, 0
  %28 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %4 to %"class.v8::internal::MarkingVisitorBase"*
  br i1 %27, label %31, label %29

29:                                               ; preds = %26
  %30 = sext i32 %2 to i64
  br label %32

31:                                               ; preds = %26
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %28, i64 %1) #13
  br label %32

32:                                               ; preds = %31, %29
  %33 = phi i64 [ %30, %29 ], [ 4, %31 ]
  %34 = add i64 %1, -1
  %35 = add i64 %33, %34
  %36 = sext i32 %17 to i64
  %37 = add i64 %34, %36
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %39, label %52

39:                                               ; preds = %32, %49
  %40 = phi i64 [ %50, %49 ], [ %35, %32 ]
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = and i64 %40, -4294967296
  %48 = or i64 %47, %43
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %28, i64 %1, i64 %40, i64 %48) #13
  br label %49

49:                                               ; preds = %46, %39
  %50 = add i64 %40, 4
  %51 = icmp ult i64 %50, %37
  br i1 %51, label %39, label %52

52:                                               ; preds = %49, %32
  %53 = zext i32 %22 to i64
  br label %54

54:                                               ; preds = %52, %72
  %55 = phi i64 [ %36, %52 ], [ %73, %72 ]
  %56 = add i64 %34, %55
  %57 = add i64 %56, 4
  %58 = icmp ult i64 %56, -4
  br i1 %58, label %59, label %72

59:                                               ; preds = %54, %69
  %60 = phi i64 [ %70, %69 ], [ %56, %54 ]
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = and i64 %60, -4294967296
  %68 = or i64 %67, %63
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %28, i64 %1, i64 %60, i64 %68) #13
  br label %69

69:                                               ; preds = %66, %59
  %70 = add i64 %60, 4
  %71 = icmp ult i64 %70, %57
  br i1 %71, label %59, label %72

72:                                               ; preds = %69, %54
  %73 = add nsw i64 %55, 8
  %74 = icmp slt i64 %73, %53
  br i1 %74, label %54, label %75

75:                                               ; preds = %72, %24
  %76 = phi %"class.v8::internal::MarkingVisitorBase"* [ %25, %24 ], [ %28, %72 ]
  %77 = phi i32 [ %2, %24 ], [ %22, %72 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = sext i32 %77 to i64
  br label %82

81:                                               ; preds = %75
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %76, i64 %1) #13
  br label %82

82:                                               ; preds = %81, %79
  %83 = phi i64 [ %80, %79 ], [ 4, %81 ]
  %84 = add i64 %1, -1
  %85 = add i64 %83, %84
  %86 = sext i32 %3 to i64
  %87 = add i64 %84, %86
  %88 = icmp ult i64 %85, %87
  br i1 %88, label %89, label %102

89:                                               ; preds = %82, %99
  %90 = phi i64 [ %100, %99 ], [ %85, %82 ]
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %89
  %97 = and i64 %90, -4294967296
  %98 = or i64 %97, %93
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %76, i64 %1, i64 %90, i64 %98) #13
  br label %99

99:                                               ; preds = %96, %89
  %100 = add i64 %90, 4
  %101 = icmp ult i64 %100, %87
  br i1 %101, label %89, label %102

102:                                              ; preds = %99, %82
  ret void
}

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_10JSDataViewENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2)
  br i1 %4, label %5, label %39

5:                                                ; preds = %3
  %6 = add i64 %1, 3
  %7 = inttoptr i64 %6 to i8*
  %8 = load atomic i8, i8* %7 monotonic, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 2
  %11 = add i64 %1, 5
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp ult i8 %13, 3
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = load atomic i8, i8* %7 monotonic, align 1
  br label %17

17:                                               ; preds = %5, %15
  %18 = phi i8 [ %16, %15 ], [ %13, %5 ]
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %0 to %"class.v8::internal::MarkingVisitorBase"*
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2)
  %22 = add i64 %2, 3
  %23 = add i64 %2, 15
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %17, %35
  %26 = phi i64 [ %36, %35 ], [ %22, %17 ]
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = and i64 %26, -4294967296
  %34 = or i64 %33, %29
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2, i64 %26, i64 %34) #13
  br label %35

35:                                               ; preds = %32, %25
  %36 = add i64 %26, 4
  %37 = icmp ult i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %35, %17
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %1, i64 %2, i32 40, i32 %20, %"class.v8::internal::ConcurrentMarkingVisitor"* %0) #13
  br label %39

39:                                               ; preds = %3, %38
  %40 = phi i32 [ %10, %38 ], [ 0, %3 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_12JSTypedArrayEEEiNS0_3MapET_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  %5 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %4, i64 %2) #13
  br i1 %5, label %6, label %104

6:                                                ; preds = %3
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i8*
  %9 = load atomic i8, i8* %8 monotonic, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 2
  %12 = add i64 %1, 5
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = icmp ult i8 %14, 3
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = load atomic i8, i8* %8 monotonic, align 1
  br label %18

18:                                               ; preds = %16, %6
  %19 = phi i8 [ %17, %16 ], [ %14, %6 ]
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 2
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %2) #13
  %22 = add i64 %2, 3
  %23 = add i64 %2, 15
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %18, %35
  %26 = phi i64 [ %36, %35 ], [ %22, %18 ]
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = and i64 %26, -4294967296
  %34 = or i64 %33, %29
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %2, i64 %26, i64 %34) #13
  br label %35

35:                                               ; preds = %32, %25
  %36 = add i64 %26, 4
  %37 = icmp ult i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %35, %18
  %39 = add i64 %2, 47
  %40 = add i64 %2, 51
  %41 = icmp ult i64 %39, -4
  br i1 %41, label %42, label %55

42:                                               ; preds = %38, %52
  %43 = phi i64 [ %53, %52 ], [ %39, %38 ]
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = and i64 %43, -4294967296
  %51 = or i64 %50, %46
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %2, i64 %43, i64 %51) #13
  br label %52

52:                                               ; preds = %49, %42
  %53 = add i64 %43, 4
  %54 = icmp ult i64 %53, %40
  br i1 %54, label %42, label %55

55:                                               ; preds = %52, %38
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %1, i64 %2, i32 56, i32 %21, %"class.v8::internal::ConcurrentMarkingVisitor"* %4) #13
  %56 = icmp eq i8 %9, 0
  br i1 %56, label %104, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 7
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %104, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %63 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %63, i64 0, i32 1, i32 1
  %65 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %64, align 8
  %66 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %65, i64 0, i32 1
  %67 = load i16, i16* %66, align 2
  %68 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %65, i64 0, i32 0
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %67, %69
  %71 = bitcast %"class.heap::base::internal::SegmentBase"* %65 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br i1 %70, label %72, label %97, !prof !3

72:                                               ; preds = %61
  %73 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %74 = icmp eq %"class.heap::base::internal::SegmentBase"* %65, %73
  br i1 %74, label %89, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %63, i64 0, i32 1, i32 0
  %77 = load %"class.heap::base::Worklist.178"*, %"class.heap::base::Worklist.178"** %76, align 8
  %78 = bitcast %"class.heap::base::internal::SegmentBase"** %64 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"**
  %79 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %78, align 8
  %80 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %77, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %80) #13
  %81 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %77, i64 0, i32 1
  %82 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %79, i64 0, i32 1
  %85 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %79 to i64
  store atomic i64 %86, i64* %82 monotonic, align 8
  %87 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i64* %87, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %80) #13
  br label %89

89:                                               ; preds = %75, %72
  %90 = tail call i8* @_Znwm(i64 144) #14
  %91 = bitcast i8* %90 to i16*
  store i16 16, i16* %91, align 2
  %92 = getelementptr inbounds i8, i8* %90, i64 2
  %93 = bitcast i8* %92 to i16*
  store i16 0, i16* %93, align 2
  %94 = getelementptr inbounds i8, i8* %90, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 136, i1 false) #13
  %95 = bitcast %"class.heap::base::internal::SegmentBase"** %64 to i8**
  store i8* %90, i8** %95, align 8
  %96 = bitcast i8* %90 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br label %97

97:                                               ; preds = %61, %89
  %98 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %96, %89 ], [ %71, %61 ]
  %99 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %98, i64 0, i32 0, i32 1
  %100 = load i16, i16* %99, align 2
  %101 = add i16 %100, 1
  store i16 %101, i16* %99, align 2
  %102 = zext i16 %100 to i64
  %103 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %98, i64 0, i32 2, i64 %102, i32 0, i32 0, i32 0
  store i64 %2, i64* %103, align 8
  br label %104

104:                                              ; preds = %3, %57, %55, %97
  %105 = phi i32 [ %11, %57 ], [ 0, %55 ], [ %11, %97 ], [ 0, %3 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal24ConcurrentMarkingVisitor21VisitJSObjectSubclassINS0_9JSWeakRefENS3_14BodyDescriptorEEEiNS0_3MapET_(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %2)
  br i1 %4, label %5, label %45

5:                                                ; preds = %3
  %6 = add i64 %1, 3
  %7 = inttoptr i64 %6 to i8*
  %8 = load atomic i8, i8* %7 monotonic, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 2
  %11 = add i64 %1, 5
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp ult i8 %13, 3
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = load atomic i8, i8* %7 monotonic, align 1
  br label %17

17:                                               ; preds = %5, %15
  %18 = phi i8 [ %16, %15 ], [ %13, %5 ]
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %0 to %"class.v8::internal::MarkingVisitorBase"*
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2)
  %22 = add i64 %2, 3
  %23 = add i64 %2, 11
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %17, %35
  %26 = phi i64 [ %36, %35 ], [ %22, %17 ]
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = and i64 %26, -4294967296
  %34 = or i64 %33, %29
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %21, i64 %2, i64 %26, i64 %34) #13
  br label %35

35:                                               ; preds = %32, %25
  %36 = add i64 %26, 4
  %37 = icmp ult i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %35, %17
  %39 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = add i64 %2, 15
  %41 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %42 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %42, i64 4
  %44 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %43, align 8
  tail call void %44(%"class.v8::internal::ObjectVisitor"* %39, i64 %2, i64 %23, i64 %40) #13
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %1, i64 %2, i32 16, i32 %20, %"class.v8::internal::ConcurrentMarkingVisitor"* %0) #13
  br label %45

45:                                               ; preds = %3, %38
  %46 = phi i32 [ %10, %38 ], [ 0, %3 ]
  ret i32 %46
}

declare signext i16 @_ZN2v88internal15DescriptorArray31UpdateNumberOfMarkedDescriptorsEjs(%"class.v8::internal::DescriptorArray"*, i32, i16 signext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13PrototypeInfo14BodyDescriptor11IterateBodyINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64, i64, i32, %"class.v8::internal::ConcurrentMarkingVisitor"*) local_unnamed_addr #6 comdat align 2 {
  %5 = bitcast %"class.v8::internal::ConcurrentMarkingVisitor"* %3 to %"class.v8::internal::MarkingVisitorBase"*
  %6 = add i64 %1, -1
  %7 = add i64 %1, 3
  %8 = add i64 %1, 19
  %9 = icmp ult i64 %7, %8
  br i1 %9, label %10, label %23

10:                                               ; preds = %4, %20
  %11 = phi i64 [ %21, %20 ], [ %7, %4 ]
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = and i64 %11, -4294967296
  %19 = or i64 %18, %14
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %5, i64 %1, i64 %11, i64 %19) #13
  br label %20

20:                                               ; preds = %17, %10
  %21 = add i64 %11, 4
  %22 = icmp ult i64 %21, %8
  br i1 %22, label %10, label %23

23:                                               ; preds = %20, %4
  %24 = add i64 %1, 23
  %25 = icmp ult i64 %8, -4
  br i1 %25, label %26, label %45

26:                                               ; preds = %23, %42
  %27 = phi i64 [ %43, %42 ], [ %8, %23 ]
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i64 %27, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = and i64 %31, 3
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %35, label %36

35:                                               ; preds = %26
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %5, i64 %1, i64 %27, i64 %32) #13
  br label %42

36:                                               ; preds = %26
  %37 = icmp eq i64 %33, 3
  %38 = icmp ne i32 %29, 3
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = and i64 %32, -3
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE21ProcessWeakHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %5, i64 %1, i64 %27, i64 %41) #13
  br label %42

42:                                               ; preds = %40, %36, %35
  %43 = add i64 %27, 4
  %44 = icmp ult i64 %43, %24
  br i1 %44, label %26, label %45

45:                                               ; preds = %42, %23
  %46 = sext i32 %2 to i64
  %47 = add i64 %6, %46
  %48 = icmp ult i64 %24, %47
  br i1 %48, label %49, label %62

49:                                               ; preds = %45, %59
  %50 = phi i64 [ %60, %59 ], [ %24, %45 ]
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = and i64 %50, -4294967296
  %58 = or i64 %57, %53
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE23ProcessStrongHeapObjectINS0_24CompressedHeapObjectSlotEEEvNS0_10HeapObjectET_S7_(%"class.v8::internal::MarkingVisitorBase"* %5, i64 %1, i64 %50, i64 %58) #13
  br label %59

59:                                               ; preds = %56, %49
  %60 = add i64 %50, 4
  %61 = icmp ult i64 %60, %47
  br i1 %61, label %49, label %62

62:                                               ; preds = %59, %45
  ret void
}

declare zeroext i1 @_ZNK2v88internal13BytecodeArray5IsOldEv(%"class.v8::internal::BytecodeArray"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ConcurrentMarkingVisitor23VisitPointersInSnapshotENS0_10HeapObjectERKNS0_12SlotSnapshotE(%"class.v8::internal::ConcurrentMarkingVisitor"*, i64, %"class.v8::internal::SlotSnapshot"* dereferenceable(4088)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::SlotSnapshot", %"class.v8::internal::SlotSnapshot"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentMarkingVisitor", %"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 1
  br label %10

9:                                                ; preds = %85, %3
  ret void

10:                                               ; preds = %7, %85
  %11 = phi i32 [ %5, %7 ], [ %86, %85 ]
  %12 = phi i64 [ 0, %7 ], [ %87, %85 ]
  %13 = getelementptr inbounds %"class.v8::internal::SlotSnapshot", %"class.v8::internal::SlotSnapshot"* %2, i64 0, i32 1, i64 %12, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::SlotSnapshot", %"class.v8::internal::SlotSnapshot"* %2, i64 0, i32 1, i64 %12, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %10
  %20 = and i64 %16, -262144
  %21 = or i64 %20, 272
  %22 = sub i64 %16, %20
  %23 = trunc i64 %22 to i32
  %24 = lshr i32 %23, 2
  %25 = and i32 %24, 31
  %26 = shl i32 1, %25
  %27 = inttoptr i64 %21 to i32*
  %28 = lshr i64 %22, 7
  %29 = and i64 %28, 33554431
  %30 = getelementptr inbounds i32, i32* %27, i64 %29
  %31 = load atomic i32, i32* %30 monotonic, align 4
  br label %32

32:                                               ; preds = %36, %19
  %33 = phi i32 [ %31, %19 ], [ %39, %36 ]
  %34 = and i32 %33, %26
  %35 = icmp eq i32 %34, %26
  br i1 %35, label %83, label %36

36:                                               ; preds = %32
  %37 = or i32 %33, %26
  %38 = cmpxchg volatile i32* %30, i32 %33, i32 %37 release monotonic
  %39 = extractvalue { i32, i1 } %38, 0
  %40 = extractvalue { i32, i1 } %38, 1
  br i1 %40, label %41, label %32

41:                                               ; preds = %36
  %42 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %8, align 8
  %43 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %42, i64 0, i32 2, i32 1
  %44 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %43, align 8
  %45 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %44, i64 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %44, i64 0, i32 0
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %46, %48
  %50 = bitcast %"class.heap::base::internal::SegmentBase"* %44 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %49, label %51, label %76, !prof !3

51:                                               ; preds = %41
  %52 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %53 = icmp eq %"class.heap::base::internal::SegmentBase"* %44, %52
  br i1 %53, label %68, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %42, i64 0, i32 2, i32 0
  %56 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %55, align 8
  %57 = bitcast %"class.heap::base::internal::SegmentBase"** %43 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %58 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %57, align 8
  %59 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %59) #13
  %60 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 1
  %61 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %58, i64 0, i32 1
  %64 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %58 to i64
  store atomic i64 %65, i64* %61 monotonic, align 8
  %66 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i64* %66, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %59) #13
  br label %68

68:                                               ; preds = %54, %51
  %69 = tail call i8* @_Znwm(i64 528) #14
  %70 = bitcast i8* %69 to i16*
  store i16 64, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %69, i64 2
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 520, i1 false) #13
  %74 = bitcast %"class.heap::base::internal::SegmentBase"** %43 to i8**
  store i8* %69, i8** %74, align 8
  %75 = bitcast i8* %69 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %76

76:                                               ; preds = %68, %41
  %77 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %75, %68 ], [ %50, %41 ]
  %78 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %77, i64 0, i32 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, 1
  store i16 %80, i16* %78, align 2
  %81 = zext i16 %79 to i64
  %82 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %77, i64 0, i32 2, i64 %81, i32 0, i32 0, i32 0
  store i64 %16, i64* %82, align 8
  br label %83

83:                                               ; preds = %32, %76
  tail call void @_ZN2v88internal24ConcurrentMarkingVisitor10RecordSlotINS0_20CompressedObjectSlotEEEvNS0_10HeapObjectET_S4_(%"class.v8::internal::ConcurrentMarkingVisitor"* %0, i64 %1, i64 %14, i64 %16)
  %84 = load i32, i32* %4, align 8
  br label %85

85:                                               ; preds = %10, %83
  %86 = phi i32 [ %11, %10 ], [ %84, %83 ]
  %87 = add nuw nsw i64 %12, 1
  %88 = sext i32 %86 to i64
  %89 = icmp slt i64 %87, %88
  br i1 %89, label %10, label %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE28VisitEmbedderTracingSubclassINS0_8JSObjectEEEiNS0_3MapET_(%"class.v8::internal::MarkingVisitorBase"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = bitcast %"class.v8::internal::MarkingVisitorBase"* %0 to %"class.v8::internal::ConcurrentMarkingVisitor"*
  %5 = tail call zeroext i1 @_ZN2v88internal24ConcurrentMarkingVisitor11ShouldVisitENS0_10HeapObjectE(%"class.v8::internal::ConcurrentMarkingVisitor"* %4, i64 %2) #13
  br i1 %5, label %6, label %70

6:                                                ; preds = %3
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i8*
  %9 = load atomic i8, i8* %8 monotonic, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 2
  %12 = add i64 %1, 5
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = icmp ult i8 %14, 3
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = load atomic i8, i8* %8 monotonic, align 1
  br label %18

18:                                               ; preds = %6, %16
  %19 = phi i8 [ %17, %16 ], [ %14, %6 ]
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 2
  tail call void @_ZN2v88internal18MarkingVisitorBaseINS0_24ConcurrentMarkingVisitorENS0_22ConcurrentMarkingStateEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::MarkingVisitorBase"* %0, i64 %2) #13
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_24ConcurrentMarkingVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %1, i64 %2, i32 4, i32 %21, %"class.v8::internal::ConcurrentMarkingVisitor"* %4) #13
  %22 = icmp eq i8 %9, 0
  br i1 %22, label %70, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 7
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::MarkingVisitorBase", %"class.v8::internal::MarkingVisitorBase"* %0, i64 0, i32 1
  %29 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %29, i64 0, i32 1, i32 1
  %31 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %30, align 8
  %32 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %31, i64 0, i32 1
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %31, i64 0, i32 0
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %33, %35
  %37 = bitcast %"class.heap::base::internal::SegmentBase"* %31 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br i1 %36, label %38, label %63, !prof !3

38:                                               ; preds = %27
  %39 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %40 = icmp eq %"class.heap::base::internal::SegmentBase"* %31, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %29, i64 0, i32 1, i32 0
  %43 = load %"class.heap::base::Worklist.178"*, %"class.heap::base::Worklist.178"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %30 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"**
  %45 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %43, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %46) #13
  %47 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %43, i64 0, i32 1
  %48 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %45, i64 0, i32 1
  %51 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %45 to i64
  store atomic i64 %52, i64* %48 monotonic, align 8
  %53 = getelementptr inbounds %"class.heap::base::Worklist.178", %"class.heap::base::Worklist.178"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %46) #13
  br label %55

55:                                               ; preds = %41, %38
  %56 = tail call i8* @_Znwm(i64 144) #14
  %57 = bitcast i8* %56 to i16*
  store i16 16, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = bitcast i8* %58 to i16*
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 136, i1 false) #13
  %61 = bitcast %"class.heap::base::internal::SegmentBase"** %30 to i8**
  store i8* %56, i8** %61, align 8
  %62 = bitcast i8* %56 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br label %63

63:                                               ; preds = %27, %55
  %64 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %62, %55 ], [ %37, %27 ]
  %65 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %64, i64 0, i32 0, i32 1
  %66 = load i16, i16* %65, align 2
  %67 = add i16 %66, 1
  store i16 %67, i16* %65, align 2
  %68 = zext i16 %66 to i64
  %69 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %64, i64 0, i32 2, i64 %68, i32 0, i32 0, i32 0
  store i64 %2, i64* %69, align 8
  br label %70

70:                                               ; preds = %3, %23, %18, %63
  %71 = phi i32 [ %11, %23 ], [ 0, %18 ], [ %11, %63 ], [ 0, %3 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v87JobTaskD2Ev(%"class.v8::JobTask"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17ConcurrentMarking7JobTaskD0Ev(%"class.v8::internal::ConcurrentMarking::JobTask"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::ConcurrentMarking::JobTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateE(%"class.v8::internal::ConcurrentMarking::JobTask"*, %"class.v8::JobDelegate"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1210"], align 16
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  %10 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %10, i64 3
  %12 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::JobDelegate"* %1) #13
  br i1 %13, label %14, label %24

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 1
  %16 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp ne i8 %22, 0
  tail call void @_ZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjb(%"class.v8::internal::ConcurrentMarking"* %16, %"class.v8::JobDelegate"* %1, i32 %18, i32 %20, i1 zeroext %23)
  br label %120

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::internal::GCTracer::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 1
  %27 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %27, i64 0, i32 1
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %29, i64 0, i32 80, i32 0, i32 0, i32 0
  %31 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %30, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %7, %"class.v8::internal::GCTracer"* %31, i32 118, i32 1) #13
  %32 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %26, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %32, i64 0, i32 1
  %34 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %34, i64 0, i32 80, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %35, align 8
  %37 = call i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"* %36, i32 118) #13
  %38 = load atomic i64, i64* @_ZZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic381 monotonic, align 8
  %39 = inttoptr i64 %38 to i8*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %24
  %42 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %43 = bitcast %"class.v8::TracingController"* %42 to i8* (%"class.v8::TracingController"*, i8*)***
  %44 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %43, align 8
  %45 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %44, i64 2
  %46 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %45, align 8
  %47 = call i8* %46(%"class.v8::TracingController"* %42, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0)) #13
  %48 = ptrtoint i8* %47 to i64
  store atomic volatile i64 %48, i64* @_ZZN2v88internal17ConcurrentMarking7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic381 monotonic, align 8
  br label %49

49:                                               ; preds = %24, %41
  %50 = phi i8* [ %39, %24 ], [ %47, %41 ]
  %51 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %52, align 8
  %53 = load atomic i8, i8* %50 monotonic, align 1
  %54 = and i8 %53, 5
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %92, label %56

56:                                               ; preds = %49
  %57 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 118) #13
  %58 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  %59 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  store i8 2, i8* %5, align 1
  %60 = zext i32 %37 to i64
  store i64 %60, i64* %6, align 8
  %61 = bitcast [2 x %"class.std::__1::unique_ptr.1210"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #13
  %62 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 16, i1 false) #13
  %63 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %64 = bitcast %"class.v8::TracingController"* %63 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)***
  %65 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)** %65, i64 3
  %67 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1210"*, i32)** %66, align 8
  %68 = call i64 %67(%"class.v8::TracingController"* %63, i8 signext 88, i8* %50, i8* %57, i8* null, i64 0, i64 0, i32 1, i8** nonnull %4, i8* nonnull %5, i64* nonnull %6, %"class.std::__1::unique_ptr.1210"* nonnull %62, i32 0) #13
  %69 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %70 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %69, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %69, align 8
  %71 = icmp eq %"class.v8::ConvertableToTraceFormat"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %56
  %73 = bitcast %"class.v8::ConvertableToTraceFormat"* %70 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %74 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %74, i64 1
  %76 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %75, align 8
  call void %76(%"class.v8::ConvertableToTraceFormat"* nonnull %70) #13
  br label %77

77:                                               ; preds = %72, %56
  %78 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1210"], [2 x %"class.std::__1::unique_ptr.1210"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %78, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %78, align 16
  %80 = icmp eq %"class.v8::ConvertableToTraceFormat"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.v8::ConvertableToTraceFormat"* %79 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %83, i64 1
  %85 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, align 8
  call void %85(%"class.v8::ConvertableToTraceFormat"* nonnull %79) #13
  br label %86

86:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  %87 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 118) #13
  %88 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %89 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %88, i64 0, i32 0
  store i8* %50, i8** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %68, i64* %91, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %88, %"struct.v8::internal::tracing::ScopedTracer::Data"** %52, align 8
  br label %92

92:                                               ; preds = %49, %86
  %93 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %26, align 8
  %94 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 4
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  call void @_ZN2v88internal17ConcurrentMarking3RunEPNS_11JobDelegateENS0_17BytecodeFlushModeEjb(%"class.v8::internal::ConcurrentMarking"* %93, %"class.v8::JobDelegate"* %1, i32 %95, i32 %97, i1 zeroext %100)
  %101 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %52, align 8
  %102 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %101, null
  br i1 %102, label %119, label %103

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = load atomic i8, i8* %105 monotonic, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %103
  %109 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %110 = load i8*, i8** %104, align 8
  %111 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::TracingController"* %109 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %116 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %116, i64 5
  %118 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %117, align 8
  call void %118(%"class.v8::TracingController"* %109, i8* %110, i8* %112, i64 %114) #13
  br label %119

119:                                              ; preds = %92, %103, %108
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #13
  br label %120

120:                                              ; preds = %119, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal17ConcurrentMarking7JobTask17GetMaxConcurrencyEm(%"class.v8::internal::ConcurrentMarking::JobTask"*, i64) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking::JobTask", %"class.v8::internal::ConcurrentMarking::JobTask"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %4, i64 0, i32 2
  %6 = load %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::MarkingWorklists"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %6, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %6, i64 0, i32 3, i32 0, i32 0
  %10 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MarkingWorklists", %"class.v8::internal::MarkingWorklists"* %6, i64 0, i32 3, i32 0, i32 1
  %12 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %10, %12
  br i1 %13, label %85, label %14

14:                                               ; preds = %2
  %15 = ptrtoint %"struct.v8::internal::ContextWorklistPair"* %10 to i64
  %16 = getelementptr %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %12, i64 -1, i32 0
  %17 = ptrtoint i64* %16 to i64
  %18 = sub i64 %17, %15
  %19 = lshr i64 %18, 4
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %14, %23
  %24 = phi i64 [ %31, %23 ], [ %8, %14 ]
  %25 = phi %"struct.v8::internal::ContextWorklistPair"* [ %32, %23 ], [ %10, %14 ]
  %26 = phi i64 [ %33, %23 ], [ %21, %14 ]
  %27 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %25, i64 0, i32 1
  %28 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %27, align 8
  %29 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = add i64 %30, %24
  %32 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %25, i64 1
  %33 = add i64 %26, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %23, !llvm.loop !42

35:                                               ; preds = %23, %14
  %36 = phi i64 [ undef, %14 ], [ %31, %23 ]
  %37 = phi i64 [ %8, %14 ], [ %31, %23 ]
  %38 = phi %"struct.v8::internal::ContextWorklistPair"* [ %10, %14 ], [ %32, %23 ]
  %39 = icmp ult i64 %18, 112
  br i1 %39, label %85, label %40

40:                                               ; preds = %35, %40
  %41 = phi i64 [ %82, %40 ], [ %37, %35 ]
  %42 = phi %"struct.v8::internal::ContextWorklistPair"* [ %83, %40 ], [ %38, %35 ]
  %43 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 0, i32 1
  %44 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %43, align 8
  %45 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = add i64 %46, %41
  %48 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 1, i32 1
  %49 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %48, align 8
  %50 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = add i64 %51, %47
  %53 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 2, i32 1
  %54 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %53, align 8
  %55 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = add i64 %56, %52
  %58 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 3, i32 1
  %59 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %58, align 8
  %60 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i64, i64* %60 monotonic, align 8
  %62 = add i64 %61, %57
  %63 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 4, i32 1
  %64 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %63, align 8
  %65 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = add i64 %66, %62
  %68 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 5, i32 1
  %69 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %68, align 8
  %70 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = add i64 %71, %67
  %73 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 6, i32 1
  %74 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %73, align 8
  %75 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = add i64 %76, %72
  %78 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 7, i32 1
  %79 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %78, align 8
  %80 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i64, i64* %80 monotonic, align 8
  %82 = add i64 %81, %77
  %83 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %42, i64 8
  %84 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %83, %12
  br i1 %84, label %85, label %40

85:                                               ; preds = %35, %40, %2
  %86 = phi i64 [ %8, %2 ], [ %36, %35 ], [ %82, %40 ]
  %87 = getelementptr inbounds %"class.v8::internal::ConcurrentMarking", %"class.v8::internal::ConcurrentMarking"* %4, i64 0, i32 3
  %88 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %88, i64 0, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i64, i64* %89 monotonic, align 8
  %91 = getelementptr inbounds %"class.v8::internal::WeakObjects", %"class.v8::internal::WeakObjects"* %88, i64 0, i32 2, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = icmp ult i64 %86, %90
  %94 = select i1 %93, i64 %90, i64 %86
  %95 = icmp ult i64 %94, %92
  %96 = select i1 %95, i64 %92, i64 %94
  %97 = add i64 %96, %1
  %98 = icmp ult i64 %97, 7
  %99 = select i1 %98, i64 %97, i64 7
  ret i64 %99
}

declare void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"*, %"class.v8::internal::GCTracer"*, i32, i32) unnamed_addr #3

declare i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"*, i32) local_unnamed_addr #3

declare i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"*) unnamed_addr #4

declare %"class.v8::internal::TypedSlotSet"* @_ZN2v88internal11MemoryChunk20AllocateTypedSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_12TypedSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #3

declare void @_ZN2v88internal10TypedSlots5MergeEPS1_(%"class.v8::internal::TypedSlots"*, %"class.v8::internal::TypedSlots"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26}
!6 = distinct !{!6, !7, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE: argument 0"}
!7 = distinct !{!7, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE"}
!8 = distinct !{!8, !9, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE: argument 0"}
!9 = distinct !{!9, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE"}
!10 = distinct !{!10, !11, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE: argument 0"}
!11 = distinct !{!11, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE"}
!12 = distinct !{!12, !13, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE: argument 0"}
!13 = distinct !{!13, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE"}
!14 = distinct !{!14, !15, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE: argument 0"}
!15 = distinct !{!15, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE"}
!16 = distinct !{!16, !17, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE: argument 0"}
!17 = distinct !{!17, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE"}
!18 = distinct !{!18, !19, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE: argument 0"}
!19 = distinct !{!19, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE"}
!20 = distinct !{!20, !21, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE"}
!22 = distinct !{!22, !23, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE: argument 0"}
!23 = distinct !{!23, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE"}
!24 = distinct !{!24, !25, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE: argument 0"}
!25 = distinct !{!25, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE"}
!26 = distinct !{!26, !27, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE: argument 0"}
!27 = distinct !{!27, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE"}
!28 = !{!16, !18, !20, !22, !24, !26}
!29 = !{!26}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
!32 = distinct !{!32, !31}
!33 = !{i64 0, i64 65}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkENS3_15MemoryChunkDataEEENS_22__unordered_map_hasherIS5_S7_NS3_16BasicMemoryChunk6HasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !31}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !31}
!42 = distinct !{!42, !31}
