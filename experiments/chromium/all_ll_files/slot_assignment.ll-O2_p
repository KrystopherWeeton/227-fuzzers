; ModuleID = '../../third_party/blink/renderer/core/dom/slot_assignment.cc'
source_filename = "../../third_party/blink/renderer/core/dom/slot_assignment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.144" }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.192", i32, [4 x i8], %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.328", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.344", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.362", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.369", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.308", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__cxx_atomic_impl.231" }
%"struct.std::__1::__cxx_atomic_impl.231" = type { %"struct.std::__1::__cxx_atomic_base_impl.232" }
%"struct.std::__1::__cxx_atomic_base_impl.232" = type { i64 }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::Worklist.239"* }
%"class.blink::Worklist.239" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::Worklist.246"* }
%"class.blink::Worklist.246" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::Worklist.253"* }
%"class.blink::Worklist.253" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::Worklist.260"* }
%"class.blink::Worklist.260" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::Worklist.267"* }
%"class.blink::Worklist.267" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::Worklist.274"* }
%"class.blink::Worklist.274" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::Worklist.281"* }
%"class.blink::Worklist.281" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.228" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.288", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.302", [4 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { i64 }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { float }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.311", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.320" }
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.350" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.239"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.246"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.253"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.260"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.267"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.615" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SlotAssignment" = type { %"class.blink::HeapVector", %"class.blink::Member.43", %"class.blink::WeakMember", i32, [4 x i8], %"class.blink::HeapHashSet.127" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLSlotElement"* }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.28", %"class.blink::HeapVector.28", i8, %"class.blink::HeapLinkedHashSet" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::Member.8" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.6", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.80", %"class.blink::HeapVector.82" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.140", %"class.WTF::Vector.140", i8, i32, %"class.blink::Member.151", %"class.blink::Member.153", %"class.blink::Member.155", %"class.blink::Member.157", %"class.blink::Member.159", %"class.blink::Member.161", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.164", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.170", %"class.blink::Member.172", %"class.blink::Member.88", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.175", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.59", %"class.blink::Member.57", %"class.blink::Member.385", %"class.blink::Member.57", %"class.blink::Member.57", %"class.blink::Member.57", %"class.blink::UserActionElementSet", %"class.blink::Member.394", double, double, i64, i64, %"class.blink::HeapHashSet.396", %"class.blink::HeapHashSet.403", i16, i8, %"class.blink::Member.410", %"class.blink::Member.412", %"class.blink::Member.123", %"class.blink::Member.414", %"class.blink::TextLinkColors", %"class.blink::Member.416", i8, [7 x i8], %"class.blink::HeapHashMap.418", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.57", %"class.WTF::Vector.425", %"class.blink::Member.430", %"class.blink::Member.434", i8, %"class.blink::Member.57", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.436", %"class.blink::HeapVector.438", %"class.std::__1::unique_ptr.446", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.452", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.465", %"class.WTF::Vector.467", i8, i8, %"class.std::__1::unique_ptr.472", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.59", %"class.blink::HeapVector.478", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.486", i8, i32, %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.494", %"class.WTF::HashMap.496", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.69", %"class.blink::Member.69", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.509", i8, i32, %"class.blink::Member.516", %"class.blink::Member.518", i32, %"class.blink::Member.520", %"class.blink::Member.522", %"class.blink::Member.524", %"class.std::__1::unique_ptr.526", i64, %"class.std::__1::unique_ptr.532", i32, i32, %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.555", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.557", %"class.WTF::Vector.559", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.564", %"class.blink::Member.571", %"class.std::__1::unique_ptr.573", %"class.blink::Member.579", i8, i8, %"class.WTF::String", %"class.blink::Member.581", i8, [7 x i8], %"class.blink::HeapHashMap.583", %"class.blink::HeapObserverSet", %"class.blink::Member.597", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.599", i32, i8, i8, %"class.blink::WeakMember.601", %"class.blink::Member.602" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.133" }
%"class.blink::HeapHashMap.133" = type { %"class.WTF::HashMap.136" }
%"class.WTF::HashMap.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"struct.WTF::KeyValuePair.139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.139" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.144" }
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.620", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.661", i32, i8, [3 x i8], %"class.blink::HeapVector.663", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.682", %"class.blink::Member.688", %"class.blink::Member.690", i8, [7 x i8] }>
%"class.blink::Supplementable.620" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.621" }
%"class.blink::HeapHashMap.621" = type { %"class.WTF::HashMap.624" }
%"class.WTF::HashMap.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"struct.WTF::KeyValuePair.627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.627" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.636" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.628" }
%"class.blink::HeapObserverSet.628" = type { i32, [4 x i8], %"class.blink::HeapHashSet.629" }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::WeakMember.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.635" = type opaque
%"class.blink::Supplementable.636" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.637" }
%"class.blink::HeapHashMap.637" = type { %"class.WTF::HashMap.640" }
%"class.WTF::HashMap.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"struct.WTF::KeyValuePair.643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.643" = type { i8*, %"class.blink::Member.696" }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.698" }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.644, %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.651", %"class.std::__1::unique_ptr.651", %"class.blink::Member.153", i32, [4 x i8], %"class.WTF::HashSet.657", i32, i32 }
%class.scoped_refptr.644 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.657" = type { %"class.WTF::HashTable.658" }
%"class.WTF::HashTable.658" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.663" = type { %"class.WTF::Vector.666" }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"class.blink::Member.669"*, i32, i32 }
%"class.blink::Member.669" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.675", i32, i32 }
%"class.blink::HeapHashMap.675" = type { %"class.WTF::HashMap.678" }
%"class.WTF::HashMap.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"struct.WTF::KeyValuePair.681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.681" = type opaque
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.90", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.92, %"class.WTF::Vector.93", %"class.WTF::Vector.93", %"class.blink::Member.4", %"class.blink::Member.98", %"class.blink::HeapHashSet", %"class.blink::Member.69", %"class.WTF::HashSet.107", %"class.WTF::TextPosition", %"class.blink::Member.111", %"class.blink::HeapVector.113", %"class.blink::Member.120" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.92 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.100" }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.104" }
%"class.WTF::HashTable.104" = type <{ %"class.blink::WeakMember.106"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.106" = type { %"class.blink::MemberBase.7" }
%"class.WTF::HashSet.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.113" = type { %"class.WTF::Vector.116" }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { %"class.blink::Member.98"*, i32, i32 }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.175" = type { %"class.WTF::VectorBuffer.176" }
%"class.WTF::VectorBuffer.176" = type { %"class.WTF::VectorBufferBase.177" }
%"class.WTF::VectorBufferBase.177" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.179", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.179" = type { %"class.base::RefCounted.180" }
%"class.base::RefCounted.180" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.183" }
%"class.blink::HeapHashMap.183" = type { %"class.WTF::HashMap.186" }
%"class.WTF::HashMap.186" = type { %"class.WTF::HashTable.187" }
%"class.WTF::HashTable.187" = type <{ %"struct.WTF::KeyValuePair.189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.189" = type { %"class.blink::WeakMember.190", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.69", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.4", %"class.blink::Member.4", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.387" }
%"class.blink::HeapHashMap.387" = type { %"class.WTF::HashMap.390" }
%"class.WTF::HashMap.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"struct.WTF::KeyValuePair.393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.393" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.396" = type { %"class.WTF::HashSet.399" }
%"class.WTF::HashSet.399" = type { %"class.WTF::HashTable.400" }
%"class.WTF::HashTable.400" = type <{ %"class.blink::WeakMember.402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.402" = type opaque
%"class.blink::HeapHashSet.403" = type { %"class.WTF::HashSet.406" }
%"class.WTF::HashSet.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"class.blink::WeakMember.409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.409" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.6", %"class.blink::HeapVector.82" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.418" = type { %"class.WTF::HashMap.421" }
%"class.WTF::HashMap.421" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type opaque
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.438" = type { %"class.WTF::Vector.441" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::Member.444"*, i32, i32 }
%"class.blink::Member.444" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.452" = type { %"class.WTF::HashSet.455" }
%"class.WTF::HashSet.455" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"class.blink::WeakMember.458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.458" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.459", i32, [4 x i8] }>
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.std::__1::pair.462"*, i32, i32 }
%"struct.std::__1::pair.462" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.59" = type { %"class.WTF::Vector.62" }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.blink::Member.57"*, i32, i32 }
%"class.blink::HeapVector.478" = type { %"class.WTF::Vector.481" }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"class.blink::Member.484"*, i32, i32 }
%"class.blink::Member.484" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.69" }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.500" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.384", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.375, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.375 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.376" }>
%"class.base::RefCountedThreadSafe.376" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.377 }
%class.scoped_refptr.377 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.378", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.378" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.379" }
%"struct.std::__1::atomic.379" = type { %"struct.std::__1::__atomic_base.380" }
%"struct.std::__1::__atomic_base.380" = type { %"struct.std::__1::__atomic_base.381" }
%"struct.std::__1::__atomic_base.381" = type { %"struct.std::__1::__cxx_atomic_impl.382" }
%"struct.std::__1::__cxx_atomic_impl.382" = type { %"struct.std::__1::__cxx_atomic_base_impl.383" }
%"struct.std::__1::__cxx_atomic_base_impl.383" = type { i8 }
%"class.blink::WeakMember.384" = type { %"class.blink::MemberBase.70" }
%"class.blink::HeapHashSet.509" = type { %"class.WTF::HashSet.512" }
%"class.WTF::HashSet.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"class.blink::Member.515"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.515" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.107", %"class.WTF::HashSet.107", %"class.WTF::HashSet.107", %"class.WTF::HashSet.107", %"class.WTF::HashSet.107", %"class.WTF::HashSet.107", i32, [4 x i8], %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", %"class.WTF::HashMap.535", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type { %"class.blink::HeapHashSet.549" }
%"class.blink::HeapHashSet.549" = type { %"class.WTF::HashSet.552" }
%"class.WTF::HashSet.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.561" }
%"class.WTF::VectorBufferBase.561" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.564" = type { %"class.WTF::HashMap.567" }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.583" = type { %"class.WTF::HashMap.586" }
%"class.WTF::HashMap.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"struct.WTF::KeyValuePair.589"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.589" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.590" }
%"class.blink::HeapHashSet.590" = type { %"class.WTF::HashSet.593" }
%"class.WTF::HashSet.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"class.blink::WeakMember.596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.596" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.69", %"class.blink::HeapHashSet.606", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.613", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.606" = type { %"class.WTF::HashSet.609" }
%"class.WTF::HashSet.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"class.blink::Member.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.612" = type opaque
%"class.blink::HeapTaskRunnerTimer.613" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.614", { i64, i64 } }
%"class.blink::WeakMember.614" = type { %"class.blink::MemberBase.600" }
%"class.blink::WeakMember.601" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Node"* }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.77" }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::HeapHashMap.79"* }
%"class.blink::HeapHashMap.79" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.82" = type { %"class.WTF::Vector.85" }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::Member.88"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.23", %"class.WTF::AtomicString", %"class.WTF::Vector.25" }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27", [32 x i8] }
%"class.WTF::VectorBufferBase.27" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.28" = type { %"class.WTF::Vector.31" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { %"class.blink::Member.4"*, i32, i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::WeakMember.601", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.38", i32, i32 }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::WeakMember.601" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.49" }
%"class.WTF::HashMap.49" = type { %"class.WTF::HashTable.50" }
%"class.WTF::HashTable.50" = type <{ %"struct.WTF::KeyValuePair.52"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.52" = type { %"class.WTF::AtomicString", %"class.blink::Member.53" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.57", i32, %"class.blink::HeapVector.59" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ShadowRoot"* }
%"class.blink::HeapHashSet.127" = type { %"class.WTF::HashSet.130" }
%"class.WTF::HashSet.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"class.blink::Member.4"*, i32, i32, i32, [4 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.123", %"class.blink::Member.125", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::SlotAssignment"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15HTMLSlotElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLSlotElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_10ShadowRootEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names11kDetailsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14TreeOrderedMapEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TreeOrderedMap]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.7 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [316 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, blink::Member<blink::Node>, WTF::IdentityExtractor, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.12 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15HTMLSlotElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLSlotElement>, WTF::VectorTraits<blink::Member<blink::HTMLSlotElement> > >]\00", align 1
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink14SlotAssignmentC1ERNS_10ShadowRootE = hidden unnamed_addr alias void (%"class.blink::SlotAssignment"*, %"class.blink::ShadowRoot"*), void (%"class.blink::SlotAssignment"*, %"class.blink::ShadowRoot"*)* @_ZN5blink14SlotAssignmentC2ERNS_10ShadowRootE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment10DidAddSlotERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* nocapture, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 4
  %6 = and i32 %5, -4
  %7 = and i32 %4, 2
  %8 = or i32 %7, %6
  %9 = or i32 %8, 1
  store i32 %9, i32* %3, align 8
  %10 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1048576
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZN5blink14SlotAssignment18DidAddSlotInternalERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %1)
  br label %17

17:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment18DidAddSlotInternalERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"* %1) #6
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %7, align 8
  %9 = call %"class.blink::Element"* @_ZN5blink14TreeOrderedMap45GetCachedFirstElementWithoutAccessingNodeTreeERKN3WTF12AtomicStringE(%"class.blink::TreeOrderedMap"* %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #6
  %10 = bitcast %"class.blink::Element"* %9 to %"class.blink::HTMLSlotElement"*
  %11 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %7, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink14TreeOrderedMap3AddERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::Element"* dereferenceable(104) %12) #6
  %13 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %7, align 8
  %14 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %15, i64 0, i32 1
  %17 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::TreeScope"* dereferenceable(104) %16) #6
  %18 = icmp eq %"class.blink::HTMLSlotElement"* %17, %1
  br i1 %18, label %19, label %71

19:                                               ; preds = %2
  %20 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %14, align 8
  %21 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.blink::Node"** %21 to %"class.blink::Element"**
  %23 = load %"class.blink::Element"*, %"class.blink::Element"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %23, i64 0, i32 0, i32 0
  %25 = icmp eq %"class.blink::Element"* %23, null
  br i1 %25, label %70, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %23, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %70, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1
  %33 = bitcast %"class.blink::Node"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %31, %62
  %37 = phi i64 [ %65, %62 ], [ %34, %31 ]
  %38 = inttoptr i64 %37 to %"class.blink::Node"*
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %62

43:                                               ; preds = %36
  %44 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"* nonnull %38) #6
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  %47 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #6
  br label %61

61:                                               ; preds = %60, %57, %43
  br i1 %46, label %67, label %62

62:                                               ; preds = %61, %36
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.blink::Node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %70, label %36

67:                                               ; preds = %61
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* %1, i32 0) #6
  %68 = icmp eq %"class.blink::Element"* %9, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %67
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* nonnull %10, i32 0) #6
  br label %72

70:                                               ; preds = %62, %31, %19, %26
  call void @_ZN5blink15HTMLSlotElement40CheckFallbackAfterInsertedIntoShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %72

71:                                               ; preds = %2
  call void @_ZN5blink15HTMLSlotElement40CheckFallbackAfterInsertedIntoShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %72

72:                                               ; preds = %67, %70, %69, %71
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #6
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment13DidRemoveSlotERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* nocapture, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -4
  %7 = and i32 %6, -4
  %8 = and i32 %5, 2
  %9 = or i32 %8, %7
  %10 = or i32 %9, 1
  store i32 %10, i32* %4, align 8
  %11 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1048576
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 4, i32 0, i32 1, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %0)
  tail call void @_ZN5blink15HTMLSlotElement39DidSlotChangeAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %42

22:                                               ; preds = %2
  %23 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"* %1) #6
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  call void @_ZN5blink14SlotAssignment21DidRemoveSlotInternalERNS_15HTMLSlotElementERKN3WTF12AtomicStringENS0_16SlotMutationTypeE(%"class.blink::SlotAssignment"* %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i32 0)
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #6
  br label %41

41:                                               ; preds = %22, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br label %42

42:                                               ; preds = %21, %17, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 2
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 1, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call dereferenceable(24) %"class.blink::SlotAssignmentEngine"* @_ZN5blink8Document23GetSlotAssignmentEngineEv(%"class.blink::Document"* %13) #6
  %15 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %5, align 8
  tail call void @_ZN5blink20SlotAssignmentEngine26AddShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"* %14, %"class.blink::ShadowRoot"* dereferenceable(208) %15) #6
  %16 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %5, align 8
  %17 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %16, i64 0, i32 1, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %27, label %22

22:                                               ; preds = %11
  %23 = tail call zeroext i1 @_ZNK5blink8Document30ShouldScheduleLayoutTreeUpdateEv(%"class.blink::Document"* %18) #6
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"* %18) #6
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  tail call void @_ZN5blink8Document24ScheduleLayoutTreeUpdateEv(%"class.blink::Document"* %18) #6
  br label %27

27:                                               ; preds = %1, %26, %24, %22, %11
  ret void
}

declare void @_ZN5blink15HTMLSlotElement39DidSlotChangeAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment21DidRemoveSlotInternalERNS_15HTMLSlotElementERKN3WTF12AtomicStringENS0_16SlotMutationTypeE(%"class.blink::SlotAssignment"* nocapture, %"class.blink::HTMLSlotElement"* dereferenceable(192), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %5, align 8
  %7 = tail call %"class.blink::Element"* @_ZN5blink14TreeOrderedMap45GetCachedFirstElementWithoutAccessingNodeTreeERKN3WTF12AtomicStringE(%"class.blink::TreeOrderedMap"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %2) #6
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %79, label %9

9:                                                ; preds = %4
  %10 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %5, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14TreeOrderedMap6RemoveERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::Element"* dereferenceable(104) %11) #6
  %12 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %5, align 8
  %13 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %14, i64 0, i32 1
  %16 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::TreeScope"* dereferenceable(104) %15) #6
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = icmp eq %"class.blink::Node"* %17, %18
  br i1 %19, label %20, label %78

20:                                               ; preds = %9
  %21 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %13, align 8
  %22 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.blink::Node"** %22 to %"class.blink::Element"**
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %24, i64 0, i32 0, i32 0
  %26 = icmp eq %"class.blink::Element"* %24, null
  br i1 %26, label %77, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1
  %34 = bitcast %"class.blink::Node"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %65, %37
  %40 = phi i64 [ %35, %37 ], [ %68, %65 ]
  %41 = inttoptr i64 %40 to %"class.blink::Node"*
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %65

46:                                               ; preds = %39
  %47 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"* nonnull %41) #6
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #6
  br label %64

64:                                               ; preds = %63, %60, %46
  br i1 %49, label %70, label %65

65:                                               ; preds = %64, %39
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %67 = bitcast %"class.blink::Node"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %77, label %39

70:                                               ; preds = %64
  %71 = icmp eq i32 %3, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @_ZN5blink14SlotAssignment24SetNeedsAssignmentRecalcEv(%"class.blink::SlotAssignment"* %0)
  tail call void @_ZN5blink15HTMLSlotElement39DidSlotChangeAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %74

73:                                               ; preds = %70
  tail call void @_ZN5blink15HTMLSlotElement26DidSlotChangeAfterRenamingEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %74

74:                                               ; preds = %73, %72
  %75 = icmp eq %"class.blink::HTMLSlotElement"* %16, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %74
  tail call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* nonnull %16, i32 0) #6
  br label %79

77:                                               ; preds = %65, %32, %20, %27
  tail call void @_ZN5blink15HTMLSlotElement39CheckFallbackAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %79

78:                                               ; preds = %9
  tail call void @_ZN5blink15HTMLSlotElement39CheckFallbackAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"* %1) #6
  br label %79

79:                                               ; preds = %78, %76, %77, %74, %4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15HTMLSlotElement7GetNameEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink14SlotAssignment42GetCachedFirstSlotWithoutAccessingNodeTreeERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %3, align 8
  %5 = tail call %"class.blink::Element"* @_ZN5blink14TreeOrderedMap45GetCachedFirstElementWithoutAccessingNodeTreeERKN3WTF12AtomicStringE(%"class.blink::TreeOrderedMap"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #6
  %6 = bitcast %"class.blink::Element"* %5 to %"class.blink::HTMLSlotElement"*
  ret %"class.blink::HTMLSlotElement"* %6
}

declare void @_ZN5blink14TreeOrderedMap3AddERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZNK5blink14SlotAssignment14FindSlotByNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %6, i64 0, i32 1
  %8 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::TreeScope"* dereferenceable(104) %7) #6
  ret %"class.blink::HTMLSlotElement"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SlotAssignment23FindHostChildBySlotNameERKN3WTF12AtomicStringE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.blink::Node"** %5 to %"class.blink::Element"**
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Element"* %7, null
  br i1 %9, label %53, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %53, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1
  %17 = bitcast %"class.blink::Node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %20, %48
  %23 = phi i64 [ %18, %20 ], [ %51, %48 ]
  %24 = inttoptr i64 %23 to %"class.blink::Node"*
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %22
  %30 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"* nonnull %24) #6
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %30, %31
  %33 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  br label %47

47:                                               ; preds = %29, %43, %46
  br i1 %32, label %53, label %48

48:                                               ; preds = %22, %47
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 5, i32 0, i32 0
  %50 = bitcast %"class.blink::Node"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %22

53:                                               ; preds = %47, %48, %10, %2, %15
  %54 = phi i1 [ false, %15 ], [ false, %2 ], [ false, %10 ], [ false, %48 ], [ true, %47 ]
  ret i1 %54
}

declare void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"*, i32) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement40CheckFallbackAfterInsertedIntoShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare void @_ZN5blink14TreeOrderedMap6RemoveERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement26DidSlotChangeAfterRenamingEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement39CheckFallbackAfterRemovedFromShadowTreeEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment13DidRenameSlotERKN3WTF12AtomicStringERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14SlotAssignment21DidRemoveSlotInternalERNS_15HTMLSlotElementERKN3WTF12AtomicStringENS0_16SlotMutationTypeE(%"class.blink::SlotAssignment"* %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %2, %"class.WTF::AtomicString"* dereferenceable(8) %1, i32 1)
  tail call void @_ZN5blink14SlotAssignment18DidAddSlotInternalERNS_15HTMLSlotElementE(%"class.blink::SlotAssignment"* %0, %"class.blink::HTMLSlotElement"* dereferenceable(192) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment26DidChangeHostChildSlotNameERKN3WTF12AtomicStringES4_(%"class.blink::SlotAssignment"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink15HTMLSlotElement17NormalizeSlotNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %1) #6
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %12, i64 0, i32 1
  %14 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::TreeScope"* dereferenceable(104) %13) #6
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #6
  br label %30

30:                                               ; preds = %3, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %31 = icmp eq %"class.blink::HTMLSlotElement"* %14, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %30
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* nonnull %14, i32 0) #6
  br label %33

33:                                               ; preds = %30, %32
  %34 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = call %"class.WTF::StringImpl"* @_ZN5blink15HTMLSlotElement17NormalizeSlotNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %2) #6
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %9, align 8
  %38 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %39 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %38, i64 0, i32 1
  %40 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %37, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::TreeScope"* dereferenceable(104) %39) #6
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #6
  br label %56

56:                                               ; preds = %33, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  %57 = icmp eq %"class.blink::HTMLSlotElement"* %40, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %56
  call void @_ZN5blink15HTMLSlotElement13DidSlotChangeENS_14SlotChangeTypeE(%"class.blink::HTMLSlotElement"* nonnull %40, i32 0) #6
  br label %59

59:                                               ; preds = %56, %58
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink15HTMLSlotElement17NormalizeSlotNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignmentC2ERNS_10ShadowRootE(%"class.blink::SlotAssignment"* nocapture, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SlotAssignment"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #6
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm(i64 24) #6
  %5 = bitcast i8* %4 to %"class.blink::TreeOrderedMap"*
  tail call void @_ZN5blink14TreeOrderedMapC1Ev(%"class.blink::TreeOrderedMap"* %5) #6
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.blink::TreeOrderedMap"** %10 to i8**
  store i8* %4, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ShadowRoot"* %1, %"class.blink::ShadowRoot"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5
  %17 = bitcast %"class.blink::HeapHashSet.127"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #6
  ret void
}

declare dereferenceable(24) %"class.blink::SlotAssignmentEngine"* @_ZN5blink8Document23GetSlotAssignmentEngineEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink20SlotAssignmentEngine26AddShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapHashSet.127", align 8
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::HeapHashSet.127", align 8
  %6 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %460, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %12, i64 0, i32 1, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 149
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %19 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %18, i64 0, i32 1, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %20) #6
  %22 = icmp eq %"class.blink::AXObjectCache"* %21, null
  br i1 %22, label %48, label %23

23:                                               ; preds = %10
  %24 = load i32, i32* %6, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"* %0) #6
  br label %28

28:                                               ; preds = %23, %27
  %29 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Member"*, %"class.blink::Member"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.blink::AXObjectCache"* %21 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  br label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.blink::Member"* [ %30, %36 ], [ %46, %38 ]
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %37, align 8
  %44 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %43, i64 11
  %45 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %44, align 8
  tail call void %45(%"class.blink::AXObjectCache"* nonnull %21, %"class.blink::Node"* %42) #6
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 1
  %47 = icmp eq %"class.blink::Member"* %46, %34
  br i1 %47, label %48, label %38

48:                                               ; preds = %38, %28, %10
  %49 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %50 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %49, i64 0, i32 1, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 150
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 4
  %55 = load i32, i32* %6, align 8
  %56 = and i32 %55, -3
  store i32 %56, i32* %6, align 8
  %57 = and i32 %55, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %48
  tail call void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"* %0) #6
  br label %60

60:                                               ; preds = %48, %59
  %61 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %71, %60
  %69 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %70 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %69) #6
  br i1 %70, label %89, label %77

71:                                               ; preds = %60, %71
  %72 = phi %"class.blink::Member"* [ %75, %71 ], [ %62, %60 ]
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %73, align 8
  tail call void @_ZN5blink15HTMLSlotElement18ClearAssignedNodesEv(%"class.blink::HTMLSlotElement"* %74) #6
  %75 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 1
  %76 = icmp eq %"class.blink::Member"* %75, %66
  br i1 %76, label %68, label %71

77:                                               ; preds = %68
  %78 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEv() #6
  %79 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %79, align 8
  %81 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %82 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %81, i64 0, i32 1
  %83 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %80, %"class.WTF::AtomicString"* dereferenceable(8) %78, %"class.blink::TreeScope"* dereferenceable(104) %82) #6
  %84 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEv() #6
  %85 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %79, align 8
  %86 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %87 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %86, i64 0, i32 1
  %88 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %85, %"class.WTF::AtomicString"* dereferenceable(8) %84, %"class.blink::TreeScope"* dereferenceable(104) %87) #6
  br label %89

89:                                               ; preds = %77, %68
  %90 = phi %"class.blink::HTMLSlotElement"* [ null, %68 ], [ %88, %77 ]
  %91 = phi %"class.blink::HTMLSlotElement"* [ null, %68 ], [ %83, %77 ]
  %92 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %93 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %92, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 1048576
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %299

97:                                               ; preds = %89
  %98 = bitcast %"class.blink::HeapHashSet.127"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #6
  %99 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %2, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %2, i64 0, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %2, i64 0, i32 0, i32 0, i32 2
  %102 = bitcast %"class.blink::HeapHashSet.127"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 20, i1 false) #6
  %103 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %92, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.blink::Node"** %103 to %"class.blink::Element"**
  %105 = load %"class.blink::Element"*, %"class.blink::Element"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %105, i64 0, i32 0, i32 0
  %107 = icmp eq %"class.blink::Element"* %105, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %105, i64 0, i32 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 1
  %115 = bitcast %"class.blink::Node"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::Node"** %3 to i8*
  %120 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %2, i64 0, i32 0, i32 0
  br label %134

121:                                              ; preds = %141, %108, %97, %113
  %122 = load i32, i32* %6, align 8
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"* %0) #6
  br label %126

126:                                              ; preds = %121, %125
  %127 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %128 = load i32, i32* %63, align 4
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %127, i64 %129
  %131 = icmp eq i32 %128, 0
  br i1 %131, label %146, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %2, i64 0, i32 0, i32 0
  br label %165

134:                                              ; preds = %118, %141
  %135 = phi i64 [ %116, %118 ], [ %144, %141 ]
  %136 = inttoptr i64 %135 to %"class.blink::Node"*
  %137 = call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %136) #6
  %138 = icmp eq %"class.blink::FlatTreeNodeData"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #6
  store %"class.blink::Node"* %136, %"class.blink::Node"** %3, align 8
  %140 = call { %"class.blink::Member.4"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.131"* nonnull %120, %"class.blink::Node"** nonnull dereferenceable(8) %3, %"class.blink::Node"** nonnull dereferenceable(8) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #6
  br label %141

141:                                              ; preds = %134, %139
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 0, i32 5, i32 0, i32 0
  %143 = bitcast %"class.blink::Node"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %121, label %134

146:                                              ; preds = %176, %126
  %147 = load i32, i32* %101, align 4
  %148 = icmp eq i32 %147, 0
  %149 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %99, align 8
  %150 = load i32, i32* %100, align 8
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %149, i64 %151
  br i1 %148, label %283, label %153

153:                                              ; preds = %146
  %154 = icmp eq i32 %150, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %153, %159
  %156 = phi %"class.blink::Member.4"* [ %160, %159 ], [ %149, %153 ]
  %157 = bitcast %"class.blink::Member.4"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  switch i64 %158, label %162 [
    i64 -1, label %159
    i64 0, label %159
  ]

159:                                              ; preds = %155, %155
  %160 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %156, i64 1
  %161 = icmp eq %"class.blink::Member.4"* %160, %152
  br i1 %161, label %283, label %155

162:                                              ; preds = %155, %153
  %163 = phi %"class.blink::Member.4"* [ %149, %153 ], [ %156, %155 ]
  %164 = icmp eq %"class.blink::Member.4"* %163, %152
  br i1 %164, label %283, label %284

165:                                              ; preds = %132, %176
  %166 = phi %"class.blink::Member"* [ %127, %132 ], [ %177, %176 ]
  %167 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %168, i64 0, i32 4, i32 0, i32 1, i32 0
  %170 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.38"* %169, i32 0) #6, !noalias !2
  %171 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %170, i64 0, i32 1
  %172 = load i32, i32* %171, align 4, !noalias !2
  %173 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.38"* %169, i32 %172) #6, !noalias !2
  %174 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.38"* %169, i32 0) #6, !noalias !5
  %175 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %173, %174
  br i1 %175, label %176, label %179

176:                                              ; preds = %278, %165
  %177 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %166, i64 1
  %178 = icmp eq %"class.blink::Member"* %177, %130
  br i1 %178, label %146, label %165

179:                                              ; preds = %165, %278
  %180 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %281, %278 ], [ %173, %165 ]
  %181 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %180, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.blink::Node"*, %"class.blink::Node"** %181, align 8
  %183 = icmp eq %"class.blink::Node"* %182, null
  br i1 %183, label %278, label %184

184:                                              ; preds = %179
  %185 = call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* nonnull %182) #6
  br i1 %185, label %186, label %278

186:                                              ; preds = %184
  %187 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %182) #6
  %188 = icmp eq %"class.blink::ContainerNode"* %187, null
  br i1 %188, label %196, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %187, i64 0, i32 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = and i32 %191, 12
  %193 = icmp eq i32 %192, 0
  %194 = bitcast %"class.blink::ContainerNode"* %187 to %"class.blink::Element"*
  %195 = select i1 %193, %"class.blink::Element"* %194, %"class.blink::Element"* null
  br label %196

196:                                              ; preds = %186, %189
  %197 = phi %"class.blink::Element"* [ %195, %189 ], [ null, %186 ]
  %198 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %199 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %198, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %200 = bitcast %"class.blink::Node"** %199 to %"class.blink::Element"**
  %201 = load %"class.blink::Element"*, %"class.blink::Element"** %200, align 8
  %202 = icmp eq %"class.blink::Element"* %197, %201
  br i1 %202, label %203, label %278

203:                                              ; preds = %196
  call void @_ZN5blink15HTMLSlotElement18AppendAssignedNodeERNS_4NodeE(%"class.blink::HTMLSlotElement"* %168, %"class.blink::Node"* nonnull dereferenceable(64) %182) #6
  %204 = ptrtoint %"class.blink::Node"* %182 to i64
  %205 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %99, align 8
  %206 = icmp eq %"class.blink::Member.4"* %205, null
  %207 = load i32, i32* %100, align 8
  br i1 %206, label %269, label %208

208:                                              ; preds = %203
  %209 = add i32 %207, -1
  %210 = zext i32 %209 to i64
  %211 = shl i64 %204, 32
  %212 = xor i64 %211, -1
  %213 = add i64 %212, %204
  %214 = lshr i64 %213, 22
  %215 = xor i64 %214, %213
  %216 = shl i64 %215, 13
  %217 = xor i64 %216, -1
  %218 = add i64 %215, %217
  %219 = lshr i64 %218, 8
  %220 = xor i64 %219, %218
  %221 = mul i64 %220, 9
  %222 = lshr i64 %221, 15
  %223 = xor i64 %222, %221
  %224 = shl i64 %223, 27
  %225 = xor i64 %224, -1
  %226 = add i64 %223, %225
  %227 = lshr i64 %226, 31
  %228 = xor i64 %227, %226
  %229 = trunc i64 %228 to i32
  %230 = and i32 %209, %229
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %205, i64 %231
  %233 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %232, i64 0, i32 0, i32 0
  %234 = load %"class.blink::Node"*, %"class.blink::Node"** %233, align 8
  %235 = icmp eq %"class.blink::Node"* %234, %182
  br i1 %235, label %264, label %236

236:                                              ; preds = %208
  %237 = xor i32 %229, -1
  %238 = lshr i32 %229, 23
  %239 = add i32 %238, %237
  %240 = shl i32 %239, 12
  %241 = xor i32 %240, %239
  %242 = lshr i32 %241, 7
  %243 = xor i32 %242, %241
  %244 = shl i32 %243, 2
  %245 = xor i32 %244, %243
  %246 = lshr i32 %245, 20
  %247 = xor i32 %246, %245
  %248 = or i32 %247, 1
  %249 = zext i32 %248 to i64
  br label %250

250:                                              ; preds = %255, %236
  %251 = phi %"class.blink::Node"* [ %234, %236 ], [ %262, %255 ]
  %252 = phi i64 [ %231, %236 ], [ %259, %255 ]
  %253 = phi i64 [ 0, %236 ], [ %257, %255 ]
  %254 = icmp eq %"class.blink::Node"* %251, null
  br i1 %254, label %269, label %255

255:                                              ; preds = %250
  %256 = icmp eq i64 %253, 0
  %257 = select i1 %256, i64 %249, i64 %253
  %258 = add i64 %257, %252
  %259 = and i64 %258, %210
  %260 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %205, i64 %259
  %261 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %260, i64 0, i32 0, i32 0
  %262 = load %"class.blink::Node"*, %"class.blink::Node"** %261, align 8
  %263 = icmp eq %"class.blink::Node"* %262, %182
  br i1 %263, label %264, label %250

264:                                              ; preds = %255, %208
  %265 = phi %"class.blink::Member.4"* [ %232, %208 ], [ %260, %255 ]
  %266 = icmp eq %"class.blink::Member.4"* %265, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = zext i32 %207 to i64
  br label %272

269:                                              ; preds = %250, %264, %203
  %270 = zext i32 %207 to i64
  %271 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %205, i64 %270
  br label %272

272:                                              ; preds = %269, %267
  %273 = phi i64 [ %268, %267 ], [ %270, %269 ]
  %274 = phi %"class.blink::Member.4"* [ %265, %267 ], [ %271, %269 ]
  %275 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %205, i64 %273
  %276 = icmp eq %"class.blink::Member.4"* %275, %274
  br i1 %276, label %278, label %277

277:                                              ; preds = %272
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.131"* nonnull %133, %"class.blink::Member.4"* %274) #6
  br label %278

278:                                              ; preds = %277, %272, %179, %196, %184
  %279 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %180, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.38"* %169, i32 %280) #6
  %282 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %281, %174
  br i1 %282, label %176, label %179

283:                                              ; preds = %159, %284, %297, %294, %146, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #6
  br label %364

284:                                              ; preds = %162, %297
  %285 = phi %"class.blink::Member.4"* [ %291, %297 ], [ %163, %162 ]
  %286 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.blink::Node"*, %"class.blink::Node"** %286, align 8
  call void @_ZN5blink4Node21ClearFlatTreeNodeDataEv(%"class.blink::Node"* %287) #6
  call void @_ZN5blink4Node19RemovedFromFlatTreeEv(%"class.blink::Node"* %287) #6
  %288 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %285, i64 1
  %289 = icmp eq %"class.blink::Member.4"* %288, %152
  br i1 %289, label %283, label %290

290:                                              ; preds = %284, %294
  %291 = phi %"class.blink::Member.4"* [ %295, %294 ], [ %288, %284 ]
  %292 = bitcast %"class.blink::Member.4"* %291 to i64*
  %293 = load i64, i64* %292, align 8
  switch i64 %293, label %297 [
    i64 -1, label %294
    i64 0, label %294
  ]

294:                                              ; preds = %290, %290
  %295 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %291, i64 1
  %296 = icmp eq %"class.blink::Member.4"* %295, %152
  br i1 %296, label %283, label %290

297:                                              ; preds = %290
  %298 = icmp eq %"class.blink::Member.4"* %291, %152
  br i1 %298, label %283, label %284

299:                                              ; preds = %89
  %300 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %92, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %301 = bitcast %"class.blink::Node"** %300 to %"class.blink::Element"**
  %302 = load %"class.blink::Element"*, %"class.blink::Element"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %302, i64 0, i32 0, i32 0
  %304 = icmp eq %"class.blink::Element"* %302, null
  br i1 %304, label %364, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %302, i64 0, i32 0, i32 0, i32 1
  %307 = load i32, i32* %306, align 8
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %364, label %310

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %303, i64 1
  %312 = bitcast %"class.blink::Node"* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %364, label %315

315:                                              ; preds = %310
  %316 = icmp eq %"class.blink::HTMLSlotElement"* %90, null
  %317 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %318 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %319 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  br label %320

320:                                              ; preds = %315, %359
  %321 = phi i64 [ %313, %315 ], [ %362, %359 ]
  %322 = inttoptr i64 %321 to %"class.blink::Node"*
  %323 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %322, i64 0, i32 1
  %324 = load i32, i32* %323, align 8
  %325 = and i32 %324, 8
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %359

327:                                              ; preds = %320
  br i1 %70, label %328, label %350

328:                                              ; preds = %327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #6
  %329 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"* nonnull %322) #6
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %318, align 8
  %330 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %319, align 8
  %331 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %332 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %331, i64 0, i32 1
  %333 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %330, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::TreeScope"* dereferenceable(104) %332) #6
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #6
  br label %349

349:                                              ; preds = %328, %345, %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #6
  br label %353

350:                                              ; preds = %327
  br i1 %316, label %353, label %351

351:                                              ; preds = %350
  %352 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ShouldAssignToCustomSlotERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %322)
  br i1 %352, label %356, label %353

353:                                              ; preds = %351, %350, %349
  %354 = phi %"class.blink::HTMLSlotElement"* [ %333, %349 ], [ %91, %350 ], [ %91, %351 ]
  %355 = icmp eq %"class.blink::HTMLSlotElement"* %354, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %351, %353
  %357 = phi %"class.blink::HTMLSlotElement"* [ %354, %353 ], [ %90, %351 ]
  call void @_ZN5blink15HTMLSlotElement18AppendAssignedNodeERNS_4NodeE(%"class.blink::HTMLSlotElement"* nonnull %357, %"class.blink::Node"* nonnull dereferenceable(64) %322) #6
  br label %359

358:                                              ; preds = %353
  call void @_ZN5blink4Node21ClearFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %322) #6
  call void @_ZN5blink4Node19RemovedFromFlatTreeEv(%"class.blink::Node"* nonnull %322) #6
  br label %359

359:                                              ; preds = %356, %358, %320
  %360 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %322, i64 0, i32 5, i32 0, i32 0
  %361 = bitcast %"class.blink::Node"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %320

364:                                              ; preds = %359, %305, %299, %310, %283
  %365 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %366 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %365, i64 0, i32 0, i32 0, i32 0, i32 1
  %367 = load i32, i32* %366, align 8
  %368 = and i32 %367, 256
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %365, i64 0, i32 1, i32 2, i32 0, i32 0
  %372 = load %"class.blink::Document"*, %"class.blink::Document"** %371, align 8
  %373 = call dereferenceable(24) %"class.blink::SlotAssignmentEngine"* @_ZN5blink8Document23GetSlotAssignmentEngineEv(%"class.blink::Document"* %372) #6
  %374 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  call void @_ZN5blink20SlotAssignmentEngine29RemoveShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"* %373, %"class.blink::ShadowRoot"* dereferenceable(208) %374) #6
  br label %375

375:                                              ; preds = %364, %370
  %376 = load i32, i32* %6, align 8
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %380, label %379

379:                                              ; preds = %375
  call void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"* %0) #6
  br label %380

380:                                              ; preds = %375, %379
  %381 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %382 = load i32, i32* %63, align 4
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %381, i64 %383
  %385 = icmp eq i32 %382, 0
  br i1 %385, label %386, label %396

386:                                              ; preds = %404, %380
  %387 = load i32, i32* %52, align 4
  %388 = add i32 %387, -1
  store i32 %388, i32* %52, align 4
  %389 = load i32, i32* %15, align 4
  %390 = add i32 %389, -1
  store i32 %390, i32* %15, align 4
  %391 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %392 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %391, i64 0, i32 4
  %393 = load i32, i32* %392, align 8
  %394 = and i32 %393, 8388608
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %423, label %407

396:                                              ; preds = %380, %404
  %397 = phi %"class.blink::Member"* [ %405, %404 ], [ %381, %380 ]
  %398 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %397, i64 0, i32 0, i32 0
  %399 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %398, align 8
  %400 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %401 = call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities45NearestLockedInclusiveAncestorWithinTreeScopeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %400) #6
  %402 = icmp eq %"class.blink::Element"* %401, null
  call void @_ZN5blink15HTMLSlotElement38UpdateFlatTreeNodeDataForAssignedNodesEv(%"class.blink::HTMLSlotElement"* %399) #6
  call void @_ZN5blink15HTMLSlotElement22RecalcFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"* %399) #6
  br i1 %402, label %404, label %403

403:                                              ; preds = %396
  call void @_ZN5blink15HTMLSlotElement50DetachDisplayLockedAssignedNodesLayoutTreeIfNeededEv(%"class.blink::HTMLSlotElement"* %399) #6
  br label %404

404:                                              ; preds = %396, %403
  %405 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %397, i64 1
  %406 = icmp eq %"class.blink::Member"* %405, %384
  br i1 %406, label %386, label %396

407:                                              ; preds = %386
  %408 = and i32 %393, -8388609
  store i32 %408, i32* %392, align 8
  %409 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %11, align 8
  %410 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %409, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %411 = bitcast %"class.blink::Node"** %410 to %"class.blink::Element"**
  %412 = load %"class.blink::Element"*, %"class.blink::Element"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %412, i64 0, i32 0, i32 0, i32 1
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 48
  %416 = icmp ne i32 %415, 0
  %417 = icmp eq %"class.blink::Element"* %412, null
  %418 = or i1 %417, %416
  br i1 %418, label %423, label %419

419:                                              ; preds = %407
  %420 = bitcast %"class.blink::Element"* %412 to %"class.blink::HTMLElement"*
  %421 = and i32 %414, 134217728
  %422 = icmp ne i32 %421, 0
  call void @_ZN5blink11HTMLElement35UpdateDescendantHasDirAutoAttributeEb(%"class.blink::HTMLElement"* nonnull %420, i1 zeroext %422) #6
  br label %423

423:                                              ; preds = %386, %419, %407
  %424 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5
  %425 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %5, i64 0, i32 0, i32 0, i32 1
  %426 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %5, i64 0, i32 0, i32 0, i32 2
  %427 = getelementptr inbounds %"class.blink::HeapHashSet.127", %"class.blink::HeapHashSet.127"* %5, i64 0, i32 0, i32 0, i32 3
  %428 = bitcast %"class.blink::HeapHashSet.127"* %424 to i64*
  %429 = bitcast %"class.blink::HeapHashSet.127"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %429, i8 0, i64 20, i1 false) #6
  %430 = load i64, i64* %428, align 8
  %431 = bitcast %"class.blink::HeapHashSet.127"* %5 to i64*
  store atomic i64 0, i64* %428 monotonic, align 8
  store atomic i64 %430, i64* %431 monotonic, align 8
  %432 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %437, label %434

434:                                              ; preds = %423
  %435 = inttoptr i64 %430 to i8*
  %436 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %435) #6
  br label %437

437:                                              ; preds = %434, %423
  %438 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %444, label %440

440:                                              ; preds = %437
  %441 = bitcast %"class.blink::HeapHashSet.127"* %424 to i8**
  %442 = load i8*, i8** %441, align 8
  %443 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %442) #6
  br label %444

444:                                              ; preds = %437, %440
  %445 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %446 = load i32, i32* %425, align 8
  %447 = load i32, i32* %445, align 4
  store i32 %447, i32* %425, align 8
  store i32 %446, i32* %445, align 4
  %448 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %449 = load i32, i32* %426, align 4
  %450 = load i32, i32* %448, align 4
  store i32 %450, i32* %426, align 4
  store i32 %449, i32* %448, align 4
  %451 = load i32, i32* %427, align 8
  %452 = and i32 %451, 2147483647
  %453 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5, i32 0, i32 0, i32 3
  %454 = load i32, i32* %453, align 8
  %455 = and i32 %454, 2147483647
  %456 = and i32 %451, -2147483648
  %457 = or i32 %455, %456
  store i32 %457, i32* %427, align 8
  %458 = and i32 %454, -2147483648
  %459 = or i32 %458, %452
  store i32 %459, i32* %453, align 8
  call void @_ZN5blink11HTMLElement36AdjustCandidateDirectionalityForSlotENS_11HeapHashSetINS_6MemberINS_4NodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEE(%"class.blink::HeapHashSet.127"* nonnull %5) #6
  br label %460

460:                                              ; preds = %1, %444
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector"* @_ZN5blink14SlotAssignment5SlotsEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"* %0)
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0
  ret %"class.blink::HeapVector"* %8
}

declare zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEv() local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEv() local_unnamed_addr #2

declare %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement18AppendAssignedNodeERNS_4NodeE(%"class.blink::HTMLSlotElement"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink4Node21ClearFlatTreeNodeDataEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink4Node19RemovedFromFlatTreeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ShouldAssignToCustomSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) unnamed_addr #0 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #6
  %3 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 60
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.4"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %9
  %23 = tail call zeroext i1 @_ZN5blink18HTMLDetailsElement14IsFirstSummaryERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #6
  br label %70

24:                                               ; preds = %4, %1, %9
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #6
  %26 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 60
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %47

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %38 = bitcast %"class.blink::Member.4"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %32
  %46 = tail call zeroext i1 @_ZN5blink17HTMLSelectElement21CanAssignToSelectSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #6
  br label %70

47:                                               ; preds = %27, %24, %32
  %48 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #6
  %49 = icmp eq %"class.blink::ContainerNode"* %48, null
  br i1 %49, label %70, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %48, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 60
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %48, i64 0, i32 0
  %57 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 1, i32 2
  %61 = bitcast %"class.blink::Member.4"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = tail call zeroext i1 @_ZN5blink19HTMLOptGroupElement23CanAssignToOptGroupSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #6
  br label %70

70:                                               ; preds = %50, %47, %55, %68, %45, %22
  %71 = phi i1 [ %23, %22 ], [ %46, %45 ], [ %69, %68 ], [ false, %55 ], [ false, %50 ], [ false, %47 ]
  ret i1 %71
}

declare void @_ZN5blink20SlotAssignmentEngine29RemoveShadowRootNeedingRecalcERNS_10ShadowRootE(%"class.blink::SlotAssignmentEngine"*, %"class.blink::ShadowRoot"* dereferenceable(208)) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities45NearestLockedInclusiveAncestorWithinTreeScopeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement35UpdateDescendantHasDirAutoAttributeEb(%"class.blink::HTMLElement"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement36AdjustCandidateDirectionalityForSlotENS_11HeapHashSetINS_6MemberINS_4NodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEE(%"class.blink::HeapHashSet.127"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SlotAssignment12CollectSlotsEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HTMLSlotElement"*, align 8
  %3 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.blink::SlotAssignment"* %0 to i8**
  br i1 %10, label %16, label %12

12:                                               ; preds = %7
  %13 = load i8*, i8** %11, align 8
  %14 = zext i32 %9 to i64
  %15 = shl nuw nsw i64 %14, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %15) #6
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %12, %7
  %17 = load i8*, i8** %11, align 8
  %18 = bitcast %"class.blink::SlotAssignment"* %0 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %17) #6
  br label %19

19:                                               ; preds = %1, %16
  %20 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = lshr i32 %21, 2
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %3, i32 %22)
  %23 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = icmp eq %"class.blink::ShadowRoot"* %24, null
  br i1 %26, label %85, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %75, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1
  %34 = bitcast %"class.blink::Node"* %33 to %"class.blink::Node"**
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %75, label %37

37:                                               ; preds = %32
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %72, %37
  %41 = phi %"class.blink::Node"* [ %35, %37 ], [ %73, %72 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 48
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %40
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 2
  %49 = bitcast %"class.blink::Member.4"* %48 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %75, label %56

56:                                               ; preds = %46, %40
  %57 = and i32 %43, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1
  %61 = bitcast %"class.blink::Node"* %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %72

64:                                               ; preds = %59, %56
  %65 = icmp eq %"class.blink::Node"* %41, %25
  br i1 %65, label %75, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %41, %"class.blink::Node"* nonnull %25) #6
  br label %72

72:                                               ; preds = %70, %66, %59
  %73 = phi %"class.blink::Node"* [ %71, %70 ], [ %68, %66 ], [ %62, %59 ]
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %75, label %40

75:                                               ; preds = %46, %64, %72, %27, %32
  %76 = phi %"class.blink::Node"* [ null, %32 ], [ null, %27 ], [ null, %64 ], [ %41, %46 ], [ null, %72 ]
  %77 = icmp eq %"class.blink::Node"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::HTMLSlotElement"** %2 to i8*
  %80 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %81 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %83 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.blink::HTMLSlotElement"** %2 to %"class.blink::Node"**
  br label %88

85:                                               ; preds = %113, %119, %156, %148, %19, %75
  %86 = load i32, i32* %20, align 8
  %87 = and i32 %86, -2
  store i32 %87, i32* %20, align 8
  ret void

88:                                               ; preds = %130, %78
  %89 = phi %"class.blink::Node"* [ %76, %78 ], [ %125, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #6
  store %"class.blink::Node"* %89, %"class.blink::Node"** %84, align 8
  %90 = load i32, i32* %80, align 4
  %91 = load i32, i32* %4, align 8
  %92 = icmp eq i32 %90, %91
  br i1 %92, label %107, label %93, !prof !8

93:                                               ; preds = %88
  %94 = ptrtoint %"class.blink::Node"* %89 to i64
  %95 = load %"class.blink::Member"*, %"class.blink::Member"** %81, align 8
  %96 = zext i32 %90 to i64
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %95, i64 %96
  %98 = bitcast %"class.blink::Member"* %97 to i64*
  store atomic i64 %94, i64* %98 monotonic, align 8
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %93
  %102 = bitcast %"class.blink::Node"* %89 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #6
  br label %104

104:                                              ; preds = %101, %93
  %105 = load i32, i32* %80, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %80, align 4
  br label %108

107:                                              ; preds = %88
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* %3, %"class.blink::HTMLSlotElement"** nonnull dereferenceable(8) %2) #6
  br label %108

108:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #6
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %89, i64 1
  %110 = bitcast %"class.blink::Node"* %109 to %"class.blink::Node"**
  %111 = load %"class.blink::Node"*, %"class.blink::Node"** %110, align 8
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %113, label %122

113:                                              ; preds = %108
  %114 = icmp eq %"class.blink::Node"* %89, %25
  br i1 %114, label %85, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %89, i64 0, i32 5, i32 0, i32 0
  %117 = load %"class.blink::Node"*, %"class.blink::Node"** %116, align 8
  %118 = icmp eq %"class.blink::Node"* %117, null
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %89, %"class.blink::Node"* %25) #6
  %121 = icmp eq %"class.blink::Node"* %120, null
  br i1 %121, label %85, label %122

122:                                              ; preds = %119, %115, %108
  %123 = phi %"class.blink::Node"* [ %111, %108 ], [ %117, %115 ], [ %120, %119 ]
  br label %124

124:                                              ; preds = %122, %156
  %125 = phi %"class.blink::Node"* [ %157, %156 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 48
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %140

130:                                              ; preds = %124
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 1, i32 2
  %133 = bitcast %"class.blink::Member.4"* %132 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %136, %138
  br i1 %139, label %88, label %140

140:                                              ; preds = %130, %124
  %141 = and i32 %127, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 1
  %145 = bitcast %"class.blink::Node"* %144 to %"class.blink::Node"**
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %147 = icmp eq %"class.blink::Node"* %146, null
  br i1 %147, label %148, label %156

148:                                              ; preds = %143, %140
  %149 = icmp eq %"class.blink::Node"* %125, %25
  br i1 %149, label %85, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 5, i32 0, i32 0
  %152 = load %"class.blink::Node"*, %"class.blink::Node"** %151, align 8
  %153 = icmp eq %"class.blink::Node"* %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %150
  %155 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %125, %"class.blink::Node"* %25) #6
  br label %156

156:                                              ; preds = %154, %150, %143
  %157 = phi %"class.blink::Node"* [ %155, %154 ], [ %152, %150 ], [ %146, %143 ]
  %158 = icmp eq %"class.blink::Node"* %157, null
  br i1 %158, label %85, label %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink14SlotAssignment8FindSlotERKNS_4NodeE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %87

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink10ShadowRoot31SupportsNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %10) #6
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEv() #6
  %14 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %14, align 8
  %16 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %17 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %16, i64 0, i32 1
  %18 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::TreeScope"* dereferenceable(104) %17) #6
  %19 = icmp eq %"class.blink::HTMLSlotElement"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ShouldAssignToCustomSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1) #6
  br i1 %21, label %87, label %22

22:                                               ; preds = %20, %12
  %23 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEv() #6
  %24 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %14, align 8
  %25 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %25, i64 0, i32 1
  %27 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %23, %"class.blink::TreeScope"* dereferenceable(104) %26) #6
  br label %87

28:                                               ; preds = %8
  %29 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %30 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 1048576
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %62

34:                                               ; preds = %28
  %35 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink4Node20ManuallyAssignedSlotEv(%"class.blink::Node"* %1) #6
  %36 = icmp eq %"class.blink::HTMLSlotElement"* %35, null
  br i1 %36, label %61, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %38) #6
  %40 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %41 = icmp eq %"class.blink::ShadowRoot"* %39, %40
  br i1 %41, label %42, label %61

42:                                               ; preds = %37
  %43 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %1) #6
  br i1 %43, label %44, label %61

44:                                               ; preds = %42
  %45 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #6
  %46 = icmp eq %"class.blink::ContainerNode"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %45, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 12
  %51 = icmp eq i32 %50, 0
  %52 = bitcast %"class.blink::ContainerNode"* %45 to %"class.blink::Element"*
  %53 = select i1 %51, %"class.blink::Element"* %52, %"class.blink::Element"* null
  br label %54

54:                                               ; preds = %47, %44
  %55 = phi %"class.blink::Element"* [ %53, %47 ], [ null, %44 ]
  %56 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %57 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %56, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.blink::Node"** %57 to %"class.blink::Element"**
  %59 = load %"class.blink::Element"*, %"class.blink::Element"** %58, align 8
  %60 = icmp eq %"class.blink::Element"* %55, %59
  br i1 %60, label %87, label %61

61:                                               ; preds = %54, %42, %37, %34
  br label %87

62:                                               ; preds = %28
  %63 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #6
  %64 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node8SlotNameEv(%"class.blink::Node"* %1) #6
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %66, align 8
  %68 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %9, align 8
  %69 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %68, i64 0, i32 1
  %70 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %67, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::TreeScope"* dereferenceable(104) %69) #6
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #6
  br label %86

86:                                               ; preds = %62, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #6
  br label %87

87:                                               ; preds = %61, %54, %22, %20, %2, %86
  %88 = phi %"class.blink::HTMLSlotElement"* [ %70, %86 ], [ null, %2 ], [ %27, %22 ], [ %18, %20 ], [ %35, %54 ], [ null, %61 ]
  ret %"class.blink::HTMLSlotElement"* %88
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZNK5blink14SlotAssignment25FindSlotInUserAgentShadowERKNS_4NodeE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement29UserAgentCustomAssignSlotNameEv() #6
  %4 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %7, i64 0, i32 1
  %9 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.blink::TreeScope"* dereferenceable(104) %8) #6
  %10 = icmp eq %"class.blink::HTMLSlotElement"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124ShouldAssignToCustomSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1)
  br i1 %12, label %19, label %13

13:                                               ; preds = %2, %11
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15HTMLSlotElement24UserAgentDefaultSlotNameEv() #6
  %15 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %4, align 8
  %16 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %6, align 8
  %17 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %16, i64 0, i32 1
  %18 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %14, %"class.blink::TreeScope"* dereferenceable(104) %17) #6
  br label %19

19:                                               ; preds = %11, %13
  %20 = phi %"class.blink::HTMLSlotElement"* [ %18, %13 ], [ %9, %11 ]
  ret %"class.blink::HTMLSlotElement"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink14SlotAssignment24FindSlotInManualSlottingERNS_4NodeE(%"class.blink::SlotAssignment"* nocapture readonly, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink4Node20ManuallyAssignedSlotEv(%"class.blink::Node"* %1) #6
  %4 = icmp eq %"class.blink::HTMLSlotElement"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %6) #6
  %8 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %8, align 8
  %10 = icmp eq %"class.blink::ShadowRoot"* %7, %9
  br i1 %10, label %11, label %30

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %1) #6
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #6
  %15 = icmp eq %"class.blink::ContainerNode"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  %21 = bitcast %"class.blink::ContainerNode"* %14 to %"class.blink::Element"*
  %22 = select i1 %20, %"class.blink::Element"* %21, %"class.blink::Element"* null
  br label %23

23:                                               ; preds = %13, %16
  %24 = phi %"class.blink::Element"* [ %22, %16 ], [ null, %13 ]
  %25 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %8, align 8
  %26 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %25, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.blink::Node"** %26 to %"class.blink::Element"**
  %28 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %29 = icmp eq %"class.blink::Element"* %24, %28
  br i1 %29, label %31, label %30

30:                                               ; preds = %2, %23, %11, %5
  br label %31

31:                                               ; preds = %23, %30
  %32 = phi %"class.blink::HTMLSlotElement"* [ null, %30 ], [ %3, %23 ]
  ret %"class.blink::HTMLSlotElement"* %32
}

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink14TreeOrderedMap13GetSlotByNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #2

declare %"class.blink::HTMLSlotElement"* @_ZN5blink4Node20ManuallyAssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15HTMLSlotElementEEEEEmm(i64 %11) #6
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #6
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #6
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #6
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !8

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #6
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !10
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #6
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare %"class.blink::Element"* @_ZN5blink14TreeOrderedMap45GetCachedFirstElementWithoutAccessingNodeTreeERKN3WTF12AtomicStringE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SlotAssignment5TraceEPNS_7VisitorE(%"class.blink::SlotAssignment"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SlotAssignment"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::SlotAssignment"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #6
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::Member.43"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv) #6
  br label %28

28:                                               ; preds = %17, %22
  %29 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::WeakMember"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = inttoptr i64 %31 to i8*
  %35 = bitcast %"class.blink::WeakMember"* %29 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %37, i64 6
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %34, i8* %35, i8* %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_10ShadowRootEEEvRKNS_14LivenessBrokerEPKv) #6
  br label %40

40:                                               ; preds = %28, %33
  %41 = getelementptr inbounds %"class.blink::SlotAssignment", %"class.blink::SlotAssignment"* %0, i64 0, i32 5
  %42 = bitcast %"class.blink::HeapHashSet.127"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = bitcast %"class.blink::HeapHashSet.127"* %41 to i8**
  %45 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %46 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %45, i64 11
  %47 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %46, align 8
  tail call void %47(%"class.blink::Visitor"* %1, i8** %44) #6
  %48 = icmp eq i64 %43, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %40
  %50 = inttoptr i64 %43 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #6
  br label %55

55:                                               ; preds = %40, %49
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8Document30ShouldScheduleLayoutTreeUpdateEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink8Document24ScheduleLayoutTreeUpdateEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement18ClearAssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18HTMLDetailsElement14IsFirstSummaryERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17HTMLSelectElement21CanAssignToSelectSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19HTMLOptGroupElement23CanAssignToOptGroupSlotERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement38UpdateFlatTreeNodeDataForAssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement22RecalcFlatTreeChildrenEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLSlotElement50DetachDisplayLockedAssignedNodesLayoutTreeIfNeededEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink14TreeOrderedMapC1Ev(%"class.blink::TreeOrderedMap"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14TreeOrderedMapEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TreeOrderedMap"*
  tail call void @_ZNK5blink14TreeOrderedMap5TraceEPNS_7VisitorE(%"class.blink::TreeOrderedMap"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink14TreeOrderedMap5TraceEPNS_7VisitorE(%"class.blink::TreeOrderedMap"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.4"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.131"*, %"class.blink::Node"** dereferenceable(8), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  %6 = icmp eq %"class.blink::Member.4"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.131"* %0, %"class.blink::Member.4"* null)
  %9 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.4"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.4"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.4"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"class.blink::Member.4"* %60, %"class.blink::Member.4"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.4"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.4"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #6
  %80 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.4"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %89 = ptrtoint %"class.blink::Node"* %88 to i64
  %90 = bitcast %"class.blink::Member.4"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Node"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #6
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.4"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #6
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.131"* %0, %"class.blink::Member.4"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.4"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.4"*, i8 } undef, %"class.blink::Member.4"* %117, 0
  %119 = insertvalue { %"class.blink::Member.4"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.4"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.131"*, %"class.blink::Member.4"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #6
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %23, i8* %24) #6
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #6
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.131"* %0, i32 %35, %"class.blink::Member.4"* %1, i8* nonnull dereferenceable(1) %4) #6
  %37 = load i8, i8* %4, align 1, !range !10
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #6
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.4"*
  %44 = call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.131"* %0, %"class.blink::Member.4"* %43, i32 %40, %"class.blink::Member.4"* %1) #6
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.4"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.4"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.131"*, i32, %"class.blink::Member.4"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #6
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !8

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #6
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !10
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %31, align 8
  %33 = icmp eq %"class.blink::Member.4"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.4"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #6
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #6
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.4"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.4"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.4"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.4"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.4"* %61, %"class.blink::Member.4"* %55
  %63 = bitcast %"class.blink::Member.4"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.4"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.4"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.131"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #6
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.4"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.131"* %0, %"class.blink::Member.4"* %42, i32 %1, %"class.blink::Member.4"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.4"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.4"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.4"* %87, %"class.blink::Member.4"* %82
  %89 = bitcast %"class.blink::Member.4"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.4"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.4"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.4"* %99, %"class.blink::Member.4"* %88
  %101 = bitcast %"class.blink::Member.4"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.4"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.4"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.4"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.131"*, %"class.blink::Member.4"*, i32, %"class.blink::Member.4"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.4"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.4"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.4"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #6
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.131"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.4"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #6
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.4"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.4"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #6
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.4"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.4"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.4"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.4"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.4"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Node"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.4"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.4"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.4"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.4"* %93, null
  %95 = ptrtoint %"class.blink::Member.4"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Node"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Node"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Node"* %99, inttoptr (i64 -1 to %"class.blink::Node"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.4"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.4"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.4"*, %"class.blink::Member.4"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.4"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.4"* %118, %"class.blink::Member.4"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.4"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.4"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.7, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([316 x i8], [316 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #6
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.4"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #6
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.4"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #6
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.38"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.131"*, %"class.blink::Member.4"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.4"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.131", %"class.WTF::HashTable.131"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #6
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !8

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #6
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !10
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #6
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.4"*
  %47 = tail call %"class.blink::Member.4"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.131"* %0, %"class.blink::Member.4"* %46, i32 %43, %"class.blink::Member.4"* null) #6
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #6
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #6
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15HTMLSlotElementEEEEEmm(i64 %14) #6
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #6
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !9

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #6
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #6
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #6
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15HTMLSlotElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.11, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15HTMLSlotElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #6
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLSlotElementEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15HTMLSlotElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLSlotElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSlotElement"*
  tail call void @_ZNK5blink15HTMLSlotElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSlotElement"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink15HTMLSlotElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSlotElement"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::HTMLSlotElement"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15HTMLSlotElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #6
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLSlotElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #6
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_10ShadowRootEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ShadowRoot"**
  %4 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %3, align 8
  %5 = ptrtoint %"class.blink::ShadowRoot"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !8

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %4, i64 -1, i32 4
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ShadowRoot"*
  tail call void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i8 0, i8 2}
