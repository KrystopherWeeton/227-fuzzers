; ModuleID = '../../gpu/command_buffer/service/external_semaphore.cc'
source_filename = "../../gpu/command_buffer/service/external_semaphore.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::ExternalSemaphore" = type <{ %"class.viz::VulkanContextProvider"*, %struct.VkSemaphore_T*, %"class.gpu::SemaphoreHandle", i32, [4 x i8] }>
%"class.viz::VulkanContextProvider" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::SemaphoreHandle" = type { i32, [4 x i8], %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.gpu::VulkanImplementation" = type <{ i32 (...)**, i8, i8, [6 x i8] }>
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.5", %"class.gpu::VulkanFunctionPointers::VulkanFunction.6", %"class.gpu::VulkanFunctionPointers::VulkanFunction.7", %"class.gpu::VulkanFunctionPointers::VulkanFunction.8", %"class.gpu::VulkanFunctionPointers::VulkanFunction.9", %"class.gpu::VulkanFunctionPointers::VulkanFunction.10", %"class.gpu::VulkanFunctionPointers::VulkanFunction.11", %"class.gpu::VulkanFunctionPointers::VulkanFunction.12", %"class.gpu::VulkanFunctionPointers::VulkanFunction.13", %"class.gpu::VulkanFunctionPointers::VulkanFunction.14", %"class.gpu::VulkanFunctionPointers::VulkanFunction.15", %"class.gpu::VulkanFunctionPointers::VulkanFunction.16", %"class.gpu::VulkanFunctionPointers::VulkanFunction.17", %"class.gpu::VulkanFunctionPointers::VulkanFunction.18", %"class.gpu::VulkanFunctionPointers::VulkanFunction.19", %"class.gpu::VulkanFunctionPointers::VulkanFunction.20", %"class.gpu::VulkanFunctionPointers::VulkanFunction.21", %"class.gpu::VulkanFunctionPointers::VulkanFunction.22", %"class.gpu::VulkanFunctionPointers::VulkanFunction.23", %"class.gpu::VulkanFunctionPointers::VulkanFunction.24", %"class.gpu::VulkanFunctionPointers::VulkanFunction.25", %"class.gpu::VulkanFunctionPointers::VulkanFunction.26", %"class.gpu::VulkanFunctionPointers::VulkanFunction.27", %"class.gpu::VulkanFunctionPointers::VulkanFunction.28", %"class.gpu::VulkanFunctionPointers::VulkanFunction.29", %"class.gpu::VulkanFunctionPointers::VulkanFunction.30", %"class.gpu::VulkanFunctionPointers::VulkanFunction.31", %"class.gpu::VulkanFunctionPointers::VulkanFunction.32", %"class.gpu::VulkanFunctionPointers::VulkanFunction.33", %"class.gpu::VulkanFunctionPointers::VulkanFunction.34", %"class.gpu::VulkanFunctionPointers::VulkanFunction.35", %"class.gpu::VulkanFunctionPointers::VulkanFunction.36", %"class.gpu::VulkanFunctionPointers::VulkanFunction.37", %"class.gpu::VulkanFunctionPointers::VulkanFunction.38", %"class.gpu::VulkanFunctionPointers::VulkanFunction.39", %"class.gpu::VulkanFunctionPointers::VulkanFunction.40", %"class.gpu::VulkanFunctionPointers::VulkanFunction.41", %"class.gpu::VulkanFunctionPointers::VulkanFunction.42", %"class.gpu::VulkanFunctionPointers::VulkanFunction.43", %"class.gpu::VulkanFunctionPointers::VulkanFunction.44", %"class.gpu::VulkanFunctionPointers::VulkanFunction.45", %"class.gpu::VulkanFunctionPointers::VulkanFunction.46", %"class.gpu::VulkanFunctionPointers::VulkanFunction.47", %"class.gpu::VulkanFunctionPointers::VulkanFunction.48", %"class.gpu::VulkanFunctionPointers::VulkanFunction.49", %"class.gpu::VulkanFunctionPointers::VulkanFunction.50", %"class.gpu::VulkanFunctionPointers::VulkanFunction.51", %"class.gpu::VulkanFunctionPointers::VulkanFunction.52", %"class.gpu::VulkanFunctionPointers::VulkanFunction.53", %"class.gpu::VulkanFunctionPointers::VulkanFunction.54", %"class.gpu::VulkanFunctionPointers::VulkanFunction.55", %"class.gpu::VulkanFunctionPointers::VulkanFunction.56", %"class.gpu::VulkanFunctionPointers::VulkanFunction.57", %"class.gpu::VulkanFunctionPointers::VulkanFunction.58", %"class.gpu::VulkanFunctionPointers::VulkanFunction.59", %"class.gpu::VulkanFunctionPointers::VulkanFunction.60", %"class.gpu::VulkanFunctionPointers::VulkanFunction.61", %"class.gpu::VulkanFunctionPointers::VulkanFunction.62", %"class.gpu::VulkanFunctionPointers::VulkanFunction.63", %"class.gpu::VulkanFunctionPointers::VulkanFunction.64", %"class.gpu::VulkanFunctionPointers::VulkanFunction.65", %"class.gpu::VulkanFunctionPointers::VulkanFunction.66", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.68", %"class.gpu::VulkanFunctionPointers::VulkanFunction.69", %"class.gpu::VulkanFunctionPointers::VulkanFunction.70", %"class.gpu::VulkanFunctionPointers::VulkanFunction.71", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.73", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.5" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.6" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.7" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.8" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.9" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.10" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.11" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.12" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.13" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.14" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.15" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.16" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.17" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.18" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.19" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.20" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.21" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.22" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.23" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.24" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.25" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.26" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.27" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.28" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.29" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.30" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.31" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.32" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.33" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.34" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.35" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.36" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.37" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.38" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.39" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.40" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.41" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.42" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.43" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.44" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.45" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.46" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.47" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.48" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.49" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.50" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.51" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.52" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.53" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.54" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.55" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.56" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.57" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.58" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.59" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.60" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.61" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.62" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.63" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.64" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.65" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.66" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.67" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.68" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.69" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.70" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.71" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.73" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.72" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu17ExternalSemaphoreC1Ev = hidden unnamed_addr alias void (%"class.gpu::ExternalSemaphore"*), void (%"class.gpu::ExternalSemaphore"*)* @_ZN3gpu17ExternalSemaphoreC2Ev
@_ZN3gpu17ExternalSemaphoreC1EOS0_ = hidden unnamed_addr alias void (%"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"*), void (%"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"*)* @_ZN3gpu17ExternalSemaphoreC2EOS0_
@_ZN3gpu17ExternalSemaphoreC1EN4base7PassKeyIS0_EEPN3viz21VulkanContextProviderEP13VkSemaphore_TNS_15SemaphoreHandleE = hidden unnamed_addr alias void (%"class.gpu::ExternalSemaphore"*, %"class.viz::VulkanContextProvider"*, %struct.VkSemaphore_T*, %"class.gpu::SemaphoreHandle"*), void (%"class.gpu::ExternalSemaphore"*, %"class.viz::VulkanContextProvider"*, %struct.VkSemaphore_T*, %"class.gpu::SemaphoreHandle"*)* @_ZN3gpu17ExternalSemaphoreC2EN4base7PassKeyIS0_EEPN3viz21VulkanContextProviderEP13VkSemaphore_TNS_15SemaphoreHandleE
@_ZN3gpu17ExternalSemaphoreD1Ev = hidden unnamed_addr alias void (%"class.gpu::ExternalSemaphore"*), void (%"class.gpu::ExternalSemaphore"*)* @_ZN3gpu17ExternalSemaphoreD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphore6CreateEPN3viz21VulkanContextProviderE(%"class.gpu::ExternalSemaphore"* noalias sret, %"class.viz::VulkanContextProvider"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gpu::SemaphoreHandle", align 8
  %4 = alloca %"class.gpu::SemaphoreHandle", align 8
  %5 = bitcast %"class.viz::VulkanContextProvider"* %1 to %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)***
  %6 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %6, i64 1
  %8 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %7, align 8
  %9 = tail call %"class.gpu::VulkanImplementation"* %8(%"class.viz::VulkanContextProvider"* %1) #6
  %10 = bitcast %"class.viz::VulkanContextProvider"* %1 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %11 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %11, i64 2
  %13 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %12, align 8
  %14 = tail call %"class.gpu::VulkanDeviceQueue"* %13(%"class.viz::VulkanContextProvider"* %1) #6
  %15 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %14, i64 0, i32 5
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = bitcast %"class.gpu::VulkanImplementation"* %9 to %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)***
  %18 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)**, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)*** %17, align 8
  %19 = getelementptr inbounds %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)** %18, i64 10
  %20 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*)** %19, align 8
  %21 = tail call %struct.VkSemaphore_T* %20(%"class.gpu::VulkanImplementation"* %9, %struct.VkDevice_T* %16) #6
  %22 = icmp eq %struct.VkSemaphore_T* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %25 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #6
  tail call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %24) #6
  %26 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  br label %50

27:                                               ; preds = %2
  %28 = bitcast %"class.gpu::SemaphoreHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  %29 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %3, i64 0, i32 2, i32 1, i32 0
  %30 = bitcast %"class.gpu::VulkanImplementation"* %9 to void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)***
  %31 = bitcast %"class.gpu::SemaphoreHandle"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)**, void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)*** %30, align 8
  %33 = getelementptr inbounds void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)*, void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)** %32, i64 12
  %34 = load void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)*, void (%"class.gpu::SemaphoreHandle"*, %"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %struct.VkSemaphore_T*)** %33, align 8
  call void %34(%"class.gpu::SemaphoreHandle"* nonnull sret %3, %"class.gpu::VulkanImplementation"* %9, %struct.VkDevice_T* %16, %struct.VkSemaphore_T* nonnull %21) #6
  %35 = load i32, i32* %29, align 8
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %44

37:                                               ; preds = %27
  %38 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #6
  %39 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %38, i64 0, i32 66, i32 0
  %40 = load void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** %39, align 8
  call void %40(%struct.VkDevice_T* %16, %struct.VkSemaphore_T* nonnull %21, %struct.VkAllocationCallbacks* null) #6
  %41 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %42 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #6
  call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %41) #6
  %43 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %43, align 8
  br label %49

44:                                               ; preds = %27
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %4, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %3) #6
  %45 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 0
  store %"class.viz::VulkanContextProvider"* %1, %"class.viz::VulkanContextProvider"** %45, align 8
  %46 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  store %struct.VkSemaphore_T* %21, %struct.VkSemaphore_T** %46, align 8
  %47 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* %47, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %4) #6
  %48 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %48, align 8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %4) #6
  br label %49

49:                                               ; preds = %44, %37
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  br label %50

50:                                               ; preds = %49, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"*, %"class.gpu::SemaphoreHandle"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphore16CreateFromHandleEPN3viz21VulkanContextProviderENS_15SemaphoreHandleE(%"class.gpu::ExternalSemaphore"* noalias sret, %"class.viz::VulkanContextProvider"*, %"class.gpu::SemaphoreHandle"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gpu::SemaphoreHandle", align 8
  %5 = alloca %"class.gpu::SemaphoreHandle", align 8
  %6 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %2, i64 0, i32 2, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %11 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #6
  tail call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %10) #6
  %12 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 8
  br label %41

13:                                               ; preds = %3
  %14 = bitcast %"class.viz::VulkanContextProvider"* %1 to %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)***
  %15 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %15, i64 1
  %17 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %16, align 8
  %18 = tail call %"class.gpu::VulkanImplementation"* %17(%"class.viz::VulkanContextProvider"* %1) #6
  %19 = bitcast %"class.viz::VulkanContextProvider"* %1 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %20 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %20, i64 2
  %22 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %21, align 8
  %23 = tail call %"class.gpu::VulkanDeviceQueue"* %22(%"class.viz::VulkanContextProvider"* %1) #6
  %24 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %23, i64 0, i32 5
  %25 = load %struct.VkDevice_T*, %struct.VkDevice_T** %24, align 8
  call void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* nonnull sret %4, %"class.gpu::SemaphoreHandle"* %2) #6
  %26 = bitcast %"class.gpu::VulkanImplementation"* %18 to %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)***
  %27 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)**, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*** %26, align 8
  %28 = getelementptr inbounds %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)** %27, i64 11
  %29 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)** %28, align 8
  %30 = call %struct.VkSemaphore_T* %29(%"class.gpu::VulkanImplementation"* %18, %struct.VkDevice_T* %25, %"class.gpu::SemaphoreHandle"* nonnull %4) #6
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %4) #6
  %31 = icmp eq %struct.VkSemaphore_T* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %34 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #6
  call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %33) #6
  %35 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %35, align 8
  br label %41

36:                                               ; preds = %13
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %5, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %2) #6
  %37 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 0
  store %"class.viz::VulkanContextProvider"* %1, %"class.viz::VulkanContextProvider"** %37, align 8
  %38 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  store %struct.VkSemaphore_T* %30, %struct.VkSemaphore_T** %38, align 8
  %39 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* %39, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %5) #6
  %40 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %40, align 8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %5) #6
  br label %41

41:                                               ; preds = %32, %36, %9
  ret void
}

declare void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* sret, %"class.gpu::SemaphoreHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphoreC2Ev(%"class.gpu::ExternalSemaphore"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %3 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  tail call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %2) #6
  %4 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 8
  ret void
}

declare void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphoreC2EOS0_(%"class.gpu::ExternalSemaphore"*, %"class.gpu::ExternalSemaphore"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gpu::SemaphoreHandle", align 8
  %4 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %6 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  tail call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* %5) #6
  %7 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  tail call void @_ZN3gpu17ExternalSemaphore5ResetEv(%"class.gpu::ExternalSemaphore"* %0) #6
  %8 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.gpu::ExternalSemaphore"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  store i64 %9, i64* %10, align 8
  %12 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 1
  %13 = bitcast %struct.VkSemaphore_T** %4 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %struct.VkSemaphore_T** %12 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 2
  %18 = bitcast %"class.gpu::SemaphoreHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false) #6
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %3, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %5) #6
  %19 = call dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"* %5, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %17) #6
  %20 = call dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"* %17, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %3) #6
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  %21 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 3
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %7, align 4
  store i32 %22, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.gpu::ExternalSemaphore"* @_ZN3gpu17ExternalSemaphoreaSEOS0_(%"class.gpu::ExternalSemaphore"* returned, %"class.gpu::ExternalSemaphore"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gpu::SemaphoreHandle", align 8
  tail call void @_ZN3gpu17ExternalSemaphore5ResetEv(%"class.gpu::ExternalSemaphore"* %0)
  %4 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.gpu::ExternalSemaphore"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  store i64 %5, i64* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 1
  %10 = bitcast %struct.VkSemaphore_T** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %struct.VkSemaphore_T** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 2
  %16 = bitcast %"class.gpu::SemaphoreHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false) #6
  call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* nonnull %3, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %14) #6
  %17 = call dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"* %14, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %15) #6
  %18 = call dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"* %15, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %3) #6
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #6
  %19 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %1, i64 0, i32 3
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %19, align 4
  store i32 %21, i32* %20, align 4
  ret %"class.gpu::ExternalSemaphore"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphoreC2EN4base7PassKeyIS0_EEPN3viz21VulkanContextProviderEP13VkSemaphore_TNS_15SemaphoreHandleE(%"class.gpu::ExternalSemaphore"*, %"class.viz::VulkanContextProvider"*, %struct.VkSemaphore_T*, %"class.gpu::SemaphoreHandle"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 0
  store %"class.viz::VulkanContextProvider"* %1, %"class.viz::VulkanContextProvider"** %5, align 8
  %6 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  store %struct.VkSemaphore_T* %2, %struct.VkSemaphore_T** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  tail call void @_ZN3gpu15SemaphoreHandleC1EOS0_(%"class.gpu::SemaphoreHandle"* %7, %"class.gpu::SemaphoreHandle"* dereferenceable(24) %3) #6
  %8 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphoreD2Ev(%"class.gpu::ExternalSemaphore"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu17ExternalSemaphore5ResetEv(%"class.gpu::ExternalSemaphore"* %0)
  %2 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  tail call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17ExternalSemaphore5ResetEv(%"class.gpu::ExternalSemaphore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gpu::SemaphoreHandle", align 8
  %3 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  %4 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %3, align 8
  %5 = icmp eq %struct.VkSemaphore_T* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 0
  %8 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %7, align 8
  %9 = bitcast %"class.viz::VulkanContextProvider"* %8 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %10 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %10, i64 2
  %12 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %11, align 8
  %13 = tail call %"class.gpu::VulkanDeviceQueue"* %12(%"class.viz::VulkanContextProvider"* %8) #6
  %14 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %13, i64 0, i32 5
  %15 = load %struct.VkDevice_T*, %struct.VkDevice_T** %14, align 8
  %16 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %3, align 8
  %17 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #6
  %18 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %17, i64 0, i32 66, i32 0
  %19 = load void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)** %18, align 8
  tail call void %19(%struct.VkDevice_T* %15, %struct.VkSemaphore_T* %16, %struct.VkAllocationCallbacks* null) #6
  br label %20

20:                                               ; preds = %1, %6
  %21 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %41, label %24

24:                                               ; preds = %20
  %25 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %26 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %25, i64 0, i32 0
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #6
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to %"struct.gl::DriverGL"**
  %30 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %29, align 8
  %31 = icmp eq %"struct.gl::DriverGL"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %24
  %33 = bitcast i8* %27 to %"class.gl::GLApi"**
  %34 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %33, align 8
  %35 = icmp eq %"class.gl::GLApi"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.gl::GLApi"* %34 to void (%"class.gl::GLApi"*, i32, i32*)***
  %38 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %38, i64 93
  %40 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %39, align 8
  tail call void %40(%"class.gl::GLApi"* nonnull %34, i32 1, i32* %21) #6
  br label %41

41:                                               ; preds = %24, %36, %32, %20
  store i32 0, i32* %21, align 8
  %42 = bitcast %"class.gpu::SemaphoreHandle"* %2 to i8*
  %43 = bitcast %"class.gpu::ExternalSemaphore"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #6
  call void @_ZN3gpu15SemaphoreHandleC1Ev(%"class.gpu::SemaphoreHandle"* nonnull %2) #6
  %44 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  %45 = call dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"* %44, %"class.gpu::SemaphoreHandle"* nonnull dereferenceable(24) %2) #6
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #6
  ret void
}

declare dereferenceable(24) %"class.gpu::SemaphoreHandle"* @_ZN3gpu15SemaphoreHandleaSEOS0_(%"class.gpu::SemaphoreHandle"*, %"class.gpu::SemaphoreHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu17ExternalSemaphore14GetGLSemaphoreEv(%"class.gpu::ExternalSemaphore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedGeneric", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.gpu::SemaphoreHandle", align 8
  %5 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %46

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  call void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* nonnull sret %4, %"class.gpu::SemaphoreHandle"* %9) #6
  %10 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %4, i64 0, i32 2, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %4, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %43

17:                                               ; preds = %13
  %18 = bitcast %"class.base::ScopedGeneric"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8, !alias.scope !2
  store i32 -1, i32* %10, align 8, !noalias !2
  %22 = getelementptr inbounds %"class.gpu::SemaphoreHandle", %"class.gpu::SemaphoreHandle"* %4, i64 0, i32 2
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %22, i32 %11) #6, !noalias !2
  store i32 %11, i32* %20, align 8, !alias.scope !2
  store i8 0, i8* %21, align 4, !alias.scope !2
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %2, i32 %11) #6
  %23 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %24 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %23, i64 0, i32 0
  %25 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #6
  %26 = bitcast i8* %25 to %"class.gl::GLApi"**
  %27 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %26, align 8
  %28 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6
  store i32 -1431655766, i32* %3, align 4
  %29 = bitcast %"class.gl::GLApi"* %27 to void (%"class.gl::GLApi"*, i32, i32*)***
  %30 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %30, i64 155
  %32 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %31, align 8
  call void %32(%"class.gl::GLApi"* %27, i32 1, i32* nonnull %3) #6
  %33 = load i32, i32* %3, align 4
  %34 = load i32, i32* %20, align 8
  store i32 -1, i32* %20, align 8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %37, label %36

36:                                               ; preds = %17
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %2, i32 %34) #6
  br label %37

37:                                               ; preds = %36, %17
  %38 = bitcast %"class.gl::GLApi"* %27 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %39 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %39, i64 278
  %41 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %40, align 8
  call void %41(%"class.gl::GLApi"* %27, i32 %33, i32 38278, i32 %34) #6
  %42 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #6
  br label %43

43:                                               ; preds = %8, %13, %37
  %44 = phi i32 [ %42, %37 ], [ 0, %8 ], [ 0, %13 ]
  store i32 %44, i32* %5, align 8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %4) #6
  %45 = load i32, i32* %5, align 8
  br label %46

46:                                               ; preds = %43, %1
  %47 = phi i32 [ %45, %43 ], [ %6, %1 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.VkSemaphore_T* @_ZN3gpu17ExternalSemaphore14GetVkSemaphoreEv(%"class.gpu::ExternalSemaphore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gpu::SemaphoreHandle", align 8
  %3 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 1
  %4 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %3, align 8
  %5 = icmp eq %struct.VkSemaphore_T* %4, null
  br i1 %5, label %6, label %29

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 0
  %8 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %7, align 8
  %9 = bitcast %"class.viz::VulkanContextProvider"* %8 to %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)***
  %10 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %10, i64 1
  %12 = load %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanImplementation"* (%"class.viz::VulkanContextProvider"*)** %11, align 8
  %13 = tail call %"class.gpu::VulkanImplementation"* %12(%"class.viz::VulkanContextProvider"* %8) #6
  %14 = load %"class.viz::VulkanContextProvider"*, %"class.viz::VulkanContextProvider"** %7, align 8
  %15 = bitcast %"class.viz::VulkanContextProvider"* %14 to %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)***
  %16 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)**, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %16, i64 2
  %18 = load %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)*, %"class.gpu::VulkanDeviceQueue"* (%"class.viz::VulkanContextProvider"*)** %17, align 8
  %19 = tail call %"class.gpu::VulkanDeviceQueue"* %18(%"class.viz::VulkanContextProvider"* %14) #6
  %20 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %19, i64 0, i32 5
  %21 = load %struct.VkDevice_T*, %struct.VkDevice_T** %20, align 8
  %22 = getelementptr inbounds %"class.gpu::ExternalSemaphore", %"class.gpu::ExternalSemaphore"* %0, i64 0, i32 2
  call void @_ZNK3gpu15SemaphoreHandle9DuplicateEv(%"class.gpu::SemaphoreHandle"* nonnull sret %2, %"class.gpu::SemaphoreHandle"* %22) #6
  %23 = bitcast %"class.gpu::VulkanImplementation"* %13 to %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)***
  %24 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)**, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*** %23, align 8
  %25 = getelementptr inbounds %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)** %24, i64 11
  %26 = load %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)*, %struct.VkSemaphore_T* (%"class.gpu::VulkanImplementation"*, %struct.VkDevice_T*, %"class.gpu::SemaphoreHandle"*)** %25, align 8
  %27 = call %struct.VkSemaphore_T* %26(%"class.gpu::VulkanImplementation"* %13, %struct.VkDevice_T* %21, %"class.gpu::SemaphoreHandle"* nonnull %2) #6
  store %struct.VkSemaphore_T* %27, %struct.VkSemaphore_T** %3, align 8
  call void @_ZN3gpu15SemaphoreHandleD1Ev(%"class.gpu::SemaphoreHandle"* nonnull %2) #6
  %28 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %3, align 8
  br label %29

29:                                               ; preds = %6, %1
  %30 = phi %struct.VkSemaphore_T* [ %28, %6 ], [ %4, %1 ]
  ret %struct.VkSemaphore_T* %30
}

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #6
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #6
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #6
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #6
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #6
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #6
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #6
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #6
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #6
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #6
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #7
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #6
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #6
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #7
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #6
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gpu15SemaphoreHandle10TakeHandleEv: argument 0"}
!4 = distinct !{!4, !"_ZN3gpu15SemaphoreHandle10TakeHandleEv"}
!5 = !{i8 0, i8 2}
