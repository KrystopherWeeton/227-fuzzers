; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_fusion.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_fusion.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::LoopDependenceAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.996", %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.std::__1::basic_ostream"*, %"class.std::__1::list" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::vector.996" = type { %"class.std::__1::__vector_base.997" }
%"class.std::__1::__vector_base.997" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.998" }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1004" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::LoopFusion" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.939" = type { %"class.std::__1::__function::__policy_func.943" }
%"class.std::__1::__function::__policy_func.943" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.944", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.944" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::vector.954" = type { %"class.std::__1::__vector_base.955" }
%"class.std::__1::__vector_base.955" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.963" = type { %"class.std::__1::__function::__policy_func.967" }
%"class.std::__1::__function::__policy_func.967" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.968", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.968" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.692" = type { i8 }
%"class.spvtools::opt::SERecurrentNode" = type { %"class.spvtools::opt::SENode.base", %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"* }
%"class.spvtools::opt::SENode.base" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32 }>
%"class.spvtools::opt::SEConstantNode" = type { %"class.spvtools::opt::SENode.base", i64 }
%"struct.std::__1::__hash_node.1195" = type <{ %"struct.std::__1::__hash_node_base.922", i64, i32, [4 x i8] }>
%"class.std::__1::map.970" = type { %"class.std::__1::__tree.971" }
%"class.std::__1::__tree.971" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.972", %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__tree_node.1110" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1109" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1109" = type { %"struct.std::__1::pair.1107" }
%"struct.std::__1::pair.1107" = type { %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.945" }
%"struct.std::__1::pair" = type { %"class.std::__1::vector.945", %"class.std::__1::vector.945" }
%"struct.std::__1::__less.1255" = type { i8 }
%"class.std::__1::function.981" = type { %"class.std::__1::__function::__policy_func.985" }
%"class.std::__1::__function::__policy_func.985" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.986", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.986" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::set.988" = type { %"class.std::__1::__tree.989" }
%"class.std::__1::__tree.989" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.1009" = type { %"class.std::__1::__vector_base.1010" }
%"class.std::__1::__vector_base.1010" = type { %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"*, %"class.std::__1::__compressed_pair.1018" }
%"class.spvtools::opt::DistanceVector" = type { %"class.std::__1::vector.1011" }
%"class.std::__1::vector.1011" = type { %"class.std::__1::__vector_base.1012" }
%"class.std::__1::__vector_base.1012" = type { %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"*, %"class.std::__1::__compressed_pair.1013" }
%"class.spvtools::opt::DistanceEntry" = type { i32, i32, i64, i8, i8, i64, i64 }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.spvtools::opt::DistanceEntry"* }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.spvtools::opt::DistanceVector"* }
%"class.std::__1::__tree_node.1092" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1093" }
%"struct.std::__1::pair.1093" = type { %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1114" = type { %"class.std::__1::__tree_node_base.base", %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Constraint" = type { i32 (...)**, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1101" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1102" }
%"struct.std::__1::__value_type.1102" = type { %"struct.std::__1::pair.1103" }
%"struct.std::__1::pair.1103" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::SENode"* }
%"class.std::__1::tuple.1145" = type { %"struct.std::__1::__tuple_impl.1146" }
%"struct.std::__1::__tuple_impl.1146" = type { %"class.std::__1::__tuple_leaf.1147" }
%"class.std::__1::__tuple_leaf.1147" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1122" = type { i8 }
%"class.std::__1::tuple.1186" = type { %"struct.std::__1::__tuple_impl.1187" }
%"struct.std::__1::__tuple_impl.1187" = type { %"class.std::__1::__tuple_leaf.1188" }
%"class.std::__1::__tuple_leaf.1188" = type { i32* }
%"class.std::__1::function.1024" = type { %"class.std::__1::__function::__policy_func.1028" }
%"class.std::__1::__function::__policy_func.1028" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1029", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1029" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%class.anon.1033 = type { %"class.spvtools::opt::LoopFusion"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.1037", %"class.std::__1::vector.1061" }
%"class.std::__1::unordered_map.1037" = type { %"class.std::__1::__hash_table.1038" }
%"class.std::__1::__hash_table.1038" = type <{ %"class.std::__1::unique_ptr.1039", %"class.std::__1::__compressed_pair.1049", %"class.std::__1::__compressed_pair.1054", %"class.std::__1::__compressed_pair.1057", [4 x i8] }>
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041", %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"struct.std::__1::__hash_node_base.1042"** }
%"struct.std::__1::__hash_node_base.1042" = type { %"struct.std::__1::__hash_node_base.1042"* }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.std::__1::__bucket_list_deallocator.1044" }
%"class.std::__1::__bucket_list_deallocator.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"struct.std::__1::__hash_node_base.1042" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.1061" = type { %"class.std::__1::__vector_base.1062" }
%"class.std::__1::__vector_base.1062" = type { %"struct.std::__1::pair.1063"*, %"struct.std::__1::pair.1063"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1063" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.1064" }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1063"* }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::__1::function.1173" = type { %"class.std::__1::__function::__policy_func.1177" }
%"class.std::__1::__function::__policy_func.1177" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1178", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1178" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1077" }
%"struct.std::__1::pair.1077" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.std::__1::__hash_node.1081"* }
%"struct.std::__1::__hash_node.1081" = type { %"struct.std::__1::__hash_node_base.333", i64, %"struct.std::__1::__hash_value_type.1082" }
%"struct.std::__1::__hash_value_type.1082" = type { %"struct.std::__1::pair.1083" }
%"struct.std::__1::pair.1083" = type { i32, %"class.spvtools::opt::BasicBlock"* }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.std::__1::__hash_node_destructor.1164" }
%"class.std::__1::__hash_node_destructor.1164" = type <{ %"class.std::__1::allocator.343"*, i8, [7 x i8] }>
%"class.std::__1::allocator.343" = type { i8 }
%"class.std::__1::unique_ptr.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169", %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.std::__1::__hash_node.1084"* }
%"struct.std::__1::__hash_node.1084" = type { %"struct.std::__1::__hash_node_base.309", i64, %"struct.std::__1::__hash_value_type.1085" }
%"struct.std::__1::__hash_value_type.1085" = type { %"struct.std::__1::pair.1086" }
%"struct.std::__1::pair.1086" = type { i32, %"class.std::__1::vector.3" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.std::__1::__hash_node_destructor.1171" }
%"class.std::__1::__hash_node_destructor.1171" = type <{ %"class.std::__1::allocator.319"*, i8, [7 x i8] }>
%"class.std::__1::allocator.319" = type { i8 }
%class.anon.1179 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::CFG"* }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198", %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"struct.std::__1::__hash_node.1195"* }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.std::__1::__hash_node_destructor.1200" }
%"class.std::__1::__hash_node_destructor.1200" = type <{ %"class.std::__1::allocator.932"*, i8, [7 x i8] }>
%"class.std::__1::allocator.932" = type { i8 }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216", %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.std::__1::__hash_node.1210"* }
%"struct.std::__1::__hash_node.1210" = type { %"struct.std::__1::__hash_node_base.1042", i64, %"struct.std::__1::__hash_value_type.1209" }
%"struct.std::__1::__hash_value_type.1209" = type { %"struct.std::__1::pair.1208" }
%"struct.std::__1::pair.1208" = type { i32, %"class.spvtools::opt::Loop"* }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.std::__1::__hash_node_destructor.1218" }
%"class.std::__1::__hash_node_destructor.1218" = type <{ %"class.std::__1::allocator.1052"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1052" = type { i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.945"* }

$_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE = comdat any

$_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE = comdat any

$_ZN8spvtools3opt3CFG7AddEdgeEjj = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__14pairINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEES8_EC2IRS8_SB_Lb0EEEOT_OT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj = comdat any

$_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__118__set_intersectionIRNS_6__lessIPN8spvtools3opt11InstructionES5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESD_NS_20back_insert_iteratorINS_6vectorIS5_NS_9allocatorIS5_EEEEEEEET2_T0_SL_T1_SM_SK_T_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEEEaSERKS5_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@__const._ZN8spvtools3opt10LoopFusion7IsLegalEv.analysis = private unnamed_addr constant %"class.spvtools::opt::LoopDependenceAnalysis" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.std::__1::vector.996" { %"class.std::__1::__vector_base.997" { %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**), %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**), %"class.std::__1::__compressed_pair.998" { %"struct.std::__1::__compressed_pair_elem.999" { %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**) } } } }, %"class.spvtools::opt::ScalarEvolutionAnalysis" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.std::__1::map.641" { %"class.std::__1::__tree.642" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.643" { %"struct.std::__1::__compressed_pair_elem.85" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.647" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } }, %"class.spvtools::opt::SENode"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::SENode"*), %"class.std::__1::unordered_set.658" { %"class.std::__1::__hash_table.659" <{ %"class.std::__1::unique_ptr.660" { %"class.std::__1::__compressed_pair.661" { %"struct.std::__1::__compressed_pair_elem.662" { %"struct.std::__1::__hash_node_base.663"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.663"**) }, %"struct.std::__1::__compressed_pair_elem.664" { %"class.std::__1::__bucket_list_deallocator.665" { %"class.std::__1::__compressed_pair.666" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.670" { %"struct.std::__1::__compressed_pair_elem.671" { %"struct.std::__1::__hash_node_base.663" { %"struct.std::__1::__hash_node_base.663"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.663"*) } } }, %"class.std::__1::__compressed_pair.675" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.677" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::map.680" { %"class.std::__1::__tree.681" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.682" { %"struct.std::__1::__compressed_pair_elem.85" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.686" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } }, %"class.std::__1::basic_ostream"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_ostream"*), %"class.std::__1::list" { %"class.std::__1::__list_imp" { %"struct.std::__1::__list_node_base" { %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*) }, %"class.std::__1::__compressed_pair.1004" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS5_11InstructionEPNS5_4LoopEE3$_0FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion13AreCompatibleEvE3$_2FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion12IsUsedInLoopEPNS5_11InstructionEPNS5_4LoopEE3$_3FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion7IsLegalEvE3$_4FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_8FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_9FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE4$_10FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.939", align 8
  %5 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %2) #10
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #10
  %16 = zext i32 %15 to i64
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i64 [ %16, %11 ], [ 0, %3 ]
  %19 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 2
  %20 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = zext i8 %28 to i32
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %29) #10
  %31 = zext i32 %30 to i64
  %32 = shl nuw i64 %31, 32
  br label %33

33:                                               ; preds = %17, %26
  %34 = phi i64 [ %32, %26 ], [ 0, %17 ]
  %35 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %65

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %42, align 8
  %44 = tail call i8* @_Znwm(i64 104) #11
  %45 = bitcast i8* %44 to %"class.spvtools::opt::analysis::DefUseManager"*
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %44, i64 48
  %49 = getelementptr inbounds i8, i8* %44, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #10
  %50 = bitcast i8* %49 to i8**
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %44, i64 64
  %52 = getelementptr inbounds i8, i8* %44, i64 96
  %53 = bitcast i8* %52 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %53, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %45, %"class.spvtools::opt::Module"* %43) #10
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 6
  %55 = ptrtoint i8* %44 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.62"* %54 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %41
  %61 = bitcast %"class.std::__1::unique_ptr.62"* %54 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %61, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %57) #10
  br label %62

62:                                               ; preds = %60, %41
  %63 = load i32, i32* %37, align 8
  %64 = or i32 %63, 1
  store i32 %64, i32* %37, align 8
  br label %65

65:                                               ; preds = %33, %62
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 6, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %66, align 8
  %68 = bitcast %"class.std::__1::function.939"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #10
  %69 = or i64 %34, %18
  %70 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion30UsedInContinueOrConditionBlockES5_PNS3_4LoopEE3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS5_11InstructionEPNS5_4LoopEE3$_0FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %71, align 8
  %72 = bitcast %"class.std::__1::function.939"* %4 to %"class.spvtools::opt::LoopFusion"**
  store %"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::LoopFusion"** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to i64*
  store i64 %69, i64* %74, align 8
  %75 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %67, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.939"* nonnull dereferenceable(32) %4) #10
  %76 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %76, i64 0, i32 1
  %78 = load void (i8*)*, void (i8*)** %77, align 8
  %79 = icmp eq void (i8*)* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void %78(i8* %82) #10
  br label %83

83:                                               ; preds = %65, %80
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #10
  %84 = xor i1 %75, true
  ret i1 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.939"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10LoopFusion39RemoveIfNotUsedContinueOrConditionBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"*, %"class.std::__1::vector.945"* nocapture, %"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::Instruction"** %5, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %3, %13
  %10 = phi %"class.spvtools::opt::Instruction"** [ %14, %13 ], [ %5, %3 ]
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = tail call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %11, %"class.spvtools::opt::Loop"* %2) #10
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, i64 1
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, %7
  br i1 %15, label %42, label %9

16:                                               ; preds = %9, %3
  %17 = phi %"class.spvtools::opt::Instruction"** [ %5, %3 ], [ %10, %9 ]
  %18 = icmp eq %"class.spvtools::opt::Instruction"** %17, %7
  br i1 %18, label %42, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %21 = icmp eq %"class.spvtools::opt::Instruction"** %20, %7
  br i1 %21, label %42, label %22

22:                                               ; preds = %19
  %23 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  br label %24

24:                                               ; preds = %22, %36
  %25 = phi %"class.spvtools::opt::Instruction"** [ %38, %36 ], [ %20, %22 ]
  %26 = phi i64 [ %37, %36 ], [ %23, %22 ]
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %28 = tail call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %27, %"class.spvtools::opt::Loop"* %2) #10
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %26 to %"class.spvtools::opt::Instruction"**
  %33 = inttoptr i64 %26 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, i64 1
  %35 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  br label %36

36:                                               ; preds = %29, %24
  %37 = phi i64 [ %26, %24 ], [ %35, %29 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, i64 1
  %39 = icmp eq %"class.spvtools::opt::Instruction"** %38, %7
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = inttoptr i64 %37 to %"class.spvtools::opt::Instruction"**
  br label %42

42:                                               ; preds = %13, %40, %16, %19
  %43 = phi %"class.spvtools::opt::Instruction"** [ %7, %16 ], [ %17, %19 ], [ %41, %40 ], [ %7, %13 ]
  %44 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %6, align 8
  %45 = icmp eq %"class.spvtools::opt::Instruction"** %43, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  store %"class.spvtools::opt::Instruction"** %43, %"class.spvtools::opt::Instruction"*** %6, align 8
  br label %47

47:                                               ; preds = %42, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion13AreCompatibleEv(%"class.spvtools::opt::LoopFusion"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::vector.945", align 8
  %5 = alloca %"class.std::__1::vector.945", align 8
  %6 = alloca %"class.std::__1::vector.954", align 8
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.std::__1::function.963", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 1
  %11 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 1
  %13 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %13, i64 0, i32 0
  %15 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 2
  %17 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 1
  %19 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %19, i64 0, i32 0
  %21 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %20, align 8
  %22 = icmp eq %"class.spvtools::opt::Function"* %15, %21
  br i1 %22, label %23, label %1051

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 4
  %25 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %24, align 8
  %26 = icmp eq %"class.spvtools::opt::BasicBlock"* %25, null
  br i1 %26, label %1051, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 4
  %29 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %28, align 8
  %30 = icmp eq %"class.spvtools::opt::BasicBlock"* %29, null
  br i1 %30, label %1051, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %55

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 400) #11
  %42 = bitcast i8* %41 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %42, %"class.spvtools::opt::Module"* %40) #10
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 15
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.273"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %"class.spvtools::opt::CFG"* %46, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %38
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %46) #10
  %50 = bitcast %"class.spvtools::opt::CFG"* %46 to i8*
  tail call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %49, %38
  %52 = load i32, i32* %34, align 8
  %53 = or i32 %52, 16
  store i32 %53, i32* %34, align 8
  %54 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  br label %55

55:                                               ; preds = %31, %51
  %56 = phi %"class.spvtools::opt::Loop"* [ %11, %31 ], [ %54, %51 ]
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 15, i32 0, i32 0, i32 0
  %58 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %56, i64 0, i32 3
  %60 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 4
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = zext i8 %68 to i32
  %70 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %62, i32 %69) #10
  br label %71

71:                                               ; preds = %55, %66
  %72 = phi i32 [ %70, %66 ], [ 0, %55 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %58, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %125, label %77

77:                                               ; preds = %71
  %78 = tail call i64 @llvm.ctpop.i64(i64 %75) #10, !range !3
  %79 = icmp ugt i64 %78, 1
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = add i64 %75, 4294967295
  %82 = and i64 %81, %73
  br label %87

83:                                               ; preds = %77
  %84 = icmp ugt i64 %75, %73
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %73, %75
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %73, %83 ]
  %89 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %58, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %90, i64 %88
  %92 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.309"* %92, null
  br i1 %93, label %125, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.309"* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %94
  %99 = add i64 %75, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base.309"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base.309"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, %73
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %79, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %75
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %75
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %88
  br i1 %115, label %121, label %125

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %72
  br i1 %120, label %126, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.309"* %123, null
  br i1 %124, label %125, label %100

125:                                              ; preds = %121, %113, %94, %87, %71
  tail call void @abort() #12
  unreachable

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %101, i64 3
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %101, i64 4
  %129 = bitcast %"struct.std::__1::__hash_node_base.309"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.309"* %127 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %130, %132
  %134 = icmp eq i64 %133, 4
  br i1 %134, label %135, label %1051

135:                                              ; preds = %126
  %136 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 11
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 16
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %157

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 4, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %142, align 8
  %144 = tail call i8* @_Znwm(i64 400) #11
  %145 = bitcast i8* %144 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %145, %"class.spvtools::opt::Module"* %143) #10
  %146 = ptrtoint i8* %144 to i64
  %147 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 15
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %148, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.273"* %147 to i64*
  store i64 %146, i64* %150, align 8
  %151 = icmp eq %"class.spvtools::opt::CFG"* %149, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %141
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %149) #10
  %153 = bitcast %"class.spvtools::opt::CFG"* %149 to i8*
  tail call void @_ZdlPv(i8* %153) #11
  br label %154

154:                                              ; preds = %152, %141
  %155 = load i32, i32* %137, align 8
  %156 = or i32 %155, 16
  store i32 %156, i32* %137, align 8
  br label %157

157:                                              ; preds = %135, %154
  %158 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 15, i32 0, i32 0, i32 0
  %159 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %158, align 8
  %160 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %160, i64 0, i32 3
  %162 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %161, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %162, i64 0, i32 1, i32 0, i32 0, i32 0
  %164 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %163, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %164, i64 0, i32 4
  %166 = load i8, i8* %165, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %157
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %164, i64 0, i32 3
  %170 = load i8, i8* %169, align 4, !range !2
  %171 = zext i8 %170 to i32
  %172 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %164, i32 %171) #10
  br label %173

173:                                              ; preds = %157, %168
  %174 = phi i32 [ %172, %168 ], [ 0, %157 ]
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %159, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %227, label %179

179:                                              ; preds = %173
  %180 = tail call i64 @llvm.ctpop.i64(i64 %177) #10, !range !3
  %181 = icmp ugt i64 %180, 1
  br i1 %181, label %185, label %182

182:                                              ; preds = %179
  %183 = add i64 %177, 4294967295
  %184 = and i64 %183, %175
  br label %189

185:                                              ; preds = %179
  %186 = icmp ugt i64 %177, %175
  br i1 %186, label %189, label %187

187:                                              ; preds = %185
  %188 = urem i64 %175, %177
  br label %189

189:                                              ; preds = %187, %185, %182
  %190 = phi i64 [ %184, %182 ], [ %188, %187 ], [ %175, %185 ]
  %191 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %159, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %191, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %192, i64 %190
  %194 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %193, align 8
  %195 = icmp eq %"struct.std::__1::__hash_node_base.309"* %194, null
  br i1 %195, label %227, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %194, i64 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %197, align 8
  %199 = icmp eq %"struct.std::__1::__hash_node_base.309"* %198, null
  br i1 %199, label %227, label %200

200:                                              ; preds = %196
  %201 = add i64 %177, -1
  br label %202

202:                                              ; preds = %223, %200
  %203 = phi %"struct.std::__1::__hash_node_base.309"* [ %198, %200 ], [ %225, %223 ]
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %203, i64 1
  %205 = bitcast %"struct.std::__1::__hash_node_base.309"* %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = icmp eq i64 %206, %175
  br i1 %207, label %218, label %208

208:                                              ; preds = %202
  br i1 %181, label %211, label %209

209:                                              ; preds = %208
  %210 = and i64 %206, %201
  br label %215

211:                                              ; preds = %208
  %212 = icmp ult i64 %206, %177
  br i1 %212, label %215, label %213

213:                                              ; preds = %211
  %214 = urem i64 %206, %177
  br label %215

215:                                              ; preds = %213, %211, %209
  %216 = phi i64 [ %210, %209 ], [ %214, %213 ], [ %206, %211 ]
  %217 = icmp eq i64 %216, %190
  br i1 %217, label %223, label %227

218:                                              ; preds = %202
  %219 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %203, i64 2
  %220 = bitcast %"struct.std::__1::__hash_node_base.309"* %219 to i32*
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, %174
  br i1 %222, label %228, label %223

223:                                              ; preds = %218, %215
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %203, i64 0, i32 0
  %225 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %224, align 8
  %226 = icmp eq %"struct.std::__1::__hash_node_base.309"* %225, null
  br i1 %226, label %227, label %202

227:                                              ; preds = %223, %215, %196, %189, %173
  tail call void @abort() #12
  unreachable

228:                                              ; preds = %218
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %203, i64 3
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %203, i64 4
  %231 = bitcast %"struct.std::__1::__hash_node_base.309"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"struct.std::__1::__hash_node_base.309"* %229 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %232, %234
  %236 = icmp eq i64 %235, 4
  br i1 %236, label %237, label %1051

237:                                              ; preds = %228
  %238 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %239 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 11
  %240 = load i32, i32* %239, align 8
  %241 = and i32 %240, 16
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %259

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 4, i32 0, i32 0, i32 0
  %245 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %244, align 8
  %246 = tail call i8* @_Znwm(i64 400) #11
  %247 = bitcast i8* %246 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %247, %"class.spvtools::opt::Module"* %245) #10
  %248 = ptrtoint i8* %246 to i64
  %249 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 15
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %249, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %250, align 8
  %252 = bitcast %"class.std::__1::unique_ptr.273"* %249 to i64*
  store i64 %248, i64* %252, align 8
  %253 = icmp eq %"class.spvtools::opt::CFG"* %251, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %243
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %251) #10
  %255 = bitcast %"class.spvtools::opt::CFG"* %251 to i8*
  tail call void @_ZdlPv(i8* %255) #11
  br label %256

256:                                              ; preds = %254, %243
  %257 = load i32, i32* %239, align 8
  %258 = or i32 %257, 16
  store i32 %258, i32* %239, align 8
  br label %259

259:                                              ; preds = %237, %256
  %260 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 15, i32 0, i32 0, i32 0
  %261 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %260, align 8
  %262 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %262, i64 0, i32 2
  %264 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %263, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %264, i64 0, i32 1, i32 0, i32 0, i32 0
  %266 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, align 8
  %267 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %266, i64 0, i32 4
  %268 = load i8, i8* %267, align 1, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %259
  %271 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %266, i64 0, i32 3
  %272 = load i8, i8* %271, align 4, !range !2
  %273 = zext i8 %272 to i32
  %274 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %266, i32 %273) #10
  br label %275

275:                                              ; preds = %259, %270
  %276 = phi i32 [ %274, %270 ], [ 0, %259 ]
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %261, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %329, label %281

281:                                              ; preds = %275
  %282 = tail call i64 @llvm.ctpop.i64(i64 %279) #10, !range !3
  %283 = icmp ugt i64 %282, 1
  br i1 %283, label %287, label %284

284:                                              ; preds = %281
  %285 = add i64 %279, 4294967295
  %286 = and i64 %285, %277
  br label %291

287:                                              ; preds = %281
  %288 = icmp ugt i64 %279, %277
  br i1 %288, label %291, label %289

289:                                              ; preds = %287
  %290 = urem i64 %277, %279
  br label %291

291:                                              ; preds = %289, %287, %284
  %292 = phi i64 [ %286, %284 ], [ %290, %289 ], [ %277, %287 ]
  %293 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %261, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %293, align 8
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %294, i64 %292
  %296 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %295, align 8
  %297 = icmp eq %"struct.std::__1::__hash_node_base.309"* %296, null
  br i1 %297, label %329, label %298

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %296, i64 0, i32 0
  %300 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %299, align 8
  %301 = icmp eq %"struct.std::__1::__hash_node_base.309"* %300, null
  br i1 %301, label %329, label %302

302:                                              ; preds = %298
  %303 = add i64 %279, -1
  br label %304

304:                                              ; preds = %325, %302
  %305 = phi %"struct.std::__1::__hash_node_base.309"* [ %300, %302 ], [ %327, %325 ]
  %306 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %305, i64 1
  %307 = bitcast %"struct.std::__1::__hash_node_base.309"* %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = icmp eq i64 %308, %277
  br i1 %309, label %320, label %310

310:                                              ; preds = %304
  br i1 %283, label %313, label %311

311:                                              ; preds = %310
  %312 = and i64 %308, %303
  br label %317

313:                                              ; preds = %310
  %314 = icmp ult i64 %308, %279
  br i1 %314, label %317, label %315

315:                                              ; preds = %313
  %316 = urem i64 %308, %279
  br label %317

317:                                              ; preds = %315, %313, %311
  %318 = phi i64 [ %312, %311 ], [ %316, %315 ], [ %308, %313 ]
  %319 = icmp eq i64 %318, %292
  br i1 %319, label %325, label %329

320:                                              ; preds = %304
  %321 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %305, i64 2
  %322 = bitcast %"struct.std::__1::__hash_node_base.309"* %321 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, %276
  br i1 %324, label %330, label %325

325:                                              ; preds = %320, %317
  %326 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %305, i64 0, i32 0
  %327 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %326, align 8
  %328 = icmp eq %"struct.std::__1::__hash_node_base.309"* %327, null
  br i1 %328, label %329, label %304

329:                                              ; preds = %325, %317, %298, %291, %275
  tail call void @abort() #12
  unreachable

330:                                              ; preds = %320
  %331 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %305, i64 3
  %332 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %305, i64 4
  %333 = bitcast %"struct.std::__1::__hash_node_base.309"* %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"struct.std::__1::__hash_node_base.309"* %331 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = sub i64 %334, %336
  %338 = icmp eq i64 %337, 4
  br i1 %338, label %339, label %1051

339:                                              ; preds = %330
  %340 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %341 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 11
  %342 = load i32, i32* %341, align 8
  %343 = and i32 %342, 16
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %361

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 4, i32 0, i32 0, i32 0
  %347 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %346, align 8
  %348 = tail call i8* @_Znwm(i64 400) #11
  %349 = bitcast i8* %348 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %349, %"class.spvtools::opt::Module"* %347) #10
  %350 = ptrtoint i8* %348 to i64
  %351 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 15
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %352, align 8
  %354 = bitcast %"class.std::__1::unique_ptr.273"* %351 to i64*
  store i64 %350, i64* %354, align 8
  %355 = icmp eq %"class.spvtools::opt::CFG"* %353, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %345
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %353) #10
  %357 = bitcast %"class.spvtools::opt::CFG"* %353 to i8*
  tail call void @_ZdlPv(i8* %357) #11
  br label %358

358:                                              ; preds = %356, %345
  %359 = load i32, i32* %341, align 8
  %360 = or i32 %359, 16
  store i32 %360, i32* %341, align 8
  br label %361

361:                                              ; preds = %339, %358
  %362 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 15, i32 0, i32 0, i32 0
  %363 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %362, align 8
  %364 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %365 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %364, i64 0, i32 2
  %366 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %365, align 8
  %367 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %366, i64 0, i32 1, i32 0, i32 0, i32 0
  %368 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %367, align 8
  %369 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %368, i64 0, i32 4
  %370 = load i8, i8* %369, align 1, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %377, label %372

372:                                              ; preds = %361
  %373 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %368, i64 0, i32 3
  %374 = load i8, i8* %373, align 4, !range !2
  %375 = zext i8 %374 to i32
  %376 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %368, i32 %375) #10
  br label %377

377:                                              ; preds = %361, %372
  %378 = phi i32 [ %376, %372 ], [ 0, %361 ]
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %363, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %381 = load i64, i64* %380, align 8
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %431, label %383

383:                                              ; preds = %377
  %384 = tail call i64 @llvm.ctpop.i64(i64 %381) #10, !range !3
  %385 = icmp ugt i64 %384, 1
  br i1 %385, label %389, label %386

386:                                              ; preds = %383
  %387 = add i64 %381, 4294967295
  %388 = and i64 %387, %379
  br label %393

389:                                              ; preds = %383
  %390 = icmp ugt i64 %381, %379
  br i1 %390, label %393, label %391

391:                                              ; preds = %389
  %392 = urem i64 %379, %381
  br label %393

393:                                              ; preds = %391, %389, %386
  %394 = phi i64 [ %388, %386 ], [ %392, %391 ], [ %379, %389 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %363, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %395, align 8
  %397 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %396, i64 %394
  %398 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %397, align 8
  %399 = icmp eq %"struct.std::__1::__hash_node_base.309"* %398, null
  br i1 %399, label %431, label %400

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %398, i64 0, i32 0
  %402 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %401, align 8
  %403 = icmp eq %"struct.std::__1::__hash_node_base.309"* %402, null
  br i1 %403, label %431, label %404

404:                                              ; preds = %400
  %405 = add i64 %381, -1
  br label %406

406:                                              ; preds = %427, %404
  %407 = phi %"struct.std::__1::__hash_node_base.309"* [ %402, %404 ], [ %429, %427 ]
  %408 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %407, i64 1
  %409 = bitcast %"struct.std::__1::__hash_node_base.309"* %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = icmp eq i64 %410, %379
  br i1 %411, label %422, label %412

412:                                              ; preds = %406
  br i1 %385, label %415, label %413

413:                                              ; preds = %412
  %414 = and i64 %410, %405
  br label %419

415:                                              ; preds = %412
  %416 = icmp ult i64 %410, %381
  br i1 %416, label %419, label %417

417:                                              ; preds = %415
  %418 = urem i64 %410, %381
  br label %419

419:                                              ; preds = %417, %415, %413
  %420 = phi i64 [ %414, %413 ], [ %418, %417 ], [ %410, %415 ]
  %421 = icmp eq i64 %420, %394
  br i1 %421, label %427, label %431

422:                                              ; preds = %406
  %423 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %407, i64 2
  %424 = bitcast %"struct.std::__1::__hash_node_base.309"* %423 to i32*
  %425 = load i32, i32* %424, align 4
  %426 = icmp eq i32 %425, %378
  br i1 %426, label %432, label %427

427:                                              ; preds = %422, %419
  %428 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %407, i64 0, i32 0
  %429 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %428, align 8
  %430 = icmp eq %"struct.std::__1::__hash_node_base.309"* %429, null
  br i1 %430, label %431, label %406

431:                                              ; preds = %427, %419, %400, %393, %377
  tail call void @abort() #12
  unreachable

432:                                              ; preds = %422
  %433 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %407, i64 3
  %434 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %407, i64 4
  %435 = bitcast %"struct.std::__1::__hash_node_base.309"* %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = bitcast %"struct.std::__1::__hash_node_base.309"* %433 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = sub i64 %436, %438
  %440 = icmp eq i64 %439, 4
  br i1 %440, label %441, label %1051

441:                                              ; preds = %432
  %442 = bitcast %"class.std::__1::vector.945"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #10
  %443 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 0
  %444 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %442, i8 0, i64 24, i1 false) #10
  %445 = bitcast %"class.std::__1::vector.945"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #10
  %446 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %5, i64 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 0, i64 24, i1 false) #10
  %448 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %448, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %4) #10
  %449 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %450 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %443, align 8
  %451 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %444, align 8
  %452 = icmp eq %"class.spvtools::opt::Instruction"** %450, %451
  br i1 %452, label %460, label %453

453:                                              ; preds = %441, %457
  %454 = phi %"class.spvtools::opt::Instruction"** [ %458, %457 ], [ %450, %441 ]
  %455 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %454, align 8
  %456 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %455, %"class.spvtools::opt::Loop"* %449) #10
  br i1 %456, label %457, label %460

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %454, i64 1
  %459 = icmp eq %"class.spvtools::opt::Instruction"** %458, %451
  br i1 %459, label %486, label %453

460:                                              ; preds = %453, %441
  %461 = phi %"class.spvtools::opt::Instruction"** [ %450, %441 ], [ %454, %453 ]
  %462 = icmp eq %"class.spvtools::opt::Instruction"** %461, %451
  br i1 %462, label %486, label %463

463:                                              ; preds = %460
  %464 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %461, i64 1
  %465 = icmp eq %"class.spvtools::opt::Instruction"** %464, %451
  br i1 %465, label %486, label %466

466:                                              ; preds = %463
  %467 = ptrtoint %"class.spvtools::opt::Instruction"** %461 to i64
  br label %468

468:                                              ; preds = %480, %466
  %469 = phi %"class.spvtools::opt::Instruction"** [ %482, %480 ], [ %464, %466 ]
  %470 = phi i64 [ %481, %480 ], [ %467, %466 ]
  %471 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %469, align 8
  %472 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %471, %"class.spvtools::opt::Loop"* %449) #10
  br i1 %472, label %473, label %480

473:                                              ; preds = %468
  %474 = bitcast %"class.spvtools::opt::Instruction"** %469 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = inttoptr i64 %470 to %"class.spvtools::opt::Instruction"**
  %477 = inttoptr i64 %470 to i64*
  store i64 %475, i64* %477, align 8
  %478 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %476, i64 1
  %479 = ptrtoint %"class.spvtools::opt::Instruction"** %478 to i64
  br label %480

480:                                              ; preds = %473, %468
  %481 = phi i64 [ %470, %468 ], [ %479, %473 ]
  %482 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %469, i64 1
  %483 = icmp eq %"class.spvtools::opt::Instruction"** %482, %451
  br i1 %483, label %484, label %468

484:                                              ; preds = %480
  %485 = inttoptr i64 %481 to %"class.spvtools::opt::Instruction"**
  br label %486

486:                                              ; preds = %457, %484, %463, %460
  %487 = phi %"class.spvtools::opt::Instruction"** [ %451, %460 ], [ %461, %463 ], [ %485, %484 ], [ %451, %457 ]
  %488 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %444, align 8
  %489 = icmp eq %"class.spvtools::opt::Instruction"** %487, %488
  br i1 %489, label %491, label %490

490:                                              ; preds = %486
  store %"class.spvtools::opt::Instruction"** %487, %"class.spvtools::opt::Instruction"*** %444, align 8
  br label %491

491:                                              ; preds = %486, %490
  %492 = phi %"class.spvtools::opt::Instruction"** [ %488, %486 ], [ %487, %490 ]
  %493 = ptrtoint %"class.spvtools::opt::Instruction"** %492 to i64
  %494 = bitcast %"class.spvtools::opt::Instruction"*** %444 to i64*
  %495 = bitcast %"class.std::__1::vector.945"* %4 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = sub i64 %493, %496
  %498 = icmp eq i64 %497, 8
  br i1 %498, label %499, label %1033

499:                                              ; preds = %491
  %500 = inttoptr i64 %496 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  %503 = bitcast %"class.spvtools::opt::Instruction"** %502 to i64*
  store i64 %501, i64* %503, align 8
  %504 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %504, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %5) #10
  %505 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %506 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %446, align 8
  %507 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %447, align 8
  %508 = icmp eq %"class.spvtools::opt::Instruction"** %506, %507
  br i1 %508, label %516, label %509

509:                                              ; preds = %499, %513
  %510 = phi %"class.spvtools::opt::Instruction"** [ %514, %513 ], [ %506, %499 ]
  %511 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %510, align 8
  %512 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %511, %"class.spvtools::opt::Loop"* %505) #10
  br i1 %512, label %513, label %516

513:                                              ; preds = %509
  %514 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %510, i64 1
  %515 = icmp eq %"class.spvtools::opt::Instruction"** %514, %507
  br i1 %515, label %542, label %509

516:                                              ; preds = %509, %499
  %517 = phi %"class.spvtools::opt::Instruction"** [ %506, %499 ], [ %510, %509 ]
  %518 = icmp eq %"class.spvtools::opt::Instruction"** %517, %507
  br i1 %518, label %542, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %517, i64 1
  %521 = icmp eq %"class.spvtools::opt::Instruction"** %520, %507
  br i1 %521, label %542, label %522

522:                                              ; preds = %519
  %523 = ptrtoint %"class.spvtools::opt::Instruction"** %517 to i64
  br label %524

524:                                              ; preds = %536, %522
  %525 = phi %"class.spvtools::opt::Instruction"** [ %538, %536 ], [ %520, %522 ]
  %526 = phi i64 [ %537, %536 ], [ %523, %522 ]
  %527 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %525, align 8
  %528 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion30UsedInContinueOrConditionBlockEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %527, %"class.spvtools::opt::Loop"* %505) #10
  br i1 %528, label %529, label %536

529:                                              ; preds = %524
  %530 = bitcast %"class.spvtools::opt::Instruction"** %525 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = inttoptr i64 %526 to %"class.spvtools::opt::Instruction"**
  %533 = inttoptr i64 %526 to i64*
  store i64 %531, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %532, i64 1
  %535 = ptrtoint %"class.spvtools::opt::Instruction"** %534 to i64
  br label %536

536:                                              ; preds = %529, %524
  %537 = phi i64 [ %526, %524 ], [ %535, %529 ]
  %538 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %525, i64 1
  %539 = icmp eq %"class.spvtools::opt::Instruction"** %538, %507
  br i1 %539, label %540, label %524

540:                                              ; preds = %536
  %541 = inttoptr i64 %537 to %"class.spvtools::opt::Instruction"**
  br label %542

542:                                              ; preds = %513, %540, %519, %516
  %543 = phi %"class.spvtools::opt::Instruction"** [ %507, %516 ], [ %517, %519 ], [ %541, %540 ], [ %507, %513 ]
  %544 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %447, align 8
  %545 = icmp eq %"class.spvtools::opt::Instruction"** %543, %544
  br i1 %545, label %547, label %546

546:                                              ; preds = %542
  store %"class.spvtools::opt::Instruction"** %543, %"class.spvtools::opt::Instruction"*** %447, align 8
  br label %547

547:                                              ; preds = %542, %546
  %548 = phi %"class.spvtools::opt::Instruction"** [ %544, %542 ], [ %543, %546 ]
  %549 = ptrtoint %"class.spvtools::opt::Instruction"** %548 to i64
  %550 = bitcast %"class.std::__1::vector.945"* %5 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = sub i64 %549, %551
  %553 = icmp eq i64 %552, 8
  %554 = inttoptr i64 %551 to %"class.spvtools::opt::Instruction"**
  br i1 %553, label %555, label %1036

555:                                              ; preds = %547
  %556 = inttoptr i64 %551 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %559 = bitcast %"class.spvtools::opt::Instruction"** %558 to i64*
  store i64 %557, i64* %559, align 8
  %560 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #10
  store i64 -6148914691236517206, i64* %2, align 8
  %561 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %562 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %502, align 8
  %563 = call zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* %561, %"class.spvtools::opt::Instruction"* %562, i64* nonnull %2) #10
  br i1 %563, label %565, label %564

564:                                              ; preds = %555
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #10
  br label %1033

565:                                              ; preds = %555
  %566 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %566) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %567 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %568 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %558, align 8
  %569 = call zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* %567, %"class.spvtools::opt::Instruction"* %568, i64* nonnull %3) #10
  br i1 %569, label %571, label %570

570:                                              ; preds = %565
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %566) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #10
  br label %1033

571:                                              ; preds = %565
  %572 = load i64, i64* %2, align 8
  %573 = load i64, i64* %3, align 8
  %574 = icmp eq i64 %572, %573
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %566) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #10
  br i1 %574, label %575, label %1033

575:                                              ; preds = %571
  %576 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion14CheckConditionEv(%"class.spvtools::opt::LoopFusion"* %0)
  br i1 %576, label %577, label %1033

577:                                              ; preds = %575
  %578 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion9CheckStepEv(%"class.spvtools::opt::LoopFusion"* %0)
  br i1 %578, label %579, label %1033

579:                                              ; preds = %577
  %580 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %581 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %580, i64 0, i32 4
  %582 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %581, align 8
  %583 = ptrtoint %"class.spvtools::opt::BasicBlock"* %582 to i64
  %584 = bitcast %"class.std::__1::vector.954"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %584) #10
  %585 = getelementptr inbounds %"class.std::__1::vector.954", %"class.std::__1::vector.954"* %6, i64 0, i32 0, i32 0
  %586 = getelementptr inbounds %"class.std::__1::vector.954", %"class.std::__1::vector.954"* %6, i64 0, i32 0, i32 1
  %587 = getelementptr inbounds %"class.std::__1::vector.954", %"class.std::__1::vector.954"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %588 = bitcast %"class.spvtools::opt::BasicBlock"*** %586 to i64*
  %589 = bitcast %"class.std::__1::vector.954"* %6 to i64*
  %590 = bitcast %"class.spvtools::opt::BasicBlock"*** %587 to i64*
  %591 = call i8* @_Znwm(i64 8) #11
  %592 = bitcast i8* %591 to %"class.spvtools::opt::BasicBlock"**
  %593 = getelementptr inbounds i8, i8* %591, i64 8
  %594 = bitcast i8* %593 to %"class.spvtools::opt::BasicBlock"**
  %595 = ptrtoint i8* %593 to i64
  %596 = bitcast i8* %591 to i64*
  store i64 %583, i64* %596, align 8
  %597 = ptrtoint i8* %591 to i64
  store i64 %597, i64* %589, align 8
  store i64 %595, i64* %588, align 8
  store i64 %595, i64* %590, align 8
  %598 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %599 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %581, align 8
  %600 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %598, i64 0, i32 3
  %601 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %600, align 8
  %602 = icmp eq %"class.spvtools::opt::BasicBlock"* %601, %599
  br i1 %602, label %854, label %603

603:                                              ; preds = %579
  %604 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %604) #10
  %605 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %606 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %607 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %608 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %608, i8 -86, i64 24, i1 false)
  %609 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %610 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %609, i64 0, i32 11
  %611 = load i32, i32* %610, align 8
  %612 = and i32 %611, 16
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %630

614:                                              ; preds = %603
  %615 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %609, i64 0, i32 4, i32 0, i32 0, i32 0
  %616 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %615, align 8
  %617 = call i8* @_Znwm(i64 400) #11
  %618 = bitcast i8* %617 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %618, %"class.spvtools::opt::Module"* %616) #10
  %619 = ptrtoint i8* %617 to i64
  %620 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %609, i64 0, i32 15
  %621 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %620, i64 0, i32 0, i32 0, i32 0
  %622 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %621, align 8
  %623 = bitcast %"class.std::__1::unique_ptr.273"* %620 to i64*
  store i64 %619, i64* %623, align 8
  %624 = icmp eq %"class.spvtools::opt::CFG"* %622, null
  br i1 %624, label %627, label %625

625:                                              ; preds = %614
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %622) #10
  %626 = bitcast %"class.spvtools::opt::CFG"* %622 to i8*
  call void @_ZdlPv(i8* %626) #11
  br label %627

627:                                              ; preds = %625, %614
  %628 = load i32, i32* %610, align 8
  %629 = or i32 %628, 16
  store i32 %629, i32* %610, align 8
  br label %630

630:                                              ; preds = %603, %627
  %631 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %609, i64 0, i32 15, i32 0, i32 0, i32 0
  %632 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %631, align 8
  %633 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %582, i64 0, i32 1, i32 0, i32 0, i32 0
  %634 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %633, align 8
  %635 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %634, i64 0, i32 4
  %636 = load i8, i8* %635, align 1, !range !2
  %637 = icmp eq i8 %636, 0
  br i1 %637, label %643, label %638

638:                                              ; preds = %630
  %639 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %634, i64 0, i32 3
  %640 = load i8, i8* %639, align 4, !range !2
  %641 = zext i8 %640 to i32
  %642 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %634, i32 %641) #10
  br label %643

643:                                              ; preds = %630, %638
  %644 = phi i32 [ %642, %638 ], [ 0, %630 ]
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %632, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %647 = load i64, i64* %646, align 8
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %697, label %649

649:                                              ; preds = %643
  %650 = call i64 @llvm.ctpop.i64(i64 %647) #10, !range !3
  %651 = icmp ugt i64 %650, 1
  br i1 %651, label %655, label %652

652:                                              ; preds = %649
  %653 = add i64 %647, 4294967295
  %654 = and i64 %653, %645
  br label %659

655:                                              ; preds = %649
  %656 = icmp ugt i64 %647, %645
  br i1 %656, label %659, label %657

657:                                              ; preds = %655
  %658 = urem i64 %645, %647
  br label %659

659:                                              ; preds = %657, %655, %652
  %660 = phi i64 [ %654, %652 ], [ %658, %657 ], [ %645, %655 ]
  %661 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %632, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %662 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %661, align 8
  %663 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %662, i64 %660
  %664 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %663, align 8
  %665 = icmp eq %"struct.std::__1::__hash_node_base.309"* %664, null
  br i1 %665, label %697, label %666

666:                                              ; preds = %659
  %667 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %664, i64 0, i32 0
  %668 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %667, align 8
  %669 = icmp eq %"struct.std::__1::__hash_node_base.309"* %668, null
  br i1 %669, label %697, label %670

670:                                              ; preds = %666
  %671 = add i64 %647, -1
  br label %672

672:                                              ; preds = %693, %670
  %673 = phi %"struct.std::__1::__hash_node_base.309"* [ %668, %670 ], [ %695, %693 ]
  %674 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %673, i64 1
  %675 = bitcast %"struct.std::__1::__hash_node_base.309"* %674 to i64*
  %676 = load i64, i64* %675, align 8
  %677 = icmp eq i64 %676, %645
  br i1 %677, label %688, label %678

678:                                              ; preds = %672
  br i1 %651, label %681, label %679

679:                                              ; preds = %678
  %680 = and i64 %676, %671
  br label %685

681:                                              ; preds = %678
  %682 = icmp ult i64 %676, %647
  br i1 %682, label %685, label %683

683:                                              ; preds = %681
  %684 = urem i64 %676, %647
  br label %685

685:                                              ; preds = %683, %681, %679
  %686 = phi i64 [ %680, %679 ], [ %684, %683 ], [ %676, %681 ]
  %687 = icmp eq i64 %686, %660
  br i1 %687, label %693, label %697

688:                                              ; preds = %672
  %689 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %673, i64 2
  %690 = bitcast %"struct.std::__1::__hash_node_base.309"* %689 to i32*
  %691 = load i32, i32* %690, align 4
  %692 = icmp eq i32 %691, %644
  br i1 %692, label %698, label %693

693:                                              ; preds = %688, %685
  %694 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %673, i64 0, i32 0
  %695 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %694, align 8
  %696 = icmp eq %"struct.std::__1::__hash_node_base.309"* %695, null
  br i1 %696, label %697, label %672

697:                                              ; preds = %693, %685, %666, %659, %643
  call void @abort() #12
  unreachable

698:                                              ; preds = %688
  %699 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %673, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %604, i8 0, i64 24, i1 false) #10
  %700 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %673, i64 4
  %701 = bitcast %"struct.std::__1::__hash_node_base.309"* %700 to i64*
  %702 = load i64, i64* %701, align 8
  %703 = bitcast %"struct.std::__1::__hash_node_base.309"* %699 to i64*
  %704 = load i64, i64* %703, align 8
  %705 = sub i64 %702, %704
  %706 = ashr exact i64 %705, 2
  %707 = icmp eq i64 %705, 0
  br i1 %707, label %708, label %710

708:                                              ; preds = %698
  %709 = bitcast i32** %606 to i64*
  br label %735

710:                                              ; preds = %698
  %711 = icmp ugt i64 %706, 4611686018427387903
  br i1 %711, label %712, label %714

712:                                              ; preds = %710
  %713 = bitcast %"class.std::__1::vector.3"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %713) #12
  unreachable

714:                                              ; preds = %710
  %715 = call i8* @_Znwm(i64 %705) #11
  %716 = bitcast i8* %715 to i32*
  %717 = bitcast i32** %606 to i8**
  store i8* %715, i8** %717, align 8
  %718 = bitcast %"class.std::__1::vector.3"* %7 to i8**
  store i8* %715, i8** %718, align 8
  %719 = getelementptr inbounds i32, i32* %716, i64 %706
  store i32* %719, i32** %607, align 8
  %720 = bitcast %"struct.std::__1::__hash_node_base.309"* %699 to i32**
  %721 = load i32*, i32** %720, align 8
  %722 = load i64, i64* %701, align 8
  %723 = bitcast i32** %606 to i64*
  %724 = ptrtoint i8* %715 to i64
  %725 = ptrtoint i32* %721 to i64
  %726 = sub i64 %722, %725
  %727 = icmp sgt i64 %726, 0
  br i1 %727, label %728, label %733

728:                                              ; preds = %714
  %729 = lshr exact i64 %726, 2
  %730 = bitcast i32* %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %715, i8* align 4 %730, i64 %726, i1 false) #10
  %731 = getelementptr inbounds i32, i32* %716, i64 %729
  %732 = ptrtoint i32* %731 to i64
  br label %733

733:                                              ; preds = %728, %714
  %734 = phi i64 [ %732, %728 ], [ %724, %714 ]
  store i64 %734, i64* %723, align 8
  br label %735

735:                                              ; preds = %708, %733
  %736 = phi i64* [ %709, %708 ], [ %723, %733 ]
  %737 = phi i32* [ null, %708 ], [ %716, %733 ]
  %738 = phi i64 [ 0, %708 ], [ %724, %733 ]
  %739 = phi i64 [ 0, %708 ], [ %734, %733 ]
  %740 = sub i64 %739, %738
  %741 = icmp eq i64 %740, 4
  %742 = inttoptr i64 %738 to i32*
  br i1 %741, label %743, label %841

743:                                              ; preds = %735
  %744 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 3
  %745 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %744, align 8
  %746 = load i32, i32* %737, align 4
  %747 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %745, i64 0, i32 3, i32 0, i32 0
  %748 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %747, align 8
  %749 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %745, i64 0, i32 3, i32 0, i32 1
  %750 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %749, align 8
  %751 = icmp eq %"class.std::__1::unique_ptr.40"* %748, %750
  br i1 %751, label %772, label %752

752:                                              ; preds = %743, %769
  %753 = phi %"class.std::__1::unique_ptr.40"* [ %770, %769 ], [ %748, %743 ]
  %754 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %753, i64 0, i32 0, i32 0, i32 0
  %755 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %754, align 8
  %756 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %755, i64 0, i32 1, i32 0, i32 0, i32 0
  %757 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %756, align 8
  %758 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %757, i64 0, i32 4
  %759 = load i8, i8* %758, align 1, !range !2
  %760 = icmp eq i8 %759, 0
  br i1 %760, label %766, label %761

761:                                              ; preds = %752
  %762 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %757, i64 0, i32 3
  %763 = load i8, i8* %762, align 4, !range !2
  %764 = zext i8 %763 to i32
  %765 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %757, i32 %764) #10
  br label %766

766:                                              ; preds = %761, %752
  %767 = phi i32 [ %765, %761 ], [ 0, %752 ]
  %768 = icmp eq i32 %767, %746
  br i1 %768, label %772, label %769

769:                                              ; preds = %766
  %770 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %753, i64 1
  %771 = icmp eq %"class.std::__1::unique_ptr.40"* %770, %750
  br i1 %771, label %772, label %752

772:                                              ; preds = %766, %769, %743
  %773 = phi %"class.std::__1::unique_ptr.40"* [ %748, %743 ], [ %750, %769 ], [ %753, %766 ]
  %774 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %773, i64 0, i32 0, i32 0, i32 0
  %775 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %774, align 8
  %776 = ptrtoint %"class.spvtools::opt::BasicBlock"* %775 to i64
  %777 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %778 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %777, i64 0, i32 3
  %779 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %778, align 8
  %780 = icmp eq %"class.spvtools::opt::BasicBlock"* %775, %779
  br i1 %780, label %781, label %838

781:                                              ; preds = %772
  %782 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %586, align 8
  %783 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %587, align 8
  %784 = icmp eq %"class.spvtools::opt::BasicBlock"** %782, %783
  %785 = ptrtoint %"class.spvtools::opt::BasicBlock"** %783 to i64
  br i1 %784, label %791, label %786

786:                                              ; preds = %781
  %787 = bitcast %"class.spvtools::opt::BasicBlock"** %782 to i64*
  store i64 %776, i64* %787, align 8
  %788 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %782, i64 1
  %789 = ptrtoint %"class.spvtools::opt::BasicBlock"** %788 to i64
  %790 = bitcast %"class.spvtools::opt::BasicBlock"*** %586 to i64*
  store i64 %789, i64* %790, align 8
  br label %838

791:                                              ; preds = %781
  %792 = ptrtoint %"class.spvtools::opt::BasicBlock"** %782 to i64
  %793 = bitcast %"class.spvtools::opt::BasicBlock"*** %586 to i64*
  %794 = bitcast %"class.std::__1::vector.954"* %6 to i64*
  %795 = load i64, i64* %794, align 8
  %796 = sub i64 %792, %795
  %797 = ashr exact i64 %796, 3
  %798 = add nsw i64 %797, 1
  %799 = icmp ugt i64 %798, 2305843009213693951
  br i1 %799, label %800, label %802

800:                                              ; preds = %791
  %801 = bitcast %"class.std::__1::vector.954"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %801) #12
  unreachable

802:                                              ; preds = %791
  %803 = bitcast %"class.spvtools::opt::BasicBlock"*** %587 to i64*
  %804 = sub i64 %785, %795
  %805 = ashr exact i64 %804, 3
  %806 = icmp ult i64 %805, 1152921504606846975
  br i1 %806, label %807, label %815

807:                                              ; preds = %802
  %808 = ashr exact i64 %804, 2
  %809 = icmp ult i64 %808, %798
  %810 = select i1 %809, i64 %798, i64 %808
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %820, label %812

812:                                              ; preds = %807
  %813 = icmp ugt i64 %810, 2305843009213693951
  br i1 %813, label %814, label %815

814:                                              ; preds = %812
  call void @abort() #12
  unreachable

815:                                              ; preds = %812, %802
  %816 = phi i64 [ %810, %812 ], [ 2305843009213693951, %802 ]
  %817 = shl i64 %816, 3
  %818 = call i8* @_Znwm(i64 %817) #11
  %819 = bitcast i8* %818 to %"class.spvtools::opt::BasicBlock"**
  br label %820

820:                                              ; preds = %815, %807
  %821 = phi i64 [ %816, %815 ], [ 0, %807 ]
  %822 = phi i8* [ %818, %815 ], [ null, %807 ]
  %823 = phi %"class.spvtools::opt::BasicBlock"** [ %819, %815 ], [ null, %807 ]
  %824 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %823, i64 %797
  %825 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %823, i64 %821
  %826 = ptrtoint %"class.spvtools::opt::BasicBlock"** %825 to i64
  %827 = bitcast %"class.spvtools::opt::BasicBlock"** %824 to i64*
  store i64 %776, i64* %827, align 8
  %828 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %824, i64 1
  %829 = ptrtoint %"class.spvtools::opt::BasicBlock"** %828 to i64
  %830 = ptrtoint %"class.spvtools::opt::BasicBlock"** %823 to i64
  %831 = icmp sgt i64 %796, 0
  br i1 %831, label %832, label %834

832:                                              ; preds = %820
  %833 = inttoptr i64 %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %822, i8* align 8 %833, i64 %796, i1 false) #10
  br label %834

834:                                              ; preds = %832, %820
  store i64 %830, i64* %794, align 8
  store i64 %829, i64* %793, align 8
  store i64 %826, i64* %803, align 8
  %835 = icmp eq i64 %795, 0
  br i1 %835, label %838, label %836

836:                                              ; preds = %834
  %837 = inttoptr i64 %795 to i8*
  call void @_ZdlPv(i8* %837) #11
  br label %838

838:                                              ; preds = %836, %834, %786, %772
  %839 = phi i32 [ 1, %772 ], [ 0, %786 ], [ 0, %834 ], [ 0, %836 ]
  %840 = load i32*, i32** %605, align 8
  br label %841

841:                                              ; preds = %838, %735
  %842 = phi i32* [ %840, %838 ], [ %742, %735 ]
  %843 = phi i32 [ %839, %838 ], [ 1, %735 ]
  %844 = icmp eq i32* %842, null
  br i1 %844, label %848, label %845

845:                                              ; preds = %841
  %846 = ptrtoint i32* %842 to i64
  store i64 %846, i64* %736, align 8
  %847 = bitcast i32* %842 to i8*
  call void @_ZdlPv(i8* %847) #11
  br label %848

848:                                              ; preds = %841, %845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %604) #10
  %849 = icmp eq i32 %843, 0
  br i1 %849, label %850, label %1021

850:                                              ; preds = %848
  %851 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %585, align 8
  %852 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %586, align 8
  %853 = icmp eq %"class.spvtools::opt::BasicBlock"** %851, %852
  br i1 %853, label %1024, label %854

854:                                              ; preds = %579, %850
  %855 = phi %"class.spvtools::opt::BasicBlock"** [ %851, %850 ], [ %592, %579 ]
  %856 = phi %"class.spvtools::opt::BasicBlock"** [ %852, %850 ], [ %594, %579 ]
  %857 = bitcast %"class.std::__1::function.963"* %9 to i8*
  %858 = ptrtoint i8* %8 to i64
  %859 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %9, i64 0, i32 0, i32 1, i32 0
  %860 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %9, i64 0, i32 0, i32 2
  %861 = bitcast %"class.std::__1::function.963"* %9 to i64*
  %862 = getelementptr inbounds %"class.std::__1::function.963", %"class.std::__1::function.963"* %9, i64 0, i32 0, i32 0, i32 0
  br label %863

863:                                              ; preds = %854, %1018
  %864 = phi %"class.spvtools::opt::BasicBlock"** [ %855, %854 ], [ %1019, %1018 ]
  %865 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %864, align 8
  %866 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %865, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %867 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %865, i64 0, i32 2, i32 0, i32 1
  %868 = bitcast %"class.spvtools::opt::Instruction"** %866 to i64*
  %869 = load i64, i64* %868, align 8
  %870 = inttoptr i64 %869 to %"class.spvtools::opt::Instruction"*
  %871 = icmp eq %"class.spvtools::opt::Instruction"* %867, %870
  br i1 %871, label %1018, label %872

872:                                              ; preds = %863, %1011
  %873 = phi %"class.spvtools::opt::Instruction"* [ %1016, %1011 ], [ %870, %863 ]
  %874 = phi i64 [ %1015, %1011 ], [ %869, %863 ]
  %875 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 2
  %876 = load i32, i32* %875, align 8
  switch i32 %876, label %1021 [
    i32 62, label %877
    i32 245, label %989
    i32 249, label %1011
  ]

877:                                              ; preds = %872
  %878 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %879 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %878, i64 0, i32 11
  %880 = load i32, i32* %879, align 8
  %881 = and i32 %880, 1
  %882 = icmp eq i32 %881, 0
  br i1 %882, label %883, label %907

883:                                              ; preds = %877
  %884 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %878, i64 0, i32 4, i32 0, i32 0, i32 0
  %885 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %884, align 8
  %886 = call i8* @_Znwm(i64 104) #11
  %887 = bitcast i8* %886 to %"class.spvtools::opt::analysis::DefUseManager"*
  %888 = getelementptr inbounds i8, i8* %886, i64 32
  %889 = bitcast i8* %888 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %886, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %889, align 4
  %890 = getelementptr inbounds i8, i8* %886, i64 48
  %891 = getelementptr inbounds i8, i8* %886, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %890, i8 0, i64 16, i1 false) #10
  %892 = bitcast i8* %891 to i8**
  store i8* %890, i8** %892, align 8
  %893 = getelementptr inbounds i8, i8* %886, i64 64
  %894 = getelementptr inbounds i8, i8* %886, i64 96
  %895 = bitcast i8* %894 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %893, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %895, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %887, %"class.spvtools::opt::Module"* %885) #10
  %896 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %878, i64 0, i32 6
  %897 = ptrtoint i8* %886 to i64
  %898 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %896, i64 0, i32 0, i32 0, i32 0
  %899 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %898, align 8
  %900 = bitcast %"class.std::__1::unique_ptr.62"* %896 to i64*
  store i64 %897, i64* %900, align 8
  %901 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %899, null
  br i1 %901, label %904, label %902

902:                                              ; preds = %883
  %903 = bitcast %"class.std::__1::unique_ptr.62"* %896 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %903, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %899) #10
  br label %904

904:                                              ; preds = %902, %883
  %905 = load i32, i32* %879, align 8
  %906 = or i32 %905, 1
  store i32 %906, i32* %879, align 8
  br label %907

907:                                              ; preds = %877, %904
  %908 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %878, i64 0, i32 6, i32 0, i32 0, i32 0
  %909 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %908, align 8
  %910 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 3
  %911 = load i8, i8* %910, align 4, !range !2
  %912 = icmp eq i8 %911, 0
  %913 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 4
  %914 = load i8, i8* %913, align 1, !range !2
  %915 = icmp eq i8 %914, 0
  %916 = select i1 %915, i32 1, i32 2
  %917 = xor i1 %915, true
  %918 = zext i1 %917 to i32
  %919 = select i1 %912, i32 %918, i32 %916
  %920 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %873, i32 %919) #10
  %921 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %909, i32 %920) #10
  %922 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %921, i64 0, i32 2
  %923 = load i32, i32* %922, align 8
  %924 = icmp eq i32 %923, 59
  br i1 %924, label %925, label %1021

925:                                              ; preds = %907
  %926 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %921, i64 0, i32 3
  %927 = load i8, i8* %926, align 4, !range !2
  %928 = icmp eq i8 %927, 0
  %929 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %921, i64 0, i32 4
  %930 = load i8, i8* %929, align 1, !range !2
  %931 = icmp eq i8 %930, 0
  %932 = select i1 %931, i32 1, i32 2
  %933 = xor i1 %931, true
  %934 = zext i1 %933 to i32
  %935 = select i1 %928, i32 %934, i32 %932
  %936 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %921, i32 %935) #10
  %937 = icmp eq i32 %936, 7
  br i1 %937, label %938, label %1021

938:                                              ; preds = %925
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #10
  store i8 0, i8* %8, align 1
  %939 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %940 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %939, i64 0, i32 11
  %941 = load i32, i32* %940, align 8
  %942 = and i32 %941, 1
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %944, label %968

944:                                              ; preds = %938
  %945 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %939, i64 0, i32 4, i32 0, i32 0, i32 0
  %946 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %945, align 8
  %947 = call i8* @_Znwm(i64 104) #11
  %948 = bitcast i8* %947 to %"class.spvtools::opt::analysis::DefUseManager"*
  %949 = getelementptr inbounds i8, i8* %947, i64 32
  %950 = bitcast i8* %949 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %947, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %950, align 4
  %951 = getelementptr inbounds i8, i8* %947, i64 48
  %952 = getelementptr inbounds i8, i8* %947, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %951, i8 0, i64 16, i1 false) #10
  %953 = bitcast i8* %952 to i8**
  store i8* %951, i8** %953, align 8
  %954 = getelementptr inbounds i8, i8* %947, i64 64
  %955 = getelementptr inbounds i8, i8* %947, i64 96
  %956 = bitcast i8* %955 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %954, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %956, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %948, %"class.spvtools::opt::Module"* %946) #10
  %957 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %939, i64 0, i32 6
  %958 = ptrtoint i8* %947 to i64
  %959 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %957, i64 0, i32 0, i32 0, i32 0
  %960 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %959, align 8
  %961 = bitcast %"class.std::__1::unique_ptr.62"* %957 to i64*
  store i64 %958, i64* %961, align 8
  %962 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %960, null
  br i1 %962, label %965, label %963

963:                                              ; preds = %944
  %964 = bitcast %"class.std::__1::unique_ptr.62"* %957 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %964, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %960) #10
  br label %965

965:                                              ; preds = %963, %944
  %966 = load i32, i32* %940, align 8
  %967 = or i32 %966, 1
  store i32 %967, i32* %940, align 8
  br label %968

968:                                              ; preds = %938, %965
  %969 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %939, i64 0, i32 6, i32 0, i32 0, i32 0
  %970 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %969, align 8
  %971 = load i8, i8* %910, align 4, !range !2
  %972 = icmp eq i8 %971, 0
  %973 = load i8, i8* %913, align 1, !range !2
  %974 = icmp eq i8 %973, 0
  %975 = select i1 %974, i32 1, i32 2
  %976 = xor i1 %974, true
  %977 = zext i1 %976 to i32
  %978 = select i1 %972, i32 %977, i32 %975
  %979 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %873, i32 %978) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %857) #10
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion13AreCompatibleEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %859, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion13AreCompatibleEvE3$_2FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %860, align 8
  store i64 %858, i64* %861, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEjRKNSt3__18functionIFvPNS0_11InstructionEjEEE(%"class.spvtools::opt::analysis::DefUseManager"* %970, i32 %979, %"class.std::__1::function.963"* nonnull dereferenceable(32) %9) #10
  %980 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %860, align 8
  %981 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %980, i64 0, i32 1
  %982 = load void (i8*)*, void (i8*)** %981, align 8
  %983 = icmp eq void (i8*)* %982, null
  br i1 %983, label %986, label %984

984:                                              ; preds = %968
  %985 = load i8*, i8** %862, align 8
  call void %982(i8* %985) #10
  br label %986

986:                                              ; preds = %968, %984
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %857) #10
  %987 = load i8, i8* %8, align 1, !range !2
  %988 = icmp eq i8 %987, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #10
  br i1 %988, label %1011, label %1021

989:                                              ; preds = %872
  %990 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 6
  %991 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 6, i32 0, i32 1
  %992 = bitcast %"struct.spvtools::opt::Operand"** %991 to i64*
  %993 = load i64, i64* %992, align 8
  %994 = bitcast %"class.std::__1::vector"* %990 to i64*
  %995 = load i64, i64* %994, align 8
  %996 = sub i64 %993, %995
  %997 = sdiv exact i64 %996, 48
  %998 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 3
  %999 = load i8, i8* %998, align 4, !range !2
  %1000 = icmp eq i8 %999, 0
  %1001 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %873, i64 0, i32 4
  %1002 = load i8, i8* %1001, align 1, !range !2
  %1003 = icmp eq i8 %1002, 0
  %1004 = select i1 %1003, i32 1, i32 2
  %1005 = xor i1 %1003, true
  %1006 = zext i1 %1005 to i32
  %1007 = select i1 %1000, i32 %1006, i32 %1004
  %1008 = trunc i64 %997 to i32
  %1009 = sub i32 %1008, %1007
  %1010 = icmp eq i32 %1009, 2
  br i1 %1010, label %1011, label %1021

1011:                                             ; preds = %872, %986, %989
  %1012 = inttoptr i64 %874 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %1013 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %1012, i64 0, i32 1
  %1014 = bitcast %"class.spvtools::opt::Instruction"** %1013 to i64*
  %1015 = load i64, i64* %1014, align 8
  %1016 = inttoptr i64 %1015 to %"class.spvtools::opt::Instruction"*
  %1017 = icmp eq %"class.spvtools::opt::Instruction"* %867, %1016
  br i1 %1017, label %1018, label %872

1018:                                             ; preds = %1011, %863
  %1019 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %864, i64 1
  %1020 = icmp eq %"class.spvtools::opt::BasicBlock"** %1019, %856
  br i1 %1020, label %1021, label %863

1021:                                             ; preds = %1018, %989, %986, %925, %907, %872, %848
  %1022 = phi i1 [ false, %848 ], [ false, %872 ], [ false, %907 ], [ false, %925 ], [ false, %986 ], [ false, %989 ], [ true, %1018 ]
  %1023 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %585, align 8
  br label %1024

1024:                                             ; preds = %1021, %850
  %1025 = phi %"class.spvtools::opt::BasicBlock"** [ %1023, %1021 ], [ %851, %850 ]
  %1026 = phi i1 [ %1022, %1021 ], [ true, %850 ]
  %1027 = icmp eq %"class.spvtools::opt::BasicBlock"** %1025, null
  br i1 %1027, label %1032, label %1028

1028:                                             ; preds = %1024
  %1029 = ptrtoint %"class.spvtools::opt::BasicBlock"** %1025 to i64
  %1030 = bitcast %"class.spvtools::opt::BasicBlock"*** %586 to i64*
  store i64 %1029, i64* %1030, align 8
  %1031 = bitcast %"class.spvtools::opt::BasicBlock"** %1025 to i8*
  call void @_ZdlPv(i8* %1031) #11
  br label %1032

1032:                                             ; preds = %1024, %1028
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %584) #10
  br label %1033

1033:                                             ; preds = %1032, %491, %571, %575, %577, %564, %570
  %1034 = phi i1 [ false, %570 ], [ false, %564 ], [ false, %577 ], [ false, %575 ], [ false, %571 ], [ false, %491 ], [ %1026, %1032 ]
  %1035 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %446, align 8
  br label %1036

1036:                                             ; preds = %1033, %547
  %1037 = phi %"class.spvtools::opt::Instruction"** [ %1035, %1033 ], [ %554, %547 ]
  %1038 = phi i1 [ %1034, %1033 ], [ false, %547 ]
  %1039 = icmp eq %"class.spvtools::opt::Instruction"** %1037, null
  br i1 %1039, label %1044, label %1040

1040:                                             ; preds = %1036
  %1041 = ptrtoint %"class.spvtools::opt::Instruction"** %1037 to i64
  %1042 = bitcast %"class.spvtools::opt::Instruction"*** %447 to i64*
  store i64 %1041, i64* %1042, align 8
  %1043 = bitcast %"class.spvtools::opt::Instruction"** %1037 to i8*
  call void @_ZdlPv(i8* %1043) #11
  br label %1044

1044:                                             ; preds = %1036, %1040
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #10
  %1045 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %443, align 8
  %1046 = icmp eq %"class.spvtools::opt::Instruction"** %1045, null
  br i1 %1046, label %1050, label %1047

1047:                                             ; preds = %1044
  %1048 = ptrtoint %"class.spvtools::opt::Instruction"** %1045 to i64
  store i64 %1048, i64* %494, align 8
  %1049 = bitcast %"class.spvtools::opt::Instruction"** %1045 to i8*
  call void @_ZdlPv(i8* %1049) #11
  br label %1050

1050:                                             ; preds = %1044, %1047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %442) #10
  br label %1051

1051:                                             ; preds = %330, %432, %126, %228, %23, %27, %1, %1050
  %1052 = phi i1 [ %1038, %1050 ], [ false, %1 ], [ false, %27 ], [ false, %23 ], [ false, %228 ], [ false, %126 ], [ false, %432 ], [ false, %330 ]
  ret i1 %1052
}

declare void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.945"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion9CheckInitEv(%"class.spvtools::opt::LoopFusion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  store i64 -6148914691236517206, i64* %2, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 1
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %9 = call zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* %6, %"class.spvtools::opt::Instruction"* %8, i64* nonnull %2) #10
  br i1 %9, label %10, label %23

10:                                               ; preds = %1
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 2
  %13 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = call zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* %13, %"class.spvtools::opt::Instruction"* %15, i64* nonnull %3) #10
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = load i64, i64* %2, align 8
  %19 = load i64, i64* %3, align 8
  %20 = icmp eq i64 %18, %19
  br label %21

21:                                               ; preds = %17, %10
  %22 = phi i1 [ false, %10 ], [ %20, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %23

23:                                               ; preds = %1, %21
  %24 = phi i1 [ %22, %21 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion14CheckConditionEv(%"class.spvtools::opt::LoopFusion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 1
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop16GetConditionInstEv(%"class.spvtools::opt::Loop"* %3) #10
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 2
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop16GetConditionInstEv(%"class.spvtools::opt::Loop"* %6) #10
  %8 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop20IsSupportedConditionE6SpvOp_(%"class.spvtools::opt::Loop"* %8, i32 %10) #10
  br i1 %11, label %12, label %134

12:                                               ; preds = %1
  %13 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop20IsSupportedConditionE6SpvOp_(%"class.spvtools::opt::Loop"* %13, i32 %15) #10
  br i1 %16, label %17, label %134

17:                                               ; preds = %12
  %18 = load i32, i32* %9, align 8
  %19 = load i32, i32* %14, align 8
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %134

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction17NumInOperandWordsEv(%"class.spvtools::opt::Instruction"* %4) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %134, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %31 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  br label %32

32:                                               ; preds = %25, %130
  %33 = phi i32 [ 0, %25 ], [ %131, %130 ]
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %34, i64 0, i32 11
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %63

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %40, align 8
  %42 = tail call i8* @_Znwm(i64 104) #11
  %43 = bitcast i8* %42 to %"class.spvtools::opt::analysis::DefUseManager"*
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = getelementptr inbounds i8, i8* %42, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  %48 = bitcast i8* %47 to i8**
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 64
  %50 = getelementptr inbounds i8, i8* %42, i64 96
  %51 = bitcast i8* %50 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %51, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %43, %"class.spvtools::opt::Module"* %41) #10
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %34, i64 0, i32 6
  %53 = ptrtoint i8* %42 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %54, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.62"* %52 to i64*
  store i64 %53, i64* %56, align 8
  %57 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %55, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %39
  %59 = bitcast %"class.std::__1::unique_ptr.62"* %52 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %59, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %55) #10
  br label %60

60:                                               ; preds = %58, %39
  %61 = load i32, i32* %35, align 8
  %62 = or i32 %61, 1
  store i32 %62, i32* %35, align 8
  br label %63

63:                                               ; preds = %32, %60
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %34, i64 0, i32 6, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %64, align 8
  %66 = load i8, i8* %27, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = load i8, i8* %28, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i32 1, i32 2
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i32
  %73 = select i1 %67, i32 %72, i32 %70
  %74 = add i32 %73, %33
  %75 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %74) #10
  %76 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %65, i32 %75) #10
  %77 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 11
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %106

82:                                               ; preds = %63
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %83, align 8
  %85 = tail call i8* @_Znwm(i64 104) #11
  %86 = bitcast i8* %85 to %"class.spvtools::opt::analysis::DefUseManager"*
  %87 = getelementptr inbounds i8, i8* %85, i64 32
  %88 = bitcast i8* %87 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %85, i64 48
  %90 = getelementptr inbounds i8, i8* %85, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #10
  %91 = bitcast i8* %90 to i8**
  store i8* %89, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 64
  %93 = getelementptr inbounds i8, i8* %85, i64 96
  %94 = bitcast i8* %93 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %94, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %86, %"class.spvtools::opt::Module"* %84) #10
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6
  %96 = ptrtoint i8* %85 to i64
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.62"* %95 to i64*
  store i64 %96, i64* %99, align 8
  %100 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %82
  %102 = bitcast %"class.std::__1::unique_ptr.62"* %95 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %102, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %98) #10
  br label %103

103:                                              ; preds = %101, %82
  %104 = load i32, i32* %78, align 8
  %105 = or i32 %104, 1
  store i32 %105, i32* %78, align 8
  br label %106

106:                                              ; preds = %63, %103
  %107 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %77, i64 0, i32 6, i32 0, i32 0, i32 0
  %108 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %107, align 8
  %109 = load i8, i8* %29, align 4, !range !2
  %110 = icmp eq i8 %109, 0
  %111 = load i8, i8* %30, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, i32 1, i32 2
  %114 = xor i1 %112, true
  %115 = zext i1 %114 to i32
  %116 = select i1 %110, i32 %115, i32 %113
  %117 = add i32 %116, %33
  %118 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %117) #10
  %119 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %108, i32 %118) #10
  %120 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %31, align 8
  %121 = icmp eq %"class.spvtools::opt::Instruction"* %76, %120
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  br i1 %121, label %123, label %125

123:                                              ; preds = %106
  %124 = icmp eq %"class.spvtools::opt::Instruction"* %119, %122
  br i1 %124, label %130, label %134

125:                                              ; preds = %106
  %126 = icmp ne %"class.spvtools::opt::Instruction"* %119, %122
  %127 = or i1 %121, %126
  %128 = icmp eq %"class.spvtools::opt::Instruction"* %76, %119
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %134

130:                                              ; preds = %125, %123
  %131 = add nuw i32 %33, 1
  %132 = tail call i32 @_ZNK8spvtools3opt11Instruction17NumInOperandWordsEv(%"class.spvtools::opt::Instruction"* %4) #10
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %32, label %134

134:                                              ; preds = %130, %125, %123, %21, %12, %1, %17
  %135 = phi i1 [ false, %17 ], [ false, %1 ], [ false, %12 ], [ true, %21 ], [ false, %123 ], [ true, %130 ], [ false, %125 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion9CheckStepEv(%"class.spvtools::opt::LoopFusion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %1
  %9 = tail call i8* @_Znwm(i64 104) #11
  %10 = bitcast i8* %9 to %"class.spvtools::opt::ScalarEvolutionAnalysis"*
  tail call void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %10, %"class.spvtools::opt::IRContext"* %3) #10
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 23
  %12 = ptrtoint i8* %9 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.638"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.638"* %11 to i64*
  store i64 %12, i64* %15, align 8
  %16 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::unique_ptr.638"* %11 to %"struct.std::__1::default_delete.692"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.692"* %18, %"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %14) #10
  br label %19

19:                                               ; preds = %17, %8
  %20 = load i32, i32* %4, align 8
  %21 = or i32 %20, 256
  store i32 %21, i32* %4, align 8
  br label %22

22:                                               ; preds = %1, %19
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 23, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %27 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %24, %"class.spvtools::opt::Instruction"* %26) #10
  %28 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %24, %"class.spvtools::opt::SENode"* %27) #10
  %29 = bitcast %"class.spvtools::opt::SENode"* %28 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %30 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %30, i64 6
  %32 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %31, align 8
  %33 = tail call %"class.spvtools::opt::SERecurrentNode"* %32(%"class.spvtools::opt::SENode"* %28) #10
  %34 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %33, null
  br i1 %34, label %75, label %35

35:                                               ; preds = %22
  %36 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %29, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %36, i64 6
  %38 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %37, align 8
  %39 = tail call %"class.spvtools::opt::SERecurrentNode"* %38(%"class.spvtools::opt::SENode"* %28) #10
  %40 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %39, i64 0, i32 1
  %41 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %40, align 8
  %42 = bitcast %"class.spvtools::opt::SENode"* %41 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %43 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %43, i64 4
  %45 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %44, align 8
  %46 = tail call %"class.spvtools::opt::SEConstantNode"* %45(%"class.spvtools::opt::SENode"* %41) #10
  %47 = icmp eq %"class.spvtools::opt::SEConstantNode"* %46, null
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %50 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %49, align 8
  %51 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %24, %"class.spvtools::opt::Instruction"* %50) #10
  %52 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %24, %"class.spvtools::opt::SENode"* %51) #10
  %53 = bitcast %"class.spvtools::opt::SENode"* %52 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %54 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %54, i64 6
  %56 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %55, align 8
  %57 = tail call %"class.spvtools::opt::SERecurrentNode"* %56(%"class.spvtools::opt::SENode"* %52) #10
  %58 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %57, null
  br i1 %58, label %75, label %59

59:                                               ; preds = %48
  %60 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %53, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %60, i64 6
  %62 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %61, align 8
  %63 = tail call %"class.spvtools::opt::SERecurrentNode"* %62(%"class.spvtools::opt::SENode"* %52) #10
  %64 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %63, i64 0, i32 1
  %65 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %64, align 8
  %66 = bitcast %"class.spvtools::opt::SENode"* %65 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %67 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %67, i64 4
  %69 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %68, align 8
  %70 = tail call %"class.spvtools::opt::SEConstantNode"* %69(%"class.spvtools::opt::SENode"* %65) #10
  %71 = icmp eq %"class.spvtools::opt::SEConstantNode"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %59
  %73 = tail call zeroext i1 @_ZNK8spvtools3opt6SENodeneERKS1_(%"class.spvtools::opt::SENode"* %41, %"class.spvtools::opt::SENode"* dereferenceable(48) %65) #10
  %74 = xor i1 %73, true
  br label %75

75:                                               ; preds = %35, %59, %72, %48, %22
  %76 = phi i1 [ false, %22 ], [ false, %35 ], [ false, %48 ], [ false, %59 ], [ %74, %72 ]
  ret i1 %76
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEjRKNSt3__18functionIFvPNS0_11InstructionEjEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.963"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion31ContainsBarriersOrFunctionCallsEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* nocapture readonly, %"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base.922"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 3
  br label %9

9:                                                ; preds = %7, %62
  %10 = phi i64 [ %5, %7 ], [ %64, %62 ]
  %11 = inttoptr i64 %10 to %"struct.std::__1::__hash_node.1195"*
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %11, i64 0, i32 2
  %13 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %8, align 8
  %14 = load i32, i32* %12, align 4
  %15 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %13, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %13, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.40"* %16, %18
  br i1 %19, label %40, label %20

20:                                               ; preds = %9, %37
  %21 = phi %"class.std::__1::unique_ptr.40"* [ %38, %37 ], [ %16, %9 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 3
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = zext i8 %31 to i32
  %33 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %25, i32 %32) #10
  br label %34

34:                                               ; preds = %29, %20
  %35 = phi i32 [ %33, %29 ], [ 0, %20 ]
  %36 = icmp eq i32 %35, %14
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %21, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %38, %18
  br i1 %39, label %40, label %20

40:                                               ; preds = %34, %37, %9
  %41 = phi %"class.std::__1::unique_ptr.40"* [ %16, %9 ], [ %18, %37 ], [ %21, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %43, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %43, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.spvtools::opt::Instruction"** %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"class.spvtools::opt::Instruction"*
  %49 = icmp eq %"class.spvtools::opt::Instruction"* %45, %48
  br i1 %49, label %62, label %50

50:                                               ; preds = %40, %55
  %51 = phi %"class.spvtools::opt::Instruction"* [ %60, %55 ], [ %48, %40 ]
  %52 = phi i64 [ %59, %55 ], [ %47, %40 ]
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  switch i32 %54, label %55 [
    i32 329, label %66
    i32 328, label %66
    i32 327, label %66
    i32 225, label %66
    i32 224, label %66
    i32 57, label %66
  ]

55:                                               ; preds = %50
  %56 = inttoptr i64 %52 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %57 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %56, i64 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = inttoptr i64 %59 to %"class.spvtools::opt::Instruction"*
  %61 = icmp eq %"class.spvtools::opt::Instruction"* %45, %60
  br i1 %61, label %62, label %50

62:                                               ; preds = %55, %40
  %63 = inttoptr i64 %10 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %9

66:                                               ; preds = %62, %50, %50, %50, %50, %50, %50, %2
  %67 = phi i1 [ false, %2 ], [ true, %50 ], [ true, %50 ], [ true, %50 ], [ true, %50 ], [ true, %50 ], [ true, %50 ], [ false, %62 ]
  ret i1 %67
}

declare zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, i64*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop16GetConditionInstEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt4Loop20IsSupportedConditionE6SpvOp_(%"class.spvtools::opt::Loop"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction17NumInOperandWordsEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt6SENodeneERKS1_(%"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10LoopFusion16LocationToMemOpsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.std::__1::map.970"* noalias sret, %"class.spvtools::opt::LoopFusion"* nocapture readonly, %"class.std::__1::vector.945"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 1
  %12 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::Instruction"** %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %1, i64 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1110"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %18 = bitcast %"class.std::__1::map.970"* %0 to i64*
  br label %20

19:                                               ; preds = %251, %3
  ret void

20:                                               ; preds = %14, %251
  %21 = phi %"class.spvtools::opt::Instruction"** [ %10, %14 ], [ %252, %251 ]
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 11
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %53

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %30, align 8
  %32 = tail call i8* @_Znwm(i64 104) #11
  %33 = bitcast i8* %32 to %"class.spvtools::opt::analysis::DefUseManager"*
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %32, i64 48
  %37 = getelementptr inbounds i8, i8* %32, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #10
  %38 = bitcast i8* %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 64
  %40 = getelementptr inbounds i8, i8* %32, i64 96
  %41 = bitcast i8* %40 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %41, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %33, %"class.spvtools::opt::Module"* %31) #10
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 6
  %43 = ptrtoint i8* %32 to i64
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %42, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.62"* %42 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %45, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %29
  %49 = bitcast %"class.std::__1::unique_ptr.62"* %42 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %49, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %45) #10
  br label %50

50:                                               ; preds = %48, %29
  %51 = load i32, i32* %25, align 8
  %52 = or i32 %51, 1
  store i32 %52, i32* %25, align 8
  br label %53

53:                                               ; preds = %20, %50
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 6, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %54, align 8
  %56 = inttoptr i64 %23 to %"class.spvtools::opt::Instruction"*
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 4
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, i32 1, i32 2
  %64 = xor i1 %62, true
  %65 = zext i1 %64 to i32
  %66 = select i1 %59, i32 %65, i32 %63
  %67 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %56, i32 %66) #10
  %68 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %55, i32 %67) #10
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 65
  br i1 %71, label %72, label %121

72:                                               ; preds = %53, %103
  %73 = phi %"class.spvtools::opt::Instruction"* [ %117, %103 ], [ %68, %53 ]
  %74 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %74, i64 0, i32 11
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %103

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %80, align 8
  %82 = tail call i8* @_Znwm(i64 104) #11
  %83 = bitcast i8* %82 to %"class.spvtools::opt::analysis::DefUseManager"*
  %84 = getelementptr inbounds i8, i8* %82, i64 32
  %85 = bitcast i8* %84 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %82, i64 48
  %87 = getelementptr inbounds i8, i8* %82, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #10
  %88 = bitcast i8* %87 to i8**
  store i8* %86, i8** %88, align 8
  %89 = getelementptr inbounds i8, i8* %82, i64 64
  %90 = getelementptr inbounds i8, i8* %82, i64 96
  %91 = bitcast i8* %90 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %91, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %83, %"class.spvtools::opt::Module"* %81) #10
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %74, i64 0, i32 6
  %93 = ptrtoint i8* %82 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.62"* %92 to i64*
  store i64 %93, i64* %96, align 8
  %97 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %95, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %79
  %99 = bitcast %"class.std::__1::unique_ptr.62"* %92 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %99, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %95) #10
  br label %100

100:                                              ; preds = %98, %79
  %101 = load i32, i32* %75, align 8
  %102 = or i32 %101, 1
  store i32 %102, i32* %75, align 8
  br label %103

103:                                              ; preds = %72, %100
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %74, i64 0, i32 6, i32 0, i32 0, i32 0
  %105 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %104, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 3
  %107 = load i8, i8* %106, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 4
  %110 = load i8, i8* %109, align 1, !range !2
  %111 = icmp eq i8 %110, 0
  %112 = select i1 %111, i32 1, i32 2
  %113 = xor i1 %111, true
  %114 = zext i1 %113 to i32
  %115 = select i1 %108, i32 %114, i32 %112
  %116 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %73, i32 %115) #10
  %117 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %105, i32 %116) #10
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %117, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 65
  br i1 %120, label %72, label %121

121:                                              ; preds = %103, %53
  %122 = phi %"class.spvtools::opt::Instruction"* [ %68, %53 ], [ %117, %103 ]
  %123 = ptrtoint %"class.spvtools::opt::Instruction"* %122 to i64
  %124 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %16, align 8
  %125 = icmp eq %"class.std::__1::__tree_node.1110"* %124, null
  br i1 %125, label %152, label %126

126:                                              ; preds = %121, %148
  %127 = phi %"class.std::__1::__tree_node.1110"* [ %151, %148 ], [ %124, %121 ]
  %128 = phi %"class.std::__1::__tree_node_base"** [ %150, %148 ], [ %5, %121 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = icmp ult %"class.spvtools::opt::Instruction"* %122, %130
  br i1 %131, label %132, label %138

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %148

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 0, i32 0
  br label %152

138:                                              ; preds = %126
  %139 = icmp ult %"class.spvtools::opt::Instruction"* %130, %122
  br i1 %139, label %140, label %146

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 0, i32 1
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %144, label %148

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 0, i32 0
  br label %152

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %127, i64 0, i32 0, i32 0
  br label %152

148:                                              ; preds = %140, %132
  %149 = phi %"class.std::__1::__tree_node_base"* [ %134, %132 ], [ %142, %140 ]
  %150 = phi %"class.std::__1::__tree_node_base"** [ %133, %132 ], [ %141, %140 ]
  %151 = bitcast %"class.std::__1::__tree_node_base"* %149 to %"class.std::__1::__tree_node.1110"*
  br label %126

152:                                              ; preds = %121, %146, %144, %136
  %153 = phi %"class.std::__1::__tree_end_node"* [ %137, %136 ], [ %145, %144 ], [ %147, %146 ], [ %7, %121 ]
  %154 = phi %"class.std::__1::__tree_node_base"** [ %133, %136 ], [ %141, %144 ], [ %128, %146 ], [ %17, %121 ]
  %155 = bitcast %"class.std::__1::__tree_node_base"** %154 to %"class.std::__1::__tree_node.1110"**
  %156 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node.1110"* %156, null
  br i1 %157, label %158, label %180

158:                                              ; preds = %152
  %159 = tail call i8* @_Znwm(i64 64) #11, !noalias !4
  %160 = getelementptr inbounds i8, i8* %159, i64 32
  %161 = bitcast i8* %160 to i64*
  store i64 %123, i64* %161, align 8, !noalias !4
  %162 = getelementptr inbounds i8, i8* %159, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #10, !noalias !4
  %163 = bitcast i8* %159 to %"class.std::__1::__tree_node.1110"*
  %164 = bitcast i8* %159 to %"class.std::__1::__tree_node_base"*
  %165 = getelementptr inbounds i8, i8* %159, i64 16
  %166 = bitcast i8* %165 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %153, %"class.std::__1::__tree_end_node"** %166, align 8
  %167 = bitcast %"class.std::__1::__tree_node_base"** %154 to i8**
  store i8* %159, i8** %167, align 8
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, null
  br i1 %171, label %175, label %172

172:                                              ; preds = %158
  %173 = ptrtoint %"class.std::__1::__tree_node_base"* %170 to i64
  store i64 %173, i64* %18, align 8
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  br label %175

175:                                              ; preds = %172, %158
  %176 = phi %"class.std::__1::__tree_node_base"* [ %164, %158 ], [ %174, %172 ]
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %177, %"class.std::__1::__tree_node_base"* %176) #10
  %178 = load i64, i64* %6, align 8
  %179 = add i64 %178, 1
  store i64 %179, i64* %6, align 8
  br label %180

180:                                              ; preds = %152, %175
  %181 = phi %"class.std::__1::__tree_node.1110"* [ %163, %175 ], [ %156, %152 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %181, i64 0, i32 1, i32 0, i32 1
  %183 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %181, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %184 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %181, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %186 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %185, align 8
  %187 = icmp eq %"class.spvtools::opt::Instruction"** %184, %186
  %188 = ptrtoint %"class.spvtools::opt::Instruction"** %186 to i64
  br i1 %187, label %194, label %189

189:                                              ; preds = %180
  %190 = bitcast %"class.spvtools::opt::Instruction"** %184 to i64*
  store i64 %23, i64* %190, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, i64 1
  %192 = ptrtoint %"class.spvtools::opt::Instruction"** %191 to i64
  %193 = bitcast %"class.spvtools::opt::Instruction"*** %183 to i64*
  store i64 %192, i64* %193, align 8
  br label %251

194:                                              ; preds = %180
  %195 = ptrtoint %"class.spvtools::opt::Instruction"** %184 to i64
  %196 = bitcast %"class.spvtools::opt::Instruction"*** %183 to i64*
  %197 = bitcast %"class.std::__1::vector.945"* %182 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %195, %198
  %200 = ashr exact i64 %199, 3
  %201 = add nsw i64 %200, 1
  %202 = icmp ugt i64 %201, 2305843009213693951
  br i1 %202, label %203, label %205

203:                                              ; preds = %194
  %204 = bitcast %"class.std::__1::vector.945"* %182 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %204) #12
  unreachable

205:                                              ; preds = %194
  %206 = bitcast %"class.spvtools::opt::Instruction"*** %185 to i64*
  %207 = sub i64 %188, %198
  %208 = ashr exact i64 %207, 3
  %209 = icmp ult i64 %208, 1152921504606846975
  br i1 %209, label %210, label %218

210:                                              ; preds = %205
  %211 = ashr exact i64 %207, 2
  %212 = icmp ult i64 %211, %201
  %213 = select i1 %212, i64 %201, i64 %211
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %210
  %216 = icmp ugt i64 %213, 2305843009213693951
  br i1 %216, label %217, label %218

217:                                              ; preds = %215
  tail call void @abort() #12
  unreachable

218:                                              ; preds = %215, %205
  %219 = phi i64 [ %213, %215 ], [ 2305843009213693951, %205 ]
  %220 = shl i64 %219, 3
  %221 = tail call i8* @_Znwm(i64 %220) #11
  %222 = bitcast i8* %221 to %"class.spvtools::opt::Instruction"**
  br label %223

223:                                              ; preds = %218, %210
  %224 = phi i64 [ %219, %218 ], [ 0, %210 ]
  %225 = phi %"class.spvtools::opt::Instruction"** [ %222, %218 ], [ null, %210 ]
  %226 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %225, i64 %200
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %225, i64 %224
  %228 = ptrtoint %"class.spvtools::opt::Instruction"** %227 to i64
  %229 = bitcast %"class.spvtools::opt::Instruction"** %226 to i64*
  store i64 %23, i64* %229, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %226, i64 1
  %231 = ptrtoint %"class.spvtools::opt::Instruction"** %230 to i64
  %232 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %182, i64 0, i32 0, i32 0
  %233 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %232, align 8
  %234 = load i64, i64* %196, align 8
  %235 = ptrtoint %"class.spvtools::opt::Instruction"** %233 to i64
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 3
  %238 = sub nsw i64 0, %237
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %226, i64 %238
  %240 = ptrtoint %"class.spvtools::opt::Instruction"** %239 to i64
  %241 = icmp sgt i64 %236, 0
  br i1 %241, label %242, label %246

242:                                              ; preds = %223
  %243 = bitcast %"class.spvtools::opt::Instruction"** %239 to i8*
  %244 = bitcast %"class.spvtools::opt::Instruction"** %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 %236, i1 false) #10
  %245 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %232, align 8
  br label %246

246:                                              ; preds = %242, %223
  %247 = phi %"class.spvtools::opt::Instruction"** [ %233, %223 ], [ %245, %242 ]
  store i64 %240, i64* %197, align 8
  store i64 %231, i64* %196, align 8
  store i64 %228, i64* %206, align 8
  %248 = icmp eq %"class.spvtools::opt::Instruction"** %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %246
  %250 = bitcast %"class.spvtools::opt::Instruction"** %247 to i8*
  tail call void @_ZdlPv(i8* %250) #11
  br label %251

251:                                              ; preds = %189, %246, %249
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, i64 1
  %253 = icmp eq %"class.spvtools::opt::Instruction"** %252, %12
  br i1 %253, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10LoopFusion23GetLoadsAndStoresInLoopEPNS0_4LoopE(%"struct.std::__1::pair"* noalias sret, %"class.spvtools::opt::LoopFusion"* nocapture readonly, %"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.945", align 8
  %5 = alloca %"class.std::__1::vector.945", align 8
  %6 = bitcast %"class.std::__1::vector.945"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  %10 = bitcast %"class.std::__1::vector.945"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast %"struct.std::__1::__hash_node_base.922"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %1, i64 0, i32 3
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i64*
  %22 = bitcast %"class.std::__1::vector.945"* %5 to i64*
  %23 = bitcast %"class.spvtools::opt::Instruction"*** %13 to i64*
  %24 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %25 = bitcast %"class.std::__1::vector.945"* %4 to i64*
  %26 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %42

27:                                               ; preds = %216, %3
  call void @_ZNSt3__14pairINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEES8_EC2IRS8_SB_Lb0EEEOT_OT0_(%"struct.std::__1::pair"* %0, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %5) #10
  %28 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, align 8
  %29 = icmp eq %"class.spvtools::opt::Instruction"** %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = ptrtoint %"class.spvtools::opt::Instruction"** %28 to i64
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.spvtools::opt::Instruction"** %28 to i8*
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %35 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %36 = icmp eq %"class.spvtools::opt::Instruction"** %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = ptrtoint %"class.spvtools::opt::Instruction"** %35 to i64
  %39 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %35 to i8*
  call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void

42:                                               ; preds = %18, %216
  %43 = phi i64 [ %16, %18 ], [ %218, %216 ]
  %44 = inttoptr i64 %43 to %"struct.std::__1::__hash_node.1195"*
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %19, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %56) #10
  br label %58

58:                                               ; preds = %42, %53
  %59 = phi i32 [ %57, %53 ], [ 0, %42 ]
  %60 = icmp eq i32 %46, %59
  br i1 %60, label %216, label %61

61:                                               ; preds = %58
  %62 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %20, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %62, i64 0, i32 3, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.40"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %61, %85
  %69 = phi %"class.std::__1::unique_ptr.40"* [ %86, %85 ], [ %64, %61 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %70, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %71, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 4
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 3
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = zext i8 %79 to i32
  %81 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %73, i32 %80) #10
  br label %82

82:                                               ; preds = %77, %68
  %83 = phi i32 [ %81, %77 ], [ 0, %68 ]
  %84 = icmp eq i32 %83, %46
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 1
  %87 = icmp eq %"class.std::__1::unique_ptr.40"* %86, %66
  br i1 %87, label %88, label %68

88:                                               ; preds = %82, %85, %61
  %89 = phi %"class.std::__1::unique_ptr.40"* [ %64, %61 ], [ %66, %85 ], [ %69, %82 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %91, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %93 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %91, i64 0, i32 2, i32 0, i32 1
  %94 = bitcast %"class.spvtools::opt::Instruction"** %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = inttoptr i64 %95 to %"class.spvtools::opt::Instruction"*
  %97 = icmp eq %"class.spvtools::opt::Instruction"* %93, %96
  br i1 %97, label %216, label %98

98:                                               ; preds = %88, %209
  %99 = phi %"class.spvtools::opt::Instruction"* [ %214, %209 ], [ %96, %88 ]
  %100 = phi i64 [ %213, %209 ], [ %95, %88 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %99, i64 0, i32 2
  %102 = load i32, i32* %101, align 8
  switch i32 %102, label %209 [
    i32 61, label %103
    i32 62, label %156
  ]

103:                                              ; preds = %98
  %104 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %105 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %106 = icmp ult %"class.spvtools::opt::Instruction"** %104, %105
  %107 = ptrtoint %"class.spvtools::opt::Instruction"** %105 to i64
  br i1 %106, label %108, label %112

108:                                              ; preds = %103
  %109 = bitcast %"class.spvtools::opt::Instruction"** %104 to i64*
  store i64 %100, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, i64 1
  %111 = ptrtoint %"class.spvtools::opt::Instruction"** %110 to i64
  store i64 %111, i64* %24, align 8
  br label %209

112:                                              ; preds = %103
  %113 = ptrtoint %"class.spvtools::opt::Instruction"** %104 to i64
  %114 = load i64, i64* %25, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.945"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %120) #12
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %107, %114
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  tail call void @abort() #12
  unreachable

133:                                              ; preds = %130, %121
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %121 ]
  %135 = shl i64 %134, 3
  %136 = tail call i8* @_Znwm(i64 %135) #11
  %137 = bitcast i8* %136 to %"class.spvtools::opt::Instruction"**
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi i8* [ %136, %133 ], [ null, %125 ]
  %141 = phi %"class.spvtools::opt::Instruction"** [ %137, %133 ], [ null, %125 ]
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %141, i64 %116
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %141, i64 %139
  %144 = ptrtoint %"class.spvtools::opt::Instruction"** %143 to i64
  %145 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %100, i64* %145, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, i64 1
  %147 = ptrtoint %"class.spvtools::opt::Instruction"** %146 to i64
  %148 = ptrtoint %"class.spvtools::opt::Instruction"** %141 to i64
  %149 = icmp sgt i64 %115, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %138
  %151 = inttoptr i64 %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %151, i64 %115, i1 false) #10
  br label %152

152:                                              ; preds = %150, %138
  store i64 %148, i64* %25, align 8
  store i64 %147, i64* %24, align 8
  store i64 %144, i64* %26, align 8
  %153 = icmp eq i64 %114, 0
  br i1 %153, label %209, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %114 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %209

156:                                              ; preds = %98
  %157 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, align 8
  %158 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %159 = icmp ult %"class.spvtools::opt::Instruction"** %157, %158
  %160 = ptrtoint %"class.spvtools::opt::Instruction"** %158 to i64
  br i1 %159, label %161, label %165

161:                                              ; preds = %156
  %162 = bitcast %"class.spvtools::opt::Instruction"** %157 to i64*
  store i64 %100, i64* %162, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, i64 1
  %164 = ptrtoint %"class.spvtools::opt::Instruction"** %163 to i64
  store i64 %164, i64* %21, align 8
  br label %209

165:                                              ; preds = %156
  %166 = ptrtoint %"class.spvtools::opt::Instruction"** %157 to i64
  %167 = load i64, i64* %22, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 3
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 2305843009213693951
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.945"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %173) #12
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %160, %167
  %176 = ashr exact i64 %175, 3
  %177 = icmp ult i64 %176, 1152921504606846975
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = ashr exact i64 %175, 2
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 2305843009213693951
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  tail call void @abort() #12
  unreachable

186:                                              ; preds = %183, %174
  %187 = phi i64 [ %181, %183 ], [ 2305843009213693951, %174 ]
  %188 = shl i64 %187, 3
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to %"class.spvtools::opt::Instruction"**
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi i8* [ %189, %186 ], [ null, %178 ]
  %194 = phi %"class.spvtools::opt::Instruction"** [ %190, %186 ], [ null, %178 ]
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %194, i64 %169
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %194, i64 %192
  %197 = ptrtoint %"class.spvtools::opt::Instruction"** %196 to i64
  %198 = bitcast %"class.spvtools::opt::Instruction"** %195 to i64*
  store i64 %100, i64* %198, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %195, i64 1
  %200 = ptrtoint %"class.spvtools::opt::Instruction"** %199 to i64
  %201 = ptrtoint %"class.spvtools::opt::Instruction"** %194 to i64
  %202 = icmp sgt i64 %168, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %191
  %204 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %204, i64 %168, i1 false) #10
  br label %205

205:                                              ; preds = %203, %191
  store i64 %201, i64* %22, align 8
  store i64 %200, i64* %21, align 8
  store i64 %197, i64* %23, align 8
  %206 = icmp eq i64 %167, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = inttoptr i64 %167 to i8*
  tail call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %98, %207, %205, %161, %154, %152, %108
  %210 = inttoptr i64 %100 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %211 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %210, i64 0, i32 1
  %212 = bitcast %"class.spvtools::opt::Instruction"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = inttoptr i64 %213 to %"class.spvtools::opt::Instruction"*
  %215 = icmp eq %"class.spvtools::opt::Instruction"* %93, %214
  br i1 %215, label %216, label %98

216:                                              ; preds = %209, %88, %58
  %217 = inttoptr i64 %43 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %27, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion12IsUsedInLoopEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.939", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #11
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #10
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #10
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #10
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = bitcast %"class.std::__1::function.939"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  %39 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion12IsUsedInLoopES5_PNS3_4LoopEE3$_3S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion12IsUsedInLoopEPNS5_11InstructionEPNS5_4LoopEE3$_3FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.939"* %4 to %"class.spvtools::opt::LoopFusion"**
  store %"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::LoopFusion"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast [8 x i8]* %42 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %2, %"class.spvtools::opt::Loop"** %43, align 8
  %44 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %37, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.939"* nonnull dereferenceable(32) %4) #10
  %45 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %45, i64 0, i32 1
  %47 = load void (i8*)*, void (i8*)** %46, align 8
  %48 = icmp eq void (i8*)* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void %47(i8* %51) #10
  br label %52

52:                                               ; preds = %35, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  %53 = xor i1 %44, true
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt10LoopFusion7IsLegalEv(%"class.spvtools::opt::LoopFusion"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::__less.1255", align 1
  %3 = alloca %"class.std::__1::function.939", align 8
  %4 = alloca %"class.std::__1::vector.945", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::function.981", align 8
  %7 = alloca %"struct.std::__1::pair", align 8
  %8 = alloca %"struct.std::__1::pair", align 8
  %9 = alloca %"class.std::__1::map.970", align 8
  %10 = alloca %"class.std::__1::map.970", align 8
  %11 = alloca %"class.std::__1::map.970", align 8
  %12 = alloca %"class.std::__1::map.970", align 8
  %13 = alloca %"class.std::__1::set.988", align 8
  %14 = alloca %"class.std::__1::set.988", align 8
  %15 = alloca %"class.std::__1::vector.945", align 8
  %16 = alloca %"class.std::__1::vector.945", align 8
  %17 = alloca %"class.std::__1::vector.996", align 8
  %18 = alloca %"class.spvtools::opt::LoopDependenceAnalysis", align 8
  %19 = alloca %"class.std::__1::vector.996", align 8
  %20 = alloca %"class.std::__1::vector.1009", align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 1
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = tail call zeroext i1 @_ZN8spvtools3opt10LoopFusion31ContainsBarriersOrFunctionCallsEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Loop"* %22)
  br i1 %23, label %1088, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 2
  %26 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  %27 = tail call zeroext i1 @_ZN8spvtools3opt10LoopFusion31ContainsBarriersOrFunctionCallsEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Loop"* %26)
  br i1 %27, label %1088, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::vector.945"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #10
  %32 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %32, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %4) #10
  %33 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %30, align 8
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %31, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %33, %34
  br i1 %35, label %44, label %38

36:                                               ; preds = %38
  %37 = icmp eq %"class.spvtools::opt::Instruction"** %43, %34
  br i1 %37, label %44, label %38

38:                                               ; preds = %28, %36
  %39 = phi %"class.spvtools::opt::Instruction"** [ %43, %36 ], [ %33, %28 ]
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  %42 = call zeroext i1 @_ZN8spvtools3opt10LoopFusion12IsUsedInLoopEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Instruction"* %40, %"class.spvtools::opt::Loop"* %41)
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, i64 1
  br i1 %42, label %1079, label %36

44:                                               ; preds = %36, %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %45 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %45, i64 0, i32 3
  %47 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %46, align 8
  %48 = bitcast %"class.std::__1::function.981"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #10
  %49 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion7IsLegalEvE3$_4S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %49, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion7IsLegalEvE3$_4FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %50, align 8
  %51 = bitcast %"class.std::__1::function.981"* %6 to %"class.spvtools::opt::LoopFusion"**
  store %"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::LoopFusion"** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast [8 x i8]* %52 to i8**
  store i8* %5, i8** %53, align 8
  %54 = bitcast %"class.std::__1::function.939"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #10
  %55 = ptrtoint %"class.std::__1::function.981"* %6 to i64
  %56 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %56, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %57, align 8
  %58 = bitcast %"class.std::__1::function.939"* %3 to i64*
  store i64 %55, i64* %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %47, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 0, i32 3
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp ne i8 %62, 0
  %64 = icmp eq %"class.spvtools::opt::Instruction"* %60, null
  %65 = or i1 %64, %63
  br i1 %65, label %86, label %66

66:                                               ; preds = %44
  %67 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 0
  br label %68

68:                                               ; preds = %77, %66
  %69 = phi %"class.spvtools::opt::Instruction"* [ %81, %77 ], [ %60, %66 ]
  %70 = icmp eq %"class.spvtools::opt::Instruction"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %69, i64 0, i32 0, i32 1
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %69, i64 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 245
  br i1 %76, label %77, label %84

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = select i1 %80, %"class.spvtools::opt::Instruction"* %73, %"class.spvtools::opt::Instruction"* null
  %82 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %56, align 8
  %83 = call zeroext i1 %82(%"union.std::__1::__function::__policy_storage"* nonnull %67, %"class.spvtools::opt::Instruction"* nonnull %69) #10
  br i1 %83, label %68, label %84

84:                                               ; preds = %68, %71, %77
  %85 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %57, align 8
  br label %86

86:                                               ; preds = %84, %44
  %87 = phi %"struct.std::__1::__function::__policy"* [ %85, %84 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %44 ]
  %88 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %87, i64 0, i32 1
  %89 = load void (i8*)*, void (i8*)** %88, align 8
  %90 = icmp eq void (i8*)* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %3, i64 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void %89(i8* %93) #10
  br label %94

94:                                               ; preds = %86, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #10
  %95 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %95, i64 0, i32 1
  %97 = load void (i8*)*, void (i8*)** %96, align 8
  %98 = icmp eq void (i8*)* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void %97(i8* %101) #10
  br label %102

102:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #10
  %103 = load i8, i8* %5, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %1077

105:                                              ; preds = %102
  %106 = bitcast %"struct.std::__1::pair"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %106) #10
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 1, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 1, i32 0, i32 1
  %111 = bitcast %"struct.std::__1::pair"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 48, i1 false)
  %112 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  call void @_ZN8spvtools3opt10LoopFusion23GetLoadsAndStoresInLoopEPNS0_4LoopE(%"struct.std::__1::pair"* nonnull sret %7, %"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Loop"* %112)
  %113 = bitcast %"struct.std::__1::pair"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %113) #10
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1, i32 0, i32 1
  %118 = bitcast %"struct.std::__1::pair"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 48, i1 false)
  %119 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  call void @_ZN8spvtools3opt10LoopFusion23GetLoadsAndStoresInLoopEPNS0_4LoopE(%"struct.std::__1::pair"* nonnull sret %8, %"class.spvtools::opt::LoopFusion"* %0, %"class.spvtools::opt::Loop"* %119)
  %120 = bitcast %"class.std::__1::map.970"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  %121 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 0
  %125 = bitcast %"class.std::__1::map.970"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt10LoopFusion16LocationToMemOpsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.std::__1::map.970"* nonnull sret %9, %"class.spvtools::opt::LoopFusion"* %0, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %124)
  %126 = bitcast %"class.std::__1::map.970"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  %127 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 1
  %131 = bitcast %"class.std::__1::map.970"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt10LoopFusion16LocationToMemOpsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.std::__1::map.970"* nonnull sret %10, %"class.spvtools::opt::LoopFusion"* %0, %"class.std::__1::vector.945"* dereferenceable(24) %130)
  %132 = bitcast %"class.std::__1::map.970"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #10
  %133 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %137 = bitcast %"class.std::__1::map.970"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt10LoopFusion16LocationToMemOpsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.std::__1::map.970"* nonnull sret %11, %"class.spvtools::opt::LoopFusion"* %0, %"class.std::__1::vector.945"* nonnull dereferenceable(24) %136)
  %138 = bitcast %"class.std::__1::map.970"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #10
  %139 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1
  %143 = bitcast %"class.std::__1::map.970"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt10LoopFusion16LocationToMemOpsERKNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.std::__1::map.970"* nonnull sret %12, %"class.spvtools::opt::LoopFusion"* %0, %"class.std::__1::vector.945"* dereferenceable(24) %142)
  %144 = bitcast %"class.std::__1::set.988"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #10
  %145 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %13, i64 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::set.988"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120GetLocationsAccessedERKNSt3__13mapIPNS0_11InstructionENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EENS7_INS2_4pairIKS5_S9_EEEEEESI_(%"class.std::__1::set.988"* nonnull sret %13, %"class.std::__1::map.970"* nonnull dereferenceable(24) %10, %"class.std::__1::map.970"* nonnull dereferenceable(24) %9)
  %147 = bitcast %"class.std::__1::set.988"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  %148 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %14, i64 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::set.988"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120GetLocationsAccessedERKNSt3__13mapIPNS0_11InstructionENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EENS7_INS2_4pairIKS5_S9_EEEEEESI_(%"class.std::__1::set.988"* nonnull sret %14, %"class.std::__1::map.970"* nonnull dereferenceable(24) %12, %"class.std::__1::map.970"* nonnull dereferenceable(24) %11)
  %150 = bitcast %"class.std::__1::vector.945"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #10
  %151 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %15, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %15, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #10
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %154 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %156 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__less.1255", %"struct.std::__1::__less.1255"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %157) #10
  %158 = call %"class.std::__1::vector.945"* @_ZNSt3__118__set_intersectionIRNS_6__lessIPN8spvtools3opt11InstructionES5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESD_NS_20back_insert_iteratorINS_6vectorIS5_NS_9allocatorIS5_EEEEEEEET2_T0_SL_T1_SM_SK_T_(%"class.std::__1::__tree_end_node"* %153, %"class.std::__1::__tree_end_node"* %154, %"class.std::__1::__tree_end_node"* %155, %"class.std::__1::__tree_end_node"* %156, %"class.std::__1::vector.945"* nonnull %15, %"struct.std::__1::__less.1255"* nonnull dereferenceable(1) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #10
  %159 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %151, align 8
  %160 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %152, align 8
  %161 = icmp eq %"class.spvtools::opt::Instruction"** %159, %160
  br i1 %161, label %1018, label %162

162:                                              ; preds = %105
  %163 = bitcast %"class.std::__1::vector.945"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #10
  %164 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %16, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %16, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #10
  %167 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to %"class.std::__1::__tree_node.1110"**
  %169 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %170 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.std::__1::__tree_node.1110"**
  %171 = bitcast %"class.spvtools::opt::Instruction"*** %165 to i64*
  %172 = bitcast %"class.std::__1::vector.945"* %16 to i64*
  %173 = bitcast %"class.spvtools::opt::Instruction"*** %166 to i64*
  br label %178

174:                                              ; preds = %286
  %175 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %164, align 8
  %176 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %165, align 8
  %177 = icmp eq %"class.spvtools::opt::Instruction"** %175, %176
  br i1 %177, label %1009, label %289

178:                                              ; preds = %162, %286
  %179 = phi %"class.spvtools::opt::Instruction"** [ %159, %162 ], [ %287, %286 ]
  %180 = bitcast %"class.spvtools::opt::Instruction"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %168, align 8
  %183 = icmp eq %"class.std::__1::__tree_node.1110"* %182, null
  br i1 %183, label %207, label %184

184:                                              ; preds = %178
  %185 = inttoptr i64 %181 to %"class.spvtools::opt::Instruction"*
  br label %186

186:                                              ; preds = %186, %184
  %187 = phi %"class.std::__1::__tree_end_node"* [ %167, %184 ], [ %197, %186 ]
  %188 = phi %"class.std::__1::__tree_node.1110"* [ %182, %184 ], [ %198, %186 ]
  %189 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %188, i64 0, i32 1, i32 0, i32 0
  %190 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, align 8
  %191 = icmp ult %"class.spvtools::opt::Instruction"* %190, %185
  %192 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %188, i64 0, i32 0, i32 1
  %193 = bitcast %"class.std::__1::__tree_node_base"** %192 to %"class.std::__1::__tree_node.1110"**
  %194 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %188, i64 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::__tree_node.1110"* %188 to %"class.std::__1::__tree_node.1110"**
  %196 = select i1 %191, %"class.std::__1::__tree_node.1110"** %193, %"class.std::__1::__tree_node.1110"** %195
  %197 = select i1 %191, %"class.std::__1::__tree_end_node"* %187, %"class.std::__1::__tree_end_node"* %194
  %198 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %196, align 8
  %199 = icmp eq %"class.std::__1::__tree_node.1110"* %198, null
  br i1 %199, label %200, label %186

200:                                              ; preds = %186
  %201 = icmp eq %"class.std::__1::__tree_end_node"* %197, %167
  br i1 %201, label %207, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %197, i64 4
  %204 = bitcast %"class.std::__1::__tree_end_node"* %203 to %"class.spvtools::opt::Instruction"**
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %204, align 8
  %206 = icmp ugt %"class.spvtools::opt::Instruction"* %205, %185
  br i1 %206, label %207, label %233

207:                                              ; preds = %202, %200, %178
  %208 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %170, align 8
  %209 = icmp eq %"class.std::__1::__tree_node.1110"* %208, null
  br i1 %209, label %286, label %210

210:                                              ; preds = %207
  %211 = inttoptr i64 %181 to %"class.spvtools::opt::Instruction"*
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi %"class.std::__1::__tree_end_node"* [ %169, %210 ], [ %223, %212 ]
  %214 = phi %"class.std::__1::__tree_node.1110"* [ %208, %210 ], [ %224, %212 ]
  %215 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %214, i64 0, i32 1, i32 0, i32 0
  %216 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %215, align 8
  %217 = icmp ult %"class.spvtools::opt::Instruction"* %216, %211
  %218 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %214, i64 0, i32 0, i32 1
  %219 = bitcast %"class.std::__1::__tree_node_base"** %218 to %"class.std::__1::__tree_node.1110"**
  %220 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %214, i64 0, i32 0, i32 0
  %221 = bitcast %"class.std::__1::__tree_node.1110"* %214 to %"class.std::__1::__tree_node.1110"**
  %222 = select i1 %217, %"class.std::__1::__tree_node.1110"** %219, %"class.std::__1::__tree_node.1110"** %221
  %223 = select i1 %217, %"class.std::__1::__tree_end_node"* %213, %"class.std::__1::__tree_end_node"* %220
  %224 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %222, align 8
  %225 = icmp eq %"class.std::__1::__tree_node.1110"* %224, null
  br i1 %225, label %226, label %212

226:                                              ; preds = %212
  %227 = icmp eq %"class.std::__1::__tree_end_node"* %223, %169
  br i1 %227, label %286, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %223, i64 4
  %230 = bitcast %"class.std::__1::__tree_end_node"* %229 to %"class.spvtools::opt::Instruction"**
  %231 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %232 = icmp ugt %"class.spvtools::opt::Instruction"* %231, %211
  br i1 %232, label %286, label %233

233:                                              ; preds = %228, %202
  %234 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %165, align 8
  %235 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %166, align 8
  %236 = icmp eq %"class.spvtools::opt::Instruction"** %234, %235
  %237 = ptrtoint %"class.spvtools::opt::Instruction"** %235 to i64
  br i1 %236, label %242, label %238

238:                                              ; preds = %233
  %239 = bitcast %"class.spvtools::opt::Instruction"** %234 to i64*
  store i64 %181, i64* %239, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %234, i64 1
  %241 = ptrtoint %"class.spvtools::opt::Instruction"** %240 to i64
  store i64 %241, i64* %171, align 8
  br label %286

242:                                              ; preds = %233
  %243 = ptrtoint %"class.spvtools::opt::Instruction"** %234 to i64
  %244 = load i64, i64* %172, align 8
  %245 = sub i64 %243, %244
  %246 = ashr exact i64 %245, 3
  %247 = add nsw i64 %246, 1
  %248 = icmp ugt i64 %247, 2305843009213693951
  br i1 %248, label %249, label %251

249:                                              ; preds = %242
  %250 = bitcast %"class.std::__1::vector.945"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %250) #12
  unreachable

251:                                              ; preds = %242
  %252 = sub i64 %237, %244
  %253 = ashr exact i64 %252, 3
  %254 = icmp ult i64 %253, 1152921504606846975
  br i1 %254, label %255, label %263

255:                                              ; preds = %251
  %256 = ashr exact i64 %252, 2
  %257 = icmp ult i64 %256, %247
  %258 = select i1 %257, i64 %247, i64 %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %268, label %260

260:                                              ; preds = %255
  %261 = icmp ugt i64 %258, 2305843009213693951
  br i1 %261, label %262, label %263

262:                                              ; preds = %260
  call void @abort() #12
  unreachable

263:                                              ; preds = %260, %251
  %264 = phi i64 [ %258, %260 ], [ 2305843009213693951, %251 ]
  %265 = shl i64 %264, 3
  %266 = call i8* @_Znwm(i64 %265) #11
  %267 = bitcast i8* %266 to %"class.spvtools::opt::Instruction"**
  br label %268

268:                                              ; preds = %263, %255
  %269 = phi i64 [ %264, %263 ], [ 0, %255 ]
  %270 = phi i8* [ %266, %263 ], [ null, %255 ]
  %271 = phi %"class.spvtools::opt::Instruction"** [ %267, %263 ], [ null, %255 ]
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %271, i64 %246
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %271, i64 %269
  %274 = ptrtoint %"class.spvtools::opt::Instruction"** %273 to i64
  %275 = bitcast %"class.spvtools::opt::Instruction"** %272 to i64*
  store i64 %181, i64* %275, align 8
  %276 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %272, i64 1
  %277 = ptrtoint %"class.spvtools::opt::Instruction"** %276 to i64
  %278 = ptrtoint %"class.spvtools::opt::Instruction"** %271 to i64
  %279 = icmp sgt i64 %245, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %268
  %281 = inttoptr i64 %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %281, i64 %245, i1 false) #10
  br label %282

282:                                              ; preds = %280, %268
  store i64 %278, i64* %172, align 8
  store i64 %277, i64* %171, align 8
  store i64 %274, i64* %173, align 8
  %283 = icmp eq i64 %244, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %282
  %285 = inttoptr i64 %244 to i8*
  call void @_ZdlPv(i8* %285) #11
  br label %286

286:                                              ; preds = %228, %226, %207, %284, %282, %238
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %179, i64 1
  %288 = icmp eq %"class.spvtools::opt::Instruction"** %287, %160
  br i1 %288, label %174, label %178

289:                                              ; preds = %174
  %290 = bitcast %"class.std::__1::vector.996"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #10
  %291 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %17, i64 0, i32 0, i32 0
  %292 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %17, i64 0, i32 0, i32 1
  %293 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 24, i1 false) #10
  %294 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %295 = icmp eq %"class.spvtools::opt::Loop"* %294, null
  %296 = bitcast %"class.spvtools::opt::Loop"*** %292 to i64*
  %297 = bitcast %"class.std::__1::vector.996"* %17 to i64*
  br i1 %295, label %304, label %298

298:                                              ; preds = %289
  %299 = bitcast %"class.spvtools::opt::Loop"*** %293 to i64*
  br label %508

300:                                              ; preds = %568
  %301 = load i64, i64* %296, align 8
  %302 = load i64, i64* %297, align 8
  %303 = inttoptr i64 %301 to %"class.spvtools::opt::Loop"**
  br label %304

304:                                              ; preds = %289, %300
  %305 = phi %"class.spvtools::opt::Loop"** [ %303, %300 ], [ null, %289 ]
  %306 = phi i64 [ %302, %300 ], [ 0, %289 ]
  %307 = phi i64 [ %301, %300 ], [ 0, %289 ]
  %308 = sub i64 %307, %306
  %309 = ashr exact i64 %308, 3
  %310 = add nsw i64 %309, -1
  %311 = inttoptr i64 %306 to %"class.spvtools::opt::Loop"**
  %312 = icmp eq %"class.spvtools::opt::Loop"** %305, %311
  br i1 %312, label %326, label %313

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %305, i64 -1
  %315 = icmp ugt %"class.spvtools::opt::Loop"** %314, %311
  br i1 %315, label %316, label %326

316:                                              ; preds = %313, %316
  %317 = phi %"class.spvtools::opt::Loop"** [ %324, %316 ], [ %314, %313 ]
  %318 = phi %"class.spvtools::opt::Loop"** [ %323, %316 ], [ %311, %313 ]
  %319 = bitcast %"class.spvtools::opt::Loop"** %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.spvtools::opt::Loop"** %317 to i64*
  %322 = load i64, i64* %321, align 8
  store i64 %322, i64* %319, align 8
  store i64 %320, i64* %321, align 8
  %323 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %318, i64 1
  %324 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %317, i64 -1
  %325 = icmp ult %"class.spvtools::opt::Loop"** %323, %324
  br i1 %325, label %316, label %326

326:                                              ; preds = %316, %304, %313
  %327 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_115CollectChildrenEPNS0_4LoopEPNSt3__16vectorIPKS2_NS4_9allocatorIS7_EEEE(%"class.spvtools::opt::Loop"* %327, %"class.std::__1::vector.996"* nonnull %17)
  %328 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_115CollectChildrenEPNS0_4LoopEPNSt3__16vectorIPKS2_NS4_9allocatorIS7_EEEE(%"class.spvtools::opt::Loop"* %328, %"class.std::__1::vector.996"* nonnull %17)
  %329 = bitcast %"class.spvtools::opt::LoopDependenceAnalysis"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %329) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %329, i8* align 8 bitcast (%"class.spvtools::opt::LoopDependenceAnalysis"* @__const._ZN8spvtools3opt10LoopFusion7IsLegalEv.analysis to i8*), i64 168, i1 false)
  %330 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %331 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %330, align 8
  %332 = bitcast %"class.std::__1::vector.996"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 24, i1 false) #10
  %333 = load i64, i64* %296, align 8
  %334 = load i64, i64* %297, align 8
  %335 = sub i64 %333, %334
  %336 = ashr exact i64 %335, 3
  %337 = icmp eq i64 %335, 0
  br i1 %337, label %360, label %338

338:                                              ; preds = %326
  %339 = icmp ugt i64 %336, 2305843009213693951
  br i1 %339, label %340, label %342

340:                                              ; preds = %338
  %341 = bitcast %"class.std::__1::vector.996"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %341) #12
  unreachable

342:                                              ; preds = %338
  %343 = call i8* @_Znwm(i64 %335) #11
  %344 = bitcast i8* %343 to %"class.spvtools::opt::Loop"**
  %345 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %19, i64 0, i32 0, i32 1
  %346 = bitcast %"class.spvtools::opt::Loop"*** %345 to i8**
  store i8* %343, i8** %346, align 8
  %347 = bitcast %"class.std::__1::vector.996"* %19 to i8**
  store i8* %343, i8** %347, align 8
  %348 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %344, i64 %336
  %349 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Loop"** %348, %"class.spvtools::opt::Loop"*** %349, align 8
  %350 = bitcast %"class.spvtools::opt::Loop"*** %345 to i64*
  %351 = ptrtoint i8* %343 to i64
  %352 = icmp sgt i64 %335, 0
  br i1 %352, label %353, label %358

353:                                              ; preds = %342
  %354 = lshr exact i64 %335, 3
  %355 = inttoptr i64 %334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %343, i8* align 8 %355, i64 %335, i1 false) #10
  %356 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %344, i64 %354
  %357 = ptrtoint %"class.spvtools::opt::Loop"** %356 to i64
  br label %358

358:                                              ; preds = %353, %342
  %359 = phi i64 [ %357, %353 ], [ %351, %342 ]
  store i64 %359, i64* %350, align 8
  br label %360

360:                                              ; preds = %326, %358
  %361 = phi i8* [ %343, %358 ], [ null, %326 ]
  %362 = phi %"class.spvtools::opt::Loop"** [ %344, %358 ], [ null, %326 ]
  %363 = phi i64 [ %351, %358 ], [ 0, %326 ]
  %364 = phi i64 [ %359, %358 ], [ 0, %326 ]
  %365 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %331, %"class.spvtools::opt::IRContext"** %365, align 8
  %366 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 1
  %367 = bitcast %"class.std::__1::vector.996"* %366 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %367, i8 0, i64 24, i1 false) #10
  %368 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %19, i64 0, i32 0, i32 1
  %369 = bitcast %"class.spvtools::opt::Loop"*** %368 to i64*
  %370 = sub i64 %364, %363
  %371 = ashr exact i64 %370, 3
  %372 = icmp eq i64 %370, 0
  br i1 %372, label %396, label %373

373:                                              ; preds = %360
  %374 = icmp ugt i64 %371, 2305843009213693951
  br i1 %374, label %375, label %377

375:                                              ; preds = %373
  %376 = bitcast %"class.std::__1::vector.996"* %366 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %376) #12
  unreachable

377:                                              ; preds = %373
  %378 = call i8* @_Znwm(i64 %370) #11
  %379 = bitcast i8* %378 to %"class.spvtools::opt::Loop"**
  %380 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 1, i32 0, i32 1
  %381 = bitcast %"class.spvtools::opt::Loop"*** %380 to i8**
  store i8* %378, i8** %381, align 8
  %382 = bitcast %"class.std::__1::vector.996"* %366 to i8**
  store i8* %378, i8** %382, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %379, i64 %371
  %384 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Loop"** %383, %"class.spvtools::opt::Loop"*** %384, align 8
  %385 = bitcast %"class.spvtools::opt::Loop"*** %380 to i64*
  %386 = ptrtoint i8* %378 to i64
  %387 = ptrtoint %"class.spvtools::opt::Loop"** %362 to i64
  %388 = sub i64 %364, %387
  %389 = icmp sgt i64 %388, 0
  br i1 %389, label %390, label %394

390:                                              ; preds = %377
  %391 = lshr exact i64 %388, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %378, i8* align 8 %361, i64 %388, i1 false) #10
  %392 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %379, i64 %391
  %393 = ptrtoint %"class.spvtools::opt::Loop"** %392 to i64
  br label %394

394:                                              ; preds = %390, %377
  %395 = phi i64 [ %393, %390 ], [ %386, %377 ]
  store i64 %395, i64* %385, align 8
  br label %396

396:                                              ; preds = %360, %394
  %397 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2
  call void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %397, %"class.spvtools::opt::IRContext"* %331) #10
  %398 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 3
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %398, align 8
  %399 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 4
  %400 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %399, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %399, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %400, %"struct.std::__1::__list_node_base"** %401, align 8
  %402 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %400, %"struct.std::__1::__list_node_base"** %402, align 8
  %403 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %403, align 8
  %404 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %19, i64 0, i32 0, i32 0
  %405 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %404, align 8
  %406 = icmp eq %"class.spvtools::opt::Loop"** %405, null
  br i1 %406, label %410, label %407

407:                                              ; preds = %396
  %408 = ptrtoint %"class.spvtools::opt::Loop"** %405 to i64
  store i64 %408, i64* %369, align 8
  %409 = bitcast %"class.spvtools::opt::Loop"** %405 to i8*
  call void @_ZdlPv(i8* %409) #11
  br label %410

410:                                              ; preds = %396, %407
  %411 = bitcast %"class.spvtools::opt::Loop"** %21 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.spvtools::opt::Loop"** %25 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2, i32 4
  %416 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2, i32 4, i32 0, i32 1, i32 0, i32 0
  %417 = bitcast %"class.std::__1::__tree_end_node"* %416 to %"class.std::__1::__tree_node.1092"**
  %418 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %417, align 8
  %419 = icmp eq %"class.std::__1::__tree_node.1092"* %418, null
  br i1 %419, label %449, label %420

420:                                              ; preds = %410
  %421 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %422 = inttoptr i64 %414 to %"class.spvtools::opt::Loop"*
  br label %423

423:                                              ; preds = %445, %420
  %424 = phi %"class.std::__1::__tree_node.1092"* [ %448, %445 ], [ %418, %420 ]
  %425 = phi %"class.std::__1::__tree_node_base"** [ %447, %445 ], [ %421, %420 ]
  %426 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 1, i32 0, i32 0
  %427 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %426, align 8
  %428 = icmp ugt %"class.spvtools::opt::Loop"* %427, %422
  br i1 %428, label %429, label %435

429:                                              ; preds = %423
  %430 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 0, i32 0, i32 0
  %431 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %430, align 8
  %432 = icmp eq %"class.std::__1::__tree_node_base"* %431, null
  br i1 %432, label %433, label %445

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 0, i32 0
  br label %451

435:                                              ; preds = %423
  %436 = icmp ult %"class.spvtools::opt::Loop"* %427, %422
  br i1 %436, label %437, label %443

437:                                              ; preds = %435
  %438 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 0, i32 1
  %439 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %438, align 8
  %440 = icmp eq %"class.std::__1::__tree_node_base"* %439, null
  br i1 %440, label %441, label %445

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 0, i32 0
  br label %451

443:                                              ; preds = %435
  %444 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %424, i64 0, i32 0, i32 0
  br label %451

445:                                              ; preds = %437, %429
  %446 = phi %"class.std::__1::__tree_node_base"* [ %431, %429 ], [ %439, %437 ]
  %447 = phi %"class.std::__1::__tree_node_base"** [ %430, %429 ], [ %438, %437 ]
  %448 = bitcast %"class.std::__1::__tree_node_base"* %446 to %"class.std::__1::__tree_node.1092"*
  br label %423

449:                                              ; preds = %410
  %450 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %416, i64 0, i32 0
  br label %451

451:                                              ; preds = %449, %443, %441, %433
  %452 = phi %"class.std::__1::__tree_end_node"* [ %416, %449 ], [ %434, %433 ], [ %442, %441 ], [ %444, %443 ]
  %453 = phi %"class.std::__1::__tree_node_base"** [ %450, %449 ], [ %430, %433 ], [ %438, %441 ], [ %425, %443 ]
  %454 = bitcast %"class.std::__1::__tree_node_base"** %453 to %"class.std::__1::__tree_node.1092"**
  %455 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %454, align 8
  %456 = icmp eq %"class.std::__1::__tree_node.1092"* %455, null
  br i1 %456, label %457, label %484

457:                                              ; preds = %451
  %458 = call i8* @_Znwm(i64 48) #11, !noalias !7
  %459 = getelementptr inbounds i8, i8* %458, i64 32
  %460 = bitcast i8* %459 to i64*
  store i64 %414, i64* %460, align 8, !noalias !7
  %461 = getelementptr inbounds i8, i8* %458, i64 40
  %462 = bitcast i8* %461 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %462, align 8, !noalias !7
  %463 = bitcast i8* %458 to %"class.std::__1::__tree_node.1092"*
  %464 = bitcast i8* %458 to %"class.std::__1::__tree_node_base"*
  %465 = getelementptr inbounds i8, i8* %458, i64 16
  %466 = bitcast i8* %465 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %452, %"class.std::__1::__tree_end_node"** %466, align 8
  %467 = bitcast %"class.std::__1::__tree_node_base"** %453 to i8**
  store i8* %458, i8** %467, align 8
  %468 = getelementptr inbounds %"class.std::__1::map.680", %"class.std::__1::map.680"* %415, i64 0, i32 0, i32 0
  %469 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %468, align 8
  %470 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %469, i64 0, i32 0
  %471 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %470, align 8
  %472 = icmp eq %"class.std::__1::__tree_node_base"* %471, null
  br i1 %472, label %477, label %473

473:                                              ; preds = %457
  %474 = ptrtoint %"class.std::__1::__tree_node_base"* %471 to i64
  %475 = bitcast %"class.std::__1::map.680"* %415 to i64*
  store i64 %474, i64* %475, align 8
  %476 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %453, align 8
  br label %477

477:                                              ; preds = %473, %457
  %478 = phi %"class.std::__1::__tree_node_base"* [ %464, %457 ], [ %476, %473 ]
  %479 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %480 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %479, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %480, %"class.std::__1::__tree_node_base"* %478) #10
  %481 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %18, i64 0, i32 2, i32 4, i32 0, i32 2, i32 0, i32 0
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 1
  store i64 %483, i64* %481, align 8
  br label %484

484:                                              ; preds = %451, %477
  %485 = phi %"class.std::__1::__tree_node.1092"* [ %463, %477 ], [ %455, %451 ]
  %486 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %485, i64 0, i32 1, i32 0, i32 1
  %487 = bitcast %"class.spvtools::opt::Loop"** %486 to i64*
  store i64 %412, i64* %487, align 8
  %488 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %164, align 8
  %489 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %165, align 8
  %490 = icmp eq %"class.spvtools::opt::Instruction"** %488, %489
  br i1 %490, label %1000, label %491

491:                                              ; preds = %484
  %492 = bitcast %"class.std::__1::vector.1009"* %20 to i8*
  %493 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %20, i64 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %20, i64 0, i32 0, i32 1
  %495 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %496 = bitcast %"class.std::__1::map.970"* %10 to i64*
  %497 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %498 = bitcast %"class.std::__1::__tree_end_node"* %497 to %"class.std::__1::__tree_node.1110"**
  %499 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %497, i64 0, i32 0
  %500 = bitcast %"class.std::__1::map.970"* %11 to i64*
  %501 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %502 = bitcast %"class.std::__1::__tree_end_node"* %501 to %"class.std::__1::__tree_node.1110"**
  %503 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %501, i64 0, i32 0
  %504 = bitcast %"class.std::__1::map.970"* %9 to i64*
  %505 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %506 = bitcast %"class.std::__1::map.970"* %12 to i64*
  %507 = bitcast %"class.std::__1::vector.1009"* %20 to i8**
  br label %578

508:                                              ; preds = %572, %298
  %509 = phi i64 [ 0, %298 ], [ %575, %572 ]
  %510 = phi %"class.spvtools::opt::Loop"** [ null, %298 ], [ %574, %572 ]
  %511 = phi %"class.spvtools::opt::Loop"** [ null, %298 ], [ %573, %572 ]
  %512 = phi %"class.spvtools::opt::Loop"* [ %294, %298 ], [ %570, %572 ]
  %513 = ptrtoint %"class.spvtools::opt::Loop"* %512 to i64
  %514 = icmp ult %"class.spvtools::opt::Loop"** %511, %510
  %515 = ptrtoint %"class.spvtools::opt::Loop"** %510 to i64
  br i1 %514, label %516, label %520

516:                                              ; preds = %508
  %517 = bitcast %"class.spvtools::opt::Loop"** %511 to i64*
  store i64 %513, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %511, i64 1
  %519 = ptrtoint %"class.spvtools::opt::Loop"** %518 to i64
  store i64 %519, i64* %296, align 8
  br label %568

520:                                              ; preds = %508
  %521 = ptrtoint %"class.spvtools::opt::Loop"** %511 to i64
  %522 = load i64, i64* %297, align 8
  %523 = sub i64 %521, %522
  %524 = ashr exact i64 %523, 3
  %525 = add nsw i64 %524, 1
  %526 = icmp ugt i64 %525, 2305843009213693951
  br i1 %526, label %527, label %529

527:                                              ; preds = %520
  %528 = bitcast %"class.std::__1::vector.996"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %528) #12
  unreachable

529:                                              ; preds = %520
  %530 = sub i64 %515, %522
  %531 = ashr exact i64 %530, 3
  %532 = icmp ult i64 %531, 1152921504606846975
  br i1 %532, label %533, label %541

533:                                              ; preds = %529
  %534 = ashr exact i64 %530, 2
  %535 = icmp ult i64 %534, %525
  %536 = select i1 %535, i64 %525, i64 %534
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %546, label %538

538:                                              ; preds = %533
  %539 = icmp ugt i64 %536, 2305843009213693951
  br i1 %539, label %540, label %541

540:                                              ; preds = %538
  call void @abort() #12
  unreachable

541:                                              ; preds = %538, %529
  %542 = phi i64 [ %536, %538 ], [ 2305843009213693951, %529 ]
  %543 = shl i64 %542, 3
  %544 = call i8* @_Znwm(i64 %543) #11
  %545 = bitcast i8* %544 to %"class.spvtools::opt::Loop"**
  br label %546

546:                                              ; preds = %541, %533
  %547 = phi i64 [ %542, %541 ], [ 0, %533 ]
  %548 = phi %"class.spvtools::opt::Loop"** [ %545, %541 ], [ null, %533 ]
  %549 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %548, i64 %524
  %550 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %548, i64 %547
  %551 = ptrtoint %"class.spvtools::opt::Loop"** %550 to i64
  %552 = bitcast %"class.spvtools::opt::Loop"** %549 to i64*
  store i64 %513, i64* %552, align 8
  %553 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %549, i64 1
  %554 = ptrtoint %"class.spvtools::opt::Loop"** %553 to i64
  %555 = sub i64 %509, %522
  %556 = ashr exact i64 %555, 3
  %557 = sub nsw i64 0, %556
  %558 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %549, i64 %557
  %559 = ptrtoint %"class.spvtools::opt::Loop"** %558 to i64
  %560 = icmp sgt i64 %555, 0
  br i1 %560, label %561, label %564

561:                                              ; preds = %546
  %562 = bitcast %"class.spvtools::opt::Loop"** %558 to i8*
  %563 = inttoptr i64 %522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %562, i8* align 8 %563, i64 %555, i1 false) #10
  br label %564

564:                                              ; preds = %561, %546
  store i64 %559, i64* %297, align 8
  store i64 %554, i64* %296, align 8
  store i64 %551, i64* %299, align 8
  %565 = icmp eq i64 %522, 0
  br i1 %565, label %568, label %566

566:                                              ; preds = %564
  %567 = inttoptr i64 %522 to i8*
  call void @_ZdlPv(i8* %567) #11
  br label %568

568:                                              ; preds = %516, %564, %566
  %569 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %512, i64 0, i32 6
  %570 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %569, align 8
  %571 = icmp eq %"class.spvtools::opt::Loop"* %570, null
  br i1 %571, label %300, label %572

572:                                              ; preds = %568
  %573 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %292, align 8
  %574 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %293, align 8
  %575 = ptrtoint %"class.spvtools::opt::Loop"** %573 to i64
  br label %508

576:                                              ; preds = %998
  %577 = icmp eq %"class.spvtools::opt::Instruction"** %999, %489
  br i1 %577, label %1000, label %578

578:                                              ; preds = %491, %576
  %579 = phi %"class.spvtools::opt::Instruction"** [ %488, %491 ], [ %999, %576 ]
  %580 = bitcast %"class.spvtools::opt::Instruction"** %579 to i64*
  %581 = load i64, i64* %580, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %492) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %492, i8 0, i64 24, i1 false) #10
  %582 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %168, align 8
  %583 = icmp eq %"class.std::__1::__tree_node.1110"* %582, null
  br i1 %583, label %612, label %584

584:                                              ; preds = %578
  %585 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %586

586:                                              ; preds = %608, %584
  %587 = phi %"class.std::__1::__tree_node.1110"* [ %611, %608 ], [ %582, %584 ]
  %588 = phi %"class.std::__1::__tree_node_base"** [ %610, %608 ], [ %128, %584 ]
  %589 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 1, i32 0, i32 0
  %590 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %589, align 8
  %591 = icmp ugt %"class.spvtools::opt::Instruction"* %590, %585
  br i1 %591, label %592, label %598

592:                                              ; preds = %586
  %593 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 0, i32 0, i32 0
  %594 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %593, align 8
  %595 = icmp eq %"class.std::__1::__tree_node_base"* %594, null
  br i1 %595, label %596, label %608

596:                                              ; preds = %592
  %597 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 0, i32 0
  br label %612

598:                                              ; preds = %586
  %599 = icmp ult %"class.spvtools::opt::Instruction"* %590, %585
  br i1 %599, label %600, label %606

600:                                              ; preds = %598
  %601 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 0, i32 1
  %602 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %601, align 8
  %603 = icmp eq %"class.std::__1::__tree_node_base"* %602, null
  br i1 %603, label %604, label %608

604:                                              ; preds = %600
  %605 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 0, i32 0
  br label %612

606:                                              ; preds = %598
  %607 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %587, i64 0, i32 0, i32 0
  br label %612

608:                                              ; preds = %600, %592
  %609 = phi %"class.std::__1::__tree_node_base"* [ %594, %592 ], [ %602, %600 ]
  %610 = phi %"class.std::__1::__tree_node_base"** [ %593, %592 ], [ %601, %600 ]
  %611 = bitcast %"class.std::__1::__tree_node_base"* %609 to %"class.std::__1::__tree_node.1110"*
  br label %586

612:                                              ; preds = %578, %606, %604, %596
  %613 = phi %"class.std::__1::__tree_end_node"* [ %597, %596 ], [ %605, %604 ], [ %607, %606 ], [ %167, %578 ]
  %614 = phi %"class.std::__1::__tree_node_base"** [ %593, %596 ], [ %601, %604 ], [ %588, %606 ], [ %495, %578 ]
  %615 = bitcast %"class.std::__1::__tree_node_base"** %614 to %"class.std::__1::__tree_node.1110"**
  %616 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %615, align 8
  %617 = icmp eq %"class.std::__1::__tree_node.1110"* %616, null
  br i1 %617, label %618, label %640

618:                                              ; preds = %612
  %619 = call i8* @_Znwm(i64 64) #11, !noalias !10
  %620 = getelementptr inbounds i8, i8* %619, i64 32
  %621 = bitcast i8* %620 to i64*
  store i64 %581, i64* %621, align 8, !noalias !10
  %622 = getelementptr inbounds i8, i8* %619, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %622, i8 0, i64 24, i1 false) #10, !noalias !10
  %623 = bitcast i8* %619 to %"class.std::__1::__tree_node.1110"*
  %624 = bitcast i8* %619 to %"class.std::__1::__tree_node_base"*
  %625 = getelementptr inbounds i8, i8* %619, i64 16
  %626 = bitcast i8* %625 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %619, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %613, %"class.std::__1::__tree_end_node"** %626, align 8
  %627 = bitcast %"class.std::__1::__tree_node_base"** %614 to i8**
  store i8* %619, i8** %627, align 8
  %628 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %629 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %628, i64 0, i32 0
  %630 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %629, align 8
  %631 = icmp eq %"class.std::__1::__tree_node_base"* %630, null
  br i1 %631, label %635, label %632

632:                                              ; preds = %618
  %633 = ptrtoint %"class.std::__1::__tree_node_base"* %630 to i64
  store i64 %633, i64* %496, align 8
  %634 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %614, align 8
  br label %635

635:                                              ; preds = %632, %618
  %636 = phi %"class.std::__1::__tree_node_base"* [ %624, %618 ], [ %634, %632 ]
  %637 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %637, %"class.std::__1::__tree_node_base"* %636) #10
  %638 = load i64, i64* %129, align 8
  %639 = add i64 %638, 1
  store i64 %639, i64* %129, align 8
  br label %640

640:                                              ; preds = %612, %635
  %641 = phi %"class.std::__1::__tree_node.1110"* [ %623, %635 ], [ %616, %612 ]
  %642 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %641, i64 0, i32 1, i32 0, i32 1
  %643 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %498, align 8
  %644 = icmp eq %"class.std::__1::__tree_node.1110"* %643, null
  br i1 %644, label %673, label %645

645:                                              ; preds = %640
  %646 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %647

647:                                              ; preds = %669, %645
  %648 = phi %"class.std::__1::__tree_node.1110"* [ %672, %669 ], [ %643, %645 ]
  %649 = phi %"class.std::__1::__tree_node_base"** [ %671, %669 ], [ %134, %645 ]
  %650 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 1, i32 0, i32 0
  %651 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, align 8
  %652 = icmp ugt %"class.spvtools::opt::Instruction"* %651, %646
  br i1 %652, label %653, label %659

653:                                              ; preds = %647
  %654 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 0, i32 0, i32 0
  %655 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %654, align 8
  %656 = icmp eq %"class.std::__1::__tree_node_base"* %655, null
  br i1 %656, label %657, label %669

657:                                              ; preds = %653
  %658 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 0, i32 0
  br label %673

659:                                              ; preds = %647
  %660 = icmp ult %"class.spvtools::opt::Instruction"* %651, %646
  br i1 %660, label %661, label %667

661:                                              ; preds = %659
  %662 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 0, i32 1
  %663 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %662, align 8
  %664 = icmp eq %"class.std::__1::__tree_node_base"* %663, null
  br i1 %664, label %665, label %669

665:                                              ; preds = %661
  %666 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 0, i32 0
  br label %673

667:                                              ; preds = %659
  %668 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %648, i64 0, i32 0, i32 0
  br label %673

669:                                              ; preds = %661, %653
  %670 = phi %"class.std::__1::__tree_node_base"* [ %655, %653 ], [ %663, %661 ]
  %671 = phi %"class.std::__1::__tree_node_base"** [ %654, %653 ], [ %662, %661 ]
  %672 = bitcast %"class.std::__1::__tree_node_base"* %670 to %"class.std::__1::__tree_node.1110"*
  br label %647

673:                                              ; preds = %640, %667, %665, %657
  %674 = phi %"class.std::__1::__tree_end_node"* [ %658, %657 ], [ %666, %665 ], [ %668, %667 ], [ %497, %640 ]
  %675 = phi %"class.std::__1::__tree_node_base"** [ %654, %657 ], [ %662, %665 ], [ %649, %667 ], [ %499, %640 ]
  %676 = bitcast %"class.std::__1::__tree_node_base"** %675 to %"class.std::__1::__tree_node.1110"**
  %677 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %676, align 8
  %678 = icmp eq %"class.std::__1::__tree_node.1110"* %677, null
  br i1 %678, label %679, label %701

679:                                              ; preds = %673
  %680 = call i8* @_Znwm(i64 64) #11, !noalias !13
  %681 = getelementptr inbounds i8, i8* %680, i64 32
  %682 = bitcast i8* %681 to i64*
  store i64 %581, i64* %682, align 8, !noalias !13
  %683 = getelementptr inbounds i8, i8* %680, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %683, i8 0, i64 24, i1 false) #10, !noalias !13
  %684 = bitcast i8* %680 to %"class.std::__1::__tree_node.1110"*
  %685 = bitcast i8* %680 to %"class.std::__1::__tree_node_base"*
  %686 = getelementptr inbounds i8, i8* %680, i64 16
  %687 = bitcast i8* %686 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %680, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %674, %"class.std::__1::__tree_end_node"** %687, align 8
  %688 = bitcast %"class.std::__1::__tree_node_base"** %675 to i8**
  store i8* %680, i8** %688, align 8
  %689 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %690 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %689, i64 0, i32 0
  %691 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %690, align 8
  %692 = icmp eq %"class.std::__1::__tree_node_base"* %691, null
  br i1 %692, label %696, label %693

693:                                              ; preds = %679
  %694 = ptrtoint %"class.std::__1::__tree_node_base"* %691 to i64
  store i64 %694, i64* %500, align 8
  %695 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %675, align 8
  br label %696

696:                                              ; preds = %693, %679
  %697 = phi %"class.std::__1::__tree_node_base"* [ %685, %679 ], [ %695, %693 ]
  %698 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %698, %"class.std::__1::__tree_node_base"* %697) #10
  %699 = load i64, i64* %135, align 8
  %700 = add i64 %699, 1
  store i64 %700, i64* %135, align 8
  br label %701

701:                                              ; preds = %673, %696
  %702 = phi %"class.std::__1::__tree_node.1110"* [ %684, %696 ], [ %677, %673 ]
  %703 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %702, i64 0, i32 1, i32 0, i32 1
  %704 = load i64, i64* %296, align 8
  %705 = load i64, i64* %297, align 8
  %706 = sub i64 %704, %705
  %707 = ashr exact i64 %706, 3
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_114GetDependencesEPNSt3__16vectorINS0_14DistanceVectorENS2_9allocatorIS4_EEEEPNS0_22LoopDependenceAnalysisERKNS3_IPNS0_11InstructionENS5_ISC_EEEESG_m(%"class.std::__1::vector.1009"* nonnull %20, %"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %18, %"class.std::__1::vector.945"* dereferenceable(24) %642, %"class.std::__1::vector.945"* dereferenceable(24) %703, i64 %707)
  %708 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %502, align 8
  %709 = icmp eq %"class.std::__1::__tree_node.1110"* %708, null
  br i1 %709, label %738, label %710

710:                                              ; preds = %701
  %711 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %712

712:                                              ; preds = %734, %710
  %713 = phi %"class.std::__1::__tree_node.1110"* [ %737, %734 ], [ %708, %710 ]
  %714 = phi %"class.std::__1::__tree_node_base"** [ %736, %734 ], [ %122, %710 ]
  %715 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 1, i32 0, i32 0
  %716 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %715, align 8
  %717 = icmp ugt %"class.spvtools::opt::Instruction"* %716, %711
  br i1 %717, label %718, label %724

718:                                              ; preds = %712
  %719 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 0, i32 0, i32 0
  %720 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %719, align 8
  %721 = icmp eq %"class.std::__1::__tree_node_base"* %720, null
  br i1 %721, label %722, label %734

722:                                              ; preds = %718
  %723 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 0, i32 0
  br label %738

724:                                              ; preds = %712
  %725 = icmp ult %"class.spvtools::opt::Instruction"* %716, %711
  br i1 %725, label %726, label %732

726:                                              ; preds = %724
  %727 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 0, i32 1
  %728 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %727, align 8
  %729 = icmp eq %"class.std::__1::__tree_node_base"* %728, null
  br i1 %729, label %730, label %734

730:                                              ; preds = %726
  %731 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 0, i32 0
  br label %738

732:                                              ; preds = %724
  %733 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %713, i64 0, i32 0, i32 0
  br label %738

734:                                              ; preds = %726, %718
  %735 = phi %"class.std::__1::__tree_node_base"* [ %720, %718 ], [ %728, %726 ]
  %736 = phi %"class.std::__1::__tree_node_base"** [ %719, %718 ], [ %727, %726 ]
  %737 = bitcast %"class.std::__1::__tree_node_base"* %735 to %"class.std::__1::__tree_node.1110"*
  br label %712

738:                                              ; preds = %701, %732, %730, %722
  %739 = phi %"class.std::__1::__tree_end_node"* [ %723, %722 ], [ %731, %730 ], [ %733, %732 ], [ %501, %701 ]
  %740 = phi %"class.std::__1::__tree_node_base"** [ %719, %722 ], [ %727, %730 ], [ %714, %732 ], [ %503, %701 ]
  %741 = bitcast %"class.std::__1::__tree_node_base"** %740 to %"class.std::__1::__tree_node.1110"**
  %742 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %741, align 8
  %743 = icmp eq %"class.std::__1::__tree_node.1110"* %742, null
  br i1 %743, label %744, label %766

744:                                              ; preds = %738
  %745 = call i8* @_Znwm(i64 64) #11, !noalias !16
  %746 = getelementptr inbounds i8, i8* %745, i64 32
  %747 = bitcast i8* %746 to i64*
  store i64 %581, i64* %747, align 8, !noalias !16
  %748 = getelementptr inbounds i8, i8* %745, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %748, i8 0, i64 24, i1 false) #10, !noalias !16
  %749 = bitcast i8* %745 to %"class.std::__1::__tree_node.1110"*
  %750 = bitcast i8* %745 to %"class.std::__1::__tree_node_base"*
  %751 = getelementptr inbounds i8, i8* %745, i64 16
  %752 = bitcast i8* %751 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %745, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %739, %"class.std::__1::__tree_end_node"** %752, align 8
  %753 = bitcast %"class.std::__1::__tree_node_base"** %740 to i8**
  store i8* %745, i8** %753, align 8
  %754 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %755 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %754, i64 0, i32 0
  %756 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %755, align 8
  %757 = icmp eq %"class.std::__1::__tree_node_base"* %756, null
  br i1 %757, label %761, label %758

758:                                              ; preds = %744
  %759 = ptrtoint %"class.std::__1::__tree_node_base"* %756 to i64
  store i64 %759, i64* %504, align 8
  %760 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %740, align 8
  br label %761

761:                                              ; preds = %758, %744
  %762 = phi %"class.std::__1::__tree_node_base"* [ %750, %744 ], [ %760, %758 ]
  %763 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %763, %"class.std::__1::__tree_node_base"* %762) #10
  %764 = load i64, i64* %123, align 8
  %765 = add i64 %764, 1
  store i64 %765, i64* %123, align 8
  br label %766

766:                                              ; preds = %738, %761
  %767 = phi %"class.std::__1::__tree_node.1110"* [ %749, %761 ], [ %742, %738 ]
  %768 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %767, i64 0, i32 1, i32 0, i32 1
  %769 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %170, align 8
  %770 = icmp eq %"class.std::__1::__tree_node.1110"* %769, null
  br i1 %770, label %799, label %771

771:                                              ; preds = %766
  %772 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %773

773:                                              ; preds = %795, %771
  %774 = phi %"class.std::__1::__tree_node.1110"* [ %798, %795 ], [ %769, %771 ]
  %775 = phi %"class.std::__1::__tree_node_base"** [ %797, %795 ], [ %140, %771 ]
  %776 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 1, i32 0, i32 0
  %777 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %776, align 8
  %778 = icmp ugt %"class.spvtools::opt::Instruction"* %777, %772
  br i1 %778, label %779, label %785

779:                                              ; preds = %773
  %780 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 0, i32 0, i32 0
  %781 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %780, align 8
  %782 = icmp eq %"class.std::__1::__tree_node_base"* %781, null
  br i1 %782, label %783, label %795

783:                                              ; preds = %779
  %784 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 0, i32 0
  br label %799

785:                                              ; preds = %773
  %786 = icmp ult %"class.spvtools::opt::Instruction"* %777, %772
  br i1 %786, label %787, label %793

787:                                              ; preds = %785
  %788 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 0, i32 1
  %789 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %788, align 8
  %790 = icmp eq %"class.std::__1::__tree_node_base"* %789, null
  br i1 %790, label %791, label %795

791:                                              ; preds = %787
  %792 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 0, i32 0
  br label %799

793:                                              ; preds = %785
  %794 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %774, i64 0, i32 0, i32 0
  br label %799

795:                                              ; preds = %787, %779
  %796 = phi %"class.std::__1::__tree_node_base"* [ %781, %779 ], [ %789, %787 ]
  %797 = phi %"class.std::__1::__tree_node_base"** [ %780, %779 ], [ %788, %787 ]
  %798 = bitcast %"class.std::__1::__tree_node_base"* %796 to %"class.std::__1::__tree_node.1110"*
  br label %773

799:                                              ; preds = %766, %793, %791, %783
  %800 = phi %"class.std::__1::__tree_end_node"* [ %784, %783 ], [ %792, %791 ], [ %794, %793 ], [ %169, %766 ]
  %801 = phi %"class.std::__1::__tree_node_base"** [ %780, %783 ], [ %788, %791 ], [ %775, %793 ], [ %505, %766 ]
  %802 = bitcast %"class.std::__1::__tree_node_base"** %801 to %"class.std::__1::__tree_node.1110"**
  %803 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %802, align 8
  %804 = icmp eq %"class.std::__1::__tree_node.1110"* %803, null
  br i1 %804, label %805, label %827

805:                                              ; preds = %799
  %806 = call i8* @_Znwm(i64 64) #11, !noalias !19
  %807 = getelementptr inbounds i8, i8* %806, i64 32
  %808 = bitcast i8* %807 to i64*
  store i64 %581, i64* %808, align 8, !noalias !19
  %809 = getelementptr inbounds i8, i8* %806, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %809, i8 0, i64 24, i1 false) #10, !noalias !19
  %810 = bitcast i8* %806 to %"class.std::__1::__tree_node.1110"*
  %811 = bitcast i8* %806 to %"class.std::__1::__tree_node_base"*
  %812 = getelementptr inbounds i8, i8* %806, i64 16
  %813 = bitcast i8* %812 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %806, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %800, %"class.std::__1::__tree_end_node"** %813, align 8
  %814 = bitcast %"class.std::__1::__tree_node_base"** %801 to i8**
  store i8* %806, i8** %814, align 8
  %815 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %816 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %815, i64 0, i32 0
  %817 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %816, align 8
  %818 = icmp eq %"class.std::__1::__tree_node_base"* %817, null
  br i1 %818, label %822, label %819

819:                                              ; preds = %805
  %820 = ptrtoint %"class.std::__1::__tree_node_base"* %817 to i64
  store i64 %820, i64* %506, align 8
  %821 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %801, align 8
  br label %822

822:                                              ; preds = %819, %805
  %823 = phi %"class.std::__1::__tree_node_base"* [ %811, %805 ], [ %821, %819 ]
  %824 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %824, %"class.std::__1::__tree_node_base"* %823) #10
  %825 = load i64, i64* %141, align 8
  %826 = add i64 %825, 1
  store i64 %826, i64* %141, align 8
  br label %827

827:                                              ; preds = %799, %822
  %828 = phi %"class.std::__1::__tree_node.1110"* [ %810, %822 ], [ %803, %799 ]
  %829 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %828, i64 0, i32 1, i32 0, i32 1
  %830 = load i64, i64* %296, align 8
  %831 = load i64, i64* %297, align 8
  %832 = sub i64 %830, %831
  %833 = ashr exact i64 %832, 3
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_114GetDependencesEPNSt3__16vectorINS0_14DistanceVectorENS2_9allocatorIS4_EEEEPNS0_22LoopDependenceAnalysisERKNS3_IPNS0_11InstructionENS5_ISC_EEEESG_m(%"class.std::__1::vector.1009"* nonnull %20, %"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %18, %"class.std::__1::vector.945"* dereferenceable(24) %768, %"class.std::__1::vector.945"* dereferenceable(24) %829, i64 %833)
  %834 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %168, align 8
  %835 = icmp eq %"class.std::__1::__tree_node.1110"* %834, null
  br i1 %835, label %864, label %836

836:                                              ; preds = %827
  %837 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %838

838:                                              ; preds = %860, %836
  %839 = phi %"class.std::__1::__tree_node.1110"* [ %863, %860 ], [ %834, %836 ]
  %840 = phi %"class.std::__1::__tree_node_base"** [ %862, %860 ], [ %128, %836 ]
  %841 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 1, i32 0, i32 0
  %842 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %841, align 8
  %843 = icmp ugt %"class.spvtools::opt::Instruction"* %842, %837
  br i1 %843, label %844, label %850

844:                                              ; preds = %838
  %845 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 0, i32 0, i32 0
  %846 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %845, align 8
  %847 = icmp eq %"class.std::__1::__tree_node_base"* %846, null
  br i1 %847, label %848, label %860

848:                                              ; preds = %844
  %849 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 0, i32 0
  br label %864

850:                                              ; preds = %838
  %851 = icmp ult %"class.spvtools::opt::Instruction"* %842, %837
  br i1 %851, label %852, label %858

852:                                              ; preds = %850
  %853 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 0, i32 1
  %854 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %853, align 8
  %855 = icmp eq %"class.std::__1::__tree_node_base"* %854, null
  br i1 %855, label %856, label %860

856:                                              ; preds = %852
  %857 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 0, i32 0
  br label %864

858:                                              ; preds = %850
  %859 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %839, i64 0, i32 0, i32 0
  br label %864

860:                                              ; preds = %852, %844
  %861 = phi %"class.std::__1::__tree_node_base"* [ %846, %844 ], [ %854, %852 ]
  %862 = phi %"class.std::__1::__tree_node_base"** [ %845, %844 ], [ %853, %852 ]
  %863 = bitcast %"class.std::__1::__tree_node_base"* %861 to %"class.std::__1::__tree_node.1110"*
  br label %838

864:                                              ; preds = %827, %858, %856, %848
  %865 = phi %"class.std::__1::__tree_end_node"* [ %849, %848 ], [ %857, %856 ], [ %859, %858 ], [ %167, %827 ]
  %866 = phi %"class.std::__1::__tree_node_base"** [ %845, %848 ], [ %853, %856 ], [ %840, %858 ], [ %495, %827 ]
  %867 = bitcast %"class.std::__1::__tree_node_base"** %866 to %"class.std::__1::__tree_node.1110"**
  %868 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %867, align 8
  %869 = icmp eq %"class.std::__1::__tree_node.1110"* %868, null
  br i1 %869, label %870, label %892

870:                                              ; preds = %864
  %871 = call i8* @_Znwm(i64 64) #11, !noalias !22
  %872 = getelementptr inbounds i8, i8* %871, i64 32
  %873 = bitcast i8* %872 to i64*
  store i64 %581, i64* %873, align 8, !noalias !22
  %874 = getelementptr inbounds i8, i8* %871, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %874, i8 0, i64 24, i1 false) #10, !noalias !22
  %875 = bitcast i8* %871 to %"class.std::__1::__tree_node.1110"*
  %876 = bitcast i8* %871 to %"class.std::__1::__tree_node_base"*
  %877 = getelementptr inbounds i8, i8* %871, i64 16
  %878 = bitcast i8* %877 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %871, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %865, %"class.std::__1::__tree_end_node"** %878, align 8
  %879 = bitcast %"class.std::__1::__tree_node_base"** %866 to i8**
  store i8* %871, i8** %879, align 8
  %880 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %881 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %880, i64 0, i32 0
  %882 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %881, align 8
  %883 = icmp eq %"class.std::__1::__tree_node_base"* %882, null
  br i1 %883, label %887, label %884

884:                                              ; preds = %870
  %885 = ptrtoint %"class.std::__1::__tree_node_base"* %882 to i64
  store i64 %885, i64* %496, align 8
  %886 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %866, align 8
  br label %887

887:                                              ; preds = %884, %870
  %888 = phi %"class.std::__1::__tree_node_base"* [ %876, %870 ], [ %886, %884 ]
  %889 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %889, %"class.std::__1::__tree_node_base"* %888) #10
  %890 = load i64, i64* %129, align 8
  %891 = add i64 %890, 1
  store i64 %891, i64* %129, align 8
  br label %892

892:                                              ; preds = %864, %887
  %893 = phi %"class.std::__1::__tree_node.1110"* [ %875, %887 ], [ %868, %864 ]
  %894 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %893, i64 0, i32 1, i32 0, i32 1
  %895 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %170, align 8
  %896 = icmp eq %"class.std::__1::__tree_node.1110"* %895, null
  br i1 %896, label %925, label %897

897:                                              ; preds = %892
  %898 = inttoptr i64 %581 to %"class.spvtools::opt::Instruction"*
  br label %899

899:                                              ; preds = %921, %897
  %900 = phi %"class.std::__1::__tree_node.1110"* [ %924, %921 ], [ %895, %897 ]
  %901 = phi %"class.std::__1::__tree_node_base"** [ %923, %921 ], [ %140, %897 ]
  %902 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 1, i32 0, i32 0
  %903 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %902, align 8
  %904 = icmp ugt %"class.spvtools::opt::Instruction"* %903, %898
  br i1 %904, label %905, label %911

905:                                              ; preds = %899
  %906 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 0, i32 0, i32 0
  %907 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %906, align 8
  %908 = icmp eq %"class.std::__1::__tree_node_base"* %907, null
  br i1 %908, label %909, label %921

909:                                              ; preds = %905
  %910 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 0, i32 0
  br label %925

911:                                              ; preds = %899
  %912 = icmp ult %"class.spvtools::opt::Instruction"* %903, %898
  br i1 %912, label %913, label %919

913:                                              ; preds = %911
  %914 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 0, i32 1
  %915 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %914, align 8
  %916 = icmp eq %"class.std::__1::__tree_node_base"* %915, null
  br i1 %916, label %917, label %921

917:                                              ; preds = %913
  %918 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 0, i32 0
  br label %925

919:                                              ; preds = %911
  %920 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %900, i64 0, i32 0, i32 0
  br label %925

921:                                              ; preds = %913, %905
  %922 = phi %"class.std::__1::__tree_node_base"* [ %907, %905 ], [ %915, %913 ]
  %923 = phi %"class.std::__1::__tree_node_base"** [ %906, %905 ], [ %914, %913 ]
  %924 = bitcast %"class.std::__1::__tree_node_base"* %922 to %"class.std::__1::__tree_node.1110"*
  br label %899

925:                                              ; preds = %892, %919, %917, %909
  %926 = phi %"class.std::__1::__tree_end_node"* [ %910, %909 ], [ %918, %917 ], [ %920, %919 ], [ %169, %892 ]
  %927 = phi %"class.std::__1::__tree_node_base"** [ %906, %909 ], [ %914, %917 ], [ %901, %919 ], [ %505, %892 ]
  %928 = bitcast %"class.std::__1::__tree_node_base"** %927 to %"class.std::__1::__tree_node.1110"**
  %929 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %928, align 8
  %930 = icmp eq %"class.std::__1::__tree_node.1110"* %929, null
  br i1 %930, label %931, label %953

931:                                              ; preds = %925
  %932 = call i8* @_Znwm(i64 64) #11, !noalias !25
  %933 = getelementptr inbounds i8, i8* %932, i64 32
  %934 = bitcast i8* %933 to i64*
  store i64 %581, i64* %934, align 8, !noalias !25
  %935 = getelementptr inbounds i8, i8* %932, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %935, i8 0, i64 24, i1 false) #10, !noalias !25
  %936 = bitcast i8* %932 to %"class.std::__1::__tree_node.1110"*
  %937 = bitcast i8* %932 to %"class.std::__1::__tree_node_base"*
  %938 = getelementptr inbounds i8, i8* %932, i64 16
  %939 = bitcast i8* %938 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %932, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %926, %"class.std::__1::__tree_end_node"** %939, align 8
  %940 = bitcast %"class.std::__1::__tree_node_base"** %927 to i8**
  store i8* %932, i8** %940, align 8
  %941 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %942 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %941, i64 0, i32 0
  %943 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %942, align 8
  %944 = icmp eq %"class.std::__1::__tree_node_base"* %943, null
  br i1 %944, label %948, label %945

945:                                              ; preds = %931
  %946 = ptrtoint %"class.std::__1::__tree_node_base"* %943 to i64
  store i64 %946, i64* %506, align 8
  %947 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %927, align 8
  br label %948

948:                                              ; preds = %945, %931
  %949 = phi %"class.std::__1::__tree_node_base"* [ %937, %931 ], [ %947, %945 ]
  %950 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %950, %"class.std::__1::__tree_node_base"* %949) #10
  %951 = load i64, i64* %141, align 8
  %952 = add i64 %951, 1
  store i64 %952, i64* %141, align 8
  br label %953

953:                                              ; preds = %925, %948
  %954 = phi %"class.std::__1::__tree_node.1110"* [ %936, %948 ], [ %929, %925 ]
  %955 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %954, i64 0, i32 1, i32 0, i32 1
  %956 = load i64, i64* %296, align 8
  %957 = load i64, i64* %297, align 8
  %958 = sub i64 %956, %957
  %959 = ashr exact i64 %958, 3
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_114GetDependencesEPNSt3__16vectorINS0_14DistanceVectorENS2_9allocatorIS4_EEEEPNS0_22LoopDependenceAnalysisERKNS3_IPNS0_11InstructionENS5_ISC_EEEESG_m(%"class.std::__1::vector.1009"* nonnull %20, %"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %18, %"class.std::__1::vector.945"* dereferenceable(24) %894, %"class.std::__1::vector.945"* dereferenceable(24) %955, i64 %959)
  %960 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %493, align 8
  %961 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %494, align 8
  %962 = icmp eq %"class.spvtools::opt::DistanceVector"* %960, %961
  br i1 %962, label %976, label %963

963:                                              ; preds = %953, %973
  %964 = phi %"class.spvtools::opt::DistanceVector"* [ %974, %973 ], [ %960, %953 ]
  %965 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %964, i64 0, i32 0, i32 0, i32 0
  %966 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %965, align 8
  %967 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %966, i64 %310, i32 0
  %968 = load i32, i32* %967, align 8
  switch i32 %968, label %976 [
    i32 2, label %969
    i32 4, label %973
  ]

969:                                              ; preds = %963
  %970 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %966, i64 %310, i32 2
  %971 = load i64, i64* %970, align 8
  %972 = icmp slt i64 %971, 1
  br i1 %972, label %973, label %976

973:                                              ; preds = %963, %969
  %974 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %964, i64 1
  %975 = icmp eq %"class.spvtools::opt::DistanceVector"* %974, %961
  br i1 %975, label %976, label %963

976:                                              ; preds = %969, %963, %973, %953
  %977 = phi i1 [ true, %953 ], [ true, %973 ], [ false, %963 ], [ false, %969 ]
  %978 = icmp eq %"class.spvtools::opt::DistanceVector"* %960, null
  br i1 %978, label %998, label %979

979:                                              ; preds = %976
  %980 = bitcast %"class.spvtools::opt::DistanceVector"* %960 to i8*
  br i1 %962, label %996, label %981

981:                                              ; preds = %979, %992
  %982 = phi %"class.spvtools::opt::DistanceVector"* [ %983, %992 ], [ %961, %979 ]
  %983 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %982, i64 -1
  %984 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %983, i64 0, i32 0, i32 0, i32 0
  %985 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %984, align 8
  %986 = icmp eq %"class.spvtools::opt::DistanceEntry"* %985, null
  br i1 %986, label %992, label %987

987:                                              ; preds = %981
  %988 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %985 to i64
  %989 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %982, i64 -1, i32 0, i32 0, i32 1
  %990 = bitcast %"class.spvtools::opt::DistanceEntry"** %989 to i64*
  store i64 %988, i64* %990, align 8
  %991 = bitcast %"class.spvtools::opt::DistanceEntry"* %985 to i8*
  call void @_ZdlPv(i8* %991) #11
  br label %992

992:                                              ; preds = %987, %981
  %993 = icmp eq %"class.spvtools::opt::DistanceVector"* %983, %960
  br i1 %993, label %994, label %981

994:                                              ; preds = %992
  %995 = load i8*, i8** %507, align 8
  br label %996

996:                                              ; preds = %994, %979
  %997 = phi i8* [ %995, %994 ], [ %980, %979 ]
  store %"class.spvtools::opt::DistanceVector"* %960, %"class.spvtools::opt::DistanceVector"** %494, align 8
  call void @_ZdlPv(i8* %997) #11
  br label %998

998:                                              ; preds = %976, %996
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %492) #10
  %999 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %579, i64 1
  br i1 %977, label %576, label %1000

1000:                                             ; preds = %998, %576, %484
  %1001 = phi i1 [ true, %484 ], [ true, %576 ], [ false, %998 ]
  call void @_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev(%"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %329) #10
  %1002 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %291, align 8
  %1003 = icmp eq %"class.spvtools::opt::Loop"** %1002, null
  br i1 %1003, label %1007, label %1004

1004:                                             ; preds = %1000
  %1005 = ptrtoint %"class.spvtools::opt::Loop"** %1002 to i64
  store i64 %1005, i64* %296, align 8
  %1006 = bitcast %"class.spvtools::opt::Loop"** %1002 to i8*
  call void @_ZdlPv(i8* %1006) #11
  br label %1007

1007:                                             ; preds = %1000, %1004
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #10
  %1008 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %164, align 8
  br label %1009

1009:                                             ; preds = %174, %1007
  %1010 = phi %"class.spvtools::opt::Instruction"** [ %175, %174 ], [ %1008, %1007 ]
  %1011 = phi i1 [ true, %174 ], [ %1001, %1007 ]
  %1012 = icmp eq %"class.spvtools::opt::Instruction"** %1010, null
  br i1 %1012, label %1016, label %1013

1013:                                             ; preds = %1009
  %1014 = ptrtoint %"class.spvtools::opt::Instruction"** %1010 to i64
  store i64 %1014, i64* %171, align 8
  %1015 = bitcast %"class.spvtools::opt::Instruction"** %1010 to i8*
  call void @_ZdlPv(i8* %1015) #11
  br label %1016

1016:                                             ; preds = %1009, %1013
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #10
  %1017 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %151, align 8
  br label %1018

1018:                                             ; preds = %105, %1016
  %1019 = phi %"class.spvtools::opt::Instruction"** [ %159, %105 ], [ %1017, %1016 ]
  %1020 = phi i1 [ true, %105 ], [ %1011, %1016 ]
  %1021 = icmp eq %"class.spvtools::opt::Instruction"** %1019, null
  br i1 %1021, label %1026, label %1022

1022:                                             ; preds = %1018
  %1023 = ptrtoint %"class.spvtools::opt::Instruction"** %1019 to i64
  %1024 = bitcast %"class.spvtools::opt::Instruction"*** %152 to i64*
  store i64 %1023, i64* %1024, align 8
  %1025 = bitcast %"class.spvtools::opt::Instruction"** %1019 to i8*
  call void @_ZdlPv(i8* %1025) #11
  br label %1026

1026:                                             ; preds = %1018, %1022
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #10
  %1027 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %14, i64 0, i32 0
  %1028 = bitcast %"class.std::__1::__tree_end_node"* %156 to %"class.std::__1::__tree_node.1114"**
  %1029 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %1028, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.989"* nonnull %1027, %"class.std::__1::__tree_node.1114"* %1029) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  %1030 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %13, i64 0, i32 0
  %1031 = bitcast %"class.std::__1::__tree_end_node"* %154 to %"class.std::__1::__tree_node.1114"**
  %1032 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %1031, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.989"* nonnull %1030, %"class.std::__1::__tree_node.1114"* %1032) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #10
  %1033 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0
  %1034 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %1035 = bitcast %"class.std::__1::__tree_end_node"* %1034 to %"class.std::__1::__tree_node.1110"**
  %1036 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %1035, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* nonnull %1033, %"class.std::__1::__tree_node.1110"* %1036) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #10
  %1037 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0
  %1038 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %1039 = bitcast %"class.std::__1::__tree_end_node"* %1038 to %"class.std::__1::__tree_node.1110"**
  %1040 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %1039, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* nonnull %1037, %"class.std::__1::__tree_node.1110"* %1040) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #10
  %1041 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0
  %1042 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %1043 = bitcast %"class.std::__1::__tree_end_node"* %1042 to %"class.std::__1::__tree_node.1110"**
  %1044 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %1043, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* nonnull %1041, %"class.std::__1::__tree_node.1110"* %1044) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  %1045 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0
  %1046 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %1047 = bitcast %"class.std::__1::__tree_end_node"* %1046 to %"class.std::__1::__tree_node.1110"**
  %1048 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %1047, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* nonnull %1045, %"class.std::__1::__tree_node.1110"* %1048) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  %1049 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %116, align 8
  %1050 = icmp eq %"class.spvtools::opt::Instruction"** %1049, null
  br i1 %1050, label %1055, label %1051

1051:                                             ; preds = %1026
  %1052 = ptrtoint %"class.spvtools::opt::Instruction"** %1049 to i64
  %1053 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  store i64 %1052, i64* %1053, align 8
  %1054 = bitcast %"class.spvtools::opt::Instruction"** %1049 to i8*
  call void @_ZdlPv(i8* %1054) #11
  br label %1055

1055:                                             ; preds = %1051, %1026
  %1056 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %114, align 8
  %1057 = icmp eq %"class.spvtools::opt::Instruction"** %1056, null
  br i1 %1057, label %1062, label %1058

1058:                                             ; preds = %1055
  %1059 = ptrtoint %"class.spvtools::opt::Instruction"** %1056 to i64
  %1060 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %1059, i64* %1060, align 8
  %1061 = bitcast %"class.spvtools::opt::Instruction"** %1056 to i8*
  call void @_ZdlPv(i8* %1061) #11
  br label %1062

1062:                                             ; preds = %1055, %1058
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %113) #10
  %1063 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %109, align 8
  %1064 = icmp eq %"class.spvtools::opt::Instruction"** %1063, null
  br i1 %1064, label %1069, label %1065

1065:                                             ; preds = %1062
  %1066 = ptrtoint %"class.spvtools::opt::Instruction"** %1063 to i64
  %1067 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %1066, i64* %1067, align 8
  %1068 = bitcast %"class.spvtools::opt::Instruction"** %1063 to i8*
  call void @_ZdlPv(i8* %1068) #11
  br label %1069

1069:                                             ; preds = %1065, %1062
  %1070 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %107, align 8
  %1071 = icmp eq %"class.spvtools::opt::Instruction"** %1070, null
  br i1 %1071, label %1076, label %1072

1072:                                             ; preds = %1069
  %1073 = ptrtoint %"class.spvtools::opt::Instruction"** %1070 to i64
  %1074 = bitcast %"class.spvtools::opt::Instruction"*** %108 to i64*
  store i64 %1073, i64* %1074, align 8
  %1075 = bitcast %"class.spvtools::opt::Instruction"** %1070 to i8*
  call void @_ZdlPv(i8* %1075) #11
  br label %1076

1076:                                             ; preds = %1069, %1072
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %106) #10
  br label %1077

1077:                                             ; preds = %102, %1076
  %1078 = phi i1 [ %1020, %1076 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  br label %1079

1079:                                             ; preds = %38, %1077
  %1080 = phi i1 [ %1078, %1077 ], [ false, %38 ]
  %1081 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %30, align 8
  %1082 = icmp eq %"class.spvtools::opt::Instruction"** %1081, null
  br i1 %1082, label %1087, label %1083

1083:                                             ; preds = %1079
  %1084 = ptrtoint %"class.spvtools::opt::Instruction"** %1081 to i64
  %1085 = bitcast %"class.spvtools::opt::Instruction"*** %31 to i64*
  store i64 %1084, i64* %1085, align 8
  %1086 = bitcast %"class.spvtools::opt::Instruction"** %1081 to i8*
  call void @_ZdlPv(i8* %1086) #11
  br label %1087

1087:                                             ; preds = %1079, %1083
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %1088

1088:                                             ; preds = %1, %24, %1087
  %1089 = phi i1 [ %1080, %1087 ], [ false, %24 ], [ false, %1 ]
  ret i1 %1089
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120GetLocationsAccessedERKNSt3__13mapIPNS0_11InstructionENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EENS7_INS2_4pairIKS5_S9_EEEEEESI_(%"class.std::__1::set.988"* noalias sret, %"class.std::__1::map.970"* dereferenceable(24), %"class.std::__1::map.970"* dereferenceable(24)) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.988", %"class.std::__1::set.988"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1114"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %16 = bitcast %"class.std::__1::set.988"* %0 to i64*
  br label %26

17:                                               ; preds = %116, %3
  %18 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::map.970", %"class.std::__1::map.970"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %19, %20
  br i1 %21, label %121, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1114"**
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %25 = bitcast %"class.std::__1::set.988"* %0 to i64*
  br label %122

26:                                               ; preds = %119, %13
  %27 = phi %"class.std::__1::__tree_node.1114"* [ null, %13 ], [ %120, %119 ]
  %28 = phi %"class.std::__1::__tree_end_node"* [ %10, %13 ], [ %117, %119 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %30 = icmp eq %"class.std::__1::__tree_node.1114"* %27, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.spvtools::opt::Instruction"**
  %33 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %32, align 8
  br label %34

34:                                               ; preds = %56, %31
  %35 = phi %"class.std::__1::__tree_node.1114"* [ %59, %56 ], [ %27, %31 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %58, %56 ], [ %5, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 1
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %39 = icmp ult %"class.spvtools::opt::Instruction"* %33, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 0, i32 0
  br label %60

46:                                               ; preds = %34
  %47 = icmp ult %"class.spvtools::opt::Instruction"* %38, %33
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 0, i32 0
  br label %60

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %35, i64 0, i32 0, i32 0
  br label %60

56:                                               ; preds = %48, %40
  %57 = phi %"class.std::__1::__tree_node_base"* [ %42, %40 ], [ %50, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %49, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"* %57 to %"class.std::__1::__tree_node.1114"*
  br label %34

60:                                               ; preds = %26, %54, %52, %44
  %61 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %53, %52 ], [ %55, %54 ], [ %7, %26 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %41, %44 ], [ %49, %52 ], [ %36, %54 ], [ %15, %26 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node.1114"**
  %64 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node.1114"* %64, null
  br i1 %65, label %66, label %88

66:                                               ; preds = %60
  %67 = tail call i8* @_Znwm(i64 40) #11, !noalias !28
  %68 = getelementptr inbounds i8, i8* %67, i64 32
  %69 = bitcast %"class.std::__1::__tree_end_node"* %29 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !28
  %71 = bitcast i8* %68 to i64*
  store i64 %70, i64* %71, align 8, !noalias !28
  %72 = bitcast i8* %67 to %"class.std::__1::__tree_node_base"*
  %73 = getelementptr inbounds i8, i8* %67, i64 16
  %74 = bitcast i8* %73 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %74, align 8
  %75 = bitcast %"class.std::__1::__tree_node_base"** %62 to i8**
  store i8* %67, i8** %75, align 8
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %66
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %78 to i64
  store i64 %81, i64* %16, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  br label %83

83:                                               ; preds = %80, %66
  %84 = phi %"class.std::__1::__tree_node_base"* [ %72, %66 ], [ %82, %80 ]
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %85, %"class.std::__1::__tree_node_base"* %84) #10
  %86 = load i64, i64* %6, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %6, align 8
  br label %88

88:                                               ; preds = %60, %83
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 1, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_end_node"**
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %93
  br i1 %99, label %116, label %107

100:                                              ; preds = %88, %100
  %101 = phi %"class.std::__1::__tree_node_base"* [ %103, %100 ], [ %90, %88 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %100

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0
  br label %116

107:                                              ; preds = %92, %107
  %108 = phi %"class.std::__1::__tree_end_node"** [ %111, %107 ], [ %95, %92 ]
  %109 = bitcast %"class.std::__1::__tree_end_node"** %108 to %"class.std::__1::__tree_node_base"**
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 2
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %110
  br i1 %115, label %116, label %107

116:                                              ; preds = %107, %92, %105
  %117 = phi %"class.std::__1::__tree_end_node"* [ %106, %105 ], [ %96, %92 ], [ %112, %107 ]
  %118 = icmp eq %"class.std::__1::__tree_end_node"* %117, %11
  br i1 %118, label %17, label %119

119:                                              ; preds = %116
  %120 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %14, align 8
  br label %26

121:                                              ; preds = %212, %17
  ret void

122:                                              ; preds = %22, %212
  %123 = phi %"class.std::__1::__tree_end_node"* [ %19, %22 ], [ %213, %212 ]
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 4
  %125 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %23, align 8
  %126 = icmp eq %"class.std::__1::__tree_node.1114"* %125, null
  br i1 %126, label %156, label %127

127:                                              ; preds = %122
  %128 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.spvtools::opt::Instruction"**
  %129 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, align 8
  br label %130

130:                                              ; preds = %152, %127
  %131 = phi %"class.std::__1::__tree_node.1114"* [ %155, %152 ], [ %125, %127 ]
  %132 = phi %"class.std::__1::__tree_node_base"** [ %154, %152 ], [ %5, %127 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 1
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %133, align 8
  %135 = icmp ult %"class.spvtools::opt::Instruction"* %129, %134
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %152

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 0, i32 0
  br label %156

142:                                              ; preds = %130
  %143 = icmp ult %"class.spvtools::opt::Instruction"* %134, %129
  br i1 %143, label %144, label %150

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 0, i32 1
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %152

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 0, i32 0
  br label %156

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %131, i64 0, i32 0, i32 0
  br label %156

152:                                              ; preds = %144, %136
  %153 = phi %"class.std::__1::__tree_node_base"* [ %138, %136 ], [ %146, %144 ]
  %154 = phi %"class.std::__1::__tree_node_base"** [ %137, %136 ], [ %145, %144 ]
  %155 = bitcast %"class.std::__1::__tree_node_base"* %153 to %"class.std::__1::__tree_node.1114"*
  br label %130

156:                                              ; preds = %122, %150, %148, %140
  %157 = phi %"class.std::__1::__tree_end_node"* [ %141, %140 ], [ %149, %148 ], [ %151, %150 ], [ %7, %122 ]
  %158 = phi %"class.std::__1::__tree_node_base"** [ %137, %140 ], [ %145, %148 ], [ %132, %150 ], [ %24, %122 ]
  %159 = bitcast %"class.std::__1::__tree_node_base"** %158 to %"class.std::__1::__tree_node.1114"**
  %160 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node.1114"* %160, null
  br i1 %161, label %162, label %184

162:                                              ; preds = %156
  %163 = tail call i8* @_Znwm(i64 40) #11, !noalias !31
  %164 = getelementptr inbounds i8, i8* %163, i64 32
  %165 = bitcast %"class.std::__1::__tree_end_node"* %124 to i64*
  %166 = load i64, i64* %165, align 8, !noalias !31
  %167 = bitcast i8* %164 to i64*
  store i64 %166, i64* %167, align 8, !noalias !31
  %168 = bitcast i8* %163 to %"class.std::__1::__tree_node_base"*
  %169 = getelementptr inbounds i8, i8* %163, i64 16
  %170 = bitcast i8* %169 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %157, %"class.std::__1::__tree_end_node"** %170, align 8
  %171 = bitcast %"class.std::__1::__tree_node_base"** %158 to i8**
  store i8* %163, i8** %171, align 8
  %172 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %162
  %177 = ptrtoint %"class.std::__1::__tree_node_base"* %174 to i64
  store i64 %177, i64* %25, align 8
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  br label %179

179:                                              ; preds = %176, %162
  %180 = phi %"class.std::__1::__tree_node_base"* [ %168, %162 ], [ %178, %176 ]
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %181, %"class.std::__1::__tree_node_base"* %180) #10
  %182 = load i64, i64* %6, align 8
  %183 = add i64 %182, 1
  store i64 %183, i64* %6, align 8
  br label %184

184:                                              ; preds = %156, %179
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 1, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, null
  br i1 %187, label %188, label %196

188:                                              ; preds = %184
  %189 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_node_base"*
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 2
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to %"class.std::__1::__tree_end_node"**
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, %189
  br i1 %195, label %212, label %203

196:                                              ; preds = %184, %196
  %197 = phi %"class.std::__1::__tree_node_base"* [ %199, %196 ], [ %186, %184 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %196

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0
  br label %212

203:                                              ; preds = %188, %203
  %204 = phi %"class.std::__1::__tree_end_node"** [ %207, %203 ], [ %191, %188 ]
  %205 = bitcast %"class.std::__1::__tree_end_node"** %204 to %"class.std::__1::__tree_node_base"**
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 2
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, %206
  br i1 %211, label %212, label %203

212:                                              ; preds = %203, %188, %201
  %213 = phi %"class.std::__1::__tree_end_node"* [ %202, %201 ], [ %192, %188 ], [ %208, %203 ]
  %214 = icmp eq %"class.std::__1::__tree_end_node"* %213, %20
  br i1 %214, label %121, label %122
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_115CollectChildrenEPNS0_4LoopEPNSt3__16vectorIPKS2_NS4_9allocatorIS7_EEEE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.std::__1::vector.996"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Loop"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.spvtools::opt::Loop"*** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.996"* %1 to i64*
  %13 = bitcast %"class.spvtools::opt::Loop"*** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.996", %"class.std::__1::vector.996"* %1, i64 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %90, %2
  ret void

16:                                               ; preds = %8, %90
  %17 = phi %"class.spvtools::opt::Loop"** [ %4, %8 ], [ %91, %90 ]
  %18 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %17, align 8
  %19 = ptrtoint %"class.spvtools::opt::Loop"* %18 to i64
  %20 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %9, align 8
  %21 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %10, align 8
  %22 = icmp ult %"class.spvtools::opt::Loop"** %20, %21
  %23 = ptrtoint %"class.spvtools::opt::Loop"** %21 to i64
  br i1 %22, label %24, label %28

24:                                               ; preds = %16
  %25 = bitcast %"class.spvtools::opt::Loop"** %20 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %20, i64 1
  %27 = ptrtoint %"class.spvtools::opt::Loop"** %26 to i64
  store i64 %27, i64* %11, align 8
  br label %81

28:                                               ; preds = %16
  %29 = ptrtoint %"class.spvtools::opt::Loop"** %20 to i64
  %30 = load i64, i64* %12, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.996"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #12
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %23, %30
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

49:                                               ; preds = %46, %37
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %37 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #11
  %53 = bitcast i8* %52 to %"class.spvtools::opt::Loop"**
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"class.spvtools::opt::Loop"** [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %56, i64 %32
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %56, i64 %55
  %59 = ptrtoint %"class.spvtools::opt::Loop"** %58 to i64
  %60 = bitcast %"class.spvtools::opt::Loop"** %57 to i64*
  store i64 %19, i64* %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %57, i64 1
  %62 = ptrtoint %"class.spvtools::opt::Loop"** %61 to i64
  %63 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %14, align 8
  %64 = load i64, i64* %11, align 8
  %65 = ptrtoint %"class.spvtools::opt::Loop"** %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %57, i64 %68
  %70 = ptrtoint %"class.spvtools::opt::Loop"** %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast %"class.spvtools::opt::Loop"** %69 to i8*
  %74 = bitcast %"class.spvtools::opt::Loop"** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #10
  %75 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %14, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi %"class.spvtools::opt::Loop"** [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %12, align 8
  store i64 %62, i64* %11, align 8
  store i64 %59, i64* %13, align 8
  %78 = icmp eq %"class.spvtools::opt::Loop"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.spvtools::opt::Loop"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %24, %76, %79
  %82 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %18, i64 0, i32 7
  %83 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %18, i64 0, i32 7, i32 0, i32 1
  %84 = bitcast %"class.spvtools::opt::Loop"*** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.910"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %81
  tail call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_115CollectChildrenEPNS0_4LoopEPNSt3__16vectorIPKS2_NS4_9allocatorIS7_EEEE(%"class.spvtools::opt::Loop"* %18, %"class.std::__1::vector.996"* %1)
  br label %90

90:                                               ; preds = %81, %89
  %91 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %17, i64 1
  %92 = icmp eq %"class.spvtools::opt::Loop"** %91, %6
  br i1 %92, label %15, label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_114GetDependencesEPNSt3__16vectorINS0_14DistanceVectorENS2_9allocatorIS4_EEEEPNS0_22LoopDependenceAnalysisERKNS3_IPNS0_11InstructionENS5_ISC_EEEESG_m(%"class.std::__1::vector.1009"*, %"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.std::__1::vector.945"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.945"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 {
  %6 = alloca [22 x i8], align 2
  %7 = alloca %"class.spvtools::opt::DistanceVector", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::Instruction"** %9, %11
  br i1 %12, label %32, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %3, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::DistanceVector"* %7 to i8*
  %17 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %7, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 0
  %21 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 6
  %22 = icmp eq i64 %4, 0
  %23 = icmp ugt i64 %4, 461168601842738790
  %24 = mul i64 %4, 40
  %25 = bitcast %"class.spvtools::opt::DistanceEntry"** %18 to i8**
  %26 = bitcast %"class.spvtools::opt::DistanceVector"* %7 to i8**
  %27 = bitcast %"class.spvtools::opt::DistanceEntry"** %18 to i64*
  %28 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.spvtools::opt::DistanceVector"* %7 to i64*
  %31 = bitcast %"class.spvtools::opt::DistanceVector"** %28 to i64*
  br label %33

32:                                               ; preds = %39, %5
  ret void

33:                                               ; preds = %13, %39
  %34 = phi %"class.spvtools::opt::Instruction"** [ %9, %13 ], [ %40, %39 ]
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, align 8
  %37 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %38 = icmp eq %"class.spvtools::opt::Instruction"** %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %114, %33
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, i64 1
  %41 = icmp eq %"class.spvtools::opt::Instruction"** %40, %11
  br i1 %41, label %32, label %33

42:                                               ; preds = %33, %114
  %43 = phi %"class.spvtools::opt::Instruction"** [ %115, %114 ], [ %36, %33 ]
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %20)
  call void @llvm.memset.p0i8.i64(i8* align 2 %21, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #10
  br i1 %22, label %65, label %45

45:                                               ; preds = %42
  br i1 %23, label %46, label %48

46:                                               ; preds = %45
  %47 = bitcast %"class.spvtools::opt::DistanceVector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %47) #12
  unreachable

48:                                               ; preds = %45
  %49 = call i8* @_Znwm(i64 %24) #11
  %50 = bitcast i8* %49 to %"class.spvtools::opt::DistanceEntry"*
  store i8* %49, i8** %25, align 8
  store i8* %49, i8** %26, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %50, i64 %4
  store %"class.spvtools::opt::DistanceEntry"* %51, %"class.spvtools::opt::DistanceEntry"** %19, align 8
  br label %52

52:                                               ; preds = %52, %48
  %53 = phi %"class.spvtools::opt::DistanceEntry"* [ %50, %48 ], [ %61, %52 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 0, i32 0
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 0, i32 1
  store i32 7, i32* %55, align 4
  %56 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 0, i32 2
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 0, i32 3
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 0, i32 4
  store i8 0, i8* %58, align 1
  %59 = bitcast %"class.spvtools::opt::DistanceEntry"* %53 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %60, i8* nonnull align 2 %20, i64 22, i1 false) #10
  %61 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %53, i64 1
  %62 = icmp eq %"class.spvtools::opt::DistanceEntry"* %61, %51
  br i1 %62, label %63, label %52

63:                                               ; preds = %52
  %64 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %51 to i64
  store i64 %64, i64* %27, align 8
  br label %65

65:                                               ; preds = %42, %63
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %20)
  %66 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* %1, %"class.spvtools::opt::Instruction"* %35, %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::DistanceVector"* nonnull %7) #10
  br i1 %66, label %108, label %67

67:                                               ; preds = %65
  %68 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %28, align 8
  %69 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %29, align 8
  %70 = icmp eq %"class.spvtools::opt::DistanceVector"* %68, %69
  br i1 %70, label %107, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.spvtools::opt::DistanceVector"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #10
  %73 = load i64, i64* %27, align 8
  %74 = load i64, i64* %30, align 8
  %75 = sub i64 %73, %74
  %76 = sdiv exact i64 %75, 40
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %104, label %78

78:                                               ; preds = %71
  %79 = icmp ugt i64 %76, 461168601842738790
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = bitcast %"class.spvtools::opt::DistanceVector"* %68 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #12
  unreachable

82:                                               ; preds = %78
  %83 = call i8* @_Znwm(i64 %75) #11
  %84 = bitcast i8* %83 to %"class.spvtools::opt::DistanceEntry"*
  %85 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %68, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.spvtools::opt::DistanceEntry"** %85 to i8**
  store i8* %83, i8** %86, align 8
  %87 = bitcast %"class.spvtools::opt::DistanceVector"* %68 to i8**
  store i8* %83, i8** %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %84, i64 %76
  %89 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %68, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::DistanceEntry"* %88, %"class.spvtools::opt::DistanceEntry"** %89, align 8
  %90 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %17, align 8
  %91 = load i64, i64* %27, align 8
  %92 = bitcast %"class.spvtools::opt::DistanceEntry"** %85 to i64*
  %93 = ptrtoint i8* %83 to i64
  %94 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %90 to i64
  %95 = sub i64 %91, %94
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %82
  %98 = udiv exact i64 %95, 40
  %99 = bitcast %"class.spvtools::opt::DistanceEntry"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %99, i64 %95, i1 false) #10
  %100 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %84, i64 %98
  %101 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %100 to i64
  br label %102

102:                                              ; preds = %97, %82
  %103 = phi i64 [ %101, %97 ], [ %93, %82 ]
  store i64 %103, i64* %92, align 8
  br label %104

104:                                              ; preds = %102, %71
  %105 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %68, i64 1
  %106 = ptrtoint %"class.spvtools::opt::DistanceVector"* %105 to i64
  store i64 %106, i64* %31, align 8
  br label %108

107:                                              ; preds = %67
  call void @_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1009"* %0, %"class.spvtools::opt::DistanceVector"* nonnull dereferenceable(24) %7) #10
  br label %108

108:                                              ; preds = %107, %104, %65
  %109 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %17, align 8
  %110 = icmp eq %"class.spvtools::opt::DistanceEntry"* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %109 to i64
  store i64 %112, i64* %27, align 8
  %113 = bitcast %"class.spvtools::opt::DistanceEntry"* %109 to i8*
  call void @_ZdlPv(i8* %113) #11
  br label %114

114:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %43, i64 1
  %116 = icmp eq %"class.spvtools::opt::Instruction"** %115, %37
  br i1 %116, label %39, label %42
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev(%"class.spvtools::opt::LoopDependenceAnalysis"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %40, label %24

24:                                               ; preds = %6, %37
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %37 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.spvtools::opt::Constraint"**
  %30 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %29, align 8
  store %"class.spvtools::opt::Constraint"* null, %"class.spvtools::opt::Constraint"** %29, align 8
  %31 = icmp eq %"class.spvtools::opt::Constraint"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.spvtools::opt::Constraint"* %30 to void (%"class.spvtools::opt::Constraint"*)***
  %34 = load void (%"class.spvtools::opt::Constraint"*)**, void (%"class.spvtools::opt::Constraint"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spvtools::opt::Constraint"*)*, void (%"class.spvtools::opt::Constraint"*)** %34, i64 2
  %36 = load void (%"class.spvtools::opt::Constraint"*)*, void (%"class.spvtools::opt::Constraint"*)** %35, align 8
  tail call void %36(%"class.spvtools::opt::Constraint"* nonnull %30) #10
  br label %37

37:                                               ; preds = %32, %24
  %38 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %39, label %40, label %24

40:                                               ; preds = %37, %1, %6
  %41 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 4, i32 0
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 4, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.1092"**
  %44 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %43, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %41, %"class.std::__1::__tree_node.1092"* %44) #10
  %45 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.663"* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %40, %61
  %49 = phi %"struct.std::__1::__hash_node_base.663"* [ %51, %61 ], [ %46, %40 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %49, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.663"* %52 to %"class.spvtools::opt::SENode"**
  %54 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %53, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %53, align 8
  %55 = icmp eq %"class.spvtools::opt::SENode"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.spvtools::opt::SENode"* %54 to void (%"class.spvtools::opt::SENode"*)***
  %58 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %58, i64 2
  %60 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %59, align 8
  tail call void %60(%"class.spvtools::opt::SENode"* nonnull %54) #10
  br label %61

61:                                               ; preds = %56, %48
  %62 = bitcast %"struct.std::__1::__hash_node_base.663"* %49 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  %63 = icmp eq %"struct.std::__1::__hash_node_base.663"* %51, null
  br i1 %63, label %64, label %48

64:                                               ; preds = %61, %40
  %65 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.663"**, %"struct.std::__1::__hash_node_base.663"*** %65, align 8
  store %"struct.std::__1::__hash_node_base.663"** null, %"struct.std::__1::__hash_node_base.663"*** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.663"** %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast %"struct.std::__1::__hash_node_base.663"** %66 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %64, %68
  %71 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 1, i32 0
  %72 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 1, i32 0, i32 1, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.1101"**
  %74 = load %"class.std::__1::__tree_node.1101"*, %"class.std::__1::__tree_node.1101"** %73, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %71, %"class.std::__1::__tree_node.1101"* %74) #10
  %75 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %75, align 8
  %77 = icmp eq %"class.spvtools::opt::Loop"** %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %70
  %79 = ptrtoint %"class.spvtools::opt::Loop"** %76 to i64
  %80 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1, i32 0, i32 1
  %81 = bitcast %"class.spvtools::opt::Loop"*** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.spvtools::opt::Loop"** %76 to i8*
  tail call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %70, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt20ReplacePhiParentWithEPNS0_11InstructionEjj(%"class.spvtools::opt::Instruction"*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = add nuw nsw i32 %15, 1
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %0, i32 %16) #10
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %19, label %56

19:                                               ; preds = %3
  %20 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %25 = bitcast i32** %23 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %24, %"struct.std::__1::aligned_storage<4, 4>::type"** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.0"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %24 to i32*
  store i64 1, i64* %22, align 8
  store i32 %2, i32* %28, align 8
  %29 = load i8, i8* %6, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = load i8, i8* %9, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i64 1, i64 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i64
  %36 = select i1 %30, i64 %35, i64 %33
  %37 = add nuw nsw i64 %36, 1
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %38, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 %37, i32 1
  %41 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %44 = icmp eq %"class.std::__1::vector.3"* %43, null
  br i1 %44, label %93, label %45

45:                                               ; preds = %19
  %46 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %43, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i32* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %43, i64 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i32* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %45
  %55 = bitcast %"class.std::__1::vector.3"* %43 to i8*
  call void @_ZdlPv(i8* %55) #11
  br label %93

56:                                               ; preds = %3
  %57 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %62 = bitcast i32** %60 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %61, %"struct.std::__1::aligned_storage<4, 4>::type"** %62, align 8
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %64 = bitcast %"class.std::__1::unique_ptr.0"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %61 to i32*
  store i64 1, i64* %59, align 8
  store i32 %2, i32* %65, align 8
  %66 = load i8, i8* %6, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = load i8, i8* %9, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i64 1, i64 2
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i64
  %73 = select i1 %67, i64 %72, i64 %70
  %74 = add nuw nsw i64 %73, 3
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 0
  %76 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %75, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %76, i64 %74, i32 1
  %78 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %77, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %79, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %79, align 8
  %81 = icmp eq %"class.std::__1::vector.3"* %80, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %56
  %83 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 0, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint i32* %84 to i64
  %88 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 0, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast i32* %84 to i8*
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %86, %82
  %92 = bitcast %"class.std::__1::vector.3"* %80 to i8*
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %91, %56, %54, %19
  %94 = phi i8* [ %20, %19 ], [ %20, %54 ], [ %57, %56 ], [ %57, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt10LoopFusion4FuseEv(%"class.spvtools::opt::LoopFusion"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::utils::SmallVector", align 8
  %3 = alloca %"class.std::__1::tuple.1145", align 8
  %4 = alloca %"class.std::__1::tuple.1122", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::function.939", align 8
  %7 = alloca %"class.std::__1::function.939", align 8
  %8 = alloca %"class.std::__1::function.939", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::tuple.1186", align 8
  %14 = alloca %"class.std::__1::tuple.1122", align 1
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::__1::function.939", align 8
  %17 = alloca %"class.std::__1::function.939", align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::__1::function.1024", align 8
  %22 = alloca %"class.std::__1::function.1024", align 8
  %23 = alloca %"class.std::__1::function.981", align 8
  %24 = alloca %"class.std::__1::function.981", align 8
  %25 = alloca %"class.std::__1::vector.945", align 8
  %26 = alloca %"class.std::__1::function.981", align 8
  %27 = alloca %"class.std::__1::function.981", align 8
  %28 = alloca %"class.std::__1::function.981", align 8
  %29 = alloca %"class.std::__1::vector.945", align 8
  %30 = alloca %"class.std::__1::vector.910", align 8
  %31 = alloca %"class.std::__1::unordered_set.917", align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 2
  %33 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %33, i64 0, i32 1
  %35 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %35, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %44) #10
  %46 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  br label %47

47:                                               ; preds = %1, %41
  %48 = phi %"class.spvtools::opt::Loop"* [ %46, %41 ], [ %33, %1 ]
  %49 = phi i32 [ %45, %41 ], [ 0, %1 ]
  %50 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %48) #10
  %51 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = zext i8 %58 to i32
  %60 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %52, i32 %59) #10
  br label %61

61:                                               ; preds = %47, %56
  %62 = phi i32 [ %60, %56 ], [ 0, %47 ]
  %63 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %63, i64 0, i32 2
  %65 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %65, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 4
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 3
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = zext i8 %73 to i32
  %75 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %67, i32 %74) #10
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i32 [ %75, %71 ], [ 0, %61 ]
  %78 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 1
  %79 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %79, i64 0, i32 2
  %81 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 4
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 3
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %83, i32 %90) #10
  %92 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  br label %93

93:                                               ; preds = %76, %87
  %94 = phi %"class.spvtools::opt::Loop"* [ %92, %87 ], [ %79, %76 ]
  %95 = phi i32 [ %91, %87 ], [ 0, %76 ]
  %96 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %94) #10
  %97 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 3
  %98 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %98, i64 0, i32 3, i32 0, i32 0
  %100 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %99, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %98, i64 0, i32 3, i32 0, i32 1
  %102 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %101, align 8
  %103 = icmp eq %"class.std::__1::unique_ptr.40"* %100, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %100, i64 1, i32 0, i32 0, i32 0
  %106 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %105, align 8
  br label %157

107:                                              ; preds = %93, %124
  %108 = phi %"class.std::__1::unique_ptr.40"* [ %125, %124 ], [ %100, %93 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %110, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 4
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 3
  %118 = load i8, i8* %117, align 4, !range !2
  %119 = zext i8 %118 to i32
  %120 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %112, i32 %119) #10
  br label %121

121:                                              ; preds = %116, %107
  %122 = phi i32 [ %120, %116 ], [ 0, %107 ]
  %123 = icmp eq i32 %122, %62
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %108, i64 1
  %126 = icmp eq %"class.std::__1::unique_ptr.40"* %125, %102
  br i1 %126, label %127, label %107

127:                                              ; preds = %121, %124
  %128 = phi %"class.std::__1::unique_ptr.40"* [ %108, %121 ], [ %102, %124 ]
  %129 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %129, i64 0, i32 3, i32 0, i32 0
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %130, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %129, i64 0, i32 3, i32 0, i32 1
  %133 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %128, i64 1, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %134, align 8
  %136 = icmp eq %"class.std::__1::unique_ptr.40"* %131, %133
  br i1 %136, label %157, label %137

137:                                              ; preds = %127, %154
  %138 = phi %"class.std::__1::unique_ptr.40"* [ %155, %154 ], [ %131, %127 ]
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %139, align 8
  %141 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %140, i64 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %141, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %142, i64 0, i32 4
  %144 = load i8, i8* %143, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %142, i64 0, i32 3
  %148 = load i8, i8* %147, align 4, !range !2
  %149 = zext i8 %148 to i32
  %150 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %142, i32 %149) #10
  br label %151

151:                                              ; preds = %146, %137
  %152 = phi i32 [ %150, %146 ], [ 0, %137 ]
  %153 = icmp eq i32 %152, %77
  br i1 %153, label %162, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 1
  %156 = icmp eq %"class.std::__1::unique_ptr.40"* %155, %133
  br i1 %156, label %162, label %137

157:                                              ; preds = %127, %104
  %158 = phi %"class.spvtools::opt::BasicBlock"* [ %106, %104 ], [ %135, %127 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %100, %104 ], [ %131, %127 ]
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %159, i64 -1, i32 0, i32 0, i32 0
  %161 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %160, align 8
  br label %192

162:                                              ; preds = %151, %154
  %163 = phi %"class.std::__1::unique_ptr.40"* [ %138, %151 ], [ %133, %154 ]
  %164 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %164, i64 0, i32 3, i32 0, i32 0
  %166 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %164, i64 0, i32 3, i32 0, i32 1
  %168 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %163, i64 -1, i32 0, i32 0, i32 0
  %170 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %169, align 8
  %171 = icmp eq %"class.std::__1::unique_ptr.40"* %166, %168
  br i1 %171, label %192, label %172

172:                                              ; preds = %162, %189
  %173 = phi %"class.std::__1::unique_ptr.40"* [ %190, %189 ], [ %166, %162 ]
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %175, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 4
  %179 = load i8, i8* %178, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %172
  %182 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 3
  %183 = load i8, i8* %182, align 4, !range !2
  %184 = zext i8 %183 to i32
  %185 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %177, i32 %184) #10
  br label %186

186:                                              ; preds = %181, %172
  %187 = phi i32 [ %185, %181 ], [ 0, %172 ]
  %188 = icmp eq i32 %187, %95
  br i1 %188, label %192, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %173, i64 1
  %191 = icmp eq %"class.std::__1::unique_ptr.40"* %190, %168
  br i1 %191, label %192, label %172

192:                                              ; preds = %186, %189, %157, %162
  %193 = phi %"class.spvtools::opt::BasicBlock"* [ %170, %162 ], [ %161, %157 ], [ %170, %189 ], [ %170, %186 ]
  %194 = phi %"class.spvtools::opt::BasicBlock"* [ %135, %162 ], [ %158, %157 ], [ %135, %189 ], [ %135, %186 ]
  %195 = phi %"class.std::__1::unique_ptr.40"* [ %166, %162 ], [ %159, %157 ], [ %173, %186 ], [ %168, %189 ]
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %195, i64 -1, i32 0, i32 0, i32 0
  %197 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %196, align 8
  %198 = bitcast %"class.std::__1::function.1024"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %198) #10
  %199 = ptrtoint %"class.spvtools::opt::BasicBlock"* %194 to i64
  %200 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %21, i64 0, i32 0, i32 1, i32 0
  %201 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %21, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_5S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %200, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_5FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %201, align 8
  %202 = bitcast %"class.std::__1::function.1024"* %21 to i64*
  store i64 %199, i64* %202, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %197, %"class.std::__1::function.1024"* nonnull dereferenceable(32) %21) #10
  %203 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %201, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %203, i64 0, i32 1
  %205 = load void (i8*)*, void (i8*)** %204, align 8
  %206 = icmp eq void (i8*)* %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %192
  %208 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %21, i64 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void %205(i8* %209) #10
  br label %210

210:                                              ; preds = %192, %207
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %198) #10
  %211 = bitcast %"class.std::__1::function.1024"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %211) #10
  %212 = ptrtoint %"class.spvtools::opt::LoopFusion"* %0 to i64
  %213 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %22, i64 0, i32 0, i32 1, i32 0
  %214 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %22, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_6S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %213, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %214, align 8
  %215 = bitcast %"class.std::__1::function.1024"* %22 to i64*
  store i64 %212, i64* %215, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %193, %"class.std::__1::function.1024"* nonnull dereferenceable(32) %22) #10
  %216 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %214, align 8
  %217 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %216, i64 0, i32 1
  %218 = load void (i8*)*, void (i8*)** %217, align 8
  %219 = icmp eq void (i8*)* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %210
  %221 = getelementptr inbounds %"class.std::__1::function.1024", %"class.std::__1::function.1024"* %22, i64 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void %218(i8* %222) #10
  br label %223

223:                                              ; preds = %210, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %211) #10
  %224 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %225 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %224, i64 0, i32 1
  %226 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %225, align 8
  %227 = bitcast %"class.std::__1::function.981"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %227) #10
  %228 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %23, i64 0, i32 0, i32 1, i32 0
  %229 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %23, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %228, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %229, align 8
  %230 = bitcast %"class.std::__1::function.981"* %23 to i64*
  store i64 %212, i64* %230, align 8
  %231 = bitcast %"class.std::__1::function.939"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #10
  %232 = ptrtoint %"class.std::__1::function.981"* %23 to i64
  %233 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %17, i64 0, i32 0, i32 1, i32 0
  %234 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %17, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %233, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %234, align 8
  %235 = bitcast %"class.std::__1::function.939"* %17 to i64*
  store i64 %232, i64* %235, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %226, i64 0, i32 1, i32 0, i32 0, i32 0
  %237 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, align 8
  %238 = icmp eq %"class.spvtools::opt::Instruction"* %237, null
  br i1 %238, label %297, label %239

239:                                              ; preds = %223
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %237, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 246
  br i1 %242, label %243, label %297

243:                                              ; preds = %239
  %244 = bitcast %"class.spvtools::utils::SmallVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %244) #10
  %245 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %245, i64 0, i32 3
  %247 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %247, i64 0, i32 1, i32 0, i32 0, i32 0
  %249 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, align 8
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %249, i64 0, i32 4
  %251 = load i8, i8* %250, align 1, !range !2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %249, i64 0, i32 3
  %255 = load i8, i8* %254, align 4, !range !2
  %256 = zext i8 %255 to i32
  %257 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %249, i32 %256) #10
  br label %258

258:                                              ; preds = %243, %253
  %259 = phi i32 [ %257, %253 ], [ 0, %243 ]
  %260 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %260, align 8
  %261 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 1
  %262 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 2
  %263 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 3, i64 0
  %264 = bitcast i32** %262 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %263, %"struct.std::__1::aligned_storage<4, 4>::type"** %264, align 8
  %265 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 4
  %266 = bitcast %"class.std::__1::unique_ptr.0"* %265 to i64*
  store i64 0, i64* %266, align 8
  %267 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %263 to i32*
  store i64 1, i64* %261, align 8
  store i32 %259, i32* %267, align 8
  %268 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %237, i64 0, i32 3
  %269 = load i8, i8* %268, align 4, !range !2
  %270 = icmp eq i8 %269, 0
  %271 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %237, i64 0, i32 4
  %272 = load i8, i8* %271, align 1, !range !2
  %273 = icmp eq i8 %272, 0
  %274 = select i1 %273, i64 1, i64 2
  %275 = xor i1 %273, true
  %276 = zext i1 %275 to i64
  %277 = select i1 %270, i64 %276, i64 %274
  %278 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %237, i64 0, i32 6, i32 0, i32 0
  %279 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %278, align 8
  %280 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %279, i64 %277, i32 1
  %281 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %280, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %2) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %260, align 8
  %282 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %283 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %282, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %282, align 8
  %284 = icmp eq %"class.std::__1::vector.3"* %283, null
  br i1 %284, label %296, label %285

285:                                              ; preds = %258
  %286 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %283, i64 0, i32 0, i32 0
  %287 = load i32*, i32** %286, align 8
  %288 = icmp eq i32* %287, null
  br i1 %288, label %294, label %289

289:                                              ; preds = %285
  %290 = ptrtoint i32* %287 to i64
  %291 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %283, i64 0, i32 0, i32 1
  %292 = bitcast i32** %291 to i64*
  store i64 %290, i64* %292, align 8
  %293 = bitcast i32* %287 to i8*
  call void @_ZdlPv(i8* %293) #11
  br label %294

294:                                              ; preds = %289, %285
  %295 = bitcast %"class.std::__1::vector.3"* %283 to i8*
  call void @_ZdlPv(i8* %295) #11
  br label %296

296:                                              ; preds = %258, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %244) #10
  br label %297

297:                                              ; preds = %296, %239, %223
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %226, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %299 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 0, i32 3
  %301 = load i8, i8* %300, align 8, !range !2
  %302 = icmp ne i8 %301, 0
  %303 = icmp eq %"class.spvtools::opt::Instruction"* %299, null
  %304 = or i1 %303, %302
  br i1 %304, label %319, label %305

305:                                              ; preds = %297
  %306 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %17, i64 0, i32 0, i32 0
  br label %307

307:                                              ; preds = %310, %305
  %308 = phi %"class.spvtools::opt::Instruction"* [ %316, %310 ], [ %299, %305 ]
  %309 = icmp eq %"class.spvtools::opt::Instruction"* %308, null
  br i1 %309, label %319, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 0, i32 1
  %312 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %311, align 8
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %312, i64 0, i32 0, i32 3
  %314 = load i8, i8* %313, align 8, !range !2
  %315 = icmp eq i8 %314, 0
  %316 = select i1 %315, %"class.spvtools::opt::Instruction"* %312, %"class.spvtools::opt::Instruction"* null
  %317 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %233, align 8
  %318 = call zeroext i1 %317(%"union.std::__1::__function::__policy_storage"* nonnull %306, %"class.spvtools::opt::Instruction"* nonnull %308) #10
  br i1 %318, label %307, label %319

319:                                              ; preds = %310, %307, %297
  %320 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %234, align 8
  %321 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %320, i64 0, i32 1
  %322 = load void (i8*)*, void (i8*)** %321, align 8
  %323 = icmp eq void (i8*)* %322, null
  br i1 %323, label %327, label %324

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %17, i64 0, i32 0, i32 0, i32 0
  %326 = load i8*, i8** %325, align 8
  call void %322(i8* %326) #10
  br label %327

327:                                              ; preds = %319, %324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #10
  %328 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %229, align 8
  %329 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %328, i64 0, i32 1
  %330 = load void (i8*)*, void (i8*)** %329, align 8
  %331 = icmp eq void (i8*)* %330, null
  br i1 %331, label %335, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %23, i64 0, i32 0, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  call void %330(i8* %334) #10
  br label %335

335:                                              ; preds = %327, %332
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227) #10
  %336 = bitcast %"class.std::__1::function.981"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #10
  %337 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %24, i64 0, i32 0, i32 1, i32 0
  %338 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %24, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_8S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %337, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_8FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %338, align 8
  %339 = bitcast %"class.std::__1::function.981"* %24 to i64*
  store i64 %212, i64* %339, align 8
  %340 = bitcast %"class.std::__1::function.939"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %340) #10
  %341 = ptrtoint %"class.std::__1::function.981"* %24 to i64
  %342 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %16, i64 0, i32 0, i32 1, i32 0
  %343 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %16, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %342, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %343, align 8
  %344 = bitcast %"class.std::__1::function.939"* %16 to i64*
  store i64 %341, i64* %344, align 8
  %345 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %346 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %345, align 8
  %347 = icmp eq %"class.spvtools::opt::Instruction"* %346, null
  br i1 %347, label %350, label %348

348:                                              ; preds = %335
  %349 = bitcast %"class.std::__1::function.981"* %24 to %class.anon.1033*
  call fastcc void @"_ZZN8spvtools3opt10LoopFusion4FuseEvENK3$_8clEPNS0_11InstructionE"(%class.anon.1033* nonnull %349, %"class.spvtools::opt::Instruction"* nonnull %346) #10
  br label %350

350:                                              ; preds = %348, %335
  %351 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %96, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %352 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %351, align 8
  %353 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %352, i64 0, i32 0, i32 3
  %354 = load i8, i8* %353, align 8, !range !2
  %355 = icmp ne i8 %354, 0
  %356 = icmp eq %"class.spvtools::opt::Instruction"* %352, null
  %357 = or i1 %356, %355
  br i1 %357, label %372, label %358

358:                                              ; preds = %350
  %359 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %16, i64 0, i32 0, i32 0
  br label %360

360:                                              ; preds = %363, %358
  %361 = phi %"class.spvtools::opt::Instruction"* [ %369, %363 ], [ %352, %358 ]
  %362 = icmp eq %"class.spvtools::opt::Instruction"* %361, null
  br i1 %362, label %372, label %363

363:                                              ; preds = %360
  %364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %361, i64 0, i32 0, i32 1
  %365 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %364, align 8
  %366 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %365, i64 0, i32 0, i32 3
  %367 = load i8, i8* %366, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  %369 = select i1 %368, %"class.spvtools::opt::Instruction"* %365, %"class.spvtools::opt::Instruction"* null
  %370 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %342, align 8
  %371 = call zeroext i1 %370(%"union.std::__1::__function::__policy_storage"* nonnull %359, %"class.spvtools::opt::Instruction"* nonnull %361) #10
  br i1 %371, label %360, label %372

372:                                              ; preds = %363, %360, %350
  %373 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %343, align 8
  %374 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %373, i64 0, i32 1
  %375 = load void (i8*)*, void (i8*)** %374, align 8
  %376 = icmp eq void (i8*)* %375, null
  br i1 %376, label %380, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %16, i64 0, i32 0, i32 0, i32 0
  %379 = load i8*, i8** %378, align 8
  call void %375(i8* %379) #10
  br label %380

380:                                              ; preds = %372, %377
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %340) #10
  %381 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %338, align 8
  %382 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %381, i64 0, i32 1
  %383 = load void (i8*)*, void (i8*)** %382, align 8
  %384 = icmp eq void (i8*)* %383, null
  br i1 %384, label %388, label %385

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %24, i64 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void %383(i8* %387) #10
  br label %388

388:                                              ; preds = %380, %385
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #10
  %389 = bitcast %"class.std::__1::vector.945"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %389) #10
  %390 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %25, i64 0, i32 0, i32 0
  %391 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %25, i64 0, i32 0, i32 1
  %392 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %389, i8 0, i64 24, i1 false) #10
  %393 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %394 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %393, i64 0, i32 1
  %395 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %394, align 8
  %396 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %395, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %397 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %395, i64 0, i32 2, i32 0, i32 1
  %398 = bitcast %"class.spvtools::opt::Instruction"** %396 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = inttoptr i64 %399 to %"class.spvtools::opt::Instruction"*
  %401 = icmp eq %"class.spvtools::opt::Instruction"* %397, %400
  br i1 %401, label %482, label %402

402:                                              ; preds = %388
  %403 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %404 = bitcast %"class.spvtools::opt::Instruction"*** %391 to i64*
  %405 = bitcast %"class.std::__1::vector.945"* %25 to i64*
  %406 = bitcast %"class.spvtools::opt::Instruction"*** %392 to i64*
  br label %413

407:                                              ; preds = %475
  %408 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %390, align 8
  %409 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %391, align 8
  %410 = icmp eq %"class.spvtools::opt::Instruction"** %408, %409
  br i1 %410, label %482, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  br label %550

413:                                              ; preds = %402, %475
  %414 = phi %"class.spvtools::opt::Instruction"* [ %400, %402 ], [ %480, %475 ]
  %415 = phi i64 [ %399, %402 ], [ %479, %475 ]
  %416 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %414, i64 0, i32 2
  %417 = load i32, i32* %416, align 8
  %418 = icmp eq i32 %417, 245
  br i1 %418, label %419, label %475

419:                                              ; preds = %413
  %420 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %403, align 8
  %421 = icmp eq %"class.spvtools::opt::Instruction"* %420, %414
  br i1 %421, label %475, label %422

422:                                              ; preds = %419
  %423 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %391, align 8
  %424 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %392, align 8
  %425 = icmp ult %"class.spvtools::opt::Instruction"** %423, %424
  %426 = ptrtoint %"class.spvtools::opt::Instruction"** %424 to i64
  br i1 %425, label %427, label %431

427:                                              ; preds = %422
  %428 = bitcast %"class.spvtools::opt::Instruction"** %423 to i64*
  store i64 %415, i64* %428, align 8
  %429 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %423, i64 1
  %430 = ptrtoint %"class.spvtools::opt::Instruction"** %429 to i64
  store i64 %430, i64* %404, align 8
  br label %475

431:                                              ; preds = %422
  %432 = ptrtoint %"class.spvtools::opt::Instruction"** %423 to i64
  %433 = load i64, i64* %405, align 8
  %434 = sub i64 %432, %433
  %435 = ashr exact i64 %434, 3
  %436 = add nsw i64 %435, 1
  %437 = icmp ugt i64 %436, 2305843009213693951
  br i1 %437, label %438, label %440

438:                                              ; preds = %431
  %439 = bitcast %"class.std::__1::vector.945"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %439) #12
  unreachable

440:                                              ; preds = %431
  %441 = sub i64 %426, %433
  %442 = ashr exact i64 %441, 3
  %443 = icmp ult i64 %442, 1152921504606846975
  br i1 %443, label %444, label %452

444:                                              ; preds = %440
  %445 = ashr exact i64 %441, 2
  %446 = icmp ult i64 %445, %436
  %447 = select i1 %446, i64 %436, i64 %445
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %457, label %449

449:                                              ; preds = %444
  %450 = icmp ugt i64 %447, 2305843009213693951
  br i1 %450, label %451, label %452

451:                                              ; preds = %449
  call void @abort() #12
  unreachable

452:                                              ; preds = %449, %440
  %453 = phi i64 [ %447, %449 ], [ 2305843009213693951, %440 ]
  %454 = shl i64 %453, 3
  %455 = call i8* @_Znwm(i64 %454) #11
  %456 = bitcast i8* %455 to %"class.spvtools::opt::Instruction"**
  br label %457

457:                                              ; preds = %452, %444
  %458 = phi i64 [ %453, %452 ], [ 0, %444 ]
  %459 = phi i8* [ %455, %452 ], [ null, %444 ]
  %460 = phi %"class.spvtools::opt::Instruction"** [ %456, %452 ], [ null, %444 ]
  %461 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %460, i64 %435
  %462 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %460, i64 %458
  %463 = ptrtoint %"class.spvtools::opt::Instruction"** %462 to i64
  %464 = bitcast %"class.spvtools::opt::Instruction"** %461 to i64*
  store i64 %415, i64* %464, align 8
  %465 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %461, i64 1
  %466 = ptrtoint %"class.spvtools::opt::Instruction"** %465 to i64
  %467 = ptrtoint %"class.spvtools::opt::Instruction"** %460 to i64
  %468 = icmp sgt i64 %434, 0
  br i1 %468, label %469, label %471

469:                                              ; preds = %457
  %470 = inttoptr i64 %433 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %470, i64 %434, i1 false) #10
  br label %471

471:                                              ; preds = %469, %457
  store i64 %467, i64* %405, align 8
  store i64 %466, i64* %404, align 8
  store i64 %463, i64* %406, align 8
  %472 = icmp eq i64 %433, 0
  br i1 %472, label %475, label %473

473:                                              ; preds = %471
  %474 = inttoptr i64 %433 to i8*
  call void @_ZdlPv(i8* %474) #11
  br label %475

475:                                              ; preds = %473, %471, %427, %419, %413
  %476 = inttoptr i64 %415 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %477 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %476, i64 0, i32 1
  %478 = bitcast %"class.spvtools::opt::Instruction"** %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = inttoptr i64 %479 to %"class.spvtools::opt::Instruction"*
  %481 = icmp eq %"class.spvtools::opt::Instruction"* %397, %480
  br i1 %481, label %407, label %413

482:                                              ; preds = %587, %388, %407
  %483 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %484 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %483, i64 0, i32 1
  %485 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %484, align 8
  %486 = bitcast %"class.std::__1::function.981"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %486) #10
  %487 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %26, i64 0, i32 0, i32 1, i32 0
  %488 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %26, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_9S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %487, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_9FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %488, align 8
  %489 = bitcast %"class.std::__1::function.981"* %26 to i64*
  store i64 %212, i64* %489, align 8
  %490 = bitcast %"class.std::__1::function.939"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %490) #10
  %491 = ptrtoint %"class.std::__1::function.981"* %26 to i64
  %492 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %8, i64 0, i32 0, i32 1, i32 0
  %493 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %492, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %493, align 8
  %494 = bitcast %"class.std::__1::function.939"* %8 to i64*
  store i64 %491, i64* %494, align 8
  %495 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %485, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %496 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %495, align 8
  %497 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %496, i64 0, i32 0, i32 3
  %498 = load i8, i8* %497, align 8, !range !2
  %499 = icmp ne i8 %498, 0
  %500 = icmp eq %"class.spvtools::opt::Instruction"* %496, null
  %501 = or i1 %500, %499
  br i1 %501, label %522, label %502

502:                                              ; preds = %482
  %503 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %8, i64 0, i32 0, i32 0
  br label %504

504:                                              ; preds = %513, %502
  %505 = phi %"class.spvtools::opt::Instruction"* [ %517, %513 ], [ %496, %502 ]
  %506 = icmp eq %"class.spvtools::opt::Instruction"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %504
  %508 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %505, i64 0, i32 0, i32 1
  %509 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %508, align 8
  %510 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %505, i64 0, i32 2
  %511 = load i32, i32* %510, align 8
  %512 = icmp eq i32 %511, 245
  br i1 %512, label %513, label %520

513:                                              ; preds = %507
  %514 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %509, i64 0, i32 0, i32 3
  %515 = load i8, i8* %514, align 8, !range !2
  %516 = icmp eq i8 %515, 0
  %517 = select i1 %516, %"class.spvtools::opt::Instruction"* %509, %"class.spvtools::opt::Instruction"* null
  %518 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %492, align 8
  %519 = call zeroext i1 %518(%"union.std::__1::__function::__policy_storage"* nonnull %503, %"class.spvtools::opt::Instruction"* nonnull %505) #10
  br i1 %519, label %504, label %520

520:                                              ; preds = %504, %507, %513
  %521 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %493, align 8
  br label %522

522:                                              ; preds = %520, %482
  %523 = phi %"struct.std::__1::__function::__policy"* [ %521, %520 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %482 ]
  %524 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %523, i64 0, i32 1
  %525 = load void (i8*)*, void (i8*)** %524, align 8
  %526 = icmp eq void (i8*)* %525, null
  br i1 %526, label %530, label %527

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %8, i64 0, i32 0, i32 0, i32 0
  %529 = load i8*, i8** %528, align 8
  call void %525(i8* %529) #10
  br label %530

530:                                              ; preds = %522, %527
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %490) #10
  %531 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %488, align 8
  %532 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %531, i64 0, i32 1
  %533 = load void (i8*)*, void (i8*)** %532, align 8
  %534 = icmp eq void (i8*)* %533, null
  br i1 %534, label %538, label %535

535:                                              ; preds = %530
  %536 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %26, i64 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void %533(i8* %537) #10
  br label %538

538:                                              ; preds = %530, %535
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %486) #10
  %539 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %390, align 8
  %540 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %391, align 8
  %541 = icmp eq %"class.spvtools::opt::Instruction"** %539, %540
  %542 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 0
  %543 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  br i1 %541, label %600, label %544

544:                                              ; preds = %538
  %545 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  %546 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  %547 = bitcast %"class.std::__1::tuple.1145"* %3 to i8*
  %548 = getelementptr inbounds %"class.std::__1::tuple.1145", %"class.std::__1::tuple.1145"* %3, i64 0, i32 0, i32 0, i32 0
  %549 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %4, i64 0, i32 0
  br label %762

550:                                              ; preds = %411, %587
  %551 = phi %"class.spvtools::opt::Instruction"** [ %408, %411 ], [ %598, %587 ]
  %552 = bitcast %"class.spvtools::opt::Instruction"** %551 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %553 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %552, align 8
  %554 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %553, i64 0, i32 2
  %555 = bitcast %"class.spvtools::opt::Instruction"** %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %553, i64 0, i32 1
  %558 = bitcast %"class.spvtools::opt::Instruction"** %557 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %559 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %558, align 8
  %560 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %559, i64 0, i32 2
  %561 = bitcast %"class.spvtools::opt::Instruction"** %560 to i64*
  store i64 %556, i64* %561, align 8
  %562 = bitcast %"class.spvtools::opt::Instruction"** %557 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = bitcast %"class.spvtools::opt::Instruction"** %554 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %565 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %564, align 8
  %566 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %565, i64 0, i32 1
  %567 = bitcast %"class.spvtools::opt::Instruction"** %566 to i64*
  store i64 %563, i64* %567, align 8
  %568 = bitcast %"class.spvtools::opt::Instruction"** %557 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %568, i8 0, i64 16, i1 false) #10
  %569 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %552, align 8
  %570 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %412, align 8
  %571 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %569, i64 0, i32 1
  %572 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %571, align 8
  %573 = icmp eq %"class.spvtools::opt::Instruction"* %572, null
  br i1 %573, label %587, label %574

574:                                              ; preds = %550
  %575 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %569, i64 0, i32 2
  %576 = bitcast %"class.spvtools::opt::Instruction"** %575 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %572, i64 0, i32 0, i32 2
  %579 = bitcast %"class.spvtools::opt::Instruction"** %578 to i64*
  store i64 %577, i64* %579, align 8
  %580 = bitcast %"class.spvtools::opt::Instruction"** %571 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = bitcast %"class.spvtools::opt::Instruction"** %575 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %583 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %582, align 8
  %584 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %583, i64 0, i32 1
  %585 = bitcast %"class.spvtools::opt::Instruction"** %584 to i64*
  store i64 %581, i64* %585, align 8
  %586 = bitcast %"class.spvtools::opt::Instruction"** %571 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %586, i8 0, i64 16, i1 false) #10
  br label %587

587:                                              ; preds = %550, %574
  store %"class.spvtools::opt::Instruction"* %570, %"class.spvtools::opt::Instruction"** %571, align 8
  %588 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %570, i64 0, i32 0, i32 2
  %589 = bitcast %"class.spvtools::opt::Instruction"** %588 to i64*
  %590 = load i64, i64* %589, align 8
  %591 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %569, i64 0, i32 2
  %592 = bitcast %"class.spvtools::opt::Instruction"** %591 to i64*
  store i64 %590, i64* %592, align 8
  %593 = bitcast %"class.spvtools::opt::Instruction"** %588 to %"class.spvtools::utils::IntrusiveNodeBase"**
  store %"class.spvtools::utils::IntrusiveNodeBase"* %569, %"class.spvtools::utils::IntrusiveNodeBase"** %593, align 8
  %594 = bitcast %"class.spvtools::opt::Instruction"** %591 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %595 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %594, align 8
  %596 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %595, i64 0, i32 1
  %597 = bitcast %"class.spvtools::opt::Instruction"** %596 to %"class.spvtools::utils::IntrusiveNodeBase"**
  store %"class.spvtools::utils::IntrusiveNodeBase"* %569, %"class.spvtools::utils::IntrusiveNodeBase"** %597, align 8
  %598 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %551, i64 1
  %599 = icmp eq %"class.spvtools::opt::Instruction"** %598, %409
  br i1 %599, label %482, label %550

600:                                              ; preds = %814, %538
  %601 = phi %"class.spvtools::opt::IRContext"* [ %543, %538 ], [ %820, %814 ]
  %602 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 5
  %603 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %602, align 8
  %604 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 4
  %605 = load i8, i8* %604, align 1, !range !2
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %612, label %607

607:                                              ; preds = %600
  %608 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 3
  %609 = load i8, i8* %608, align 4, !range !2
  %610 = zext i8 %609 to i32
  %611 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %603, i32 %610) #10
  br label %612

612:                                              ; preds = %600, %607
  %613 = phi i32 [ %611, %607 ], [ 0, %600 ]
  %614 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %0, i64 0, i32 4
  %615 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %614, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 4
  %617 = load i8, i8* %616, align 1, !range !2
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %624, label %619

619:                                              ; preds = %612
  %620 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 3
  %621 = load i8, i8* %620, align 4, !range !2
  %622 = zext i8 %621 to i32
  %623 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %615, i32 %622) #10
  br label %624

624:                                              ; preds = %612, %619
  %625 = phi i32 [ %623, %619 ], [ 0, %612 ]
  %626 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %601, i32 %613, i32 %625) #10
  %627 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %628 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %627, i64 0, i32 3
  %629 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %628, align 8
  %630 = bitcast %"class.std::__1::function.981"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %630) #10
  %631 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %27, i64 0, i32 0, i32 1, i32 0
  %632 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %27, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE4$_10S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %631, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE4$_10FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %632, align 8
  %633 = bitcast %"class.std::__1::function.981"* %27 to i64*
  store i64 %212, i64* %633, align 8
  %634 = bitcast %"class.std::__1::function.939"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634) #10
  %635 = ptrtoint %"class.std::__1::function.981"* %27 to i64
  %636 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %7, i64 0, i32 0, i32 1, i32 0
  %637 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %7, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %636, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %637, align 8
  %638 = bitcast %"class.std::__1::function.939"* %7 to i64*
  store i64 %635, i64* %638, align 8
  %639 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %629, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %640 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %639, align 8
  %641 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %640, i64 0, i32 0, i32 3
  %642 = load i8, i8* %641, align 8, !range !2
  %643 = icmp ne i8 %642, 0
  %644 = icmp eq %"class.spvtools::opt::Instruction"* %640, null
  %645 = or i1 %644, %643
  br i1 %645, label %666, label %646

646:                                              ; preds = %624
  %647 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %7, i64 0, i32 0, i32 0
  br label %648

648:                                              ; preds = %657, %646
  %649 = phi %"class.spvtools::opt::Instruction"* [ %661, %657 ], [ %640, %646 ]
  %650 = icmp eq %"class.spvtools::opt::Instruction"* %649, null
  br i1 %650, label %664, label %651

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %649, i64 0, i32 0, i32 1
  %653 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %652, align 8
  %654 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %649, i64 0, i32 2
  %655 = load i32, i32* %654, align 8
  %656 = icmp eq i32 %655, 245
  br i1 %656, label %657, label %664

657:                                              ; preds = %651
  %658 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %653, i64 0, i32 0, i32 3
  %659 = load i8, i8* %658, align 8, !range !2
  %660 = icmp eq i8 %659, 0
  %661 = select i1 %660, %"class.spvtools::opt::Instruction"* %653, %"class.spvtools::opt::Instruction"* null
  %662 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %636, align 8
  %663 = call zeroext i1 %662(%"union.std::__1::__function::__policy_storage"* nonnull %647, %"class.spvtools::opt::Instruction"* nonnull %649) #10
  br i1 %663, label %648, label %664

664:                                              ; preds = %648, %651, %657
  %665 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %637, align 8
  br label %666

666:                                              ; preds = %664, %624
  %667 = phi %"struct.std::__1::__function::__policy"* [ %665, %664 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %624 ]
  %668 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %667, i64 0, i32 1
  %669 = load void (i8*)*, void (i8*)** %668, align 8
  %670 = icmp eq void (i8*)* %669, null
  br i1 %670, label %674, label %671

671:                                              ; preds = %666
  %672 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %7, i64 0, i32 0, i32 0, i32 0
  %673 = load i8*, i8** %672, align 8
  call void %669(i8* %673) #10
  br label %674

674:                                              ; preds = %666, %671
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634) #10
  %675 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %632, align 8
  %676 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %675, i64 0, i32 1
  %677 = load void (i8*)*, void (i8*)** %676, align 8
  %678 = icmp eq void (i8*)* %677, null
  br i1 %678, label %682, label %679

679:                                              ; preds = %674
  %680 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %27, i64 0, i32 0, i32 0, i32 0
  %681 = load i8*, i8** %680, align 8
  call void %677(i8* %681) #10
  br label %682

682:                                              ; preds = %674, %679
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %630) #10
  %683 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %684 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %683, i64 0, i32 3
  %685 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %684, align 8
  %686 = bitcast %"class.std::__1::function.981"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %686) #10
  %687 = ptrtoint %"class.spvtools::opt::BasicBlock"* %96 to i64
  %688 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %28, i64 0, i32 0, i32 1, i32 0
  %689 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %28, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE4$_11S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %688, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %689, align 8
  %690 = bitcast %"class.std::__1::function.981"* %28 to i64*
  store i64 %687, i64* %690, align 8
  %691 = bitcast %"class.std::__1::function.939"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %691) #10
  %692 = ptrtoint %"class.std::__1::function.981"* %28 to i64
  %693 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %6, i64 0, i32 0, i32 1, i32 0
  %694 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %693, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %694, align 8
  %695 = bitcast %"class.std::__1::function.939"* %6 to i64*
  store i64 %692, i64* %695, align 8
  %696 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %685, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %697 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %696, align 8
  %698 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 0, i32 3
  %699 = load i8, i8* %698, align 8, !range !2
  %700 = icmp ne i8 %699, 0
  %701 = icmp eq %"class.spvtools::opt::Instruction"* %697, null
  %702 = or i1 %701, %700
  br i1 %702, label %723, label %703

703:                                              ; preds = %682
  %704 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %6, i64 0, i32 0, i32 0
  br label %705

705:                                              ; preds = %714, %703
  %706 = phi %"class.spvtools::opt::Instruction"* [ %718, %714 ], [ %697, %703 ]
  %707 = icmp eq %"class.spvtools::opt::Instruction"* %706, null
  br i1 %707, label %721, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %706, i64 0, i32 0, i32 1
  %710 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %709, align 8
  %711 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %706, i64 0, i32 2
  %712 = load i32, i32* %711, align 8
  %713 = icmp eq i32 %712, 245
  br i1 %713, label %714, label %721

714:                                              ; preds = %708
  %715 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %710, i64 0, i32 0, i32 3
  %716 = load i8, i8* %715, align 8, !range !2
  %717 = icmp eq i8 %716, 0
  %718 = select i1 %717, %"class.spvtools::opt::Instruction"* %710, %"class.spvtools::opt::Instruction"* null
  %719 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %693, align 8
  %720 = call zeroext i1 %719(%"union.std::__1::__function::__policy_storage"* nonnull %704, %"class.spvtools::opt::Instruction"* nonnull %706) #10
  br i1 %720, label %705, label %721

721:                                              ; preds = %705, %708, %714
  %722 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %694, align 8
  br label %723

723:                                              ; preds = %721, %682
  %724 = phi %"struct.std::__1::__function::__policy"* [ %722, %721 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %682 ]
  %725 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %724, i64 0, i32 1
  %726 = load void (i8*)*, void (i8*)** %725, align 8
  %727 = icmp eq void (i8*)* %726, null
  br i1 %727, label %731, label %728

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %6, i64 0, i32 0, i32 0, i32 0
  %730 = load i8*, i8** %729, align 8
  call void %726(i8* %730) #10
  br label %731

731:                                              ; preds = %723, %728
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %691) #10
  %732 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %689, align 8
  %733 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %732, i64 0, i32 1
  %734 = load void (i8*)*, void (i8*)** %733, align 8
  %735 = icmp eq void (i8*)* %734, null
  br i1 %735, label %739, label %736

736:                                              ; preds = %731
  %737 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %28, i64 0, i32 0, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  call void %734(i8* %738) #10
  br label %739

739:                                              ; preds = %731, %736
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %686) #10
  %740 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  call void @_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE(%"class.spvtools::opt::Function"* %740, i32 %95, %"class.spvtools::opt::BasicBlock"* %193)
  %741 = bitcast %"class.std::__1::vector.945"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %741) #10
  %742 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %29, i64 0, i32 0, i32 0
  %743 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %29, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %741, i8 0, i64 24, i1 false) #10
  %744 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %745 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %744, i64 0, i32 4
  %746 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %745, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"* nonnull %29, %"class.spvtools::opt::BasicBlock"* %746)
  %747 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %748 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %747, i64 0, i32 1
  %749 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %748, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"* nonnull %29, %"class.spvtools::opt::BasicBlock"* %749)
  %750 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %751 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %750) #10
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"* nonnull %29, %"class.spvtools::opt::BasicBlock"* %751)
  %752 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %753 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %752, i64 0, i32 2
  %754 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %753, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"* nonnull %29, %"class.spvtools::opt::BasicBlock"* %754)
  %755 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %756 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %755, i64 0, i32 3
  %757 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %756, align 8
  %758 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %759 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %758, i64 0, i32 4
  %760 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %759, align 8
  %761 = icmp eq %"class.spvtools::opt::BasicBlock"* %757, %760
  br i1 %761, label %822, label %821

762:                                              ; preds = %544, %814
  %763 = phi %"class.spvtools::opt::IRContext"* [ %543, %544 ], [ %820, %814 ]
  %764 = phi %"class.spvtools::opt::Instruction"** [ %539, %544 ], [ %818, %814 ]
  %765 = bitcast %"class.spvtools::opt::Instruction"** %764 to i64*
  %766 = load i64, i64* %765, align 8
  %767 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %768 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %767, i64 0, i32 1
  %769 = bitcast %"class.spvtools::opt::BasicBlock"** %768 to i64*
  %770 = load i64, i64* %769, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545)
  store i64 %766, i64* %546, align 8
  %771 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %763, i64 0, i32 11
  %772 = load i32, i32* %771, align 8
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %784, label %775

775:                                              ; preds = %762
  %776 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %763, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #10
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %548, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %549) #10
  %777 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %776, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1145"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1122"* nonnull dereferenceable(1) %4) #10
  %778 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %777, 0
  %779 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %778, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %549) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #10
  %780 = bitcast %"struct.std::__1::__hash_node_base.178"* %779 to i64*
  store i64 %770, i64* %780, align 8
  %781 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  %782 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %781, i64 0, i32 11
  %783 = load i32, i32* %782, align 8
  br label %784

784:                                              ; preds = %762, %775
  %785 = phi i32 [ %772, %762 ], [ %783, %775 ]
  %786 = phi %"class.spvtools::opt::IRContext"* [ %763, %762 ], [ %781, %775 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545)
  %787 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %786, i64 0, i32 11
  %788 = and i32 %785, 1
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %814

790:                                              ; preds = %784
  %791 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %786, i64 0, i32 4, i32 0, i32 0, i32 0
  %792 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %791, align 8
  %793 = call i8* @_Znwm(i64 104) #11
  %794 = bitcast i8* %793 to %"class.spvtools::opt::analysis::DefUseManager"*
  %795 = getelementptr inbounds i8, i8* %793, i64 32
  %796 = bitcast i8* %795 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %793, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %796, align 4
  %797 = getelementptr inbounds i8, i8* %793, i64 48
  %798 = getelementptr inbounds i8, i8* %793, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %797, i8 0, i64 16, i1 false) #10
  %799 = bitcast i8* %798 to i8**
  store i8* %797, i8** %799, align 8
  %800 = getelementptr inbounds i8, i8* %793, i64 64
  %801 = getelementptr inbounds i8, i8* %793, i64 96
  %802 = bitcast i8* %801 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %800, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %802, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %794, %"class.spvtools::opt::Module"* %792) #10
  %803 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %786, i64 0, i32 6
  %804 = ptrtoint i8* %793 to i64
  %805 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %803, i64 0, i32 0, i32 0, i32 0
  %806 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %805, align 8
  %807 = bitcast %"class.std::__1::unique_ptr.62"* %803 to i64*
  store i64 %804, i64* %807, align 8
  %808 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %806, null
  br i1 %808, label %811, label %809

809:                                              ; preds = %790
  %810 = bitcast %"class.std::__1::unique_ptr.62"* %803 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %810, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %806) #10
  br label %811

811:                                              ; preds = %809, %790
  %812 = load i32, i32* %787, align 8
  %813 = or i32 %812, 1
  store i32 %813, i32* %787, align 8
  br label %814

814:                                              ; preds = %784, %811
  %815 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %786, i64 0, i32 6, i32 0, i32 0, i32 0
  %816 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %815, align 8
  %817 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %764, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %816, %"class.spvtools::opt::Instruction"* %817) #10
  %818 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %764, i64 1
  %819 = icmp eq %"class.spvtools::opt::Instruction"** %818, %540
  %820 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  br i1 %819, label %600, label %762

821:                                              ; preds = %739
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"* nonnull %29, %"class.spvtools::opt::BasicBlock"* %757)
  br label %822

822:                                              ; preds = %739, %821
  %823 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  %824 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %823, i64 0, i32 11
  %825 = load i32, i32* %824, align 8
  %826 = and i32 %825, 16
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %828, label %844

828:                                              ; preds = %822
  %829 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %823, i64 0, i32 4, i32 0, i32 0, i32 0
  %830 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %829, align 8
  %831 = call i8* @_Znwm(i64 400) #11
  %832 = bitcast i8* %831 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %832, %"class.spvtools::opt::Module"* %830) #10
  %833 = ptrtoint i8* %831 to i64
  %834 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %823, i64 0, i32 15
  %835 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %834, i64 0, i32 0, i32 0, i32 0
  %836 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %835, align 8
  %837 = bitcast %"class.std::__1::unique_ptr.273"* %834 to i64*
  store i64 %833, i64* %837, align 8
  %838 = icmp eq %"class.spvtools::opt::CFG"* %836, null
  br i1 %838, label %841, label %839

839:                                              ; preds = %828
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %836) #10
  %840 = bitcast %"class.spvtools::opt::CFG"* %836 to i8*
  call void @_ZdlPv(i8* %840) #11
  br label %841

841:                                              ; preds = %839, %828
  %842 = load i32, i32* %824, align 8
  %843 = or i32 %842, 16
  store i32 %843, i32* %824, align 8
  br label %844

844:                                              ; preds = %822, %841
  %845 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %823, i64 0, i32 15, i32 0, i32 0, i32 0
  %846 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %845, align 8
  %847 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %848 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %847, i64 0, i32 4
  %849 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %848, align 8
  call void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %846, %"class.spvtools::opt::BasicBlock"* %849)
  %850 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %851 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %850, i64 0, i32 1
  %852 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %851, align 8
  call void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %846, %"class.spvtools::opt::BasicBlock"* %852)
  %853 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %854 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %853) #10
  call void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %846, %"class.spvtools::opt::BasicBlock"* %854)
  %855 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %856 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %855, i64 0, i32 2
  %857 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %856, align 8
  call void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %846, %"class.spvtools::opt::BasicBlock"* %857)
  %858 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %859 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %858, i64 0, i32 3
  %860 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %859, align 8
  %861 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %862 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %861, i64 0, i32 4
  %863 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %862, align 8
  %864 = icmp eq %"class.spvtools::opt::BasicBlock"* %860, %863
  br i1 %864, label %866, label %865

865:                                              ; preds = %844
  call void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %846, %"class.spvtools::opt::BasicBlock"* %860)
  br label %866

866:                                              ; preds = %844, %865
  %867 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %197, i64 0, i32 1, i32 0, i32 0, i32 0
  %868 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %867, align 8
  %869 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %868, i64 0, i32 4
  %870 = load i8, i8* %869, align 1, !range !2
  %871 = icmp eq i8 %870, 0
  br i1 %871, label %877, label %872

872:                                              ; preds = %866
  %873 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %868, i64 0, i32 3
  %874 = load i8, i8* %873, align 4, !range !2
  %875 = zext i8 %874 to i32
  %876 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %868, i32 %875) #10
  br label %877

877:                                              ; preds = %866, %872
  %878 = phi i32 [ %876, %872 ], [ 0, %866 ]
  %879 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %880 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %879, i64 0, i32 2
  %881 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %880, align 8
  %882 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %881, i64 0, i32 1, i32 0, i32 0, i32 0
  %883 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %882, align 8
  %884 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %883, i64 0, i32 4
  %885 = load i8, i8* %884, align 1, !range !2
  %886 = icmp eq i8 %885, 0
  br i1 %886, label %892, label %887

887:                                              ; preds = %877
  %888 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %883, i64 0, i32 3
  %889 = load i8, i8* %888, align 4, !range !2
  %890 = zext i8 %889 to i32
  %891 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %883, i32 %890) #10
  br label %892

892:                                              ; preds = %877, %887
  %893 = phi i32 [ %891, %887 ], [ 0, %877 ]
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %846, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %896 = load i64, i64* %895, align 8
  %897 = icmp eq i64 %896, 0
  br i1 %897, label %976, label %898

898:                                              ; preds = %892
  %899 = call i64 @llvm.ctpop.i64(i64 %896) #10, !range !3
  %900 = icmp ugt i64 %899, 1
  br i1 %900, label %904, label %901

901:                                              ; preds = %898
  %902 = add i64 %896, 4294967295
  %903 = and i64 %902, %894
  br label %908

904:                                              ; preds = %898
  %905 = icmp ugt i64 %896, %894
  br i1 %905, label %908, label %906

906:                                              ; preds = %904
  %907 = urem i64 %894, %896
  br label %908

908:                                              ; preds = %906, %904, %901
  %909 = phi i64 [ %903, %901 ], [ %907, %906 ], [ %894, %904 ]
  %910 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %846, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %911 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %910, align 8
  %912 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %911, i64 %909
  %913 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %912, align 8
  %914 = icmp eq %"struct.std::__1::__hash_node_base.309"* %913, null
  br i1 %914, label %976, label %915

915:                                              ; preds = %908
  %916 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %913, i64 0, i32 0
  %917 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %916, align 8
  %918 = icmp eq %"struct.std::__1::__hash_node_base.309"* %917, null
  br i1 %918, label %976, label %919

919:                                              ; preds = %915
  %920 = add i64 %896, -1
  br label %921

921:                                              ; preds = %942, %919
  %922 = phi %"struct.std::__1::__hash_node_base.309"* [ %917, %919 ], [ %944, %942 ]
  %923 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %922, i64 1
  %924 = bitcast %"struct.std::__1::__hash_node_base.309"* %923 to i64*
  %925 = load i64, i64* %924, align 8
  %926 = icmp eq i64 %925, %894
  br i1 %926, label %937, label %927

927:                                              ; preds = %921
  br i1 %900, label %930, label %928

928:                                              ; preds = %927
  %929 = and i64 %925, %920
  br label %934

930:                                              ; preds = %927
  %931 = icmp ult i64 %925, %896
  br i1 %931, label %934, label %932

932:                                              ; preds = %930
  %933 = urem i64 %925, %896
  br label %934

934:                                              ; preds = %932, %930, %928
  %935 = phi i64 [ %929, %928 ], [ %933, %932 ], [ %925, %930 ]
  %936 = icmp eq i64 %935, %909
  br i1 %936, label %942, label %976

937:                                              ; preds = %921
  %938 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %922, i64 2
  %939 = bitcast %"struct.std::__1::__hash_node_base.309"* %938 to i32*
  %940 = load i32, i32* %939, align 4
  %941 = icmp eq i32 %940, %893
  br i1 %941, label %946, label %942

942:                                              ; preds = %937, %934
  %943 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %922, i64 0, i32 0
  %944 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %943, align 8
  %945 = icmp eq %"struct.std::__1::__hash_node_base.309"* %944, null
  br i1 %945, label %976, label %921

946:                                              ; preds = %937
  %947 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %922, i64 3
  %948 = bitcast %"struct.std::__1::__hash_node_base.309"* %947 to i32**
  %949 = load i32*, i32** %948, align 8
  %950 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %922, i64 4
  %951 = bitcast %"struct.std::__1::__hash_node_base.309"* %950 to i32**
  %952 = load i32*, i32** %951, align 8
  %953 = icmp eq i32* %949, %952
  %954 = ptrtoint i32* %952 to i64
  br i1 %953, label %962, label %955

955:                                              ; preds = %946, %959
  %956 = phi i32* [ %960, %959 ], [ %949, %946 ]
  %957 = load i32, i32* %956, align 4
  %958 = icmp eq i32 %957, %878
  br i1 %958, label %962, label %959

959:                                              ; preds = %955
  %960 = getelementptr inbounds i32, i32* %956, i64 1
  %961 = icmp eq i32* %960, %952
  br i1 %961, label %976, label %955

962:                                              ; preds = %955, %946
  %963 = phi i32* [ %949, %946 ], [ %956, %955 ]
  %964 = icmp eq i32* %963, %952
  br i1 %964, label %976, label %965

965:                                              ; preds = %962
  %966 = getelementptr inbounds i32, i32* %963, i64 1
  %967 = ptrtoint i32* %966 to i64
  %968 = sub i64 %954, %967
  %969 = ashr exact i64 %968, 2
  %970 = icmp eq i64 %968, 0
  br i1 %970, label %974, label %971

971:                                              ; preds = %965
  %972 = bitcast i32* %963 to i8*
  %973 = bitcast i32* %966 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %972, i8* align 4 %973, i64 %968, i1 false) #10
  br label %974

974:                                              ; preds = %971, %965
  %975 = getelementptr inbounds i32, i32* %963, i64 %969
  store i32* %975, i32** %951, align 8
  br label %976

976:                                              ; preds = %934, %942, %959, %892, %908, %915, %962, %974
  %977 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %867, align 8
  %978 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %977, i64 0, i32 4
  %979 = load i8, i8* %978, align 1, !range !2
  %980 = icmp eq i8 %979, 0
  br i1 %980, label %986, label %981

981:                                              ; preds = %976
  %982 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %977, i64 0, i32 3
  %983 = load i8, i8* %982, align 4, !range !2
  %984 = zext i8 %983 to i32
  %985 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %977, i32 %984) #10
  br label %986

986:                                              ; preds = %976, %981
  %987 = phi i32 [ %985, %981 ], [ 0, %976 ]
  %988 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %194, i64 0, i32 1, i32 0, i32 0, i32 0
  %989 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %988, align 8
  %990 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %989, i64 0, i32 4
  %991 = load i8, i8* %990, align 1, !range !2
  %992 = icmp eq i8 %991, 0
  br i1 %992, label %998, label %993

993:                                              ; preds = %986
  %994 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %989, i64 0, i32 3
  %995 = load i8, i8* %994, align 4, !range !2
  %996 = zext i8 %995 to i32
  %997 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %989, i32 %996) #10
  br label %998

998:                                              ; preds = %986, %993
  %999 = phi i32 [ %997, %993 ], [ 0, %986 ]
  call void @_ZN8spvtools3opt3CFG7AddEdgeEjj(%"class.spvtools::opt::CFG"* %846, i32 %987, i32 %999)
  %1000 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %193, i64 0, i32 1, i32 0, i32 0, i32 0
  %1001 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1000, align 8
  %1002 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1001, i64 0, i32 4
  %1003 = load i8, i8* %1002, align 1, !range !2
  %1004 = icmp eq i8 %1003, 0
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %998
  %1006 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1001, i64 0, i32 3
  %1007 = load i8, i8* %1006, align 4, !range !2
  %1008 = zext i8 %1007 to i32
  %1009 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1001, i32 %1008) #10
  br label %1010

1010:                                             ; preds = %998, %1005
  %1011 = phi i32 [ %1009, %1005 ], [ 0, %998 ]
  %1012 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1013 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1012, i64 0, i32 2
  %1014 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1013, align 8
  %1015 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1014, i64 0, i32 1, i32 0, i32 0, i32 0
  %1016 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1015, align 8
  %1017 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1016, i64 0, i32 4
  %1018 = load i8, i8* %1017, align 1, !range !2
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1025, label %1020

1020:                                             ; preds = %1010
  %1021 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1016, i64 0, i32 3
  %1022 = load i8, i8* %1021, align 4, !range !2
  %1023 = zext i8 %1022 to i32
  %1024 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1016, i32 %1023) #10
  br label %1025

1025:                                             ; preds = %1010, %1020
  %1026 = phi i32 [ %1024, %1020 ], [ 0, %1010 ]
  call void @_ZN8spvtools3opt3CFG7AddEdgeEjj(%"class.spvtools::opt::CFG"* %846, i32 %1011, i32 %1026)
  %1027 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1028 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1027, i64 0, i32 2
  %1029 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1028, align 8
  %1030 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1029, i64 0, i32 1, i32 0, i32 0, i32 0
  %1031 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1030, align 8
  %1032 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1031, i64 0, i32 4
  %1033 = load i8, i8* %1032, align 1, !range !2
  %1034 = icmp eq i8 %1033, 0
  br i1 %1034, label %1040, label %1035

1035:                                             ; preds = %1025
  %1036 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1031, i64 0, i32 3
  %1037 = load i8, i8* %1036, align 4, !range !2
  %1038 = zext i8 %1037 to i32
  %1039 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1031, i32 %1038) #10
  br label %1040

1040:                                             ; preds = %1025, %1035
  %1041 = phi i32 [ %1039, %1035 ], [ 0, %1025 ]
  %1042 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1043 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1042, i64 0, i32 1
  %1044 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1043, align 8
  %1045 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1044, i64 0, i32 1, i32 0, i32 0, i32 0
  %1046 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1045, align 8
  %1047 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1046, i64 0, i32 4
  %1048 = load i8, i8* %1047, align 1, !range !2
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1055, label %1050

1050:                                             ; preds = %1040
  %1051 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1046, i64 0, i32 3
  %1052 = load i8, i8* %1051, align 4, !range !2
  %1053 = zext i8 %1052 to i32
  %1054 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1046, i32 %1053) #10
  br label %1055

1055:                                             ; preds = %1040, %1050
  %1056 = phi i32 [ %1054, %1050 ], [ 0, %1040 ]
  call void @_ZN8spvtools3opt3CFG7AddEdgeEjj(%"class.spvtools::opt::CFG"* %846, i32 %1041, i32 %1056)
  %1057 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %345, align 8
  %1058 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1057, i64 0, i32 4
  %1059 = load i8, i8* %1058, align 1, !range !2
  %1060 = icmp eq i8 %1059, 0
  br i1 %1060, label %1066, label %1061

1061:                                             ; preds = %1055
  %1062 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1057, i64 0, i32 3
  %1063 = load i8, i8* %1062, align 4, !range !2
  %1064 = zext i8 %1063 to i32
  %1065 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1057, i32 %1064) #10
  br label %1066

1066:                                             ; preds = %1055, %1061
  %1067 = phi i32 [ %1065, %1061 ], [ 0, %1055 ]
  %1068 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1069 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1068, i64 0, i32 3
  %1070 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1069, align 8
  %1071 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1070, i64 0, i32 1, i32 0, i32 0, i32 0
  %1072 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1071, align 8
  %1073 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1072, i64 0, i32 4
  %1074 = load i8, i8* %1073, align 1, !range !2
  %1075 = icmp eq i8 %1074, 0
  br i1 %1075, label %1081, label %1076

1076:                                             ; preds = %1066
  %1077 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1072, i64 0, i32 3
  %1078 = load i8, i8* %1077, align 4, !range !2
  %1079 = zext i8 %1078 to i32
  %1080 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1072, i32 %1079) #10
  br label %1081

1081:                                             ; preds = %1066, %1076
  %1082 = phi i32 [ %1080, %1076 ], [ 0, %1066 ]
  call void @_ZN8spvtools3opt3CFG7AddEdgeEjj(%"class.spvtools::opt::CFG"* %846, i32 %1067, i32 %1082)
  %1083 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  %1084 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1083, i64 0, i32 11
  %1085 = load i32, i32* %1084, align 8
  %1086 = and i32 %1085, 1
  %1087 = icmp eq i32 %1086, 0
  br i1 %1087, label %1088, label %1112

1088:                                             ; preds = %1081
  %1089 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1083, i64 0, i32 4, i32 0, i32 0, i32 0
  %1090 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1089, align 8
  %1091 = call i8* @_Znwm(i64 104) #11
  %1092 = bitcast i8* %1091 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1093 = getelementptr inbounds i8, i8* %1091, i64 32
  %1094 = bitcast i8* %1093 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1091, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %1094, align 4
  %1095 = getelementptr inbounds i8, i8* %1091, i64 48
  %1096 = getelementptr inbounds i8, i8* %1091, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1095, i8 0, i64 16, i1 false) #10
  %1097 = bitcast i8* %1096 to i8**
  store i8* %1095, i8** %1097, align 8
  %1098 = getelementptr inbounds i8, i8* %1091, i64 64
  %1099 = getelementptr inbounds i8, i8* %1091, i64 96
  %1100 = bitcast i8* %1099 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1098, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %1100, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1092, %"class.spvtools::opt::Module"* %1090) #10
  %1101 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1083, i64 0, i32 6
  %1102 = ptrtoint i8* %1091 to i64
  %1103 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1101, i64 0, i32 0, i32 0, i32 0
  %1104 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1103, align 8
  %1105 = bitcast %"class.std::__1::unique_ptr.62"* %1101 to i64*
  store i64 %1102, i64* %1105, align 8
  %1106 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1104, null
  br i1 %1106, label %1109, label %1107

1107:                                             ; preds = %1088
  %1108 = bitcast %"class.std::__1::unique_ptr.62"* %1101 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1108, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1104) #10
  br label %1109

1109:                                             ; preds = %1107, %1088
  %1110 = load i32, i32* %1084, align 8
  %1111 = or i32 %1110, 1
  store i32 %1111, i32* %1084, align 8
  br label %1112

1112:                                             ; preds = %1081, %1109
  %1113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1083, i64 0, i32 6, i32 0, i32 0, i32 0
  %1114 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1113, align 8
  %1115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %197, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1116 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1115, align 8, !noalias !34
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1114, %"class.spvtools::opt::Instruction"* %1116) #10
  %1117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %193, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1118 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1117, align 8, !noalias !37
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1114, %"class.spvtools::opt::Instruction"* %1118) #10
  %1119 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1120 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1119, i64 0, i32 1
  %1121 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1120, align 8
  %1122 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %1121) #10
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1114, %"class.spvtools::opt::Instruction"* %1122) #10
  %1123 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %96, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %1124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1123, align 8, !noalias !40
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %1114, %"class.spvtools::opt::Instruction"* %1124) #10
  %1125 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  %1126 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  %1127 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %1125, %"class.spvtools::opt::Function"* %1126) #10
  %1128 = bitcast %"class.std::__1::vector.910"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1128) #10
  %1129 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %30, i64 0, i32 0, i32 0
  %1130 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %30, i64 0, i32 0, i32 1
  %1131 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %30, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1128, i8 0, i64 24, i1 false) #10
  %1132 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1133 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1132, i64 0, i32 7, i32 0, i32 0
  %1134 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1133, align 8
  %1135 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1132, i64 0, i32 7, i32 0, i32 1
  %1136 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1135, align 8
  %1137 = icmp eq %"class.spvtools::opt::Loop"** %1134, %1136
  br i1 %1137, label %1211, label %1138

1138:                                             ; preds = %1112
  %1139 = bitcast %"class.spvtools::opt::Loop"*** %1130 to i64*
  %1140 = bitcast %"class.std::__1::vector.910"* %30 to i64*
  %1141 = bitcast %"class.spvtools::opt::Loop"*** %1131 to i64*
  br label %1146

1142:                                             ; preds = %1204
  %1143 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1129, align 8
  %1144 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1130, align 8
  %1145 = icmp eq %"class.spvtools::opt::Loop"** %1143, %1144
  br i1 %1145, label %1211, label %1255

1146:                                             ; preds = %1207, %1138
  %1147 = phi i64 [ 0, %1138 ], [ %1210, %1207 ]
  %1148 = phi %"class.spvtools::opt::Loop"** [ null, %1138 ], [ %1209, %1207 ]
  %1149 = phi %"class.spvtools::opt::Loop"** [ null, %1138 ], [ %1208, %1207 ]
  %1150 = phi %"class.spvtools::opt::Loop"** [ %1134, %1138 ], [ %1205, %1207 ]
  %1151 = bitcast %"class.spvtools::opt::Loop"** %1150 to i64*
  %1152 = load i64, i64* %1151, align 8
  %1153 = icmp eq %"class.spvtools::opt::Loop"** %1149, %1148
  br i1 %1153, label %1158, label %1154

1154:                                             ; preds = %1146
  %1155 = bitcast %"class.spvtools::opt::Loop"** %1149 to i64*
  store i64 %1152, i64* %1155, align 8
  %1156 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1149, i64 1
  %1157 = ptrtoint %"class.spvtools::opt::Loop"** %1156 to i64
  store i64 %1157, i64* %1139, align 8
  br label %1204

1158:                                             ; preds = %1146
  %1159 = ptrtoint %"class.spvtools::opt::Loop"** %1148 to i64
  %1160 = load i64, i64* %1140, align 8
  %1161 = sub i64 %1159, %1160
  %1162 = ashr exact i64 %1161, 3
  %1163 = add nsw i64 %1162, 1
  %1164 = icmp ugt i64 %1163, 2305843009213693951
  br i1 %1164, label %1165, label %1167

1165:                                             ; preds = %1158
  %1166 = bitcast %"class.std::__1::vector.910"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1166) #12
  unreachable

1167:                                             ; preds = %1158
  %1168 = icmp ult i64 %1162, 1152921504606846975
  br i1 %1168, label %1169, label %1177

1169:                                             ; preds = %1167
  %1170 = ashr exact i64 %1161, 2
  %1171 = icmp ult i64 %1170, %1163
  %1172 = select i1 %1171, i64 %1163, i64 %1170
  %1173 = icmp eq i64 %1172, 0
  br i1 %1173, label %1182, label %1174

1174:                                             ; preds = %1169
  %1175 = icmp ugt i64 %1172, 2305843009213693951
  br i1 %1175, label %1176, label %1177

1176:                                             ; preds = %1174
  call void @abort() #12
  unreachable

1177:                                             ; preds = %1174, %1167
  %1178 = phi i64 [ %1172, %1174 ], [ 2305843009213693951, %1167 ]
  %1179 = shl i64 %1178, 3
  %1180 = call i8* @_Znwm(i64 %1179) #11
  %1181 = bitcast i8* %1180 to %"class.spvtools::opt::Loop"**
  br label %1182

1182:                                             ; preds = %1177, %1169
  %1183 = phi i64 [ %1178, %1177 ], [ 0, %1169 ]
  %1184 = phi %"class.spvtools::opt::Loop"** [ %1181, %1177 ], [ null, %1169 ]
  %1185 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1184, i64 %1162
  %1186 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1184, i64 %1183
  %1187 = ptrtoint %"class.spvtools::opt::Loop"** %1186 to i64
  %1188 = bitcast %"class.spvtools::opt::Loop"** %1185 to i64*
  store i64 %1152, i64* %1188, align 8
  %1189 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1185, i64 1
  %1190 = ptrtoint %"class.spvtools::opt::Loop"** %1189 to i64
  %1191 = sub i64 %1147, %1160
  %1192 = ashr exact i64 %1191, 3
  %1193 = sub nsw i64 0, %1192
  %1194 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1185, i64 %1193
  %1195 = ptrtoint %"class.spvtools::opt::Loop"** %1194 to i64
  %1196 = icmp sgt i64 %1191, 0
  br i1 %1196, label %1197, label %1200

1197:                                             ; preds = %1182
  %1198 = bitcast %"class.spvtools::opt::Loop"** %1194 to i8*
  %1199 = inttoptr i64 %1160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1198, i8* align 8 %1199, i64 %1191, i1 false) #10
  br label %1200

1200:                                             ; preds = %1197, %1182
  store i64 %1195, i64* %1140, align 8
  store i64 %1190, i64* %1139, align 8
  store i64 %1187, i64* %1141, align 8
  %1201 = icmp eq i64 %1160, 0
  br i1 %1201, label %1204, label %1202

1202:                                             ; preds = %1200
  %1203 = inttoptr i64 %1160 to i8*
  call void @_ZdlPv(i8* %1203) #11
  br label %1204

1204:                                             ; preds = %1154, %1200, %1202
  %1205 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1150, i64 1
  %1206 = icmp eq %"class.spvtools::opt::Loop"** %1205, %1136
  br i1 %1206, label %1142, label %1207

1207:                                             ; preds = %1204
  %1208 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1130, align 8
  %1209 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1131, align 8
  %1210 = ptrtoint %"class.spvtools::opt::Loop"** %1208 to i64
  br label %1146

1211:                                             ; preds = %1356, %1112, %1142
  %1212 = bitcast %"class.std::__1::unordered_set.917"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1212) #10
  %1213 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1214 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %31, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1215 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %31, i64 0, i32 0, i32 4, i64 0
  %1216 = bitcast i8* %1215 to i32*
  store i32 -1431655766, i32* %1216, align 4
  %1217 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1218 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %31, i64 0, i32 0
  %1219 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %31, i64 0, i32 0, i32 3
  %1220 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1217, i64 0, i32 8, i32 0, i32 3
  %1221 = bitcast %"class.std::__1::__compressed_pair.936"* %1220 to i32*
  %1222 = bitcast %"class.std::__1::__compressed_pair.936"* %1219 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1212, i8 0, i64 32, i1 false) #10
  %1223 = load i32, i32* %1221, align 8
  store i32 %1223, i32* %1222, align 8
  %1224 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1217, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1225 = load i64, i64* %1224, align 8
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* nonnull %1218, i64 %1225) #10
  %1226 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1217, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %1227 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1226, align 8
  %1228 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1227, null
  br i1 %1228, label %1239, label %1229

1229:                                             ; preds = %1211
  %1230 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %1227 to i64
  br label %1231

1231:                                             ; preds = %1231, %1229
  %1232 = phi i64 [ %1230, %1229 ], [ %1237, %1231 ]
  %1233 = inttoptr i64 %1232 to %"struct.std::__1::__hash_node.1195"*
  %1234 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %1233, i64 0, i32 2
  %1235 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* nonnull %1218, i32* dereferenceable(4) %1234, i32* dereferenceable(4) %1234) #10
  %1236 = inttoptr i64 %1232 to i64*
  %1237 = load i64, i64* %1236, align 8
  %1238 = icmp eq i64 %1237, 0
  br i1 %1238, label %1239, label %1231

1239:                                             ; preds = %1231, %1211
  %1240 = bitcast %"struct.std::__1::__hash_node_base.922"** %1214 to i64*
  %1241 = load i64, i64* %1240, align 8
  %1242 = icmp eq i64 %1241, 0
  br i1 %1242, label %1359, label %1243

1243:                                             ; preds = %1239
  %1244 = bitcast i32* %11 to i8*
  %1245 = bitcast i32* %12 to i8*
  %1246 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1247 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1248 = bitcast %"class.spvtools::opt::Loop"** %78 to i64*
  %1249 = bitcast i32* %15 to i8*
  %1250 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1127, i64 0, i32 2, i32 0
  %1251 = bitcast %"class.std::__1::tuple.1186"* %13 to i8*
  %1252 = getelementptr inbounds %"class.std::__1::tuple.1186", %"class.std::__1::tuple.1186"* %13, i64 0, i32 0, i32 0, i32 0
  %1253 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %14, i64 0, i32 0
  %1254 = bitcast i32* %18 to i8*
  br label %1410

1255:                                             ; preds = %1142, %1356
  %1256 = phi %"class.spvtools::opt::Loop"** [ %1357, %1356 ], [ %1143, %1142 ]
  %1257 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1256, align 8
  %1258 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1259 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1258, i64 0, i32 7, i32 0, i32 0
  %1260 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1259, align 8
  %1261 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1258, i64 0, i32 7, i32 0, i32 1
  %1262 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1261, align 8
  %1263 = icmp eq %"class.spvtools::opt::Loop"** %1260, %1262
  %1264 = ptrtoint %"class.spvtools::opt::Loop"** %1262 to i64
  br i1 %1263, label %1272, label %1265

1265:                                             ; preds = %1255, %1269
  %1266 = phi %"class.spvtools::opt::Loop"** [ %1270, %1269 ], [ %1260, %1255 ]
  %1267 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1266, align 8
  %1268 = icmp eq %"class.spvtools::opt::Loop"* %1267, %1257
  br i1 %1268, label %1272, label %1269

1269:                                             ; preds = %1265
  %1270 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1266, i64 1
  %1271 = icmp eq %"class.spvtools::opt::Loop"** %1270, %1262
  br i1 %1271, label %1272, label %1265

1272:                                             ; preds = %1269, %1265, %1255
  %1273 = phi %"class.spvtools::opt::Loop"** [ %1260, %1255 ], [ %1266, %1265 ], [ %1262, %1269 ]
  %1274 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1273, i64 1
  %1275 = ptrtoint %"class.spvtools::opt::Loop"** %1274 to i64
  %1276 = sub i64 %1264, %1275
  %1277 = ashr exact i64 %1276, 3
  %1278 = icmp eq i64 %1276, 0
  br i1 %1278, label %1282, label %1279

1279:                                             ; preds = %1272
  %1280 = bitcast %"class.spvtools::opt::Loop"** %1273 to i8*
  %1281 = bitcast %"class.spvtools::opt::Loop"** %1274 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1280, i8* align 8 %1281, i64 %1276, i1 false) #10
  br label %1282

1282:                                             ; preds = %1272, %1279
  %1283 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1273, i64 %1277
  store %"class.spvtools::opt::Loop"** %1283, %"class.spvtools::opt::Loop"*** %1261, align 8
  %1284 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1257, i64 0, i32 6
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %1284, align 8
  %1285 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1286 = ptrtoint %"class.spvtools::opt::Loop"* %1257 to i64
  %1287 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1285, i64 0, i32 7
  %1288 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1285, i64 0, i32 7, i32 0, i32 1
  %1289 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1288, align 8
  %1290 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1285, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %1291 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1290, align 8
  %1292 = icmp eq %"class.spvtools::opt::Loop"** %1289, %1291
  %1293 = ptrtoint %"class.spvtools::opt::Loop"** %1291 to i64
  br i1 %1292, label %1299, label %1294

1294:                                             ; preds = %1282
  %1295 = bitcast %"class.spvtools::opt::Loop"** %1289 to i64*
  store i64 %1286, i64* %1295, align 8
  %1296 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1289, i64 1
  %1297 = ptrtoint %"class.spvtools::opt::Loop"** %1296 to i64
  %1298 = bitcast %"class.spvtools::opt::Loop"*** %1288 to i64*
  store i64 %1297, i64* %1298, align 8
  br label %1356

1299:                                             ; preds = %1282
  %1300 = ptrtoint %"class.spvtools::opt::Loop"** %1289 to i64
  %1301 = bitcast %"class.spvtools::opt::Loop"*** %1288 to i64*
  %1302 = bitcast %"class.std::__1::vector.910"* %1287 to i64*
  %1303 = load i64, i64* %1302, align 8
  %1304 = sub i64 %1300, %1303
  %1305 = ashr exact i64 %1304, 3
  %1306 = add nsw i64 %1305, 1
  %1307 = icmp ugt i64 %1306, 2305843009213693951
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1299
  %1309 = bitcast %"class.std::__1::vector.910"* %1287 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1309) #12
  unreachable

1310:                                             ; preds = %1299
  %1311 = bitcast %"class.spvtools::opt::Loop"*** %1290 to i64*
  %1312 = sub i64 %1293, %1303
  %1313 = ashr exact i64 %1312, 3
  %1314 = icmp ult i64 %1313, 1152921504606846975
  br i1 %1314, label %1315, label %1323

1315:                                             ; preds = %1310
  %1316 = ashr exact i64 %1312, 2
  %1317 = icmp ult i64 %1316, %1306
  %1318 = select i1 %1317, i64 %1306, i64 %1316
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1328, label %1320

1320:                                             ; preds = %1315
  %1321 = icmp ugt i64 %1318, 2305843009213693951
  br i1 %1321, label %1322, label %1323

1322:                                             ; preds = %1320
  call void @abort() #12
  unreachable

1323:                                             ; preds = %1320, %1310
  %1324 = phi i64 [ %1318, %1320 ], [ 2305843009213693951, %1310 ]
  %1325 = shl i64 %1324, 3
  %1326 = call i8* @_Znwm(i64 %1325) #11
  %1327 = bitcast i8* %1326 to %"class.spvtools::opt::Loop"**
  br label %1328

1328:                                             ; preds = %1323, %1315
  %1329 = phi i64 [ %1324, %1323 ], [ 0, %1315 ]
  %1330 = phi %"class.spvtools::opt::Loop"** [ %1327, %1323 ], [ null, %1315 ]
  %1331 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1330, i64 %1305
  %1332 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1330, i64 %1329
  %1333 = ptrtoint %"class.spvtools::opt::Loop"** %1332 to i64
  %1334 = bitcast %"class.spvtools::opt::Loop"** %1331 to i64*
  store i64 %1286, i64* %1334, align 8
  %1335 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1331, i64 1
  %1336 = ptrtoint %"class.spvtools::opt::Loop"** %1335 to i64
  %1337 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %1287, i64 0, i32 0, i32 0
  %1338 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1337, align 8
  %1339 = load i64, i64* %1301, align 8
  %1340 = ptrtoint %"class.spvtools::opt::Loop"** %1338 to i64
  %1341 = sub i64 %1339, %1340
  %1342 = ashr exact i64 %1341, 3
  %1343 = sub nsw i64 0, %1342
  %1344 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1331, i64 %1343
  %1345 = ptrtoint %"class.spvtools::opt::Loop"** %1344 to i64
  %1346 = icmp sgt i64 %1341, 0
  br i1 %1346, label %1347, label %1351

1347:                                             ; preds = %1328
  %1348 = bitcast %"class.spvtools::opt::Loop"** %1344 to i8*
  %1349 = bitcast %"class.spvtools::opt::Loop"** %1338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1348, i8* align 8 %1349, i64 %1341, i1 false) #10
  %1350 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1337, align 8
  br label %1351

1351:                                             ; preds = %1347, %1328
  %1352 = phi %"class.spvtools::opt::Loop"** [ %1338, %1328 ], [ %1350, %1347 ]
  store i64 %1345, i64* %1302, align 8
  store i64 %1336, i64* %1301, align 8
  store i64 %1333, i64* %1311, align 8
  %1353 = icmp eq %"class.spvtools::opt::Loop"** %1352, null
  br i1 %1353, label %1356, label %1354

1354:                                             ; preds = %1351
  %1355 = bitcast %"class.spvtools::opt::Loop"** %1352 to i8*
  call void @_ZdlPv(i8* %1355) #11
  br label %1356

1356:                                             ; preds = %1294, %1351, %1354
  store %"class.spvtools::opt::Loop"* %1285, %"class.spvtools::opt::Loop"** %1284, align 8
  %1357 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1256, i64 1
  %1358 = icmp eq %"class.spvtools::opt::Loop"** %1357, %1144
  br i1 %1358, label %1211, label %1255

1359:                                             ; preds = %1568, %1239
  %1360 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1361 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1360, i64 0, i32 4
  %1362 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1361, align 8
  %1363 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1362, i64 0, i32 1, i32 0, i32 0, i32 0
  %1364 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1363, align 8
  %1365 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1364, i64 0, i32 4
  %1366 = load i8, i8* %1365, align 1, !range !2
  %1367 = icmp eq i8 %1366, 0
  br i1 %1367, label %1373, label %1368

1368:                                             ; preds = %1359
  %1369 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1364, i64 0, i32 3
  %1370 = load i8, i8* %1369, align 4, !range !2
  %1371 = zext i8 %1370 to i32
  %1372 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1364, i32 %1371) #10
  br label %1373

1373:                                             ; preds = %1359, %1368
  %1374 = phi i32 [ %1372, %1368 ], [ 0, %1359 ]
  %1375 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1375)
  store i32 %1374, i32* %9, align 4
  %1376 = icmp eq %"class.spvtools::opt::Loop"* %1360, null
  br i1 %1376, label %1384, label %1377

1377:                                             ; preds = %1373, %1377
  %1378 = phi %"class.spvtools::opt::Loop"* [ %1382, %1377 ], [ %1360, %1373 ]
  %1379 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1378, i64 0, i32 8, i32 0
  %1380 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"* %1379, i32* nonnull dereferenceable(4) %9) #10
  %1381 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1378, i64 0, i32 6
  %1382 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1381, align 8
  %1383 = icmp eq %"class.spvtools::opt::Loop"* %1382, null
  br i1 %1383, label %1384, label %1377

1384:                                             ; preds = %1377, %1373
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1375)
  %1385 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1386 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1385, i64 0, i32 4
  %1387 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1386, align 8
  %1388 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1387, i64 0, i32 1, i32 0, i32 0, i32 0
  %1389 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1388, align 8
  %1390 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1389, i64 0, i32 4
  %1391 = load i8, i8* %1390, align 1, !range !2
  %1392 = icmp eq i8 %1391, 0
  br i1 %1392, label %1398, label %1393

1393:                                             ; preds = %1384
  %1394 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1389, i64 0, i32 3
  %1395 = load i8, i8* %1394, align 4, !range !2
  %1396 = zext i8 %1395 to i32
  %1397 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1389, i32 %1396) #10
  br label %1398

1398:                                             ; preds = %1384, %1393
  %1399 = phi i32 [ %1397, %1393 ], [ 0, %1384 ]
  %1400 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1400)
  store i32 %1399, i32* %10, align 4
  %1401 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1127, i64 0, i32 2, i32 0
  %1402 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1038"* %1401, i32* nonnull dereferenceable(4) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1400)
  %1403 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1404 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1403, i64 0, i32 3
  %1405 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1404, align 8
  %1406 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1407 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1406, i64 0, i32 4
  %1408 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1407, align 8
  %1409 = icmp eq %"class.spvtools::opt::BasicBlock"* %1405, %1408
  br i1 %1409, label %1614, label %1572

1410:                                             ; preds = %1243, %1568
  %1411 = phi i64 [ %1241, %1243 ], [ %1570, %1568 ]
  %1412 = inttoptr i64 %1411 to %"struct.std::__1::__hash_node.1195"*
  %1413 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %1412, i64 0, i32 2
  %1414 = load i32, i32* %1413, align 4
  %1415 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1244)
  store i32 %1414, i32* %11, align 4
  %1416 = icmp eq %"class.spvtools::opt::Loop"* %1415, null
  br i1 %1416, label %1424, label %1417

1417:                                             ; preds = %1410, %1417
  %1418 = phi %"class.spvtools::opt::Loop"* [ %1422, %1417 ], [ %1415, %1410 ]
  %1419 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1418, i64 0, i32 8, i32 0
  %1420 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"* %1419, i32* nonnull dereferenceable(4) %11) #10
  %1421 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1418, i64 0, i32 6
  %1422 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1421, align 8
  %1423 = icmp eq %"class.spvtools::opt::Loop"* %1422, null
  br i1 %1423, label %1424, label %1417

1424:                                             ; preds = %1417, %1410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1244)
  %1425 = icmp eq i32 %1414, %49
  %1426 = icmp eq i32 %1414, %62
  %1427 = or i1 %1425, %1426
  %1428 = icmp eq i32 %1414, %77
  %1429 = or i1 %1428, %1427
  br i1 %1429, label %1430, label %1432

1430:                                             ; preds = %1424
  %1431 = zext i32 %1414 to i64
  br label %1507

1432:                                             ; preds = %1424
  %1433 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1245)
  store i32 %1414, i32* %12, align 4
  %1434 = icmp eq %"class.spvtools::opt::Loop"* %1433, null
  br i1 %1434, label %1442, label %1435

1435:                                             ; preds = %1432, %1435
  %1436 = phi %"class.spvtools::opt::Loop"* [ %1440, %1435 ], [ %1433, %1432 ]
  %1437 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1436, i64 0, i32 8, i32 0
  %1438 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %1437, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %12) #10
  %1439 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1436, i64 0, i32 6
  %1440 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1439, align 8
  %1441 = icmp eq %"class.spvtools::opt::Loop"* %1440, null
  br i1 %1441, label %1442, label %1435

1442:                                             ; preds = %1435, %1432
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1245)
  %1443 = zext i32 %1414 to i64
  %1444 = load i64, i64* %1246, align 8
  %1445 = icmp eq i64 %1444, 0
  br i1 %1445, label %1497, label %1446

1446:                                             ; preds = %1442
  %1447 = call i64 @llvm.ctpop.i64(i64 %1444) #10, !range !3
  %1448 = icmp ugt i64 %1447, 1
  br i1 %1448, label %1452, label %1449

1449:                                             ; preds = %1446
  %1450 = add i64 %1444, 4294967295
  %1451 = and i64 %1450, %1443
  br label %1456

1452:                                             ; preds = %1446
  %1453 = icmp ugt i64 %1444, %1443
  br i1 %1453, label %1456, label %1454

1454:                                             ; preds = %1452
  %1455 = urem i64 %1443, %1444
  br label %1456

1456:                                             ; preds = %1454, %1452, %1449
  %1457 = phi i64 [ %1451, %1449 ], [ %1455, %1454 ], [ %1443, %1452 ]
  %1458 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %1247, align 8
  %1459 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1458, i64 %1457
  %1460 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1459, align 8
  %1461 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1460, null
  br i1 %1461, label %1497, label %1462

1462:                                             ; preds = %1456
  %1463 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1460, i64 0, i32 0
  %1464 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1463, align 8
  %1465 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1464, null
  br i1 %1465, label %1497, label %1466

1466:                                             ; preds = %1462
  %1467 = add i64 %1444, -1
  br label %1468

1468:                                             ; preds = %1489, %1466
  %1469 = phi %"struct.std::__1::__hash_node_base.1042"* [ %1464, %1466 ], [ %1491, %1489 ]
  %1470 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1469, i64 1
  %1471 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1470 to i64*
  %1472 = load i64, i64* %1471, align 8
  %1473 = icmp eq i64 %1472, %1443
  br i1 %1473, label %1484, label %1474

1474:                                             ; preds = %1468
  br i1 %1448, label %1477, label %1475

1475:                                             ; preds = %1474
  %1476 = and i64 %1472, %1467
  br label %1481

1477:                                             ; preds = %1474
  %1478 = icmp ult i64 %1472, %1444
  br i1 %1478, label %1481, label %1479

1479:                                             ; preds = %1477
  %1480 = urem i64 %1472, %1444
  br label %1481

1481:                                             ; preds = %1479, %1477, %1475
  %1482 = phi i64 [ %1476, %1475 ], [ %1480, %1479 ], [ %1472, %1477 ]
  %1483 = icmp eq i64 %1482, %1457
  br i1 %1483, label %1489, label %1497

1484:                                             ; preds = %1468
  %1485 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1469, i64 2
  %1486 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1485 to i32*
  %1487 = load i32, i32* %1486, align 4
  %1488 = icmp eq i32 %1487, %1414
  br i1 %1488, label %1493, label %1489

1489:                                             ; preds = %1484, %1481
  %1490 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1469, i64 0, i32 0
  %1491 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1490, align 8
  %1492 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1491, null
  br i1 %1492, label %1497, label %1468

1493:                                             ; preds = %1484
  %1494 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1469, i64 3
  %1495 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1494 to %"class.spvtools::opt::Loop"**
  %1496 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1495, align 8
  br label %1497

1497:                                             ; preds = %1481, %1489, %1442, %1456, %1462, %1493
  %1498 = phi %"class.spvtools::opt::Loop"* [ %1496, %1493 ], [ null, %1456 ], [ null, %1442 ], [ null, %1462 ], [ null, %1489 ], [ null, %1481 ]
  %1499 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1500 = icmp eq %"class.spvtools::opt::Loop"* %1498, %1499
  br i1 %1500, label %1501, label %1507

1501:                                             ; preds = %1497
  %1502 = load i64, i64* %1248, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1249)
  store i32 %1414, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1251) #10
  store i32* %15, i32** %1252, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1253) #10
  %1503 = call { %"struct.std::__1::__hash_node_base.1042"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1038"* %1250, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1186"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1122"* nonnull dereferenceable(1) %14) #10
  %1504 = extractvalue { %"struct.std::__1::__hash_node_base.1042"*, i8 } %1503, 0
  %1505 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1504, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1253) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1251) #10
  %1506 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1505 to i64*
  store i64 %1502, i64* %1506, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1249)
  br label %1507

1507:                                             ; preds = %1430, %1497, %1501
  %1508 = phi i64 [ %1431, %1430 ], [ %1443, %1497 ], [ %1443, %1501 ]
  %1509 = load i64, i64* %1246, align 8
  %1510 = icmp eq i64 %1509, 0
  br i1 %1510, label %1562, label %1511

1511:                                             ; preds = %1507
  %1512 = call i64 @llvm.ctpop.i64(i64 %1509) #10, !range !3
  %1513 = icmp ugt i64 %1512, 1
  br i1 %1513, label %1517, label %1514

1514:                                             ; preds = %1511
  %1515 = add i64 %1509, 4294967295
  %1516 = and i64 %1515, %1508
  br label %1521

1517:                                             ; preds = %1511
  %1518 = icmp ugt i64 %1509, %1508
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1517
  %1520 = urem i64 %1508, %1509
  br label %1521

1521:                                             ; preds = %1519, %1517, %1514
  %1522 = phi i64 [ %1516, %1514 ], [ %1520, %1519 ], [ %1508, %1517 ]
  %1523 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %1247, align 8
  %1524 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1523, i64 %1522
  %1525 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1524, align 8
  %1526 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1525, null
  br i1 %1526, label %1562, label %1527

1527:                                             ; preds = %1521
  %1528 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1525, i64 0, i32 0
  %1529 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1528, align 8
  %1530 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1529, null
  br i1 %1530, label %1562, label %1531

1531:                                             ; preds = %1527
  %1532 = add i64 %1509, -1
  br label %1533

1533:                                             ; preds = %1554, %1531
  %1534 = phi %"struct.std::__1::__hash_node_base.1042"* [ %1529, %1531 ], [ %1556, %1554 ]
  %1535 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1534, i64 1
  %1536 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1535 to i64*
  %1537 = load i64, i64* %1536, align 8
  %1538 = icmp eq i64 %1537, %1508
  br i1 %1538, label %1549, label %1539

1539:                                             ; preds = %1533
  br i1 %1513, label %1542, label %1540

1540:                                             ; preds = %1539
  %1541 = and i64 %1537, %1532
  br label %1546

1542:                                             ; preds = %1539
  %1543 = icmp ult i64 %1537, %1509
  br i1 %1543, label %1546, label %1544

1544:                                             ; preds = %1542
  %1545 = urem i64 %1537, %1509
  br label %1546

1546:                                             ; preds = %1544, %1542, %1540
  %1547 = phi i64 [ %1541, %1540 ], [ %1545, %1544 ], [ %1537, %1542 ]
  %1548 = icmp eq i64 %1547, %1522
  br i1 %1548, label %1554, label %1562

1549:                                             ; preds = %1533
  %1550 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1534, i64 2
  %1551 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1550 to i32*
  %1552 = load i32, i32* %1551, align 4
  %1553 = icmp eq i32 %1552, %1414
  br i1 %1553, label %1558, label %1554

1554:                                             ; preds = %1549, %1546
  %1555 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1534, i64 0, i32 0
  %1556 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %1555, align 8
  %1557 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %1556, null
  br i1 %1557, label %1562, label %1533

1558:                                             ; preds = %1549
  %1559 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %1534, i64 3
  %1560 = bitcast %"struct.std::__1::__hash_node_base.1042"* %1559 to %"class.spvtools::opt::Loop"**
  %1561 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1560, align 8
  br label %1562

1562:                                             ; preds = %1546, %1554, %1507, %1521, %1527, %1558
  %1563 = phi %"class.spvtools::opt::Loop"* [ %1561, %1558 ], [ null, %1521 ], [ null, %1507 ], [ null, %1527 ], [ null, %1554 ], [ null, %1546 ]
  %1564 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1565 = icmp eq %"class.spvtools::opt::Loop"* %1563, %1564
  br i1 %1565, label %1566, label %1568

1566:                                             ; preds = %1562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1254)
  store i32 %1414, i32* %18, align 4
  %1567 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1038"* %1250, i32* nonnull dereferenceable(4) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1254)
  br label %1568

1568:                                             ; preds = %1566, %1562
  %1569 = inttoptr i64 %1411 to i64*
  %1570 = load i64, i64* %1569, align 8
  %1571 = icmp eq i64 %1570, 0
  br i1 %1571, label %1359, label %1410

1572:                                             ; preds = %1398
  %1573 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1405, i64 0, i32 1, i32 0, i32 0, i32 0
  %1574 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1573, align 8
  %1575 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1574, i64 0, i32 4
  %1576 = load i8, i8* %1575, align 1, !range !2
  %1577 = icmp eq i8 %1576, 0
  br i1 %1577, label %1583, label %1578

1578:                                             ; preds = %1572
  %1579 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1574, i64 0, i32 3
  %1580 = load i8, i8* %1579, align 4, !range !2
  %1581 = zext i8 %1580 to i32
  %1582 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1574, i32 %1581) #10
  br label %1583

1583:                                             ; preds = %1572, %1578
  %1584 = phi i32 [ %1582, %1578 ], [ 0, %1572 ]
  %1585 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1585)
  store i32 %1584, i32* %19, align 4
  %1586 = icmp eq %"class.spvtools::opt::Loop"* %1403, null
  br i1 %1586, label %1594, label %1587

1587:                                             ; preds = %1583, %1587
  %1588 = phi %"class.spvtools::opt::Loop"* [ %1592, %1587 ], [ %1403, %1583 ]
  %1589 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1588, i64 0, i32 8, i32 0
  %1590 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"* %1589, i32* nonnull dereferenceable(4) %19) #10
  %1591 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1588, i64 0, i32 6
  %1592 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1591, align 8
  %1593 = icmp eq %"class.spvtools::opt::Loop"* %1592, null
  br i1 %1593, label %1594, label %1587

1594:                                             ; preds = %1587, %1583
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1585)
  %1595 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1596 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1595, i64 0, i32 3
  %1597 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1596, align 8
  %1598 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1597, i64 0, i32 1, i32 0, i32 0, i32 0
  %1599 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1598, align 8
  %1600 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1599, i64 0, i32 4
  %1601 = load i8, i8* %1600, align 1, !range !2
  %1602 = icmp eq i8 %1601, 0
  br i1 %1602, label %1608, label %1603

1603:                                             ; preds = %1594
  %1604 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1599, i64 0, i32 3
  %1605 = load i8, i8* %1604, align 4, !range !2
  %1606 = zext i8 %1605 to i32
  %1607 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1599, i32 %1606) #10
  br label %1608

1608:                                             ; preds = %1594, %1603
  %1609 = phi i32 [ %1607, %1603 ], [ 0, %1594 ]
  %1610 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1610)
  store i32 %1609, i32* %20, align 4
  %1611 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1038"* %1401, i32* nonnull dereferenceable(4) %20) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1610)
  %1612 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %78, align 8
  %1613 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  br label %1614

1614:                                             ; preds = %1398, %1608
  %1615 = phi %"class.spvtools::opt::Loop"* [ %1406, %1398 ], [ %1613, %1608 ]
  %1616 = phi %"class.spvtools::opt::Loop"* [ %1403, %1398 ], [ %1612, %1608 ]
  %1617 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1615, i64 0, i32 3
  %1618 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1617, align 8
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1616, %"class.spvtools::opt::BasicBlock"* %1618) #10
  %1619 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %1620 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1619, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %1621 = load i64, i64* %1620, align 8
  %1622 = icmp eq i64 %1621, 0
  br i1 %1622, label %1674, label %1623

1623:                                             ; preds = %1614
  %1624 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1619, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %1625 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1624, align 8
  %1626 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1625, null
  br i1 %1626, label %1633, label %1627

1627:                                             ; preds = %1623, %1627
  %1628 = phi %"struct.std::__1::__hash_node_base.922"* [ %1630, %1627 ], [ %1625, %1623 ]
  %1629 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %1628, i64 0, i32 0
  %1630 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1629, align 8
  %1631 = bitcast %"struct.std::__1::__hash_node_base.922"* %1628 to i8*
  call void @_ZdlPv(i8* %1631) #11
  %1632 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1630, null
  br i1 %1632, label %1633, label %1627

1633:                                             ; preds = %1627, %1623
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1624, align 8
  %1634 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1619, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1635 = load i64, i64* %1634, align 8
  %1636 = icmp eq i64 %1635, 0
  br i1 %1636, label %1655, label %1637

1637:                                             ; preds = %1633
  %1638 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1619, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %1639 = add i64 %1635, -1
  %1640 = and i64 %1635, 3
  %1641 = icmp ult i64 %1639, 3
  br i1 %1641, label %1644, label %1642

1642:                                             ; preds = %1637
  %1643 = sub i64 %1635, %1640
  br label %1657

1644:                                             ; preds = %1657, %1637
  %1645 = phi i64 [ 0, %1637 ], [ %1671, %1657 ]
  %1646 = icmp eq i64 %1640, 0
  br i1 %1646, label %1655, label %1647

1647:                                             ; preds = %1644, %1647
  %1648 = phi i64 [ %1652, %1647 ], [ %1645, %1644 ]
  %1649 = phi i64 [ %1653, %1647 ], [ %1640, %1644 ]
  %1650 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1638, align 8
  %1651 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1650, i64 %1648
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1651, align 8
  %1652 = add nuw i64 %1648, 1
  %1653 = add i64 %1649, -1
  %1654 = icmp eq i64 %1653, 0
  br i1 %1654, label %1655, label %1647, !llvm.loop !43

1655:                                             ; preds = %1644, %1647, %1633
  store i64 0, i64* %1620, align 8
  %1656 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  br label %1674

1657:                                             ; preds = %1657, %1642
  %1658 = phi i64 [ 0, %1642 ], [ %1671, %1657 ]
  %1659 = phi i64 [ %1643, %1642 ], [ %1672, %1657 ]
  %1660 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1638, align 8
  %1661 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1660, i64 %1658
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1661, align 8
  %1662 = or i64 %1658, 1
  %1663 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1638, align 8
  %1664 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1663, i64 %1662
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1664, align 8
  %1665 = or i64 %1658, 2
  %1666 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1638, align 8
  %1667 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1666, i64 %1665
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1667, align 8
  %1668 = or i64 %1658, 3
  %1669 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1638, align 8
  %1670 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1669, i64 %1668
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %1670, align 8
  %1671 = add nuw i64 %1658, 4
  %1672 = add i64 %1659, -4
  %1673 = icmp eq i64 %1672, 0
  br i1 %1673, label %1644, label %1657

1674:                                             ; preds = %1614, %1655
  %1675 = phi %"class.spvtools::opt::Loop"* [ %1619, %1614 ], [ %1656, %1655 ]
  call void @_ZN8spvtools3opt14LoopDescriptor10RemoveLoopEPNS0_4LoopE(%"class.spvtools::opt::LoopDescriptor"* %1127, %"class.spvtools::opt::Loop"* %1675) #10
  %1676 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %742, align 8
  %1677 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %743, align 8
  %1678 = icmp eq %"class.spvtools::opt::Instruction"** %1676, %1677
  br i1 %1678, label %1679, label %1788

1679:                                             ; preds = %1788, %1674
  %1680 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %97, align 8
  %1681 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1680, i64 0, i32 3, i32 0, i32 0
  %1682 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1681, align 8
  %1683 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1680, i64 0, i32 3, i32 0, i32 1
  %1684 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1683, align 8
  %1685 = icmp eq %"class.std::__1::unique_ptr.40"* %1682, %1684
  br i1 %1685, label %1700, label %1686

1686:                                             ; preds = %1679, %1695
  %1687 = phi %"class.std::__1::unique_ptr.40"* [ %1696, %1695 ], [ %1682, %1679 ]
  %1688 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1687, i64 0, i32 0, i32 0, i32 0
  %1689 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1688, align 8
  %1690 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1689, i64 0, i32 1, i32 0, i32 0, i32 0
  %1691 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1690, align 8
  %1692 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1691, i64 0, i32 2
  %1693 = load i32, i32* %1692, align 8
  %1694 = icmp eq i32 %1693, 0
  br i1 %1694, label %1700, label %1695

1695:                                             ; preds = %1686
  %1696 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1687, i64 1
  %1697 = icmp eq %"class.std::__1::unique_ptr.40"* %1696, %1684
  br i1 %1697, label %1698, label %1686

1698:                                             ; preds = %1695
  %1699 = ptrtoint %"class.std::__1::unique_ptr.40"* %1684 to i64
  br label %1735

1700:                                             ; preds = %1686, %1679
  %1701 = phi %"class.std::__1::unique_ptr.40"* [ %1682, %1679 ], [ %1687, %1686 ]
  %1702 = ptrtoint %"class.std::__1::unique_ptr.40"* %1701 to i64
  %1703 = icmp eq %"class.std::__1::unique_ptr.40"* %1701, %1684
  br i1 %1703, label %1735, label %1704

1704:                                             ; preds = %1700
  %1705 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1701, i64 1
  %1706 = icmp eq %"class.std::__1::unique_ptr.40"* %1705, %1684
  br i1 %1706, label %1735, label %1707

1707:                                             ; preds = %1704, %1729
  %1708 = phi %"class.std::__1::unique_ptr.40"* [ %1731, %1729 ], [ %1705, %1704 ]
  %1709 = phi i64 [ %1730, %1729 ], [ %1702, %1704 ]
  %1710 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1708, i64 0, i32 0, i32 0, i32 0
  %1711 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1710, align 8
  %1712 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1711, i64 0, i32 1, i32 0, i32 0, i32 0
  %1713 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1712, align 8
  %1714 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1713, i64 0, i32 2
  %1715 = load i32, i32* %1714, align 8
  %1716 = icmp eq i32 %1715, 0
  br i1 %1716, label %1729, label %1717

1717:                                             ; preds = %1707
  %1718 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1711 to i64
  %1719 = inttoptr i64 %1709 to %"class.std::__1::unique_ptr.40"*
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %1710, align 8
  %1720 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1719, i64 0, i32 0, i32 0, i32 0
  %1721 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1720, align 8
  %1722 = inttoptr i64 %1709 to i64*
  store i64 %1718, i64* %1722, align 8
  %1723 = icmp eq %"class.spvtools::opt::BasicBlock"* %1721, null
  br i1 %1723, label %1726, label %1724

1724:                                             ; preds = %1717
  %1725 = inttoptr i64 %1709 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %1725, %"class.spvtools::opt::BasicBlock"* nonnull %1721) #10
  br label %1726

1726:                                             ; preds = %1724, %1717
  %1727 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1719, i64 1
  %1728 = ptrtoint %"class.std::__1::unique_ptr.40"* %1727 to i64
  br label %1729

1729:                                             ; preds = %1726, %1707
  %1730 = phi i64 [ %1709, %1707 ], [ %1728, %1726 ]
  %1731 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1708, i64 1
  %1732 = icmp eq %"class.std::__1::unique_ptr.40"* %1731, %1684
  br i1 %1732, label %1733, label %1707

1733:                                             ; preds = %1729
  %1734 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1683, align 8
  br label %1735

1735:                                             ; preds = %1733, %1704, %1700, %1698
  %1736 = phi %"class.std::__1::unique_ptr.40"* [ %1684, %1700 ], [ %1684, %1698 ], [ %1684, %1704 ], [ %1734, %1733 ]
  %1737 = phi i64 [ %1702, %1700 ], [ %1699, %1698 ], [ %1702, %1704 ], [ %1730, %1733 ]
  %1738 = inttoptr i64 %1737 to %"class.std::__1::unique_ptr.40"*
  %1739 = icmp eq %"class.std::__1::unique_ptr.40"* %1736, %1738
  br i1 %1739, label %1751, label %1740

1740:                                             ; preds = %1735, %1748
  %1741 = phi %"class.std::__1::unique_ptr.40"* [ %1742, %1748 ], [ %1736, %1735 ]
  %1742 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1741, i64 -1
  %1743 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1742, i64 0, i32 0, i32 0, i32 0
  %1744 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1743, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %1743, align 8
  %1745 = icmp eq %"class.spvtools::opt::BasicBlock"* %1744, null
  br i1 %1745, label %1748, label %1746

1746:                                             ; preds = %1740
  %1747 = bitcast %"class.std::__1::unique_ptr.40"* %1742 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %1747, %"class.spvtools::opt::BasicBlock"* nonnull %1744) #10
  br label %1748

1748:                                             ; preds = %1746, %1740
  %1749 = icmp eq %"class.std::__1::unique_ptr.40"* %1742, %1738
  br i1 %1749, label %1750, label %1740

1750:                                             ; preds = %1748
  store %"class.std::__1::unique_ptr.40"* %1738, %"class.std::__1::unique_ptr.40"** %1683, align 8
  br label %1751

1751:                                             ; preds = %1735, %1750
  %1752 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %1752, i32 83) #10
  %1753 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1214, align 8
  %1754 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1753, null
  br i1 %1754, label %1761, label %1755

1755:                                             ; preds = %1751, %1755
  %1756 = phi %"struct.std::__1::__hash_node_base.922"* [ %1758, %1755 ], [ %1753, %1751 ]
  %1757 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %1756, i64 0, i32 0
  %1758 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %1757, align 8
  %1759 = bitcast %"struct.std::__1::__hash_node_base.922"* %1756 to i8*
  call void @_ZdlPv(i8* %1759) #11
  %1760 = icmp eq %"struct.std::__1::__hash_node_base.922"* %1758, null
  br i1 %1760, label %1761, label %1755

1761:                                             ; preds = %1755, %1751
  %1762 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %1213, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %1213, align 8
  %1763 = icmp eq %"struct.std::__1::__hash_node_base.922"** %1762, null
  br i1 %1763, label %1766, label %1764

1764:                                             ; preds = %1761
  %1765 = bitcast %"struct.std::__1::__hash_node_base.922"** %1762 to i8*
  call void @_ZdlPv(i8* %1765) #11
  br label %1766

1766:                                             ; preds = %1761, %1764
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1212) #10
  %1767 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %1129, align 8
  %1768 = icmp eq %"class.spvtools::opt::Loop"** %1767, null
  br i1 %1768, label %1773, label %1769

1769:                                             ; preds = %1766
  %1770 = ptrtoint %"class.spvtools::opt::Loop"** %1767 to i64
  %1771 = bitcast %"class.spvtools::opt::Loop"*** %1130 to i64*
  store i64 %1770, i64* %1771, align 8
  %1772 = bitcast %"class.spvtools::opt::Loop"** %1767 to i8*
  call void @_ZdlPv(i8* %1772) #11
  br label %1773

1773:                                             ; preds = %1766, %1769
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1128) #10
  %1774 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %742, align 8
  %1775 = icmp eq %"class.spvtools::opt::Instruction"** %1774, null
  br i1 %1775, label %1780, label %1776

1776:                                             ; preds = %1773
  %1777 = ptrtoint %"class.spvtools::opt::Instruction"** %1774 to i64
  %1778 = bitcast %"class.spvtools::opt::Instruction"*** %743 to i64*
  store i64 %1777, i64* %1778, align 8
  %1779 = bitcast %"class.spvtools::opt::Instruction"** %1774 to i8*
  call void @_ZdlPv(i8* %1779) #11
  br label %1780

1780:                                             ; preds = %1773, %1776
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %741) #10
  %1781 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %390, align 8
  %1782 = icmp eq %"class.spvtools::opt::Instruction"** %1781, null
  br i1 %1782, label %1787, label %1783

1783:                                             ; preds = %1780
  %1784 = ptrtoint %"class.spvtools::opt::Instruction"** %1781 to i64
  %1785 = bitcast %"class.spvtools::opt::Instruction"*** %391 to i64*
  store i64 %1784, i64* %1785, align 8
  %1786 = bitcast %"class.spvtools::opt::Instruction"** %1781 to i8*
  call void @_ZdlPv(i8* %1786) #11
  br label %1787

1787:                                             ; preds = %1780, %1783
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %389) #10
  ret void

1788:                                             ; preds = %1674, %1788
  %1789 = phi %"class.spvtools::opt::Instruction"** [ %1793, %1788 ], [ %1676, %1674 ]
  %1790 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1789, align 8
  %1791 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %542, align 8
  %1792 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1791, %"class.spvtools::opt::Instruction"* %1790) #10
  %1793 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1789, i64 1
  %1794 = icmp eq %"class.spvtools::opt::Instruction"** %1793, %1677
  br i1 %1794, label %1679, label %1788
}

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1024"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8Function21MoveBasicBlockToAfterEjPNS0_10BasicBlockE(%"class.spvtools::opt::Function"*, i32, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.40", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %10
  br i1 %11, label %32, label %12

12:                                               ; preds = %3, %29
  %13 = phi %"class.std::__1::unique_ptr.40"* [ %30, %29 ], [ %8, %3 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %17, i32 %24) #10
  br label %26

26:                                               ; preds = %21, %12
  %27 = phi i32 [ %25, %21 ], [ 0, %12 ]
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.40"* %30, %10
  br i1 %31, label %32, label %12

32:                                               ; preds = %26, %29, %3
  %33 = phi %"class.std::__1::unique_ptr.40"* [ %8, %3 ], [ %10, %29 ], [ %13, %26 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %33 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %34, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %39 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.40"* %38, %39
  br i1 %40, label %49, label %41

41:                                               ; preds = %32, %46
  %42 = phi %"class.std::__1::unique_ptr.40"* [ %47, %46 ], [ %38, %32 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %43, align 8
  %45 = icmp eq %"class.spvtools::opt::BasicBlock"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %42, i64 1
  %48 = icmp eq %"class.std::__1::unique_ptr.40"* %47, %39
  br i1 %48, label %49, label %41

49:                                               ; preds = %41, %46, %32
  %50 = phi %"class.std::__1::unique_ptr.40"* [ %38, %32 ], [ %42, %41 ], [ %39, %46 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %50, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.40"* %51, %39
  br i1 %52, label %72, label %53

53:                                               ; preds = %49, %65
  %54 = phi %"class.std::__1::unique_ptr.40"* [ %67, %65 ], [ %50, %49 ]
  %55 = phi %"class.std::__1::unique_ptr.40"* [ %66, %65 ], [ %51, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.40"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %56, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %54, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %54 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %"class.spvtools::opt::BasicBlock"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = bitcast %"class.std::__1::unique_ptr.40"* %54 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %64, %"class.spvtools::opt::BasicBlock"* nonnull %60) #10
  br label %65

65:                                               ; preds = %63, %53
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %55, i64 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %54, i64 1
  %68 = icmp eq %"class.std::__1::unique_ptr.40"* %66, %39
  br i1 %68, label %69, label %53

69:                                               ; preds = %65
  %70 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %71 = icmp eq %"class.std::__1::unique_ptr.40"* %70, %67
  br i1 %71, label %85, label %72

72:                                               ; preds = %69, %49
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %67, %69 ], [ %50, %49 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %70, %69 ], [ %39, %49 ]
  br label %75

75:                                               ; preds = %83, %72
  %76 = phi %"class.std::__1::unique_ptr.40"* [ %77, %83 ], [ %74, %72 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %78, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8
  %80 = icmp eq %"class.spvtools::opt::BasicBlock"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %77 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %82, %"class.spvtools::opt::BasicBlock"* nonnull %79) #10
  br label %83

83:                                               ; preds = %81, %75
  %84 = icmp eq %"class.std::__1::unique_ptr.40"* %77, %73
  br i1 %84, label %85, label %75

85:                                               ; preds = %83, %69
  %86 = phi %"class.std::__1::unique_ptr.40"* [ %67, %69 ], [ %73, %83 ]
  store %"class.std::__1::unique_ptr.40"* %86, %"class.std::__1::unique_ptr.40"** %9, align 8
  %87 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt8Function21InsertBasicBlockAfterEONSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPS4_(%"class.spvtools::opt::Function"* %0, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %4, %"class.spvtools::opt::BasicBlock"* %2) #10
  %88 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %89 = icmp eq %"class.spvtools::opt::BasicBlock"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.std::__1::unique_ptr.40"* %4 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %91, %"class.spvtools::opt::BasicBlock"* nonnull %88) #10
  br label %92

92:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_122AddInstructionsInBlockEPNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEEPNS0_10BasicBlockE(%"class.std::__1::vector.945"*, %"class.spvtools::opt::BasicBlock"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %4 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to %"class.spvtools::opt::Instruction"*
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.spvtools::opt::Instruction"*** %10 to i64*
  %13 = bitcast %"class.std::__1::vector.945"* %0 to i64*
  %14 = bitcast %"class.spvtools::opt::Instruction"*** %11 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 0
  br label %89

16:                                               ; preds = %152, %2
  %17 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 1
  %21 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %22, align 8
  %24 = icmp ult %"class.spvtools::opt::Instruction"** %21, %23
  %25 = ptrtoint %"class.spvtools::opt::Instruction"** %23 to i64
  br i1 %24, label %26, label %31

26:                                               ; preds = %16
  %27 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %19, i64* %27, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, i64 1
  %29 = ptrtoint %"class.spvtools::opt::Instruction"** %28 to i64
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %88

31:                                               ; preds = %16
  %32 = ptrtoint %"class.spvtools::opt::Instruction"** %21 to i64
  %33 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %34 = bitcast %"class.std::__1::vector.945"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 2305843009213693951
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::vector.945"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #12
  unreachable

42:                                               ; preds = %31
  %43 = bitcast %"class.spvtools::opt::Instruction"*** %22 to i64*
  %44 = sub i64 %25, %35
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #12
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %42 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #11
  %59 = bitcast i8* %58 to %"class.spvtools::opt::Instruction"**
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"class.spvtools::opt::Instruction"** [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, i64 %37
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, i64 %61
  %65 = ptrtoint %"class.spvtools::opt::Instruction"** %64 to i64
  %66 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  store i64 %19, i64* %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, i64 1
  %68 = ptrtoint %"class.spvtools::opt::Instruction"** %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 0
  %70 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, align 8
  %71 = load i64, i64* %33, align 8
  %72 = ptrtoint %"class.spvtools::opt::Instruction"** %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 3
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, i64 %75
  %77 = ptrtoint %"class.spvtools::opt::Instruction"** %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %60
  %80 = bitcast %"class.spvtools::opt::Instruction"** %76 to i8*
  %81 = bitcast %"class.spvtools::opt::Instruction"** %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #10
  %82 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, align 8
  br label %83

83:                                               ; preds = %79, %60
  %84 = phi %"class.spvtools::opt::Instruction"** [ %70, %60 ], [ %82, %79 ]
  store i64 %77, i64* %34, align 8
  store i64 %68, i64* %33, align 8
  store i64 %65, i64* %43, align 8
  %85 = icmp eq %"class.spvtools::opt::Instruction"** %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.spvtools::opt::Instruction"** %84 to i8*
  tail call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %26, %83, %86
  ret void

89:                                               ; preds = %9, %152
  %90 = phi i64 [ %6, %9 ], [ %156, %152 ]
  %91 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %10, align 8
  %92 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, align 8
  %93 = icmp ult %"class.spvtools::opt::Instruction"** %91, %92
  %94 = ptrtoint %"class.spvtools::opt::Instruction"** %92 to i64
  br i1 %93, label %95, label %99

95:                                               ; preds = %89
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  store i64 %90, i64* %96, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %91, i64 1
  %98 = ptrtoint %"class.spvtools::opt::Instruction"** %97 to i64
  store i64 %98, i64* %12, align 8
  br label %152

99:                                               ; preds = %89
  %100 = ptrtoint %"class.spvtools::opt::Instruction"** %91 to i64
  %101 = load i64, i64* %13, align 8
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 2305843009213693951
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  %107 = bitcast %"class.std::__1::vector.945"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #12
  unreachable

108:                                              ; preds = %99
  %109 = sub i64 %94, %101
  %110 = ashr exact i64 %109, 3
  %111 = icmp ult i64 %110, 1152921504606846975
  br i1 %111, label %112, label %120

112:                                              ; preds = %108
  %113 = ashr exact i64 %109, 2
  %114 = icmp ult i64 %113, %104
  %115 = select i1 %114, i64 %104, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 2305843009213693951
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #12
  unreachable

120:                                              ; preds = %117, %108
  %121 = phi i64 [ %115, %117 ], [ 2305843009213693951, %108 ]
  %122 = shl i64 %121, 3
  %123 = tail call i8* @_Znwm(i64 %122) #11
  %124 = bitcast i8* %123 to %"class.spvtools::opt::Instruction"**
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi %"class.spvtools::opt::Instruction"** [ %124, %120 ], [ null, %112 ]
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %127, i64 %103
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %127, i64 %126
  %130 = ptrtoint %"class.spvtools::opt::Instruction"** %129 to i64
  %131 = bitcast %"class.spvtools::opt::Instruction"** %128 to i64*
  store i64 %90, i64* %131, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, i64 1
  %133 = ptrtoint %"class.spvtools::opt::Instruction"** %132 to i64
  %134 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %135 = load i64, i64* %12, align 8
  %136 = ptrtoint %"class.spvtools::opt::Instruction"** %134 to i64
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = sub nsw i64 0, %138
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, i64 %139
  %141 = ptrtoint %"class.spvtools::opt::Instruction"** %140 to i64
  %142 = icmp sgt i64 %137, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %125
  %144 = bitcast %"class.spvtools::opt::Instruction"** %140 to i8*
  %145 = bitcast %"class.spvtools::opt::Instruction"** %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 %137, i1 false) #10
  %146 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  br label %147

147:                                              ; preds = %143, %125
  %148 = phi %"class.spvtools::opt::Instruction"** [ %134, %125 ], [ %146, %143 ]
  store i64 %141, i64* %13, align 8
  store i64 %133, i64* %12, align 8
  store i64 %130, i64* %14, align 8
  %149 = icmp eq %"class.spvtools::opt::Instruction"** %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = bitcast %"class.spvtools::opt::Instruction"** %148 to i8*
  tail call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %95, %147, %150
  %153 = inttoptr i64 %90 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %154 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %153, i64 0, i32 1
  %155 = bitcast %"class.spvtools::opt::Instruction"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = inttoptr i64 %156 to %"class.spvtools::opt::Instruction"*
  %158 = icmp eq %"class.spvtools::opt::Instruction"* %4, %157
  br i1 %158, label %16, label %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFG11ForgetBlockEPKNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::function.1173", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %8, i32 %15) #10
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  store i32 %18, i32* %4, align 4
  %19 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0
  %20 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.329"* %19, i32* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  %21 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #10
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = zext i8 %28 to i32
  %30 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %22, i32 %29) #10
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %17 ]
  store i32 %32, i32* %5, align 4
  %33 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %34 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.305"* %33, i32* nonnull dereferenceable(4) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #10
  %35 = bitcast %"class.std::__1::function.1173"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.std::__1::function.1173", %"class.std::__1::function.1173"* %3, i64 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::function.1173", %"class.std::__1::function.1173"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj, void (%"union.std::__1::__function::__policy_storage"*, i32)** %36, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %37, align 8
  %38 = bitcast %"class.std::__1::function.1173"* %3 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::function.1173", %"class.std::__1::function.1173"* %3, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast [8 x i8]* %39 to %"class.spvtools::opt::CFG"**
  store %"class.spvtools::opt::CFG"* %0, %"class.spvtools::opt::CFG"** %40, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.1173"* nonnull dereferenceable(32) %3) #10
  %41 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %37, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %31
  %46 = getelementptr inbounds %"class.std::__1::function.1173", %"class.std::__1::function.1173"* %3, i64 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void %43(i8* %47) #10
  br label %48

48:                                               ; preds = %31, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFG7AddEdgeEjj(%"class.spvtools::opt::CFG"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::tuple.1186", align 8
  %5 = alloca %"class.std::__1::tuple.1122", align 1
  %6 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0
  %8 = bitcast %"class.std::__1::tuple.1186"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__1::tuple.1186", %"class.std::__1::tuple.1186"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #10
  %11 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %7, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1186"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1122"* nonnull dereferenceable(1) %5) #10
  %12 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %11, 0
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %12, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %12, i64 4
  %15 = bitcast %"struct.std::__1::__hash_node_base.309"* %14 to i32**
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %12, i64 5
  %18 = bitcast %"struct.std::__1::__hash_node_base.309"* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %16, %19
  %21 = ptrtoint i32* %19 to i64
  br i1 %20, label %26, label %22

22:                                               ; preds = %3
  store i32 %1, i32* %16, align 4
  %23 = getelementptr inbounds i32, i32* %16, i64 1
  %24 = ptrtoint i32* %23 to i64
  %25 = bitcast %"struct.std::__1::__hash_node_base.309"* %14 to i64*
  store i64 %24, i64* %25, align 8
  br label %82

26:                                               ; preds = %3
  %27 = ptrtoint i32* %16 to i64
  %28 = bitcast %"struct.std::__1::__hash_node_base.309"* %14 to i64*
  %29 = bitcast %"struct.std::__1::__hash_node_base.309"* %13 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 2
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 4611686018427387903
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"struct.std::__1::__hash_node_base.309"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #12
  unreachable

37:                                               ; preds = %26
  %38 = bitcast %"struct.std::__1::__hash_node_base.309"* %17 to i64*
  %39 = sub i64 %21, %30
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #12
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %37 ]
  %52 = shl i64 %51, 2
  %53 = call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %32
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = ptrtoint i32* %59 to i64
  store i32 %1, i32* %58, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = ptrtoint i32* %61 to i64
  %63 = bitcast %"struct.std::__1::__hash_node_base.309"* %13 to i32**
  %64 = load i32*, i32** %63, align 8
  %65 = load i64, i64* %28, align 8
  %66 = ptrtoint i32* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 2
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i32, i32* %58, i64 %69
  %71 = ptrtoint i32* %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %55
  %74 = bitcast i32* %70 to i8*
  %75 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 %67, i1 false) #10
  %76 = load i32*, i32** %63, align 8
  br label %77

77:                                               ; preds = %73, %55
  %78 = phi i32* [ %64, %55 ], [ %76, %73 ]
  store i64 %71, i64* %29, align 8
  store i64 %62, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast i32* %78 to i8*
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %22, %77, %80
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt14LoopDescriptor10RemoveLoopEPNS0_4LoopE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #10
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #10
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #10
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #10
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #10
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #10
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #10
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #10
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #10
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #10
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #11
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #11
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #11
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #10
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #10
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #10
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #10
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #10
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #10
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.692"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.1092"**
  %8 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %5, %"class.std::__1::__tree_node.1092"* %8) #10
  %9 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.663"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %4, %25
  %13 = phi %"struct.std::__1::__hash_node_base.663"* [ %15, %25 ], [ %10, %4 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.663"* %16 to %"class.spvtools::opt::SENode"**
  %18 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %17, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::SENode"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.spvtools::opt::SENode"* %18 to void (%"class.spvtools::opt::SENode"*)***
  %22 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %22, i64 2
  %24 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %23, align 8
  tail call void %24(%"class.spvtools::opt::SENode"* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %12
  %26 = bitcast %"struct.std::__1::__hash_node_base.663"* %13 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.663"* %15, null
  br i1 %27, label %28, label %12

28:                                               ; preds = %25, %4
  %29 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.663"**, %"struct.std::__1::__hash_node_base.663"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.663"** null, %"struct.std::__1::__hash_node_base.663"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.663"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.663"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node.1101"**
  %38 = load %"class.std::__1::__tree_node.1101"*, %"class.std::__1::__tree_node.1101"** %37, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %35, %"class.std::__1::__tree_node.1101"* %38) #10
  %39 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"*, %"class.std::__1::__tree_node.1092"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1092"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1092"* %1 to %"class.std::__1::__tree_node.1092"**
  %6 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %0, %"class.std::__1::__tree_node.1092"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1092", %"class.std::__1::__tree_node.1092"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1092"**
  %9 = load %"class.std::__1::__tree_node.1092"*, %"class.std::__1::__tree_node.1092"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %0, %"class.std::__1::__tree_node.1092"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1092"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"*, %"class.std::__1::__tree_node.1101"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1101"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1101"* %1 to %"class.std::__1::__tree_node.1101"**
  %6 = load %"class.std::__1::__tree_node.1101"*, %"class.std::__1::__tree_node.1101"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %0, %"class.std::__1::__tree_node.1101"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1101", %"class.std::__1::__tree_node.1101"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1101"**
  %9 = load %"class.std::__1::__tree_node.1101"*, %"class.std::__1::__tree_node.1101"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %0, %"class.std::__1::__tree_node.1101"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1101"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEES8_EC2IRS8_SB_Lb0EEEOT_OT0_(%"struct.std::__1::pair"*, %"class.std::__1::vector.945"* dereferenceable(24), %"class.std::__1::vector.945"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.std::__1::pair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.spvtools::opt::Instruction"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.945"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %3
  %14 = icmp ugt i64 %11, 2305843009213693951
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"struct.std::__1::pair"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #12
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #11
  %19 = bitcast i8* %18 to %"class.spvtools::opt::Instruction"**
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"struct.std::__1::pair"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 %11
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %23, %"class.spvtools::opt::Instruction"*** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %1, i64 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %25, align 8
  %27 = load i64, i64* %6, align 8
  %28 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %29 = ptrtoint i8* %18 to i64
  %30 = ptrtoint %"class.spvtools::opt::Instruction"** %26 to i64
  %31 = sub i64 %27, %30
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %17
  %34 = lshr exact i64 %31, 3
  %35 = bitcast %"class.spvtools::opt::Instruction"** %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %35, i64 %31, i1 false) #10
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 %34
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %36 to i64
  br label %38

38:                                               ; preds = %33, %17
  %39 = phi i64 [ %37, %33 ], [ %29, %17 ]
  store i64 %39, i64* %28, align 8
  br label %40

40:                                               ; preds = %3, %38
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %42 = bitcast %"class.std::__1::vector.945"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #10
  %43 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 1
  %44 = bitcast %"class.spvtools::opt::Instruction"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.945"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %40
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector.945"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #12
  unreachable

55:                                               ; preds = %51
  %56 = tail call i8* @_Znwm(i64 %48) #11
  %57 = bitcast i8* %56 to %"class.spvtools::opt::Instruction"**
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"*** %58 to i8**
  store i8* %56, i8** %59, align 8
  %60 = bitcast %"class.std::__1::vector.945"* %41 to i8**
  store i8* %56, i8** %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, i64 %49
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %61, %"class.spvtools::opt::Instruction"*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %2, i64 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %63, align 8
  %65 = load i64, i64* %44, align 8
  %66 = bitcast %"class.spvtools::opt::Instruction"*** %58 to i64*
  %67 = ptrtoint i8* %56 to i64
  %68 = ptrtoint %"class.spvtools::opt::Instruction"** %64 to i64
  %69 = sub i64 %65, %68
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %55
  %72 = lshr exact i64 %69, 3
  %73 = bitcast %"class.spvtools::opt::Instruction"** %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %73, i64 %69, i1 false) #10
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, i64 %72
  %75 = ptrtoint %"class.spvtools::opt::Instruction"** %74 to i64
  br label %76

76:                                               ; preds = %71, %55
  %77 = phi i64 [ %75, %71 ], [ %67, %55 ]
  store i64 %77, i64* %66, align 8
  br label %78

78:                                               ; preds = %40, %76
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.981"**
  %4 = load %"class.std::__1::function.981"*, %"class.std::__1::function.981"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt14DistanceVectorENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1009"*, %"class.spvtools::opt::DistanceVector"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.spvtools::opt::DistanceVector"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1009"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1009"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::DistanceVector"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.spvtools::opt::DistanceVector"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.spvtools::opt::DistanceVector"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %33, i64 %9
  %35 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %33, i64 %32
  %36 = ptrtoint %"class.spvtools::opt::DistanceVector"* %35 to i64
  %37 = bitcast %"class.spvtools::opt::DistanceVector"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %1, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.spvtools::opt::DistanceEntry"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.spvtools::opt::DistanceVector"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = sdiv exact i64 %43, 40
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 461168601842738790
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.spvtools::opt::DistanceVector"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #12
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #11
  %52 = bitcast i8* %51 to %"class.spvtools::opt::DistanceEntry"*
  %53 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %33, i64 %9, i32 0, i32 0, i32 1
  %54 = bitcast %"class.spvtools::opt::DistanceEntry"** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.spvtools::opt::DistanceVector"* %34 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %52, i64 %44
  %57 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %33, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::DistanceEntry"* %56, %"class.spvtools::opt::DistanceEntry"** %57, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %1, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast %"class.spvtools::opt::DistanceEntry"** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = udiv exact i64 %64, 40
  %68 = bitcast %"class.spvtools::opt::DistanceEntry"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %68, i64 %64, i1 false) #10
  %69 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %52, i64 %67
  %70 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %34, i64 1
  %75 = ptrtoint %"class.spvtools::opt::DistanceVector"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.1009", %"class.std::__1::vector.1009"* %0, i64 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %76, align 8
  %78 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %3, align 8
  %79 = icmp eq %"class.spvtools::opt::DistanceVector"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = ptrtoint %"class.spvtools::opt::DistanceVector"* %77 to i64
  br label %106

82:                                               ; preds = %73, %82
  %83 = phi %"class.spvtools::opt::DistanceVector"* [ %85, %82 ], [ %34, %73 ]
  %84 = phi %"class.spvtools::opt::DistanceVector"* [ %86, %82 ], [ %78, %73 ]
  %85 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %83, i64 -1
  %86 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %84, i64 -1
  %87 = bitcast %"class.spvtools::opt::DistanceVector"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #10
  %88 = bitcast %"class.spvtools::opt::DistanceVector"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.spvtools::opt::DistanceVector"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %84, i64 -1, i32 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::DistanceEntry"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %83, i64 -1, i32 0, i32 0, i32 1
  %95 = bitcast %"class.spvtools::opt::DistanceEntry"** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %84, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast %"class.spvtools::opt::DistanceEntry"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %83, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.spvtools::opt::DistanceEntry"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.spvtools::opt::DistanceVector"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #10
  %102 = icmp eq %"class.spvtools::opt::DistanceVector"* %86, %77
  br i1 %102, label %103, label %82

103:                                              ; preds = %82
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.spvtools::opt::DistanceVector"*, %"class.spvtools::opt::DistanceVector"** %3, align 8
  br label %106

106:                                              ; preds = %80, %103
  %107 = phi %"class.spvtools::opt::DistanceVector"* [ %77, %80 ], [ %105, %103 ]
  %108 = phi %"class.spvtools::opt::DistanceVector"* [ %34, %80 ], [ %85, %103 ]
  %109 = phi i64 [ %81, %80 ], [ %104, %103 ]
  %110 = ptrtoint %"class.spvtools::opt::DistanceVector"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.spvtools::opt::DistanceVector"*
  %112 = icmp eq %"class.spvtools::opt::DistanceVector"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"class.spvtools::opt::DistanceVector"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %114, i64 -1
  %116 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %116, align 8
  %118 = icmp eq %"class.spvtools::opt::DistanceEntry"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %117 to i64
  %121 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %114, i64 -1, i32 0, i32 0, i32 1
  %122 = bitcast %"class.spvtools::opt::DistanceEntry"** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast %"class.spvtools::opt::DistanceEntry"* %117 to i8*
  tail call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.spvtools::opt::DistanceVector"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.981"**
  %4 = load %"class.std::__1::function.981"*, %"class.std::__1::function.981"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1145"* dereferenceable(8), %"class.std::__1::tuple.1122"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #11, !noalias !45
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1145"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !45
  %75 = load i64, i64* %74, align 8, !noalias !45
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !45
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !45
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !45
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !45
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #10
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #10, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #10, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !48

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt8Function21InsertBasicBlockAfterEONSt3__110unique_ptrINS0_10BasicBlockENS2_14default_deleteIS4_EEEEPS4_(%"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8), %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #10
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #10
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #10
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1160", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.333"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.333"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.333"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.333"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.333"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.333"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1160"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1160"* nonnull sret %3, %"class.std::__1::__hash_table.329"* %0, %"struct.std::__1::__hash_node_base.333"* nonnull %33) #10
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1160", %"class.std::__1::unique_ptr.1160"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1081"*, %"struct.std::__1::__hash_node.1081"** %59, align 8
  store %"struct.std::__1::__hash_node.1081"* null, %"struct.std::__1::__hash_node.1081"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1081"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1081"* %60 to i8*
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1160"* noalias sret, %"class.std::__1::__hash_table.329"*, %"struct.std::__1::__hash_node_base.333"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.333"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.333"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.340"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.333"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.333"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.333"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.333"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.333"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.333"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.333"* %25, %"struct.std::__1::__hash_node_base.333"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.333"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.333"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1160"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1160", %"class.std::__1::unique_ptr.1160"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.343"** %98 to %"class.std::__1::__compressed_pair.340"**
  store %"class.std::__1::__compressed_pair.340"* %30, %"class.std::__1::__compressed_pair.340"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1160", %"class.std::__1::unique_ptr.1160"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1167", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %25, label %78, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.309"* %28, null
  br i1 %29, label %78, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.309"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %78

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.309"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.309"* %55, null
  br i1 %56, label %78, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1167"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1167"* nonnull sret %3, %"class.std::__1::__hash_table.305"* %0, %"struct.std::__1::__hash_node_base.309"* nonnull %33) #10
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1167"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1084"*, %"struct.std::__1::__hash_node.1084"** %59, align 8
  store %"struct.std::__1::__hash_node.1084"* null, %"struct.std::__1::__hash_node.1084"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1084"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1167"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node.1084", %"struct.std::__1::__hash_node.1084"* %60, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = icmp eq i32* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = ptrtoint i32* %68 to i64
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node.1084", %"struct.std::__1::__hash_node.1084"* %60, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %73 = bitcast i32** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %70, %66, %62
  %76 = bitcast %"struct.std::__1::__hash_node.1084"* %60 to i8*
  call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %57, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %78

78:                                               ; preds = %45, %53, %26, %2, %19, %77
  %79 = phi i64 [ 1, %77 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1167"* noalias sret, %"class.std::__1::__hash_table.305"*, %"struct.std::__1::__hash_node_base.309"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.309"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.309"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.309"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.316"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.309"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.309"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.309"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.309"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.309"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.309"* %25, %"struct.std::__1::__hash_node_base.309"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.309"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1167"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1167"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.319"** %98 to %"class.std::__1::__compressed_pair.316"**
  store %"class.std::__1::__compressed_pair.316"* %30, %"class.std::__1::__compressed_pair.316"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1167"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1173"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"*, i32) #0 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.anon.1179*
  call void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1179* dereferenceable(16) %4, i32* nonnull dereferenceable(4) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1179* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %class.anon.1179, %class.anon.1179* %0, i64 0, i32 1
  %5 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %4, align 8
  %6 = getelementptr inbounds %class.anon.1179, %class.anon.1179* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #10
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %102, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"* %39, null
  br i1 %40, label %102, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.309"* %43, null
  br i1 %44, label %102, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.309"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.309"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %102

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.309"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %3
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.309"* %70, null
  br i1 %71, label %102, label %47

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.309"* %73 to i32**
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 4
  %77 = bitcast %"struct.std::__1::__hash_node_base.309"* %76 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %75, %78
  %80 = ptrtoint i32* %78 to i64
  br i1 %79, label %88, label %81

81:                                               ; preds = %72, %85
  %82 = phi i32* [ %86, %85 ], [ %75, %72 ]
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %19
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %82, i64 1
  %87 = icmp eq i32* %86, %78
  br i1 %87, label %102, label %81

88:                                               ; preds = %81, %72
  %89 = phi i32* [ %75, %72 ], [ %82, %81 ]
  %90 = icmp eq i32* %89, %78
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds i32, i32* %89, i64 1
  %93 = ptrtoint i32* %92 to i64
  %94 = sub i64 %80, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = bitcast i32* %89 to i8*
  %99 = bitcast i32* %92 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %94, i1 false) #10
  br label %100

100:                                              ; preds = %97, %91
  %101 = getelementptr inbounds i32, i32* %89, i64 %95
  store i32* %101, i32** %77, align 8
  br label %102

102:                                              ; preds = %60, %68, %85, %18, %34, %41, %88, %100
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1186"* dereferenceable(8), %"class.std::__1::tuple.1122"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.309"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.309"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.309"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.309"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.309"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #11, !noalias !49
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1186", %"class.std::__1::tuple.1186"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !49
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !49
  store i32 %62, i32* %61, align 8, !noalias !49
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #10, !noalias !49
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !49
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"**
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %66, align 8, !noalias !49
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #10
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #10, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.309"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.309"* %109, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.309"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #10, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.309"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.309"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } undef, %"struct.std::__1::__hash_node_base.309"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.309"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.305"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.309"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !52

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.309"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.309"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.309"* %36, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.309"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.309"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.309"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.309"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.309"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.309"* %82, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.309"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.309"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.309"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"* %80, %"struct.std::__1::__hash_node_base.309"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.309"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.309"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.309"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.309"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1196", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.922"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.922"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.922"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1196"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1196"* nonnull sret %3, %"class.std::__1::__hash_table.918"* %0, %"struct.std::__1::__hash_node_base.922"* nonnull %33) #10
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1195"*, %"struct.std::__1::__hash_node.1195"** %59, align 8
  store %"struct.std::__1::__hash_node.1195"* null, %"struct.std::__1::__hash_node.1195"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1195"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1195"* %60 to i8*
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1196"* noalias sret, %"class.std::__1::__hash_table.918"*, %"struct.std::__1::__hash_node_base.922"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.922"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.922"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.922"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.929"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.922"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.922"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.922"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.922"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.922"* %25, %"struct.std::__1::__hash_node_base.922"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.922"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.922"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1196"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.932"** %98 to %"class.std::__1::__compressed_pair.929"**
  store %"class.std::__1::__compressed_pair.929"* %30, %"class.std::__1::__compressed_pair.929"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #11, !noalias !53
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !53
  store i32 %58, i32* %57, align 4, !noalias !53
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !53
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !53
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #10
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #10, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #10, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !56

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1042"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1038"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1186"* dereferenceable(8), %"class.std::__1::tuple.1122"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.1042"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1042"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1042"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #11, !noalias !57
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1186", %"class.std::__1::tuple.1186"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !57
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !57
  store i32 %62, i32* %61, align 8, !noalias !57
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %64, align 8, !noalias !57
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !57
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1042"**
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %67, align 8, !noalias !57
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #10, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #10
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1038"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #10, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1042"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1042"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1042"* %110, %"struct.std::__1::__hash_node_base.1042"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1042"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #10, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1042"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1042"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1042"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1042"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1042"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1042"*, i8 } undef, %"struct.std::__1::__hash_node_base.1042"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1042"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1042"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1038"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1038"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1038"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1038"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1038"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1042"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1042"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1044", %"class.std::__1::__bucket_list_deallocator.1044"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !60

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1042"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1042"* %36, %"struct.std::__1::__hash_node_base.1042"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1042"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1042"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1042"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1042"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1042"* %82, %"struct.std::__1::__hash_node_base.1042"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1042"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1042"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1042"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1042"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1042"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1042"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1042"* %80, %"struct.std::__1::__hash_node_base.1042"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1042"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1042"** null, %"struct.std::__1::__hash_node_base.1042"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1042"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1042"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1044", %"class.std::__1::__bucket_list_deallocator.1044"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1038"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1214", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.1042"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1042"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1042"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1214"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1214"* nonnull sret %3, %"class.std::__1::__hash_table.1038"* %0, %"struct.std::__1::__hash_node_base.1042"* nonnull %33) #10
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1210"*, %"struct.std::__1::__hash_node.1210"** %59, align 8
  store %"struct.std::__1::__hash_node.1210"* null, %"struct.std::__1::__hash_node.1210"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1210"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1210"* %60 to i8*
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1214"* noalias sret, %"class.std::__1::__hash_table.1038"*, %"struct.std::__1::__hash_node_base.1042"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1042"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1042"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1049", %"class.std::__1::__compressed_pair.1049"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1042"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1042"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1042"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1042"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042", %"struct.std::__1::__hash_node_base.1042"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1042"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1042"**, %"struct.std::__1::__hash_node_base.1042"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1042"*, %"struct.std::__1::__hash_node_base.1042"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1042"* %25, %"struct.std::__1::__hash_node_base.1042"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1042"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1042"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1042"* null, %"struct.std::__1::__hash_node_base.1042"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1038", %"class.std::__1::__hash_table.1038"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1042"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1214"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1052"** %98 to %"class.std::__1::__compressed_pair.1049"**
  store %"class.std::__1::__compressed_pair.1049"* %30, %"class.std::__1::__compressed_pair.1049"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.989"*, %"class.std::__1::__tree_node.1114"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1114"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1114"* %1 to %"class.std::__1::__tree_node.1114"**
  %6 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.989"* %0, %"class.std::__1::__tree_node.1114"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1114", %"class.std::__1::__tree_node.1114"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1114"**
  %9 = load %"class.std::__1::__tree_node.1114"*, %"class.std::__1::__tree_node.1114"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.989"* %0, %"class.std::__1::__tree_node.1114"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1114"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion30UsedInContinueOrConditionBlockES5_PNS3_4LoopEE3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Instruction"* %1) #10
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #10
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %19, %22
  %24 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1, i64 4
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %19, %26
  %28 = and i1 %23, %27
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #10, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1145", align 8
  %3 = alloca %"class.std::__1::tuple.1122", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.939", align 8
  %6 = alloca %"class.std::__1::function.981", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !61

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.981"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.981"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.939"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.981"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.939"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.939", %"class.std::__1::function.939"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.981", %"class.std::__1::function.981"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1145"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1145", %"class.std::__1::tuple.1145"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #10
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #10
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #10
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1145"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1122"* nonnull dereferenceable(1) %3) #10
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #10
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #10
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #10
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #10
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #10
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1145", align 8
  %4 = alloca %"class.std::__1::tuple.1122", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1145"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.std::__1::tuple.1145", %"class.std::__1::tuple.1145"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1122", %"class.std::__1::tuple.1122"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #10
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1145"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1122"* nonnull dereferenceable(1) %4) #10
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion13AreCompatibleEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #9 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 61
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"*, %"class.std::__1::__tree_node.1110"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1110"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1110"* %1 to %"class.std::__1::__tree_node.1110"**
  %6 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* %0, %"class.std::__1::__tree_node.1110"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1110"**
  %9 = load %"class.std::__1::__tree_node.1110"*, %"class.std::__1::__tree_node.1110"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.971"* %0, %"class.std::__1::__tree_node.1110"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::Instruction"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.spvtools::opt::Instruction"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1110", %"class.std::__1::__tree_node.1110"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.spvtools::opt::Instruction"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.1110"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion12IsUsedInLoopES5_PNS3_4LoopEE3$_3S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Instruction"* %1) #10
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #10
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to %"class.spvtools::opt::Loop"**
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = zext i32 %19 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %75, label %27

27:                                               ; preds = %18
  %28 = tail call i64 @llvm.ctpop.i64(i64 %25) #10, !range !3
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = add i64 %25, 4294967295
  %32 = and i64 %31, %23
  br label %37

33:                                               ; preds = %27
  %34 = icmp ugt i64 %25, %23
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %23, %25
  br label %37

37:                                               ; preds = %35, %33, %30
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %23, %33 ]
  %39 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %40, i64 %38
  %42 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.922"* %42, null
  br i1 %43, label %75, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %42, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.922"* %46, null
  br i1 %47, label %75, label %48

48:                                               ; preds = %44
  %49 = add i64 %25, -1
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi %"struct.std::__1::__hash_node_base.922"* [ %46, %48 ], [ %73, %71 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %51, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.922"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  br i1 %29, label %59, label %57

57:                                               ; preds = %56
  %58 = and i64 %54, %49
  br label %63

59:                                               ; preds = %56
  %60 = icmp ult i64 %54, %25
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %54, %25
  br label %63

63:                                               ; preds = %61, %59, %57
  %64 = phi i64 [ %58, %57 ], [ %62, %61 ], [ %54, %59 ]
  %65 = icmp eq i64 %64, %38
  br i1 %65, label %71, label %75

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %51, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.922"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %19
  br i1 %70, label %75, label %71

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %51, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.922"* %73, null
  br i1 %74, label %75, label %50

75:                                               ; preds = %63, %66, %71, %18, %37, %44
  %76 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %37 ], [ null, %18 ], [ null, %44 ], [ %51, %66 ], [ null, %71 ], [ null, %63 ]
  %77 = icmp eq %"struct.std::__1::__hash_node_base.922"* %76, null
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion7IsLegalEvE3$_4S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 2
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = tail call zeroext i1 @_ZN8spvtools3opt10LoopFusion12IsUsedInLoopEPNS0_11InstructionEPNS0_4LoopE(%"class.spvtools::opt::LoopFusion"* %4, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Loop"* %6) #10
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %10 = bitcast [8 x i8]* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = or i8 %12, %8
  store i8 %13, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::vector.945"* @_ZNSt3__118__set_intersectionIRNS_6__lessIPN8spvtools3opt11InstructionES5_EENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESD_NS_20back_insert_iteratorINS_6vectorIS5_NS_9allocatorIS5_EEEEEEEET2_T0_SL_T1_SM_SK_T_(%"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::vector.945"*, %"struct.std::__1::__less.1255"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.945"* %4, %"class.std::__1::vector.945"** %8, align 8
  %9 = icmp ne %"class.std::__1::__tree_end_node"* %0, %1
  %10 = icmp ne %"class.std::__1::__tree_end_node"* %2, %3
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %118

12:                                               ; preds = %6, %110
  %13 = phi %"class.std::__1::__tree_end_node"* [ %112, %110 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::__tree_end_node"* [ %111, %110 ], [ %2, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.spvtools::opt::Instruction"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 4
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.spvtools::opt::Instruction"**
  %19 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %21 = icmp ult %"class.spvtools::opt::Instruction"* %19, %20
  br i1 %21, label %22, label %50

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_end_node"**
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %27
  br i1 %33, label %110, label %41

34:                                               ; preds = %22, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %24, %22 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %110

41:                                               ; preds = %26, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %26 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %110, label %41

50:                                               ; preds = %12
  %51 = icmp ult %"class.spvtools::opt::Instruction"* %20, %19
  br i1 %51, label %81, label %52

52:                                               ; preds = %50
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"* nonnull %7, %"class.spvtools::opt::Instruction"** dereferenceable(8) %16)
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %65

57:                                               ; preds = %52
  %58 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_end_node"**
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, %58
  br i1 %64, label %81, label %72

65:                                               ; preds = %52, %65
  %66 = phi %"class.std::__1::__tree_node_base"* [ %68, %65 ], [ %55, %52 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %65

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0
  br label %81

72:                                               ; preds = %57, %72
  %73 = phi %"class.std::__1::__tree_end_node"** [ %76, %72 ], [ %60, %57 ]
  %74 = bitcast %"class.std::__1::__tree_end_node"** %73 to %"class.std::__1::__tree_node_base"**
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 2
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %75
  br i1 %80, label %81, label %72

81:                                               ; preds = %72, %70, %57, %50
  %82 = phi %"class.std::__1::__tree_end_node"* [ %13, %50 ], [ %71, %70 ], [ %61, %57 ], [ %77, %72 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_end_node"**
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %87
  br i1 %93, label %110, label %101

94:                                               ; preds = %81, %94
  %95 = phi %"class.std::__1::__tree_node_base"* [ %97, %94 ], [ %84, %81 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %94

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0
  br label %110

101:                                              ; preds = %86, %101
  %102 = phi %"class.std::__1::__tree_end_node"** [ %105, %101 ], [ %89, %86 ]
  %103 = bitcast %"class.std::__1::__tree_end_node"** %102 to %"class.std::__1::__tree_node_base"**
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %104
  br i1 %109, label %110, label %101

110:                                              ; preds = %101, %41, %99, %86, %39, %26
  %111 = phi %"class.std::__1::__tree_end_node"* [ %14, %26 ], [ %14, %39 ], [ %100, %99 ], [ %90, %86 ], [ %14, %41 ], [ %106, %101 ]
  %112 = phi %"class.std::__1::__tree_end_node"* [ %30, %26 ], [ %40, %39 ], [ %82, %99 ], [ %82, %86 ], [ %46, %41 ], [ %82, %101 ]
  %113 = icmp ne %"class.std::__1::__tree_end_node"* %112, %1
  %114 = icmp ne %"class.std::__1::__tree_end_node"* %111, %3
  %115 = and i1 %114, %113
  br i1 %115, label %12, label %116

116:                                              ; preds = %110
  %117 = load %"class.std::__1::vector.945"*, %"class.std::__1::vector.945"** %8, align 8
  br label %118

118:                                              ; preds = %116, %6
  %119 = phi %"class.std::__1::vector.945"* [ %117, %116 ], [ %4, %6 ]
  ret %"class.std::__1::vector.945"* %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN8spvtools3opt11InstructionENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"*, %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.945"*, %"class.std::__1::vector.945"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Instruction"** %6, %8
  %10 = ptrtoint %"class.spvtools::opt::Instruction"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, i64 1
  %16 = ptrtoint %"class.spvtools::opt::Instruction"** %15 to i64
  %17 = bitcast %"class.spvtools::opt::Instruction"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %"class.spvtools::opt::Instruction"** %6 to i64
  %20 = bitcast %"class.spvtools::opt::Instruction"*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.945"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.945"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #12
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %"class.spvtools::opt::Instruction"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.spvtools::opt::Instruction"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %49, i64 %24
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %49, i64 %48
  %52 = ptrtoint %"class.spvtools::opt::Instruction"** %51 to i64
  %53 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.spvtools::opt::Instruction"** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, i64 1
  %57 = ptrtoint %"class.spvtools::opt::Instruction"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %4, i64 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %"class.spvtools::opt::Instruction"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, i64 %64
  %66 = ptrtoint %"class.spvtools::opt::Instruction"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %"class.spvtools::opt::Instruction"** %65 to i8*
  %70 = bitcast %"class.spvtools::opt::Instruction"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #10
  %71 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %"class.spvtools::opt::Instruction"** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.spvtools::opt::Instruction"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_5S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %6, i32 %13) #10
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %2 ]
  store i32 %16, i32* %1, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt10LoopFusion4FuseEvE3$_6S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 2
  %8 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %10, i32 %17) #10
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi i32 [ %18, %14 ], [ 0, %2 ]
  store i32 %20, i32* %1, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 246
  br i1 %6, label %7, label %64

7:                                                ; preds = %2
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %9 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %8, align 8
  %10 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %9, i64 0, i32 2
  %12 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %12, i64 0, i32 3
  %14 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = zext i8 %22 to i32
  %24 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %16, i32 %23) #10
  br label %25

25:                                               ; preds = %20, %7
  %26 = phi i32 [ %24, %20 ], [ 0, %7 ]
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %30 to i32*
  store i64 1, i64* %28, align 8
  store i32 %26, i32* %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i64 1, i64 2
  %42 = xor i1 %40, true
  %43 = zext i1 %42 to i64
  %44 = select i1 %37, i64 %43, i64 %41
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %46 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %45, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 %44, i32 1
  %48 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %47, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %49, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %49, align 8
  %51 = icmp eq %"class.std::__1::vector.3"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %56, %52
  %62 = bitcast %"class.std::__1::vector.3"* %50 to i8*
  call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  br label %64

64:                                               ; preds = %2, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_8S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.anon.1033*
  tail call fastcc void @"_ZZN8spvtools3opt10LoopFusion4FuseEvENK3$_8clEPNS0_11InstructionE"(%class.anon.1033* %3, %"class.spvtools::opt::Instruction"* %1) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN8spvtools3opt10LoopFusion4FuseEvENK3$_8clEPNS0_11InstructionE"(%class.anon.1033* nocapture readonly, %"class.spvtools::opt::Instruction"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = getelementptr inbounds %class.anon.1033, %class.anon.1033* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 250
  br i1 %9, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %6, i64 0, i32 1
  %12 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %12, i64 0, i32 3
  %14 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = zext i8 %22 to i32
  %24 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %16, i32 %23) #10
  br label %25

25:                                               ; preds = %10, %20
  %26 = phi i32 [ %24, %20 ], [ 0, %10 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 1, i32 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i32
  %36 = select i1 %29, i32 %35, i32 %33
  %37 = add nuw nsw i32 %36, 1
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %37) #10
  %39 = icmp eq i32 %38, %26
  br i1 %39, label %40, label %93

40:                                               ; preds = %25
  %41 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %6, i64 0, i32 2
  %43 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %43, i64 0, i32 3
  %45 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 3
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = zext i8 %53 to i32
  %55 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %54) #10
  br label %56

56:                                               ; preds = %40, %51
  %57 = phi i32 [ %55, %51 ], [ 0, %40 ]
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %61 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %62 = bitcast i32** %60 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %61, %"struct.std::__1::aligned_storage<4, 4>::type"** %62, align 8
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %64 = bitcast %"class.std::__1::unique_ptr.0"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %61 to i32*
  store i64 1, i64* %59, align 8
  store i32 %57, i32* %65, align 8
  %66 = load i8, i8* %27, align 4, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = load i8, i8* %30, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i64 1, i64 2
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i64
  %73 = select i1 %67, i64 %72, i64 %70
  %74 = add nuw nsw i64 %73, 1
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %76 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %75, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %76, i64 %74, i32 1
  %78 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %77, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %79, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %79, align 8
  %81 = icmp eq %"class.std::__1::vector.3"* %80, null
  br i1 %81, label %146, label %82

82:                                               ; preds = %56
  %83 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 0, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint i32* %84 to i64
  %88 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 0, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast i32* %84 to i8*
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %86, %82
  %92 = bitcast %"class.std::__1::vector.3"* %80 to i8*
  call void @_ZdlPv(i8* %92) #11
  br label %146

93:                                               ; preds = %25
  %94 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %94) #10
  %95 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %6, i64 0, i32 2
  %96 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %96, i64 0, i32 3
  %98 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 4
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 3
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = zext i8 %106 to i32
  %108 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %100, i32 %107) #10
  br label %109

109:                                              ; preds = %93, %104
  %110 = phi i32 [ %108, %104 ], [ 0, %93 ]
  %111 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %113 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %115 = bitcast i32** %113 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %114, %"struct.std::__1::aligned_storage<4, 4>::type"** %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %117 = bitcast %"class.std::__1::unique_ptr.0"* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %114 to i32*
  store i64 1, i64* %112, align 8
  store i32 %110, i32* %118, align 8
  %119 = load i8, i8* %27, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  %121 = load i8, i8* %30, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = select i1 %122, i64 1, i64 2
  %124 = xor i1 %122, true
  %125 = zext i1 %124 to i64
  %126 = select i1 %120, i64 %125, i64 %123
  %127 = add nuw nsw i64 %126, 2
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %129 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %128, align 8
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %129, i64 %127, i32 1
  %131 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %109
  %136 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = ptrtoint i32* %137 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %133, i64 0, i32 0, i32 1
  %142 = bitcast i32** %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %139, %135
  %145 = bitcast %"class.std::__1::vector.3"* %133 to i8*
  call void @_ZdlPv(i8* %145) #11
  br label %146

146:                                              ; preds = %144, %109, %91, %56
  %147 = phi i8* [ %41, %56 ], [ %41, %91 ], [ %94, %109 ], [ %94, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #10
  br label %148

148:                                              ; preds = %146, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE3$_9S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 2
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 4
  %8 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %10, i32 %17) #10
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi i32 [ %18, %14 ], [ 0, %2 ]
  %21 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 1
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 4
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = zext i8 %32 to i32
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %26, i32 %33) #10
  br label %35

35:                                               ; preds = %30, %19
  %36 = phi i32 [ %34, %30 ], [ 0, %19 ]
  tail call void @_ZN8spvtools3opt20ReplacePhiParentWithEPNS0_11InstructionEjj(%"class.spvtools::opt::Instruction"* %1, i32 %20, i32 %36) #10
  %37 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %37, i64 0, i32 2
  %39 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %39, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 4
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 3
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = zext i8 %47 to i32
  %49 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %41, i32 %48) #10
  br label %50

50:                                               ; preds = %45, %35
  %51 = phi i32 [ %49, %45 ], [ 0, %35 ]
  %52 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %52, i64 0, i32 2
  %54 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 4
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %56, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !2
  %63 = zext i8 %62 to i32
  %64 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %56, i32 %63) #10
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i32 [ %64, %60 ], [ 0, %50 ]
  tail call void @_ZN8spvtools3opt20ReplacePhiParentWithEPNS0_11InstructionEjj(%"class.spvtools::opt::Instruction"* %1, i32 %51, i32 %66) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE4$_10S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopFusion"**
  %4 = load %"class.spvtools::opt::LoopFusion"*, %"class.spvtools::opt::LoopFusion"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFusion", %"class.spvtools::opt::LoopFusion"* %4, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !2
  br i1 %9, label %12, label %14

12:                                               ; preds = %2
  %13 = icmp eq i8 %11, 0
  br label %21

14:                                               ; preds = %2
  %15 = zext i8 %11 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #10
  %17 = load i8, i8* %7, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = load i8, i8* %10, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %18, label %21, label %24

21:                                               ; preds = %14, %12
  %22 = phi i1 [ %13, %12 ], [ %20, %14 ]
  %23 = phi i32 [ 0, %12 ], [ %16, %14 ]
  br label %24

24:                                               ; preds = %14, %21
  %25 = phi i1 [ %22, %21 ], [ %20, %14 ]
  %26 = phi i32 [ %23, %21 ], [ %16, %14 ]
  %27 = phi i32 [ 0, %21 ], [ 1, %14 ]
  %28 = phi i32 [ 1, %21 ], [ 2, %14 ]
  %29 = select i1 %25, i32 %27, i32 %28
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %29) #10
  %31 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %6, i32 %26, i32 %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10LoopFusion4FuseEvE4$_11S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %8, i32 %15) #10
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %23 = bitcast i32** %21 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %22, %"struct.std::__1::aligned_storage<4, 4>::type"** %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %25 = bitcast %"class.std::__1::unique_ptr.0"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %22 to i32*
  store i64 1, i64* %20, align 8
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i64 1, i64 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i64
  %36 = select i1 %29, i64 %35, i64 %33
  %37 = add nuw nsw i64 %36, 1
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %39 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %38, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 %37, i32 1
  %41 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %44 = icmp eq %"class.std::__1::vector.3"* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %17
  %46 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %43, i64 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i32* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %43, i64 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast i32* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %45
  %55 = bitcast %"class.std::__1::vector.3"* %43 to i8*
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %17, %54
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_IST_EEEEEEDpOT_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!36 = distinct !{!36, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!39 = distinct !{!39, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!42 = distinct !{!42, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!43 = distinct !{!43, !44}
!44 = !{!"llvm.loop.unroll.disable"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!48 = distinct !{!48, !44}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!52 = distinct !{!52, !44}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!56 = distinct !{!56, !44}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!60 = distinct !{!60, !44}
!61 = distinct !{!61, !44}
