; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_datetimeedit.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_datetimeedit.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_DateTimeEdit = type { %class.CFWL_Edit }
%class.CFWL_Edit = type { %class.CFWL_Widget, %"class.CFDE_TextEditEngine::Delegate", %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, i8, i32, float, float, float, float, i64, %"class.std::__1::unique_ptr", %"class.cppgc::internal::BasicMember.68", %"class.cppgc::internal::BasicMember.68", %"class.cppgc::internal::BasicMember.69", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.CFDE_TextEditEngine::Delegate" = type { i32 (...)** }
%class.CFX_RectF = type { float, float, float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextEditEngine* }
%class.CFDE_TextEditEngine = type { %"class.CFGAS_TxtBreak::Engine", %class.CFX_RectF, %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::vector.7", %class.CFGAS_TxtBreak, %"class.fxcrt::RetainPtr", i32, float, float, %"class.std::__1::vector.52", i64, i64, i64, i64, i64, i64, %"class.std::__1::vector.59", i64, i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, %"struct.CFDE_TextEditEngine::Selection" }
%"class.CFGAS_TxtBreak::Engine" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %"class.CFDE_TextEditEngine::Delegate"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.FDE_TEXTEDITPIECE*, %struct.FDE_TEXTEDITPIECE*, %"class.std::__1::__compressed_pair.4" }
%struct.FDE_TEXTEDITPIECE = type { %class.CFX_RectF, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %struct.FDE_TEXTEDITPIECE* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i64*, i64*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64* }
%class.CFGAS_TxtBreak = type { %class.CFGAS_Break, i32, i32 }
%class.CFGAS_Break = type { i32 (...)**, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.18", i8, [7 x i8], [2 x %class.CFGAS_BreakLine] }
%"class.fxcrt::UnownedPtr.18" = type { %class.CFGAS_BreakLine* }
%class.CFGAS_BreakLine = type <{ %"class.std::__1::vector.19", %"class.std::__1::vector.44", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %class.CFGAS_Char*, %class.CFGAS_Char*, %"class.std::__1::__compressed_pair.39" }
%class.CFGAS_Char = type <{ i8, i8, i8, i8, i32, i32, i16, i16, i16, [2 x i8], i32, i32, [4 x i8], %"class.fxcrt::RetainPtr.21", i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.fxcrt::RetainPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.CFGAS_TextUserData* }
%class.CFGAS_TextUserData = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.31" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.fxcrt::RetainPtr.31" = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.CFGAS_LinkUserData* }
%class.CFGAS_LinkUserData = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.CFGAS_Char* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %class.CFGAS_BreakPiece*, %class.CFGAS_BreakPiece*, %"class.std::__1::__compressed_pair.47" }
%class.CFGAS_BreakPiece = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::UnownedPtr.46", %"class.fxcrt::RetainPtr.21" }
%"class.fxcrt::UnownedPtr.46" = type { %"class.std::__1::vector.19"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.CFGAS_BreakPiece* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type opaque
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { i32*, i32*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i32* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::unique_ptr.61" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::unique_ptr.61"* }
%"struct.CFDE_TextEditEngine::Selection" = type { i64, i64 }
%"class.cppgc::internal::BasicMember.68" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.69" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.70" }
%"class.fxcrt::RetainPtr.70" = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFWL_App = type opaque
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.76", %"class.fxcrt::UnownedPtr.76" }
%"class.fxcrt::UnownedPtr.76" = type { %class.CFWL_Widget* }
%class.CFWL_DateTimePicker = type { %class.CFWL_Widget, i8, i32, i32, i32, i32, float, %class.CFX_RectF, %class.CFX_RectF, %"class.cppgc::internal::BasicMember.77", %"class.cppgc::internal::BasicMember.78" }
%"class.cppgc::internal::BasicMember.77" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.78" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.79", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.89" }
%"class.fxcrt::UnownedPtr.79" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.80" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { float*, float*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.87", %"class.fxcrt::UnownedPtr.88" }
%"class.fxcrt::UnownedPtr.87" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.88" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.std::__1::unique_ptr.91"*, %"class.std::__1::unique_ptr.91"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::unique_ptr.91" = type opaque
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::unique_ptr.91"* }
%class.CFX_PTemplate = type { float, float }
%"struct.CFDE_TextEditEngine::TextChange" = type <{ %"class.fxcrt::WideString", %"class.fxcrt::WideString", i64, i64, i8, [7 x i8] }>

@_ZTV17CFWL_DateTimeEdit = hidden unnamed_addr constant { [29 x i8*], [11 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Edit*, %"class.cppgc::Visitor"*)* @_ZNK9CFWL_Edit5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_DateTimeEdit*)* @_ZN17CFWL_DateTimeEditD2Ev to i8*), i8* bitcast (void (%class.CFWL_DateTimeEdit*)* @_ZN17CFWL_DateTimeEditD0Ev to i8*), i8* bitcast (void (%class.CFWL_DateTimeEdit*, %class.CFWL_Message*)* @_ZN17CFWL_DateTimeEdit16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Edit*, %class.CFWL_Event*)* @_ZN9CFWL_Edit14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_Edit*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN9CFWL_Edit12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_Edit*)* @_ZNK9CFWL_Edit10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Edit*)* @_ZN9CFWL_Edit22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Edit*)* @_ZN9CFWL_Edit13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Edit*, i32)* @_ZN9CFWL_Edit9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_Edit*, %class.CFX_PTemplate*)* @_ZN9CFWL_Edit7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_Edit*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN9CFWL_Edit10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Edit*, %"class.fxcrt::WideString"*)* @_ZN9CFWL_Edit7SetTextERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CFWL_Edit*, %"class.fxcrt::WideString"*)* @_ZN9CFWL_Edit17SetTextSkipNotifyERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit14NotifyTextFullEv to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit14OnCaretChangedEv to i8*), i8* bitcast (void (%class.CFWL_Edit*, %"struct.CFDE_TextEditEngine::TextChange"*)* @_ZN9CFWL_Edit16OnTextWillChangeEPN19CFDE_TextEditEngine10TextChangeE to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit13OnTextChangedEv to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZN9CFWL_Edit12OnSelChangedEv to i8*), i8* bitcast (i1 (%class.CFWL_Edit*, %"class.fxcrt::WideString"*)* @_ZN9CFWL_Edit10OnValidateERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CFWL_Edit*, float)* @_ZN9CFWL_Edit15SetScrollOffsetEf to i8*)], [11 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%class.CFWL_DateTimeEdit*)* @_ZThn88_N17CFWL_DateTimeEditD1Ev to i8*), i8* bitcast (void (%class.CFWL_DateTimeEdit*)* @_ZThn88_N17CFWL_DateTimeEditD0Ev to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZThn88_N9CFWL_Edit14NotifyTextFullEv to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZThn88_N9CFWL_Edit14OnCaretChangedEv to i8*), i8* bitcast (void (%class.CFWL_Edit*, %"struct.CFDE_TextEditEngine::TextChange"*)* @_ZThn88_N9CFWL_Edit16OnTextWillChangeEPN19CFDE_TextEditEngine10TextChangeE to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZThn88_N9CFWL_Edit13OnTextChangedEv to i8*), i8* bitcast (void (%class.CFWL_Edit*)* @_ZThn88_N9CFWL_Edit12OnSelChangedEv to i8*), i8* bitcast (i1 (%class.CFWL_Edit*, %"class.fxcrt::WideString"*)* @_ZThn88_N9CFWL_Edit10OnValidateERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CFWL_Edit*, float)* @_ZThn88_N9CFWL_Edit15SetScrollOffsetEf to i8*)] }, align 8

@_ZN17CFWL_DateTimeEditC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_ = hidden unnamed_addr alias void (%class.CFWL_DateTimeEdit*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*), void (%class.CFWL_DateTimeEdit*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*)* @_ZN17CFWL_DateTimeEditC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_
@_ZN17CFWL_DateTimeEditD1Ev = hidden unnamed_addr alias void (%class.CFWL_DateTimeEdit*), void (%class.CFWL_DateTimeEdit*)* @_ZN17CFWL_DateTimeEditD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFWL_DateTimeEditC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_DateTimeEdit*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0
  tail call void @_ZN9CFWL_EditC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_Edit* %5, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* dereferenceable(12) %2, %class.CFWL_Widget* %3) #4
  %6 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [11 x i8*] }, { [29 x i8*], [11 x i8*] }* @_ZTV17CFWL_DateTimeEdit, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [11 x i8*] }, { [29 x i8*], [11 x i8*] }* @_ZTV17CFWL_DateTimeEdit, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

declare void @_ZN9CFWL_EditC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_Edit*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CFWL_EditD2Ev(%class.CFWL_Edit*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFWL_DateTimeEditD2Ev(%class.CFWL_DateTimeEdit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0
  tail call void @_ZN9CFWL_EditD2Ev(%class.CFWL_Edit* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N17CFWL_DateTimeEditD1Ev(%class.CFWL_DateTimeEdit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 -1, i32 0, i32 5, i32 2
  %3 = bitcast float* %2 to %class.CFWL_Edit*
  tail call void @_ZN9CFWL_EditD2Ev(%class.CFWL_Edit* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFWL_DateTimeEditD0Ev(%class.CFWL_DateTimeEdit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0
  tail call void @_ZN9CFWL_EditD2Ev(%class.CFWL_Edit* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N17CFWL_DateTimeEditD0Ev(%class.CFWL_DateTimeEdit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 -1, i32 0, i32 5, i32 2
  %3 = bitcast float* %2 to %class.CFWL_Edit*
  tail call void @_ZN9CFWL_EditD2Ev(%class.CFWL_Edit* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFWL_DateTimeEdit16OnProcessMessageEP12CFWL_Message(%class.CFWL_DateTimeEdit*, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_RectF*
  %5 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0
  tail call void @_ZN9CFWL_Edit16OnProcessMessageEP12CFWL_Message(%class.CFWL_Edit* %9, %class.CFWL_Message* %1) #4
  br label %41

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %12 = bitcast %class.CFWL_Message* %11 to i8*
  %13 = load i8, i8* %12, align 8
  switch i8 %13, label %39 [
    i8 0, label %14
    i8 3, label %14
  ]

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = or i32 %16, 16
  store i32 %20, i32* %15, align 8
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0, i32 0, i32 9
  %23 = bitcast %"class.cppgc::internal::BasicMember.3"* %22 to %class.CFWL_Widget**
  %24 = load %class.CFWL_Widget*, %class.CFWL_Widget** %23, align 8
  %25 = bitcast %class.CFWL_Widget* %24 to %class.CFWL_DateTimePicker*
  %26 = tail call zeroext i1 @_ZNK19CFWL_DateTimePicker22IsMonthCalendarVisibleEv(%class.CFWL_DateTimePicker* %25) #4
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #4
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0, i64 0
  %30 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 1
  %31 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* %24) #4
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %34 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %34, <2 x float>* %33, align 8
  tail call void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker* %25, i1 zeroext false) #4
  %35 = extractelement <2 x float> %32, i32 0
  %36 = extractelement <2 x float> %32, i32 1
  %37 = fsub float %35, %35
  store float %37, float* %29, align 8
  %38 = fsub float %36, %36
  store float %38, float* %30, align 4
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %24, %class.CFX_RectF* nonnull dereferenceable(16) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #4
  br label %39

39:                                               ; preds = %21, %27, %10
  %40 = getelementptr inbounds %class.CFWL_DateTimeEdit, %class.CFWL_DateTimeEdit* %0, i64 0, i32 0
  call void @_ZN9CFWL_Edit16OnProcessMessageEP12CFWL_Message(%class.CFWL_Edit* %40, %class.CFWL_Message* %1) #4
  br label %41

41:                                               ; preds = %39, %8
  ret void
}

declare void @_ZN9CFWL_Edit16OnProcessMessageEP12CFWL_Message(%class.CFWL_Edit*, %class.CFWL_Message*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK19CFWL_DateTimePicker22IsMonthCalendarVisibleEv(%class.CFWL_DateTimePicker*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK9CFWL_Edit5TraceEPN5cppgc7VisitorE(%class.CFWL_Edit*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN9CFWL_Edit14OnProcessEventEP10CFWL_Event(%class.CFWL_Edit*, %class.CFWL_Event*) unnamed_addr #1

declare void @_ZN9CFWL_Edit12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Edit*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #1

declare void @_ZN9CFWL_Edit11PreFinalizeEv(%class.CFWL_Edit*) unnamed_addr #1

declare i32 @_ZNK9CFWL_Edit10GetClassIDEv(%class.CFWL_Edit*) unnamed_addr #1

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN9CFWL_Edit22GetAutosizedWidgetRectEv(%class.CFWL_Edit*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN9CFWL_Edit13GetWidgetRectEv(%class.CFWL_Edit*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #1

declare void @_ZN9CFWL_Edit9SetStatesEj(%class.CFWL_Edit*, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

declare void @_ZN9CFWL_Edit6UpdateEv(%class.CFWL_Edit*) unnamed_addr #1

declare i32 @_ZN9CFWL_Edit7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Edit*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN9CFWL_Edit10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Edit*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #1

declare void @_ZN9CFWL_Edit7SetTextERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN9CFWL_Edit17SetTextSkipNotifyERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN9CFWL_Edit14NotifyTextFullEv(%class.CFWL_Edit*) unnamed_addr #1

declare void @_ZN9CFWL_Edit14OnCaretChangedEv(%class.CFWL_Edit*) unnamed_addr #1

declare void @_ZN9CFWL_Edit16OnTextWillChangeEPN19CFDE_TextEditEngine10TextChangeE(%class.CFWL_Edit*, %"struct.CFDE_TextEditEngine::TextChange"*) unnamed_addr #1

declare void @_ZN9CFWL_Edit13OnTextChangedEv(%class.CFWL_Edit*) unnamed_addr #1

declare void @_ZN9CFWL_Edit12OnSelChangedEv(%class.CFWL_Edit*) unnamed_addr #1

declare zeroext i1 @_ZN9CFWL_Edit10OnValidateERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN9CFWL_Edit15SetScrollOffsetEf(%class.CFWL_Edit*, float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit14NotifyTextFullEv(%class.CFWL_Edit*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit14OnCaretChangedEv(%class.CFWL_Edit*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit16OnTextWillChangeEPN19CFDE_TextEditEngine10TextChangeE(%class.CFWL_Edit*, %"struct.CFDE_TextEditEngine::TextChange"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit13OnTextChangedEv(%class.CFWL_Edit*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit12OnSelChangedEv(%class.CFWL_Edit*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn88_N9CFWL_Edit10OnValidateERKN5fxcrt10WideStringE(%class.CFWL_Edit*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn88_N9CFWL_Edit15SetScrollOffsetEf(%class.CFWL_Edit*, float) unnamed_addr #0 align 2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
