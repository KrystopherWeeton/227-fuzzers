; ModuleID = '../../third_party/blink/renderer/core/exported/web_history_item.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_history_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.111", i32, [4 x i8], %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.297", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.147" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.207", %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.221", %"class.std::__1::__compressed_pair.223", [4 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209", %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { i64 }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { float }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.232", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.241" }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258" }
%"class.WTF::VectorBufferBase.258" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.165"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.172"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.179"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.274", i64 }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.276" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.301" }
%"class.base::time_internal::TimeBase.301" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector", %"class.blink::Member", %"class.absl::optional", i64, i64, i32, %class.scoped_refptr.1, %class.scoped_refptr.69, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1 }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.69 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.70", [4 x i8], %"class.WTF::Vector.72", i64, %"class.WTF::Vector.75", i8, [7 x i8] }>
%"class.WTF::RefCounted.70" = type { %"class.base::RefCounted.71" }
%"class.base::RefCounted.71" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.75", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.80, i64, i64, %"class.absl::optional.81", %class.scoped_refptr.86 }
%class.scoped_refptr.80 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type opaque
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.86 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr.1 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i64, %"class.WTF::Vector.8", %"class.WTF::Vector.13", %"class.WTF::Vector.19", %"class.WTF::Vector.35", %class.scoped_refptr.45, %"class.WTF::HashMap", %"class.WTF::Vector.54", %"class.WTF::Vector.8", %"class.WTF::Vector.59", %"class.WTF::HashMap.64", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15", [8 x i8] }
%"class.WTF::VectorBufferBase.15" = type { %class.scoped_refptr.16*, i32, i32 }
%class.scoped_refptr.16 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21" }
%"class.WTF::VectorBufferBase.21" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.27" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.38", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.38" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.45 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.46", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.51 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.51 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10", [16 x i8] }
%"class.WTF::VectorBufferBase.10" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.64" = type { %"class.WTF::HashTable.65" }
%"class.WTF::HashTable.65" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type { i8**, %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::PtrStorageImpl" = type { %"class.blink::Persistent"* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HistoryItem"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.89" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::KURL"* }
%"class.gfx::Point" = type { i32, i32 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::WebString"* }
%"class.blink::WebSerializedScriptValue" = type { %"class.blink::WebPrivatePtr.100" }
%"class.blink::WebPrivatePtr.100" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.101" }
%"class.blink::WebPrivatePtr.101" = type { i8* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.102" }
%"class.WTF::HashTable.102" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN3WTF12CopyToVectorINS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEEENS_6VectorIS2_Lj0ES6_EEEEvRKT_RT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HistoryItemEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11HistoryItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11HistoryItemEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11HistoryItemEE7GetNameEPKv = comdat any

$_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKN5blink9WebStringEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HistoryItemEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11HistoryItemEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HistoryItemEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1

@_ZN5blink14WebHistoryItemC1EPNS_11HistoryItemE = hidden unnamed_addr alias void (%"class.blink::WebHistoryItem"*, %"class.blink::HistoryItem"*), void (%"class.blink::WebHistoryItem"*, %"class.blink::HistoryItem"*)* @_ZN5blink14WebHistoryItemC2EPNS_11HistoryItemE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem10InitializeEv(%"class.blink::WebHistoryItem"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HistoryItemEEEPhm(i64 176) #14
  %3 = bitcast i8* %2 to %"class.blink::HistoryItem"*
  tail call void @_ZN5blink11HistoryItemC1Ev(%"class.blink::HistoryItem"* %3) #14
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %8, %"class.blink::HistoryItem"* %3) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem5ResetEv(%"class.blink::WebHistoryItem"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #14
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  store %"class.blink::PersistentNode"* %22, %"class.blink::PersistentNode"** %23, align 8
  br label %28

28:                                               ; preds = %16, %5
  %29 = bitcast %"class.blink::Persistent"* %3 to i8*
  tail call void @free(i8* %29) #14
  br label %30

30:                                               ; preds = %1, %28
  store %"class.blink::Persistent"* null, %"class.blink::Persistent"** %2, align 8
  %31 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 1
  tail call void @_ZN5blink9WebString5ResetEv(%"class.blink::WebString"* %31) #14
  ret void
}

declare void @_ZN5blink9WebString5ResetEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem6AssignERKS0_(%"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HistoryItem"* [ %9, %7 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::HistoryItem"* %11) #14
  %12 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 1
  %14 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %13, %"class.blink::WebString"* dereferenceable(8) %12) #14
  ret void
}

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem9UrlStringEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11HistoryItem9UrlStringEv(%"class.blink::HistoryItem"* %10) #14
  tail call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* dereferenceable(8) %11) #14
  ret void
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11HistoryItem9UrlStringEv(%"class.blink::HistoryItem"*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem12SetURLStringERKNS_9WebStringE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::HistoryItem"* [ %10, %8 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #14
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #14
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4
  call void @_ZN5blink11HistoryItem12SetURLStringERKN3WTF6StringE(%"class.blink::HistoryItem"* %12, %"class.WTF::String"* dereferenceable(8) %17) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #14
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %11, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #14
  ret void
}

declare void @_ZN5blink11HistoryItem12SetURLStringERKN3WTF6StringE(%"class.blink::HistoryItem"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem11GetReferrerEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call dereferenceable(16) %"struct.blink::Referrer"* @_ZNK5blink11HistoryItem11GetReferrerEv(%"class.blink::HistoryItem"* %10) #14
  %12 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %11, i64 0, i32 0
  tail call void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %12) #14
  ret void
}

declare dereferenceable(16) %"struct.blink::Referrer"* @_ZNK5blink11HistoryItem11GetReferrerEv(%"class.blink::HistoryItem"*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14WebHistoryItem17GetReferrerPolicyEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call dereferenceable(16) %"struct.blink::Referrer"* @_ZNK5blink11HistoryItem11GetReferrerEv(%"class.blink::HistoryItem"* %9) #14
  %11 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem11SetReferrerERKNS_9WebStringEN7network5mojom14ReferrerPolicyE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::Referrer", align 8
  %5 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %9, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::HistoryItem"* [ %10, %8 ], [ null, %3 ]
  %13 = bitcast %"struct.blink::Referrer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #14
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = load atomic i32, i32* %17 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #14
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %25
  tail call void @llvm.trap() #14
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %39

37:                                               ; preds = %16
  %38 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %39

39:                                               ; preds = %11, %21, %35, %37
  %40 = phi %"class.WTF::StringImpl"* [ %38, %37 ], [ %14, %21 ], [ %14, %35 ], [ null, %11 ]
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %42 = bitcast %"struct.blink::Referrer"* %4 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %4, i64 0, i32 1
  store i32 %2, i32* %43, align 8
  call void @_ZN5blink11HistoryItem11SetReferrerERKNS_8ReferrerE(%"class.blink::HistoryItem"* %12, %"struct.blink::Referrer"* nonnull dereferenceable(16) %4) #14
  %44 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #14
  br label %60

60:                                               ; preds = %39, %56, %59
  br i1 %15, label %74, label %61

61:                                               ; preds = %60
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %74

74:                                               ; preds = %60, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  ret void
}

declare void @_ZN5blink11HistoryItem11SetReferrerERKNS_8ReferrerE(%"class.blink::HistoryItem"*, %"struct.blink::Referrer"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::WebString"* @_ZNK5blink14WebHistoryItem6TargetEv(%"class.blink::WebHistoryItem"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 1
  ret %"class.blink::WebString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem9SetTargetERKNS_9WebStringE(%"class.blink::WebHistoryItem"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 1
  %4 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %3, %"class.blink::WebString"* dereferenceable(8) %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink14WebHistoryItem26VisualViewportScrollOffsetEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 8
  br label %17

17:                                               ; preds = %8, %13
  %18 = phi <2 x float> [ %16, %13 ], [ zeroinitializer, %8 ]
  ret <2 x float> %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem29SetVisualViewportScrollOffsetERKN3gfx6PointFE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.blink::FloatSize"*
  %5 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::HistoryItem"* [ %10, %8 ], [ null, %2 ]
  %13 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = bitcast %"class.gfx::PointF"* %1 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = bitcast <2 x float>* %3 to i64*
  store i64 %15, i64* %16, align 8
  call void @_ZN5blink11HistoryItem29SetVisualViewportScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"* %12, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret void
}

declare void @_ZN5blink11HistoryItem29SetVisualViewportScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebHistoryItem15GetScrollOffsetEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = fptosi float %15 to i32
  %19 = fptosi float %17 to i32
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %18 to i64
  br label %23

23:                                               ; preds = %8, %13
  %24 = phi i64 [ %21, %13 ], [ 0, %8 ]
  %25 = phi i64 [ %22, %13 ], [ 0, %8 ]
  %26 = or i64 %25, %24
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem15SetScrollOffsetERKN3gfx5PointE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HistoryItem"* [ %9, %7 ], [ null, %2 ]
  %12 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float %15, float* %19, align 4
  %20 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float %18, float* %20, align 4
  call void @_ZN5blink11HistoryItem15SetScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"* %11, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret void
}

declare void @_ZN5blink11HistoryItem15SetScrollOffsetERKNS_9FloatSizeE(%"class.blink::HistoryItem"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink14WebHistoryItem15PageScaleFactorEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %15 = load float, float* %14, align 8
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi float [ %15, %13 ], [ 0.000000e+00, %8 ]
  ret float %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem18SetPageScaleFactorEf(%"class.blink::WebHistoryItem"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  tail call void @_ZN5blink11HistoryItem18SetPageScaleFactorEf(%"class.blink::HistoryItem"* %10, float %1) #14
  ret void
}

declare void @_ZN5blink11HistoryItem18SetPageScaleFactorEf(%"class.blink::HistoryItem"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem16GetDocumentStateEv(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink11HistoryItem16GetDocumentStateEv(%"class.blink::HistoryItem"* %10) #14
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %16
  %18 = bitcast %"class.blink::WebVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #14
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %9
  %21 = shl nuw nsw i64 %16, 3
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.blink::WebString"*
  %24 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::WebString"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.blink::WebVector"* %0 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %23, i64 %16
  %28 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %27, %"class.blink::WebString"** %28, align 8
  br label %29

29:                                               ; preds = %29, %20
  %30 = phi %"class.blink::WebString"* [ %33, %29 ], [ %23, %20 ]
  %31 = phi %"class.WTF::String"* [ %32, %29 ], [ %13, %20 ]
  tail call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %30, %"class.WTF::String"* dereferenceable(8) %31) #14
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %33 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %30, i64 1
  %34 = icmp eq %"class.WTF::String"* %32, %17
  br i1 %34, label %35, label %29

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::WebString"** %24 to i64*
  %37 = ptrtoint %"class.blink::WebString"* %33 to i64
  store i64 %37, i64* %36, align 8
  br label %38

38:                                               ; preds = %9, %35
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector"* @_ZN5blink11HistoryItem16GetDocumentStateEv(%"class.blink::HistoryItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem16SetDocumentStateERKNS_9WebVectorINS_9WebStringEEE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebVector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #14
  %8 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::WebString"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::WebVector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %59

14:                                               ; preds = %75, %2
  %15 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %16 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %15, align 8
  %17 = icmp eq %"class.blink::Persistent"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %16, i64 0, i32 0, i32 0
  %20 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %19, align 8
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi %"class.blink::HistoryItem"* [ %20, %18 ], [ null, %14 ]
  call void @_ZN5blink11HistoryItem16SetDocumentStateERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HistoryItem"* %22, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #14
  %23 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %24 = icmp eq %"class.WTF::String"* %23, null
  br i1 %24, label %58, label %25, !prof !4

25:                                               ; preds = %21
  %26 = bitcast %"class.WTF::String"* %23 to i8*
  %27 = load i32, i32* %7, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %56, label %29, !prof !2

29:                                               ; preds = %25
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 %30
  br label %32

32:                                               ; preds = %50, %29
  %33 = phi %"class.WTF::String"* [ %51, %50 ], [ %23, %29 ]
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %50

50:                                               ; preds = %49, %46, %32
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 1
  %52 = icmp eq %"class.WTF::String"* %51, %31
  br i1 %52, label %53, label %32

53:                                               ; preds = %50
  store i32 0, i32* %7, align 4
  %54 = bitcast %"class.WTF::Vector"* %3 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %25
  %57 = phi i8* [ %55, %53 ], [ %26, %25 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %5, align 8
  br label %58

58:                                               ; preds = %21, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret void

59:                                               ; preds = %2, %82
  %60 = phi i32 [ %84, %82 ], [ 0, %2 ]
  %61 = phi i32 [ %83, %82 ], [ 0, %2 ]
  %62 = phi i64 [ %78, %82 ], [ %12, %2 ]
  %63 = phi i64 [ %76, %82 ], [ 0, %2 ]
  %64 = inttoptr i64 %62 to %"class.blink::WebString"*
  %65 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %64, i64 %63
  %66 = icmp eq i32 %61, %60
  br i1 %66, label %74, label %67, !prof !2

67:                                               ; preds = %59
  %68 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %69 = zext i32 %61 to i64
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %65) #14
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 %69, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  %72 = load i32, i32* %7, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %7, align 4
  br label %75

74:                                               ; preds = %59
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKN5blink9WebStringEEEvOT_(%"class.WTF::Vector"* nonnull %3, %"class.blink::WebString"* dereferenceable(8) %65) #14
  br label %75

75:                                               ; preds = %67, %74
  %76 = add nuw i64 %63, 1
  %77 = load i64, i64* %9, align 8
  %78 = load i64, i64* %11, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %76, %80
  br i1 %81, label %82, label %14

82:                                               ; preds = %75
  %83 = load i32, i32* %7, align 4
  %84 = load i32, i32* %6, align 8
  br label %59
}

declare void @_ZN5blink11HistoryItem16SetDocumentStateERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HistoryItem"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink14WebHistoryItem18ItemSequenceNumberEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem21SetItemSequenceNumberEl(%"class.blink::WebHistoryItem"* nocapture readonly, i64) local_unnamed_addr #7 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 5
  store i64 %1, i64* %11, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink14WebHistoryItem22DocumentSequenceNumberEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem25SetDocumentSequenceNumberEl(%"class.blink::WebHistoryItem"* nocapture readonly, i64) local_unnamed_addr #7 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 6
  store i64 %1, i64* %11, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14WebHistoryItem21ScrollRestorationTypeEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 7
  %11 = load i32, i32* %10, align 8
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem24SetScrollRestorationTypeENS_5mojom21ScrollRestorationTypeE(%"class.blink::WebHistoryItem"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 7
  store i32 %1, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem11StateObjectEv(%"class.blink::WebSerializedScriptValue"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HistoryItem"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %11, i64 0, i32 8, i32 0
  %13 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %12, align 8
  %14 = icmp eq %"class.blink::SerializedScriptValue"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %10, %15, %19
  call void @_ZN5blink24WebSerializedScriptValueC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WebSerializedScriptValue"* %0, %"class.blink::SerializedScriptValue"* %13) #14
  ret void
}

declare void @_ZN5blink24WebSerializedScriptValueC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WebSerializedScriptValue"*, %"class.blink::SerializedScriptValue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem14SetStateObjectERKNS_24WebSerializedScriptValueE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebSerializedScriptValue"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.blink::SerializedScriptValue"* @_ZNK5blink24WebSerializedScriptValuecv13scoped_refptrINS_21SerializedScriptValueEEEv(%"class.blink::WebSerializedScriptValue"* %1) #14
  tail call void @_ZN5blink11HistoryItem14SetStateObjectE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"* %10, %"class.blink::SerializedScriptValue"* %11) #14
  ret void
}

declare void @_ZN5blink11HistoryItem14SetStateObjectE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"*, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #2

declare %"class.blink::SerializedScriptValue"* @_ZNK5blink24WebSerializedScriptValuecv13scoped_refptrINS_21SerializedScriptValueEEEv(%"class.blink::WebSerializedScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem15HttpContentTypeEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HistoryItem15FormContentTypeEv(%"class.blink::HistoryItem"* %10) #14
  tail call void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %11) #14
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HistoryItem15FormContentTypeEv(%"class.blink::HistoryItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem18SetHTTPContentTypeERKNS_9WebStringE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HistoryItem"* [ %9, %7 ], [ null, %2 ]
  %12 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"* %1) #14
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZN5blink11HistoryItem18SetFormContentTypeERKN3WTF12AtomicStringE(%"class.blink::HistoryItem"* %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #14
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %30

30:                                               ; preds = %10, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  ret void
}

declare void @_ZN5blink11HistoryItem18SetFormContentTypeERKN3WTF12AtomicStringE(%"class.blink::HistoryItem"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF12AtomicStringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem8HttpBodyEv(%"class.blink::WebHTTPBody"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.blink::EncodedFormData"* @_ZN5blink11HistoryItem8FormDataEv(%"class.blink::HistoryItem"* %10) #14
  %12 = icmp eq %"class.blink::EncodedFormData"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  br label %15

15:                                               ; preds = %9, %13
  tail call void @_ZN5blink11WebHTTPBodyC1E13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::WebHTTPBody"* %0, %"class.blink::EncodedFormData"* %11) #14
  ret void
}

declare %"class.blink::EncodedFormData"* @_ZN5blink11HistoryItem8FormDataEv(%"class.blink::HistoryItem"*) local_unnamed_addr #2

declare void @_ZN5blink11WebHTTPBodyC1E13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::WebHTTPBody"*, %"class.blink::EncodedFormData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem11SetHttpBodyERKNS_11WebHTTPBodyE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebHTTPBody"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.blink::EncodedFormData"* @_ZNK5blink11WebHTTPBodycv13scoped_refptrINS_15EncodedFormDataEEEv(%"class.blink::WebHTTPBody"* %1) #14
  tail call void @_ZN5blink11HistoryItem11SetFormDataE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::HistoryItem"* %10, %"class.blink::EncodedFormData"* %11) #14
  ret void
}

declare void @_ZN5blink11HistoryItem11SetFormDataE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::HistoryItem"*, %"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZNK5blink11WebHTTPBodycv13scoped_refptrINS_15EncodedFormDataEEEv(%"class.blink::WebHTTPBody"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem22GetReferencedFilePathsEv(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = bitcast %"class.WTF::HashSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.WTF::HashSet"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #14
  %10 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %11 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %10, align 8
  %12 = icmp eq %"class.blink::Persistent"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %14, align 8
  br label %16

16:                                               ; preds = %2, %13
  %17 = phi %"class.blink::HistoryItem"* [ %15, %13 ], [ null, %2 ]
  %18 = tail call %"class.blink::EncodedFormData"* @_ZN5blink11HistoryItem8FormDataEv(%"class.blink::HistoryItem"* %17) #14
  %19 = icmp eq %"class.blink::EncodedFormData"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %18, i64 0, i32 2
  %26 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  br label %27

27:                                               ; preds = %24, %37
  %28 = phi i64 [ 0, %24 ], [ %38, %37 ]
  %29 = trunc i64 %28 to i32
  %30 = call dereferenceable(88) %"class.blink::FormDataElement"* @_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.72"* %25, i32 %29) #14
  %31 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 0, i32 2
  %36 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.102"* nonnull %26, %"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %35) #14
  br label %37

37:                                               ; preds = %34, %27
  %38 = add nuw nsw i64 %28, 1
  %39 = load i32, i32* %21, align 4
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %27, label %42

42:                                               ; preds = %37, %20, %16
  %43 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  %44 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %10, align 8
  %45 = icmp eq %"class.blink::Persistent"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %44, i64 0, i32 0, i32 0
  %48 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %47, align 8
  br label %49

49:                                               ; preds = %42, %46
  %50 = phi %"class.blink::HistoryItem"* [ %48, %46 ], [ null, %42 ]
  call void @_ZN5blink11HistoryItem22GetReferencedFilePathsEv(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::HistoryItem"* %50) #14
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  br label %193

56:                                               ; preds = %193, %49
  %57 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #14
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #14
  call void @_ZN3WTF12CopyToVectorINS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEEENS_6VectorIS2_Lj0ES6_EEEEvRKT_RT0_(%"class.WTF::HashSet"* nonnull dereferenceable(24) %3, %"class.WTF::Vector"* nonnull dereferenceable(16) %5)
  %60 = load %"class.WTF::String"*, %"class.WTF::String"** %58, align 8
  %61 = load i32, i32* %59, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 %62
  %64 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #14
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %56
  %67 = shl nuw nsw i64 %62, 3
  %68 = call i8* @_Znwm(i64 %67) #15
  %69 = bitcast i8* %68 to %"class.blink::WebString"*
  %70 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast %"class.blink::WebString"** %70 to i8**
  store i8* %68, i8** %71, align 8
  %72 = bitcast %"class.blink::WebVector"* %0 to i8**
  store i8* %68, i8** %72, align 8
  %73 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %69, i64 %62
  %74 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %73, %"class.blink::WebString"** %74, align 8
  br label %75

75:                                               ; preds = %75, %66
  %76 = phi %"class.blink::WebString"* [ %79, %75 ], [ %69, %66 ]
  %77 = phi %"class.WTF::String"* [ %78, %75 ], [ %60, %66 ]
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %76, %"class.WTF::String"* dereferenceable(8) %77) #14
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 1
  %79 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %76, i64 1
  %80 = icmp eq %"class.WTF::String"* %78, %63
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::WebString"** %70 to i64*
  %83 = ptrtoint %"class.blink::WebString"* %79 to i64
  store i64 %83, i64* %82, align 8
  %84 = load %"class.WTF::String"*, %"class.WTF::String"** %58, align 8
  br label %85

85:                                               ; preds = %56, %81
  %86 = phi %"class.WTF::String"* [ %60, %56 ], [ %84, %81 ]
  %87 = icmp eq %"class.WTF::String"* %86, null
  br i1 %87, label %121, label %88, !prof !4

88:                                               ; preds = %85
  %89 = bitcast %"class.WTF::String"* %86 to i8*
  %90 = load i32, i32* %59, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92, !prof !2

92:                                               ; preds = %88
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 %93
  br label %95

95:                                               ; preds = %113, %92
  %96 = phi %"class.WTF::String"* [ %114, %113 ], [ %86, %92 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  br label %113

113:                                              ; preds = %112, %109, %95
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %115 = icmp eq %"class.WTF::String"* %114, %94
  br i1 %115, label %116, label %95

116:                                              ; preds = %113
  store i32 0, i32* %59, align 4
  %117 = bitcast %"class.WTF::Vector"* %5 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %88
  %120 = phi i8* [ %118, %116 ], [ %89, %88 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %58, align 8
  br label %121

121:                                              ; preds = %85, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #14
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq %"class.WTF::String"* %123, null
  br i1 %124, label %158, label %125, !prof !4

125:                                              ; preds = %121
  %126 = bitcast %"class.WTF::String"* %123 to i8*
  %127 = load i32, i32* %51, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %156, label %129, !prof !2

129:                                              ; preds = %125
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %123, i64 %130
  br label %132

132:                                              ; preds = %150, %129
  %133 = phi %"class.WTF::String"* [ %151, %150 ], [ %123, %129 ]
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #14
  br label %150

150:                                              ; preds = %149, %146, %132
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 1
  %152 = icmp eq %"class.WTF::String"* %151, %131
  br i1 %152, label %153, label %132

153:                                              ; preds = %150
  store i32 0, i32* %51, align 4
  %154 = bitcast %"class.WTF::Vector"* %4 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %125
  %157 = phi i8* [ %155, %153 ], [ %126, %125 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %157) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %122, align 8
  br label %158

158:                                              ; preds = %121, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  %159 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %160 = icmp eq %"class.WTF::String"* %159, null
  br i1 %160, label %192, label %161, !prof !4

161:                                              ; preds = %158
  %162 = load i32, i32* %8, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %190, label %164

164:                                              ; preds = %161
  %165 = zext i32 %162 to i64
  br label %166

166:                                              ; preds = %187, %164
  %167 = phi i64 [ 0, %164 ], [ %188, %187 ]
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 %167
  %169 = bitcast %"class.WTF::String"* %168 to i8**
  %170 = load i8*, i8** %169, align 8
  %171 = bitcast i8* %170 to %"class.WTF::StringImpl"*
  %172 = ptrtoint i8* %170 to i64
  switch i64 %172, label %173 [
    i64 -1, label %187
    i64 0, label %187
  ]

173:                                              ; preds = %166
  %174 = getelementptr inbounds i8, i8* %170, i64 8
  %175 = bitcast i8* %174 to i32*
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = bitcast i8* %170 to i32*
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %173
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %173
  %184 = phi i32 [ %182, %181 ], [ %180, %173 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #14
  br label %187

187:                                              ; preds = %186, %183, %166, %166
  %188 = add nuw nsw i64 %167, 1
  %189 = icmp eq i64 %188, %165
  br i1 %189, label %190, label %166

190:                                              ; preds = %187, %161
  %191 = bitcast %"class.WTF::String"* %159 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %191) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %7, align 8
  br label %192

192:                                              ; preds = %158, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void

193:                                              ; preds = %54, %193
  %194 = phi i64 [ 0, %54 ], [ %198, %193 ]
  %195 = trunc i64 %194 to i32
  %196 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %4, i32 %195) #14
  %197 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.102"* nonnull %55, %"class.WTF::String"* dereferenceable(8) %196, %"class.WTF::String"* dereferenceable(8) %196) #14
  %198 = add nuw nsw i64 %194, 1
  %199 = load i32, i32* %51, align 4
  %200 = zext i32 %199 to i64
  %201 = icmp ult i64 %198, %200
  br i1 %201, label %193, label %56
}

declare void @_ZN5blink11HistoryItem22GetReferencedFilePathsEv(%"class.WTF::Vector"* sret, %"class.blink::HistoryItem"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorINS_7HashSetINS_6StringENS_10StringHashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEEENS_6VectorIS2_Lj0ES6_EEEEvRKT_RT0_(%"class.WTF::HashSet"* dereferenceable(24), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %4)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %11
  br i1 %6, label %25, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"class.WTF::String"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"class.WTF::String"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %21 = icmp eq %"class.WTF::String"* %20, %12
  br i1 %21, label %25, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"class.WTF::String"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"class.WTF::String"* %23, %12
  br i1 %24, label %25, label %26

25:                                               ; preds = %19, %69, %79, %76, %2, %22
  ret void

26:                                               ; preds = %22, %79
  %27 = phi i32 [ %80, %79 ], [ 0, %22 ]
  %28 = phi %"class.WTF::String"* [ %73, %79 ], [ %23, %22 ]
  %29 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %27) #14
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #14
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #14
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %26
  %51 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %52 = bitcast %"class.WTF::String"* %29 to i64*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #14
  br label %69

69:                                               ; preds = %50, %65, %68
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 1
  %71 = icmp eq %"class.WTF::String"* %70, %12
  br i1 %71, label %25, label %72

72:                                               ; preds = %69, %76
  %73 = phi %"class.WTF::String"* [ %77, %76 ], [ %70, %69 ]
  %74 = bitcast %"class.WTF::String"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %79 [
    i64 -1, label %76
    i64 0, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 1
  %78 = icmp eq %"class.WTF::String"* %77, %12
  br i1 %78, label %25, label %72

79:                                               ; preds = %72
  %80 = add i32 %27, 1
  %81 = icmp eq %"class.WTF::String"* %73, %12
  br i1 %81, label %25, label %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14WebHistoryItem25DidSaveScrollOrScaleStateEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp ne i8 %11, 0
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem19GetScrollAnchorDataEv(%"struct.blink::ScrollAnchorData"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ScrollAnchorData", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::HistoryItem"* [ %10, %8 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  br i1 %7, label %20, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  %19 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %18, align 8
  br label %20

20:                                               ; preds = %16, %17
  %21 = phi %"class.blink::HistoryItem"* [ %19, %17 ], [ null, %16 ]
  %22 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %21, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %20
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %21, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %27, %"class.blink::WebString"* dereferenceable(8) %28) #14
  %29 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %21, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1
  %31 = bitcast %"class.gfx::PointF"* %29 to i8*
  %32 = bitcast %"class.gfx::PointF"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false) #14
  br label %42

33:                                               ; preds = %11
  %34 = bitcast %"struct.blink::ScrollAnchorData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %0, i64 0, i32 0
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %35) #14
  %36 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %37, align 4
  %38 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %4) #14
  %39 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %39, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #14
  %40 = getelementptr inbounds %"struct.blink::ScrollAnchorData", %"struct.blink::ScrollAnchorData"* %3, i64 0, i32 1
  %41 = bitcast %"class.gfx::PointF"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %39) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  br label %42

42:                                               ; preds = %33, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem19SetScrollAnchorDataERKNS_16ScrollAnchorDataE(%"class.blink::WebHistoryItem"* nocapture readonly, %"struct.blink::ScrollAnchorData"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  tail call void @_ZN5blink11HistoryItem19SetScrollAnchorDataERKNS_16ScrollAnchorDataE(%"class.blink::HistoryItem"* %10, %"struct.blink::ScrollAnchorData"* dereferenceable(24) %1) #14
  ret void
}

declare void @_ZN5blink11HistoryItem19SetScrollAnchorDataERKNS_16ScrollAnchorDataE(%"class.blink::HistoryItem"*, %"struct.blink::ScrollAnchorData"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem16GetAppHistoryKeyEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 11
  tail call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* dereferenceable(8) %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem16SetAppHistoryKeyERKNS_9WebStringE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #14
  %12 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 11
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #14
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #14
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %9
  %32 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %33 = bitcast %"class.WTF::String"* %12 to i64*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %50

50:                                               ; preds = %31, %46, %49
  br i1 %13, label %64, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #14
  br label %64

64:                                               ; preds = %50, %60, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem15GetAppHistoryIdEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 12
  tail call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* dereferenceable(8) %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem15SetAppHistoryIdERKNS_9WebStringE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #14
  %12 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %10, i64 0, i32 12
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #14
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #14
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %9
  %32 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %33 = bitcast %"class.WTF::String"* %12 to i64*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %50

50:                                               ; preds = %31, %46, %49
  br i1 %13, label %64, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #14
  br label %64

64:                                               ; preds = %50, %60, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebHistoryItem18GetAppHistoryStateEv(%"class.blink::WebSerializedScriptValue"* noalias sret, %"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.blink::WebHistoryItem"* %1 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HistoryItem"* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %"class.blink::HistoryItem", %"class.blink::HistoryItem"* %11, i64 0, i32 13, i32 0
  %13 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %12, align 8
  %14 = icmp eq %"class.blink::SerializedScriptValue"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %10, %15, %19
  call void @_ZN5blink24WebSerializedScriptValueC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WebSerializedScriptValue"* %0, %"class.blink::SerializedScriptValue"* %13) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItem18SetAppHistoryStateERKNS_24WebSerializedScriptValueE(%"class.blink::WebHistoryItem"* nocapture readonly, %"class.blink::WebSerializedScriptValue"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %4 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::HistoryItem"* [ %8, %6 ], [ null, %2 ]
  %11 = tail call %"class.blink::SerializedScriptValue"* @_ZNK5blink24WebSerializedScriptValuecv13scoped_refptrINS_21SerializedScriptValueEEEv(%"class.blink::WebSerializedScriptValue"* %1) #14
  tail call void @_ZN5blink11HistoryItem18SetAppHistoryStateE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"* %10, %"class.blink::SerializedScriptValue"* %11) #14
  ret void
}

declare void @_ZN5blink11HistoryItem18SetAppHistoryStateE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::HistoryItem"*, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebHistoryItemC2EPNS_11HistoryItemE(%"class.blink::WebHistoryItem"*, %"class.blink::HistoryItem"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %4, %"class.blink::HistoryItem"* %1) #14
  %5 = getelementptr inbounds %"class.blink::WebHistoryItem", %"class.blink::WebHistoryItem"* %0, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %5) #14
  ret void
}

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::WebHistoryItem"* @_ZN5blink14WebHistoryItemaSEPNS_11HistoryItemE(%"class.blink::WebHistoryItem"* returned, %"class.blink::HistoryItem"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::HistoryItem"* %1) #14
  ret %"class.blink::WebHistoryItem"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HistoryItem"* @_ZNK5blink14WebHistoryItemcvPNS_11HistoryItemEEv(%"class.blink::WebHistoryItem"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.blink::WebHistoryItem"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HistoryItem"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::HistoryItem"* %9
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZN5blink11HistoryItemC1Ev(%"class.blink::HistoryItem"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HistoryItemEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #14
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #14
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HistoryItemEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #14
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #14
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #14
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #14
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #14
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HistoryItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HistoryItem"*
  tail call void @_ZNK5blink11HistoryItem5TraceEPNS_7VisitorE(%"class.blink::HistoryItem"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11HistoryItemEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HistoryItem"*
  tail call void @_ZN5blink11HistoryItemD1Ev(%"class.blink::HistoryItem"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HistoryItemEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink11HistoryItem5TraceEPNS_7VisitorE(%"class.blink::HistoryItem"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11HistoryItemD1Ev(%"class.blink::HistoryItem"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_11HistoryItemELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::HistoryItem"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::HistoryItem"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %4, label %8, label %35

8:                                                ; preds = %2
  br i1 %7, label %34, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #14
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #14
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %20, %9
  %33 = bitcast %"class.blink::Persistent"* %6 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %8, %32
  store %"class.blink::Persistent"* null, %"class.blink::Persistent"** %5, align 8
  br label %45

35:                                               ; preds = %2
  br i1 %7, label %36, label %42

36:                                               ; preds = %35
  %37 = tail call noalias i8* @malloc(i64 16) #14
  %38 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 32, i1 false) #14
  %39 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %39) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #14
  %40 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast i8* %37 to %"class.blink::Persistent"*
  br label %42

42:                                               ; preds = %35, %36
  %43 = phi %"class.blink::Persistent"* [ %6, %35 ], [ %41, %36 ]
  %44 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %43, i64 0, i32 0
  call void @_ZN5blink14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"* %44, %"class.blink::HistoryItem"* nonnull %1) #14
  br label %45

45:                                               ; preds = %42, %34
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::HistoryItem"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::HistoryItem"* %1, %"class.blink::HistoryItem"** %3, align 8
  %4 = ptrtoint %"class.blink::HistoryItem"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #14
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #14
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #14
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #14
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #14
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HistoryItemELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HistoryItem"**
  %5 = load %"class.blink::HistoryItem"*, %"class.blink::HistoryItem"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #14
  %7 = icmp eq %"class.blink::HistoryItem"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HistoryItem"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HistoryItemEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #14
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKN5blink9WebStringEEEvOT_(%"class.WTF::Vector"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #14
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #14
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #14
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #14
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #14
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::FormDataElement"* @_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %24, i64 %25
  ret %"class.blink::FormDataElement"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.102"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.102"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #14
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #14
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #14
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #14
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #14
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.102"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.102"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.102"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #14
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.102"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.102", align 8
  %6 = bitcast %"class.WTF::HashTable.102"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.102"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.102"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.102"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.102"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.102"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #14
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #14
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.102"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #14
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #14
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.102"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.102", %"class.WTF::HashTable.102"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #14
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #14
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %91, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %33
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %10
  br i1 %35, label %91, label %15

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %38, %1
  br i1 %39, label %40, label %79

40:                                               ; preds = %36
  %41 = lshr i32 %38, 2
  %42 = add nuw i32 %38, 1
  %43 = add i32 %42, %41
  %44 = icmp ugt i32 %43, 4
  %45 = select i1 %44, i32 %43, i32 4
  %46 = icmp ugt i32 %45, %1
  %47 = select i1 %46, i32 %45, i32 %1
  %48 = icmp ult i32 %38, %47
  br i1 %48, label %49, label %79, !prof !4

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %52 = icmp eq %"class.WTF::String"* %51, null
  %53 = zext i32 %47 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %53) #14
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #14
  br i1 %52, label %56, label %61

56:                                               ; preds = %49
  %57 = ptrtoint i8* %55 to i64
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = lshr i64 %54, 3
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %37, align 8
  br label %79

61:                                               ; preds = %49
  %62 = lshr i64 %54, 3
  %63 = ptrtoint i8* %55 to i64
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %65 = icmp ne i8* %55, null
  %66 = icmp ne %"class.WTF::String"* %64, null
  %67 = and i1 %65, %66
  %68 = bitcast %"class.WTF::String"* %64 to i8*
  br i1 %67, label %69, label %75, !prof !4

69:                                               ; preds = %61
  %70 = load i32, i32* %3, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %68, i64 %72, i1 false) #14
  %73 = bitcast %"class.WTF::Vector"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %69, %61
  %76 = phi i8* [ %74, %69 ], [ %68, %61 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #14
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %63, i64* %77 monotonic, align 8
  %78 = trunc i64 %62 to i32
  store i32 %78, i32* %37, align 8
  br label %79

79:                                               ; preds = %75, %56, %40, %36
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** %80, align 8
  %82 = load i32, i32* %3, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %83
  %85 = zext i32 %1 to i64
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %85
  %87 = bitcast %"class.WTF::String"* %84 to i8*
  %88 = ptrtoint %"class.WTF::String"* %86 to i64
  %89 = ptrtoint %"class.WTF::String"* %84 to i64
  %90 = sub i64 %88, %89
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 %90, i1 false) #14
  br label %91

91:                                               ; preds = %33, %6, %79
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
