; ModuleID = '../../components/sync/trusted_vault/securebox.cc'
source_filename = "../../components/sync/trusted_vault/securebox.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.syncer::SecureBoxPublicKey" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %struct.ec_key_st* }
%struct.ec_key_st = type opaque
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.syncer::SecureBoxPrivateKey" = type { %"class.std::__1::unique_ptr.3" }
%"class.syncer::SecureBoxKeyPair" = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.syncer::SecureBoxPrivateKey"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.syncer::SecureBoxPublicKey"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.ec_point_st = type opaque
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.base::span"*, %"class.base::span"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::span"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.engine_st = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%struct.ec_group_st = type opaque
%struct.bignum_ctx = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.29 }
%union.anon.29 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_ = comdat any

$_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm = comdat any

@.str = private unnamed_addr constant [26 x i8] c"SecureBoxSymmetricEncrypt\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"../../components/sync/trusted_vault/securebox.cc\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"CreateByImport\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"ExportToBytes\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Encrypt\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"GenerateRandom\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"CreateByPrivateKeyImport\00", align 1
@_ZN6syncer12_GLOBAL__N_117kSecureBoxVersionE = internal constant [2 x i8] c"\02\00", align 1
@_ZN6syncer12_GLOBAL__N_122kHkdfInfoWithPublicKeyE = internal constant [30 x i8] c"P256 HKDF-SHA-256 AES-128-GCM\00", align 16
@.str.7 = private unnamed_addr constant [54 x i8] c"dh_secret_length == static_cast<int>(kP256FieldBytes)\00", align 1
@_ZN6syncer12_GLOBAL__N_125kHkdfInfoWithoutPublicKeyE = internal constant [32 x i8] c"SHARED HKDF-SHA-256 AES-128-GCM\00", align 16
@_ZN6syncer12_GLOBAL__N_19kHkdfSaltE = internal constant [11 x i8] c"SECUREBOX\02\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"seal_result\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.13 = private unnamed_addr constant [21 x i8] c"SecureBoxDecryptImpl\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1

@_ZN6syncer18SecureBoxPublicKeyC1ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE = hidden unnamed_addr alias void (%"class.syncer::SecureBoxPublicKey"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*), void (%"class.syncer::SecureBoxPublicKey"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*)* @_ZN6syncer18SecureBoxPublicKeyC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE
@_ZN6syncer18SecureBoxPublicKeyD1Ev = hidden unnamed_addr alias void (%"class.syncer::SecureBoxPublicKey"*), void (%"class.syncer::SecureBoxPublicKey"*)* @_ZN6syncer18SecureBoxPublicKeyD2Ev
@_ZN6syncer19SecureBoxPrivateKeyC1ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE = hidden unnamed_addr alias void (%"class.syncer::SecureBoxPrivateKey"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*), void (%"class.syncer::SecureBoxPrivateKey"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*)* @_ZN6syncer19SecureBoxPrivateKeyC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE
@_ZN6syncer19SecureBoxPrivateKeyD1Ev = hidden unnamed_addr alias void (%"class.syncer::SecureBoxPrivateKey"*), void (%"class.syncer::SecureBoxPrivateKey"*)* @_ZN6syncer19SecureBoxPrivateKeyD2Ev
@_ZN6syncer16SecureBoxKeyPairC1ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE = hidden unnamed_addr alias void (%"class.syncer::SecureBoxKeyPair"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*), void (%"class.syncer::SecureBoxKeyPair"*, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"*)* @_ZN6syncer16SecureBoxKeyPairC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE
@_ZN6syncer16SecureBoxKeyPairD1Ev = hidden unnamed_addr alias void (%"class.syncer::SecureBoxKeyPair"*), void (%"class.syncer::SecureBoxKeyPair"*)* @_ZN6syncer16SecureBoxKeyPairD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer25SecureBoxSymmetricEncryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.std::__1::vector"* noalias sret, i64, i8*, i64, i8*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::span", align 8
  %10 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 319) #9
  %12 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %12, %"class.base::Location"* nonnull dereferenceable(32) %8) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 0, i32 0
  store i64 %3, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %9, i64 0, i32 1
  store i8* %4, i8** %14, align 8
  call fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxEncryptImplEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEESA_SA_RKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* sret %0, %struct.ec_key_st* null, %struct.ec_point_st* null, i64 %1, i8* %2, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %5)
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxEncryptImplEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEESA_SA_RKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* noalias sret, %struct.ec_key_st*, %struct.ec_point_st*, i64, i8*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) unnamed_addr #0 {
  %8 = alloca %"class.bssl::internal::StackAllocated", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.std::__1::vector.20", align 8
  %14 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN6syncer12_GLOBAL__N_122SecureBoxComputeSecretEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* nonnull sret %11, %struct.ec_key_st* %1, %struct.ec_point_st* %2, i64 %3, i8* %4)
  %18 = call i8* @_Znwm(i64 12) #10
  %19 = ptrtoint i8* %18 to i64
  %20 = sub i64 12, %19
  %21 = getelementptr i8, i8* %18, i64 %20
  %22 = ptrtoint i8* %21 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 0, i64 %22, i1 false) #9
  call void @_ZN6crypto9RandBytesEPvm(i8* nonnull %18, i64 12) #9
  %23 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.std::__1::vector"* %11 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i8** %16 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %28
  %32 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = inttoptr i64 %28 to i8*
  %41 = call %struct.evp_aead_st* @EVP_aead_aes_128_gcm() #9, !noalias !2
  %42 = call i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st* %41) #9, !noalias !2
  %43 = add i64 %42, %33
  %44 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 600, i8* nonnull %44) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 600, i1 false) #9, !noalias !2
  %45 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %8, i64 0, i32 0
  call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* nonnull %45) #9, !noalias !2
  %46 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9, !noalias !2
  store i64 -6148914691236517206, i64* %9, align 8, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %47 = icmp eq i64 %43, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %7
  %49 = icmp slt i64 %43, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %51) #11
  unreachable

52:                                               ; preds = %48
  %53 = call i8* @_Znwm(i64 %43) #10
  store i8* %53, i8** %24, align 8, !alias.scope !2
  %54 = getelementptr inbounds i8, i8* %53, i64 %43
  store i8* %54, i8** %26, align 8, !alias.scope !2
  %55 = bitcast i8** %25 to i64*
  %56 = ptrtoint i8* %53 to i64
  %57 = sub i64 %43, %56
  %58 = getelementptr i8, i8* %53, i64 %57
  %59 = ptrtoint i8* %58 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %53, i8 0, i64 %59, i1 false) #9, !noalias !2
  %60 = ptrtoint i8* %54 to i64
  store i64 %60, i64* %55, align 8, !alias.scope !2
  br label %61

61:                                               ; preds = %52, %7
  %62 = call %struct.evp_aead_st* @EVP_aead_aes_128_gcm() #9
  %63 = call i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st* nonnull %45, %struct.evp_aead_st* %62, i8* %40, i64 %31, i64 16, %struct.engine_st* null) #9
  %64 = load i8*, i8** %24, align 8, !alias.scope !2
  %65 = call i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st* nonnull %45, i8* %64, i64* nonnull %9, i64 %43, i8* nonnull %18, i64 12, i8* %35, i64 %33, i8* %39, i64 %37) #9
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9, !noalias !2
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 166, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)) #9
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9, !noalias !2
  br label %70

70:                                               ; preds = %67, %61
  %71 = load i64, i64* %9, align 8, !noalias !2
  %72 = bitcast i8** %25 to i64*
  %73 = load i64, i64* %72, align 8, !alias.scope !2
  %74 = bitcast %"class.std::__1::vector"* %12 to i64*
  %75 = load i64, i64* %74, align 8, !alias.scope !2
  %76 = sub i64 %73, %75
  %77 = icmp ugt i64 %71, %76
  %78 = inttoptr i64 %75 to i8*
  br i1 %77, label %79, label %81

79:                                               ; preds = %70
  %80 = sub i64 %71, %76
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %12, i64 %80) #9
  br label %85

81:                                               ; preds = %70
  %82 = icmp ult i64 %71, %76
  br i1 %82, label %83, label %85

83:                                               ; preds = %81
  %84 = getelementptr inbounds i8, i8* %78, i64 %71
  store i8* %84, i8** %25, align 8, !alias.scope !2
  br label %85

85:                                               ; preds = %79, %81, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9, !noalias !2
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 600, i8* nonnull %44) #9, !noalias !2
  %86 = icmp eq %struct.ec_key_st* %1, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %85
  %88 = call i8* @_Znwm(i64 65) #10, !noalias !5
  %89 = ptrtoint i8* %88 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 65
  %91 = sub i64 65, %89
  %92 = getelementptr i8, i8* %88, i64 %91
  %93 = ptrtoint i8* %92 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %88, i8 0, i64 %93, i1 false) #9, !noalias !5
  %94 = ptrtoint i8* %90 to i64
  %95 = call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %1) #9, !noalias !5
  %96 = call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* nonnull %1) #9, !noalias !5
  %97 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %95, %struct.ec_point_st* %96, i32 4, i8* nonnull %88, i64 65, %struct.bignum_ctx* null) #9, !noalias !5
  br label %98

98:                                               ; preds = %85, %87
  %99 = phi i64 [ 0, %85 ], [ %94, %87 ]
  %100 = phi i64 [ 0, %85 ], [ %89, %87 ]
  %101 = bitcast %"class.std::__1::vector.20"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #9
  %102 = sub i64 %99, %100
  %103 = load i64, i64* %74, align 8
  %104 = load i64, i64* %72, align 8
  %105 = sub i64 %104, %103
  %106 = call i8* @_Znwm(i64 64) #10
  %107 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %13, i64 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::vector.20"* %13 to i8**
  store i8* %106, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 64
  %110 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.base::span"** %110 to i8**
  store i8* %109, i8** %111, align 8
  %112 = bitcast %"class.base::span"** %107 to i64*
  %113 = bitcast i8* %106 to i64*
  store i64 2, i64* %113, align 8
  %114 = getelementptr inbounds i8, i8* %106, i64 8
  %115 = bitcast i8* %114 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN6syncer12_GLOBAL__N_117kSecureBoxVersionE, i64 0, i64 0), i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %106, i64 16
  %117 = bitcast i8* %116 to i64*
  store i64 %102, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %106, i64 24
  %119 = bitcast i8* %118 to i64*
  store i64 %100, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %106, i64 32
  %121 = bitcast i8* %120 to i64*
  store i64 12, i64* %121, align 8
  %122 = getelementptr inbounds i8, i8* %106, i64 40
  %123 = bitcast i8* %122 to i64*
  store i64 %19, i64* %123, align 8
  %124 = getelementptr inbounds i8, i8* %106, i64 48
  %125 = bitcast i8* %124 to i64*
  store i64 %105, i64* %125, align 8
  %126 = getelementptr inbounds i8, i8* %106, i64 56
  %127 = bitcast i8* %126 to i64*
  store i64 %103, i64* %127, align 8
  %128 = ptrtoint i8* %109 to i64
  store i64 %128, i64* %112, align 8
  call fastcc void @_ZN6syncer12_GLOBAL__N_111ConcatBytesERKNSt3__16vectorIN4base4spanIKhLm18446744073709551615EEENS1_9allocatorIS6_EEEE(%"class.std::__1::vector"* sret %0, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %13)
  call void @_ZdlPv(i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #9
  %129 = icmp eq i64 %100, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %98
  %131 = inttoptr i64 %100 to i8*
  call void @_ZdlPv(i8* nonnull %131) #10
  br label %132

132:                                              ; preds = %98, %130
  %133 = load i8*, i8** %24, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = ptrtoint i8* %133 to i64
  store i64 %136, i64* %72, align 8
  call void @_ZdlPv(i8* nonnull %133) #10
  br label %137

137:                                              ; preds = %132, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  call void @_ZdlPv(i8* nonnull %18) #10
  %138 = load i8*, i8** %15, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = ptrtoint i8* %138 to i64
  store i64 %141, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %138) #10
  br label %142

142:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer25SecureBoxSymmetricDecryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.absl::optional"* noalias nocapture sret, i64, i8*, i64, i8*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 {
  tail call fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxDecryptImplEPK9ec_key_stN4base4spanIKhLm18446744073709551615EEES7_S7_(%"class.absl::optional"* sret %0, %struct.ec_key_st* null, i64 %1, i8* %2, i64 %3, i8* %4, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxDecryptImplEPK9ec_key_stN4base4spanIKhLm18446744073709551615EEES7_S7_(%"class.absl::optional"* noalias nocapture sret, %struct.ec_key_st*, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) unnamed_addr #0 {
  %8 = alloca %"class.bssl::internal::StackAllocated", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %15 = alloca %"class.base::Location", align 8
  %16 = alloca %"class.std::__1::vector", align 8
  %17 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %"class.base::Location"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 273) #9
  %19 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %14, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %19, %"class.base::Location"* nonnull dereferenceable(32) %15) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #9
  %20 = icmp ne %struct.ec_key_st* %1, null
  %21 = select i1 %20, i64 79, i64 14
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %21
  br i1 %24, label %47, label %25

25:                                               ; preds = %7
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %25
  %28 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %25, %27
  %31 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = load i64, i64* %22, align 8
  %37 = icmp ugt i64 %36, 1
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %41 = load i8*, i8** %31, align 8
  br label %42

42:                                               ; preds = %35, %38
  %43 = phi i8* [ %32, %35 ], [ %41, %38 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %42, %30, %7
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #9
  br label %171

51:                                               ; preds = %42
  br i1 %20, label %52, label %65

52:                                               ; preds = %51
  %53 = call { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span"* nonnull %6, i64 2, i64 65) #9
  %54 = extractvalue { i64, i8* } %53, 0
  %55 = extractvalue { i64, i8* } %53, 1
  %56 = call fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_120ECPublicKeyFromBytesEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64 %54, i8* %55)
  %57 = ptrtoint %struct.ec_key_st* %56 to i64
  %58 = icmp eq %struct.ec_key_st* %56, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %union.anon* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #9
  br label %166

63:                                               ; preds = %52
  %64 = call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* nonnull %56) #9
  br label %65

65:                                               ; preds = %63, %51
  %66 = phi i64 [ %57, %63 ], [ 0, %51 ]
  %67 = phi %struct.ec_point_st* [ %64, %63 ], [ null, %51 ]
  %68 = phi i64 [ 67, %63 ], [ 2, %51 ]
  %69 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #9
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN6syncer12_GLOBAL__N_122SecureBoxComputeSecretEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* nonnull sret %16, %struct.ec_key_st* %1, %struct.ec_point_st* %67, i64 %2, i8* %3)
  %73 = call { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span"* nonnull %6, i64 %68, i64 12) #9
  %74 = extractvalue { i64, i8* } %73, 0
  %75 = extractvalue { i64, i8* } %73, 1
  %76 = or i64 %68, 12
  %77 = load i64, i64* %22, align 8
  %78 = icmp ult i64 %77, %76
  br i1 %78, label %79, label %83

79:                                               ; preds = %65
  %80 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #9
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %82 = load i64, i64* %22, align 8
  br label %83

83:                                               ; preds = %65, %79
  %84 = phi i64 [ %77, %65 ], [ %82, %79 ]
  %85 = sub i64 %84, %76
  %86 = load i8*, i8** %31, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %76
  %88 = bitcast %"class.std::__1::vector"* %16 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast i8** %71 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %89
  %93 = inttoptr i64 %89 to i8*
  %94 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 600, i8* nonnull %94) #9, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 600, i1 false) #9, !noalias !8
  %95 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %8, i64 0, i32 0
  call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* nonnull %95) #9, !noalias !8
  %96 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9, !noalias !8
  store i64 -6148914691236517206, i64* %9, align 8, !noalias !8
  %97 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9, !noalias !8
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #9, !noalias !8
  %101 = icmp eq i64 %85, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %83
  %103 = icmp slt i64 %85, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %105) #11, !noalias !8
  unreachable

106:                                              ; preds = %102
  %107 = call i8* @_Znwm(i64 %85) #10, !noalias !8
  store i8* %107, i8** %98, align 8, !noalias !8
  %108 = getelementptr inbounds i8, i8* %107, i64 %85
  store i8* %108, i8** %100, align 8, !noalias !8
  %109 = bitcast i8** %99 to i64*
  %110 = ptrtoint i8* %107 to i64
  %111 = sub i64 %85, %110
  %112 = getelementptr i8, i8* %107, i64 %111
  %113 = ptrtoint i8* %112 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %107, i8 0, i64 %113, i1 false) #9, !noalias !8
  %114 = ptrtoint i8* %108 to i64
  store i64 %114, i64* %109, align 8, !noalias !8
  br label %115

115:                                              ; preds = %106, %83
  %116 = call %struct.evp_aead_st* @EVP_aead_aes_128_gcm() #9, !noalias !8
  %117 = call i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st* nonnull %95, %struct.evp_aead_st* %116, i8* %93, i64 %92, i64 16, %struct.engine_st* null) #9, !noalias !8
  %118 = load i8*, i8** %98, align 8, !noalias !8
  %119 = call i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st* nonnull %95, i8* %118, i64* nonnull %9, i64 %85, i8* %75, i64 %74, i8* %87, i64 %85, i8* %5, i64 %4) #9, !noalias !8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %151, label %121

121:                                              ; preds = %115
  %122 = load i64, i64* %9, align 8, !noalias !8
  %123 = bitcast i8** %99 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !8
  %125 = bitcast %"class.std::__1::vector"* %10 to i64*
  %126 = load i64, i64* %125, align 8, !noalias !8
  %127 = sub i64 %124, %126
  %128 = icmp ugt i64 %122, %127
  %129 = inttoptr i64 %126 to i8*
  br i1 %128, label %130, label %134

130:                                              ; preds = %121
  %131 = sub i64 %122, %127
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %10, i64 %131) #9, !noalias !8
  %132 = load i64, i64* %125, align 8, !noalias !8
  %133 = load i64, i64* %123, align 8, !noalias !8
  br label %139

134:                                              ; preds = %121
  %135 = icmp ult i64 %122, %127
  br i1 %135, label %136, label %139

136:                                              ; preds = %134
  %137 = getelementptr inbounds i8, i8* %129, i64 %122
  store i8* %137, i8** %99, align 8, !noalias !8
  %138 = ptrtoint i8* %137 to i64
  br label %139

139:                                              ; preds = %136, %134, %130
  %140 = phi i64 [ %133, %130 ], [ %124, %134 ], [ %138, %136 ]
  %141 = phi i64 [ %132, %130 ], [ %126, %134 ], [ %126, %136 ]
  %142 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %142, align 8, !alias.scope !8
  %143 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %144 = bitcast %"class.std::__1::vector"* %143 to i64*
  store i64 %141, i64* %144, align 8, !alias.scope !8
  %145 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast i8** %145 to i64*
  store i64 %140, i64* %146, align 8, !alias.scope !8
  %147 = bitcast i8** %100 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !8
  %149 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast i8** %149 to i64*
  store i64 %148, i64* %150, align 8, !alias.scope !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #9, !noalias !8
  br label %160

151:                                              ; preds = %115
  %152 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %152, align 8, !alias.scope !8
  %153 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast %union.anon* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #9, !alias.scope !8
  %155 = load i8*, i8** %98, align 8, !noalias !8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %151
  %158 = ptrtoint i8* %155 to i64
  %159 = bitcast i8** %99 to i64*
  store i64 %158, i64* %159, align 8, !noalias !8
  call void @_ZdlPv(i8* nonnull %155) #10, !noalias !8
  br label %160

160:                                              ; preds = %139, %151, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9, !noalias !8
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* nonnull %95) #9, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 600, i8* nonnull %94) #9, !noalias !8
  %161 = load i8*, i8** %70, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %160
  %164 = ptrtoint i8* %161 to i64
  store i64 %164, i64* %90, align 8
  call void @_ZdlPv(i8* nonnull %161) #10
  br label %165

165:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #9
  br label %166

166:                                              ; preds = %165, %59
  %167 = phi i64 [ %66, %165 ], [ %57, %59 ]
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = inttoptr i64 %167 to %struct.ec_key_st*
  call void @EC_KEY_free(%struct.ec_key_st* nonnull %170) #9
  br label %171

171:                                              ; preds = %169, %166, %47
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %19) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.syncer::SecureBoxPublicKey"* @_ZN6syncer18SecureBoxPublicKey14CreateByImportEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 336) #9
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %8 = call fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_120ECPublicKeyFromBytesEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64 %0, i8* %1)
  %9 = icmp eq %struct.ec_key_st* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %struct.ec_key_st* %8 to i64
  %12 = call i8* @_Znwm(i64 8) #10
  %13 = bitcast i8* %12 to %"class.syncer::SecureBoxPublicKey"*
  %14 = bitcast i8* %12 to i64*
  store i64 %11, i64* %14, align 8
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %"class.syncer::SecureBoxPublicKey"* [ %13, %10 ], [ null, %2 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret %"class.syncer::SecureBoxPublicKey"* %16
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_120ECPublicKeyFromBytesEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64, i8*) unnamed_addr #0 {
  %3 = tail call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 415) #9
  %4 = ptrtoint %struct.ec_key_st* %3 to i64
  %5 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %3) #9
  %6 = tail call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* %5) #9
  %7 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %3) #9
  %8 = tail call i32 @EC_POINT_oct2point(%struct.ec_group_st* %7, %struct.ec_point_st* %6, i8* %1, i64 65, %struct.bignum_ctx* null) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @EC_KEY_set_public_key(%struct.ec_key_st* %3, %struct.ec_point_st* %6) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @EC_KEY_check_key(%struct.ec_key_st* %3) #9
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 %4, i64 0
  %17 = select i1 %15, %struct.ec_key_st* null, %struct.ec_key_st* %3
  br label %18

18:                                               ; preds = %13, %2, %10
  %19 = phi %struct.ec_key_st* [ null, %10 ], [ null, %2 ], [ %17, %13 ]
  %20 = phi i64 [ %4, %10 ], [ %4, %2 ], [ %16, %13 ]
  %21 = icmp eq %struct.ec_point_st* %6, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @EC_POINT_free(%struct.ec_point_st* nonnull %6) #9
  br label %23

23:                                               ; preds = %18, %22
  %24 = icmp eq i64 %20, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %20 to %struct.ec_key_st*
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %26) #9
  br label %27

27:                                               ; preds = %23, %25
  ret %struct.ec_key_st* %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.syncer::SecureBoxPublicKey"* @_ZN6syncer18SecureBoxPublicKey14CreateInternalENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %struct.ec_key_st* %0 to i64
  %4 = tail call i8* @_Znwm(i64 8) #10
  %5 = bitcast i8* %4 to %"class.syncer::SecureBoxPublicKey"*
  %6 = bitcast i8* %4 to i64*
  store i64 %3, i64* %6, align 8
  ret %"class.syncer::SecureBoxPublicKey"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer18SecureBoxPublicKeyC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%"class.syncer::SecureBoxPublicKey"* nocapture, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %struct.ec_key_st* %1 to i64
  %5 = bitcast %"class.syncer::SecureBoxPublicKey"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer18SecureBoxPublicKeyD2Ev(%"class.syncer::SecureBoxPublicKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::SecureBoxPublicKey", %"class.syncer::SecureBoxPublicKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.ec_key_st*, %struct.ec_key_st** %2, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %2, align 8
  %4 = icmp eq %struct.ec_key_st* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6syncer18SecureBoxPublicKey13ExportToBytesEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.syncer::SecureBoxPublicKey"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 364) #9
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %8 = getelementptr inbounds %"class.syncer::SecureBoxPublicKey", %"class.syncer::SecureBoxPublicKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = call i8* @_Znwm(i64 65) #10, !noalias !11
  store i8* %13, i8** %10, align 8, !alias.scope !11
  %14 = getelementptr inbounds i8, i8* %13, i64 65
  store i8* %14, i8** %12, align 8, !alias.scope !11
  %15 = bitcast i8** %11 to i64*
  %16 = ptrtoint i8* %13 to i64
  %17 = sub i64 65, %16
  %18 = getelementptr i8, i8* %13, i64 %17
  %19 = ptrtoint i8* %18 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %19, i1 false) #9, !noalias !11
  %20 = ptrtoint i8* %14 to i64
  store i64 %20, i64* %15, align 8, !alias.scope !11
  %21 = call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %9) #9, !noalias !11
  %22 = call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %9) #9, !noalias !11
  %23 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %21, %struct.ec_point_st* %22, i32 4, i8* nonnull %13, i64 65, %struct.bignum_ctx* null) #9, !noalias !11
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6syncer18SecureBoxPublicKey7EncryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.std::__1::vector"* noalias sret, %"class.syncer::SecureBoxPublicKey"* nocapture readonly, i64, i8*, i64, i8*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::span", align 8
  %11 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 372) #9
  %13 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %8, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %13, %"class.base::Location"* nonnull dereferenceable(32) %9) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  %14 = call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 415) #9
  %15 = call i32 @EC_KEY_generate_key(%struct.ec_key_st* %14) #9
  %16 = getelementptr inbounds %"class.syncer::SecureBoxPublicKey", %"class.syncer::SecureBoxPublicKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.ec_key_st*, %struct.ec_key_st** %16, align 8
  %18 = call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %17) #9
  %19 = getelementptr inbounds %"class.base::span", %"class.base::span"* %10, i64 0, i32 0, i32 0
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %10, i64 0, i32 1
  store i8* %5, i8** %20, align 8
  call fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxEncryptImplEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEESA_SA_RKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* sret %0, %struct.ec_key_st* %14, %struct.ec_point_st* %18, i64 %2, i8* %3, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %10, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6)
  %21 = icmp eq %struct.ec_key_st* %14, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %7
  call void @EC_KEY_free(%struct.ec_key_st* nonnull %14) #9
  br label %23

23:                                               ; preds = %7, %22
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  ret void
}

declare %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.syncer::SecureBoxPrivateKey"* @_ZN6syncer19SecureBoxPrivateKey14CreateByImportEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 383) #9
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %8 = call fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_118ImportECPrivateKeyEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64 %0, i8* %1)
  %9 = icmp eq %struct.ec_key_st* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %struct.ec_key_st* %8 to i64
  %12 = call i8* @_Znwm(i64 8) #10
  %13 = bitcast i8* %12 to %"class.syncer::SecureBoxPrivateKey"*
  %14 = bitcast i8* %12 to i64*
  store i64 %11, i64* %14, align 8
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %"class.syncer::SecureBoxPrivateKey"* [ %13, %10 ], [ null, %2 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret %"class.syncer::SecureBoxPrivateKey"* %16
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_118ImportECPrivateKeyEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64, i8*) unnamed_addr #0 {
  %3 = icmp eq i64 %0, 32
  br i1 %3, label %4, label %40

4:                                                ; preds = %2
  %5 = tail call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 415) #9
  %6 = ptrtoint %struct.ec_key_st* %5 to i64
  %7 = tail call %struct.bignum_st* @BN_bin2bn(i8* %1, i64 32, %struct.bignum_st* null) #9
  %8 = icmp eq %struct.bignum_st* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @EC_KEY_set_private_key(%struct.ec_key_st* %5, %struct.bignum_st* nonnull %7) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %9
  %13 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %5) #9
  %14 = tail call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* %13) #9
  %15 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %5) #9
  %16 = tail call i32 @EC_POINT_mul(%struct.ec_group_st* %15, %struct.ec_point_st* %14, %struct.bignum_st* nonnull %7, %struct.ec_point_st* null, %struct.bignum_st* null, %struct.bignum_ctx* null) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @EC_KEY_set_public_key(%struct.ec_key_st* %5, %struct.ec_point_st* %14) #9
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @EC_KEY_check_key(%struct.ec_key_st* %5) #9
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i64 0, i64 %6
  %25 = select i1 %23, i64 %6, i64 0
  br label %26

26:                                               ; preds = %21, %12, %18
  %27 = phi i64 [ 0, %18 ], [ 0, %12 ], [ %24, %21 ]
  %28 = phi i64 [ %6, %18 ], [ %6, %12 ], [ %25, %21 ]
  %29 = icmp eq %struct.ec_point_st* %14, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @EC_POINT_free(%struct.ec_point_st* nonnull %14) #9
  br label %31

31:                                               ; preds = %30, %26, %9
  %32 = phi i64 [ %27, %30 ], [ %27, %26 ], [ 0, %9 ]
  %33 = phi i64 [ %28, %30 ], [ %28, %26 ], [ %6, %9 ]
  tail call void @BN_free(%struct.bignum_st* nonnull %7) #9
  br label %34

34:                                               ; preds = %4, %31
  %35 = phi i64 [ %33, %31 ], [ %6, %4 ]
  %36 = phi i64 [ %32, %31 ], [ 0, %4 ]
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = inttoptr i64 %35 to %struct.ec_key_st*
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %39) #9
  br label %40

40:                                               ; preds = %38, %34, %2
  %41 = phi i64 [ 0, %2 ], [ %36, %34 ], [ %36, %38 ]
  %42 = inttoptr i64 %41 to %struct.ec_key_st*
  ret %struct.ec_key_st* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.syncer::SecureBoxPrivateKey"* @_ZN6syncer19SecureBoxPrivateKey14CreateInternalENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %struct.ec_key_st* %0 to i64
  %4 = tail call i8* @_Znwm(i64 8) #10
  %5 = bitcast i8* %4 to %"class.syncer::SecureBoxPrivateKey"*
  %6 = bitcast i8* %4 to i64*
  store i64 %3, i64* %6, align 8
  ret %"class.syncer::SecureBoxPrivateKey"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19SecureBoxPrivateKeyC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%"class.syncer::SecureBoxPrivateKey"* nocapture, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %struct.ec_key_st* %1 to i64
  %5 = bitcast %"class.syncer::SecureBoxPrivateKey"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19SecureBoxPrivateKeyD2Ev(%"class.syncer::SecureBoxPrivateKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::SecureBoxPrivateKey", %"class.syncer::SecureBoxPrivateKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.ec_key_st*, %struct.ec_key_st** %2, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %2, align 8
  %4 = icmp eq %struct.ec_key_st* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6syncer19SecureBoxPrivateKey13ExportToBytesEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.syncer::SecureBoxPrivateKey"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 414) #9
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = call i8* @_Znwm(i64 32) #10
  store i8* %11, i8** %8, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  store i8* %12, i8** %10, align 8
  %13 = bitcast i8** %9 to i64*
  %14 = ptrtoint i8* %11 to i64
  %15 = sub i64 32, %14
  %16 = getelementptr i8, i8* %11, i64 %15
  %17 = ptrtoint i8* %16 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 0, i64 %17, i1 false) #9
  %18 = ptrtoint i8* %12 to i64
  store i64 %18, i64* %13, align 8
  %19 = getelementptr inbounds %"class.syncer::SecureBoxPrivateKey", %"class.syncer::SecureBoxPrivateKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %struct.ec_key_st*, %struct.ec_key_st** %19, align 8
  %21 = call %struct.bignum_st* @EC_KEY_get0_private_key(%struct.ec_key_st* %20) #9
  %22 = call i32 @BN_bn2bin_padded(i8* nonnull %11, i64 32, %struct.bignum_st* %21) #9
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret void
}

declare i32 @BN_bn2bin_padded(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare %struct.bignum_st* @EC_KEY_get0_private_key(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6syncer19SecureBoxPrivateKey7DecryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.absl::optional"* noalias nocapture sret, %"class.syncer::SecureBoxPrivateKey"* nocapture readonly, i64, i8*, i64, i8*, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.syncer::SecureBoxPrivateKey", %"class.syncer::SecureBoxPrivateKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  tail call fastcc void @_ZN6syncer12_GLOBAL__N_120SecureBoxDecryptImplEPK9ec_key_stN4base4spanIKhLm18446744073709551615EEES7_S7_(%"class.absl::optional"* sret %0, %struct.ec_key_st* %9, i64 %2, i8* %3, i64 %4, i8* %5, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.syncer::SecureBoxKeyPair"* @_ZN6syncer16SecureBoxKeyPair14GenerateRandomEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %2 = alloca %"class.base::Location", align 8
  %3 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 32, i1 false)
  %4 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 434) #9
  %5 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %1, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %2) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #9
  %6 = call i8* @_Znwm(i64 16) #10
  %7 = bitcast i8* %6 to %"class.syncer::SecureBoxKeyPair"*
  %8 = call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 415) #9
  %9 = call i32 @EC_KEY_generate_key(%struct.ec_key_st* %8) #9
  call void @_ZN6syncer16SecureBoxKeyPairC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%"class.syncer::SecureBoxKeyPair"* nonnull %7, %struct.ec_key_st* %8, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %1)
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #9
  ret %"class.syncer::SecureBoxKeyPair"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.syncer::SecureBoxKeyPair"* @_ZN6syncer16SecureBoxKeyPair24CreateByPrivateKeyImportEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 443) #9
  %7 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  %8 = call fastcc %struct.ec_key_st* @_ZN6syncer12_GLOBAL__N_118ImportECPrivateKeyEN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(i64 %0, i8* %1)
  %9 = icmp eq %struct.ec_key_st* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = call i8* @_Znwm(i64 16) #10
  %12 = bitcast i8* %11 to %"class.syncer::SecureBoxKeyPair"*
  call void @_ZN6syncer16SecureBoxKeyPairC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%"class.syncer::SecureBoxKeyPair"* nonnull %12, %struct.ec_key_st* nonnull %8, %"class.crypto::OpenSSLErrStackTracer"* nonnull dereferenceable(32) %3)
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi %"class.syncer::SecureBoxKeyPair"* [ %12, %10 ], [ null, %2 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  ret %"class.syncer::SecureBoxKeyPair"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16SecureBoxKeyPairC2ENSt3__110unique_ptrI9ec_key_stN4bssl8internal7DeleterIS3_EEEERKN6crypto21OpenSSLErrStackTracerE(%"class.syncer::SecureBoxKeyPair"* nocapture, %struct.ec_key_st*, %"class.crypto::OpenSSLErrStackTracer"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %struct.ec_key_st* %1 to i64
  %5 = bitcast %"class.syncer::SecureBoxKeyPair"* %0 to i64*
  %6 = getelementptr inbounds %"class.syncer::SecureBoxKeyPair", %"class.syncer::SecureBoxKeyPair"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %8 = bitcast %"class.syncer::SecureBoxKeyPair"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = tail call %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32 415) #9
  %10 = ptrtoint %struct.ec_key_st* %9 to i64
  %11 = tail call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %1) #9
  %12 = tail call i32 @EC_KEY_set_public_key(%struct.ec_key_st* %9, %struct.ec_point_st* %11) #9
  %13 = tail call i8* @_Znwm(i64 8) #10
  %14 = bitcast i8* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.syncer::SecureBoxKeyPair", %"class.syncer::SecureBoxKeyPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.syncer::SecureBoxPrivateKey"*, %"class.syncer::SecureBoxPrivateKey"** %16, align 8
  store i64 %15, i64* %5, align 8
  %18 = icmp eq %"class.syncer::SecureBoxPrivateKey"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.syncer::SecureBoxPrivateKey", %"class.syncer::SecureBoxPrivateKey"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %struct.ec_key_st*, %struct.ec_key_st** %20, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %20, align 8
  %22 = icmp eq %struct.ec_key_st* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %21) #9
  br label %24

24:                                               ; preds = %23, %19
  %25 = bitcast %"class.syncer::SecureBoxPrivateKey"* %17 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %24, %3
  %27 = tail call i8* @_Znwm(i64 8) #10
  %28 = bitcast i8* %27 to i64*
  store i64 %10, i64* %28, align 8
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.syncer::SecureBoxPublicKey"*, %"class.syncer::SecureBoxPublicKey"** %30, align 8
  store i64 %29, i64* %7, align 8
  %32 = icmp eq %"class.syncer::SecureBoxPublicKey"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.syncer::SecureBoxPublicKey", %"class.syncer::SecureBoxPublicKey"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %struct.ec_key_st*, %struct.ec_key_st** %34, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %34, align 8
  %36 = icmp eq %struct.ec_key_st* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %35) #9
  br label %38

38:                                               ; preds = %37, %33
  %39 = bitcast %"class.syncer::SecureBoxPublicKey"* %31 to i8*
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %38, %26
  ret void
}

declare %struct.ec_key_st* @EC_KEY_new_by_curve_name(i32) local_unnamed_addr #2

declare i32 @EC_KEY_set_public_key(%struct.ec_key_st*, %struct.ec_point_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16SecureBoxKeyPairD2Ev(%"class.syncer::SecureBoxKeyPair"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::SecureBoxKeyPair", %"class.syncer::SecureBoxKeyPair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.syncer::SecureBoxPublicKey"*, %"class.syncer::SecureBoxPublicKey"** %2, align 8
  store %"class.syncer::SecureBoxPublicKey"* null, %"class.syncer::SecureBoxPublicKey"** %2, align 8
  %4 = icmp eq %"class.syncer::SecureBoxPublicKey"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.syncer::SecureBoxPublicKey", %"class.syncer::SecureBoxPublicKey"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.ec_key_st*, %struct.ec_key_st** %6, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %6, align 8
  %8 = icmp eq %struct.ec_key_st* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %7) #9
  br label %10

10:                                               ; preds = %9, %5
  %11 = bitcast %"class.syncer::SecureBoxPublicKey"* %3 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.syncer::SecureBoxKeyPair", %"class.syncer::SecureBoxKeyPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.syncer::SecureBoxPrivateKey"*, %"class.syncer::SecureBoxPrivateKey"** %13, align 8
  store %"class.syncer::SecureBoxPrivateKey"* null, %"class.syncer::SecureBoxPrivateKey"** %13, align 8
  %15 = icmp eq %"class.syncer::SecureBoxPrivateKey"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.syncer::SecureBoxPrivateKey", %"class.syncer::SecureBoxPrivateKey"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %struct.ec_key_st*, %struct.ec_key_st** %17, align 8
  store %struct.ec_key_st* null, %struct.ec_key_st** %17, align 8
  %19 = icmp eq %struct.ec_key_st* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @EC_KEY_free(%struct.ec_key_st* nonnull %18) #9
  br label %21

21:                                               ; preds = %20, %16
  %22 = bitcast %"class.syncer::SecureBoxPrivateKey"* %14 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %12, %21
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6syncer12_GLOBAL__N_122SecureBoxComputeSecretEPK9ec_key_stPK11ec_point_stN4base4spanIKhLm18446744073709551615EEERKN6crypto21OpenSSLErrStackTracerE(%"class.std::__1::vector"* noalias sret, %struct.ec_key_st*, %struct.ec_point_st*, i64, i8*) unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.std::__1::vector.20", align 8
  %13 = alloca %"class.base::span", align 8
  %14 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #9
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #9
  %20 = icmp eq %struct.ec_key_st* %1, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %5
  %22 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZN6syncer12_GLOBAL__N_122kHkdfInfoWithPublicKeyE, i64 0, i64 0), i64 29) #9
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 32) #9
  %23 = load i8*, i8** %15, align 8
  %24 = call i32 @ECDH_compute_key(i8* %23, i64 32, %struct.ec_point_st* %2, %struct.ec_key_st* nonnull %1, i8* (i8*, i64, i8*, i64*)* null) #9
  %25 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp eq i32 %24, 32
  br i1 %28, label %29, label %30

29:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %21
  %31 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %24) #9
  %32 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 32) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0), i8* %31, i8* %32) #9
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 129, %"class.logging::CheckOpResult"* nonnull %9) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %42

40:                                               ; preds = %5
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN6syncer12_GLOBAL__N_125kHkdfInfoWithoutPublicKeyE, i64 0, i64 0), i64 31) #9
  br label %42

42:                                               ; preds = %40, %39
  %43 = bitcast %"class.std::__1::vector"* %7 to i64*
  %44 = bitcast i8** %16 to i64*
  %45 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::vector.20"* %12 to i8*
  %49 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #9
  %50 = load i64, i64* %43, align 8
  %51 = load i64, i64* %44, align 8
  %52 = sub i64 %51, %50
  %53 = call i8* @_Znwm(i64 32) #10
  %54 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %12, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::vector.20"* %12 to i8**
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 32
  %57 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.base::span"** %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = bitcast %"class.base::span"** %54 to i64*
  %60 = bitcast i8* %53 to i64*
  store i64 %52, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %53, i64 8
  %62 = bitcast i8* %61 to i64*
  store i64 %50, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %53, i64 16
  %64 = bitcast i8* %63 to i64*
  store i64 %3, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %53, i64 24
  %66 = bitcast i8* %65 to i8**
  store i8* %4, i8** %66, align 8
  %67 = ptrtoint i8* %56 to i64
  store i64 %67, i64* %59, align 8
  call fastcc void @_ZN6syncer12_GLOBAL__N_111ConcatBytesERKNSt3__16vectorIN4base4spanIKhLm18446744073709551615EEENS1_9allocatorIS6_EEEE(%"class.std::__1::vector"* nonnull sret %11, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %12)
  call void @_ZdlPv(i8* nonnull %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #9
  %68 = bitcast %"class.std::__1::vector"* %11 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8** %47 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %71, %69
  %73 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %18, align 8
  %78 = select i1 %76, i8* %77, i8* %17
  %79 = load i64, i64* %19, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = getelementptr inbounds %"class.base::span", %"class.base::span"* %13, i64 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.base::span", %"class.base::span"* %13, i64 0, i32 1
  store i8* %78, i8** %83, align 8
  %84 = inttoptr i64 %69 to i8*
  call void @_ZN6crypto10HkdfSha256EN4base4spanIKhLm18446744073709551615EEES3_S3_m(%"class.std::__1::vector"* sret %0, i64 %72, i8* %84, i64 11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN6syncer12_GLOBAL__N_19kHkdfSaltE, i64 0, i64 0), %"class.base::span"* nonnull byval(%"class.base::span") align 8 %13, i64 16) #9
  %85 = load i8*, i8** %46, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %42
  %88 = ptrtoint i8* %85 to i64
  store i64 %88, i64* %70, align 8
  call void @_ZdlPv(i8* nonnull %85) #10
  br label %89

89:                                               ; preds = %42, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  %90 = load i8, i8* %74, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %95 = load i8*, i8** %15, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = ptrtoint i8* %95 to i64
  store i64 %98, i64* %44, align 8
  call void @_ZdlPv(i8* nonnull %95) #10
  br label %99

99:                                               ; preds = %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void
}

declare void @_ZN6crypto9RandBytesEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6syncer12_GLOBAL__N_111ConcatBytesERKNSt3__16vectorIN4base4spanIKhLm18446744073709551615EEENS1_9allocatorIS6_EEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.base::span"*, %"class.base::span"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %8 = load %"class.base::span"*, %"class.base::span"** %7, align 8
  %9 = icmp eq %"class.base::span"* %6, %8
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %"class.base::span"* %6 to i64
  %12 = getelementptr %"class.base::span", %"class.base::span"* %8, i64 -1, i32 0, i32 0
  %13 = ptrtoint i64* %12 to i64
  %14 = sub i64 %13, %11
  %15 = lshr i64 %14, 4
  %16 = add nuw nsw i64 %15, 1
  %17 = and i64 %16, 7
  %18 = icmp ult i64 %14, 112
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  %20 = sub nsw i64 %16, %17
  br label %62

21:                                               ; preds = %62, %10
  %22 = phi i64 [ undef, %10 ], [ %89, %62 ]
  %23 = phi i64 [ 0, %10 ], [ %89, %62 ]
  %24 = phi %"class.base::span"* [ %6, %10 ], [ %90, %62 ]
  %25 = icmp eq i64 %17, 0
  br i1 %25, label %36, label %26

26:                                               ; preds = %21, %26
  %27 = phi i64 [ %32, %26 ], [ %23, %21 ]
  %28 = phi %"class.base::span"* [ %33, %26 ], [ %24, %21 ]
  %29 = phi i64 [ %34, %26 ], [ %17, %21 ]
  %30 = getelementptr inbounds %"class.base::span", %"class.base::span"* %28, i64 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %27
  %33 = getelementptr inbounds %"class.base::span", %"class.base::span"* %28, i64 1
  %34 = add i64 %29, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %26, !llvm.loop !14

36:                                               ; preds = %21, %26, %2
  %37 = phi i64 [ 0, %2 ], [ %22, %21 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = icmp eq i64 %37, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = icmp slt i64 %37, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #11
  unreachable

47:                                               ; preds = %43
  %48 = tail call i8* @_Znwm(i64 %37) #10
  store i8* %48, i8** %38, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %37
  store i8* %49, i8** %40, align 8
  %50 = bitcast i8** %39 to i64*
  %51 = ptrtoint i8* %48 to i64
  %52 = sub i64 %37, %51
  %53 = getelementptr i8, i8* %48, i64 %52
  %54 = ptrtoint i8* %53 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 0, i64 %54, i1 false) #9
  %55 = ptrtoint i8* %49 to i64
  store i64 %55, i64* %50, align 8
  br label %56

56:                                               ; preds = %36, %47
  %57 = phi i8* [ null, %36 ], [ %48, %47 ]
  br i1 %9, label %93, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %60 = bitcast i8** %59 to i64*
  %61 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  br label %94

62:                                               ; preds = %62, %19
  %63 = phi i64 [ 0, %19 ], [ %89, %62 ]
  %64 = phi %"class.base::span"* [ %6, %19 ], [ %90, %62 ]
  %65 = phi i64 [ %20, %19 ], [ %91, %62 ]
  %66 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %63
  %69 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 1, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %68
  %72 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %71
  %75 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 3, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %74
  %78 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 4, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %77
  %81 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 5, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  %84 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 6, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %83
  %87 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 7, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %86
  %90 = getelementptr inbounds %"class.base::span", %"class.base::span"* %64, i64 8
  %91 = add i64 %65, -8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %21, label %62

93:                                               ; preds = %111, %56
  ret void

94:                                               ; preds = %58, %111
  %95 = phi i8* [ %57, %58 ], [ %112, %111 ]
  %96 = phi %"class.base::span"* [ %6, %58 ], [ %113, %111 ]
  %97 = getelementptr inbounds %"class.base::span", %"class.base::span"* %96, i64 0, i32 1
  %98 = load i8*, i8** %97, align 8, !noalias !16
  %99 = getelementptr inbounds %"class.base::span", %"class.base::span"* %96, i64 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8, !noalias !16
  %101 = getelementptr inbounds i8, i8* %98, i64 %100
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %3, i8* %98, i8* %98, i8* %101) #9
  %102 = load i8*, i8** %97, align 8, !noalias !19
  %103 = load i64, i64* %99, align 8, !noalias !19
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %4, i8* %102, i8* %104, i8* %104) #9
  %105 = load i64, i64* %60, align 8
  %106 = load i8*, i8** %61, align 8
  %107 = ptrtoint i8* %106 to i64
  %108 = sub i64 %105, %107
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %94
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %106, i64 %108, i1 false) #9
  br label %111

111:                                              ; preds = %94, %110
  %112 = getelementptr inbounds i8, i8* %95, i64 %108
  %113 = getelementptr inbounds %"class.base::span", %"class.base::span"* %96, i64 1
  %114 = icmp eq %"class.base::span"* %113, %8
  br i1 %114, label %93, label %94
}

declare i32 @ECDH_compute_key(i8*, i64, %struct.ec_point_st*, %struct.ec_key_st*, i8* (i8*, i64, i8*, i64*)*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN6crypto10HkdfSha256EN4base4spanIKhLm18446744073709551615EEES3_S3_m(%"class.std::__1::vector"* sret, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st*) local_unnamed_addr #2

declare %struct.evp_aead_st* @EVP_aead_aes_128_gcm() local_unnamed_addr #2

declare i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st*, %struct.evp_aead_st*, i8*, i64, i64, %struct.engine_st*) local_unnamed_addr #2

declare i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st*) local_unnamed_addr #2

declare void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st*) local_unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #9
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #9
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* %29, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #9
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %48, i8* %50) #9
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  ret void
}

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %1
  %27 = insertvalue { i64, i8* } undef, i64 %23, 0
  %28 = insertvalue { i64, i8* } %27, i8* %26, 1
  ret { i64, i8* } %28
}

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

declare %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @EC_POINT_oct2point(%struct.ec_group_st*, %struct.ec_point_st*, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @EC_KEY_check_key(%struct.ec_key_st*) local_unnamed_addr #2

declare void @EC_POINT_free(%struct.ec_point_st*) local_unnamed_addr #2

declare i64 @EC_POINT_point2oct(%struct.ec_group_st*, %struct.ec_point_st*, i32, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @EC_KEY_generate_key(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @EC_KEY_set_private_key(%struct.ec_key_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @EC_POINT_mul(%struct.ec_group_st*, %struct.ec_point_st*, %struct.bignum_st*, %struct.ec_point_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6syncer12_GLOBAL__N_122SecureBoxAesGcmEncryptEN4base4spanIKhLm18446744073709551615EEES4_S4_S4_RKN6crypto21OpenSSLErrStackTracerE: argument 0"}
!4 = distinct !{!4, !"_ZN6syncer12_GLOBAL__N_122SecureBoxAesGcmEncryptEN4base4spanIKhLm18446744073709551615EEES4_S4_S4_RKN6crypto21OpenSSLErrStackTracerE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6syncer12_GLOBAL__N_118ECPublicKeyToBytesEPK9ec_key_stRKN6crypto21OpenSSLErrStackTracerE: argument 0"}
!7 = distinct !{!7, !"_ZN6syncer12_GLOBAL__N_118ECPublicKeyToBytesEPK9ec_key_stRKN6crypto21OpenSSLErrStackTracerE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6syncer12_GLOBAL__N_122SecureBoxAesGcmDecryptEN4base4spanIKhLm18446744073709551615EEES4_S4_S4_RKN6crypto21OpenSSLErrStackTracerE: argument 0"}
!10 = distinct !{!10, !"_ZN6syncer12_GLOBAL__N_122SecureBoxAesGcmDecryptEN4base4spanIKhLm18446744073709551615EEES4_S4_S4_RKN6crypto21OpenSSLErrStackTracerE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6syncer12_GLOBAL__N_118ECPublicKeyToBytesEPK9ec_key_stRKN6crypto21OpenSSLErrStackTracerE: argument 0"}
!13 = distinct !{!13, !"_ZN6syncer12_GLOBAL__N_118ECPublicKeyToBytesEPK9ec_key_stRKN6crypto21OpenSSLErrStackTracerE"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!22 = !{i8 0, i8 2}
