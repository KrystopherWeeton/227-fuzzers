; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkMorphologyImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkMorphologyImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.232 = type { %class.SkAlignedSTStorage.233, %class.SkTArray.234 }
%class.SkAlignedSTStorage.233 = type { [16 x i8] }
%class.SkTArray.234 = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrMorphologyEffect = type { %class.GrFragmentProcessor.base, i32, i32, i32, i8, [2 x float], [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.24 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.24 = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.232 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.20 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.19 }
%class.sk_sp.19 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTArray.20 = type { %"class.std::__1::unique_ptr.16"*, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.37*, i32, i32 }
%class.SkTArray.37 = type { i32*, i64 }
%"class.(anonymous namespace)::SkMorphologyImageFilter" = type { %class.SkImageFilter_Base.base, i32, %struct.SkSize }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%struct.SkSize = type { float, float }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.38*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.38*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.38*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.38 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.39, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.39 = type { %"struct.std::__1::atomic" }
%class.sk_sp.40 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.40, %"class.skif::LayerSpace.41" }
%"class.skif::LayerSpace.41" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.114, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.114 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.115, %class.sk_sp.116, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.152" }
%class.SkNVRefCnt.115 = type { %"struct.std::__1::atomic" }
%class.sk_sp.116 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.117 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.38, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.117 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.118, void (i8*)*, i8* }
%class.SkNVRefCnt.118 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.119, i32, [4 x i8] }
%union.anon.119 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.116, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.149, %class.sk_sp.151, %class.sk_sp.151 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.129, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.140, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.121 }
%class.SkTHashTable.121 = type { i32, i32, %class.SkAutoTArray.122 }
%class.SkAutoTArray.122 = type { %"class.std::__1::unique_ptr.123" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.129 = type { %class.SkTHashTable.130 }
%class.SkTHashTable.130 = type { i32, i32, %class.SkAutoTArray.131 }
%class.SkAutoTArray.131 = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.138, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.138 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.139, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.139 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.140 = type { %class.SkTHashTable.141 }
%class.SkTHashTable.141 = type { i32, i32, %class.SkAutoTArray.142 }
%class.SkAutoTArray.142 = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.149 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.150, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.150 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.151 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.223, i32, i32 }
%class.sk_sp.223 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkBitmap = type { %class.sk_sp.221, %class.SkPixmap, %class.sk_sp.222 }
%class.sk_sp.221 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.222 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkPoint = type { float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.43", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.215" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.42 }
%class.sk_sp.42 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.46, %class.SkTHashMap.53, %class.SkTHashMap.63, %class.SkTArray.74, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.46 = type { %"class.std::__1::unique_ptr.47"*, i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkTHashMap.53 = type { %class.SkTHashTable.54 }
%class.SkTHashTable.54 = type { i32, i32, %class.SkAutoTArray.55 }
%class.SkAutoTArray.55 = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.59" }
%"struct.std::__1::pair.59" = type { i32, i32 }
%class.SkTHashMap.63 = type { %class.SkTHashTable.64 }
%class.SkTHashTable.64 = type { i32, i32, %class.SkAutoTArray.65 }
%class.SkAutoTArray.65 = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.69" }
%"struct.std::__1::pair.69" = type { i32, %class.SkTArray.70* }
%class.SkTArray.70 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.74 = type { %"class.std::__1::unique_ptr.75"*, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.70, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.93 }
%class.SkFibBlockSizes.93 = type { i32 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.100, %class.SkTArray.109, %class.GrOpsTask*, %class.SkSTArray.181, %class.SkSTArray.183, %"class.std::__1::unique_ptr.185", %class.sk_sp.201, %class.GrTokenTracker, i8, i8, %class.SkTArray.202, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.100 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.101", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.104, i8, [7 x i8] }>
%class.sk_sp.104 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.105, i8*, i64 }
%class.GrNonAtomicRef.105 = type { i32 }
%class.SkTArray.109 = type { %class.sk_sp.110*, i64 }
%class.sk_sp.110 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.111, %class.SkTArray.157, i32, i32, %class.SkSTArray.164, %class.SkSTArray.164, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.111 = type { %class.SkAlignedSTStorage.112, %class.SkTArray.113 }
%class.SkAlignedSTStorage.112 = type { [8 x i8] }
%class.SkTArray.113 = type { %class.sk_sp.114*, i64 }
%class.SkTArray.157 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.158", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.164 = type { %class.SkAlignedSTStorage.165, %class.SkTArray.166 }
%class.SkAlignedSTStorage.165 = type { [8 x i8] }
%class.SkTArray.166 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.167, %class.sk_sp.178, %class.SkTArray.180, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.167 = type { %class.SkAlignedSTStorage.168, %class.SkTArray.169 }
%class.SkAlignedSTStorage.168 = type { [2000 x i8] }
%class.SkTArray.169 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.170", %class.GrOp* }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.170", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.25" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.176 }
%union.anon.176 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.177, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.177 = type { i32 }
%class.sk_sp.178 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.179, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.179 = type { %"struct.std::__1::atomic" }
%class.SkTArray.180 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.181 = type { %class.SkAlignedSTStorage.182, %class.SkTArray.37 }
%class.SkAlignedSTStorage.182 = type { [32 x i8] }
%class.SkSTArray.183 = type { %class.SkAlignedSTStorage.184, %class.SkTArray.109 }
%class.SkAlignedSTStorage.184 = type { [32 x i8] }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.188, %"class.std::__1::unique_ptr.192", %class.GrPathRenderer* }
%class.SkSTArray.188 = type { %class.SkAlignedSTStorage.189, %class.SkTArray.190 }
%class.SkAlignedSTStorage.189 = type { [64 x i8] }
%class.SkTArray.190 = type { %class.sk_sp.191*, i64 }
%class.sk_sp.191 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.201 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.202 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.203, i32, %class.GrRenderTask** }
%class.SkTHashMap.203 = type { %class.SkTHashTable.204 }
%class.SkTHashTable.204 = type { i32, i32, %class.SkAutoTArray.205 }
%class.SkAutoTArray.205 = type { %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %class.GrProxyProvider* }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.227, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.227 = type { %class.GrOpsTask* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.Impl = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.240, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.242, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.251], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.237 }
%union.anon.237 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.240 = type { %class.SkAlignedSTStorage.241, %class.SkTArray }
%class.SkAlignedSTStorage.241 = type { [120 x i8] }
%class.SkSTArray.242 = type { %class.SkAlignedSTStorage.243, %class.SkTArray.244 }
%class.SkAlignedSTStorage.243 = type { [16 x i8] }
%class.SkTArray.244 = type { %"class.std::__1::unique_ptr.245"*, i64 }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.251 = type { %class.SkAlignedSTStorage.252, %class.SkTArray }
%class.SkAlignedSTStorage.252 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.240, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.242, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.251], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.238 }
%struct.anon.238 = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN18GrMorphologyEffectD0Ev = comdat any

$_ZNK18GrMorphologyEffect4nameEv = comdat any

$_ZNK18GrMorphologyEffect5cloneEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [24 x i8] c"SkMorphologyImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"SkMorphologyImageFilterImpl\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV18GrMorphologyEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrMorphologyEffect*)* @_ZN18GrMorphologyEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrMorphologyEffect*)* @_ZNK18GrMorphologyEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrMorphologyEffect*)* @_ZNK18GrMorphologyEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrMorphologyEffect*)* @_ZNK18GrMorphologyEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrMorphologyEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK18GrMorphologyEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrMorphologyEffect*, %class.GrFragmentProcessor*)* @_ZNK18GrMorphologyEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_123SkMorphologyImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkMorphologyImageFilter"*)* @_ZN12_GLOBAL__N_123SkMorphologyImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkMorphologyImageFilter"*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkMorphologyImageFilter"*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkMorphologyImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkMorphologyImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.40*, %"class.(anonymous namespace)::SkMorphologyImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkMorphologyImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZL23SK_PMColor4fTRANSPARENT = internal unnamed_addr constant %struct.SkRGBA4f zeroinitializer, align 4
@__const._ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.232 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.232 { %class.SkAlignedSTStorage.233 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.234 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"Morphology\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTVZNK18GrMorphologyEffect17onMakeProgramImplEvE4Impl = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.Impl*)* @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4ImplD0Ev to i8*), i8* bitcast (void (%class.Impl*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.Impl*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"half4 color = half4(%c);\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"float2 coord = %s;\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"coord.%c -= %d;\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"float highBound = min(%s.y, coord.%c + %f);\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"coord.%c = max(%s.x, coord.%c);\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"for (int i = 0; i < %d; i++) {\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"coord\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"    color = %s(color, %s);\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"    coord.%c += 1;\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"    coord.%c = min(highBound, coord.%c);\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"return color * %s;\00", align 1
@switch.table._ZNK12_GLOBAL__N_123SkMorphologyImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN18GrMorphologyEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrMorphologyEffect*, %class.GrMorphologyEffect*), void (%class.GrMorphologyEffect*, %class.GrMorphologyEffect*)* @_ZN18GrMorphologyEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters6DilateEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = fcmp olt float %1, 0.000000e+00
  %8 = fcmp olt float %2, 0.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %11, align 8
  br label %59

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 88) #15
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %15 = bitcast %class.sk_sp* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  %17 = bitcast %class.sk_sp* %6 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %20, 0xFFF0000000000000
  br i1 %21, label %34, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds float, float* %19, i64 1
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %24, 0xFFF0000000000000
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds float, float* %19, i64 2
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, 0x7FF0000000000000
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds float, float* %19, i64 3
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %32, 0x7FF0000000000000
  br i1 %33, label %34, label %35

34:                                               ; preds = %30, %26, %22, %12
  br label %35

35:                                               ; preds = %30, %34
  %36 = phi %struct.SkRect* [ %18, %34 ], [ null, %30 ]
  %37 = bitcast i8* %13 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %37, %class.sk_sp* nonnull %6, i32 1, %struct.SkRect* %36) #14
  %38 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkMorphologyImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %13, i64 76
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %13, i64 80
  %42 = insertelement <2 x float> undef, float %1, i32 0
  %43 = insertelement <2 x float> %42, float %2, i32 1
  %44 = bitcast i8* %41 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 8
  %45 = bitcast %class.sk_sp* %0 to i8**
  store i8* %13, i8** %45, align 8
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %47 = load %class.SkImageFilter*, %class.SkImageFilter** %46, align 8
  %48 = icmp eq %class.SkImageFilter* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkImageFilter* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkImageFilter* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %53, %49, %35, %10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters5ErodeEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = fcmp olt float %1, 0.000000e+00
  %8 = fcmp olt float %2, 0.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %11, align 8
  br label %59

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 88) #15
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %15 = bitcast %class.sk_sp* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %14, align 8
  %17 = bitcast %class.sk_sp* %6 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %20, 0xFFF0000000000000
  br i1 %21, label %34, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds float, float* %19, i64 1
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %24, 0xFFF0000000000000
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds float, float* %19, i64 2
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, 0x7FF0000000000000
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds float, float* %19, i64 3
  %32 = load float, float* %31, align 4
  %33 = fcmp une float %32, 0x7FF0000000000000
  br i1 %33, label %34, label %35

34:                                               ; preds = %30, %26, %22, %12
  br label %35

35:                                               ; preds = %30, %34
  %36 = phi %struct.SkRect* [ %18, %34 ], [ null, %30 ]
  %37 = bitcast i8* %13 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %37, %class.sk_sp* nonnull %6, i32 1, %struct.SkRect* %36) #14
  %38 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkMorphologyImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %13, i64 76
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %13, i64 80
  %42 = insertelement <2 x float> undef, float %1, i32 0
  %43 = insertelement <2 x float> %42, float %2, i32 1
  %44 = bitcast i8* %41 to <2 x float>*
  store <2 x float> %43, <2 x float>* %44, align 8
  %45 = bitcast %class.sk_sp* %0 to i8**
  store i8* %13, i8** %45, align 8
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %47 = load %class.SkImageFilter*, %class.SkImageFilter** %46, align 8
  %48 = icmp eq %class.SkImageFilter* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkImageFilter* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkImageFilter* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %53, %49, %35, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z43SkRegisterMorphologyImageFilterFlattenablesv() local_unnamed_addr #2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer) #14
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer) #14
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %"class.SkImageFilter_Base::Common", align 8
  %6 = alloca %"struct.SkImageFilters::CropRect", align 4
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.232 }* @__const._ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %5, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %5, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #14
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %200

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -1
  %22 = icmp ult i32 %21, 73
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #14
  %25 = sitofp i32 %24 to float
  %26 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #14
  %27 = sitofp i32 %26 to float
  br label %31

28:                                               ; preds = %18
  %29 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #14
  %30 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #14
  br label %31

31:                                               ; preds = %28, %23
  %32 = phi float [ %25, %23 ], [ %29, %28 ]
  %33 = phi float [ %27, %23 ], [ %30, %28 ]
  %34 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #14
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %37

37:                                               ; preds = %31, %36
  %38 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i32 %34, i32 0
  switch i32 %41, label %198 [
    i32 1, label %42
    i32 0, label %120
  ]

42:                                               ; preds = %37
  %43 = bitcast i8* %10 to %class.sk_sp**
  %44 = load %class.sk_sp*, %class.sk_sp** %43, align 8, !noalias !3
  %45 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %44, i64 0, i32 0
  %46 = load %class.SkImageFilter*, %class.SkImageFilter** %45, align 8, !noalias !3
  %47 = icmp eq %class.SkImageFilter* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !3
  br label %51

51:                                               ; preds = %42, %48
  %52 = bitcast %"struct.SkImageFilters::CropRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #14
  %53 = load i32, i32* %9, align 8
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %55, i64 16, i1 false) #14
  %56 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = fcmp olt float %32, 0.000000e+00
  %58 = fcmp olt float %33, 0.000000e+00
  %59 = or i1 %57, %58
  br i1 %59, label %107, label %60

60:                                               ; preds = %51
  %61 = ptrtoint %class.SkImageFilter* %46 to i64
  %62 = call i8* @_Znwm(i64 88) #15, !noalias !6
  %63 = bitcast %class.sk_sp* %3 to i64*
  store i64 %61, i64* %63, align 8, !noalias !6
  %64 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0
  %65 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %6, i64 0, i32 0, i32 0
  %66 = load float, float* %65, align 4, !noalias !6
  %67 = fcmp une float %66, 0xFFF0000000000000
  br i1 %67, label %80, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds float, float* %65, i64 1
  %70 = load float, float* %69, align 4, !noalias !6
  %71 = fcmp une float %70, 0xFFF0000000000000
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds float, float* %65, i64 2
  %74 = load float, float* %73, align 4, !noalias !6
  %75 = fcmp une float %74, 0x7FF0000000000000
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds float, float* %65, i64 3
  %78 = load float, float* %77, align 4, !noalias !6
  %79 = fcmp une float %78, 0x7FF0000000000000
  br i1 %79, label %80, label %81

80:                                               ; preds = %76, %72, %68, %60
  br label %81

81:                                               ; preds = %80, %76
  %82 = phi %struct.SkRect* [ %64, %80 ], [ null, %76 ]
  %83 = bitcast i8* %62 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %83, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* %82) #14, !noalias !6
  %84 = bitcast i8* %62 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkMorphologyImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8, !noalias !6
  %85 = getelementptr inbounds i8, i8* %62, i64 76
  %86 = bitcast i8* %85 to i32*
  store i32 1, i32* %86, align 4, !noalias !6
  %87 = getelementptr inbounds i8, i8* %62, i64 80
  %88 = insertelement <2 x float> undef, float %32, i32 0
  %89 = insertelement <2 x float> %88, float %33, i32 1
  %90 = bitcast i8* %87 to <2 x float>*
  store <2 x float> %89, <2 x float>* %90, align 8, !noalias !6
  %91 = ptrtoint i8* %62 to i64
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %93 = load %class.SkImageFilter*, %class.SkImageFilter** %92, align 8, !noalias !6
  %94 = icmp eq %class.SkImageFilter* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %81
  %96 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel, !noalias !6
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkImageFilter* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.SkImageFilter* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8, !noalias !6
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8, !noalias !6
  call void %104(%class.SkRefCntBase* nonnull %100) #14, !noalias !6
  br label %105

105:                                              ; preds = %81, %99, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  %106 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %91, i64* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #14
  br label %200

107:                                              ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  %108 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 0, i64* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #14
  %109 = icmp eq %class.SkImageFilter* %46, null
  br i1 %109, label %200, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %200

114:                                              ; preds = %110
  %115 = bitcast %class.SkImageFilter* %46 to %class.SkRefCntBase*
  %116 = bitcast %class.SkImageFilter* %46 to void (%class.SkRefCntBase*)***
  %117 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, i64 2
  %119 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, align 8
  call void %119(%class.SkRefCntBase* nonnull %115) #14
  br label %200

120:                                              ; preds = %37
  %121 = bitcast i8* %10 to %class.sk_sp**
  %122 = load %class.sk_sp*, %class.sk_sp** %121, align 8, !noalias !9
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = load %class.SkImageFilter*, %class.SkImageFilter** %123, align 8, !noalias !9
  %125 = icmp eq %class.SkImageFilter* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 1 monotonic, !noalias !9
  br label %129

129:                                              ; preds = %120, %126
  %130 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #14
  %131 = load i32, i32* %9, align 8
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* align 4 %133, i64 16, i1 false) #14
  %134 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134)
  %135 = fcmp olt float %32, 0.000000e+00
  %136 = fcmp olt float %33, 0.000000e+00
  %137 = or i1 %135, %136
  br i1 %137, label %185, label %138

138:                                              ; preds = %129
  %139 = ptrtoint %class.SkImageFilter* %124 to i64
  %140 = call i8* @_Znwm(i64 88) #15, !noalias !12
  %141 = bitcast %class.sk_sp* %4 to i64*
  store i64 %139, i64* %141, align 8, !noalias !12
  %142 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0
  %143 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0, i32 0
  %144 = load float, float* %143, align 4, !noalias !12
  %145 = fcmp une float %144, 0xFFF0000000000000
  br i1 %145, label %158, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds float, float* %143, i64 1
  %148 = load float, float* %147, align 4, !noalias !12
  %149 = fcmp une float %148, 0xFFF0000000000000
  br i1 %149, label %158, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds float, float* %143, i64 2
  %152 = load float, float* %151, align 4, !noalias !12
  %153 = fcmp une float %152, 0x7FF0000000000000
  br i1 %153, label %158, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds float, float* %143, i64 3
  %156 = load float, float* %155, align 4, !noalias !12
  %157 = fcmp une float %156, 0x7FF0000000000000
  br i1 %157, label %158, label %159

158:                                              ; preds = %154, %150, %146, %138
  br label %159

159:                                              ; preds = %158, %154
  %160 = phi %struct.SkRect* [ %142, %158 ], [ null, %154 ]
  %161 = bitcast i8* %140 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %161, %class.sk_sp* nonnull %4, i32 1, %struct.SkRect* %160) #14, !noalias !12
  %162 = bitcast i8* %140 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkMorphologyImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8, !noalias !12
  %163 = getelementptr inbounds i8, i8* %140, i64 76
  %164 = bitcast i8* %163 to i32*
  store i32 0, i32* %164, align 4, !noalias !12
  %165 = getelementptr inbounds i8, i8* %140, i64 80
  %166 = insertelement <2 x float> undef, float %32, i32 0
  %167 = insertelement <2 x float> %166, float %33, i32 1
  %168 = bitcast i8* %165 to <2 x float>*
  store <2 x float> %167, <2 x float>* %168, align 8, !noalias !12
  %169 = ptrtoint i8* %140 to i64
  %170 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %171 = load %class.SkImageFilter*, %class.SkImageFilter** %170, align 8, !noalias !12
  %172 = icmp eq %class.SkImageFilter* %171, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %159
  %174 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %171, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel, !noalias !12
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = bitcast %class.SkImageFilter* %171 to %class.SkRefCntBase*
  %179 = bitcast %class.SkImageFilter* %171 to void (%class.SkRefCntBase*)***
  %180 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %179, align 8, !noalias !12
  %181 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, i64 2
  %182 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, align 8, !noalias !12
  call void %182(%class.SkRefCntBase* nonnull %178) #14, !noalias !12
  br label %183

183:                                              ; preds = %159, %177, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134)
  %184 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %169, i64* %184, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #14
  br label %200

185:                                              ; preds = %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134)
  %186 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 0, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #14
  %187 = icmp eq %class.SkImageFilter* %124, null
  br i1 %187, label %200, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw add i32* %189, i32 -1 acq_rel
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %200

192:                                              ; preds = %188
  %193 = bitcast %class.SkImageFilter* %124 to %class.SkRefCntBase*
  %194 = bitcast %class.SkImageFilter* %124 to void (%class.SkRefCntBase*)***
  %195 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %194, align 8
  %196 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %195, i64 2
  %197 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, align 8
  call void %197(%class.SkRefCntBase* nonnull %193) #14
  br label %200

198:                                              ; preds = %37
  %199 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %199, align 8
  br label %200

200:                                              ; preds = %183, %105, %192, %188, %185, %114, %110, %107, %198, %16
  %201 = load i64, i64* %13, align 8
  %202 = and i64 %201, 4294967294
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %200
  %205 = bitcast i8* %10 to %class.sk_sp**
  br label %210

206:                                              ; preds = %226, %200
  %207 = phi i64 [ %201, %200 ], [ %228, %226 ]
  %208 = and i64 %207, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %234, label %232

210:                                              ; preds = %226, %204
  %211 = phi i64 [ 0, %204 ], [ %227, %226 ]
  %212 = load %class.sk_sp*, %class.sk_sp** %205, align 8
  %213 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %212, i64 %211, i32 0
  %214 = load %class.SkImageFilter*, %class.SkImageFilter** %213, align 8
  %215 = icmp eq %class.SkImageFilter* %214, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %214, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = bitcast %class.SkImageFilter* %214 to %class.SkRefCntBase*
  %222 = bitcast %class.SkImageFilter* %214 to void (%class.SkRefCntBase*)***
  %223 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, i64 2
  %225 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, align 8
  call void %225(%class.SkRefCntBase* nonnull %221) #14
  br label %226

226:                                              ; preds = %220, %216, %210
  %227 = add nuw nsw i64 %211, 1
  %228 = load i64, i64* %13, align 8
  %229 = lshr i64 %228, 1
  %230 = and i64 %229, 2147483647
  %231 = icmp ult i64 %227, %230
  br i1 %231, label %210, label %206

232:                                              ; preds = %206
  %233 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %233) #14
  br label %234

234:                                              ; preds = %206, %232
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK18GrMorphologyEffect17onMakeProgramImplEv(%class.GrMorphologyEffect* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #15
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 48, i1 false) #14
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.16"**
  store %"class.std::__1::unique_ptr.16"* null, %"class.std::__1::unique_ptr.16"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZNK18GrMorphologyEffect17onMakeProgramImplEvE4Impl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18GrMorphologyEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrMorphologyEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 8
  %9 = or i32 %8, %5
  %10 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = shl i32 %11, 9
  %13 = or i32 %9, %12
  %14 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = or i32 %13, 1024
  %18 = select i1 %16, i32 %13, i32 %17
  %19 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %20, i64 2
  %22 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %21, align 8
  tail call void %22(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrMorphologyEffectC2ERKS_(%class.GrMorphologyEffect*, %class.GrMorphologyEffect* dereferenceable(88)) unnamed_addr #2 align 2 {
  %3 = bitcast %class.GrMorphologyEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrMorphologyEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.24* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrMorphologyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 3
  %26 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %25, align 4
  %28 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 4
  %29 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 4
  %30 = load i8, i8* %29, align 8, !range !2
  store i8 %30, i8* %28, align 8
  %31 = or i32 %7, 16
  store i32 %31, i32* %16, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #14
  %32 = load i8, i8* %29, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 5
  %36 = bitcast [2 x float]* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5
  %39 = bitcast [2 x float]* %38 to i32*
  store i32 %37, i32* %39, align 4
  %40 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %1, i64 0, i32 5, i64 1
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5, i64 1
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 4
  br label %45

45:                                               ; preds = %2, %34
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18GrMorphologyEffect9onIsEqualERK19GrFragmentProcessor(%class.GrMorphologyEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #5 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %class.GrMorphologyEffect*
  %4 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %7 = bitcast %class.GrFragmentProcessor* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %14 = bitcast [4 x i8]* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %12, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 4
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %21 = bitcast i32* %20 to i8*
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %19, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %3, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br label %30

30:                                               ; preds = %24, %17, %10, %2
  %31 = phi i1 [ false, %17 ], [ false, %10 ], [ false, %2 ], [ %29, %24 ]
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.25"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #14
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18GrMorphologyEffectD0Ev(%class.GrMorphologyEffect*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #14
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.24* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #14
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrMorphologyEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrMorphologyEffect4nameEv(%class.GrMorphologyEffect*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK18GrMorphologyEffect5cloneEv(%class.GrMorphologyEffect*) unnamed_addr #2 comdat align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #14
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrMorphologyEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 64, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrMorphologyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds i8, i8* %2, i64 68
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds i8, i8* %2, i64 72
  %38 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 8, !range !2
  store i8 %39, i8* %37, align 8
  %40 = or i32 %7, 16
  store i32 %40, i32* %21, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #14
  %41 = load i8, i8* %38, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %54, label %43

43:                                               ; preds = %1
  %44 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5
  %45 = bitcast [2 x float]* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds i8, i8* %2, i64 76
  %48 = bitcast i8* %47 to i32*
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5, i64 1
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i8, i8* %2, i64 80
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  br label %54

54:                                               ; preds = %1, %43
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkMorphologyImageFilterD0Ev(%"class.(anonymous namespace)::SkMorphologyImageFilter"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #14
  %3 = bitcast %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkMorphologyImageFilter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_123SkMorphologyImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkMorphologyImageFilter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkMorphologyImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0, i64 0, i32 2, i32 0
  %5 = load float, float* %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %7 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, i64 5
  %9 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, float %5) #14
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0, i64 0, i32 2, i32 1
  %11 = load float, float* %10, align 4
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %11) #14
  %15 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %18 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %18, i64 7
  %20 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, i32 %16) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #2 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkMorphologyImageFilter"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0 to %class.SkImageFilter*
  %4 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 0) #14
  %5 = icmp eq %class.SkImageFilter* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %3, i32 0) #14
  %8 = bitcast %class.SkImageFilter* %7 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %9 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %9, i64 7
  %11 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %10, align 8
  %12 = tail call { <2 x float>, <2 x float> } %11(%class.SkImageFilter* %7, %struct.SkRect* dereferenceable(16) %1) #14
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  br label %21

15:                                               ; preds = %2
  %16 = bitcast %struct.SkRect* %1 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  br label %21

21:                                               ; preds = %15, %6
  %22 = phi <2 x float> [ %20, %15 ], [ %14, %6 ]
  %23 = phi <2 x float> [ %17, %15 ], [ %13, %6 ]
  %24 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0, i64 0, i32 2, i32 0
  %25 = bitcast float* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fsub <2 x float> %23, %26
  %28 = fadd <2 x float> %22, %26
  %29 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %27, 0
  %30 = insertvalue { <2 x float>, <2 x float> } %29, <2 x float> %28, 1
  ret { <2 x float>, <2 x float> } %30
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.40* noalias sret, %"class.(anonymous namespace)::SkMorphologyImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.14, align 8
  %6 = alloca %class.sk_sp.14, align 8
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %struct.SkIRect, align 4
  %10 = alloca %class.GrImageInfo, align 8
  %11 = alloca %class.GrImageInfo, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %class.GrImageInfo, align 8
  %15 = alloca %class.GrImageInfo, align 8
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.sk_sp.14, align 8
  %20 = alloca <2 x float>, align 8
  %21 = alloca %"class.skif::FilterResult", align 8
  %22 = alloca i64, align 8
  %23 = bitcast i64* %22 to %struct.SkIPoint*
  %24 = alloca %struct.SkIRect, align 4
  %25 = alloca %class.sk_sp.40, align 8
  %26 = alloca %"class.skif::Context", align 8
  %27 = alloca %struct.SkIRect, align 4
  %28 = alloca %class.sk_sp.40, align 8
  %29 = alloca %class.SkBitmap, align 8
  %30 = alloca %struct.SkImageInfo, align 8
  %31 = alloca %class.SkBitmap, align 8
  %32 = alloca %class.SkBitmap, align 8
  %33 = alloca { i64, i64 }, align 8
  %34 = bitcast { i64, i64 }* %33 to %struct.SkIRect*
  %35 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  store i64 0, i64* %22, align 8
  %36 = bitcast %"class.(anonymous namespace)::SkMorphologyImageFilter"* %1 to %class.SkImageFilter_Base*
  %37 = bitcast %"class.skif::FilterResult"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14, !noalias !15
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %21, %class.SkImageFilter_Base* %36, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #14, !noalias !15
  %38 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %21, i64 0, i32 0, i32 0
  %39 = load %class.SkSpecialImage*, %class.SkSpecialImage** %38, align 8, !noalias !18
  %40 = icmp eq %class.SkSpecialImage* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %4
  %42 = bitcast i64* %22 to i32*
  store i32 0, i32* %42, align 8, !noalias !18
  %43 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %23, i64 0, i32 1
  store i32 0, i32* %43, align 4, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14, !noalias !15
  %44 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %44, align 8
  br label %1024

45:                                               ; preds = %4
  %46 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %21, i64 0, i32 1, i32 0
  %47 = bitcast %struct.SkIPoint* %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !18
  store i64 %48, i64* %22, align 8, !noalias !18
  %49 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !18
  %51 = atomicrmw add i32* %49, i32 -1 acq_rel, !noalias !15
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %45
  %54 = bitcast %class.SkSpecialImage* %39 to %class.SkRefCntBase*
  %55 = bitcast %class.SkSpecialImage* %39 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8, !noalias !15
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8, !noalias !15
  call void %58(%class.SkRefCntBase* nonnull %54) #14, !noalias !15
  br label %59

59:                                               ; preds = %45, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14, !noalias !15
  %60 = bitcast %struct.SkIRect* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #14
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 0
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 1
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 2
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 3
  %65 = bitcast %class.sk_sp.40* %25 to i8*
  %66 = bitcast %struct.SkIRect* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #14
  %67 = bitcast %"class.skif::Context"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %67) #14
  call void @_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE(%"class.skif::Context"* nonnull sret %26, %class.SkImageFilter_Base* %36, %"class.skif::Context"* dereferenceable(136) %2) #14
  call void @_ZNK18SkImageFilter_Base19applyCropRectAndPadERKN4skif7ContextEP14SkSpecialImageP8SkIPointP7SkIRect(%class.sk_sp.40* nonnull sret %25, %class.SkImageFilter_Base* %36, %"class.skif::Context"* nonnull dereferenceable(136) %26, %class.SkSpecialImage* nonnull %39, %struct.SkIPoint* nonnull %23, %struct.SkIRect* nonnull %24) #14
  %68 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %25, i64 0, i32 0
  %69 = bitcast %class.sk_sp.40* %25 to i64*
  %70 = load i64, i64* %69, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %68, align 8
  %71 = atomicrmw add i32* %49, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %59
  %74 = bitcast %class.SkSpecialImage* %39 to %class.SkRefCntBase*
  %75 = bitcast %class.SkSpecialImage* %39 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #14
  br label %79

79:                                               ; preds = %59, %73
  %80 = load %class.SkSpecialImage*, %class.SkSpecialImage** %68, align 8
  %81 = icmp eq %class.SkSpecialImage* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkSpecialImage* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkSpecialImage* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #14
  br label %92

92:                                               ; preds = %79, %82, %86
  %93 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %26, i64 0, i32 5, i32 0, i32 0
  %94 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %95 = icmp eq %class.SkSpecialImage* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkSpecialImage* %94 to %class.SkRefCntBase*
  %102 = bitcast %class.SkSpecialImage* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #14
  br label %106

106:                                              ; preds = %92, %96, %100
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #14
  %107 = inttoptr i64 %70 to %class.SkSpecialImage*
  %108 = icmp eq i64 %70, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  br label %1024

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %113 = bitcast <2 x float>* %20 to %struct.SkPoint*
  %114 = bitcast <2 x float>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #14
  %115 = getelementptr inbounds <2 x float>, <2 x float>* %20, i64 0, i64 0
  %116 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %113, i64 0, i32 1
  %117 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %1, i64 0, i32 2, i32 0
  %118 = bitcast float* %117 to i64*
  %119 = load i64, i64* %118, align 4
  %120 = bitcast <2 x float>* %20 to i64*
  store i64 %119, i64* %120, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %112, %struct.SkPoint* nonnull %113, %struct.SkPoint* nonnull %113, i32 1) #14
  %121 = load float, float* %115, align 8
  %122 = call float @llvm.fabs.f32(float %121) #14
  store float %122, float* %115, align 8
  %123 = load float, float* %116, align 4
  %124 = call float @llvm.fabs.f32(float %123) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #14
  %125 = fadd float %122, 5.000000e-01
  %126 = call float @llvm.floor.f32(float %125)
  %127 = fcmp olt float %126, 0x41DFFFFFE0000000
  %128 = select i1 %127, float %126, float 0x41DFFFFFE0000000
  %129 = fcmp ogt float %128, 0xC1DFFFFFE0000000
  %130 = select i1 %129, float %128, float 0xC1DFFFFFE0000000
  %131 = fptosi float %130 to i32
  %132 = fadd float %124, 5.000000e-01
  %133 = call float @llvm.floor.f32(float %132)
  %134 = fcmp olt float %133, 0x41DFFFFFE0000000
  %135 = select i1 %134, float %133, float 0x41DFFFFFE0000000
  %136 = fcmp ogt float %135, 0xC1DFFFFFE0000000
  %137 = select i1 %136, float %135, float 0xC1DFFFFFE0000000
  %138 = fptosi float %137 to i32
  %139 = or i32 %138, %131
  %140 = icmp slt i32 %139, 0
  %141 = icmp sgt i32 %131, 100
  %142 = or i1 %141, %140
  %143 = icmp sgt i32 %138, 100
  %144 = or i1 %143, %142
  br i1 %144, label %145, label %147

145:                                              ; preds = %111
  %146 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %146, align 8
  br label %1011

147:                                              ; preds = %111
  %148 = bitcast %struct.SkIRect* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #14
  %149 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %27, i64 0, i32 0
  %150 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %27, i64 0, i32 1
  %151 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %27, i64 0, i32 2
  %152 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %27, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %148, i8* nonnull align 4 %60, i64 16, i1 false)
  %153 = bitcast i64* %22 to i32*
  %154 = load i32, i32* %153, align 8
  %155 = sub nsw i32 0, %154
  %156 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %23, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = sub nsw i32 0, %157
  %159 = load i32, i32* %149, align 4
  %160 = sext i32 %159 to i64
  %161 = sext i32 %155 to i64
  %162 = add nsw i64 %160, %161
  %163 = icmp slt i64 %162, 2147483647
  %164 = select i1 %163, i64 %162, i64 2147483647
  %165 = icmp sgt i64 %164, -2147483647
  %166 = select i1 %165, i64 %164, i64 -2147483647
  %167 = trunc i64 %166 to i32
  store i32 %167, i32* %149, align 4
  %168 = load i32, i32* %150, align 4
  %169 = sext i32 %168 to i64
  %170 = sext i32 %158 to i64
  %171 = add nsw i64 %169, %170
  %172 = icmp slt i64 %171, 2147483647
  %173 = select i1 %172, i64 %171, i64 2147483647
  %174 = icmp sgt i64 %173, -2147483647
  %175 = select i1 %174, i64 %173, i64 -2147483647
  %176 = trunc i64 %175 to i32
  store i32 %176, i32* %150, align 4
  %177 = load i32, i32* %151, align 4
  %178 = sext i32 %177 to i64
  %179 = add nsw i64 %178, %161
  %180 = icmp slt i64 %179, 2147483647
  %181 = select i1 %180, i64 %179, i64 2147483647
  %182 = icmp sgt i64 %181, -2147483647
  %183 = select i1 %182, i64 %181, i64 -2147483647
  %184 = trunc i64 %183 to i32
  store i32 %184, i32* %151, align 4
  %185 = load i32, i32* %152, align 4
  %186 = sext i32 %185 to i64
  %187 = add nsw i64 %186, %170
  %188 = icmp slt i64 %187, 2147483647
  %189 = select i1 %188, i64 %187, i64 2147483647
  %190 = icmp sgt i64 %189, -2147483647
  %191 = select i1 %190, i64 %189, i64 -2147483647
  %192 = trunc i64 %191 to i32
  store i32 %192, i32* %152, align 4
  %193 = icmp eq i32 %139, 0
  br i1 %193, label %194, label %199

194:                                              ; preds = %147
  %195 = load i32, i32* %61, align 4
  %196 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %195, i32* %196, align 4
  %197 = load i32, i32* %62, align 4
  %198 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %197, i32* %198, align 4
  call void @_ZNK14SkSpecialImage10makeSubsetERK7SkIRect(%class.sk_sp.40* sret %0, %class.SkSpecialImage* nonnull %107, %struct.SkIRect* nonnull dereferenceable(16) %27) #14
  br label %1008

199:                                              ; preds = %147
  %200 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %201 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8
  %202 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %201) #14
  br i1 %202, label %203, label %787

203:                                              ; preds = %199
  %204 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8
  %205 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %204) #14
  %206 = bitcast %class.sk_sp.40* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #14
  %207 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %208 = load i32, i32* %207, align 8
  %209 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %210 = load %class.SkColorSpace*, %class.SkColorSpace** %209, align 8
  %211 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8
  %212 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %211, i64 0, i32 1
  call void @_ZN18SkImageFilter_Base17ImageToColorSpaceEP14SkSpecialImage11SkColorTypeP12SkColorSpaceRK14SkSurfaceProps(%class.sk_sp.40* nonnull sret %28, %class.SkSpecialImage* nonnull %107, i32 %208, %class.SkColorSpace* %210, %class.SkSurfaceProps* dereferenceable(8) %212) #14
  %213 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %28, i64 0, i32 0
  %214 = bitcast %class.sk_sp.40* %28 to i64*
  %215 = load i64, i64* %214, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %213, align 8
  %216 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %107, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = atomicrmw add i32* %216, i32 -1 acq_rel
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %225

219:                                              ; preds = %203
  %220 = inttoptr i64 %70 to %class.SkRefCntBase*
  %221 = inttoptr i64 %70 to void (%class.SkRefCntBase*)***
  %222 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %221, align 8
  %223 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, i64 2
  %224 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, align 8
  call void %224(%class.SkRefCntBase* nonnull %220) #14
  br label %225

225:                                              ; preds = %203, %219
  %226 = load %class.SkSpecialImage*, %class.SkSpecialImage** %213, align 8
  %227 = icmp eq %class.SkSpecialImage* %226, null
  br i1 %227, label %238, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %226, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %238

232:                                              ; preds = %228
  %233 = bitcast %class.SkSpecialImage* %226 to %class.SkRefCntBase*
  %234 = bitcast %class.SkSpecialImage* %226 to void (%class.SkRefCntBase*)***
  %235 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %234, align 8
  %236 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %235, i64 2
  %237 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %236, align 8
  call void %237(%class.SkRefCntBase* nonnull %233) #14
  br label %238

238:                                              ; preds = %225, %228, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #14
  %239 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %239, align 8
  %240 = inttoptr i64 %215 to %class.SkSpecialImage*
  %241 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %1, i64 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = bitcast %class.GrImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %243)
  %244 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244)
  %245 = bitcast %class.GrImageInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245)
  %246 = bitcast %class.GrSurfaceProxyView* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246)
  %247 = bitcast %class.GrSurfaceProxyView* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %247)
  %248 = bitcast %class.sk_sp.14* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248)
  %249 = bitcast { i64, i64 }* %8 to %struct.SkIRect*
  %250 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %251 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %252 = bitcast %class.GrSurfaceProxyView* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %252) #14, !noalias !21
  %253 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %254 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  %255 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 16, i1 false) #14, !noalias !21
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %7, %class.SkSpecialImage* %240, %class.GrRecordingContext* %205) #14, !noalias !21
  %256 = inttoptr i64 %215 to i32 (%class.SkSpecialImage*)***
  %257 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %256, align 8, !noalias !21
  %258 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %257, i64 3
  %259 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %258, align 8, !noalias !21
  %260 = call i32 %259(%class.SkSpecialImage* %240) #14, !noalias !21
  %261 = load %class.SkColorSpace*, %class.SkColorSpace** %209, align 8, !noalias !24
  %262 = icmp eq %class.SkColorSpace* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %238
  %264 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = atomicrmw add i32* %264, i32 1 monotonic, !noalias !27
  br label %266

266:                                              ; preds = %263, %238
  %267 = ptrtoint %class.SkColorSpace* %261 to i64
  %268 = load i32, i32* %207, align 8, !noalias !21
  %269 = icmp ult i32 %268, 21
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  call void @llvm.trap() #14
  unreachable

271:                                              ; preds = %266
  %272 = sext i32 %268 to i64
  %273 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12_GLOBAL__N_123SkMorphologyImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint, i64 0, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %276 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %276) #14, !noalias !21
  %277 = bitcast { i64, i64 }* %8 to i32*
  %278 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %279 = bitcast i64* %278 to i32*
  %280 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %249, i64 0, i32 3
  %281 = load i32, i32* %151, align 4, !noalias !21
  %282 = load i32, i32* %149, align 4, !noalias !21
  %283 = sub i32 %281, %282
  %284 = load i32, i32* %152, align 4, !noalias !21
  %285 = load i32, i32* %150, align 4, !noalias !21
  %286 = sub i32 %284, %285
  %287 = zext i32 %286 to i64
  %288 = shl nuw i64 %287, 32
  %289 = zext i32 %283 to i64
  %290 = or i64 %288, %289
  %291 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 0, i64* %291, align 8, !noalias !21
  store i64 %290, i64* %278, align 8, !noalias !21
  %292 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %292) #14, !noalias !21
  %293 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 0
  %294 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %295 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 2
  %296 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %292, i8* nonnull align 4 %148, i64 16, i1 false) #14, !noalias !21
  %297 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %240, i64 0, i32 2, i32 0
  %298 = load i32, i32* %297, align 4, !noalias !21
  %299 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %240, i64 0, i32 2, i32 1
  %300 = load i32, i32* %299, align 4, !noalias !21
  %301 = load i32, i32* %293, align 4, !noalias !21
  %302 = sext i32 %301 to i64
  %303 = sext i32 %298 to i64
  %304 = add nsw i64 %302, %303
  %305 = icmp slt i64 %304, 2147483647
  %306 = select i1 %305, i64 %304, i64 2147483647
  %307 = icmp sgt i64 %306, -2147483647
  %308 = select i1 %307, i64 %306, i64 -2147483647
  %309 = trunc i64 %308 to i32
  store i32 %309, i32* %293, align 4, !noalias !21
  %310 = load i32, i32* %294, align 4, !noalias !21
  %311 = sext i32 %310 to i64
  %312 = sext i32 %300 to i64
  %313 = add nsw i64 %311, %312
  %314 = icmp slt i64 %313, 2147483647
  %315 = select i1 %314, i64 %313, i64 2147483647
  %316 = icmp sgt i64 %315, -2147483647
  %317 = select i1 %316, i64 %315, i64 -2147483647
  %318 = trunc i64 %317 to i32
  store i32 %318, i32* %294, align 4, !noalias !21
  %319 = load i32, i32* %295, align 4, !noalias !21
  %320 = sext i32 %319 to i64
  %321 = add nsw i64 %320, %303
  %322 = icmp slt i64 %321, 2147483647
  %323 = select i1 %322, i64 %321, i64 2147483647
  %324 = icmp sgt i64 %323, -2147483647
  %325 = select i1 %324, i64 %323, i64 -2147483647
  %326 = trunc i64 %325 to i32
  store i32 %326, i32* %295, align 4, !noalias !21
  %327 = load i32, i32* %296, align 4, !noalias !21
  %328 = sext i32 %327 to i64
  %329 = add nsw i64 %328, %312
  %330 = icmp slt i64 %329, 2147483647
  %331 = select i1 %330, i64 %329, i64 2147483647
  %332 = icmp sgt i64 %331, -2147483647
  %333 = select i1 %332, i64 %331, i64 -2147483647
  %334 = trunc i64 %333 to i32
  store i32 %334, i32* %296, align 4, !noalias !21
  %335 = icmp sgt i32 %131, 0
  br i1 %335, label %336, label %536

336:                                              ; preds = %271
  %337 = bitcast %class.GrImageInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %337) #14, !noalias !21
  %338 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 -86, i64 32, i1 false) #14, !noalias !21
  br i1 %262, label %353, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = atomicrmw add i32* %341, i32 1 monotonic
  %343 = load i32, i32* %151, align 4, !noalias !21
  %344 = load i32, i32* %149, align 4, !noalias !21
  %345 = load i32, i32* %152, align 4, !noalias !21
  %346 = load i32, i32* %150, align 4, !noalias !21
  %347 = sub i32 %343, %344
  %348 = sub i32 %345, %346
  %349 = zext i32 %348 to i64
  %350 = shl nuw i64 %349, 32
  %351 = zext i32 %347 to i64
  %352 = or i64 %350, %351
  br label %353

353:                                              ; preds = %340, %336
  %354 = phi i64 [ %290, %336 ], [ %352, %340 ]
  %355 = bitcast %class.sk_sp.14* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #14, !noalias !21
  %356 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 0
  %357 = bitcast %class.sk_sp.14* %6 to i64*
  store i64 %267, i64* %357, align 8, !noalias !21
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %356, i32 %274, i32 2, %class.sk_sp.14* nonnull %6) #14
  %358 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %6, i64 0, i32 0
  %359 = load %class.SkColorSpace*, %class.SkColorSpace** %358, align 8, !noalias !21
  %360 = icmp eq %class.SkColorSpace* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = atomicrmw add i32* %362, i32 -1 acq_rel
  %364 = icmp eq i32 %363, 1
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  %366 = bitcast %class.SkColorSpace* %359 to i8*
  call void @_ZdlPv(i8* %366) #15
  br label %367

367:                                              ; preds = %365, %361, %353
  %368 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %10, i64 0, i32 1
  %369 = bitcast %struct.SkISize* %368 to i64*
  store i64 %354, i64* %369, align 8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #14, !noalias !21
  %370 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %370, %class.GrColorInfo* nonnull dereferenceable(24) %356) #14
  %371 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 1
  %372 = bitcast %struct.SkISize* %371 to i64*
  %373 = load i64, i64* %369, align 8, !noalias !21
  store i64 %373, i64* %372, align 8, !noalias !21
  %374 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %275, i64 0, i32 15
  %375 = load i8, i8* %374, align 1, !range !2
  %376 = icmp ne i8 %375, 0
  %377 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %205, %class.GrImageInfo* nonnull %11, i32 0, i32 1, i1 zeroext false, i1 zeroext %376, i32 1, i1 zeroext true) #14
  %378 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0, i32 1, i32 0
  %379 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %378, align 8, !noalias !21
  %380 = icmp eq %class.GrColorSpaceXform* %379, null
  br i1 %380, label %391, label %381

381:                                              ; preds = %367
  %382 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %379, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = atomicrmw add i32* %382, i32 -1 acq_rel
  %384 = icmp eq i32 %383, 1
  br i1 %384, label %385, label %391

385:                                              ; preds = %381
  %386 = bitcast %class.GrColorSpaceXform* %379 to %class.SkRefCntBase*
  %387 = bitcast %class.GrColorSpaceXform* %379 to void (%class.SkRefCntBase*)***
  %388 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %387, align 8
  %389 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %388, i64 2
  %390 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %389, align 8
  call void %390(%class.SkRefCntBase* nonnull %386) #14
  br label %391

391:                                              ; preds = %385, %381, %367
  %392 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %393 = load %class.SkColorSpace*, %class.SkColorSpace** %392, align 8, !noalias !21
  %394 = icmp eq %class.SkColorSpace* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = atomicrmw add i32* %396, i32 -1 acq_rel
  %398 = icmp eq i32 %397, 1
  br i1 %398, label %399, label %401

399:                                              ; preds = %395
  %400 = bitcast %class.SkColorSpace* %393 to i8*
  call void @_ZdlPv(i8* %400) #15
  br label %401

401:                                              ; preds = %399, %395, %391
  %402 = icmp eq %class.GrSurfaceFillContext* %377, null
  br i1 %402, label %403, label %404

403:                                              ; preds = %401
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %239, align 8, !alias.scope !21
  br label %511

404:                                              ; preds = %401
  %405 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  %406 = load i64, i64* %405, align 8, !noalias !21
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %407 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %406, i64* %407, align 8, !noalias !21
  %408 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %409 = load i32, i32* %254, align 8, !noalias !21
  store i32 %409, i32* %408, align 8, !noalias !21
  %410 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %411 = load i16, i16* %255, align 4, !noalias !21
  store i16 %411, i16* %410, align 4, !noalias !21
  call fastcc void @_ZL21apply_morphology_passP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeENS6_14MorphDirectionE(%class.GrSurfaceFillContext* nonnull %377, %class.GrSurfaceProxyView* nonnull %12, i32 %260, %struct.SkIRect* nonnull dereferenceable(16) %9, %struct.SkIRect* nonnull dereferenceable(16) %249, i32 %131, i32 %242, i32 0) #14
  %412 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %413 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %412, align 8, !noalias !21
  %414 = icmp eq %class.GrSurfaceProxy* %413, null
  br i1 %414, label %427, label %415

415:                                              ; preds = %404
  %416 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %413, i64 0, i32 1
  %417 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = atomicrmw add i32* %417, i32 -1 acq_rel
  %419 = icmp eq i32 %418, 1
  br i1 %419, label %420, label %427

420:                                              ; preds = %415
  %421 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %416, i64 -2
  %422 = bitcast %class.SkNVRefCnt.115* %421 to %class.GrSurfaceProxy*
  %423 = bitcast %class.SkNVRefCnt.115* %421 to void (%class.GrSurfaceProxy*)***
  %424 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %423, align 8
  %425 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %424, i64 1
  %426 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %425, align 8
  call void %426(%class.GrSurfaceProxy* nonnull %422) #14
  br label %427

427:                                              ; preds = %420, %415, %404
  %428 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %428) #14, !noalias !21
  %429 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %430 = load i32, i32* %277, align 8, !noalias !21
  %431 = load i32, i32* %280, align 4, !noalias !21
  %432 = load i32, i32* %279, align 8, !noalias !21
  %433 = sub i32 %432, %430
  %434 = sext i32 %430 to i64
  %435 = sext i32 %433 to i64
  %436 = add nsw i64 %435, %434
  %437 = icmp slt i64 %436, 2147483647
  %438 = select i1 %437, i64 %436, i64 2147483647
  %439 = icmp sgt i64 %438, -2147483647
  %440 = select i1 %439, i64 %438, i64 -2147483647
  %441 = sext i32 %431 to i64
  %442 = sext i32 %138 to i64
  %443 = add nsw i64 %441, %442
  %444 = icmp slt i64 %443, 2147483647
  %445 = select i1 %444, i64 %443, i64 2147483647
  %446 = icmp sgt i64 %445, -2147483647
  %447 = select i1 %446, i64 %445, i64 -2147483647
  %448 = zext i32 %431 to i64
  %449 = shl nuw i64 %448, 32
  %450 = zext i32 %430 to i64
  %451 = or i64 %449, %450
  %452 = shl nsw i64 %447, 32
  %453 = and i64 %440, 4294967295
  %454 = or i64 %453, %452
  %455 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 %451, i64* %455, align 8, !noalias !21
  store i64 %454, i64* %429, align 8, !noalias !21
  %456 = icmp eq i32 %242, 0
  %457 = select i1 %456, i8* bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i8* bitcast (%struct.SkRGBA4f* @_ZL23SK_PMColor4fTRANSPARENT to i8*)
  %458 = bitcast i8* %457 to <2 x float>*
  %459 = load <2 x float>, <2 x float>* %458, align 4
  %460 = getelementptr inbounds i8, i8* %457, i64 8
  %461 = bitcast i8* %460 to <2 x float>*
  %462 = load <2 x float>, <2 x float>* %461, align 4
  %463 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %377, i64 0, i32 0, i32 3, i32 3
  %464 = load i32, i32* %463, align 4
  switch i32 %464, label %465 [
    i32 0, label %476
    i32 2, label %476
  ]

465:                                              ; preds = %427
  %466 = extractelement <2 x float> %462, i32 1
  %467 = fcmp oeq float %466, 0.000000e+00
  br i1 %467, label %476, label %468

468:                                              ; preds = %465
  %469 = fdiv float 1.000000e+00, %466
  %470 = insertelement <2 x float> undef, float %469, i32 0
  %471 = shufflevector <2 x float> %470, <2 x float> undef, <2 x i32> zeroinitializer
  %472 = fmul <2 x float> %459, %471
  %473 = extractelement <2 x float> %462, i32 0
  %474 = fmul float %473, %469
  %475 = insertelement <2 x float> %462, float %474, i32 0
  br label %476

476:                                              ; preds = %468, %465, %427, %427
  %477 = phi <2 x float> [ %459, %427 ], [ %459, %427 ], [ %472, %468 ], [ zeroinitializer, %465 ]
  %478 = phi <2 x float> [ %462, %427 ], [ %462, %427 ], [ %475, %468 ], [ zeroinitializer, %465 ]
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %377, %struct.SkIRect* nonnull %250, <2 x float> %477, <2 x float> %478, i1 zeroext false) #14
  %479 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %377, i64 0, i32 0, i32 2, i32 0, i32 0
  %480 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %479, align 8, !noalias !30
  %481 = icmp eq %class.GrSurfaceProxy* %480, null
  br i1 %481, label %485, label %482

482:                                              ; preds = %476
  %483 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %480, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = atomicrmw add i32* %483, i32 1 monotonic, !noalias !30
  br label %485

485:                                              ; preds = %482, %476
  %486 = ptrtoint %class.GrSurfaceProxy* %480 to i64
  %487 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %377, i64 0, i32 0, i32 2, i32 1
  %488 = load i32, i32* %487, align 8, !noalias !30
  %489 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %377, i64 0, i32 0, i32 2, i32 2, i32 0
  %490 = load i16, i16* %489, align 2, !noalias !30
  %491 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  store i64 %486, i64* %405, align 8, !noalias !21
  %492 = icmp eq %class.GrSurfaceProxy* %491, null
  br i1 %492, label %505, label %493

493:                                              ; preds = %485
  %494 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %491, i64 0, i32 1
  %495 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %494, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = atomicrmw add i32* %495, i32 -1 acq_rel
  %497 = icmp eq i32 %496, 1
  br i1 %497, label %498, label %505

498:                                              ; preds = %493
  %499 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %494, i64 -2
  %500 = bitcast %class.SkNVRefCnt.115* %499 to %class.GrSurfaceProxy*
  %501 = bitcast %class.SkNVRefCnt.115* %499 to void (%class.GrSurfaceProxy*)***
  %502 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %501, align 8
  %503 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %502, i64 1
  %504 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %503, align 8
  call void %504(%class.GrSurfaceProxy* nonnull %500) #14
  br label %505

505:                                              ; preds = %498, %493, %485
  store i32 %488, i32* %254, align 8, !noalias !21
  store i16 %490, i16* %255, align 4, !noalias !21
  %506 = load i32, i32* %463, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %292, i8* nonnull align 8 %276, i64 16, i1 false) #14, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %428) #14, !noalias !21
  %507 = bitcast %class.GrSurfaceFillContext* %377 to void (%class.GrSurfaceFillContext*)***
  %508 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %507, align 8
  %509 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %508, i64 1
  %510 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %509, align 8
  call void %510(%class.GrSurfaceFillContext* nonnull %377) #14
  br label %511

511:                                              ; preds = %505, %403
  %512 = phi i1 [ false, %403 ], [ true, %505 ]
  %513 = phi i32 [ %260, %403 ], [ %506, %505 ]
  %514 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %339, align 8, !noalias !21
  %515 = icmp eq %class.GrColorSpaceXform* %514, null
  br i1 %515, label %526, label %516

516:                                              ; preds = %511
  %517 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %514, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = atomicrmw add i32* %517, i32 -1 acq_rel
  %519 = icmp eq i32 %518, 1
  br i1 %519, label %520, label %526

520:                                              ; preds = %516
  %521 = bitcast %class.GrColorSpaceXform* %514 to %class.SkRefCntBase*
  %522 = bitcast %class.GrColorSpaceXform* %514 to void (%class.SkRefCntBase*)***
  %523 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %522, align 8
  %524 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %523, i64 2
  %525 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %524, align 8
  call void %525(%class.SkRefCntBase* nonnull %521) #14
  br label %526

526:                                              ; preds = %520, %516, %511
  %527 = load %class.SkColorSpace*, %class.SkColorSpace** %338, align 8, !noalias !21
  %528 = icmp eq %class.SkColorSpace* %527, null
  br i1 %528, label %535, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %527, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = atomicrmw add i32* %530, i32 -1 acq_rel
  %532 = icmp eq i32 %531, 1
  br i1 %532, label %533, label %535

533:                                              ; preds = %529
  %534 = bitcast %class.SkColorSpace* %527 to i8*
  call void @_ZdlPv(i8* %534) #15
  br label %535

535:                                              ; preds = %533, %529, %526
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %337) #14, !noalias !21
  br i1 %512, label %536, label %757

536:                                              ; preds = %535, %271
  %537 = phi i32 [ %513, %535 ], [ %260, %271 ]
  %538 = icmp sgt i32 %138, 0
  br i1 %538, label %541, label %539

539:                                              ; preds = %536
  %540 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  br label %708

541:                                              ; preds = %536
  %542 = bitcast %class.GrImageInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %542) #14, !noalias !21
  %543 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %544 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %542, i8 -86, i64 32, i1 false) #14, !noalias !21
  br i1 %262, label %548, label %545

545:                                              ; preds = %541
  %546 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = atomicrmw add i32* %546, i32 1 monotonic
  br label %548

548:                                              ; preds = %545, %541
  %549 = load i32, i32* %151, align 4, !noalias !21
  %550 = load i32, i32* %149, align 4, !noalias !21
  %551 = sub i32 %549, %550
  %552 = load i32, i32* %152, align 4, !noalias !21
  %553 = load i32, i32* %150, align 4, !noalias !21
  %554 = sub i32 %552, %553
  %555 = zext i32 %554 to i64
  %556 = shl nuw i64 %555, 32
  %557 = zext i32 %551 to i64
  %558 = or i64 %556, %557
  %559 = bitcast %class.sk_sp.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #14, !noalias !21
  %560 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 0
  %561 = bitcast %class.sk_sp.14* %5 to i64*
  store i64 %267, i64* %561, align 8, !noalias !21
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %560, i32 %274, i32 2, %class.sk_sp.14* nonnull %5) #14
  %562 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  %563 = load %class.SkColorSpace*, %class.SkColorSpace** %562, align 8, !noalias !21
  %564 = icmp eq %class.SkColorSpace* %563, null
  br i1 %564, label %571, label %565

565:                                              ; preds = %548
  %566 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %563, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = atomicrmw add i32* %566, i32 -1 acq_rel
  %568 = icmp eq i32 %567, 1
  br i1 %568, label %569, label %571

569:                                              ; preds = %565
  %570 = bitcast %class.SkColorSpace* %563 to i8*
  call void @_ZdlPv(i8* %570) #15
  br label %571

571:                                              ; preds = %569, %565, %548
  %572 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %14, i64 0, i32 1
  %573 = bitcast %struct.SkISize* %572 to i64*
  store i64 %558, i64* %573, align 8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #14, !noalias !21
  %574 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %574, %class.GrColorInfo* nonnull dereferenceable(24) %560) #14
  %575 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 1
  %576 = bitcast %struct.SkISize* %575 to i64*
  %577 = load i64, i64* %573, align 8, !noalias !21
  store i64 %577, i64* %576, align 8, !noalias !21
  %578 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %579 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %578, i64 0, i32 15
  %580 = load i8, i8* %579, align 1, !range !2
  %581 = icmp ne i8 %580, 0
  %582 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %205, %class.GrImageInfo* nonnull %15, i32 0, i32 1, i1 zeroext false, i1 zeroext %581, i32 1, i1 zeroext true) #14
  %583 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0, i32 1, i32 0
  %584 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %583, align 8, !noalias !21
  %585 = icmp eq %class.GrColorSpaceXform* %584, null
  br i1 %585, label %596, label %586

586:                                              ; preds = %571
  %587 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %584, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %588 = atomicrmw add i32* %587, i32 -1 acq_rel
  %589 = icmp eq i32 %588, 1
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = bitcast %class.GrColorSpaceXform* %584 to %class.SkRefCntBase*
  %592 = bitcast %class.GrColorSpaceXform* %584 to void (%class.SkRefCntBase*)***
  %593 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %592, align 8
  %594 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %593, i64 2
  %595 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %594, align 8
  call void %595(%class.SkRefCntBase* nonnull %591) #14
  br label %596

596:                                              ; preds = %590, %586, %571
  %597 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %15, i64 0, i32 0, i32 0, i32 0
  %598 = load %class.SkColorSpace*, %class.SkColorSpace** %597, align 8, !noalias !21
  %599 = icmp eq %class.SkColorSpace* %598, null
  br i1 %599, label %606, label %600

600:                                              ; preds = %596
  %601 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %598, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = atomicrmw add i32* %601, i32 -1 acq_rel
  %603 = icmp eq i32 %602, 1
  br i1 %603, label %604, label %606

604:                                              ; preds = %600
  %605 = bitcast %class.SkColorSpace* %598 to i8*
  call void @_ZdlPv(i8* %605) #15
  br label %606

606:                                              ; preds = %604, %600, %596
  %607 = icmp eq %class.GrSurfaceFillContext* %582, null
  br i1 %607, label %608, label %631

608:                                              ; preds = %606
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %239, align 8, !alias.scope !21
  %609 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %544, align 8, !noalias !21
  %610 = icmp eq %class.GrColorSpaceXform* %609, null
  br i1 %610, label %621, label %611

611:                                              ; preds = %608
  %612 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %609, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = atomicrmw add i32* %612, i32 -1 acq_rel
  %614 = icmp eq i32 %613, 1
  br i1 %614, label %615, label %621

615:                                              ; preds = %611
  %616 = bitcast %class.GrColorSpaceXform* %609 to %class.SkRefCntBase*
  %617 = bitcast %class.GrColorSpaceXform* %609 to void (%class.SkRefCntBase*)***
  %618 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %617, align 8
  %619 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %618, i64 2
  %620 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %619, align 8
  call void %620(%class.SkRefCntBase* nonnull %616) #14
  br label %621

621:                                              ; preds = %615, %611, %608
  %622 = load %class.SkColorSpace*, %class.SkColorSpace** %543, align 8, !noalias !21
  %623 = icmp eq %class.SkColorSpace* %622, null
  br i1 %623, label %630, label %624

624:                                              ; preds = %621
  %625 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %622, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = atomicrmw add i32* %625, i32 -1 acq_rel
  %627 = icmp eq i32 %626, 1
  br i1 %627, label %628, label %630

628:                                              ; preds = %624
  %629 = bitcast %class.SkColorSpace* %622 to i8*
  call void @_ZdlPv(i8* %629) #15
  br label %630

630:                                              ; preds = %628, %624, %621
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %542) #14, !noalias !21
  br label %757

631:                                              ; preds = %606
  %632 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  %633 = load i64, i64* %632, align 8, !noalias !21
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %634 = bitcast %class.GrSurfaceProxyView* %16 to i64*
  store i64 %633, i64* %634, align 8, !noalias !21
  %635 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %636 = load i32, i32* %254, align 8, !noalias !21
  store i32 %636, i32* %635, align 8, !noalias !21
  %637 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  %638 = load i16, i16* %255, align 4, !noalias !21
  store i16 %638, i16* %637, align 4, !noalias !21
  call fastcc void @_ZL21apply_morphology_passP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeENS6_14MorphDirectionE(%class.GrSurfaceFillContext* nonnull %582, %class.GrSurfaceProxyView* nonnull %16, i32 %537, %struct.SkIRect* nonnull dereferenceable(16) %9, %struct.SkIRect* nonnull dereferenceable(16) %249, i32 %138, i32 %242, i32 1) #14
  %639 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %640 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %639, align 8, !noalias !21
  %641 = icmp eq %class.GrSurfaceProxy* %640, null
  br i1 %641, label %654, label %642

642:                                              ; preds = %631
  %643 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %640, i64 0, i32 1
  %644 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %643, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %645 = atomicrmw add i32* %644, i32 -1 acq_rel
  %646 = icmp eq i32 %645, 1
  br i1 %646, label %647, label %654

647:                                              ; preds = %642
  %648 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %643, i64 -2
  %649 = bitcast %class.SkNVRefCnt.115* %648 to %class.GrSurfaceProxy*
  %650 = bitcast %class.SkNVRefCnt.115* %648 to void (%class.GrSurfaceProxy*)***
  %651 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %650, align 8
  %652 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %651, i64 1
  %653 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %652, align 8
  call void %653(%class.GrSurfaceProxy* nonnull %649) #14
  br label %654

654:                                              ; preds = %647, %642, %631
  %655 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %582, i64 0, i32 0, i32 2, i32 0, i32 0
  %656 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %655, align 8, !noalias !33
  %657 = icmp eq %class.GrSurfaceProxy* %656, null
  br i1 %657, label %661, label %658

658:                                              ; preds = %654
  %659 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %656, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = atomicrmw add i32* %659, i32 1 monotonic, !noalias !33
  br label %661

661:                                              ; preds = %658, %654
  %662 = ptrtoint %class.GrSurfaceProxy* %656 to i64
  %663 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %582, i64 0, i32 0, i32 2, i32 1
  %664 = load i32, i32* %663, align 8, !noalias !33
  %665 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %582, i64 0, i32 0, i32 2, i32 2, i32 0
  %666 = load i16, i16* %665, align 2, !noalias !33
  %667 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  store i64 %662, i64* %632, align 8, !noalias !21
  %668 = icmp eq %class.GrSurfaceProxy* %667, null
  br i1 %668, label %681, label %669

669:                                              ; preds = %661
  %670 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %667, i64 0, i32 1
  %671 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %670, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = atomicrmw add i32* %671, i32 -1 acq_rel
  %673 = icmp eq i32 %672, 1
  br i1 %673, label %674, label %681

674:                                              ; preds = %669
  %675 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %670, i64 -2
  %676 = bitcast %class.SkNVRefCnt.115* %675 to %class.GrSurfaceProxy*
  %677 = bitcast %class.SkNVRefCnt.115* %675 to void (%class.GrSurfaceProxy*)***
  %678 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %677, align 8
  %679 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %678, i64 1
  %680 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %679, align 8
  call void %680(%class.GrSurfaceProxy* nonnull %676) #14
  br label %681

681:                                              ; preds = %674, %669, %661
  store i32 %664, i32* %254, align 8, !noalias !21
  store i16 %666, i16* %255, align 4, !noalias !21
  %682 = bitcast %class.GrSurfaceFillContext* %582 to void (%class.GrSurfaceFillContext*)***
  %683 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %682, align 8
  %684 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %683, i64 1
  %685 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %684, align 8
  call void %685(%class.GrSurfaceFillContext* nonnull %582) #14
  %686 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %544, align 8, !noalias !21
  %687 = icmp eq %class.GrColorSpaceXform* %686, null
  br i1 %687, label %698, label %688

688:                                              ; preds = %681
  %689 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %686, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = atomicrmw add i32* %689, i32 -1 acq_rel
  %691 = icmp eq i32 %690, 1
  br i1 %691, label %692, label %698

692:                                              ; preds = %688
  %693 = bitcast %class.GrColorSpaceXform* %686 to %class.SkRefCntBase*
  %694 = bitcast %class.GrColorSpaceXform* %686 to void (%class.SkRefCntBase*)***
  %695 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %694, align 8
  %696 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %695, i64 2
  %697 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %696, align 8
  call void %697(%class.SkRefCntBase* nonnull %693) #14
  br label %698

698:                                              ; preds = %692, %688, %681
  %699 = load %class.SkColorSpace*, %class.SkColorSpace** %543, align 8, !noalias !21
  %700 = icmp eq %class.SkColorSpace* %699, null
  br i1 %700, label %707, label %701

701:                                              ; preds = %698
  %702 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %699, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = atomicrmw add i32* %702, i32 -1 acq_rel
  %704 = icmp eq i32 %703, 1
  br i1 %704, label %705, label %707

705:                                              ; preds = %701
  %706 = bitcast %class.SkColorSpace* %699 to i8*
  call void @_ZdlPv(i8* %706) #15
  br label %707

707:                                              ; preds = %705, %701, %698
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %542) #14, !noalias !21
  br label %708

708:                                              ; preds = %707, %539
  %709 = phi i64* [ %540, %539 ], [ %632, %707 ]
  %710 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %710) #14, !noalias !21
  %711 = load i32, i32* %151, align 4, !noalias !21
  %712 = load i32, i32* %149, align 4, !noalias !21
  %713 = sub i32 %711, %712
  %714 = load i32, i32* %152, align 4, !noalias !21
  %715 = load i32, i32* %150, align 4, !noalias !21
  %716 = sub i32 %714, %715
  %717 = zext i32 %716 to i64
  %718 = shl nuw i64 %717, 32
  %719 = zext i32 %713 to i64
  %720 = or i64 %718, %719
  %721 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 0, i64* %721, align 8, !noalias !21
  %722 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  store i64 %720, i64* %722, align 8, !noalias !21
  %723 = load i64, i64* %709, align 8, !noalias !21
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %724 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %723, i64* %724, align 8, !noalias !21
  %725 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %726 = load i32, i32* %254, align 8, !noalias !21
  store i32 %726, i32* %725, align 8, !noalias !21
  %727 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %728 = load i16, i16* %255, align 4, !noalias !21
  store i16 %728, i16* %727, align 4, !noalias !21
  %729 = bitcast %class.sk_sp.14* %19 to i64*
  store i64 %267, i64* %729, align 8, !noalias !21
  %730 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %240, i64 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.40* sret %0, %class.GrRecordingContext* %205, %struct.SkIRect* nonnull dereferenceable(16) %251, i32 0, %class.GrSurfaceProxyView* nonnull %18, i32 %274, %class.sk_sp.14* nonnull %19, %class.SkSurfaceProps* dereferenceable(8) %730, i32 2) #14
  %731 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %19, i64 0, i32 0
  %732 = load %class.SkColorSpace*, %class.SkColorSpace** %731, align 8, !noalias !21
  %733 = icmp eq %class.SkColorSpace* %732, null
  br i1 %733, label %740, label %734

734:                                              ; preds = %708
  %735 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %732, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = atomicrmw add i32* %735, i32 -1 acq_rel
  %737 = icmp eq i32 %736, 1
  br i1 %737, label %738, label %740

738:                                              ; preds = %734
  %739 = bitcast %class.SkColorSpace* %732 to i8*
  call void @_ZdlPv(i8* %739) #15
  br label %740

740:                                              ; preds = %738, %734, %708
  %741 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %742 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %741, align 8, !noalias !21
  %743 = icmp eq %class.GrSurfaceProxy* %742, null
  br i1 %743, label %756, label %744

744:                                              ; preds = %740
  %745 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %742, i64 0, i32 1
  %746 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %745, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = atomicrmw add i32* %746, i32 -1 acq_rel
  %748 = icmp eq i32 %747, 1
  br i1 %748, label %749, label %756

749:                                              ; preds = %744
  %750 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %745, i64 -2
  %751 = bitcast %class.SkNVRefCnt.115* %750 to %class.GrSurfaceProxy*
  %752 = bitcast %class.SkNVRefCnt.115* %750 to void (%class.GrSurfaceProxy*)***
  %753 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %752, align 8
  %754 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %753, i64 1
  %755 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %754, align 8
  call void %755(%class.GrSurfaceProxy* nonnull %751) #14
  br label %756

756:                                              ; preds = %749, %744, %740
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %710) #14, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %292) #14, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %276) #14, !noalias !21
  br label %764

757:                                              ; preds = %630, %535
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %292) #14, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %276) #14, !noalias !21
  br i1 %262, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = atomicrmw add i32* %759, i32 -1 acq_rel
  %761 = icmp eq i32 %760, 1
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  %763 = bitcast %class.SkColorSpace* %261 to i8*
  call void @_ZdlPv(i8* %763) #15
  br label %764

764:                                              ; preds = %762, %758, %757, %756
  %765 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8, !noalias !21
  %766 = icmp eq %class.GrSurfaceProxy* %765, null
  br i1 %766, label %779, label %767

767:                                              ; preds = %764
  %768 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %765, i64 0, i32 1
  %769 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %768, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %770 = atomicrmw add i32* %769, i32 -1 acq_rel
  %771 = icmp eq i32 %770, 1
  br i1 %771, label %772, label %779

772:                                              ; preds = %767
  %773 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %768, i64 -2
  %774 = bitcast %class.SkNVRefCnt.115* %773 to %class.GrSurfaceProxy*
  %775 = bitcast %class.SkNVRefCnt.115* %773 to void (%class.GrSurfaceProxy*)***
  %776 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %775, align 8
  %777 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %776, i64 1
  %778 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %777, align 8
  call void %778(%class.GrSurfaceProxy* nonnull %774) #14
  br label %779

779:                                              ; preds = %764, %767, %772
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #14, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %243)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %247)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248)
  %780 = load %class.SkSpecialImage*, %class.SkSpecialImage** %239, align 8
  %781 = icmp eq %class.SkSpecialImage* %780, null
  br i1 %781, label %1009, label %782

782:                                              ; preds = %779
  %783 = load i32, i32* %61, align 4
  %784 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %783, i32* %784, align 4
  %785 = load i32, i32* %62, align 4
  %786 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %785, i32* %786, align 4
  br label %1009

787:                                              ; preds = %199
  %788 = bitcast %class.SkBitmap* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %788) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %788, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %29) #14
  %789 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %107, %class.SkBitmap* nonnull %29) #14
  br i1 %789, label %792, label %790

790:                                              ; preds = %787
  %791 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %791, align 8
  br label %1007

792:                                              ; preds = %787
  %793 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 0, i32 1
  %794 = load i32, i32* %793, align 8
  %795 = icmp eq i32 %794, 6
  br i1 %795, label %798, label %796

796:                                              ; preds = %792
  %797 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %797, align 8
  br label %1007

798:                                              ; preds = %792
  %799 = bitcast %struct.SkImageInfo* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %799) #14
  %800 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %30, i64 0, i32 0, i32 0, i32 0
  %801 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %30, i64 0, i32 0, i32 1
  %802 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %30, i64 0, i32 1, i32 0
  %803 = load i32, i32* %63, align 4
  %804 = load i32, i32* %61, align 4
  %805 = sub i32 %803, %804
  %806 = load i32, i32* %64, align 4
  %807 = load i32, i32* %62, align 4
  %808 = sub i32 %806, %807
  %809 = zext i32 %808 to i64
  %810 = shl nuw i64 %809, 32
  %811 = zext i32 %805 to i64
  %812 = or i64 %810, %811
  %813 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 0, i32 2
  %814 = load i32, i32* %813, align 4
  %815 = zext i32 %814 to i64
  %816 = shl nuw i64 %815, 32
  %817 = or i64 %816, 6
  %818 = bitcast %struct.SkImageInfo* %30 to i64*
  store i64 0, i64* %818, align 8, !alias.scope !36
  %819 = bitcast i32* %801 to i64*
  store i64 %817, i64* %819, align 8, !alias.scope !36
  %820 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %30, i64 0, i32 1
  %821 = bitcast %struct.SkISize* %820 to i64*
  store i64 %812, i64* %821, align 8, !alias.scope !36
  %822 = bitcast %class.SkBitmap* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %822) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %822, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %31) #14
  %823 = sext i32 %805 to i64
  %824 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %30, i64 0, i32 0
  %825 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %824) #14
  %826 = sext i32 %825 to i64
  %827 = mul nsw i64 %826, %823
  %828 = icmp ult i64 %827, 2147483648
  %829 = select i1 %828, i64 %827, i64 0
  %830 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %31, %struct.SkImageInfo* nonnull dereferenceable(24) %30, i64 %829) #14
  br i1 %830, label %833, label %831

831:                                              ; preds = %798
  %832 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %832, align 8
  br label %997

833:                                              ; preds = %798
  %834 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %1, i64 0, i32 1
  %835 = load i32, i32* %834, align 4
  %836 = icmp eq i32 %835, 1
  %837 = select i1 %836, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE0EEEvPKjPjiiiii, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE0EEEvPKjPjiiiii
  %838 = select i1 %836, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE1EEEvPKjPjiiiii, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE1EEEvPKjPjiiiii
  %839 = icmp sgt i32 %131, 0
  %840 = icmp sgt i32 %138, 0
  %841 = and i1 %839, %840
  br i1 %841, label %842, label %909

842:                                              ; preds = %833
  %843 = bitcast %class.SkBitmap* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %843) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %843, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %32) #14
  %844 = load i32, i32* %802, align 8
  %845 = sext i32 %844 to i64
  %846 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %824) #14
  %847 = sext i32 %846 to i64
  %848 = mul nsw i64 %847, %845
  %849 = icmp ult i64 %848, 2147483648
  %850 = select i1 %849, i64 %848, i64 0
  %851 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %32, %struct.SkImageInfo* nonnull dereferenceable(24) %30, i64 %850) #14
  br i1 %851, label %854, label %852

852:                                              ; preds = %842
  %853 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %853, align 8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %843) #14
  br label %997

854:                                              ; preds = %842
  %855 = load i32, i32* %149, align 4
  %856 = load i32, i32* %150, align 4
  %857 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 0
  %858 = load i8*, i8** %857, align 8
  %859 = sext i32 %856 to i64
  %860 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 1
  %861 = load i64, i64* %860, align 8
  %862 = mul i64 %861, %859
  %863 = getelementptr inbounds i8, i8* %858, i64 %862
  %864 = shl i32 %855, 2
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds i8, i8* %863, i64 %865
  %867 = bitcast i8* %866 to i32*
  %868 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %32, i64 0, i32 1, i32 0
  %869 = bitcast i8** %868 to i32**
  %870 = load i32*, i32** %869, align 8
  %871 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %32, i64 0, i32 1, i32 1
  %872 = load i32, i32* %151, align 4
  %873 = sub i32 %872, %855
  %874 = load i32, i32* %152, align 4
  %875 = sub i32 %874, %856
  %876 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 0
  %877 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %876) #14
  %878 = zext i32 %877 to i64
  %879 = lshr i64 %861, %878
  %880 = trunc i64 %879 to i32
  %881 = load i64, i64* %871, align 8
  %882 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %32, i64 0, i32 1, i32 2, i32 0
  %883 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %882) #14
  %884 = zext i32 %883 to i64
  %885 = lshr i64 %881, %884
  %886 = trunc i64 %885 to i32
  call void %837(i32* %867, i32* %870, i32 %131, i32 %873, i32 %875, i32 %880, i32 %886) #14, !callees !39
  %887 = load i32, i32* %151, align 4
  %888 = load i32, i32* %149, align 4
  %889 = sub i32 %887, %888
  %890 = load i32, i32* %152, align 4
  %891 = load i32, i32* %150, align 4
  %892 = sub i32 %890, %891
  %893 = load i32*, i32** %869, align 8
  %894 = load i64, i64* %871, align 8
  %895 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %882) #14
  %896 = zext i32 %895 to i64
  %897 = lshr i64 %894, %896
  %898 = trunc i64 %897 to i32
  %899 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 0
  %900 = bitcast i8** %899 to i32**
  %901 = load i32*, i32** %900, align 8
  %902 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 1
  %903 = load i64, i64* %902, align 8
  %904 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 2, i32 0
  %905 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %904) #14
  %906 = zext i32 %905 to i64
  %907 = lshr i64 %903, %906
  %908 = trunc i64 %907 to i32
  call void %838(i32* %893, i32* %901, i32 %138, i32 %892, i32 %889, i32 %898, i32 %908) #14, !callees !40
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %843) #14
  br label %979

909:                                              ; preds = %833
  br i1 %839, label %910, label %943

910:                                              ; preds = %909
  %911 = load i32, i32* %149, align 4
  %912 = load i32, i32* %150, align 4
  %913 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 0
  %914 = load i8*, i8** %913, align 8
  %915 = sext i32 %912 to i64
  %916 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 1
  %917 = load i64, i64* %916, align 8
  %918 = mul i64 %917, %915
  %919 = getelementptr inbounds i8, i8* %914, i64 %918
  %920 = shl i32 %911, 2
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i8, i8* %919, i64 %921
  %923 = bitcast i8* %922 to i32*
  %924 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 0
  %925 = bitcast i8** %924 to i32**
  %926 = load i32*, i32** %925, align 8
  %927 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 1
  %928 = load i32, i32* %151, align 4
  %929 = sub i32 %928, %911
  %930 = load i32, i32* %152, align 4
  %931 = sub i32 %930, %912
  %932 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 0
  %933 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %932) #14
  %934 = zext i32 %933 to i64
  %935 = lshr i64 %917, %934
  %936 = trunc i64 %935 to i32
  %937 = load i64, i64* %927, align 8
  %938 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 2, i32 0
  %939 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %938) #14
  %940 = zext i32 %939 to i64
  %941 = lshr i64 %937, %940
  %942 = trunc i64 %941 to i32
  call void %837(i32* %923, i32* %926, i32 %131, i32 %929, i32 %931, i32 %936, i32 %942) #14, !callees !39
  br label %979

943:                                              ; preds = %909
  br i1 %840, label %944, label %979

944:                                              ; preds = %943
  %945 = load i32, i32* %149, align 4
  %946 = load i32, i32* %150, align 4
  %947 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 0
  %948 = load i8*, i8** %947, align 8
  %949 = sext i32 %946 to i64
  %950 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 1
  %951 = load i64, i64* %950, align 8
  %952 = mul i64 %951, %949
  %953 = getelementptr inbounds i8, i8* %948, i64 %952
  %954 = shl i32 %945, 2
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds i8, i8* %953, i64 %955
  %957 = bitcast i8* %956 to i32*
  %958 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1, i32 2, i32 0
  %959 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %958) #14
  %960 = zext i32 %959 to i64
  %961 = lshr i64 %951, %960
  %962 = trunc i64 %961 to i32
  %963 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 0
  %964 = bitcast i8** %963 to i32**
  %965 = load i32*, i32** %964, align 8
  %966 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 1
  %967 = load i32, i32* %152, align 4
  %968 = load i32, i32* %150, align 4
  %969 = sub i32 %967, %968
  %970 = load i32, i32* %151, align 4
  %971 = load i32, i32* %149, align 4
  %972 = sub i32 %970, %971
  %973 = load i64, i64* %966, align 8
  %974 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %31, i64 0, i32 1, i32 2, i32 0
  %975 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %974) #14
  %976 = zext i32 %975 to i64
  %977 = lshr i64 %973, %976
  %978 = trunc i64 %977 to i32
  call void %838(i32* %957, i32* %965, i32 %138, i32 %969, i32 %972, i32 %962, i32 %978) #14, !callees !40
  br label %979

979:                                              ; preds = %854, %910, %944, %943
  %980 = load i32, i32* %61, align 4
  %981 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %980, i32* %981, align 4
  %982 = load i32, i32* %62, align 4
  %983 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %982, i32* %983, align 4
  %984 = bitcast { i64, i64 }* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %984) #14
  %985 = load i32, i32* %63, align 4
  %986 = sub i32 %985, %980
  %987 = load i32, i32* %64, align 4
  %988 = sub i32 %987, %982
  %989 = zext i32 %988 to i64
  %990 = shl nuw i64 %989, 32
  %991 = zext i32 %986 to i64
  %992 = or i64 %990, %991
  %993 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 0
  store i64 0, i64* %993, align 8
  %994 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 1
  store i64 %992, i64* %994, align 8
  %995 = load %class.SkSpecialImage*, %class.SkSpecialImage** %200, align 8
  %996 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %995, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.40* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %34, %class.SkBitmap* nonnull dereferenceable(56) %31, %class.SkSurfaceProps* dereferenceable(8) %996) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %984) #14
  br label %997

997:                                              ; preds = %979, %852, %831
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %822) #14
  %998 = load %class.SkColorSpace*, %class.SkColorSpace** %800, align 8
  %999 = icmp eq %class.SkColorSpace* %998, null
  br i1 %999, label %1006, label %1000

1000:                                             ; preds = %997
  %1001 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %998, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1002 = atomicrmw add i32* %1001, i32 -1 acq_rel
  %1003 = icmp eq i32 %1002, 1
  br i1 %1003, label %1004, label %1006

1004:                                             ; preds = %1000
  %1005 = bitcast %class.SkColorSpace* %998 to i8*
  call void @_ZdlPv(i8* %1005) #15
  br label %1006

1006:                                             ; preds = %997, %1000, %1004
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %799) #14
  br label %1007

1007:                                             ; preds = %1006, %796, %790
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %788) #14
  br label %1008

1008:                                             ; preds = %194, %1007
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #14
  br label %1011

1009:                                             ; preds = %782, %779
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  %1010 = icmp eq i64 %215, 0
  br i1 %1010, label %1024, label %1012

1011:                                             ; preds = %145, %1008
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  br label %1012

1012:                                             ; preds = %1011, %1009
  %1013 = phi i64 [ %215, %1009 ], [ %70, %1011 ]
  %1014 = inttoptr i64 %1013 to %class.SkSpecialImage*
  %1015 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1014, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1016 = atomicrmw add i32* %1015, i32 -1 acq_rel
  %1017 = icmp eq i32 %1016, 1
  br i1 %1017, label %1018, label %1024

1018:                                             ; preds = %1012
  %1019 = inttoptr i64 %1013 to %class.SkRefCntBase*
  %1020 = inttoptr i64 %1013 to void (%class.SkRefCntBase*)***
  %1021 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1020, align 8
  %1022 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1021, i64 2
  %1023 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1022, align 8
  call void %1023(%class.SkRefCntBase* nonnull %1019) #14
  br label %1024

1024:                                             ; preds = %109, %41, %1009, %1012, %1018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_123SkMorphologyImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkMorphologyImageFilter"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.(anonymous namespace)::SkMorphologyImageFilter", %"class.(anonymous namespace)::SkMorphologyImageFilter"* %0, i64 0, i32 2, i32 0
  %12 = bitcast float* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = bitcast <2 x float>* %6 to i64*
  store i64 %13, i64* %14, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %7, %struct.SkPoint* nonnull %7, i32 1) #14
  %15 = load float, float* %9, align 8
  %16 = call float @llvm.fabs.f32(float %15) #14
  store float %16, float* %9, align 8
  %17 = load float, float* %10, align 4
  %18 = call float @llvm.fabs.f32(float %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %19 = call float @llvm.ceil.f32(float %16)
  %20 = fcmp olt float %19, 0x41DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0x41DFFFFFE0000000
  %22 = fcmp ogt float %21, 0xC1DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0xC1DFFFFFE0000000
  %24 = fptosi float %23 to i32
  %25 = call float @llvm.ceil.f32(float %18)
  %26 = fcmp olt float %25, 0x41DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0x41DFFFFFE0000000
  %28 = fcmp ogt float %27, 0xC1DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0xC1DFFFFFE0000000
  %30 = fptosi float %29 to i32
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = sext i32 %24 to i64
  %35 = sub nsw i64 %33, %34
  %36 = icmp slt i64 %35, 2147483647
  %37 = select i1 %36, i64 %35, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = sext i32 %30 to i64
  %44 = sub nsw i64 %42, %43
  %45 = icmp slt i64 %44, 2147483647
  %46 = select i1 %45, i64 %44, i64 2147483647
  %47 = icmp sgt i64 %46, -2147483647
  %48 = select i1 %47, i64 %46, i64 -2147483647
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = add nsw i64 %34, %51
  %53 = icmp slt i64 %52, 2147483647
  %54 = select i1 %53, i64 %52, i64 2147483647
  %55 = icmp sgt i64 %54, -2147483647
  %56 = select i1 %55, i64 %54, i64 -2147483647
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %43, %59
  %61 = icmp slt i64 %60, 2147483647
  %62 = select i1 %61, i64 %60, i64 2147483647
  %63 = icmp sgt i64 %62, -2147483647
  %64 = select i1 %63, i64 %62, i64 -2147483647
  %65 = shl nsw i64 %48, 32
  %66 = and i64 %39, 4294967295
  %67 = or i64 %65, %66
  %68 = insertvalue { i64, i64 } undef, i64 %67, 0
  %69 = shl nsw i64 %64, 32
  %70 = and i64 %56, 4294967295
  %71 = or i64 %69, %70
  %72 = insertvalue { i64, i64 } %68, i64 %71, 1
  ret { i64, i64 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK18SkImageFilter_Base19applyCropRectAndPadERKN4skif7ContextEP14SkSpecialImageP8SkIPointP7SkIRect(%class.sk_sp.40* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %class.SkSpecialImage*, %struct.SkIPoint*, %struct.SkIRect*) local_unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base10mapContextERKN4skif7ContextE(%"class.skif::Context"* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

declare void @_ZNK14SkSpecialImage10makeSubsetERK7SkIRect(%class.sk_sp.40* sret, %class.SkSpecialImage*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN18SkImageFilter_Base17ImageToColorSpaceEP14SkSpecialImage11SkColorTypeP12SkColorSpaceRK14SkSurfaceProps(%class.sk_sp.40* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE0EEEvPKjPjiiiii(i32* readonly, i32* nocapture, i32, i32, i32, i32, i32) unnamed_addr #11 {
  %8 = add nsw i32 %3, -1
  %9 = icmp slt i32 %8, %2
  %10 = select i1 %9, i32 %8, i32 %2
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %7
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds i32, i32* %0, i64 %13
  %15 = icmp sgt i32 %4, 0
  %16 = sext i32 %6 to i64
  %17 = sext i32 %5 to i64
  br label %18

18:                                               ; preds = %30, %12
  %19 = phi i32* [ %0, %12 ], [ %33, %30 ]
  %20 = phi i32 [ 0, %12 ], [ %39, %30 ]
  %21 = phi i32* [ %14, %12 ], [ %37, %30 ]
  %22 = phi i32* [ %1, %12 ], [ %38, %30 ]
  br i1 %15, label %24, label %30

23:                                               ; preds = %30, %7
  ret void

24:                                               ; preds = %18, %43
  %25 = phi i32 [ %50, %43 ], [ 0, %18 ]
  %26 = phi i32* [ %47, %43 ], [ %22, %18 ]
  %27 = phi i32* [ %49, %43 ], [ %21, %18 ]
  %28 = phi i32* [ %48, %43 ], [ %19, %18 ]
  %29 = icmp ugt i32* %28, %27
  br i1 %29, label %43, label %52

30:                                               ; preds = %43, %18
  %31 = icmp slt i32 %20, %10
  %32 = getelementptr inbounds i32, i32* %19, i64 1
  %33 = select i1 %31, i32* %19, i32* %32
  %34 = add nsw i32 %20, %10
  %35 = icmp slt i32 %34, %8
  %36 = getelementptr inbounds i32, i32* %21, i64 1
  %37 = select i1 %35, i32* %36, i32* %21
  %38 = getelementptr inbounds i32, i32* %22, i64 1
  %39 = add nuw nsw i32 %20, 1
  %40 = icmp eq i32 %39, %3
  br i1 %40, label %23, label %18

41:                                               ; preds = %52
  %42 = bitcast <16 x i8> %59 to <2 x i64>
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi <2 x i64> [ %42, %41 ], [ zeroinitializer, %24 ]
  %45 = bitcast <2 x i64> %44 to <4 x i32>
  %46 = extractelement <4 x i32> %45, i32 0
  store i32 %46, i32* %26, align 4
  %47 = getelementptr inbounds i32, i32* %26, i64 %16
  %48 = getelementptr inbounds i32, i32* %28, i64 %17
  %49 = getelementptr inbounds i32, i32* %27, i64 %17
  %50 = add nuw nsw i32 %25, 1
  %51 = icmp eq i32 %50, %4
  br i1 %51, label %30, label %24

52:                                               ; preds = %24, %52
  %53 = phi i32* [ %60, %52 ], [ %28, %24 ]
  %54 = phi <16 x i8> [ %59, %52 ], [ zeroinitializer, %24 ]
  %55 = load i32, i32* %53, align 4
  %56 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %55, i32 0
  %57 = bitcast <4 x i32> %56 to <16 x i8>
  %58 = icmp ult <16 x i8> %54, %57
  %59 = select <16 x i1> %58, <16 x i8> %57, <16 x i8> %54
  %60 = getelementptr inbounds i32, i32* %53, i64 1
  %61 = icmp ugt i32* %60, %27
  br i1 %61, label %41, label %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE1EEEvPKjPjiiiii(i32* readonly, i32* nocapture, i32, i32, i32, i32, i32) unnamed_addr #11 {
  %8 = add nsw i32 %3, -1
  %9 = icmp slt i32 %8, %2
  %10 = select i1 %9, i32 %8, i32 %2
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = mul nsw i32 %10, %5
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  %16 = icmp sgt i32 %4, 0
  %17 = sext i32 %5 to i64
  %18 = sext i32 %6 to i64
  br label %19

19:                                               ; preds = %31, %12
  %20 = phi i32* [ %0, %12 ], [ %34, %31 ]
  %21 = phi i32 [ 0, %12 ], [ %40, %31 ]
  %22 = phi i32* [ %15, %12 ], [ %38, %31 ]
  %23 = phi i32* [ %1, %12 ], [ %39, %31 ]
  br i1 %16, label %25, label %31

24:                                               ; preds = %31, %7
  ret void

25:                                               ; preds = %19, %44
  %26 = phi i32 [ %51, %44 ], [ 0, %19 ]
  %27 = phi i32* [ %48, %44 ], [ %23, %19 ]
  %28 = phi i32* [ %50, %44 ], [ %22, %19 ]
  %29 = phi i32* [ %49, %44 ], [ %20, %19 ]
  %30 = icmp ugt i32* %29, %28
  br i1 %30, label %44, label %53

31:                                               ; preds = %44, %19
  %32 = icmp slt i32 %21, %10
  %33 = getelementptr inbounds i32, i32* %20, i64 %17
  %34 = select i1 %32, i32* %20, i32* %33
  %35 = add nsw i32 %21, %10
  %36 = icmp slt i32 %35, %8
  %37 = getelementptr inbounds i32, i32* %22, i64 %17
  %38 = select i1 %36, i32* %37, i32* %22
  %39 = getelementptr inbounds i32, i32* %23, i64 %18
  %40 = add nuw nsw i32 %21, 1
  %41 = icmp eq i32 %40, %3
  br i1 %41, label %24, label %19

42:                                               ; preds = %53
  %43 = bitcast <16 x i8> %60 to <2 x i64>
  br label %44

44:                                               ; preds = %42, %25
  %45 = phi <2 x i64> [ %43, %42 ], [ zeroinitializer, %25 ]
  %46 = bitcast <2 x i64> %45 to <4 x i32>
  %47 = extractelement <4 x i32> %46, i32 0
  store i32 %47, i32* %27, align 4
  %48 = getelementptr inbounds i32, i32* %27, i64 1
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = getelementptr inbounds i32, i32* %28, i64 1
  %51 = add nuw nsw i32 %26, 1
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %31, label %25

53:                                               ; preds = %25, %53
  %54 = phi i32* [ %61, %53 ], [ %29, %25 ]
  %55 = phi <16 x i8> [ %60, %53 ], [ zeroinitializer, %25 ]
  %56 = load i32, i32* %54, align 4
  %57 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %56, i32 0
  %58 = bitcast <4 x i32> %57 to <16 x i8>
  %59 = icmp ult <16 x i8> %55, %58
  %60 = select <16 x i1> %59, <16 x i8> %58, <16 x i8> %55
  %61 = getelementptr inbounds i32, i32* %54, i64 %17
  %62 = icmp ugt i32* %61, %28
  br i1 %62, label %42, label %53
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE0EEEvPKjPjiiiii(i32* readonly, i32* nocapture, i32, i32, i32, i32, i32) unnamed_addr #11 {
  %8 = add nsw i32 %3, -1
  %9 = icmp slt i32 %8, %2
  %10 = select i1 %9, i32 %8, i32 %2
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %7
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds i32, i32* %0, i64 %13
  %15 = icmp sgt i32 %4, 0
  %16 = sext i32 %6 to i64
  %17 = sext i32 %5 to i64
  br label %18

18:                                               ; preds = %30, %12
  %19 = phi i32* [ %0, %12 ], [ %33, %30 ]
  %20 = phi i32 [ 0, %12 ], [ %39, %30 ]
  %21 = phi i32* [ %14, %12 ], [ %37, %30 ]
  %22 = phi i32* [ %1, %12 ], [ %38, %30 ]
  br i1 %15, label %24, label %30

23:                                               ; preds = %30, %7
  ret void

24:                                               ; preds = %18, %43
  %25 = phi i32 [ %50, %43 ], [ 0, %18 ]
  %26 = phi i32* [ %47, %43 ], [ %22, %18 ]
  %27 = phi i32* [ %49, %43 ], [ %21, %18 ]
  %28 = phi i32* [ %48, %43 ], [ %19, %18 ]
  %29 = icmp ugt i32* %28, %27
  br i1 %29, label %43, label %52

30:                                               ; preds = %43, %18
  %31 = icmp slt i32 %20, %10
  %32 = getelementptr inbounds i32, i32* %19, i64 1
  %33 = select i1 %31, i32* %19, i32* %32
  %34 = add nsw i32 %20, %10
  %35 = icmp slt i32 %34, %8
  %36 = getelementptr inbounds i32, i32* %21, i64 1
  %37 = select i1 %35, i32* %36, i32* %21
  %38 = getelementptr inbounds i32, i32* %22, i64 1
  %39 = add nuw nsw i32 %20, 1
  %40 = icmp eq i32 %39, %3
  br i1 %40, label %23, label %18

41:                                               ; preds = %52
  %42 = bitcast <16 x i8> %59 to <2 x i64>
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi <2 x i64> [ %42, %41 ], [ <i64 -1, i64 -1>, %24 ]
  %45 = bitcast <2 x i64> %44 to <4 x i32>
  %46 = extractelement <4 x i32> %45, i32 0
  store i32 %46, i32* %26, align 4
  %47 = getelementptr inbounds i32, i32* %26, i64 %16
  %48 = getelementptr inbounds i32, i32* %28, i64 %17
  %49 = getelementptr inbounds i32, i32* %27, i64 %17
  %50 = add nuw nsw i32 %25, 1
  %51 = icmp eq i32 %50, %4
  br i1 %51, label %30, label %24

52:                                               ; preds = %24, %52
  %53 = phi i32* [ %60, %52 ], [ %28, %24 ]
  %54 = phi <16 x i8> [ %59, %52 ], [ <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, %24 ]
  %55 = load i32, i32* %53, align 4
  %56 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %55, i32 0
  %57 = bitcast <4 x i32> %56 to <16 x i8>
  %58 = icmp ugt <16 x i8> %54, %57
  %59 = select <16 x i1> %58, <16 x i8> %57, <16 x i8> %54
  %60 = getelementptr inbounds i32, i32* %53, i64 1
  %61 = icmp ugt i32* %60, %27
  br i1 %61, label %41, label %52
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE1EEEvPKjPjiiiii(i32* readonly, i32* nocapture, i32, i32, i32, i32, i32) unnamed_addr #11 {
  %8 = add nsw i32 %3, -1
  %9 = icmp slt i32 %8, %2
  %10 = select i1 %9, i32 %8, i32 %2
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = mul nsw i32 %10, %5
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  %16 = icmp sgt i32 %4, 0
  %17 = sext i32 %5 to i64
  %18 = sext i32 %6 to i64
  br label %19

19:                                               ; preds = %31, %12
  %20 = phi i32* [ %0, %12 ], [ %34, %31 ]
  %21 = phi i32 [ 0, %12 ], [ %40, %31 ]
  %22 = phi i32* [ %15, %12 ], [ %38, %31 ]
  %23 = phi i32* [ %1, %12 ], [ %39, %31 ]
  br i1 %16, label %25, label %31

24:                                               ; preds = %31, %7
  ret void

25:                                               ; preds = %19, %44
  %26 = phi i32 [ %51, %44 ], [ 0, %19 ]
  %27 = phi i32* [ %48, %44 ], [ %23, %19 ]
  %28 = phi i32* [ %50, %44 ], [ %22, %19 ]
  %29 = phi i32* [ %49, %44 ], [ %20, %19 ]
  %30 = icmp ugt i32* %29, %28
  br i1 %30, label %44, label %53

31:                                               ; preds = %44, %19
  %32 = icmp slt i32 %21, %10
  %33 = getelementptr inbounds i32, i32* %20, i64 %17
  %34 = select i1 %32, i32* %20, i32* %33
  %35 = add nsw i32 %21, %10
  %36 = icmp slt i32 %35, %8
  %37 = getelementptr inbounds i32, i32* %22, i64 %17
  %38 = select i1 %36, i32* %37, i32* %22
  %39 = getelementptr inbounds i32, i32* %23, i64 %18
  %40 = add nuw nsw i32 %21, 1
  %41 = icmp eq i32 %40, %3
  br i1 %41, label %24, label %19

42:                                               ; preds = %53
  %43 = bitcast <16 x i8> %60 to <2 x i64>
  br label %44

44:                                               ; preds = %42, %25
  %45 = phi <2 x i64> [ %43, %42 ], [ <i64 -1, i64 -1>, %25 ]
  %46 = bitcast <2 x i64> %45 to <4 x i32>
  %47 = extractelement <4 x i32> %46, i32 0
  store i32 %47, i32* %27, align 4
  %48 = getelementptr inbounds i32, i32* %27, i64 1
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = getelementptr inbounds i32, i32* %28, i64 1
  %51 = add nuw nsw i32 %26, 1
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %31, label %25

53:                                               ; preds = %25, %53
  %54 = phi i32* [ %61, %53 ], [ %29, %25 ]
  %55 = phi <16 x i8> [ %60, %53 ], [ <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, %25 ]
  %56 = load i32, i32* %54, align 4
  %57 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %56, i32 0
  %58 = bitcast <4 x i32> %57 to <16 x i8>
  %59 = icmp ugt <16 x i8> %55, %58
  %60 = select <16 x i1> %59, <16 x i8> %58, <16 x i8> %55
  %61 = getelementptr inbounds i32, i32* %54, i64 %17
  %62 = icmp ugt i32* %61, %28
  br i1 %62, label %42, label %53
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.40* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #3

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL21apply_morphology_passP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeENS6_14MorphDirectionE(%class.GrSurfaceFillContext*, %class.GrSurfaceProxyView* nocapture, i32, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), i32, i32, i32) unnamed_addr #2 {
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to [2 x float]*
  %15 = alloca %struct.SkIRect, align 4
  %16 = alloca %struct.SkIRect, align 4
  %17 = alloca %struct.SkIRect, align 4
  %18 = alloca %struct.SkIRect, align 4
  %19 = alloca %struct.SkIRect, align 4
  %20 = alloca %class.GrSurfaceProxyView, align 8
  %21 = alloca %class.GrSurfaceProxyView, align 8
  %22 = alloca %class.GrSurfaceProxyView, align 8
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  store i64 4575657221408423936, i64* %13, align 8
  %24 = bitcast %struct.SkIRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %25, i64 16, i1 false)
  %26 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  %27 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %struct.SkIRect* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 0
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 1
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 2
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %27, i64 16, i1 false)
  %41 = bitcast %struct.SkIRect* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %25, i64 16, i1 false)
  %42 = bitcast %struct.SkIRect* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %27, i64 16, i1 false)
  %43 = icmp eq i32 %7, 0
  br i1 %43, label %44, label %111

44:                                               ; preds = %8
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %19, i64 0, i32 0
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %18, i64 0, i32 0
  %47 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 2
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 2
  %49 = sitofp i32 %29 to float
  %50 = fadd float %49, 5.000000e-01
  %51 = bitcast i64* %13 to float*
  store float %50, float* %51, align 8
  %52 = sitofp i32 %33 to float
  %53 = fadd float %52, -5.000000e-01
  %54 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 0, i64 1
  store float %53, float* %54, align 4
  %55 = add nsw i32 %29, %5
  store i32 %55, i32* %48, align 4
  %56 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %5
  store i32 %58, i32* %47, align 4
  %59 = sub nsw i32 %33, %5
  store i32 %59, i32* %46, align 4
  %60 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = sub nsw i32 %61, %5
  store i32 %62, i32* %45, align 4
  %63 = sext i32 %29 to i64
  %64 = sext i32 %5 to i64
  %65 = add nsw i64 %63, %64
  %66 = icmp slt i64 %65, 2147483647
  %67 = select i1 %66, i64 %65, i64 2147483647
  %68 = icmp sgt i64 %67, -2147483647
  %69 = select i1 %68, i64 %67, i64 -2147483647
  %70 = sext i32 %31 to i64
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483647
  %74 = select i1 %73, i64 %72, i64 -2147483647
  %75 = sext i32 %33 to i64
  %76 = sub nsw i64 %75, %64
  %77 = icmp slt i64 %76, 2147483647
  %78 = select i1 %77, i64 %76, i64 2147483647
  %79 = icmp sgt i64 %78, -2147483647
  %80 = select i1 %79, i64 %78, i64 -2147483647
  %81 = sext i32 %35 to i64
  %82 = icmp slt i64 %81, 2147483647
  %83 = select i1 %82, i64 %81, i64 2147483647
  %84 = icmp sgt i64 %83, -2147483647
  %85 = select i1 %84, i64 %83, i64 -2147483647
  %86 = load i32, i32* %37, align 4
  %87 = sext i32 %86 to i64
  %88 = add nsw i64 %87, %64
  %89 = icmp slt i64 %88, 2147483647
  %90 = select i1 %89, i64 %88, i64 2147483647
  %91 = icmp sgt i64 %90, -2147483647
  %92 = select i1 %91, i64 %90, i64 -2147483647
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %37, align 4
  %94 = load i32, i32* %38, align 4
  %95 = sext i32 %94 to i64
  %96 = icmp slt i64 %95, 2147483647
  %97 = select i1 %96, i64 %95, i64 2147483647
  %98 = icmp sgt i64 %97, -2147483647
  %99 = select i1 %98, i64 %97, i64 -2147483647
  %100 = trunc i64 %99 to i32
  store i32 %100, i32* %38, align 4
  %101 = load i32, i32* %39, align 4
  %102 = sext i32 %101 to i64
  %103 = sub nsw i64 %102, %64
  %104 = icmp slt i64 %103, 2147483647
  %105 = select i1 %104, i64 %103, i64 2147483647
  %106 = icmp sgt i64 %105, -2147483647
  %107 = select i1 %106, i64 %105, i64 -2147483647
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %39, align 4
  %109 = load i32, i32* %40, align 4
  %110 = sext i32 %109 to i64
  br label %178

111:                                              ; preds = %8
  %112 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %19, i64 0, i32 1
  %113 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %18, i64 0, i32 1
  %114 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 3
  %115 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 3
  %116 = sitofp i32 %31 to float
  %117 = fadd float %116, 5.000000e-01
  %118 = bitcast i64* %13 to float*
  store float %117, float* %118, align 8
  %119 = sitofp i32 %35 to float
  %120 = fadd float %119, -5.000000e-01
  %121 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 0, i64 1
  store float %120, float* %121, align 4
  %122 = add nsw i32 %31, %5
  store i32 %122, i32* %115, align 4
  %123 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = add nsw i32 %124, %5
  store i32 %125, i32* %114, align 4
  %126 = sub nsw i32 %35, %5
  store i32 %126, i32* %113, align 4
  %127 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = sub nsw i32 %128, %5
  store i32 %129, i32* %112, align 4
  %130 = sext i32 %29 to i64
  %131 = icmp slt i64 %130, 2147483647
  %132 = select i1 %131, i64 %130, i64 2147483647
  %133 = icmp sgt i64 %132, -2147483647
  %134 = select i1 %133, i64 %132, i64 -2147483647
  %135 = sext i32 %31 to i64
  %136 = sext i32 %5 to i64
  %137 = add nsw i64 %135, %136
  %138 = icmp slt i64 %137, 2147483647
  %139 = select i1 %138, i64 %137, i64 2147483647
  %140 = icmp sgt i64 %139, -2147483647
  %141 = select i1 %140, i64 %139, i64 -2147483647
  %142 = sext i32 %33 to i64
  %143 = icmp slt i64 %142, 2147483647
  %144 = select i1 %143, i64 %142, i64 2147483647
  %145 = icmp sgt i64 %144, -2147483647
  %146 = select i1 %145, i64 %144, i64 -2147483647
  %147 = sext i32 %35 to i64
  %148 = sub nsw i64 %147, %136
  %149 = icmp slt i64 %148, 2147483647
  %150 = select i1 %149, i64 %148, i64 2147483647
  %151 = icmp sgt i64 %150, -2147483647
  %152 = select i1 %151, i64 %150, i64 -2147483647
  %153 = load i32, i32* %37, align 4
  %154 = sext i32 %153 to i64
  %155 = icmp slt i64 %154, 2147483647
  %156 = select i1 %155, i64 %154, i64 2147483647
  %157 = icmp sgt i64 %156, -2147483647
  %158 = select i1 %157, i64 %156, i64 -2147483647
  %159 = trunc i64 %158 to i32
  store i32 %159, i32* %37, align 4
  %160 = load i32, i32* %38, align 4
  %161 = sext i32 %160 to i64
  %162 = add nsw i64 %161, %136
  %163 = icmp slt i64 %162, 2147483647
  %164 = select i1 %163, i64 %162, i64 2147483647
  %165 = icmp sgt i64 %164, -2147483647
  %166 = select i1 %165, i64 %164, i64 -2147483647
  %167 = trunc i64 %166 to i32
  store i32 %167, i32* %38, align 4
  %168 = load i32, i32* %39, align 4
  %169 = sext i32 %168 to i64
  %170 = icmp slt i64 %169, 2147483647
  %171 = select i1 %170, i64 %169, i64 2147483647
  %172 = icmp sgt i64 %171, -2147483647
  %173 = select i1 %172, i64 %171, i64 -2147483647
  %174 = trunc i64 %173 to i32
  store i32 %174, i32* %39, align 4
  %175 = load i32, i32* %40, align 4
  %176 = sext i32 %175 to i64
  %177 = sub nsw i64 %176, %136
  br label %178

178:                                              ; preds = %111, %44
  %179 = phi i64 [ %177, %111 ], [ %110, %44 ]
  %180 = phi i64 [ %141, %111 ], [ %74, %44 ]
  %181 = phi i64 [ %134, %111 ], [ %69, %44 ]
  %182 = phi i64 [ %146, %111 ], [ %80, %44 ]
  %183 = phi i64 [ %152, %111 ], [ %85, %44 ]
  %184 = icmp slt i64 %179, 2147483647
  %185 = select i1 %184, i64 %179, i64 2147483647
  %186 = icmp sgt i64 %185, -2147483647
  %187 = select i1 %186, i64 %185, i64 -2147483647
  %188 = trunc i64 %183 to i32
  %189 = trunc i64 %182 to i32
  %190 = trunc i64 %181 to i32
  %191 = trunc i64 %180 to i32
  %192 = trunc i64 %187 to i32
  store i32 %192, i32* %40, align 4
  %193 = sub i32 %189, %190
  %194 = icmp slt i32 %193, 1
  br i1 %194, label %195, label %222

195:                                              ; preds = %178
  %196 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %197 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %198 = load i64, i64* %197, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %196, align 8
  %199 = bitcast %class.GrSurfaceProxyView* %20 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %20, i64 0, i32 1
  %201 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %202 = load i32, i32* %201, align 8
  store i32 %202, i32* %200, align 8
  %203 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %20, i64 0, i32 2, i32 0
  %204 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 4
  %206 = bitcast i64* %13 to float*
  call fastcc void @_ZL21apply_morphology_rectP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeEPKfNS6_14MorphDirectionE(%class.GrSurfaceFillContext* %0, %class.GrSurfaceProxyView* nonnull %20, i32 %2, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIRect* dereferenceable(16) %4, i32 %5, i32 %6, float* nonnull %206, i32 %7)
  %207 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %20, i64 0, i32 0, i32 0
  %208 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %207, align 8
  %209 = icmp eq %class.GrSurfaceProxy* %208, null
  br i1 %209, label %342, label %210

210:                                              ; preds = %195
  %211 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %208, i64 0, i32 1
  %212 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %342

215:                                              ; preds = %210
  %216 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %211, i64 -2
  %217 = bitcast %class.SkNVRefCnt.115* %216 to %class.GrSurfaceProxy*
  %218 = bitcast %class.SkNVRefCnt.115* %216 to void (%class.GrSurfaceProxy*)***
  %219 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %218, align 8
  %220 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %219, i64 1
  %221 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %220, align 8
  call void %221(%class.GrSurfaceProxy* nonnull %217) #14
  br label %342

222:                                              ; preds = %178
  %223 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 0, i32 0
  %224 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %225 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %224, align 8
  %226 = icmp eq %class.GrSurfaceProxy* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %225, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 1 monotonic
  br label %230

230:                                              ; preds = %222, %227
  store %class.GrSurfaceProxy* %225, %class.GrSurfaceProxy** %223, align 8
  %231 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 1
  %232 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %233 = load i32, i32* %232, align 8
  store i32 %233, i32* %231, align 8
  %234 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 2, i32 0
  %235 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 4
  %237 = bitcast i64* %13 to float*
  call fastcc void @_ZL21apply_morphology_rectP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeEPKfNS6_14MorphDirectionE(%class.GrSurfaceFillContext* %0, %class.GrSurfaceProxyView* nonnull %21, i32 %2, %struct.SkIRect* nonnull dereferenceable(16) %15, %struct.SkIRect* nonnull dereferenceable(16) %16, i32 %5, i32 %6, float* nonnull %237, i32 %7)
  %238 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %223, align 8
  %239 = icmp eq %class.GrSurfaceProxy* %238, null
  br i1 %239, label %252, label %240

240:                                              ; preds = %230
  %241 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %238, i64 0, i32 1
  %242 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = atomicrmw add i32* %242, i32 -1 acq_rel
  %244 = icmp eq i32 %243, 1
  br i1 %244, label %245, label %252

245:                                              ; preds = %240
  %246 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %241, i64 -2
  %247 = bitcast %class.SkNVRefCnt.115* %246 to %class.GrSurfaceProxy*
  %248 = bitcast %class.SkNVRefCnt.115* %246 to void (%class.GrSurfaceProxy*)***
  %249 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %248, align 8
  %250 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %249, i64 1
  %251 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %250, align 8
  call void %251(%class.GrSurfaceProxy* nonnull %247) #14
  br label %252

252:                                              ; preds = %230, %240, %245
  %253 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 0, i32 0
  %254 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %224, align 8
  %255 = icmp eq %class.GrSurfaceProxy* %254, null
  br i1 %255, label %259, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %254, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = atomicrmw add i32* %257, i32 1 monotonic
  br label %259

259:                                              ; preds = %252, %256
  store %class.GrSurfaceProxy* %254, %class.GrSurfaceProxy** %253, align 8
  %260 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 1
  %261 = load i32, i32* %232, align 8
  store i32 %261, i32* %260, align 8
  %262 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 2, i32 0
  %263 = load i16, i16* %235, align 2
  store i16 %263, i16* %262, align 4
  call fastcc void @_ZL21apply_morphology_rectP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeEPKfNS6_14MorphDirectionE(%class.GrSurfaceFillContext* %0, %class.GrSurfaceProxyView* nonnull %22, i32 %2, %struct.SkIRect* nonnull dereferenceable(16) %18, %struct.SkIRect* nonnull dereferenceable(16) %19, i32 %5, i32 %6, float* nonnull %237, i32 %7)
  %264 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %253, align 8
  %265 = icmp eq %class.GrSurfaceProxy* %264, null
  br i1 %265, label %278, label %266

266:                                              ; preds = %259
  %267 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %264, i64 0, i32 1
  %268 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = atomicrmw add i32* %268, i32 -1 acq_rel
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %271, label %278

271:                                              ; preds = %266
  %272 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %267, i64 -2
  %273 = bitcast %class.SkNVRefCnt.115* %272 to %class.GrSurfaceProxy*
  %274 = bitcast %class.SkNVRefCnt.115* %272 to void (%class.GrSurfaceProxy*)***
  %275 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %274, align 8
  %276 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %275, i64 1
  %277 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %276, align 8
  call void %277(%class.GrSurfaceProxy* nonnull %273) #14
  br label %278

278:                                              ; preds = %259, %266, %271
  %279 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %280 = load i64, i64* %279, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %224, align 8
  %281 = load i32, i32* %232, align 8
  %282 = load i16, i16* %235, align 2
  %283 = bitcast %class.GrSurfaceProxyView* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %283) #14
  %284 = call i8* @_ZN11GrProcessornwEm(i64 88) #14
  %285 = bitcast i8* %284 to %class.GrMorphologyEffect*
  %286 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  store i64 %280, i64* %286, align 8
  %287 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  store i32 %281, i32* %287, align 8
  %288 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  store i16 %282, i16* %288, align 4
  call fastcc void @_ZN18GrMorphologyEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView11SkAlphaTypeN12_GLOBAL__N_114MorphDirectionEiNS8_9MorphTypeEPKf(%class.GrMorphologyEffect* %285, %class.GrFragmentProcessor* null, %class.GrSurfaceProxyView* nonnull %9, i32 %2, i32 %7, i32 %5, i32 %6, float* null) #14
  %289 = bitcast i8* %284 to %class.GrFragmentProcessor*
  %290 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %291 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %290, align 8
  %292 = icmp eq %class.GrSurfaceProxy* %291, null
  br i1 %292, label %305, label %293

293:                                              ; preds = %278
  %294 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %291, i64 0, i32 1
  %295 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %294, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = atomicrmw add i32* %295, i32 -1 acq_rel
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %298, label %305

298:                                              ; preds = %293
  %299 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %294, i64 -2
  %300 = bitcast %class.SkNVRefCnt.115* %299 to %class.GrSurfaceProxy*
  %301 = bitcast %class.SkNVRefCnt.115* %299 to void (%class.GrSurfaceProxy*)***
  %302 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %301, align 8
  %303 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %302, i64 1
  %304 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %303, align 8
  call void %304(%class.GrSurfaceProxy* nonnull %300) #14
  br label %305

305:                                              ; preds = %298, %293, %278
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %283) #14
  %306 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %307 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307) #14
  %308 = sitofp i32 %190 to float
  %309 = insertelement <2 x float> undef, float %308, i32 0
  %310 = sitofp i32 %191 to float
  %311 = insertelement <2 x float> %309, float %310, i32 1
  %312 = sitofp i32 %189 to float
  %313 = insertelement <2 x float> undef, float %312, i32 0
  %314 = sitofp i32 %188 to float
  %315 = insertelement <2 x float> %313, float %314, i32 1
  %316 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %311, <2 x float>* %316, align 8
  %317 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %315, <2 x float>* %317, align 8
  %318 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %319 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %319) #14
  %320 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %321 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #14
  %322 = load i32, i32* %37, align 4
  %323 = sitofp i32 %322 to float
  %324 = insertelement <2 x float> undef, float %323, i32 0
  %325 = load i32, i32* %38, align 4
  %326 = sitofp i32 %325 to float
  %327 = insertelement <2 x float> %324, float %326, i32 1
  %328 = load i32, i32* %39, align 4
  %329 = sitofp i32 %328 to float
  %330 = insertelement <2 x float> undef, float %329, i32 0
  %331 = load i32, i32* %40, align 4
  %332 = sitofp i32 %331 to float
  %333 = insertelement <2 x float> %330, float %332, i32 1
  %334 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %327, <2 x float>* %334, align 8
  %335 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %333, <2 x float>* %335, align 8
  %336 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %336, align 16, !alias.scope !41
  %337 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %338 = bitcast float* %337 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %338, align 16, !alias.scope !41
  %339 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %339, align 16, !alias.scope !41
  store i32 16, i32* %320, align 4, !alias.scope !41
  %340 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %318, %struct.SkRect* nonnull dereferenceable(16) %306, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #14
  %341 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %10, %class.GrFragmentProcessor* %289) #14
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* %0, %struct.SkIRect* nonnull dereferenceable(16) %17, %class.GrFragmentProcessor* %341) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %319) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307) #14
  br label %342

342:                                              ; preds = %215, %210, %195, %305
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  ret void
}

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.40* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.14*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.14*) unnamed_addr #3

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL21apply_morphology_rectP20GrSurfaceFillContext18GrSurfaceProxyView11SkAlphaTypeRK7SkIRectS5_iN12_GLOBAL__N_19MorphTypeEPKfNS6_14MorphDirectionE(%class.GrSurfaceFillContext*, %class.GrSurfaceProxyView* nocapture, i32, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), i32, i32, float*, i32) unnamed_addr #2 {
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %15 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %14, align 8
  %17 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #14
  %23 = bitcast i8* %22 to %class.GrMorphologyEffect*
  %24 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %16, i64* %24, align 8
  %25 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  store i32 %18, i32* %25, align 8
  %26 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  store i16 %20, i16* %26, align 4
  call fastcc void @_ZN18GrMorphologyEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView11SkAlphaTypeN12_GLOBAL__N_114MorphDirectionEiNS8_9MorphTypeEPKf(%class.GrMorphologyEffect* %23, %class.GrFragmentProcessor* null, %class.GrSurfaceProxyView* nonnull %10, i32 %2, i32 %8, i32 %5, i32 %6, float* %7) #14
  %27 = bitcast i8* %22 to %class.GrFragmentProcessor*
  %28 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %29 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %28, align 8
  %30 = icmp eq %class.GrSurfaceProxy* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %29, i64 0, i32 1
  %33 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %32, i64 -2
  %38 = bitcast %class.SkNVRefCnt.115* %37 to %class.GrSurfaceProxy*
  %39 = bitcast %class.SkNVRefCnt.115* %37 to void (%class.GrSurfaceProxy*)***
  %40 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %40, i64 1
  %42 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %41, align 8
  tail call void %42(%class.GrSurfaceProxy* nonnull %38) #14
  br label %43

43:                                               ; preds = %9, %31, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  %44 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %45 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #14
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = insertelement <2 x float> %49, float %52, i32 1
  %54 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = sitofp i32 %55 to float
  %57 = insertelement <2 x float> undef, float %56, i32 0
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = sitofp i32 %59 to float
  %61 = insertelement <2 x float> %57, float %60, i32 1
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %53, <2 x float>* %62, align 8
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %61, <2 x float>* %63, align 8
  %64 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %65 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #14
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %67 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  %71 = insertelement <2 x float> undef, float %70, i32 0
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  %75 = insertelement <2 x float> %71, float %74, i32 1
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sitofp i32 %77 to float
  %79 = insertelement <2 x float> undef, float %78, i32 0
  %80 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  %83 = insertelement <2 x float> %79, float %82, i32 1
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %75, <2 x float>* %84, align 8
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %83, <2 x float>* %85, align 8
  %86 = bitcast %class.SkMatrix* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %86, align 16, !alias.scope !46
  %87 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %88, align 16, !alias.scope !46
  %89 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %89, align 16, !alias.scope !46
  store i32 16, i32* %66, align 4, !alias.scope !46
  %90 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %11, %struct.SkRect* nonnull dereferenceable(16) %64, %struct.SkRect* nonnull dereferenceable(16) %44, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %91 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %11, %class.GrFragmentProcessor* %27) #14
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* %0, %struct.SkIRect* dereferenceable(16) %4, %class.GrFragmentProcessor* %91) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #14
  ret void
}

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN18GrMorphologyEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView11SkAlphaTypeN12_GLOBAL__N_114MorphDirectionEiNS8_9MorphTypeEPKf(%class.GrMorphologyEffect*, %class.GrFragmentProcessor*, %class.GrSurfaceProxyView* nocapture, i32, i32, i32, i32, float*) unnamed_addr #2 align 2 {
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = bitcast %class.GrMorphologyEffect* %0 to %class.GrFragmentProcessor*
  %11 = icmp eq i32 %3, 1
  %12 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %13, align 8
  %14 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %16 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %18 = bitcast %class.SkTArray.24* %15 to i8**
  store i8* %16, i8** %18, align 8
  store i64 8589934592, i64* %17, align 8
  %19 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 3
  %21 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %22, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrMorphologyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %23 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 1
  store i32 %4, i32* %23, align 4
  %24 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 2
  store i32 %5, i32* %24, align 8
  %25 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 3
  store i32 %6, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 4
  %27 = icmp ne float* %7, null
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 8
  %29 = select i1 %11, i32 19, i32 17
  store i32 %29, i32* %20, align 8
  tail call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %10, %class.GrFragmentProcessor* %1, i64 1) #14
  %30 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %31 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %30, align 8
  %33 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  %35 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %39 = load i16, i16* %38, align 2
  store i16 %39, i16* %37, align 4
  %40 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %41 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %9, i32 %3, %class.SkMatrix* dereferenceable(40) %40, i32 0, i32 0) #14
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %10, %class.GrFragmentProcessor* %41, i64 3) #14
  %42 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %42, align 8
  %44 = icmp eq %class.GrSurfaceProxy* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %8
  %46 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %43, i64 0, i32 1
  %47 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.SkNVRefCnt.115, %class.SkNVRefCnt.115* %46, i64 -2
  %52 = bitcast %class.SkNVRefCnt.115* %51 to %class.GrSurfaceProxy*
  %53 = bitcast %class.SkNVRefCnt.115* %51 to void (%class.GrSurfaceProxy*)***
  %54 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %54, i64 1
  %56 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %55, align 8
  call void %56(%class.GrSurfaceProxy* nonnull %52) #14
  br label %57

57:                                               ; preds = %8, %45, %50
  %58 = load i8, i8* %26, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = bitcast float* %7 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5
  %64 = bitcast [2 x float]* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = getelementptr inbounds float, float* %7, i64 1
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %0, i64 0, i32 5, i64 1
  %69 = bitcast float* %68 to i32*
  store i32 %67, i32* %69, align 4
  br label %70

70:                                               ; preds = %60, %57
  ret void
}

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext*, %struct.SkIRect*, <2 x float>, <2 x float>, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4ImplD0Ev(%class.Impl*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #14
  %3 = bitcast %class.Impl* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.Impl*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %10 = bitcast %class.GrFragmentProcessor** %9 to %class.GrMorphologyEffect**
  %11 = load %class.GrMorphologyEffect*, %class.GrMorphologyEffect** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %13 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %12, align 8
  %14 = bitcast %class.GrMorphologyEffect* %11 to %class.GrFragmentProcessor*
  %15 = bitcast %class.GrGLSLUniformHandler* %13 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %15, align 8
  %17 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %16, i64 13
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %17, align 8
  %19 = tail call i32 %18(%class.GrGLSLUniformHandler* %13, %class.GrFragmentProcessor* %14, i32 16, i32 22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #14
  %20 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 1, i32 0
  store i32 %19, i32* %20, align 8
  %21 = bitcast %class.GrGLSLUniformHandler* %13 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %22 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %21, align 8
  %23 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %22, i64 3
  %24 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %23, align 8
  %25 = tail call i8* %24(%class.GrGLSLUniformHandler* %13, i32 %19) #14
  %26 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %27 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %26, align 8
  %28 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %11, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, [4 x i8]* @.str.7, [4 x i8]* @.str.8
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %31, i64 0, i64 0
  %33 = bitcast %class.GrGLSLFPFragmentBuilder* %27 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr i8, i8* %34, i64 -24
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.GrGLSLFPFragmentBuilder* %27 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = bitcast i8* %39 to %class.GrGLSLShaderBuilder*
  %41 = select i1 %30, i32 49, i32 48
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %40, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i32 %41)
  %42 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %11, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %11, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = shl nsw i32 %46, 1
  %48 = or i32 %47, 1
  %49 = load i8*, i8** %33, align 8
  %50 = getelementptr i8, i8* %49, i64 -24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %38, i64 %52
  %54 = bitcast i8* %53 to %class.GrGLSLShaderBuilder*
  %55 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %56 = load i8*, i8** %55, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* %56)
  %57 = load i8*, i8** %33, align 8
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %38, i64 %60
  %62 = bitcast i8* %61 to %class.GrGLSLShaderBuilder*
  %63 = select i1 %44, i32 120, i32 121
  %64 = load i32, i32* %45, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %62, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 %63, i32 %64)
  %65 = getelementptr inbounds %class.GrMorphologyEffect, %class.GrMorphologyEffect* %11, i64 0, i32 4
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %2
  %69 = load i8*, i8** %33, align 8
  %70 = getelementptr i8, i8* %69, i64 -24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds i8, i8* %38, i64 %72
  %74 = bitcast i8* %73 to %class.GrGLSLShaderBuilder*
  %75 = sitofp i32 %47 to float
  %76 = fpext float %75 to double
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %74, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %25, i32 %63, double %76)
  %77 = load i8*, i8** %33, align 8
  %78 = getelementptr i8, i8* %77, i64 -24
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %38, i64 %80
  %82 = bitcast i8* %81 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %82, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i32 %63, i8* %25, i32 %63)
  br label %83

83:                                               ; preds = %2, %68
  %84 = load i8*, i8** %33, align 8
  %85 = getelementptr i8, i8* %84, i64 -24
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i8, i8* %38, i64 %87
  %89 = bitcast i8* %88 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %89, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i64 0, i64 0), i32 %48)
  %90 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #14
  %91 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %91, align 8
  %92 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 0
  %93 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 5, i8* %94, align 1
  %95 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %95, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5, i1 false) #14
  %96 = getelementptr inbounds i8, i8* %95, i64 5
  store i8 0, i8* %96, align 1
  %97 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* nonnull align 8 %95, i64 24, i1 false) #14, !noalias !51
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %5, %class.GrGLSLFragmentProcessor* %92, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #14
  %98 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1, !noalias !51
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %83
  %103 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8, !noalias !51
  call void @_ZdlPv(i8* %104) #15
  br label %105

105:                                              ; preds = %83, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97)
  %106 = load i8*, i8** %33, align 8
  %107 = getelementptr i8, i8* %106, i64 -24
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %91, align 8
  %111 = getelementptr inbounds i8, i8* %38, i64 %109
  %112 = bitcast i8* %111 to %class.GrGLSLShaderBuilder*
  %113 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %110, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %112, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* nonnull %32, i8* %113)
  %114 = load i8*, i8** %33, align 8
  %115 = getelementptr i8, i8* %114, i64 -24
  %116 = bitcast i8* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds i8, i8* %38, i64 %117
  %119 = bitcast i8* %118 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %119, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 %63)
  %120 = load i8, i8* %65, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %105
  %123 = load i8*, i8** %33, align 8
  %124 = getelementptr i8, i8* %123, i64 -24
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i8, i8* %38, i64 %126
  %128 = bitcast i8* %127 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %128, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i32 %63, i32 %63)
  br label %129

129:                                              ; preds = %105, %122
  %130 = load i8*, i8** %33, align 8
  %131 = getelementptr i8, i8* %130, i64 -24
  %132 = bitcast i8* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i8, i8* %38, i64 %133
  %135 = getelementptr inbounds i8, i8* %134, i64 160
  %136 = getelementptr inbounds i8, i8* %134, i64 488
  %137 = bitcast i8* %136 to i32*
  %138 = load i32, i32* %137, align 8
  %139 = bitcast i8* %135 to %class.SkString**
  %140 = load %class.SkString*, %class.SkString** %139, align 8
  %141 = sext i32 %138 to i64
  %142 = getelementptr inbounds %class.SkString, %class.SkString* %140, i64 %141
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %142, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #14
  %143 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #14
  %144 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %144, align 8
  %145 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  store i8 0, i8* %146, align 1
  %147 = bitcast %"class.SkSL::String"* %8 to i8*
  store i8 0, i8* %147, align 8
  %148 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* nonnull align 8 %147, i64 24, i1 false) #14, !noalias !54
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %7, %class.GrGLSLFragmentProcessor* %92, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #14
  %149 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1, !noalias !54
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %129
  %154 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8, !noalias !54
  call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %129, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148)
  %157 = load i8*, i8** %33, align 8
  %158 = getelementptr i8, i8* %157, i64 -24
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %144, align 8
  %162 = getelementptr inbounds i8, i8* %38, i64 %160
  %163 = bitcast i8* %162 to %class.GrGLSLShaderBuilder*
  %164 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %161, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %163, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0), i8* %164)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZNK18GrMorphologyEffect17onMakeProgramImplEvEN4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.Impl* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %5 = bitcast i32* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %12 = bitcast i32* %11 to float*
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %15 = bitcast %class.SkSTArray* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %18, i64 8
  %20 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %19, align 8
  tail call void %20(%class.GrGLSLProgramDataManager* %1, i32 %10, float %13, float %16) #14
  br label %21

21:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.20, %class.SkTArray.20* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #14
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.20* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #14
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #14
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #14
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #14
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #14

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #14

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #3

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!5 = distinct !{!5, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN14SkImageFilters6DilateEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!8 = distinct !{!8, !"_ZN14SkImageFilters6DilateEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!11 = distinct !{!11, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN14SkImageFilters5ErodeEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!14 = distinct !{!14, !"_ZN14SkImageFilters5ErodeEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!17 = distinct !{!17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!20 = distinct !{!20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZL16apply_morphologyP18GrRecordingContextP14SkSpecialImageRK7SkIRectN12_GLOBAL__N_19MorphTypeE7SkISizeRKN4skif7ContextE: argument 0"}
!23 = distinct !{!23, !"_ZL16apply_morphologyP18GrRecordingContextP14SkSpecialImageRK7SkIRectN12_GLOBAL__N_19MorphTypeE7SkISizeRKN4skif7ContextE"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZNK4skif7Context13refColorSpaceEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4skif7Context13refColorSpaceEv"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!29 = distinct !{!29, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!32 = distinct !{!32, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!35 = distinct !{!35, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!38 = distinct !{!38, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!39 = !{void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE0EEEvPKjPjiiiii, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE0EEEvPKjPjiiiii}
!40 = !{void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE0ELNS_14MorphDirectionE1EEEvPKjPjiiiii, void (i32*, i32*, i32, i32, i32, i32, i32)* @_ZN12_GLOBAL__N_15morphILNS_9MorphTypeE1ELNS_14MorphDirectionE1EEEvPKjPjiiiii}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!43 = distinct !{!43, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!44 = distinct !{!44, !45, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!45 = distinct !{!45, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!48 = distinct !{!48, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!49 = distinct !{!49, !50, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!50 = distinct !{!50, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!53 = distinct !{!53, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!56 = distinct !{!56, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
