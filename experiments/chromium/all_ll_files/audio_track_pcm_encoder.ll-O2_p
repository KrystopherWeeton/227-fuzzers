; ModuleID = '../../third_party/blink/renderer/modules/mediarecorder/audio_track_pcm_encoder.cc'
source_filename = "../../third_party/blink/renderer/modules/mediarecorder/audio_track_pcm_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AudioTrackPcmEncoder" = type { %"class.blink::AudioTrackEncoder" }
%"class.blink::AudioTrackEncoder" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %"class.base::RepeatingCallback", %"class.media::AudioParameters" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Point3F"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.5", i8, i64, i32, %"class.std::__1::vector.9", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { float* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { float**, float**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink20AudioTrackPcmEncoderD0Ev = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

@_ZTVN5blink20AudioTrackPcmEncoderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AudioTrackPcmEncoder"*, %"class.media::AudioParameters"*)* @_ZN5blink20AudioTrackPcmEncoder11OnSetFormatERKN5media15AudioParametersE to i8*), i8* bitcast (void (%"class.blink::AudioTrackPcmEncoder"*, %"class.media::AudioBus"*, i64)* @_ZN5blink20AudioTrackPcmEncoder11EncodeAudioENSt3__110unique_ptrIN5media8AudioBusENS1_14default_deleteIS4_EEEEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::AudioTrackEncoder"*)* @_ZN5blink17AudioTrackEncoderD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioTrackPcmEncoder"*)* @_ZN5blink20AudioTrackPcmEncoderD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

@_ZN5blink20AudioTrackPcmEncoderC1EN4base17RepeatingCallbackIFvRKN5media15AudioParametersENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS1_9TimeTicksEEEE = hidden unnamed_addr alias void (%"class.blink::AudioTrackPcmEncoder"*, %"class.base::RepeatingCallback"*), void (%"class.blink::AudioTrackPcmEncoder"*, %"class.base::RepeatingCallback"*)* @_ZN5blink20AudioTrackPcmEncoderC2EN4base17RepeatingCallbackIFvRKN5media15AudioParametersENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS1_9TimeTicksEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20AudioTrackPcmEncoderC2EN4base17RepeatingCallbackIFvRKN5media15AudioParametersENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS1_9TimeTicksEEEE(%"class.blink::AudioTrackPcmEncoder"*, %"class.base::RepeatingCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  call void @_ZN5blink17AudioTrackEncoderC2EN4base17RepeatingCallbackIFvRKN5media15AudioParametersENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS1_9TimeTicksEEEE(%"class.blink::AudioTrackEncoder"* %4, %"class.base::RepeatingCallback"* nonnull %3) #6
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  %10 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20AudioTrackPcmEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  ret void
}

declare void @_ZN5blink17AudioTrackEncoderC2EN4base17RepeatingCallbackIFvRKN5media15AudioParametersENSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS1_9TimeTicksEEEE(%"class.blink::AudioTrackEncoder"*, %"class.base::RepeatingCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20AudioTrackPcmEncoder11OnSetFormatERKN5media15AudioParametersE(%"class.blink::AudioTrackPcmEncoder"*, %"class.media::AudioParameters"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5media15AudioParameters7IsValidEv(%"class.media::AudioParameters"* %1) #6
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 4
  %6 = tail call dereferenceable(64) %"class.media::AudioParameters"* @_ZN5media15AudioParametersaSERKS0_(%"class.media::AudioParameters"* %5, %"class.media::AudioParameters"* dereferenceable(64) %1) #6
  br label %7

7:                                                ; preds = %2, %4
  ret void
}

declare zeroext i1 @_ZNK5media15AudioParameters7IsValidEv(%"class.media::AudioParameters"*) local_unnamed_addr #1

declare dereferenceable(64) %"class.media::AudioParameters"* @_ZN5media15AudioParametersaSERKS0_(%"class.media::AudioParameters"*, %"class.media::AudioParameters"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20AudioTrackPcmEncoder11EncodeAudioENSt3__110unique_ptrIN5media8AudioBusENS1_14default_deleteIS4_EEEEN4base9TimeTicksE(%"class.blink::AudioTrackPcmEncoder"*, %"class.media::AudioBus"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %180

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #6
  %14 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 1
  %18 = bitcast float*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.9"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  %25 = mul nsw i32 %15, %24
  %26 = sext i32 %25 to i64
  %27 = shl nsw i64 %26, 2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %6, i64 %27, i8 signext 0) #6
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i8*, i8** %13, align 8
  %33 = select i1 %31, i8* %32, i8* %12
  %34 = load i32, i32* %14, align 8
  %35 = bitcast i8* %33 to float*
  call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %34, i32 %34) #6
  %36 = load i64, i64* %18, align 8
  %37 = load i64, i64* %20, align 8
  %38 = sub i64 %36, %37
  %39 = lshr exact i64 %38, 3
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %149

42:                                               ; preds = %11
  %43 = inttoptr i64 %37 to float**
  %44 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %45 = icmp sgt i32 %34, 0
  %46 = shl i64 %38, 29
  %47 = ashr exact i64 %46, 32
  %48 = sext i32 %34 to i64
  %49 = and i64 %39, 4294967295
  %50 = shl nsw i64 %48, 2
  %51 = icmp ugt i32 %34, 7
  %52 = icmp eq i64 %46, 4294967296
  %53 = and i1 %51, %52
  %54 = and i64 %48, -8
  %55 = mul nsw i64 %54, %47
  %56 = icmp eq i64 %54, %48
  %57 = and i64 %48, 1
  %58 = icmp eq i64 %57, 0
  %59 = sub nsw i64 0, %48
  br label %60

60:                                               ; preds = %125, %42
  %61 = phi float** [ %43, %42 ], [ %126, %125 ]
  %62 = phi i64 [ 0, %42 ], [ %123, %125 ]
  %63 = shl i64 %62, 2
  %64 = getelementptr i8, i8* %33, i64 %63
  %65 = add i64 %50, %63
  %66 = getelementptr i8, i8* %33, i64 %65
  %67 = getelementptr inbounds float*, float** %61, i64 %62
  %68 = load float*, float** %67, align 8
  %69 = bitcast float* %68 to i8*
  br i1 %45, label %70, label %122

70:                                               ; preds = %60
  br i1 %53, label %71, label %77

71:                                               ; preds = %70
  %72 = getelementptr float, float* %68, i64 %48
  %73 = bitcast float* %72 to i8*
  %74 = icmp ult i8* %64, %73
  %75 = icmp ugt i8* %66, %69
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %95

77:                                               ; preds = %70, %121, %71
  %78 = phi i64 [ 0, %71 ], [ 0, %70 ], [ %54, %121 ]
  %79 = phi i64 [ %62, %71 ], [ %62, %70 ], [ %96, %121 ]
  %80 = xor i64 %78, -1
  br i1 %58, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds float, float* %68, i64 %78
  %83 = load float, float* %82, align 4
  %84 = fcmp ult float %83, -1.000000e+00
  %85 = fcmp oge float %83, 1.000000e+00
  %86 = select i1 %85, float 1.000000e+00, float %83
  %87 = select i1 %84, float -1.000000e+00, float %86, !prof !3
  %88 = getelementptr inbounds float, float* %35, i64 %79
  store float %87, float* %88, align 4
  %89 = or i64 %78, 1
  %90 = add i64 %79, %47
  br label %91

91:                                               ; preds = %81, %77
  %92 = phi i64 [ %89, %81 ], [ %78, %77 ]
  %93 = phi i64 [ %90, %81 ], [ %79, %77 ]
  %94 = icmp eq i64 %80, %59
  br i1 %94, label %122, label %127

95:                                               ; preds = %71
  %96 = add i64 %62, %55
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %119, %97 ]
  %99 = mul i64 %98, %47
  %100 = add i64 %62, %99
  %101 = getelementptr inbounds float, float* %68, i64 %98
  %102 = bitcast float* %101 to <4 x float>*
  %103 = load <4 x float>, <4 x float>* %102, align 4, !alias.scope !4
  %104 = getelementptr inbounds float, float* %101, i64 4
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !alias.scope !4
  %107 = fcmp ult <4 x float> %103, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %108 = fcmp ult <4 x float> %106, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %109 = fcmp oge <4 x float> %103, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %110 = fcmp oge <4 x float> %106, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %111 = select <4 x i1> %109, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float> %103
  %112 = select <4 x i1> %110, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float> %106
  %113 = select <4 x i1> %107, <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float> %111
  %114 = select <4 x i1> %108, <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float> %112
  %115 = getelementptr inbounds float, float* %35, i64 %100
  %116 = bitcast float* %115 to <4 x float>*
  store <4 x float> %113, <4 x float>* %116, align 4, !alias.scope !7, !noalias !4
  %117 = getelementptr inbounds float, float* %115, i64 4
  %118 = bitcast float* %117 to <4 x float>*
  store <4 x float> %114, <4 x float>* %118, align 4, !alias.scope !7, !noalias !4
  %119 = add i64 %98, 8
  %120 = icmp eq i64 %119, %54
  br i1 %120, label %121, label %97, !llvm.loop !9

121:                                              ; preds = %97
  br i1 %56, label %122, label %77

122:                                              ; preds = %91, %127, %121, %60
  %123 = add nuw nsw i64 %62, 1
  %124 = icmp eq i64 %123, %49
  br i1 %124, label %149, label %125

125:                                              ; preds = %122
  %126 = load float**, float*** %44, align 8
  br label %60

127:                                              ; preds = %91, %127
  %128 = phi i64 [ %146, %127 ], [ %92, %91 ]
  %129 = phi i64 [ %147, %127 ], [ %93, %91 ]
  %130 = getelementptr inbounds float, float* %68, i64 %128
  %131 = load float, float* %130, align 4
  %132 = fcmp ult float %131, -1.000000e+00
  %133 = fcmp oge float %131, 1.000000e+00
  %134 = select i1 %133, float 1.000000e+00, float %131
  %135 = select i1 %132, float -1.000000e+00, float %134, !prof !3
  %136 = getelementptr inbounds float, float* %35, i64 %129
  store float %135, float* %136, align 4
  %137 = add nuw nsw i64 %128, 1
  %138 = add i64 %129, %47
  %139 = getelementptr inbounds float, float* %68, i64 %137
  %140 = load float, float* %139, align 4
  %141 = fcmp ult float %140, -1.000000e+00
  %142 = fcmp oge float %140, 1.000000e+00
  %143 = select i1 %142, float 1.000000e+00, float %140
  %144 = select i1 %141, float -1.000000e+00, float %143, !prof !3
  %145 = getelementptr inbounds float, float* %35, i64 %138
  store float %144, float* %145, align 4
  %146 = add nuw nsw i64 %128, 2
  %147 = add i64 %138, %47
  %148 = icmp eq i64 %146, %48
  br i1 %148, label %122, label %127, !llvm.loop !11

149:                                              ; preds = %122, %11
  %150 = load i32, i32* %14, align 8
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 4
  %153 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 4, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = call i64 @_ZN5media20AudioTimestampHelper12FramesToTimeEli(i64 %151, i32 %154) #6
  %156 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #6
  %157 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %2, i64* %157, align 8
  %158 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %155) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #6
  %159 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %159, i8* nonnull align 8 %12, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #6
  %160 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160)
  %161 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %158, i64* %161, align 8
  %162 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %162, align 8
  %164 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %163, i64 0, i32 1
  %165 = bitcast void ()** %164 to void (%"class.base::internal::BindStateBase"*, %"class.media::AudioParameters"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)**
  %166 = load void (%"class.base::internal::BindStateBase"*, %"class.media::AudioParameters"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)*, void (%"class.base::internal::BindStateBase"*, %"class.media::AudioParameters"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)** %165, align 8
  call void %166(%"class.base::internal::BindStateBase"* %163, %"class.media::AudioParameters"* dereferenceable(64) %152, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160)
  %167 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %149
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #7
  br label %174

174:                                              ; preds = %149, %171
  %175 = load i8, i8* %29, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  %178 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %178) #7
  br label %179

179:                                              ; preds = %174, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %180

180:                                              ; preds = %3, %179
  %181 = icmp eq %"class.media::AudioBus"* %1, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %180
  %183 = bitcast %"class.media::AudioBus"* %1 to void (%"class.media::AudioBus"*)***
  %184 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %184, i64 1
  %186 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %185, align 8
  call void %186(%"class.media::AudioBus"* nonnull %1) #6
  br label %187

187:                                              ; preds = %180, %182
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN5media20AudioTimestampHelper12FramesToTimeEli(i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN5blink17AudioTrackEncoderD2Ev(%"class.blink::AudioTrackEncoder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20AudioTrackPcmEncoderD0Ev(%"class.blink::AudioTrackPcmEncoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioTrackPcmEncoder", %"class.blink::AudioTrackPcmEncoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink17AudioTrackEncoderD2Ev(%"class.blink::AudioTrackEncoder"* %2) #6
  %3 = bitcast %"class.blink::AudioTrackPcmEncoder"* %0 to i8*
  tail call void @free(i8* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZN5media8AudioBus13CheckOverflowEiii(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
