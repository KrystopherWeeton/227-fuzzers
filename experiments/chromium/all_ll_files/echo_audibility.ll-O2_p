; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/echo_audibility.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/echo_audibility.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::EchoAudibility" = type { %"class.absl::optional", i32, i8, i8, [2 x i8], %"class.webrtc::StationarityEstimator" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.webrtc::StationarityEstimator" = type <{ %"class.std::__1::unique_ptr", %"class.webrtc::StationarityEstimator::NoiseSpectrum", %"struct.std::__1::array.1", %"struct.std::__1::array.2", [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type opaque
%"class.webrtc::StationarityEstimator::NoiseSpectrum" = type { %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [65 x float] }
%"struct.std::__1::array.1" = type { [65 x i32] }
%"struct.std::__1::array.2" = type { [65 x i8] }
%"class.webrtc::RenderBuffer" = type <{ %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*, i8, [7 x i8] }>
%"struct.webrtc::BlockBuffer" = type { i32, %"class.std::__1::vector", i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { float*, float*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { float* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::vector.7"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::vector.5"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::vector.3"* }
%"struct.webrtc::SpectrumBuffer" = type { i32, %"class.std::__1::vector.27", i32, i32 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::array"* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::vector.29"* }
%"struct.webrtc::FftBuffer" = type { i32, %"class.std::__1::vector.41", i32, i32 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.std::__1::vector.43"*, %"class.std::__1::vector.43"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"*, %"class.std::__1::__compressed_pair.52" }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.webrtc::FftData"* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::vector.43"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN6webrtc14EchoAudibilityC1Eb = hidden unnamed_addr alias void (%"class.webrtc::EchoAudibility"*, i1), void (%"class.webrtc::EchoAudibility"*, i1)* @_ZN6webrtc14EchoAudibilityC2Eb
@_ZN6webrtc14EchoAudibilityD1Ev = hidden unnamed_addr alias void (%"class.webrtc::EchoAudibility"*), void (%"class.webrtc::EchoAudibility"*)* @_ZN6webrtc14EchoAudibilityD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibilityC2Eb(%"class.webrtc::EchoAudibility"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 3
  store i8 %3, i8* %5, align 1
  %6 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc21StationarityEstimatorC1Ev(%"class.webrtc::StationarityEstimator"* %6) #8
  tail call void @_ZN6webrtc21StationarityEstimator5ResetEv(%"class.webrtc::StationarityEstimator"* %6) #8
  %7 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  store i8 0, i8* %4, align 4
  ret void
}

declare void @_ZN6webrtc21StationarityEstimatorC1Ev(%"class.webrtc::StationarityEstimator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibility5ResetEv(%"class.webrtc::EchoAudibility"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc21StationarityEstimator5ResetEv(%"class.webrtc::StationarityEstimator"* %2) #8
  %3 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibilityD2Ev(%"class.webrtc::EchoAudibility"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc21StationarityEstimatorD1Ev(%"class.webrtc::StationarityEstimator"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc21StationarityEstimatorD1Ev(%"class.webrtc::StationarityEstimator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibility6UpdateERKNS_12RenderBufferEN3rtc9ArrayViewIKfLln4711EEEib(%"class.webrtc::EchoAudibility"*, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), float*, i64, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 1
  %8 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 0
  %10 = load %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::BlockBuffer"** %9, align 8
  tail call void @_ZN6webrtc14EchoAudibility26UpdateRenderNoiseEstimatorERKNS_14SpectrumBufferERKNS_11BlockBufferEb(%"class.webrtc::EchoAudibility"* %0, %"struct.webrtc::SpectrumBuffer"* dereferenceable(40) %8, %"struct.webrtc::BlockBuffer"* dereferenceable(40) %10, i1 zeroext %5)
  br i1 %5, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %11, %6
  %16 = icmp eq i64 %3, 0
  %17 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %7, align 8
  %18 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %17, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %19, %4
  %23 = add i32 %22, %21
  %24 = srem i32 %23, %21
  %25 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 2
  %26 = load %"struct.webrtc::FftBuffer"*, %"struct.webrtc::FftBuffer"** %25, align 8
  %27 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %26, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, %28
  br i1 %31, label %32, label %34

32:                                               ; preds = %15
  %33 = sub nsw i32 %30, %28
  br label %39

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = sub i32 %30, %28
  %38 = add i32 %37, %36
  br label %39

39:                                               ; preds = %32, %34
  %40 = phi i32 [ %33, %32 ], [ %38, %34 ]
  %41 = sub nsw i32 %40, %4
  %42 = icmp sgt i32 %41, -1
  %43 = select i1 %42, i32 %41, i32 -1
  %44 = add nsw i32 %43, 1
  %45 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  %46 = select i1 %16, float* null, float* %2
  tail call void @_ZN6webrtc21StationarityEstimator23UpdateStationarityFlagsERKNS_14SpectrumBufferEN3rtc9ArrayViewIKfLln4711EEEii(%"class.webrtc::StationarityEstimator"* %45, %"struct.webrtc::SpectrumBuffer"* dereferenceable(40) %17, float* %46, i64 %3, i32 %24, i32 %44) #8
  br label %47

47:                                               ; preds = %11, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibility26UpdateRenderNoiseEstimatorERKNS_14SpectrumBufferERKNS_11BlockBufferEb(%"class.webrtc::EchoAudibility"*, %"struct.webrtc::SpectrumBuffer"* nocapture readonly dereferenceable(40), %"struct.webrtc::BlockBuffer"* nocapture readonly dereferenceable(40), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %1, i64 0, i32 2
  br i1 %7, label %9, label %18

9:                                                ; preds = %4
  %10 = load i32, i32* %8, align 4
  %11 = bitcast %"class.webrtc::EchoAudibility"* %0 to i64*
  %12 = zext i32 %10 to i64
  %13 = shl nuw i64 %12, 32
  %14 = or i64 %13, 1
  store i64 %14, i64* %11, align 8
  %15 = getelementptr inbounds %"struct.webrtc::BlockBuffer", %"struct.webrtc::BlockBuffer"* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 1
  store i32 %16, i32* %17, align 8
  br label %67

18:                                               ; preds = %4
  %19 = load i32, i32* %8, align 8
  %20 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = or i1 %22, %3
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = tail call zeroext i1 @_ZN6webrtc14EchoAudibility14IsRenderTooLowERKNS_11BlockBufferE(%"class.webrtc::EchoAudibility"* %0, %"struct.webrtc::BlockBuffer"* dereferenceable(40) %2)
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %20, align 4
  br label %28

28:                                               ; preds = %18, %24
  %29 = phi i8 [ %21, %18 ], [ %27, %24 ]
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %62, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %5, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %19
  br i1 %38, label %62, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  %41 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %1, i64 0, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %1, i64 0, i32 0
  br label %43

43:                                               ; preds = %39, %43
  %44 = phi i32 [ %37, %39 ], [ %60, %43 ]
  %45 = sext i32 %44 to i64
  %46 = load %"class.std::__1::vector.29"*, %"class.std::__1::vector.29"** %41, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %46, i64 %45, i32 0, i32 0
  %48 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %46, i64 %45, i32 0, i32 1
  %50 = bitcast %"struct.std::__1::array"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = ptrtoint %"struct.std::__1::array"* %48 to i64
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 260
  %55 = icmp eq i64 %53, 0
  %56 = select i1 %55, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %48
  tail call void @_ZN6webrtc21StationarityEstimator20UpdateNoiseEstimatorEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEE(%"class.webrtc::StationarityEstimator"* %40, %"struct.std::__1::array"* %56, i64 %54) #8
  %57 = icmp sgt i32 %44, 0
  %58 = load i32, i32* %42, align 8
  %59 = select i1 %57, i32 %44, i32 %58
  %60 = add nsw i32 %59, -1
  %61 = icmp eq i32 %60, %19
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %35, %28
  %63 = bitcast %"class.webrtc::EchoAudibility"* %0 to i64*
  %64 = zext i32 %19 to i64
  %65 = shl nuw i64 %64, 32
  %66 = or i64 %65, 1
  store i64 %66, i64* %63, align 8
  br label %67

67:                                               ; preds = %62, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14EchoAudibility29UpdateRenderStationarityFlagsERKNS_12RenderBufferEN3rtc9ArrayViewIKfLln4711EEEi(%"class.webrtc::EchoAudibility"*, %"class.webrtc::RenderBuffer"* nocapture readonly dereferenceable(32), float*, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 1
  %7 = load %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::SpectrumBuffer"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::SpectrumBuffer"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %9, %4
  %13 = add i32 %12, %11
  %14 = srem i32 %13, %11
  %15 = getelementptr inbounds %"class.webrtc::RenderBuffer", %"class.webrtc::RenderBuffer"* %1, i64 0, i32 2
  %16 = load %"struct.webrtc::FftBuffer"*, %"struct.webrtc::FftBuffer"** %15, align 8
  %17 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %16, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, %18
  br i1 %21, label %22, label %24

22:                                               ; preds = %5
  %23 = sub nsw i32 %20, %18
  br label %29

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.webrtc::FftBuffer", %"struct.webrtc::FftBuffer"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = sub i32 %20, %18
  %28 = add i32 %27, %26
  br label %29

29:                                               ; preds = %22, %24
  %30 = phi i32 [ %23, %22 ], [ %28, %24 ]
  %31 = sub nsw i32 %30, %4
  %32 = icmp sgt i32 %31, -1
  %33 = select i1 %32, i32 %31, i32 -1
  %34 = add nsw i32 %33, 1
  %35 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 5
  %36 = icmp eq i64 %3, 0
  %37 = select i1 %36, float* null, float* %2
  tail call void @_ZN6webrtc21StationarityEstimator23UpdateStationarityFlagsERKNS_14SpectrumBufferEN3rtc9ArrayViewIKfLln4711EEEii(%"class.webrtc::StationarityEstimator"* %35, %"struct.webrtc::SpectrumBuffer"* dereferenceable(40) %7, float* %37, i64 %3, i32 %14, i32 %34) #8
  ret void
}

declare void @_ZN6webrtc21StationarityEstimator5ResetEv(%"class.webrtc::StationarityEstimator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc21StationarityEstimator23UpdateStationarityFlagsERKNS_14SpectrumBufferEN3rtc9ArrayViewIKfLln4711EEEii(%"class.webrtc::StationarityEstimator"*, %"struct.webrtc::SpectrumBuffer"* dereferenceable(40), float*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc14EchoAudibility14IsRenderTooLowERKNS_11BlockBufferE(%"class.webrtc::EchoAudibility"* nocapture, %"struct.webrtc::BlockBuffer"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.7", align 8
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = getelementptr inbounds %"struct.webrtc::BlockBuffer", %"struct.webrtc::BlockBuffer"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %9, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.7"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.5"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 24
  %17 = getelementptr inbounds %"struct.webrtc::BlockBuffer", %"struct.webrtc::BlockBuffer"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.webrtc::EchoAudibility", %"class.webrtc::EchoAudibility"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %176, label %22

22:                                               ; preds = %2
  %23 = trunc i64 %16 to i32
  %24 = icmp sgt i32 %23, 0
  %25 = bitcast %"class.std::__1::vector.7"* %3 to i8*
  %26 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %3, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast float** %26 to i8**
  %29 = bitcast %"class.std::__1::vector.7"* %3 to i8**
  %30 = bitcast float** %26 to i64*
  %31 = bitcast float* %4 to i8*
  %32 = bitcast float* %5 to i8*
  %33 = getelementptr inbounds %"struct.webrtc::BlockBuffer", %"struct.webrtc::BlockBuffer"* %1, i64 0, i32 0
  %34 = and i64 %16, 4294967295
  %35 = bitcast %"class.std::__1::vector.7"* %3 to i8*
  br label %36

36:                                               ; preds = %22, %169
  %37 = phi i32 [ %20, %22 ], [ %174, %169 ]
  br i1 %24, label %38, label %176

38:                                               ; preds = %36
  %39 = sext i32 %37 to i64
  br label %42

40:                                               ; preds = %166
  %41 = fcmp olt float %164, 1.000000e+01
  br i1 %41, label %176, label %169

42:                                               ; preds = %166, %38
  %43 = phi i32 [ 0, %38 ], [ %162, %166 ]
  %44 = phi float [ 0.000000e+00, %38 ], [ %164, %166 ]
  %45 = phi i64 [ 0, %38 ], [ %167, %166 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %46 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %6, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %46, i64 %39, i32 0, i32 0
  %48 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %50, i64 %45
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #8
  %52 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %50, i64 %45, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.7"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 2
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %144, label %60

60:                                               ; preds = %42
  %61 = icmp ugt i64 %58, 4611686018427387903
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.7"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %63) #9
  unreachable

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 %57) #10
  %66 = bitcast i8* %65 to float*
  store i8* %65, i8** %28, align 8
  store i8* %65, i8** %29, align 8
  %67 = getelementptr inbounds float, float* %66, i64 %58
  store float* %67, float** %27, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %51, i64 0, i32 0, i32 0
  %69 = load float*, float** %68, align 8
  %70 = load i64, i64* %53, align 8
  %71 = ptrtoint i8* %65 to i64
  %72 = ptrtoint float* %69 to i64
  %73 = sub i64 %70, %72
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %64
  %76 = lshr exact i64 %73, 2
  %77 = bitcast float* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 %77, i64 %73, i1 false) #8
  %78 = getelementptr inbounds float, float* %66, i64 %76
  %79 = ptrtoint float* %78 to i64
  br label %80

80:                                               ; preds = %64, %75
  %81 = phi i64 [ %79, %75 ], [ %71, %64 ]
  store i64 %81, i64* %30, align 8
  %82 = inttoptr i64 %81 to float*
  %83 = ptrtoint i8* %65 to i64
  %84 = icmp eq float* %66, %82
  br i1 %84, label %144, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds i8, i8* %65, i64 4
  %87 = bitcast i8* %86 to float*
  %88 = ptrtoint i8* %86 to i64
  %89 = icmp eq float* %87, %82
  br i1 %89, label %144, label %90

90:                                               ; preds = %85
  %91 = load float, float* %87, align 4
  %92 = load float, float* %66, align 4
  %93 = fcmp olt float %91, %92
  %94 = select i1 %93, i64 %88, i64 %83
  %95 = select i1 %93, i64 %83, i64 %88
  %96 = getelementptr inbounds i8, i8* %65, i64 8
  %97 = bitcast i8* %96 to float*
  %98 = icmp eq float* %97, %82
  br i1 %98, label %144, label %99

99:                                               ; preds = %90, %138
  %100 = phi float* [ %141, %138 ], [ %97, %90 ]
  %101 = phi i64 [ %140, %138 ], [ %95, %90 ]
  %102 = phi float* [ %100, %138 ], [ %66, %90 ]
  %103 = phi i64 [ %139, %138 ], [ %94, %90 ]
  %104 = ptrtoint float* %100 to i64
  %105 = getelementptr inbounds float, float* %102, i64 3
  %106 = ptrtoint float* %105 to i64
  %107 = icmp eq float* %105, %82
  br i1 %107, label %108, label %118

108:                                              ; preds = %99
  %109 = ptrtoint float* %100 to i64
  %110 = inttoptr i64 %103 to float*
  %111 = load float, float* %100, align 4
  %112 = load float, float* %110, align 4
  %113 = fcmp olt float %111, %112
  br i1 %113, label %144, label %114

114:                                              ; preds = %108
  %115 = inttoptr i64 %101 to float*
  %116 = load float, float* %115, align 4
  %117 = fcmp olt float %111, %116
  br i1 %117, label %143, label %144

118:                                              ; preds = %99
  %119 = load float, float* %105, align 4
  %120 = load float, float* %100, align 4
  %121 = fcmp olt float %119, %120
  %122 = inttoptr i64 %103 to float*
  %123 = load float, float* %122, align 4
  br i1 %121, label %124, label %131

124:                                              ; preds = %118
  %125 = fcmp olt float %119, %123
  %126 = select i1 %125, i64 %106, i64 %103
  %127 = inttoptr i64 %101 to float*
  %128 = load float, float* %127, align 4
  %129 = fcmp olt float %120, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124
  br label %138

131:                                              ; preds = %118
  %132 = fcmp olt float %120, %123
  %133 = select i1 %132, i64 %104, i64 %103
  %134 = inttoptr i64 %101 to float*
  %135 = load float, float* %134, align 4
  %136 = fcmp olt float %119, %135
  br i1 %136, label %138, label %137

137:                                              ; preds = %131
  br label %138

138:                                              ; preds = %137, %131, %130, %124
  %139 = phi i64 [ %126, %124 ], [ %126, %130 ], [ %133, %131 ], [ %133, %137 ]
  %140 = phi i64 [ %101, %124 ], [ %104, %130 ], [ %101, %131 ], [ %106, %137 ]
  %141 = getelementptr inbounds float, float* %100, i64 2
  %142 = icmp eq float* %141, %82
  br i1 %142, label %144, label %99

143:                                              ; preds = %114
  br label %144

144:                                              ; preds = %138, %42, %80, %85, %90, %108, %114, %143
  %145 = phi i64 [ %83, %143 ], [ %83, %85 ], [ %83, %80 ], [ %83, %108 ], [ %83, %114 ], [ %83, %90 ], [ 0, %42 ], [ %83, %138 ]
  %146 = phi float* [ %66, %143 ], [ %66, %85 ], [ %66, %80 ], [ %66, %108 ], [ %66, %114 ], [ %66, %90 ], [ null, %42 ], [ %66, %138 ]
  %147 = phi i8* [ %65, %143 ], [ %65, %85 ], [ %65, %80 ], [ %65, %108 ], [ %65, %114 ], [ %65, %90 ], [ null, %42 ], [ %65, %138 ]
  %148 = phi i64 [ %103, %143 ], [ %83, %85 ], [ %83, %80 ], [ %109, %108 ], [ %103, %114 ], [ %94, %90 ], [ 0, %42 ], [ %139, %138 ]
  %149 = phi i64 [ %101, %143 ], [ %83, %85 ], [ %83, %80 ], [ %101, %108 ], [ %109, %114 ], [ %95, %90 ], [ 0, %42 ], [ %140, %138 ]
  %150 = inttoptr i64 %148 to float*
  %151 = inttoptr i64 %149 to float*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  %152 = load float, float* %150, align 4
  %153 = tail call float @llvm.fabs.f32(float %152) #8
  store float %153, float* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  %154 = load float, float* %151, align 4
  %155 = tail call float @llvm.fabs.f32(float %154) #8
  store float %155, float* %5, align 4
  %156 = fcmp olt float %153, %155
  %157 = select i1 %156, float* %5, float* %4
  %158 = bitcast float* %157 to i32*
  %159 = load i32, i32* %158, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  %160 = bitcast i32 %159 to float
  %161 = fcmp olt float %44, %160
  %162 = select i1 %161, i32 %159, i32 %43
  %163 = icmp eq float* %146, null
  %164 = bitcast i32 %162 to float
  br i1 %163, label %166, label %165

165:                                              ; preds = %144
  store i64 %145, i64* %30, align 8
  tail call void @_ZdlPv(i8* %147) #10
  br label %166

166:                                              ; preds = %144, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8
  %167 = add nuw nsw i64 %45, 1
  %168 = icmp eq i64 %167, %34
  br i1 %168, label %40, label %42

169:                                              ; preds = %40
  %170 = load i32, i32* %33, align 8
  %171 = add nsw i32 %170, -1
  %172 = icmp sgt i32 %171, %37
  %173 = add nsw i32 %37, 1
  %174 = select i1 %172, i32 %173, i32 0
  %175 = icmp eq i32 %174, %18
  br i1 %175, label %176, label %36

176:                                              ; preds = %169, %40, %36, %2
  %177 = phi i1 [ true, %2 ], [ true, %36 ], [ false, %169 ], [ true, %40 ]
  store i32 %18, i32* %19, align 8
  ret i1 %177
}

declare void @_ZN6webrtc21StationarityEstimator20UpdateNoiseEstimatorEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEE(%"class.webrtc::StationarityEstimator"*, %"struct.std::__1::array"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
