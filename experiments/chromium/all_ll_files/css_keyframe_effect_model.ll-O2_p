; ModuleID = '../../third_party/blink/renderer/core/animation/css/css_keyframe_effect_model.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css/css_keyframe_effect_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.229", i32, [4 x i8], %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.365", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.399", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.406", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.345", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.265" = type { %"struct.std::__1::__atomic_base.266" }
%"struct.std::__1::__atomic_base.266" = type { %"struct.std::__1::__atomic_base.267" }
%"struct.std::__1::__atomic_base.267" = type { %"struct.std::__1::__cxx_atomic_impl.268" }
%"struct.std::__1::__cxx_atomic_impl.268" = type { %"struct.std::__1::__cxx_atomic_base_impl.269" }
%"struct.std::__1::__cxx_atomic_base_impl.269" = type { i64 }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist.276"* }
%"class.blink::Worklist.276" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist.283"* }
%"class.blink::Worklist.283" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::Worklist.290"* }
%"class.blink::Worklist.290" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::Worklist.297"* }
%"class.blink::Worklist.297" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::Worklist.304"* }
%"class.blink::Worklist.304" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::Worklist.311"* }
%"class.blink::Worklist.311" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::Worklist.318"* }
%"class.blink::Worklist.318" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.265" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.325", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.339", [4 x i8] }>
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { i64 }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { float }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.348", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.357" }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.387" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.276"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.283"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.290"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.297"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.304"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.644" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.406" = type { %"struct.std::__1::__atomic_base.407" }
%"struct.std::__1::__atomic_base.407" = type { %"struct.std::__1::__cxx_atomic_impl.408" }
%"struct.std::__1::__cxx_atomic_impl.408" = type { %"struct.std::__1::__cxx_atomic_base_impl.409" }
%"struct.std::__1::__cxx_atomic_base_impl.409" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional", %"class.absl::optional.4", %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, %union.anon.8 }
%union.anon.8 = type { i32 }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::CssKeyframeEffectModel" = type { %"class.blink::KeyframeEffectModel.base", [5 x i8] }
%"class.blink::KeyframeEffectModel.base" = type { %"class.blink::KeyframeEffectModelBase.base" }
%"class.blink::KeyframeEffectModelBase.base" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector", %"class.blink::Member.10", %"class.blink::Member.38", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8 }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.blink::Member.23" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.15, %"class.WTF::AtomicString" }
%union.anon.15 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.27" }
%"class.blink::HeapVector.27" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.42" }
%"class.blink::HeapVector.42" = type { %"class.WTF::Vector.45" }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::Member.48"*, i32, i32 }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.770", %class.scoped_refptr, double, double, double, double }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.60" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.52", %"class.blink::Member.52" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::Member.52", %"class.blink::Member.52", %"class.blink::Member.56" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.77", %"class.blink::Member.79", %"class.blink::Member.54", %"class.blink::Member.81", %"class.blink::Member.81", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.114", %"class.blink::HeapVector.116" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.176", %"class.WTF::Vector.176", i8, i32, %"class.blink::Member.183", %"class.blink::Member.185", %"class.blink::Member.187", %"class.blink::Member.189", %"class.blink::Member.191", %"class.blink::Member.193", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.201", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.207", %"class.blink::Member.209", %"class.blink::Member.122", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.212", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.98", %"class.blink::Member.96", %"class.blink::Member.422", %"class.blink::Member.96", %"class.blink::Member.96", %"class.blink::Member.96", %"class.blink::UserActionElementSet", %"class.blink::Member.431", double, double, i64, i64, %"class.blink::HeapHashSet.433", %"class.blink::HeapHashSet.440", i16, i8, %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::TextLinkColors", %"class.blink::Member.455", i8, [7 x i8], %"class.blink::HeapHashMap.457", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.96", %"class.WTF::Vector.464", %"class.blink::Member.469", %"class.blink::Member.471", i8, %"class.blink::Member.96", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.473", %"class.blink::HeapVector.475", %"class.std::__1::unique_ptr.483", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.489", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.502", %"class.WTF::Vector.504", i8, i8, %"class.std::__1::unique_ptr.509", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.98", %"class.blink::HeapVector.515", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.523", i8, i32, %"class.blink::Member.525", %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.531", %"class.WTF::HashMap.533", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.79", %"class.blink::Member.79", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.546", i8, i32, %"class.blink::Member.553", %"class.blink::Member.555", i32, %"class.blink::Member.557", %"class.blink::Member.559", %"class.blink::Member.561", %"class.std::__1::unique_ptr.563", i64, %"class.std::__1::unique_ptr.569", i32, i32, %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::Member.584", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.586", %"class.WTF::Vector.588", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.593", %"class.blink::Member.600", %"class.std::__1::unique_ptr.602", %"class.blink::Member.608", i8, i8, %"class.WTF::String", %"class.blink::Member.610", i8, [7 x i8], %"class.blink::HeapHashMap.612", %"class.blink::HeapObserverSet", %"class.blink::Member.626", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.628", i32, i8, i8, %"class.blink::WeakMember.630", %"class.blink::Member.631" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.169" }
%"class.blink::HeapHashMap.169" = type { %"class.WTF::HashMap.172" }
%"class.WTF::HashMap.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"struct.WTF::KeyValuePair.175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.175" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.180", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.649", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.690", i32, i8, [3 x i8], %"class.blink::HeapVector.692", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.700", %"class.blink::Member.702", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.711", %"class.blink::Member.717", %"class.blink::Member.719", i8, [7 x i8] }>
%"class.blink::Supplementable.649" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.650" }
%"class.blink::HeapHashMap.650" = type { %"class.WTF::HashMap.653" }
%"class.WTF::HashMap.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"struct.WTF::KeyValuePair.656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.656" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.665" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.657" }
%"class.blink::HeapObserverSet.657" = type { i32, [4 x i8], %"class.blink::HeapHashSet.658" }
%"class.blink::HeapHashSet.658" = type { %"class.WTF::HashSet.661" }
%"class.WTF::HashSet.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"class.blink::WeakMember.664"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.664" = type opaque
%"class.blink::Supplementable.665" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.666" }
%"class.blink::HeapHashMap.666" = type { %"class.WTF::HashMap.669" }
%"class.WTF::HashMap.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ %"struct.WTF::KeyValuePair.672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.672" = type { i8*, %"class.blink::Member.775" }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.777" }
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.673, %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.680", %"class.std::__1::unique_ptr.680", %"class.blink::Member.185", i32, [4 x i8], %"class.WTF::HashSet.686", i32, i32 }
%class.scoped_refptr.673 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.692" = type { %"class.WTF::Vector.695" }
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { %"class.blink::Member.698"*, i32, i32 }
%"class.blink::Member.698" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.704", i32, i32 }
%"class.blink::HeapHashMap.704" = type { %"class.WTF::HashMap.707" }
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.195" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::KURL"* }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.124", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.126, %"class.WTF::Vector.140", %"class.WTF::Vector.140", %"class.blink::Member.52", %"class.blink::Member.145", %"class.blink::HeapHashSet", %"class.blink::Member.79", %"class.WTF::HashSet.153", %"class.WTF::TextPosition", %"class.blink::Member.157", %"class.blink::HeapVector.159", %"class.blink::Member.166" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.126 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.127", %"class.WTF::Vector.129" }
%"class.WTF::RefCounted.127" = type { %"class.base::RefCounted.128" }
%"class.base::RefCounted.128" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.132", %"class.WTF::String" }
%"class.WTF::Vector.132" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::VectorBufferBase.134" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.147" }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.151" }
%"class.WTF::HashTable.151" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.55" }
%"class.WTF::HashSet.153" = type { %"class.WTF::HashTable.154" }
%"class.WTF::HashTable.154" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.126, %"class.blink::Member.122", %"class.blink::Member.145" }
%"class.blink::HeapVector.159" = type { %"class.WTF::Vector.162" }
%"class.WTF::Vector.162" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"class.blink::Member.145"*, i32, i32 }
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214" }
%"class.WTF::VectorBufferBase.214" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.216", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.216" = type { %"class.base::RefCounted.217" }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.220" }
%"class.blink::HeapHashMap.220" = type { %"class.WTF::HashMap.223" }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type { %"class.blink::WeakMember.227", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.424" }
%"class.blink::HeapHashMap.424" = type { %"class.WTF::HashMap.427" }
%"class.WTF::HashMap.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.433" = type { %"class.WTF::HashSet.436" }
%"class.WTF::HashSet.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"class.blink::WeakMember.439"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.439" = type opaque
%"class.blink::HeapHashSet.440" = type { %"class.WTF::HashSet.443" }
%"class.WTF::HashSet.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"class.blink::WeakMember.446"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.446" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.457" = type { %"class.WTF::HashMap.460" }
%"class.WTF::HashMap.460" = type { %"class.WTF::HashTable.461" }
%"class.WTF::HashTable.461" = type <{ %"struct.WTF::KeyValuePair.463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.463" = type opaque
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.475" = type { %"class.WTF::Vector.478" }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"class.blink::Member.481"*, i32, i32 }
%"class.blink::Member.481" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.489" = type { %"class.WTF::HashSet.492" }
%"class.WTF::HashSet.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"class.blink::WeakMember.495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.495" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.496", i32, [4 x i8] }>
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"struct.std::__1::pair.499"*, i32, i32 }
%"struct.std::__1::pair.499" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.98" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.blink::Member.96"*, i32, i32 }
%"class.blink::HeapVector.515" = type { %"class.WTF::Vector.518" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.blink::Member.521"*, i32, i32 }
%"class.blink::Member.521" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.79" }
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.537" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.421", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.412, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.412 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.413" }>
%"class.base::RefCountedThreadSafe.413" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.414 }
%class.scoped_refptr.414 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.415", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.415" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.416" }
%"struct.std::__1::atomic.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i8 }
%"class.blink::WeakMember.421" = type { %"class.blink::MemberBase.80" }
%"class.blink::HeapHashSet.546" = type { %"class.WTF::HashSet.549" }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ %"class.blink::Member.552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.552" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.153", %"class.WTF::HashSet.153", %"class.WTF::HashSet.153", %"class.WTF::HashSet.153", %"class.WTF::HashSet.153", %"class.WTF::HashSet.153", i32, [4 x i8], %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", %"class.WTF::HashMap.572", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.576" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.612" = type { %"class.WTF::HashMap.615" }
%"class.WTF::HashMap.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"struct.WTF::KeyValuePair.618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.618" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.619" }
%"class.blink::HeapHashSet.619" = type { %"class.WTF::HashSet.622" }
%"class.WTF::HashSet.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"class.blink::WeakMember.625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.625" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.79", %"class.blink::HeapHashSet.635", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.642", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.635" = type { %"class.WTF::HashSet.638" }
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"class.blink::Member.641"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.641" = type opaque
%"class.blink::HeapTaskRunnerTimer.642" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.643", { i64, i64 } }
%"class.blink::WeakMember.643" = type { %"class.blink::MemberBase.629" }
%"class.blink::WeakMember.630" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::Node"* }
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.85" }
%"class.blink::HeapHashMap.85" = type { %"class.WTF::HashMap.88" }
%"class.WTF::HashMap.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"struct.WTF::KeyValuePair.91"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.91" = type { %"class.WTF::AtomicString", %"class.blink::Member.92" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.96", i32, %"class.blink::HeapVector.98" }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.111" }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::HeapHashMap.113"* }
%"class.blink::HeapHashMap.113" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.116" = type { %"class.WTF::Vector.119" }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::Member.122"*, i32, i32 }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.64", %"class.blink::Member.66", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.64" = type { %"class.WTF::SingleThreadedBitField.65" }
%"class.WTF::SingleThreadedBitField.65" = type { i32 }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.71", %"class.WTF::AtomicString", %"class.WTF::Vector.73" }
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75", [32 x i8] }
%"class.WTF::VectorBufferBase.75" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashMap.789" = type { %"class.WTF::HashMap.792" }
%"class.WTF::HashMap.792" = type { %"class.WTF::HashTable.793" }
%"class.WTF::HashTable.793" = type <{ %"struct.WTF::KeyValuePair.795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.795" = type { %"class.blink::PropertyHandle", %"class.blink::Member.796" }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::HeapVector.798"* }
%"class.blink::HeapVector.798" = type { %"class.WTF::Vector.801" }
%"class.WTF::Vector.801" = type { %"class.WTF::VectorBuffer.802" }
%"class.WTF::VectorBuffer.802" = type { %"class.WTF::VectorBufferBase.769", [8 x i8] }
%"class.WTF::VectorBufferBase.769" = type { %"class.blink::Member.770"*, i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::HashSet.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.725" = type { %"class.WTF::VectorBuffer.726" }
%"class.WTF::VectorBuffer.726" = type { %"class.WTF::VectorBufferBase.727" }
%"class.WTF::VectorBufferBase.727" = type { double*, i32, i32 }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap.730", %"class.blink::Member.737", %"class.blink::Member.737", %"class.WTF::HashMap.753", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapHashMap.730" = type { %"class.WTF::HashMap.733" }
%"class.WTF::HashMap.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ %"struct.WTF::KeyValuePair.736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.736" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.739", %"class.blink::HeapVector.741", i8, [7 x i8] }>
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.737" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.758" }
%"class.blink::WeakMember.758" = type { %"class.blink::MemberBase.186" }
%"class.blink::HeapVector.741" = type { %"class.WTF::Vector.744" }
%"class.WTF::Vector.744" = type { %"class.WTF::VectorBuffer.745" }
%"class.WTF::VectorBuffer.745" = type { %"class.WTF::VectorBufferBase.746", [96 x i8] }
%"class.WTF::VectorBufferBase.746" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.747" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"struct.WTF::KeyValuePair.757"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.757" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.WTF::HashMap.759" = type { %"class.WTF::HashTable.760" }
%"class.WTF::HashTable.760" = type <{ %"struct.WTF::KeyValuePair.763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.763" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector", %"class.blink::Member.10", %"class.blink::Member.38", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVector.764" = type { %"class.WTF::Vector.767" }
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.blink::KeyframeEffectModel" = type { %"class.blink::KeyframeEffectModelBase.base", [5 x i8] }
%"class.blink::HeapVector.848" = type { %"class.WTF::Vector.851" }
%"class.WTF::Vector.851" = type { %"class.WTF::VectorBuffer.852" }
%"class.WTF::VectorBuffer.852" = type { %"class.WTF::VectorBufferBase.853" }
%"class.WTF::VectorBufferBase.853" = type { %"class.blink::Member.854"*, i32, i32 }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::StringKeyframe"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.784 }
%union.anon.784 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.865" = type { i8 }

$_ZN5blink23KeyframeEffectModelBaseD2Ev = comdat any

$_ZN5blink22CssKeyframeEffectModelD0Ev = comdat any

$_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE = comdat any

$_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv = comdat any

$_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS5_S9_SA_EES1_EEbRKT0_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14StringKeyframeEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev = comdat any

$_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink22CssKeyframeEffectModelE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::CssKeyframeEffectModel"*)* @_ZN5blink22CssKeyframeEffectModelD0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.764"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::CssKeyframeEffectModel"*, %"class.blink::Element"*)* @_ZN5blink22CssKeyframeEffectModel20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"index >= 0\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/core/animation/string_keyframe.h\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@_ZTVN5blink23KeyframeEffectModelBaseE = external unnamed_addr constant { [14 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StringKeyframe>, WTF::VectorTraits<blink::Member<blink::StringKeyframe> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EffectModel]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.764"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InterpolationEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CssKeyframeEffectModel20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector"* noalias sret, %"class.blink::CssKeyframeEffectModel"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapHashMap.789", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.blink::PropertyHandle", align 8
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.blink::PropertyHandle", align 8
  %11 = alloca %"class.blink::PropertyHandle", align 8
  %12 = alloca %"class.WTF::HashSet.721", align 8
  %13 = alloca %"class.blink::CSSPropertyName", align 8
  %14 = alloca %"class.blink::HeapVector", align 8
  %15 = alloca %"class.WTF::HashSet.721", align 8
  %16 = alloca %"class.WTF::HashSet.721", align 8
  %17 = alloca %"class.WTF::HashSet.721", align 8
  %18 = alloca %"class.WTF::Vector.725", align 8
  %19 = alloca %"class.blink::StringKeyframe"*, align 8
  %20 = alloca %"class.WTF::HashSet.721", align 8
  %21 = alloca %"class.WTF::HashSet.721", align 8
  %22 = alloca %"class.WTF::HashMap.759", align 8
  %23 = getelementptr inbounds %"class.blink::CssKeyframeEffectModel", %"class.blink::CssKeyframeEffectModel"* %1, i64 0, i32 0, i32 0, i32 1
  %24 = icmp eq %"class.blink::Element"* %2, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %23, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %26, %"class.WTF::Vector"* dereferenceable(16) %27) #10
  br label %802

28:                                               ; preds = %3
  %29 = bitcast %"class.blink::CssKeyframeEffectModel"* %1 to %"class.blink::KeyframeEffectModelBase"*
  %30 = bitcast %"class.blink::HeapVector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #10
  %34 = bitcast %"class.WTF::HashSet.721"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %15, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %15, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %15, i64 0, i32 0, i32 2
  %38 = bitcast %"class.WTF::HashSet.721"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.721"* nonnull sret %15, %"class.blink::KeyframeEffectModelBase"* %29) #10
  %39 = bitcast %"class.WTF::HashSet.721"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %16, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %16, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %16, i64 0, i32 0, i32 2
  %43 = bitcast %"class.WTF::HashSet.721"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 20, i1 false) #10
  %44 = bitcast %"class.WTF::HashSet.721"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %17, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %17, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %17, i64 0, i32 0, i32 2
  %48 = bitcast %"class.WTF::HashSet.721"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 20, i1 false) #10
  %49 = bitcast %"class.WTF::Vector.725"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"class.WTF::Vector.725", %"class.WTF::Vector.725"* %18, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::Vector.725", %"class.WTF::Vector.725"* %18, i64 0, i32 0, i32 0, i32 2
  %52 = bitcast %"class.WTF::Vector.725"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  call void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.725"* nonnull sret %18, %"class.blink::HeapVector"* dereferenceable(16) %23) #10
  %53 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %23, i64 0, i32 0
  %55 = getelementptr inbounds %"class.blink::CssKeyframeEffectModel", %"class.blink::CssKeyframeEffectModel"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %125, label %58

58:                                               ; preds = %28
  %59 = zext i32 %56 to i64
  %60 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %59) #10
  %61 = lshr i64 %60, 3
  %62 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %61) #10
  %63 = ptrtoint %"class.blink::HeapVectorBacking"* %62 to i64
  %64 = bitcast %"class.blink::HeapVector"* %14 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = trunc i64 %61 to i32
  store i32 %65, i32* %32, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %62, i64 0, i32 0
  %70 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #10
  br label %71

71:                                               ; preds = %58, %68
  %72 = load i32, i32* %55, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %125, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.blink::StringKeyframe"** %19 to i8*
  %76 = bitcast %"class.blink::StringKeyframe"** %19 to %"class.blink::Keyframe"**
  %77 = bitcast %"class.WTF::HashSet.721"* %12 to i8*
  %78 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %12, i64 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %12, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %12, i64 0, i32 0, i32 1
  %81 = bitcast %"class.blink::PropertyHandle"* %11 to i8*
  %82 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 1
  %84 = bitcast %union.anon.15* %83 to i8*
  %85 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %86 = bitcast %"class.blink::CSSPropertyName"* %13 to i8*
  %87 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %13, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = bitcast %"class.blink::PropertyHandle"* %10 to i8*
  %90 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 1
  %92 = bitcast %union.anon.15* %91 to i8*
  %93 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %94 = bitcast %"class.blink::StringKeyframe"** %19 to i64*
  %95 = bitcast %"class.WTF::HashSet.721"* %21 to i8*
  %96 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %21, i64 0, i32 0, i32 2
  %97 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %21, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %21, i64 0, i32 0, i32 1
  %99 = bitcast %"class.blink::PropertyHandle"* %7 to i8*
  %100 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 0
  %101 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 1
  %102 = bitcast %union.anon.15* %101 to i8*
  %103 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %17, i64 0, i32 0
  %105 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  %106 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1
  %108 = bitcast %union.anon.15* %107 to i8*
  %109 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %110 = bitcast %"class.WTF::HashSet.721"* %20 to i8*
  %111 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %20, i64 0, i32 0, i32 2
  %112 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %20, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %20, i64 0, i32 0, i32 1
  %114 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  %115 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 0
  %116 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 1
  %117 = bitcast %union.anon.15* %116 to i8*
  %118 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %16, i64 0, i32 0
  %120 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  %121 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 0
  %122 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 1
  %123 = bitcast %union.anon.15* %122 to i8*
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %136

125:                                              ; preds = %598, %28, %71
  %126 = bitcast %"class.WTF::HashMap.759"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  %127 = getelementptr inbounds %"class.WTF::HashMap.759", %"class.WTF::HashMap.759"* %22, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.WTF::HashMap.759", %"class.WTF::HashMap.759"* %22, i64 0, i32 0, i32 1
  %129 = bitcast %"class.WTF::HashMap.759"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 20, i1 false) #10
  %130 = load i32, i32* %42, align 4
  %131 = load i32, i32* %37, align 4
  %132 = icmp ult i32 %130, %131
  %133 = load i32, i32* %47, align 4
  %134 = icmp ult i32 %133, %131
  %135 = or i1 %132, %134
  br i1 %135, label %602, label %614

136:                                              ; preds = %74, %598
  %137 = phi i32 [ 0, %74 ], [ %599, %598 ]
  %138 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %54, i32 %137) #10
  %139 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %139, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  store %"class.blink::StringKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::StringKeyframe"*), %"class.blink::StringKeyframe"** %19, align 8
  %141 = bitcast %"class.blink::Keyframe"* %140 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %142 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %142, i64 3
  %144 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %143, align 8
  %145 = call %"class.blink::Keyframe"* %144(%"class.blink::Keyframe"* %140) #10
  %146 = bitcast %"class.blink::Keyframe"* %145 to %"class.blink::StringKeyframe"*
  store %"class.blink::Keyframe"* %145, %"class.blink::Keyframe"** %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #10
  %147 = bitcast %"class.blink::Keyframe"* %145 to void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)***
  %148 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %148, i64 2
  %150 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %149, align 8
  call void %150(%"class.WTF::HashSet.721"* nonnull sret %12, %"class.blink::StringKeyframe"* %146) #10
  %151 = load i32, i32* %78, align 4
  %152 = icmp eq i32 %151, 0
  %153 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %79, align 8
  %154 = load i32, i32* %80, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %153, i64 %155
  br i1 %152, label %189, label %157

157:                                              ; preds = %136
  %158 = icmp eq i32 %154, 0
  br i1 %158, label %189, label %159

159:                                              ; preds = %157, %182
  %160 = phi %"class.blink::PropertyHandle"* [ %183, %182 ], [ %153, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #10
  store i32 0, i32* %82, align 8, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #10, !alias.scope !2
  %161 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %160, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11) #10
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #10
  br label %177

177:                                              ; preds = %176, %173, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #10
  %178 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %160, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 1
  %181 = or i1 %161, %180
  br i1 %181, label %182, label %185

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %160, i64 1
  %184 = icmp eq %"class.blink::PropertyHandle"* %183, %156
  br i1 %184, label %185, label %159

185:                                              ; preds = %182, %177
  %186 = phi %"class.blink::PropertyHandle"* [ %156, %182 ], [ %160, %177 ]
  %187 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %79, align 8
  %188 = load i32, i32* %80, align 8
  br label %189

189:                                              ; preds = %185, %157, %136
  %190 = phi i32 [ %154, %136 ], [ 0, %157 ], [ %188, %185 ]
  %191 = phi %"class.blink::PropertyHandle"* [ %153, %136 ], [ %153, %157 ], [ %187, %185 ]
  %192 = phi %"class.blink::PropertyHandle"* [ %156, %136 ], [ %153, %157 ], [ %186, %185 ]
  %193 = zext i32 %190 to i64
  %194 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %191, i64 %193
  %195 = icmp eq %"class.blink::PropertyHandle"* %192, %194
  br i1 %195, label %198, label %233

196:                                              ; preds = %324
  %197 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %79, align 8
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi %"class.blink::PropertyHandle"* [ %197, %196 ], [ %191, %189 ]
  %200 = icmp eq %"class.blink::PropertyHandle"* %199, null
  br i1 %200, label %327, label %201, !prof !7

201:                                              ; preds = %198
  %202 = load i32, i32* %80, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %231, label %204

204:                                              ; preds = %201
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %228, %204
  %207 = phi i64 [ 0, %204 ], [ %229, %228 ]
  %208 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %199, i64 %207, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %228, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %199, i64 %207, i32 2, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #10
  br label %228

228:                                              ; preds = %227, %224, %211, %206
  %229 = add nuw nsw i64 %207, 1
  %230 = icmp eq i64 %229, %205
  br i1 %230, label %231, label %206

231:                                              ; preds = %228, %201
  %232 = bitcast %"class.blink::PropertyHandle"* %199 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %232) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %79, align 8
  br label %327

233:                                              ; preds = %189, %324
  %234 = phi %"class.blink::PropertyHandle"* [ %325, %324 ], [ %192, %189 ]
  %235 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %234, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp eq i32 %236, 3
  br i1 %237, label %238, label %239

238:                                              ; preds = %233
  call void @_ZN5blink14StringKeyframe23RemoveCustomCSSPropertyERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"* %146, %"class.blink::PropertyHandle"* dereferenceable(24) %234) #10
  br label %295

239:                                              ; preds = %233
  %240 = or i32 %236, 1
  %241 = icmp eq i32 %240, 3
  br i1 %241, label %242, label %295

242:                                              ; preds = %239
  %243 = call dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"* %146, %"class.blink::PropertyHandle"* dereferenceable(24) %234) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false) #10
  %244 = load i32, i32* %235, align 8
  %245 = icmp eq i32 %244, 3
  br i1 %245, label %246, label %267

246:                                              ; preds = %242
  store i32 1, i32* %87, align 8
  %247 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %234, i64 0, i32 2, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  store %"class.WTF::StringImpl"* %248, %"class.WTF::StringImpl"** %88, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %272, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %272

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #10
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !8

264:                                              ; preds = %255
  call void @llvm.trap() #10
  unreachable

265:                                              ; preds = %255
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %256, align 4
  br label %272

267:                                              ; preds = %242
  %268 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %234, i64 0, i32 1, i32 0
  %269 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %269, i64 0, i32 1
  %271 = load i32, i32* %270, align 8
  store i32 %271, i32* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  br label %272

272:                                              ; preds = %267, %265, %250, %246
  %273 = call %"class.blink::CSSValue"* @_ZN5blink13StyleResolver12ComputeValueEPNS_7ElementERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::Element"* nonnull %2, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %13, %"class.blink::CSSValue"* dereferenceable(3) %243) #10
  %274 = icmp eq %"class.blink::CSSValue"* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %234, i64 0, i32 1, i32 0
  %277 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %276, align 8
  call void @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKNS_11CSSPropertyERKNS_8CSSValueE(%"class.blink::StringKeyframe"* %146, %"class.blink::CSSProperty"* dereferenceable(24) %277, %"class.blink::CSSValue"* nonnull dereferenceable(3) %273) #10
  br label %278

278:                                              ; preds = %275, %272
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #10
  br label %294

294:                                              ; preds = %293, %290, %278
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #10
  br label %295

295:                                              ; preds = %294, %239, %238
  %296 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %234, i64 1
  %297 = icmp eq %"class.blink::PropertyHandle"* %296, %156
  br i1 %297, label %324, label %298

298:                                              ; preds = %295, %321
  %299 = phi %"class.blink::PropertyHandle"* [ %322, %321 ], [ %296, %295 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #10
  store i32 0, i32* %90, align 8, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #10, !alias.scope !9
  %300 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %299, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %10) #10
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #10
  br label %316

316:                                              ; preds = %315, %312, %298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #10
  %317 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %299, i64 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 1
  %320 = or i1 %300, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %299, i64 1
  %323 = icmp eq %"class.blink::PropertyHandle"* %322, %156
  br i1 %323, label %324, label %298

324:                                              ; preds = %321, %316, %295
  %325 = phi %"class.blink::PropertyHandle"* [ %156, %295 ], [ %156, %321 ], [ %299, %316 ]
  %326 = icmp eq %"class.blink::PropertyHandle"* %325, %194
  br i1 %326, label %196, label %233

327:                                              ; preds = %198, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #10
  %328 = load i32, i32* %33, align 4
  %329 = load i32, i32* %32, align 8
  %330 = icmp eq i32 %328, %329
  br i1 %330, label %345, label %331, !prof !8

331:                                              ; preds = %327
  %332 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %333 = zext i32 %328 to i64
  %334 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %332, i64 %333
  %335 = load i64, i64* %94, align 8
  %336 = bitcast %"class.blink::Member"* %334 to i64*
  store atomic i64 %335, i64* %336 monotonic, align 8
  %337 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %342, label %339

339:                                              ; preds = %331
  %340 = inttoptr i64 %335 to i8*
  %341 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %340) #10
  br label %342

342:                                              ; preds = %339, %331
  %343 = load i32, i32* %33, align 4
  %344 = add i32 %343, 1
  store i32 %344, i32* %33, align 4
  br label %346

345:                                              ; preds = %327
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14StringKeyframeEEEvOT_(%"class.WTF::Vector"* nonnull %53, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %19) #10
  br label %346

346:                                              ; preds = %342, %345
  %347 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.725"* nonnull %18, i32 %137) #10
  %348 = load double, double* %347, align 8
  %349 = fcmp oeq double %348, 0.000000e+00
  br i1 %349, label %350, label %472

350:                                              ; preds = %346
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %351 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %19, align 8
  %352 = bitcast %"class.blink::StringKeyframe"* %351 to void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)***
  %353 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %353, i64 2
  %355 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %354, align 8
  call void %355(%"class.WTF::HashSet.721"* nonnull sret %20, %"class.blink::StringKeyframe"* %351) #10
  %356 = load i32, i32* %111, align 4
  %357 = icmp eq i32 %356, 0
  %358 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %112, align 8
  %359 = load i32, i32* %113, align 8
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %358, i64 %360
  br i1 %357, label %394, label %362

362:                                              ; preds = %350
  %363 = icmp eq i32 %359, 0
  br i1 %363, label %394, label %364

364:                                              ; preds = %362, %387
  %365 = phi %"class.blink::PropertyHandle"* [ %388, %387 ], [ %358, %362 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  store i32 0, i32* %115, align 8, !alias.scope !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #10, !alias.scope !14
  %366 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %365, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9) #10
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #10
  br label %382

382:                                              ; preds = %381, %378, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  %383 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %365, i64 0, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %384, 1
  %386 = or i1 %366, %385
  br i1 %386, label %387, label %390

387:                                              ; preds = %382
  %388 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %365, i64 1
  %389 = icmp eq %"class.blink::PropertyHandle"* %388, %361
  br i1 %389, label %390, label %364

390:                                              ; preds = %387, %382
  %391 = phi %"class.blink::PropertyHandle"* [ %361, %387 ], [ %365, %382 ]
  %392 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %112, align 8
  %393 = load i32, i32* %113, align 8
  br label %394

394:                                              ; preds = %390, %350, %362
  %395 = phi i32 [ %359, %350 ], [ 0, %362 ], [ %393, %390 ]
  %396 = phi %"class.blink::PropertyHandle"* [ %358, %350 ], [ %358, %362 ], [ %392, %390 ]
  %397 = phi %"class.blink::PropertyHandle"* [ %361, %350 ], [ %358, %362 ], [ %391, %390 ]
  %398 = zext i32 %395 to i64
  %399 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %396, i64 %398
  %400 = icmp eq %"class.blink::PropertyHandle"* %397, %399
  br i1 %400, label %403, label %438

401:                                              ; preds = %469
  %402 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %112, align 8
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi %"class.blink::PropertyHandle"* [ %402, %401 ], [ %396, %394 ]
  %405 = icmp eq %"class.blink::PropertyHandle"* %404, null
  br i1 %405, label %596, label %406, !prof !7

406:                                              ; preds = %403
  %407 = load i32, i32* %113, align 8
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %436, label %409

409:                                              ; preds = %406
  %410 = zext i32 %407 to i64
  br label %411

411:                                              ; preds = %433, %409
  %412 = phi i64 [ 0, %409 ], [ %434, %433 ]
  %413 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %404, i64 %412, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = icmp eq i32 %414, 1
  br i1 %415, label %433, label %416

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %404, i64 %412, i32 2, i32 0, i32 0, i32 0
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %417, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %418, null
  br i1 %419, label %433, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %418) #10
  br label %433

433:                                              ; preds = %432, %429, %416, %411
  %434 = add nuw nsw i64 %412, 1
  %435 = icmp eq i64 %434, %410
  br i1 %435, label %436, label %411

436:                                              ; preds = %433, %406
  %437 = bitcast %"class.blink::PropertyHandle"* %404 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %437) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %112, align 8
  br label %596

438:                                              ; preds = %394, %469
  %439 = phi %"class.blink::PropertyHandle"* [ %470, %469 ], [ %397, %394 ]
  %440 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.722"* nonnull %119, %"class.blink::PropertyHandle"* dereferenceable(24) %439, %"class.blink::PropertyHandle"* dereferenceable(24) %439) #10
  %441 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %439, i64 1
  %442 = icmp eq %"class.blink::PropertyHandle"* %441, %361
  br i1 %442, label %469, label %443

443:                                              ; preds = %438, %466
  %444 = phi %"class.blink::PropertyHandle"* [ %467, %466 ], [ %441, %438 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  store i32 0, i32* %121, align 8, !alias.scope !19
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #10, !alias.scope !19
  %445 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %444, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8) #10
  %446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %447 = icmp eq %"class.WTF::StringImpl"* %446, null
  br i1 %447, label %461, label %448

448:                                              ; preds = %443
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = and i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  br i1 %452, label %455, label %457

455:                                              ; preds = %448
  %456 = add i32 %454, -1
  store i32 %456, i32* %453, align 4
  br label %457

457:                                              ; preds = %455, %448
  %458 = phi i32 [ %456, %455 ], [ %454, %448 ]
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %446) #10
  br label %461

461:                                              ; preds = %460, %457, %443
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  %462 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %444, i64 0, i32 0
  %463 = load i32, i32* %462, align 8
  %464 = icmp eq i32 %463, 1
  %465 = or i1 %445, %464
  br i1 %465, label %466, label %469

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %444, i64 1
  %468 = icmp eq %"class.blink::PropertyHandle"* %467, %361
  br i1 %468, label %469, label %443

469:                                              ; preds = %461, %466, %438
  %470 = phi %"class.blink::PropertyHandle"* [ %361, %438 ], [ %444, %461 ], [ %361, %466 ]
  %471 = icmp eq %"class.blink::PropertyHandle"* %470, %399
  br i1 %471, label %401, label %438

472:                                              ; preds = %346
  %473 = fcmp oeq double %348, 1.000000e+00
  br i1 %473, label %474, label %598

474:                                              ; preds = %472
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #10
  %475 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %19, align 8
  %476 = bitcast %"class.blink::StringKeyframe"* %475 to void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)***
  %477 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %477, i64 2
  %479 = load void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.721"*, %"class.blink::StringKeyframe"*)** %478, align 8
  call void %479(%"class.WTF::HashSet.721"* nonnull sret %21, %"class.blink::StringKeyframe"* %475) #10
  %480 = load i32, i32* %96, align 4
  %481 = icmp eq i32 %480, 0
  %482 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %97, align 8
  %483 = load i32, i32* %98, align 8
  %484 = zext i32 %483 to i64
  %485 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %482, i64 %484
  br i1 %481, label %518, label %486

486:                                              ; preds = %474
  %487 = icmp eq i32 %483, 0
  br i1 %487, label %518, label %488

488:                                              ; preds = %486, %511
  %489 = phi %"class.blink::PropertyHandle"* [ %512, %511 ], [ %482, %486 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  store i32 0, i32* %100, align 8, !alias.scope !24
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10, !alias.scope !24
  %490 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %489, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7) #10
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %506, label %493

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  br i1 %497, label %500, label %502

500:                                              ; preds = %493
  %501 = add i32 %499, -1
  store i32 %501, i32* %498, align 4
  br label %502

502:                                              ; preds = %500, %493
  %503 = phi i32 [ %501, %500 ], [ %499, %493 ]
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %506

505:                                              ; preds = %502
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %491) #10
  br label %506

506:                                              ; preds = %505, %502, %488
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  %507 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %489, i64 0, i32 0
  %508 = load i32, i32* %507, align 8
  %509 = icmp eq i32 %508, 1
  %510 = or i1 %490, %509
  br i1 %510, label %511, label %514

511:                                              ; preds = %506
  %512 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %489, i64 1
  %513 = icmp eq %"class.blink::PropertyHandle"* %512, %485
  br i1 %513, label %514, label %488

514:                                              ; preds = %511, %506
  %515 = phi %"class.blink::PropertyHandle"* [ %485, %511 ], [ %489, %506 ]
  %516 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %97, align 8
  %517 = load i32, i32* %98, align 8
  br label %518

518:                                              ; preds = %514, %474, %486
  %519 = phi i32 [ %483, %474 ], [ 0, %486 ], [ %517, %514 ]
  %520 = phi %"class.blink::PropertyHandle"* [ %482, %474 ], [ %482, %486 ], [ %516, %514 ]
  %521 = phi %"class.blink::PropertyHandle"* [ %485, %474 ], [ %482, %486 ], [ %515, %514 ]
  %522 = zext i32 %519 to i64
  %523 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %520, i64 %522
  %524 = icmp eq %"class.blink::PropertyHandle"* %521, %523
  br i1 %524, label %527, label %562

525:                                              ; preds = %593
  %526 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %97, align 8
  br label %527

527:                                              ; preds = %525, %518
  %528 = phi %"class.blink::PropertyHandle"* [ %526, %525 ], [ %520, %518 ]
  %529 = icmp eq %"class.blink::PropertyHandle"* %528, null
  br i1 %529, label %596, label %530, !prof !7

530:                                              ; preds = %527
  %531 = load i32, i32* %98, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %560, label %533

533:                                              ; preds = %530
  %534 = zext i32 %531 to i64
  br label %535

535:                                              ; preds = %557, %533
  %536 = phi i64 [ 0, %533 ], [ %558, %557 ]
  %537 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %528, i64 %536, i32 0
  %538 = load i32, i32* %537, align 8
  %539 = icmp eq i32 %538, 1
  br i1 %539, label %557, label %540

540:                                              ; preds = %535
  %541 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %528, i64 %536, i32 2, i32 0, i32 0, i32 0
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %541, align 8
  %543 = icmp eq %"class.WTF::StringImpl"* %542, null
  br i1 %543, label %557, label %544

544:                                              ; preds = %540
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  %550 = load i32, i32* %549, align 4
  br i1 %548, label %551, label %553

551:                                              ; preds = %544
  %552 = add i32 %550, -1
  store i32 %552, i32* %549, align 4
  br label %553

553:                                              ; preds = %551, %544
  %554 = phi i32 [ %552, %551 ], [ %550, %544 ]
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %557

556:                                              ; preds = %553
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #10
  br label %557

557:                                              ; preds = %556, %553, %540, %535
  %558 = add nuw nsw i64 %536, 1
  %559 = icmp eq i64 %558, %534
  br i1 %559, label %560, label %535

560:                                              ; preds = %557, %530
  %561 = bitcast %"class.blink::PropertyHandle"* %528 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %561) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %97, align 8
  br label %596

562:                                              ; preds = %518, %593
  %563 = phi %"class.blink::PropertyHandle"* [ %594, %593 ], [ %521, %518 ]
  %564 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.722"* nonnull %104, %"class.blink::PropertyHandle"* dereferenceable(24) %563, %"class.blink::PropertyHandle"* dereferenceable(24) %563) #10
  %565 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %563, i64 1
  %566 = icmp eq %"class.blink::PropertyHandle"* %565, %485
  br i1 %566, label %593, label %567

567:                                              ; preds = %562, %590
  %568 = phi %"class.blink::PropertyHandle"* [ %591, %590 ], [ %565, %562 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #10
  store i32 0, i32* %106, align 8, !alias.scope !29
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #10, !alias.scope !29
  %569 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %568, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6) #10
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #10
  br label %585

585:                                              ; preds = %584, %581, %567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #10
  %586 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %568, i64 0, i32 0
  %587 = load i32, i32* %586, align 8
  %588 = icmp eq i32 %587, 1
  %589 = or i1 %569, %588
  br i1 %589, label %590, label %593

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %568, i64 1
  %592 = icmp eq %"class.blink::PropertyHandle"* %591, %485
  br i1 %592, label %593, label %567

593:                                              ; preds = %585, %590, %562
  %594 = phi %"class.blink::PropertyHandle"* [ %485, %562 ], [ %568, %585 ], [ %485, %590 ]
  %595 = icmp eq %"class.blink::PropertyHandle"* %594, %523
  br i1 %595, label %525, label %562

596:                                              ; preds = %560, %527, %436, %403
  %597 = phi i8* [ %110, %403 ], [ %110, %436 ], [ %95, %527 ], [ %95, %560 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %597) #10
  br label %598

598:                                              ; preds = %596, %472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %599 = add nuw i32 %137, 1
  %600 = load i32, i32* %55, align 4
  %601 = icmp ult i32 %599, %600
  br i1 %601, label %136, label %125

602:                                              ; preds = %125
  %603 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %603)
  %604 = bitcast %"class.blink::HeapHashMap.789"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %604) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %604, i8 -86, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %604, i8 0, i64 20, i1 false) #10
  %605 = ptrtoint %"class.WTF::HashMap.759"* %22 to i64
  %606 = call i8* @_Znwm(i64 48) #11, !noalias !34
  %607 = bitcast i8* %606 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %607, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::PropertyHandle"*, %"class.blink::CSSValue"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS3_7ElementERKN3WTF7HashSetINS3_14PropertyHandleENS7_11DefaultHashIS9_E4HashENS7_10HashTraitsIS9_EENS7_18PartitionAllocatorEEERNS7_7HashMapINS7_6StringESK_NS7_10StringHashENSD_ISK_EESM_SF_EEE3$_0JNS7_17UnretainedWrapperISN_EEEEEFvS9_PKNS3_8CSSValueEEE3RunEPNS0_13BindStateBaseEOS9_SV_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS2_7ElementERKN3WTF7HashSetINS2_14PropertyHandleENS6_11DefaultHashIS8_E4HashENS6_10HashTraitsIS8_EENS6_18PartitionAllocatorEEERNS6_7HashMapINS6_6StringESJ_NS6_10StringHashENSC_ISJ_EESL_SE_EEE3$_0JNS6_17UnretainedWrapperISM_EEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !34
  %608 = getelementptr inbounds i8, i8* %606, i64 40
  %609 = bitcast i8* %608 to i64*
  store i64 %605, i64* %609, align 8, !noalias !34
  %610 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %606, i8** %610, align 8, !alias.scope !34
  call void @_ZN5blink14AnimationUtils32ForEachInterpolatedPropertyValueEPNS_7ElementERKN3WTF7HashSetINS_14PropertyHandleENS3_11DefaultHashIS5_E4HashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEERNS_11HeapHashMapIS5_NS_6MemberINS_10HeapVectorINSG_INS_13InterpolationEEELj1EEEEES8_SA_NS9_ISL_EEEEN4base17RepeatingCallbackIFvS5_PKNS_8CSSValueEEEE(%"class.blink::Element"* nonnull %2, %"class.WTF::HashSet.721"* nonnull dereferenceable(24) %15, %"class.blink::HeapHashMap.789"* nonnull dereferenceable(24) %4, %"class.base::RepeatingCallback"* nonnull %5) #10
  %611 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %611) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %604) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %603)
  %612 = load i32, i32* %42, align 4
  %613 = load i32, i32* %37, align 4
  br label %614

614:                                              ; preds = %125, %602
  %615 = phi i32 [ %131, %125 ], [ %613, %602 ]
  %616 = phi i32 [ %130, %125 ], [ %612, %602 ]
  %617 = icmp uge i32 %616, %615
  %618 = load i32, i32* %33, align 4
  %619 = icmp eq i32 %618, 0
  %620 = or i1 %617, %619
  br i1 %620, label %637, label %621

621:                                              ; preds = %614
  %622 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %53, i32 0) #10
  %623 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %622, i64 0, i32 0, i32 0
  %624 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %623, align 8
  %625 = icmp eq %"class.blink::Keyframe"* %624, null
  br i1 %625, label %634, label %626

626:                                              ; preds = %621
  %627 = bitcast %"class.blink::Keyframe"* %624 to i1 (%"class.blink::Keyframe"*)***
  %628 = load i1 (%"class.blink::Keyframe"*)**, i1 (%"class.blink::Keyframe"*)*** %627, align 8
  %629 = getelementptr inbounds i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %628, i64 5
  %630 = load i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %629, align 8
  %631 = call zeroext i1 %630(%"class.blink::Keyframe"* nonnull %624) #10
  %632 = bitcast %"class.blink::Keyframe"* %624 to %"class.blink::StringKeyframe"*
  %633 = select i1 %631, %"class.blink::StringKeyframe"* %632, %"class.blink::StringKeyframe"* null
  br label %634

634:                                              ; preds = %621, %626
  %635 = phi %"class.blink::StringKeyframe"* [ %633, %626 ], [ null, %621 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_120AddMissingPropertiesERKN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEERKNS1_7HashSetINS_14PropertyHandleENS1_11DefaultHashISC_E4HashENS5_ISC_EES7_EESJ_PNS_14StringKeyframeE(%"class.WTF::HashMap.759"* nonnull dereferenceable(24) %22, %"class.WTF::HashSet.721"* nonnull dereferenceable(24) %15, %"class.WTF::HashSet.721"* nonnull dereferenceable(24) %16, %"class.blink::StringKeyframe"* %635)
  %636 = load i32, i32* %37, align 4
  br label %637

637:                                              ; preds = %614, %634
  %638 = phi i32 [ %636, %634 ], [ %615, %614 ]
  %639 = load i32, i32* %47, align 4
  %640 = icmp uge i32 %639, %638
  %641 = load i32, i32* %33, align 4
  %642 = icmp eq i32 %641, 0
  %643 = or i1 %640, %642
  br i1 %643, label %661, label %644

644:                                              ; preds = %637
  %645 = load i32, i32* %55, align 4
  %646 = add i32 %645, -1
  %647 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %53, i32 %646) #10
  %648 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %647, i64 0, i32 0, i32 0
  %649 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %648, align 8
  %650 = icmp eq %"class.blink::Keyframe"* %649, null
  br i1 %650, label %659, label %651

651:                                              ; preds = %644
  %652 = bitcast %"class.blink::Keyframe"* %649 to i1 (%"class.blink::Keyframe"*)***
  %653 = load i1 (%"class.blink::Keyframe"*)**, i1 (%"class.blink::Keyframe"*)*** %652, align 8
  %654 = getelementptr inbounds i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %653, i64 5
  %655 = load i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %654, align 8
  %656 = call zeroext i1 %655(%"class.blink::Keyframe"* nonnull %649) #10
  %657 = bitcast %"class.blink::Keyframe"* %649 to %"class.blink::StringKeyframe"*
  %658 = select i1 %656, %"class.blink::StringKeyframe"* %657, %"class.blink::StringKeyframe"* null
  br label %659

659:                                              ; preds = %644, %651
  %660 = phi %"class.blink::StringKeyframe"* [ %658, %651 ], [ null, %644 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_120AddMissingPropertiesERKN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEERKNS1_7HashSetINS_14PropertyHandleENS1_11DefaultHashISC_E4HashENS5_ISC_EES7_EESJ_PNS_14StringKeyframeE(%"class.WTF::HashMap.759"* nonnull dereferenceable(24) %22, %"class.WTF::HashSet.721"* nonnull dereferenceable(24) %15, %"class.WTF::HashSet.721"* nonnull dereferenceable(24) %17, %"class.blink::StringKeyframe"* %660)
  br label %661

661:                                              ; preds = %637, %659
  %662 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %663 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %664 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %665 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %665, align 8
  %666 = load i64, i64* %664, align 8
  %667 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %664 monotonic, align 8
  store atomic i64 %666, i64* %667 monotonic, align 8
  %668 = load i32, i32* %32, align 8
  store i32 %668, i32* %662, align 8
  store i32 0, i32* %32, align 8
  %669 = load i32, i32* %33, align 4
  store i32 %669, i32* %663, align 4
  store i32 0, i32* %33, align 4
  %670 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %675, label %672

672:                                              ; preds = %661
  %673 = inttoptr i64 %666 to i8*
  %674 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %673) #10
  br label %675

675:                                              ; preds = %672, %661
  %676 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %682, label %678

678:                                              ; preds = %675
  %679 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %680 = load i8*, i8** %679, align 8
  %681 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %680) #10
  br label %682

682:                                              ; preds = %675, %678
  %683 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %127, align 8
  %684 = icmp eq %"struct.WTF::KeyValuePair.763"* %683, null
  br i1 %684, label %687, label %685, !prof !7

685:                                              ; preds = %682
  %686 = load i32, i32* %128, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.763"* nonnull %683, i32 %686) #10
  store %"struct.WTF::KeyValuePair.763"* null, %"struct.WTF::KeyValuePair.763"** %127, align 8
  br label %687

687:                                              ; preds = %682, %685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  %688 = load double*, double** %50, align 8
  %689 = icmp eq double* %688, null
  %690 = bitcast double* %688 to i8*
  br i1 %689, label %696, label %691, !prof !7

691:                                              ; preds = %687
  %692 = load i32, i32* %51, align 4
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %695, label %694, !prof !8

694:                                              ; preds = %691
  store i32 0, i32* %51, align 4
  br label %695

695:                                              ; preds = %694, %691
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %690) #10
  store double* null, double** %50, align 8
  br label %696

696:                                              ; preds = %687, %695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #10
  %697 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %45, align 8
  %698 = icmp eq %"class.blink::PropertyHandle"* %697, null
  br i1 %698, label %731, label %699, !prof !7

699:                                              ; preds = %696
  %700 = load i32, i32* %46, align 8
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %729, label %702

702:                                              ; preds = %699
  %703 = zext i32 %700 to i64
  br label %704

704:                                              ; preds = %726, %702
  %705 = phi i64 [ 0, %702 ], [ %727, %726 ]
  %706 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %697, i64 %705, i32 0
  %707 = load i32, i32* %706, align 8
  %708 = icmp eq i32 %707, 1
  br i1 %708, label %726, label %709

709:                                              ; preds = %704
  %710 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %697, i64 %705, i32 2, i32 0, i32 0, i32 0
  %711 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %710, align 8
  %712 = icmp eq %"class.WTF::StringImpl"* %711, null
  br i1 %712, label %726, label %713

713:                                              ; preds = %709
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %715 = load atomic i32, i32* %714 monotonic, align 4
  %716 = and i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 0
  %719 = load i32, i32* %718, align 4
  br i1 %717, label %720, label %722

720:                                              ; preds = %713
  %721 = add i32 %719, -1
  store i32 %721, i32* %718, align 4
  br label %722

722:                                              ; preds = %720, %713
  %723 = phi i32 [ %721, %720 ], [ %719, %713 ]
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %726

725:                                              ; preds = %722
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %711) #10
  br label %726

726:                                              ; preds = %725, %722, %709, %704
  %727 = add nuw nsw i64 %705, 1
  %728 = icmp eq i64 %727, %703
  br i1 %728, label %729, label %704

729:                                              ; preds = %726, %699
  %730 = bitcast %"class.blink::PropertyHandle"* %697 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %730) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %45, align 8
  br label %731

731:                                              ; preds = %696, %729
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %732 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %40, align 8
  %733 = icmp eq %"class.blink::PropertyHandle"* %732, null
  br i1 %733, label %766, label %734, !prof !7

734:                                              ; preds = %731
  %735 = load i32, i32* %41, align 8
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %764, label %737

737:                                              ; preds = %734
  %738 = zext i32 %735 to i64
  br label %739

739:                                              ; preds = %761, %737
  %740 = phi i64 [ 0, %737 ], [ %762, %761 ]
  %741 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %732, i64 %740, i32 0
  %742 = load i32, i32* %741, align 8
  %743 = icmp eq i32 %742, 1
  br i1 %743, label %761, label %744

744:                                              ; preds = %739
  %745 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %732, i64 %740, i32 2, i32 0, i32 0, i32 0
  %746 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %745, align 8
  %747 = icmp eq %"class.WTF::StringImpl"* %746, null
  br i1 %747, label %761, label %748

748:                                              ; preds = %744
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %750 = load atomic i32, i32* %749 monotonic, align 4
  %751 = and i32 %750, 2
  %752 = icmp eq i32 %751, 0
  %753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %746, i64 0, i32 0
  %754 = load i32, i32* %753, align 4
  br i1 %752, label %755, label %757

755:                                              ; preds = %748
  %756 = add i32 %754, -1
  store i32 %756, i32* %753, align 4
  br label %757

757:                                              ; preds = %755, %748
  %758 = phi i32 [ %756, %755 ], [ %754, %748 ]
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %760, label %761

760:                                              ; preds = %757
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %746) #10
  br label %761

761:                                              ; preds = %760, %757, %744, %739
  %762 = add nuw nsw i64 %740, 1
  %763 = icmp eq i64 %762, %738
  br i1 %763, label %764, label %739

764:                                              ; preds = %761, %734
  %765 = bitcast %"class.blink::PropertyHandle"* %732 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %765) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %40, align 8
  br label %766

766:                                              ; preds = %731, %764
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #10
  %767 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %35, align 8
  %768 = icmp eq %"class.blink::PropertyHandle"* %767, null
  br i1 %768, label %801, label %769, !prof !7

769:                                              ; preds = %766
  %770 = load i32, i32* %36, align 8
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %799, label %772

772:                                              ; preds = %769
  %773 = zext i32 %770 to i64
  br label %774

774:                                              ; preds = %796, %772
  %775 = phi i64 [ 0, %772 ], [ %797, %796 ]
  %776 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %767, i64 %775, i32 0
  %777 = load i32, i32* %776, align 8
  %778 = icmp eq i32 %777, 1
  br i1 %778, label %796, label %779

779:                                              ; preds = %774
  %780 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %767, i64 %775, i32 2, i32 0, i32 0, i32 0
  %781 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %780, align 8
  %782 = icmp eq %"class.WTF::StringImpl"* %781, null
  br i1 %782, label %796, label %783

783:                                              ; preds = %779
  %784 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %781, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = load atomic i32, i32* %784 monotonic, align 4
  %786 = and i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %781, i64 0, i32 0
  %789 = load i32, i32* %788, align 4
  br i1 %787, label %790, label %792

790:                                              ; preds = %783
  %791 = add i32 %789, -1
  store i32 %791, i32* %788, align 4
  br label %792

792:                                              ; preds = %790, %783
  %793 = phi i32 [ %791, %790 ], [ %789, %783 ]
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %796

795:                                              ; preds = %792
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %781) #10
  br label %796

796:                                              ; preds = %795, %792, %779, %774
  %797 = add nuw nsw i64 %775, 1
  %798 = icmp eq i64 %797, %773
  br i1 %798, label %799, label %774

799:                                              ; preds = %796, %769
  %800 = bitcast %"class.blink::PropertyHandle"* %767 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %800) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %35, align 8
  br label %801

801:                                              ; preds = %766, %799
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %802

802:                                              ; preds = %801, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.721"* sret, %"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #2

declare void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.725"* sret, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_120AddMissingPropertiesERKN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEERKNS1_7HashSetINS_14PropertyHandleENS1_11DefaultHashISC_E4HashENS5_ISC_EES7_EESJ_PNS_14StringKeyframeE(%"class.WTF::HashMap.759"* dereferenceable(24), %"class.WTF::HashSet.721"* nocapture readonly dereferenceable(24), %"class.WTF::HashSet.721"* dereferenceable(24), %"class.blink::StringKeyframe"*) unnamed_addr #0 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %1, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %14, i64 %17
  br i1 %12, label %57, label %19

19:                                               ; preds = %4
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1
  %25 = bitcast %union.anon.15* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %50, %21
  %28 = phi %"class.blink::PropertyHandle"* [ %14, %21 ], [ %51, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  store i32 0, i32* %23, align 8, !alias.scope !41
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10, !alias.scope !41
  %29 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %28, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6) #10
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %45

45:                                               ; preds = %44, %41, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %46 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %28, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 1
  %49 = or i1 %29, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %28, i64 1
  %52 = icmp eq %"class.blink::PropertyHandle"* %51, %18
  br i1 %52, label %53, label %27

53:                                               ; preds = %50, %45
  %54 = phi %"class.blink::PropertyHandle"* [ %18, %50 ], [ %28, %45 ]
  %55 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %13, align 8
  %56 = load i32, i32* %15, align 8
  br label %57

57:                                               ; preds = %53, %4, %19
  %58 = phi i32 [ %16, %4 ], [ 0, %19 ], [ %56, %53 ]
  %59 = phi %"class.blink::PropertyHandle"* [ %14, %4 ], [ %14, %19 ], [ %55, %53 ]
  %60 = phi %"class.blink::PropertyHandle"* [ %18, %4 ], [ %14, %19 ], [ %54, %53 ]
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %59, i64 %61
  %63 = icmp eq %"class.blink::PropertyHandle"* %60, %62
  br i1 %63, label %78, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::HashSet.721", %"class.WTF::HashSet.721"* %2, i64 0, i32 0
  %66 = bitcast %"class.WTF::String"* %7 to i8*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %68 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  %69 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.WTF::HashMap.759", %"class.WTF::HashMap.759"* %0, i64 0, i32 0
  %71 = bitcast %"class.WTF::String"* %9 to i8*
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %73 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %74 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %76 = bitcast %union.anon.15* %75 to i8*
  %77 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %79

78:                                               ; preds = %205, %57
  ret void

79:                                               ; preds = %64, %205
  %80 = phi %"class.blink::PropertyHandle"* [ %60, %64 ], [ %206, %205 ]
  %81 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %176, label %84

84:                                               ; preds = %79
  %85 = call %"class.blink::PropertyHandle"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_(%"class.WTF::HashTable.722"* %65, %"class.blink::PropertyHandle"* dereferenceable(24) %80) #10
  %86 = icmp eq %"class.blink::PropertyHandle"* %85, null
  br i1 %86, label %87, label %176

87:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %67, align 8
  %88 = bitcast %"class.blink::PropertyHandle"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %88, i64 16, i1 false) #10
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %80, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %69, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #10
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !8

106:                                              ; preds = %97
  call void @llvm.trap() #10
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %87, %92, %107
  %110 = call %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %8) #10
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %67, align 8
  %111 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS5_S9_SA_EES1_EEbRKT0_(%"class.WTF::HashTable.760"* %70, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  br i1 %111, label %112, label %159

112:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  %113 = call %"struct.WTF::KeyValuePair.763"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.760"* %70, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %114 = icmp eq %"struct.WTF::KeyValuePair.763"* %113, null
  br i1 %114, label %136, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %113, i64 0, i32 1, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #10
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !8

133:                                              ; preds = %124
  call void @llvm.trap() #10
  unreachable

134:                                              ; preds = %124
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %125, align 4
  br label %136

136:                                              ; preds = %112, %115, %119, %134
  %137 = phi %"class.WTF::StringImpl"* [ null, %112 ], [ null, %115 ], [ %117, %119 ], [ %117, %134 ]
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %72, align 8
  %138 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %80, i64 0, i32 1, i32 0
  %139 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %139, i64 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = call i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %3, i32 %141, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0, %"class.blink::StyleSheetContents"* null) #10
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %136, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  br label %159

159:                                              ; preds = %158, %109
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #10
  br label %175

175:                                              ; preds = %159, %171, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  br label %176

176:                                              ; preds = %84, %79, %175
  %177 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %80, i64 1
  %178 = icmp eq %"class.blink::PropertyHandle"* %177, %18
  br i1 %178, label %205, label %179

179:                                              ; preds = %176, %202
  %180 = phi %"class.blink::PropertyHandle"* [ %203, %202 ], [ %177, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  store i32 0, i32* %74, align 8, !alias.scope !46
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #10, !alias.scope !46
  %181 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %180, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #10
  br label %197

197:                                              ; preds = %196, %193, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  %198 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %180, i64 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %199, 1
  %201 = or i1 %181, %200
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %180, i64 1
  %204 = icmp eq %"class.blink::PropertyHandle"* %203, %18
  br i1 %204, label %205, label %179

205:                                              ; preds = %197, %202, %176
  %206 = phi %"class.blink::PropertyHandle"* [ %18, %176 ], [ %180, %197 ], [ %18, %202 ]
  %207 = icmp eq %"class.blink::PropertyHandle"* %206, %62
  br i1 %207, label %78, label %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD2Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22CssKeyframeEffectModelD0Ev(%"class.blink::CssKeyframeEffectModel"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CssKeyframeEffectModel", %"class.blink::CssKeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CssKeyframeEffectModel", %"class.blink::CssKeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.764"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %5, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %7 = icmp ne %"struct.WTF::KeyValuePair"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = xor i1 %2, true
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #3 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapVector.848", align 8
  %3 = alloca %"class.blink::StringKeyframe"*, align 8
  %4 = bitcast %"class.blink::HeapVector.848"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::StringKeyframe"** %3 to i8*
  %17 = bitcast %"class.blink::StringKeyframe"** %3 to %"class.blink::Keyframe"**
  %18 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %2, i64 0, i32 0
  br label %24

19:                                               ; preds = %51, %1
  %20 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 8
  %21 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10
  %22 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.848"* nonnull dereferenceable(16) %2, i32* dereferenceable(4) %20, %class.scoped_refptr* dereferenceable(8) %21) #10
  %23 = bitcast %"class.blink::KeyframeEffectModel"* %22 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret %"class.blink::KeyframeEffectModelBase"* %23

24:                                               ; preds = %15, %51
  %25 = phi %"class.blink::Member"* [ %9, %15 ], [ %52, %51 ]
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %26, align 8
  %28 = bitcast %"class.blink::Keyframe"* %27 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %29 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %29, i64 3
  %31 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %30, align 8
  %32 = call %"class.blink::Keyframe"* %31(%"class.blink::Keyframe"* %27) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store %"class.blink::Keyframe"* %32, %"class.blink::Keyframe"** %17, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %50, label %36, !prof !8

36:                                               ; preds = %24
  %37 = ptrtoint %"class.blink::Keyframe"* %32 to i64
  %38 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %5, align 8
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds %"class.blink::Member.854", %"class.blink::Member.854"* %38, i64 %39
  %41 = bitcast %"class.blink::Member.854"* %40 to i64*
  store atomic i64 %37, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::Keyframe"* %32 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #10
  br label %47

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %51

50:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.851"* nonnull %18, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %3) #10
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 1
  %53 = icmp eq %"class.blink::Member"* %52, %13
  br i1 %53, label %19, label %24
}

declare void @_ZN5blink14StringKeyframe23RemoveCustomCSSPropertyERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  tail call void @_ZNK5blink14StringKeyframe20EnsureCssPropertyMapEv(%"class.blink::StringKeyframe"* %0) #10
  %6 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 3
  %9 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  br i1 %8, label %11, label %34

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !8

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %11, %15, %30
  %33 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %10, %"class.WTF::StringImpl"* %13) #10
  br label %40

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1, i32 0
  %36 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %10, i32 %38) #10
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i32 [ %33, %32 ], [ %39, %34 ]
  %42 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %43, align 8
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i32 %41, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %43, align 8
  br label %56

47:                                               ; preds = %40
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %41) #10
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %48, i8* %49) #10
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %43, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 64, %"class.logging::CheckOpResult"* nonnull %4) #10
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %56

56:                                               ; preds = %46, %47, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  %57 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  %58 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %57, i64 0, i32 0
  %59 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %57, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %57, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %58, i64 4
  %66 = bitcast %"class.blink::CSSPropertyValueSet"* %65 to %"class.WTF::Vector.744"*
  %67 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.744"* %66, i32 %41) #10
  %68 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %67, i64 0, i32 1, i32 0, i32 0
  br label %74

69:                                               ; preds = %60, %56
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %58, i64 2
  %71 = bitcast %"class.blink::CSSPropertyValueSet"* %70 to %"class.blink::Member.747"*
  %72 = zext i32 %41 to i64
  %73 = getelementptr inbounds %"class.blink::Member.747", %"class.blink::Member.747"* %71, i64 %72, i32 0, i32 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi %"class.blink::CSSValue"** [ %73, %69 ], [ %68, %64 ]
  %76 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %75, align 8
  ret %"class.blink::CSSValue"* %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::CSSValue"* @_ZN5blink13StyleResolver12ComputeValueEPNS_7ElementERKNS_15CSSPropertyNameERKNS_8CSSValueE(%"class.blink::Element"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare void @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKNS_11CSSPropertyERKNS_8CSSValueE(%"class.blink::StringKeyframe"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare void @_ZNK5blink14StringKeyframe20EnsureCssPropertyMapEv(%"class.blink::StringKeyframe"*) local_unnamed_addr #2

declare i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.744"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.744", %"class.WTF::Vector.744"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.744", %"class.WTF::Vector.744"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink14AnimationUtils32ForEachInterpolatedPropertyValueEPNS_7ElementERKN3WTF7HashSetINS_14PropertyHandleENS3_11DefaultHashIS5_E4HashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEERNS_11HeapHashMapIS5_NS_6MemberINS_10HeapVectorINSG_INS_13InterpolationEEELj1EEEEES8_SA_NS9_ISL_EEEEN4base17RepeatingCallbackIFvS5_PKNS_8CSSValueEEEE(%"class.blink::Element"*, %"class.WTF::HashSet.721"* dereferenceable(24), %"class.blink::HeapHashMap.789"* dereferenceable(24), %"class.base::RepeatingCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS3_7ElementERKN3WTF7HashSetINS3_14PropertyHandleENS7_11DefaultHashIS9_E4HashENS7_10HashTraitsIS9_EENS7_18PartitionAllocatorEEERNS7_7HashMapINS7_6StringESK_NS7_10StringHashENSD_ISK_EESM_SF_EEE3$_0JNS7_17UnretainedWrapperISN_EEEEEFvS9_PKNS3_8CSSValueEEE3RunEPNS0_13BindStateBaseEOS9_SV_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.blink::PropertyHandle"* nocapture dereferenceable(24), %"class.blink::CSSValue"*) #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca [12 x i8], align 4
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to %"class.WTF::HashMap.759"**
  %10 = load %"class.WTF::HashMap.759"*, %"class.WTF::HashMap.759"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19)
  %20 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %14, i64 12, i1 false)
  %21 = or i32 %12, 1
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  br label %115

25:                                               ; preds = %3
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  store i32 %12, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %19, i64 12, i1 false) #10
  %30 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  %31 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = icmp eq i64 %18, 0
  br i1 %32, label %50, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !8

47:                                               ; preds = %38
  tail call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %25
  %51 = tail call %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %5) #10
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %27, align 8
  %52 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  %53 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %2) #10
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::HashMap.759", %"class.WTF::HashMap.759"* %10, i64 0, i32 0
  %56 = call { %"struct.WTF::KeyValuePair.763"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.760"* %55, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %57 = extractvalue { %"struct.WTF::KeyValuePair.763"*, i8 } %56, 1
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %82

60:                                               ; preds = %50
  %61 = extractvalue { %"struct.WTF::KeyValuePair.763"*, i8 } %56, 0
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %61, i64 0, i32 1
  %63 = bitcast %"class.WTF::String"* %6 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %65 = bitcast %"class.WTF::String"* %62 to i64*
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #10
  br label %82

82:                                               ; preds = %81, %78, %60, %50
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #10
  br label %98

98:                                               ; preds = %97, %94, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #10
  br label %114

114:                                              ; preds = %113, %110, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %115

115:                                              ; preds = %114, %23
  %116 = phi %"class.WTF::StringImpl"* [ %24, %23 ], [ %30, %114 ]
  %117 = icmp eq i64 %18, 0
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #10
  br label %131

131:                                              ; preds = %115, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.763"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.760"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.763"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.760"* %0, %"struct.WTF::KeyValuePair.763"* null)
  %9 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.763"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.763"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.763"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.763"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %152, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.763"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.763"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.763"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.763"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #10
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !8

96:                                               ; preds = %87
  tail call void @llvm.trap() #10
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.763"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #10
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %79, i64 0, i32 1
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %121 = bitcast %"class.WTF::String"* %2 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %120, align 8
  %123 = bitcast %"class.WTF::String"* %119 to i64*
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  store i64 %122, i64* %123, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #10
  br label %140

140:                                              ; preds = %118, %136, %139
  %141 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %12, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %140
  %151 = tail call %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.760"* %0, %"struct.WTF::KeyValuePair.763"* %79)
  br label %152

152:                                              ; preds = %54, %140, %150
  %153 = phi i8 [ 1, %140 ], [ 1, %150 ], [ 0, %54 ]
  %154 = phi %"struct.WTF::KeyValuePair.763"* [ %79, %140 ], [ %151, %150 ], [ %47, %54 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.763"*, i8 } undef, %"struct.WTF::KeyValuePair.763"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.763"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.763"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.760"*, %"struct.WTF::KeyValuePair.763"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.763"*
  %37 = call %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.760"* %0, %"struct.WTF::KeyValuePair.763"* %36, i32 %32, %"struct.WTF::KeyValuePair.763"* %1) #10
  ret %"struct.WTF::KeyValuePair.763"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.760"*, %"struct.WTF::KeyValuePair.763"*, i32, %"struct.WTF::KeyValuePair.763"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.760", align 8
  %6 = bitcast %"class.WTF::HashTable.760"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.760"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.763"* %1, %"struct.WTF::KeyValuePair.763"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.763"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.760"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.760"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.763"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.760"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.760"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.763"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.763"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.763"* nonnull %37, i32 %34) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.763"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.763"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.763"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.763"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.760"* nonnull %5, %"struct.WTF::KeyValuePair.763"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.763"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.763"* %53, %"struct.WTF::KeyValuePair.763"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.763"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.763"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.763"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.763"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.760"*, %"struct.WTF::KeyValuePair.763"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.763"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.760"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.763"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #10
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.763"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.763"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.763"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.763"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.760"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.763"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.763"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.763"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.763"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.763"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.763"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.763"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.763"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #10
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.763"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.763"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.763"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.763"*, i8 } undef, %"struct.WTF::KeyValuePair.763"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.763"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.763"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.763"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.763"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.763"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS2_7ElementERKN3WTF7HashSetINS2_14PropertyHandleENS6_11DefaultHashIS8_E4HashENS6_10HashTraitsIS8_EENS6_18PartitionAllocatorEEERNS6_7HashMapINS6_6StringESJ_NS6_10StringHashENSC_ISJ_EESL_SE_EEE3$_0JNS6_17UnretainedWrapperISM_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, i32, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EEPKS2_RKT0_(%"class.WTF::HashTable.722"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = icmp eq %"class.blink::PropertyHandle"* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %14
  %16 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %15, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %16, label %64, label %17

17:                                               ; preds = %7
  %18 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %21 = bitcast %union.anon.15* %20 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = xor i32 %12, -1
  %24 = lshr i32 %12, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %17, %57
  %37 = phi %"class.blink::PropertyHandle"* [ %15, %17 ], [ %62, %57 ]
  %38 = phi i64 [ %14, %17 ], [ %61, %57 ]
  %39 = phi i64 [ 0, %17 ], [ %59, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  store i32 0, i32* %19, align 8, !alias.scope !51
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #10, !alias.scope !51
  %40 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %36, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  br i1 %40, label %64, label %57

57:                                               ; preds = %56
  %58 = icmp eq i64 %39, 0
  %59 = select i1 %58, i64 %35, i64 %39
  %60 = add i64 %59, %38
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %61
  %63 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %62, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %63, label %64, label %36

64:                                               ; preds = %57, %56, %7, %2
  %65 = phi %"class.blink::PropertyHandle"* [ null, %2 ], [ %15, %7 ], [ %62, %57 ], [ null, %56 ]
  ret %"class.blink::PropertyHandle"* %65
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS5_S9_SA_EES1_EEbRKT0_(%"class.WTF::HashTable.760"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.763"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #10
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.763"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.763"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #10
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.763"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.763"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.763"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.760"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.763"*, %"struct.WTF::KeyValuePair.763"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.763"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.760", %"class.WTF::HashTable.760"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #10
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.763"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.763"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #10
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.763", %"struct.WTF::KeyValuePair.763"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.763"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.763"* %62
}

declare void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.15* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !56
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !56
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member"* null, %"class.blink::Member"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %30 = icmp ne %"class.blink::Member"* %24, null
  %31 = icmp ne %"class.blink::Member"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !7

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member"* %24 to i8*
  %37 = bitcast %"class.blink::Member"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.18"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.722"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.722"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.15* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !61
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !61
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %61, label %139, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #10
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #10
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !8

105:                                              ; preds = %96
  call void @llvm.trap() #10
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %83
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #10
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %13, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.722"* %0, %"class.blink::PropertyHandle"* %85)
  br label %139

139:                                              ; preds = %60, %127, %137
  %140 = phi i8 [ 1, %127 ], [ 1, %137 ], [ 0, %60 ]
  %141 = phi %"class.blink::PropertyHandle"* [ %85, %127 ], [ %138, %137 ], [ %42, %60 ]
  %142 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %141, 0
  %143 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %142, i8 %140, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.722"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.722"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #10
  ret %"class.blink::PropertyHandle"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.722"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.722", align 8
  %7 = bitcast %"class.WTF::HashTable.722"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.722"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.722"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.15* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable.722"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable.722"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #10
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  store i32 0, i32* %22, align 8, !alias.scope !66
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10, !alias.scope !66
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #10
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.722"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #10
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #10
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.722"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.722", %"class.WTF::HashTable.722"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.15* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i32 0, i32* %14, align 8, !alias.scope !71
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10, !alias.scope !71
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_14StringKeyframeEEEvOT_(%"class.WTF::Vector"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !8

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !76
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !7

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.725"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.725", %"class.WTF::Vector.725"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.725", %"class.WTF::Vector.725"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.851"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.851"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.854", %"class.blink::Member.854"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.854"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.851"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %8, align 8
  %10 = icmp eq %"class.blink::Member.854"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.865"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.865"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.851"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.865", %"class.blink::HeapVectorBacking.865"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %8, align 8
  %26 = icmp eq %"class.blink::Member.854"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.854"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !8

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !76
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.851"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.851"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.851"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.851"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.865"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.865"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.865"* %17, null
  %23 = icmp ne %"class.blink::Member.854"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.854"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !7

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.851"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.865", %"class.blink::HeapVectorBacking.865"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.851"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.851"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.851", %"class.WTF::Vector.851"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.865", %"class.blink::HeapVectorBacking.865"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.865"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.865"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.865"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.854"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.854", %"class.blink::Member.854"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.854"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StringKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StringKeyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.848"* dereferenceable(16), i32* dereferenceable(4), %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #10
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #10
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.854"*, %"class.blink::Member.854"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.848", %"class.blink::HeapVector.848"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"* %41, %"class.blink::Member.854"* %43, i32 %45) #10
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EffectModel"*
  %4 = bitcast i8* %1 to void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)**, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EffectModel"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EffectModel"*
  %3 = bitcast i8* %0 to void (%"class.blink::EffectModel"*)***
  %4 = load void (%"class.blink::EffectModel"*)**, void (%"class.blink::EffectModel"*)*** %3, align 8
  %5 = load void (%"class.blink::EffectModel"*)*, void (%"class.blink::EffectModel"*)** %4, align 8
  tail call void %5(%"class.blink::EffectModel"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev(%"class.blink::KeyframeEffectModel"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector"* noalias sret, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %4, %"class.WTF::Vector"* dereferenceable(16) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InterpolationEffect"*
  tail call void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member.854"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %20) #10
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.854", %"class.blink::Member.854"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member"*, %"class.blink::Member"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.854"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.854"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.854", %"class.blink::Member.854"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.854"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!4 = distinct !{!4, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!5 = distinct !{!5, !6, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!12 = distinct !{!12, !13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!17 = distinct !{!17, !18, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!22 = distinct !{!22, !23, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!26 = distinct !{!26, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!27 = distinct !{!27, !28, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!31 = distinct !{!31, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!32 = distinct !{!32, !33, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!34 = !{!35, !37, !39}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS3_7ElementERKN3WTF7HashSetINS3_14PropertyHandleENS7_11DefaultHashIS9_E4HashENS7_10HashTraitsIS9_EENS7_18PartitionAllocatorEEERNS7_7HashMapINS7_6StringESK_NS7_10StringHashENSD_ISK_EESM_SF_EEE3$_0JNS7_17UnretainedWrapperISN_EEEEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS3_7ElementERKN3WTF7HashSetINS3_14PropertyHandleENS7_11DefaultHashIS9_E4HashENS7_10HashTraitsIS9_EENS7_18PartitionAllocatorEEERNS7_7HashMapINS7_6StringESK_NS7_10StringHashENSD_ISK_EESM_SF_EEE3$_0JNS7_17UnretainedWrapperISN_EEEEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base13BindRepeatingIRZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS1_7ElementERKN3WTF7HashSetINS1_14PropertyHandleENS5_11DefaultHashIS7_E4HashENS5_10HashTraitsIS7_EENS5_18PartitionAllocatorEEERNS5_7HashMapINS5_6StringESI_NS5_10StringHashENSB_ISI_EESK_SD_EEE3$_0JNS5_17UnretainedWrapperISL_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!38 = distinct !{!38, !"_ZN4base13BindRepeatingIRZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS1_7ElementERKN3WTF7HashSetINS1_14PropertyHandleENS5_11DefaultHashIS7_E4HashENS5_10HashTraitsIS7_EENS5_18PartitionAllocatorEEERNS5_7HashMapINS5_6StringESI_NS5_10StringHashENSB_ISI_EESK_SD_EEE3$_0JNS5_17UnretainedWrapperISL_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!39 = distinct !{!39, !40, !"_ZN3WTF13BindRepeatingIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS1_7ElementERKNS_7HashSetINS1_14PropertyHandleENS_11DefaultHashIS6_E4HashENS_10HashTraitsIS6_EENS_18PartitionAllocatorEEERNS_7HashMapINS_6StringESH_NS_10StringHashENSA_ISH_EESJ_SC_EEE3$_0JNS_17UnretainedWrapperISK_EEEFvS6_PKNS1_8CSSValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF13BindRepeatingIZN5blink12_GLOBAL__N_131ResolveUnderlyingPropertyValuesERNS1_7ElementERKNS_7HashSetINS1_14PropertyHandleENS_11DefaultHashIS6_E4HashENS_10HashTraitsIS6_EENS_18PartitionAllocatorEEERNS_7HashMapINS_6StringESH_NS_10StringHashENSA_ISH_EESJ_SC_EEE3$_0JNS_17UnretainedWrapperISK_EEEFvS6_PKNS1_8CSSValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!43 = distinct !{!43, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!44 = distinct !{!44, !45, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!49 = distinct !{!49, !50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!53 = distinct !{!53, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!54 = distinct !{!54, !55, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!58 = distinct !{!58, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!59 = distinct !{!59, !60, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!60 = distinct !{!60, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!63 = distinct !{!63, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!64 = distinct !{!64, !65, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!68 = distinct !{!68, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!69 = distinct !{!69, !70, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!70 = distinct !{!70, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!73 = distinct !{!73, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!74 = distinct !{!74, !75, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!75 = distinct !{!75, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!76 = !{i8 0, i8 2}
