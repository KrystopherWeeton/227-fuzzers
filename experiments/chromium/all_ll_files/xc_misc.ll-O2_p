; ModuleID = 'gen/ui/gfx/x/xc_misc.cc'
source_filename = "gen/ui/gfx/x/xc_misc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::XCMisc" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::XCMisc::GetVersionRequest" = type { i16, i16 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.270"* }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { i8*, i8*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { i8* }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.263", %"class.std::__1::vector.270", i64, %"class.std::__1::vector.277" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %class.scoped_refptr.247*, %class.scoped_refptr.247*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.scoped_refptr.247* }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i32* }
%"struct.x11::XCMisc::GetVersionReply" = type { i16, i16, i16 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"struct.x11::XCMisc::GetXIDRangeRequest" = type { i8 }
%"struct.x11::XCMisc::GetXIDRangeReply" = type { i16, i32, i32 }
%"struct.x11::XCMisc::GetXIDListRequest" = type { i32 }
%"struct.x11::XCMisc::GetXIDListReply" = type { i16, %"class.std::__1::vector.301" }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { i32*, i32*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [19 x i8] c"XCMisc::GetVersion\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"XCMisc::GetXIDRange\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"XCMisc::GetXIDList\00", align 1

@_ZN3x116XCMiscC1EPNS_10ConnectionERKNS_19QueryExtensionReplyE = hidden unnamed_addr alias void (%"class.x11::XCMisc"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*), void (%"class.x11::XCMisc"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*)* @_ZN3x116XCMiscC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x116XCMiscC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE(%"class.x11::XCMisc"* nocapture, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"* nocapture readonly dereferenceable(6)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 0
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %4, align 8
  %5 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1
  %6 = bitcast %"struct.x11::QueryExtensionReply"* %5 to i8*
  %7 = bitcast %"struct.x11::QueryExtensionReply"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 2 %7, i64 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetVersionERKNS0_17GetVersionRequestE(%"class.x11::XCMisc"* nocapture readonly, %"struct.x11::XCMisc::GetVersionRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %78

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %78, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 0, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XCMisc::GetVersionRequest", %"struct.x11::XCMisc::GetVersionRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XCMisc::GetVersionRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %29, align 8
  %54 = bitcast i16* %45 to i8*
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %54) #8
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  %60 = load i64, i64* %29, align 8
  %61 = add i64 %60, 2
  store i64 %61, i64* %29, align 8
  %62 = sub i64 2, %60
  %63 = and i64 %62, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %21
  %66 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %67 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %73, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %67, align 8
  %70 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  %71 = load i64, i64* %29, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %29, align 8
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %63
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %76 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %77 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %76, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %78

78:                                               ; preds = %2, %17, %75
  %79 = phi %"class.x11::Connection::FutureImpl"* [ %77, %75 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %79
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetVersionERKtS2_(%"class.x11::XCMisc"* nocapture readonly, i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XCMisc::GetVersionRequest", align 2
  %5 = bitcast %"struct.x11::XCMisc::GetVersionRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XCMisc::GetVersionRequest", %"struct.x11::XCMisc::GetVersionRequest"* %4, i64 0, i32 0
  %7 = load i16, i16* %1, align 2
  store i16 %7, i16* %6, align 2
  %8 = getelementptr inbounds %"struct.x11::XCMisc::GetVersionRequest", %"struct.x11::XCMisc::GetVersionRequest"* %4, i64 0, i32 1
  %9 = load i16, i16* %2, align 2
  store i16 %9, i16* %8, align 2
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetVersionERKNS0_17GetVersionRequestE(%"class.x11::XCMisc"* %0, %"struct.x11::XCMisc::GetVersionRequest"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XCMisc::GetVersionReply"* @_ZN3x116detail9ReadReplyINS_6XCMisc15GetVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 6) #9
  %3 = bitcast i8* %2 to %"struct.x11::XCMisc::GetVersionReply"*
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i16*
  %9 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %12 = bitcast %"class.base::RefCountedMemory"* %11 to i8* (%"class.base::RefCountedMemory"*)***
  %13 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %12, align 8
  %14 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %13, align 8
  %15 = tail call i8* %14(%"class.base::RefCountedMemory"* %11) #8
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 2
  store i64 %17, i64* %9, align 8
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %19 = bitcast %"class.base::RefCountedMemory"* %18 to i8* (%"class.base::RefCountedMemory"*)***
  %20 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %20, align 8
  %22 = tail call i8* %21(%"class.base::RefCountedMemory"* %18) #8
  %23 = load i64, i64* %9, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 1
  store i16 %26, i16* %4, align 2
  %27 = add i64 %23, 2
  store i64 %27, i64* %9, align 8
  %28 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %29 = bitcast %"class.base::RefCountedMemory"* %28 to i8* (%"class.base::RefCountedMemory"*)***
  %30 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %29, align 8
  %31 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %30, align 8
  %32 = tail call i8* %31(%"class.base::RefCountedMemory"* %28) #8
  %33 = load i64, i64* %9, align 8
  %34 = add i64 %33, 4
  store i64 %34, i64* %9, align 8
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %36 = bitcast %"class.base::RefCountedMemory"* %35 to i8* (%"class.base::RefCountedMemory"*)***
  %37 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %37, align 8
  %39 = tail call i8* %38(%"class.base::RefCountedMemory"* %35) #8
  %40 = load i64, i64* %9, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 1
  store i16 %43, i16* %6, align 2
  %44 = add i64 %40, 2
  store i64 %44, i64* %9, align 8
  %45 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %46 = bitcast %"class.base::RefCountedMemory"* %45 to i8* (%"class.base::RefCountedMemory"*)***
  %47 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %46, align 8
  %48 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %47, align 8
  %49 = tail call i8* %48(%"class.base::RefCountedMemory"* %45) #8
  %50 = load i64, i64* %9, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  store i16 %53, i16* %8, align 2
  %54 = add i64 %50, 2
  %55 = sub i64 2, %50
  %56 = and i64 %55, 3
  %57 = add i64 %54, %56
  store i64 %57, i64* %9, align 8
  ret %"struct.x11::XCMisc::GetVersionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc11GetXIDRangeERKNS0_18GetXIDRangeRequestE(%"class.x11::XCMisc"* nocapture readonly, %"struct.x11::XCMisc::GetXIDRangeRequest"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.x11::WriteBuffer", align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 0
  %13 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %13) #8
  br i1 %14, label %15, label %59

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.x11::WriteBuffer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %21 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 2
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %10, align 1
  %23 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 1
  %24 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %25, align 8
  %26 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %10) #8
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i8 1, i8* %11, align 1
  %30 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %31, align 8
  %32 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  %35 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %41 = load i64, i64* %27, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %43 = and i64 %41, 3
  %44 = xor i64 %43, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %19
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %54, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %48, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %52 = load i64, i64* %27, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %27, align 8
  %54 = add nuw nsw i64 %50, 1
  %55 = icmp eq i64 %54, %44
  br i1 %55, label %56, label %49

56:                                               ; preds = %49, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  %57 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %58 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %57, %"class.x11::WriteBuffer"* nonnull %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #8
  br label %59

59:                                               ; preds = %2, %15, %56
  %60 = phi %"class.x11::Connection::FutureImpl"* [ %58, %56 ], [ null, %15 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc11GetXIDRangeEv(%"class.x11::XCMisc"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc11GetXIDRangeERKNS0_18GetXIDRangeRequestE(%"class.x11::XCMisc"* %0, %"struct.x11::XCMisc::GetXIDRangeRequest"* dereferenceable(1) undef)
  ret %"class.x11::Connection::FutureImpl"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XCMisc::GetXIDRangeReply"* @_ZN3x116detail9ReadReplyINS_6XCMisc16GetXIDRangeReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 12) #9
  %3 = bitcast i8* %2 to %"struct.x11::XCMisc::GetXIDRangeReply"*
  %4 = bitcast i8* %2 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %13 = bitcast %"class.base::RefCountedMemory"* %12 to i8* (%"class.base::RefCountedMemory"*)***
  %14 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %13, align 8
  %15 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %14, align 8
  %16 = tail call i8* %15(%"class.base::RefCountedMemory"* %12) #8
  %17 = load i64, i64* %10, align 8
  %18 = add i64 %17, 2
  store i64 %18, i64* %10, align 8
  %19 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %20 = bitcast %"class.base::RefCountedMemory"* %19 to i8* (%"class.base::RefCountedMemory"*)***
  %21 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %20, align 8
  %22 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %21, align 8
  %23 = tail call i8* %22(%"class.base::RefCountedMemory"* %19) #8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  store i16 %27, i16* %5, align 2
  %28 = add i64 %24, 2
  store i64 %28, i64* %10, align 8
  %29 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %30 = bitcast %"class.base::RefCountedMemory"* %29 to i8* (%"class.base::RefCountedMemory"*)***
  %31 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %31, align 8
  %33 = tail call i8* %32(%"class.base::RefCountedMemory"* %29) #8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 4
  store i64 %35, i64* %10, align 8
  %36 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %37 = bitcast %"class.base::RefCountedMemory"* %36 to i8* (%"class.base::RefCountedMemory"*)***
  %38 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %37, align 8
  %39 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %38, align 8
  %40 = tail call i8* %39(%"class.base::RefCountedMemory"* %36) #8
  %41 = load i64, i64* %10, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  store i32 %44, i32* %7, align 4
  %45 = add i64 %41, 4
  store i64 %45, i64* %10, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #8
  %51 = load i64, i64* %10, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i32 %54, i32* %9, align 4
  %55 = add i64 %51, 4
  %56 = sub i64 0, %51
  %57 = and i64 %56, 3
  %58 = add i64 %55, %57
  store i64 %58, i64* %10, align 8
  ret %"struct.x11::XCMisc::GetXIDRangeReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetXIDListERKNS0_17GetXIDListRequestE(%"class.x11::XCMisc"* nocapture readonly, %"struct.x11::XCMisc::GetXIDListRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XCMisc", %"class.x11::XCMisc"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 2, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XCMisc::GetXIDListRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetXIDListERKj(%"class.x11::XCMisc"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XCMisc::GetXIDListRequest", align 4
  %4 = bitcast %"struct.x11::XCMisc::GetXIDListRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XCMisc::GetXIDListRequest", %"struct.x11::XCMisc::GetXIDListRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XCMisc10GetXIDListERKNS0_17GetXIDListRequestE(%"class.x11::XCMisc"* %0, %"struct.x11::XCMisc::GetXIDListRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XCMisc::GetXIDListReply"* @_ZN3x116detail9ReadReplyINS_6XCMisc15GetXIDListReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::XCMisc::GetXIDListReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to i32**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.301"*
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.301"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to i32**
  %49 = load i32*, i32** %48, align 8
  %50 = load i32*, i32** %46, align 8
  %51 = icmp eq i32* %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %1, %43
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ %53, %52 ], [ %71, %59 ]
  %56 = sub i64 0, %55
  %57 = and i64 %56, 3
  %58 = add i64 %57, %55
  store i64 %58, i64* %6, align 8
  ret %"struct.x11::XCMisc::GetXIDListReply"* %3

59:                                               ; preds = %43, %59
  %60 = phi i32* [ %72, %59 ], [ %49, %43 ]
  %61 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %62 = bitcast %"class.base::RefCountedMemory"* %61 to i8* (%"class.base::RefCountedMemory"*)***
  %63 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %63, align 8
  %65 = tail call i8* %64(%"class.base::RefCountedMemory"* %61) #8
  %66 = load i64, i64* %6, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  store i32 %69, i32* %60, align 4
  %70 = load i64, i64* %6, align 8
  %71 = add i64 %70, 4
  store i64 %71, i64* %6, align 8
  %72 = getelementptr inbounds i32, i32* %60, i64 1
  %73 = icmp eq i32* %72, %50
  br i1 %73, label %54, label %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.270"*, %"class.std::__1::vector.270"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.270"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.270"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #10
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #9
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #8
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #9
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"*, %"class.x11::WriteBuffer"*, i8*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.301"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.301"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.301"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
