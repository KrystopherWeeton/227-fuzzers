; ModuleID = '../../third_party/blink/renderer/core/html/forms/base_checkable_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/base_checkable_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::BaseCheckableInputType" = type <{ %"class.blink::InputType", %"class.blink::InputTypeView", i8, [7 x i8] }>
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.29", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.39", %"class.blink::Member.41", %"class.blink::Member.4", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.89", %"class.WTF::Vector.89", i8, i32, %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.113", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.124", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.54", %"class.blink::Member.333", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::UserActionElementSet", %"class.blink::Member.342", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.349", i16, i8, %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::TextLinkColors", %"class.blink::Member.387", i8, [7 x i8], %"class.blink::HeapHashMap.389", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.54", %"class.WTF::Vector.396", %"class.blink::Member.401", %"class.blink::Member.403", i8, %"class.blink::Member.54", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.405", %"class.blink::HeapVector.407", %"class.std::__1::unique_ptr.415", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.421", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.434", %"class.WTF::Vector.436", i8, i8, %"class.std::__1::unique_ptr.441", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.447", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.455", i8, i32, %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.463", %"class.WTF::HashMap.465", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::Member.41", %"class.blink::Member.41", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.478", i8, i32, %"class.blink::Member.485", %"class.blink::Member.487", i32, %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::Member.493", %"class.std::__1::unique_ptr.495", i64, %"class.std::__1::unique_ptr.501", i32, i32, %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.513", %"class.WTF::Vector.515", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.520", %"class.blink::Member.527", %"class.std::__1::unique_ptr.529", %"class.blink::Member.535", i8, i8, %"class.WTF::String", %"class.blink::Member.537", i8, [7 x i8], %"class.blink::HeapHashMap.539", %"class.blink::HeapObserverSet", %"class.blink::Member.553", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.555", i32, i8, i8, %"class.blink::WeakMember.557", %"class.blink::Member.558" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.576", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.617", i32, i8, [3 x i8], %"class.blink::HeapVector.619", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.627", %"class.blink::Member.629", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.638", %"class.blink::Member.644", %"class.blink::Member.646", i8, [7 x i8] }>
%"class.blink::Supplementable.576" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.577" }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.592" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.584" }
%"class.blink::HeapObserverSet.584" = type { i32, [4 x i8], %"class.blink::HeapHashSet.585" }
%"class.blink::HeapHashSet.585" = type { %"class.WTF::HashSet.588" }
%"class.WTF::HashSet.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"class.blink::WeakMember.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.591" = type opaque
%"class.blink::Supplementable.592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.593" }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type { i8*, %"class.blink::Member.930" }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.932" }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.600, %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.607", %"class.std::__1::unique_ptr.607", %"class.blink::Member.102", i32, [4 x i8], %"class.WTF::HashSet.613", i32, i32 }
%class.scoped_refptr.600 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.619" = type { %"class.WTF::Vector.622" }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { %"class.blink::Member.625"*, i32, i32 }
%"class.blink::Member.625" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.631", i32, i32 }
%"class.blink::HeapHashMap.631" = type { %"class.WTF::HashMap.634" }
%"class.WTF::HashMap.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type opaque
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.128", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.128" = type { %"class.base::RefCounted.129" }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.132" }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.41", %"class.blink::Member.366", %"class.WTF::HashMap.380", %"class.blink::Member.385", i8, [7 x i8] }>
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.41", %"class.blink::HeapVector.370", i8, [7 x i8] }>
%"class.blink::HeapVector.370" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375", [512 x i8] }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::Member.376"*, i32, i32 }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.WTF::HashMap.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"struct.WTF::KeyValuePair.384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.384" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.389" = type { %"class.WTF::HashMap.392" }
%"class.WTF::HashMap.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"struct.WTF::KeyValuePair.395"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.395" = type opaque
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.407" = type { %"class.WTF::Vector.410" }
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::Member.413"*, i32, i32 }
%"class.blink::Member.413" = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.421" = type { %"class.WTF::HashSet.424" }
%"class.WTF::HashSet.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"class.blink::WeakMember.427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.427" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.428", i32, [4 x i8] }>
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"struct.std::__1::pair.431"*, i32, i32 }
%"struct.std::__1::pair.431" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::Member.453"*, i32, i32 }
%"class.blink::Member.453" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.41" }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"struct.WTF::KeyValuePair.469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.469" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.323, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.323 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.324" }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.326", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.327" }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.42" }
%"class.blink::HeapHashSet.478" = type { %"class.WTF::HashSet.481" }
%"class.WTF::HashSet.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"class.blink::Member.484"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.484" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.520" = type { %"class.WTF::HashMap.523" }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.539" = type { %"class.WTF::HashMap.542" }
%"class.WTF::HashMap.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"struct.WTF::KeyValuePair.545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.545" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.546" }
%"class.blink::HeapHashSet.546" = type { %"class.WTF::HashSet.549" }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ %"class.blink::WeakMember.552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.552" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.41", %"class.blink::HeapHashSet.562", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.569", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.562" = type { %"class.WTF::HashSet.565" }
%"class.WTF::HashSet.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"class.blink::Member.568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.568" = type opaque
%"class.blink::HeapTaskRunnerTimer.569" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.570", { i64, i64 } }
%"class.blink::WeakMember.570" = type { %"class.blink::MemberBase.556" }
%"class.blink::WeakMember.557" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.54", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputType"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::InputTypeView"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.317", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.256", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.259", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.571" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.653", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.653" = type { %"class.WTF::Vector.656" }
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { %"class.blink::Member.659"*, i32, i32 }
%"class.blink::Member.659" = type opaque
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.875", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.667", i32, %"class.blink::Member.873" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.661", %"class.blink::Member.661", %"class.blink::Member.663", %"class.blink::Member.665", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::Event"* }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.690", %"class.blink::Member.692", %"class.blink::Member.694", %"class.blink::Member.696", i8, %"class.WTF::Vector.698" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.683" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.671" }
%"class.blink::HeapVector.671" = type { %"class.WTF::Vector.674" }
%"class.WTF::Vector.674" = type { %"class.WTF::VectorBuffer.675" }
%"class.WTF::VectorBuffer.675" = type { %"class.WTF::VectorBufferBase.676", [32 x i8] }
%"class.WTF::VectorBufferBase.676" = type { %"struct.std::__1::pair.677"*, i32, i32 }
%"struct.std::__1::pair.677" = type { %"class.WTF::AtomicString", %"class.blink::Member.678" }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::HeapVector.680"* }
%"class.blink::HeapVector.680" = type opaque
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.WTF::Vector.686"* }
%"class.WTF::Vector.686" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.667", i8, i32, i8, i32, %"class.blink::Member.888", %"class.blink::Member.692", %"class.blink::FrameLifecycle", %"class.blink::Member.690", %"class.blink::Member.690", %"class.blink::Member.690", %"class.blink::Member.690", %"class.blink::Member.690", %"class.blink::Member.690", %"class.blink::Member.890", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.900", i8, %"class.base::UnguessableToken", %"class.absl::optional.902", %"class.absl::optional.907", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.690", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.690", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.892" }
%"class.std::__1::vector.892" = type { %"class.std::__1::__vector_base.893" }
%"class.std::__1::__vector_base.893" = type { %"struct.std::__1::pair.894"*, %"struct.std::__1::pair.894"*, %"class.std::__1::__compressed_pair.895" }
%"struct.std::__1::pair.894" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"struct.std::__1::pair.894"* }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.902" = type { %"class.absl::optional_internal::optional_data.903" }
%"class.absl::optional_internal::optional_data.903" = type { %"class.absl::optional_internal::optional_data_base.904" }
%"class.absl::optional_internal::optional_data_base.904" = type { %"class.absl::optional_internal::optional_data_dtor_base.905" }
%"class.absl::optional_internal::optional_data_dtor_base.905" = type { i8, %union.anon.906 }
%union.anon.906 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.706 }
%union.anon.706 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.907" = type { %"class.absl::optional_internal::optional_data.908" }
%"class.absl::optional_internal::optional_data.908" = type { %"class.absl::optional_internal::optional_data_base.909" }
%"class.absl::optional_internal::optional_data_base.909" = type { %"class.absl::optional_internal::optional_data_dtor_base.910" }
%"class.absl::optional_internal::optional_data_dtor_base.910" = type { i8, %union.anon.911 }
%union.anon.911 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.912" }
%"class.blink::HeapHashSet.912" = type { %"class.WTF::HashSet.915" }
%"class.WTF::HashSet.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"class.blink::WeakMember.918"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.918" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.698" = type { %"class.WTF::VectorBuffer.699" }
%"class.WTF::VectorBuffer.699" = type { %"class.WTF::VectorBufferBase.700" }
%"class.WTF::VectorBufferBase.700" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.865" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.701, %"class.std::__1::unique_ptr.815", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.703, i32 }>
%class.scoped_refptr.701 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.703, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.781", %"class.absl::optional.786", %"class.absl::optional.742", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.806", i8, [7 x i8], %class.scoped_refptr.703, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.702" }>
%"class.base::RefCountedThreadSafe.702" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.722" }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.703, %"class.std::__1::unique_ptr.723", %"class.absl::optional.732", %"struct.std::__1::atomic.317", i8, i8, i8, i8, i32, i32, %"class.absl::optional.742", %"class.std::__1::unique_ptr.747", i8, i64, %class.scoped_refptr.777, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.780" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.703, i8, %"class.mojo::ScopedHandleBase.726", %class.scoped_refptr.727, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.728" }
%"class.mojo::ScopedHandleBase.726" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.727 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.728" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.732" = type { %"class.absl::optional_internal::optional_data.733" }
%"class.absl::optional_internal::optional_data.733" = type { %"class.absl::optional_internal::optional_data_base.734" }
%"class.absl::optional_internal::optional_data_base.734" = type { %"class.absl::optional_internal::optional_data_dtor_base.735" }
%"class.absl::optional_internal::optional_data_dtor_base.735" = type { i8, %union.anon.736 }
%union.anon.736 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.737", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.737" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.750", i8, i64, %class.scoped_refptr.751, %class.scoped_refptr.773 }
%"class.base::RepeatingCallback.750" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.751 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.752", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.762", i8, [7 x i8] }>
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.753 }
%class.scoped_refptr.753 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.754", %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.762" = type { %"class.std::__1::__tree.763" }
%"class.std::__1::__tree.763" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.764", %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%class.scoped_refptr.773 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.777 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.778 }
%class.scoped_refptr.778 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.881", [4 x i8], %"class.base::RepeatingCallback.818", %class.scoped_refptr.703, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.881" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.818" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.779 }
%class.scoped_refptr.779 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.780" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.781" = type { %"class.absl::optional_internal::optional_data.782" }
%"class.absl::optional_internal::optional_data.782" = type { %"class.absl::optional_internal::optional_data_base.783" }
%"class.absl::optional_internal::optional_data_base.783" = type { %"class.absl::optional_internal::optional_data_dtor_base.784" }
%"class.absl::optional_internal::optional_data_dtor_base.784" = type { i8, %union.anon.785 }
%union.anon.785 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.786" = type { %"class.absl::optional_internal::optional_data.787" }
%"class.absl::optional_internal::optional_data.787" = type { %"class.absl::optional_internal::optional_data_base.788" }
%"class.absl::optional_internal::optional_data_base.788" = type { %"class.absl::optional_internal::optional_data_dtor_base.789" }
%"class.absl::optional_internal::optional_data_dtor_base.789" = type { i8, [7 x i8], %union.anon.790 }
%union.anon.790 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, %union.anon.746 }
%union.anon.746 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.791 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.791 = type { %"class.std::__1::map.794" }
%"class.std::__1::map.794" = type { %"class.std::__1::__tree.795" }
%"class.std::__1::__tree.795" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.796", %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.805"*, i64 }
%"class.std::__1::unique_ptr.805" = type opaque
%"class.std::__1::map.806" = type { %"class.std::__1::__tree.807" }
%"class.std::__1::__tree.807" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.808", %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.818", %"class.base::OnceCallback.819", %"class.absl::optional.820", %"class.absl::optional.825", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.832", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.840", %"class.std::__1::map.851", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.860", i8, %class.scoped_refptr.703, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.861" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.819" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.820" = type { %"class.absl::optional_internal::optional_data.821" }
%"class.absl::optional_internal::optional_data.821" = type { %"class.absl::optional_internal::optional_data_base.822" }
%"class.absl::optional_internal::optional_data_base.822" = type { %"class.absl::optional_internal::optional_data_dtor_base.823" }
%"class.absl::optional_internal::optional_data_dtor_base.823" = type { i8, %union.anon.824 }
%union.anon.824 = type { %"class.base::TimeDelta" }
%"class.absl::optional.825" = type { %"class.absl::optional_internal::optional_data.826" }
%"class.absl::optional_internal::optional_data.826" = type { %"class.absl::optional_internal::optional_data_base.827" }
%"class.absl::optional_internal::optional_data_base.827" = type { %"class.absl::optional_internal::optional_data_dtor_base.828" }
%"class.absl::optional_internal::optional_data_dtor_base.828" = type { i8, %union.anon.829 }
%union.anon.829 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.703, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.830" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.830" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.831 }
%class.scoped_refptr.831 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.835", %class.scoped_refptr.836 }
%"class.base::RepeatingCallback.835" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.836 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.702", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.840" = type { %"class.std::__1::__tree.841" }
%"class.std::__1::__tree.841" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.842", %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.851" = type { %"class.std::__1::__tree.852" }
%"class.std::__1::__tree.852" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.853", %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::OnceCallback.860" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.861" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.703 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.938" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940", [64 x i8] }
%"class.WTF::VectorBufferBase.940" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.absl::optional.919" = type { %"class.absl::optional_internal::optional_data.920" }
%"class.absl::optional_internal::optional_data.920" = type { %"class.absl::optional_internal::optional_data_base.921" }
%"class.absl::optional_internal::optional_data_base.921" = type { %"class.absl::optional_internal::optional_data_dtor_base.922" }
%"class.absl::optional_internal::optional_data_dtor_base.922" = type { i8, %union.anon.923 }
%union.anon.923 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.924" }
%"class.base::time_internal::TimeBase.924" = type { i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.925" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.925" = type { %"class.v8::TracedReference.926" }
%"class.v8::TracedReference.926" = type { %"class.v8::BasicTracedReference.927" }
%"class.v8::BasicTracedReference.927" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::FileList" = type opaque
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::MouseEvent" = type opaque
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member" }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::BeforeTextInsertedEvent" = type opaque
%"class.blink::LayoutObject" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"class.blink::AXObject" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink22BaseCheckableInputTypeD2Ev = comdat any

$_ZN5blink22BaseCheckableInputTypeD0Ev = comdat any

$_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZThn16_N5blink22BaseCheckableInputTypeD1Ev = comdat any

$_ZThn16_N5blink22BaseCheckableInputTypeD0Ev = comdat any

$_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZN5blink13InputTypeView21EnsureFallbackContentEv = comdat any

$_ZN5blink13InputTypeView20EnsurePrimaryContentEv = comdat any

$_ZNK5blink13InputTypeView18HasFallbackContentEv = comdat any

$_ZNK5blink13InputTypeView17FocusedFieldIndexEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZN5blink10html_names12kCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink22BaseCheckableInputTypeE = hidden unnamed_addr constant { [97 x i8*], [60 x i8*] } { [97 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType10CreateViewEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormData"*)* @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.919"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)* @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.648"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*)], [60 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_N5blink22BaseCheckableInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_N5blink22BaseCheckableInputTypeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, i32, i32*)* @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FormForSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)* @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView4BlurEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)* @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i8 (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ComputedTextDirectionEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView14ClosePopupViewEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14HasOpenedPopupEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv to i8*), i8* bitcast (%"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView12UploadButtonEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14FileStatusTextEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19AltAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19SrcAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MultipleAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)* @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, i1)* @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20EnsurePrimaryContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18HasFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::BaseCheckableInputType"*)* @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView15IsDraggedSliderEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView11HasBadInputEv to i8*), i8* bitcast (i32 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FocusedFieldIndexEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  tail call void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"* %3, %"class.blink::Visitor"* %1) #10
  %4 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0
  tail call void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"* %4, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 2
  %5 = bitcast %"class.blink::Member"* %4 to %"class.blink::InputTypeView"*
  tail call void @_ZNK5blink13InputTypeView5TraceEPNS_7VisitorE(%"class.blink::InputTypeView"* %5, %"class.blink::Visitor"* %1) #10
  %6 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputType"*
  tail call void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"* %6, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::InputTypeView"* @_ZN5blink22BaseCheckableInputType10CreateViewEv(%"class.blink::BaseCheckableInputType"* readnone) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  ret %"class.blink::InputTypeView"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %6) #10
  %8 = select i1 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)
  %9 = select i1 %7, i64 2, i64 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %8, i64 %9) #10
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %12 = bitcast %"class.WTF::Vector.648"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.648"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %2, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %1, i64 -1, i32 1, i32 2
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10, !noalias !2
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8, !noalias !2
  %8 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %7) #10, !noalias !2
  %9 = select i1 %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)
  %10 = select i1 %8, i64 2, i64 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %10) #10, !noalias !2
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 1, i32* %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::Vector.648"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #10, !alias.scope !2
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.648"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8, !noalias !2
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10, !noalias !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.648"* %7, i32 0) #10
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 2, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %6, i1 zeroext %33, i32 0) #10
  ret void
}

declare void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %9 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.648"* %8, i32 0) #10
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %16, i64* %17, align 8
  br label %26

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %26

26:                                               ; preds = %14, %18
  %27 = phi i64 [ %25, %18 ], [ %16, %14 ]
  %28 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 2, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %7, i1 zeroext %34, i32 0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %5) #10
  br i1 %6, label %7, label %35

7:                                                ; preds = %2
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %8) #10
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %13 = bitcast %"class.blink::HTMLInputElement"* %12 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %14, i64 195
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::HTMLInputElement"* %12) #10
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #10
  br label %34

34:                                               ; preds = %7, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %35

35:                                               ; preds = %34, %2
  ret void
}

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.blink::KeyboardEvent"* nocapture readonly dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %10, align 8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %21

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

21:                                               ; preds = %13, %9
  %22 = phi i64 [ %20, %13 ], [ %11, %9 ]
  %23 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %22, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %28, align 8
  %29 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %29, label %30, label %38

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.blink::HTMLInputElement"* %32 to void (%"class.blink::Element"*, i1)***
  %35 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %35, i64 140
  %37 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %36, align 8
  call void %37(%"class.blink::Element"* %33, i1 zeroext true) #10
  br label %38

38:                                               ; preds = %30, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.blink::KeyboardEvent"* nocapture readonly dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  br i1 %30, label %31, label %39

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 1, i32 0, i32 0
  %33 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.blink::HTMLInputElement"* %33 to void (%"class.blink::Element"*, i1)***
  %36 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %36, i64 140
  %38 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %37, align 8
  call void %38(%"class.blink::Element"* %34, i1 zeroext true) #10
  br label %39

39:                                               ; preds = %22, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"* nocapture readnone, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* %1) #10
  %4 = icmp eq i32 %3, 32
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = or i16 %7, 64
  store i16 %8, i16* %6, align 8
  br label %9

9:                                                ; preds = %5, %2
  ret void
}

declare i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"* nocapture readnone, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* %1) #10
  %4 = icmp eq i32 %3, 32
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = or i16 %7, 64
  store i16 %8, i16* %6, align 8
  br label %9

9:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv(%"class.blink::BaseCheckableInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  tail call void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"* %3, i32 %1) #10
  %4 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %6, %"class.blink::Event"* null, i32 %1) #10
  ret void
}

declare void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"*, i32) unnamed_addr #1

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 2
  %5 = bitcast %"class.blink::Member"* %4 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeView15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::InputTypeView"* %5, i32 %1) #10
  %6 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %8, %"class.blink::Event"* null, i32 %1) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv(%"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %59, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.18"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %52, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %53, %52 ]
  %38 = phi i32 [ 0, %31 ], [ %54, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %33
  br i1 %41, label %56, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %54 = add i32 %38, 1
  %55 = icmp eq %"class.blink::Attribute"* %53, %29
  br i1 %55, label %56, label %36

56:                                               ; preds = %52, %47, %36, %25
  %57 = phi i32 [ -1, %25 ], [ %38, %36 ], [ %38, %47 ], [ -1, %52 ]
  %58 = icmp ne i32 %57, -1
  br label %59

59:                                               ; preds = %1, %56
  %60 = phi i1 [ false, %1 ], [ %58, %56 ]
  ret i1 %60
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink22BaseCheckableInputType12GetValueModeEv(%"class.blink::BaseCheckableInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::BaseCheckableInputType"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = and i32 %17, 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %15
  %21 = load atomic i32, i32* %16 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #10
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !5

33:                                               ; preds = %24
  tail call void @llvm.trap() #10
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %38

36:                                               ; preds = %15
  %37 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %38

38:                                               ; preds = %5, %20, %34, %36
  %39 = phi %"class.WTF::StringImpl"* [ %37, %36 ], [ %13, %20 ], [ %13, %34 ], [ null, %5 ]
  %40 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %41 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %40, i64* %41, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %9, %"class.blink::QualifiedName"* dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #10
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %38, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv(%"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 2
  %13 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %14 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, i64 3
  %16 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, align 8
  tail call void %16(%"class.blink::UseCounter"* %12, i32 938) #10
  br label %17

17:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink22BaseCheckableInputType11IsCheckableEv(%"class.blink::BaseCheckableInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::HTMLInputElement"* %3 to void (%"class.blink::Element"*, i1)***
  %6 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %6, i64 140
  %8 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %7, align 8
  tail call void %8(%"class.blink::Element"* %4, i1 zeroext false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::HTMLInputElement"* %4 to void (%"class.blink::Element"*, i1)***
  %7 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %7, i64 140
  %9 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %8, align 8
  tail call void %9(%"class.blink::Element"* %5, i1 zeroext false) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22BaseCheckableInputTypeD2Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %2) #10
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22BaseCheckableInputTypeD0Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional.919"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare double @_ZNK5blink9InputType13ValueAsDoubleEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12TypeMismatchEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12ValueMissingERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* sret, %"class.blink::InputType"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12BadInputTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16ValueMissingTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12VisibleValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType10CountUsageEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.648"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType26ShouldRespectListAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsSteppableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsReadOnlyEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25ShouldAppearIndeterminateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink22BaseCheckableInputTypeD1Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 -1, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %4) #10
  %5 = bitcast %"class.blink::Member"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink22BaseCheckableInputTypeD0Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare zeroext i1 @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi(%"class.blink::InputTypeView"*, i32, i32* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

declare %"class.blink::ClickHandlingState"* @_ZN5blink13InputTypeView17WillDispatchClickEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::ClickHandlingState"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink13InputTypeView17FormForSubmissionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView4BlurEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView17SubtreeHasChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView14ClosePopupViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView14HasOpenedPopupEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink13InputTypeView19CreateShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZNK5blink13InputTypeView12UploadButtonEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13InputTypeView14FileStatusTextEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19AltAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19SrcAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView10UpdateViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MultipleAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24DisabledAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24RequiredAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21ValueAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb(%"class.blink::InputTypeView"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb(%"class.blink::InputTypeView"*, i1 zeroext) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink13InputTypeView17PopupRootAXObjectEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView21EnsureFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView20EnsurePrimaryContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InputTypeView18HasFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink13InputTypeView15IsDraggedSliderEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView11HasBadInputEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13InputTypeView17FocusedFieldIndexEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.648"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.648"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.648"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.648"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.648"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.648"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.648"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !5

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.648"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.648", %"class.WTF::Vector.648"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 2000, i32 1}
