; ModuleID = '../../third_party/blink/renderer/core/animation/underlying_value_owner.cc'
source_filename = "../../third_party/blink/renderer/core/animation/underlying_value_owner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::NullValueWrapper>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::NullValueWrapper>::InstanceStorage" = type { [16 x i8] }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::InterpolationType" = type opaque
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%class.scoped_refptr = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }

@_ZZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper = internal global i64 0, align 8
@_ZTVN5blink20UnderlyingValueOwnerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (%"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValueOwner"*)* @_ZN5blink20UnderlyingValueOwner24MutableInterpolableValueEv to i8*), i8* bitcast (void (%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolableValue"*)* @_ZN5blink20UnderlyingValueOwner20SetInterpolableValueENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (%"class.blink::NonInterpolableValue"* (%"class.blink::UnderlyingValueOwner"*)* @_ZNK5blink20UnderlyingValueOwner23GetNonInterpolableValueEv to i8*), i8* bitcast (void (%"class.blink::UnderlyingValueOwner"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink20UnderlyingValueOwner23SetNonInterpolableValueE13scoped_refptrIKNS_20NonInterpolableValueEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::InterpolableValue"* @_ZN5blink20UnderlyingValueOwner24MutableInterpolableValueEv(%"class.blink::UnderlyingValueOwner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %6, label %57

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %8 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8, !noalias !2
  %11 = icmp eq %"class.blink::InterpolableValue"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::InterpolableValue"* %10 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %14 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %14, i64 16
  %16 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %15, align 8, !noalias !2
  %17 = tail call %"class.blink::InterpolableValue"* %16(%"class.blink::InterpolableValue"* nonnull %10) #6, !noalias !2
  %18 = ptrtoint %"class.blink::InterpolableValue"* %17 to i64
  br label %19

19:                                               ; preds = %12, %6
  %20 = phi i64 [ %18, %12 ], [ 0, %6 ]
  %21 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %22 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %21, align 8, !noalias !2
  %23 = icmp eq %"class.blink::NonInterpolableValue"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %22, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #6, !noalias !2
  br label %26

26:                                               ; preds = %24, %19
  %27 = ptrtoint %"class.blink::NonInterpolableValue"* %22 to i64
  %28 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %29 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  store i64 %20, i64* %29, align 8
  %30 = icmp eq %"class.blink::InterpolableValue"* %28, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::InterpolableValue"* %28 to void (%"class.blink::InterpolableValue"*)***
  %33 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %33, i64 1
  %35 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, align 8
  tail call void %35(%"class.blink::InterpolableValue"* nonnull %28) #6
  br label %36

36:                                               ; preds = %31, %26
  %37 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %38 = bitcast %class.scoped_refptr* %37 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %39, align 8
  store i64 %27, i64* %38, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #6
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  tail call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #6
  br label %55

55:                                               ; preds = %48, %42, %36
  store %"struct.blink::InterpolationValue"* %2, %"struct.blink::InterpolationValue"** %7, align 8
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = phi %"class.blink::InterpolableValue"* [ %4, %1 ], [ %56, %55 ]
  ret %"class.blink::InterpolableValue"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %6, label %56

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %8 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8, !noalias !5
  %11 = icmp eq %"class.blink::InterpolableValue"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::InterpolableValue"* %10 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %14 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %13, align 8, !noalias !5
  %15 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %14, i64 16
  %16 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %15, align 8, !noalias !5
  %17 = tail call %"class.blink::InterpolableValue"* %16(%"class.blink::InterpolableValue"* nonnull %10) #6, !noalias !5
  %18 = ptrtoint %"class.blink::InterpolableValue"* %17 to i64
  br label %19

19:                                               ; preds = %12, %6
  %20 = phi i64 [ %18, %12 ], [ 0, %6 ]
  %21 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %22 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %21, align 8, !noalias !5
  %23 = icmp eq %"class.blink::NonInterpolableValue"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %22, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #6, !noalias !5
  br label %26

26:                                               ; preds = %19, %24
  %27 = ptrtoint %"class.blink::NonInterpolableValue"* %22 to i64
  %28 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %29 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  store i64 %20, i64* %29, align 8
  %30 = icmp eq %"class.blink::InterpolableValue"* %28, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::InterpolableValue"* %28 to void (%"class.blink::InterpolableValue"*)***
  %33 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %33, i64 1
  %35 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, align 8
  tail call void %35(%"class.blink::InterpolableValue"* nonnull %28) #6
  br label %36

36:                                               ; preds = %31, %26
  %37 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %38 = bitcast %class.scoped_refptr* %37 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %39, align 8
  store i64 %27, i64* %38, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #6
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  tail call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #6
  br label %55

55:                                               ; preds = %36, %42, %48
  store %"struct.blink::InterpolationValue"* %2, %"struct.blink::InterpolationValue"** %7, align 8
  br label %56

56:                                               ; preds = %1, %55
  ret %"struct.blink::InterpolationValue"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner20SetInterpolableValueENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolableValue"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::InterpolableValue"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  %7 = icmp eq %"class.blink::InterpolableValue"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.blink::InterpolationValue"* %4 to i64*
  store i64 %3, i64* %9, align 8
  br label %62

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %12 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %13, align 8, !noalias !8
  %15 = icmp eq %"class.blink::InterpolableValue"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::InterpolableValue"* %14 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %18 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %17, align 8, !noalias !8
  %19 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %18, i64 16
  %20 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %19, align 8, !noalias !8
  %21 = tail call %"class.blink::InterpolableValue"* %20(%"class.blink::InterpolableValue"* nonnull %14) #6, !noalias !8
  %22 = ptrtoint %"class.blink::InterpolableValue"* %21 to i64
  br label %23

23:                                               ; preds = %16, %10
  %24 = phi i64 [ %22, %16 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %12, i64 0, i32 1, i32 0
  %26 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8, !noalias !8
  %27 = icmp eq %"class.blink::NonInterpolableValue"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %26, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #6, !noalias !8
  br label %30

30:                                               ; preds = %28, %23
  %31 = ptrtoint %"class.blink::NonInterpolableValue"* %26 to i64
  %32 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  %33 = bitcast %"struct.blink::InterpolationValue"* %4 to i64*
  store i64 %24, i64* %33, align 8
  %34 = icmp eq %"class.blink::InterpolableValue"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::InterpolableValue"* %32 to void (%"class.blink::InterpolableValue"*)***
  %37 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %37, i64 1
  %39 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %38, align 8
  tail call void %39(%"class.blink::InterpolableValue"* nonnull %32) #6
  br label %40

40:                                               ; preds = %35, %30
  %41 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %42 = bitcast %class.scoped_refptr* %41 to i64*
  %43 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %41, i64 0, i32 0
  %44 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %43, align 8
  store i64 %31, i64* %42, align 8
  %45 = icmp eq %"class.blink::NonInterpolableValue"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %44, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #6
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %47, i64 -2
  %54 = bitcast %"class.base::RefCounted"* %53 to %"class.blink::NonInterpolableValue"*
  %55 = bitcast %"class.base::RefCounted"* %53 to void (%"class.blink::NonInterpolableValue"*)***
  %56 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %56, i64 1
  %58 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %57, align 8
  tail call void %58(%"class.blink::NonInterpolableValue"* nonnull %54) #6
  br label %59

59:                                               ; preds = %40, %46, %52
  store %"struct.blink::InterpolationValue"* %4, %"struct.blink::InterpolationValue"** %11, align 8
  %60 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  store i64 %3, i64* %33, align 8
  %61 = icmp eq %"class.blink::InterpolableValue"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %8, %59
  %63 = phi %"class.blink::InterpolableValue"* [ %6, %8 ], [ %60, %59 ]
  %64 = bitcast %"class.blink::InterpolableValue"* %63 to void (%"class.blink::InterpolableValue"*)***
  %65 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %65, i64 1
  %67 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %66, align 8
  tail call void %67(%"class.blink::InterpolableValue"* nonnull %63) #6
  br label %68

68:                                               ; preds = %62, %59
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::NonInterpolableValue"* @_ZNK5blink20UnderlyingValueOwner23GetNonInterpolableValueEv(%"class.blink::UnderlyingValueOwner"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %3 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %5 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %4, align 8
  ret %"class.blink::NonInterpolableValue"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner23SetNonInterpolableValueE13scoped_refptrIKNS_20NonInterpolableValueEE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::NonInterpolableValue"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::NonInterpolableValue"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %5) #6
  br label %6

6:                                                ; preds = %2, %4
  %7 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %8, align 8
  %10 = icmp eq %"class.blink::InterpolableValue"* %9, null
  br i1 %10, label %11, label %61

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %13 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %14, align 8, !noalias !11
  %16 = icmp eq %"class.blink::InterpolableValue"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::InterpolableValue"* %15 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %19 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %18, align 8, !noalias !11
  %20 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %19, i64 16
  %21 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %20, align 8, !noalias !11
  %22 = tail call %"class.blink::InterpolableValue"* %21(%"class.blink::InterpolableValue"* nonnull %15) #6, !noalias !11
  %23 = ptrtoint %"class.blink::InterpolableValue"* %22 to i64
  br label %24

24:                                               ; preds = %17, %11
  %25 = phi i64 [ %23, %17 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %13, i64 0, i32 1, i32 0
  %27 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %26, align 8, !noalias !11
  %28 = icmp eq %"class.blink::NonInterpolableValue"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %27, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %30) #6, !noalias !11
  br label %31

31:                                               ; preds = %29, %24
  %32 = ptrtoint %"class.blink::NonInterpolableValue"* %27 to i64
  %33 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %8, align 8
  %34 = bitcast %"struct.blink::InterpolationValue"* %7 to i64*
  store i64 %25, i64* %34, align 8
  %35 = icmp eq %"class.blink::InterpolableValue"* %33, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::InterpolableValue"* %33 to void (%"class.blink::InterpolableValue"*)***
  %38 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %38, i64 1
  %40 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %39, align 8
  tail call void %40(%"class.blink::InterpolableValue"* nonnull %33) #6
  br label %41

41:                                               ; preds = %36, %31
  %42 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %43 = bitcast %class.scoped_refptr* %42 to i64*
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 0, i32 0
  %45 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %44, align 8
  store i64 %32, i64* %43, align 8
  %46 = icmp eq %"class.blink::NonInterpolableValue"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %45, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #6
  %50 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted"* %54 to %"class.blink::NonInterpolableValue"*
  %56 = bitcast %"class.base::RefCounted"* %54 to void (%"class.blink::NonInterpolableValue"*)***
  %57 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %57, i64 1
  %59 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %58, align 8
  tail call void %59(%"class.blink::NonInterpolableValue"* nonnull %55) #6
  br label %60

60:                                               ; preds = %53, %47, %41
  store %"struct.blink::InterpolationValue"* %7, %"struct.blink::InterpolationValue"** %12, align 8
  br label %61

61:                                               ; preds = %6, %60
  %62 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %63 = ptrtoint %"class.blink::NonInterpolableValue"* %1 to i64
  %64 = bitcast %class.scoped_refptr* %62 to i64*
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 0, i32 0
  %66 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.blink::NonInterpolableValue"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %66, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #6
  %71 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 -2
  %76 = bitcast %"class.base::RefCounted"* %75 to %"class.blink::NonInterpolableValue"*
  %77 = bitcast %"class.base::RefCounted"* %75 to void (%"class.blink::NonInterpolableValue"*)***
  %78 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, i64 1
  %80 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %79, align 8
  tail call void %80(%"class.blink::NonInterpolableValue"* nonnull %76) #6
  br label %81

81:                                               ; preds = %61, %68, %74
  br i1 %3, label %95, label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %1, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #6
  %85 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 -2
  %90 = bitcast %"class.base::RefCounted"* %89 to %"class.blink::NonInterpolableValue"*
  %91 = bitcast %"class.base::RefCounted"* %89 to void (%"class.blink::NonInterpolableValue"*)***
  %92 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %92, i64 1
  %94 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %93, align 8
  tail call void %94(%"class.blink::NonInterpolableValue"* nonnull %90) #6
  br label %95

95:                                               ; preds = %81, %82, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !14

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper) #6
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  %10 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %9, align 8
  %11 = icmp eq %"class.blink::InterpolationType"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  %14 = load %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"** %13, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"struct.blink::InterpolationValue"* [ %14, %12 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink20UnderlyingValueOwner5ValueEvE20s_null_value_wrapper to %"struct.blink::InterpolationValue"*), %8 ]
  ret %"struct.blink::InterpolationValue"* %16
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner3SetEDn(%"class.blink::UnderlyingValueOwner"* nocapture, i8* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %4, align 8
  %6 = icmp eq %"class.blink::InterpolableValue"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::InterpolableValue"* %5 to void (%"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, i64 1
  %11 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* nonnull %5) #6
  br label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %14 = bitcast %class.scoped_refptr* %13 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %16 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %15, align 8
  store i64 0, i64* %14, align 8
  %17 = icmp eq %"class.blink::NonInterpolableValue"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %16, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #6
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted"* %25 to %"class.blink::NonInterpolableValue"*
  %27 = bitcast %"class.base::RefCounted"* %25 to void (%"class.blink::NonInterpolableValue"*)***
  %28 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %28, i64 1
  %30 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %29, align 8
  tail call void %30(%"class.blink::NonInterpolableValue"* nonnull %26) #6
  br label %31

31:                                               ; preds = %12, %18, %24
  %32 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* null, %"struct.blink::InterpolationValue"** %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* nocapture, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  store %"class.blink::InterpolationType"* %1, %"class.blink::InterpolationType"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %7 = icmp eq %"class.blink::InterpolableValue"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::InterpolableValue"* %6 to void (%"class.blink::InterpolableValue"*)***
  %10 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %10, i64 1
  %12 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %11, align 8
  tail call void %12(%"class.blink::InterpolableValue"* nonnull %6) #6
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %15 = bitcast %class.scoped_refptr* %14 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 0, i32 0
  %17 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %16, align 8
  store i64 0, i64* %15, align 8
  %18 = icmp eq %"class.blink::NonInterpolableValue"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #6
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted"* %26 to %"class.blink::NonInterpolableValue"*
  %28 = bitcast %"class.base::RefCounted"* %26 to void (%"class.blink::NonInterpolableValue"*)***
  %29 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::NonInterpolableValue"* nonnull %27) #6
  br label %32

32:                                               ; preds = %13, %19, %25
  %33 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* %2, %"struct.blink::InterpolationValue"** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeEONS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  store %"class.blink::InterpolationType"* %1, %"class.blink::InterpolationType"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %6, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"struct.blink::InterpolationValue"* %5 to i64*
  store i64 %8, i64* %11, align 8
  %12 = icmp eq %"class.blink::InterpolableValue"* %10, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::InterpolableValue"* %10 to void (%"class.blink::InterpolableValue"*)***
  %15 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %15, i64 1
  %17 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %16, align 8
  tail call void %17(%"class.blink::InterpolableValue"* nonnull %10) #6
  br label %18

18:                                               ; preds = %13, %3
  %19 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %19, i64 0, i32 0
  %21 = bitcast %class.scoped_refptr* %19 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %20, align 8
  %23 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %24 = bitcast %class.scoped_refptr* %23 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 0, i32 0
  %26 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  store i64 %22, i64* %24, align 8
  %27 = icmp eq %"class.blink::NonInterpolableValue"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %26, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %29, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #6
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %29, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %29, i64 -2
  %36 = bitcast %"class.base::RefCounted"* %35 to %"class.blink::NonInterpolableValue"*
  %37 = bitcast %"class.base::RefCounted"* %35 to void (%"class.blink::NonInterpolableValue"*)***
  %38 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %38, i64 1
  %40 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %39, align 8
  tail call void %40(%"class.blink::NonInterpolableValue"* nonnull %36) #6
  br label %41

41:                                               ; preds = %18, %28, %34
  %42 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* %5, %"struct.blink::InterpolationValue"** %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner3SetENSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::TypedInterpolationValue"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::TypedInterpolationValue"* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::TypedInterpolationValue"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  %9 = bitcast %"class.blink::InterpolationType"** %8 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"struct.blink::InterpolationValue"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %14 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %14, align 8
  %16 = bitcast %"struct.blink::InterpolationValue"* %10 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %"class.blink::InterpolableValue"* %15, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.blink::InterpolableValue"* %15 to void (%"class.blink::InterpolableValue"*)***
  %20 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::InterpolableValue"* nonnull %15) #6
  br label %23

23:                                               ; preds = %18, %4
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %1, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %25, align 8
  %28 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %29 = bitcast %class.scoped_refptr* %28 to i64*
  %30 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %31 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %30, align 8
  store i64 %27, i64* %29, align 8
  %32 = icmp eq %"class.blink::NonInterpolableValue"* %31, null
  br i1 %32, label %77, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %31, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #6
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %77

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 -2
  %41 = bitcast %"class.base::RefCounted"* %40 to %"class.blink::NonInterpolableValue"*
  %42 = bitcast %"class.base::RefCounted"* %40 to void (%"class.blink::NonInterpolableValue"*)***
  %43 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %43, i64 1
  %45 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %44, align 8
  tail call void %45(%"class.blink::NonInterpolableValue"* nonnull %41) #6
  br label %77

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %48, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %48, align 8
  %50 = icmp eq %"class.blink::InterpolableValue"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::InterpolableValue"* %49 to void (%"class.blink::InterpolableValue"*)***
  %53 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %53, i64 1
  %55 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %54, align 8
  tail call void %55(%"class.blink::InterpolableValue"* nonnull %49) #6
  br label %56

56:                                               ; preds = %51, %46
  %57 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %58 = bitcast %class.scoped_refptr* %57 to i64*
  %59 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %57, i64 0, i32 0
  %60 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %59, align 8
  store i64 0, i64* %58, align 8
  %61 = icmp eq %"class.blink::NonInterpolableValue"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #6
  %65 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %63, i64 -2
  %70 = bitcast %"class.base::RefCounted"* %69 to %"class.blink::NonInterpolableValue"*
  %71 = bitcast %"class.base::RefCounted"* %69 to void (%"class.blink::NonInterpolableValue"*)***
  %72 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %72, i64 1
  %74 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %73, align 8
  tail call void %74(%"class.blink::NonInterpolableValue"* nonnull %70) #6
  br label %75

75:                                               ; preds = %68, %62, %56
  %76 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* null, %"struct.blink::InterpolationValue"** %76, align 8
  br label %106

77:                                               ; preds = %23, %33, %39
  %78 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* %10, %"struct.blink::InterpolationValue"** %78, align 8
  %79 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %1, i64 0, i32 1, i32 1, i32 0
  %80 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %79, align 8
  %81 = icmp eq %"class.blink::NonInterpolableValue"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %80, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #6
  %85 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %83, i64 -2
  %90 = bitcast %"class.base::RefCounted"* %89 to %"class.blink::NonInterpolableValue"*
  %91 = bitcast %"class.base::RefCounted"* %89 to void (%"class.blink::NonInterpolableValue"*)***
  %92 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %92, i64 1
  %94 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %93, align 8
  tail call void %94(%"class.blink::NonInterpolableValue"* nonnull %90) #6
  br label %95

95:                                               ; preds = %88, %82, %77
  %96 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %96, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %96, align 8
  %98 = icmp eq %"class.blink::InterpolableValue"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.blink::InterpolableValue"* %97 to void (%"class.blink::InterpolableValue"*)***
  %101 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %101, i64 1
  %103 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %102, align 8
  tail call void %103(%"class.blink::InterpolableValue"* nonnull %97) #6
  br label %104

104:                                              ; preds = %99, %95
  %105 = bitcast %"class.blink::TypedInterpolationValue"* %1 to i8*
  tail call void @free(i8* %105) #6
  br label %106

106:                                              ; preds = %75, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20UnderlyingValueOwner3SetEPKNS_23TypedInterpolationValueE(%"class.blink::UnderlyingValueOwner"* nocapture, %"class.blink::TypedInterpolationValue"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::TypedInterpolationValue"* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::TypedInterpolationValue"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  %9 = bitcast %"class.blink::InterpolationType"** %8 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %10, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %10, align 8
  %12 = icmp eq %"class.blink::InterpolableValue"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::InterpolableValue"* %11 to void (%"class.blink::InterpolableValue"*)***
  %15 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %15, i64 1
  %17 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %16, align 8
  tail call void %17(%"class.blink::InterpolableValue"* nonnull %11) #6
  br label %18

18:                                               ; preds = %13, %4
  %19 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %20 = bitcast %class.scoped_refptr* %19 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %19, i64 0, i32 0
  %22 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %21, align 8
  store i64 0, i64* %20, align 8
  %23 = icmp eq %"class.blink::NonInterpolableValue"* %22, null
  br i1 %23, label %66, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %22, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #6
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %66

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.blink::NonInterpolableValue"*
  %33 = bitcast %"class.base::RefCounted"* %31 to void (%"class.blink::NonInterpolableValue"*)***
  %34 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %34, i64 1
  %36 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %35, align 8
  tail call void %36(%"class.blink::NonInterpolableValue"* nonnull %32) #6
  br label %66

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %39, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %39, align 8
  %41 = icmp eq %"class.blink::InterpolableValue"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::InterpolableValue"* %40 to void (%"class.blink::InterpolableValue"*)***
  %44 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %44, i64 1
  %46 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %45, align 8
  tail call void %46(%"class.blink::InterpolableValue"* nonnull %40) #6
  br label %47

47:                                               ; preds = %42, %37
  %48 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 2, i32 1
  %49 = bitcast %class.scoped_refptr* %48 to i64*
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 0, i32 0
  %51 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %50, align 8
  store i64 0, i64* %49, align 8
  %52 = icmp eq %"class.blink::NonInterpolableValue"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %51, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %54, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #6
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %54, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %54, i64 -2
  %61 = bitcast %"class.base::RefCounted"* %60 to %"class.blink::NonInterpolableValue"*
  %62 = bitcast %"class.base::RefCounted"* %60 to void (%"class.blink::NonInterpolableValue"*)***
  %63 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %63, i64 1
  %65 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %64, align 8
  tail call void %65(%"class.blink::NonInterpolableValue"* nonnull %61) #6
  br label %66

66:                                               ; preds = %59, %53, %47, %30, %24, %18
  %67 = phi %"struct.blink::InterpolationValue"* [ %7, %18 ], [ %7, %24 ], [ %7, %30 ], [ null, %47 ], [ null, %53 ], [ null, %59 ]
  %68 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %0, i64 0, i32 3
  store %"struct.blink::InterpolationValue"* %67, %"struct.blink::InterpolationValue"** %68, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink18InterpolationValue5CloneEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink18InterpolationValue5CloneEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink18InterpolationValue5CloneEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink18InterpolationValue5CloneEv"}
!14 = !{!"branch_weights", i32 1, i32 1048575}
