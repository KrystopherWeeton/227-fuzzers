; ModuleID = '../../v8/src/heap/setup-heap-internal.cc'
source_filename = "../../v8/src/heap/setup-heap-internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8::internal::Heap::StringTypeTable" = type { i16, i32, i16 }
%"struct.v8::internal::Heap::ConstantStringTable" = type { i8*, i16 }
%"struct.v8::internal::Heap::StructTable" = type { i16, i32, i16 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.150", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.154", %"class.std::__1::vector.154", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::shared_ptr.469", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.492", %"class.std::__1::unique_ptr.518", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.524", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.537", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.319", i8, [7 x i8], %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.569", %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.593", %"class.std::__1::vector.621", i8, %"class.std::__1::unique_ptr.628", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.682", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.688", %"class.std::__1::unique_ptr.709", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.719", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.839", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.852", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.862", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.873", %"struct.std::__1::atomic.141", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.948", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.996"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1004", i32, i8, i8, i32, i32, %"class.std::__1::vector.1010", %"class.std::__1::vector.1010", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1017", i64, %"class.std::__1::unordered_map.1018", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.530", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.149", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1074", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1088", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1122", %"class.std::__1::vector.1126", %"class.std::__1::vector.1126", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.677", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.530" }
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.128", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.130" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.59", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.692" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.128", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.712", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.std::__1::shared_ptr.719" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.720", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.720" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.721", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"struct.std::__1::atomic.141", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::set.771", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.647", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.781", %"class.v8::internal::DetachableVector.782", %"class.v8::internal::DetachableVector.781", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.782" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.781" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.470" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.473", %"class.std::__1::set.481" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.473" = type { %"class.std::__1::__tree.474" }
%"class.std::__1::__tree.474" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.783", %"class.std::__1::vector.789", %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.803", %"class.std::__1::unique_ptr.810", i64, %"class.std::__1::vector.816", %"class.std::__1::vector.824", %"class.std::__1::vector.832", i8, i8, i32 }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.791" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.v8::internal::GlobalHandles::NodeSpace.799"* }
%"class.v8::internal::GlobalHandles::NodeSpace.799" = type opaque
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"*, %"class.std::__1::__compressed_pair.819" }
%"struct.std::__1::pair.818" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::pair.818"* }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.653", %"class.std::__1::vector.839" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { i64**, i64**, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.846" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { i32*, i32*, %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.852" = type { %"struct.std::__1::__atomic_base.853" }
%"struct.std::__1::__atomic_base.853" = type { %"struct.std::__1::__cxx_atomic_impl.854" }
%"struct.std::__1::__cxx_atomic_impl.854" = type { %"struct.std::__1::__cxx_atomic_base_impl.855" }
%"struct.std::__1::__cxx_atomic_base_impl.855" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.862" = type { %"struct.std::__1::__atomic_base.863" }
%"struct.std::__1::__atomic_base.863" = type { %"struct.std::__1::__cxx_atomic_impl.864" }
%"struct.std::__1::__cxx_atomic_impl.864" = type { %"struct.std::__1::__cxx_atomic_base_impl.865" }
%"struct.std::__1::__cxx_atomic_base_impl.865" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.869 }
%union.anon.869 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.873" = type { %"class.std::__1::__hash_table.874" }
%"class.std::__1::__hash_table.874" = type <{ %"class.std::__1::unique_ptr.875", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.893", [4 x i8] }>
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877", %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.878"** }
%"struct.std::__1::__hash_node_base.878" = type { %"struct.std::__1::__hash_node_base.878"* }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.std::__1::__bucket_list_deallocator.880" }
%"class.std::__1::__bucket_list_deallocator.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.878" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.899", %"class.v8::internal::Handle.905", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.906", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.905" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.906" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.907", %"class.std::__1::vector.913", %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.927", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"struct.std::__1::pair.947" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"class.std::__1::unique_ptr.915"*, %"class.std::__1::unique_ptr.915"*, %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::unique_ptr.915" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.std::__1::unique_ptr.915"* }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.std::__1::pair.941"*, %"struct.std::__1::pair.941"*, %"class.std::__1::__compressed_pair.942" }
%"struct.std::__1::pair.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::pair.941"* }
%"struct.std::__1::pair.947" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.681"*, i16, i8*)*, i8* }
%"class.v8::Local.681" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.951", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.951" = type { %"class.std::__1::__hash_table.952" }
%"class.std::__1::__hash_table.952" = type <{ %"class.std::__1::unique_ptr.953", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.972", [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955", %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::__hash_node_base.956"** }
%"struct.std::__1::__hash_node_base.956" = type { %"struct.std::__1::__hash_node_base.956"* }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.std::__1::__bucket_list_deallocator.958" }
%"class.std::__1::__bucket_list_deallocator.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.956" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.980", i64 }
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64* }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.991" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.985"**, %"struct.std::__1::pair.985"**, %"struct.std::__1::pair.985"**, %"class.std::__1::__compressed_pair.986" }
%"struct.std::__1::pair.985" = type opaque
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"struct.std::__1::pair.985"** }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.996" = type { %"class.std::__1::__vector_base.997" }
%"class.std::__1::__vector_base.997" = type { %"class.v8::internal::Handle.998"*, %"class.v8::internal::Handle.998"*, %"class.std::__1::__compressed_pair.999" }
%"class.v8::internal::Handle.998" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.v8::internal::Handle.998"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.857", i32, %"class.v8::Local.681" }
%"class.v8::Local.857" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.653", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.149" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1042", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1071", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1072", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1042" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1067, %union.anon.1069, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1067 = type { i64 }
%union.anon.1069 = type { i64 }
%"class.std::__1::weak_ptr.1071" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.149" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1072" = type { %"class.v8::PersistentBase.1073" }
%"class.v8::PersistentBase.1073" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1043", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1043" = type { %"class.std::__1::__hash_table.1044" }
%"class.std::__1::__hash_table.1044" = type <{ %"class.std::__1::unique_ptr.1045", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1063", [4 x i8] }>
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047", %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1048"** }
%"struct.std::__1::__hash_node_base.1048" = type { %"struct.std::__1::__hash_node_base.1048"* }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.std::__1::__bucket_list_deallocator.1050" }
%"class.std::__1::__bucket_list_deallocator.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::__hash_node_base.1048" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1079", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.634", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.463", %"class.std::__1::vector.669", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__cxx_atomic_impl.636" }
%"struct.std::__1::__cxx_atomic_impl.636" = type { %"struct.std::__1::__cxx_atomic_base_impl.637" }
%"struct.std::__1::__cxx_atomic_base_impl.637" = type { i32 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.653" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.std::__1::pair.671"*, %"struct.std::__1::pair.671"*, %"class.std::__1::__compressed_pair.672" }
%"struct.std::__1::pair.671" = type opaque
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::pair.671"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.88" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.77", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.81", i8, [7 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i64*, i64*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.858", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.858" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1096" }
%"class.std::__1::unordered_map.1096" = type { %"class.std::__1::__hash_table.1097" }
%"class.std::__1::__hash_table.1097" = type <{ %"class.std::__1::unique_ptr.1098", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1113", %"class.std::__1::__compressed_pair.1116", [4 x i8] }>
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100", %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"struct.std::__1::__hash_node_base.1101"** }
%"struct.std::__1::__hash_node_base.1101" = type { %"struct.std::__1::__hash_node_base.1101"* }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.std::__1::__bucket_list_deallocator.1103" }
%"class.std::__1::__bucket_list_deallocator.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::__hash_node_base.1101" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1122" = type { %"struct.std::__1::__atomic_base.1123" }
%"struct.std::__1::__atomic_base.1123" = type { %"struct.std::__1::__cxx_atomic_impl.1124" }
%"struct.std::__1::__cxx_atomic_impl.1124" = type { %"struct.std::__1::__cxx_atomic_base_impl.1125" }
%"struct.std::__1::__cxx_atomic_base_impl.1125" = type { %"class.std::__1::vector.1126"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1128" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.92" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair.94" = type { i32, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair.94"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.100" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.141", %"struct.std::__1::atomic.145", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.156" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.276", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.170", %"class.std::__1::vector.171", %"class.std::__1::vector.178", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.170" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.173" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.186", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.192", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.186" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.188" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.190" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.192" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.202", i8, i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.218" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.170"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.218" = type { %"class.std::__1::__hash_table.219" }
%"class.std::__1::__hash_table.219" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.223"** }
%"struct.std::__1::__hash_node_base.223" = type { %"struct.std::__1::__hash_node_base.223"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator.225" }
%"class.std::__1::__bucket_list_deallocator.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.223" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.245" }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.std::__1::pair.278"*, %"struct.std::__1::pair.278"*, %"class.std::__1::__compressed_pair.279" }
%"struct.std::__1::pair.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::pair.278"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.284", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.269"], [3 x %"class.std::__1::vector.269"], i8, %"struct.std::__1::atomic.141", [6 x i8], %"class.std::__1::vector.269", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.294"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.294" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.319", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.312"], %"class.std::__1::unique_ptr.284" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.351", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.355", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.360" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__cxx_atomic_impl.353" }
%"struct.std::__1::__cxx_atomic_impl.353" = type { %"struct.std::__1::__cxx_atomic_base_impl.354" }
%"struct.std::__1::__cxx_atomic_base_impl.354" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.284", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.141", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.390", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.390" = type { %"class.std::__1::__hash_table.391" }
%"class.std::__1::__hash_table.391" = type <{ %"class.std::__1::unique_ptr.392", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.395"** }
%"struct.std::__1::__hash_node_base.395" = type { %"struct.std::__1::__hash_node_base.395"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator.397" }
%"class.std::__1::__bucket_list_deallocator.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.395" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.426" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.469" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.488", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.470", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.492" = type { %"class.std::__1::__hash_table.493" }
%"class.std::__1::__hash_table.493" = type <{ %"class.std::__1::unique_ptr.494", %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.512", [4 x i8] }>
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496", %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.497"** }
%"struct.std::__1::__hash_node_base.497" = type { %"struct.std::__1::__hash_node_base.497"* }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.std::__1::__bucket_list_deallocator.499" }
%"class.std::__1::__bucket_list_deallocator.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"struct.std::__1::__hash_node_base.497" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.530", %"class.std::__1::vector.530" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.319" = type { %"class.std::__1::__hash_table.320" }
%"class.std::__1::__hash_table.320" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.340", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base.324"** }
%"struct.std::__1::__hash_node_base.324" = type { %"struct.std::__1::__hash_node_base.324"* }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.std::__1::__bucket_list_deallocator.326" }
%"class.std::__1::__bucket_list_deallocator.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.324" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.569" = type { %"class.std::__1::__hash_table.570" }
%"class.std::__1::__hash_table.570" = type <{ %"class.std::__1::unique_ptr.571", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.589", [4 x i8] }>
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573", %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node_base.574"** }
%"struct.std::__1::__hash_node_base.574" = type { %"struct.std::__1::__hash_node_base.574"* }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.std::__1::__bucket_list_deallocator.576" }
%"class.std::__1::__bucket_list_deallocator.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.std::__1::__hash_node_base.574" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.543" = type { %"class.std::__1::__hash_table.544" }
%"class.std::__1::__hash_table.544" = type <{ %"class.std::__1::unique_ptr.545", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.563", [4 x i8] }>
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547", %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base.548"** }
%"struct.std::__1::__hash_node_base.548" = type { %"struct.std::__1::__hash_node_base.548"* }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.std::__1::__bucket_list_deallocator.550" }
%"class.std::__1::__bucket_list_deallocator.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.std::__1::__hash_node_base.548" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.615", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Vector.1195" = type { i8*, i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }

$_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal10PagedSpace11AllocateRawEiNS0_19AllocationAlignmentENS0_16AllocationOriginE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"0u == gc_count_\00", align 1
@_ZN2v88internal4Heap17string_type_tableE = hidden local_unnamed_addr constant [18 x %"struct.v8::internal::Heap::StringTypeTable"] [%"struct.v8::internal::Heap::StringTypeTable" { i16 32, i32 0, i16 78 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 40, i32 0, i16 16 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 33, i32 20, i16 80 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 41, i32 20, i16 79 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 35, i32 20, i16 82 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 43, i32 20, i16 83 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 34, i32 28, i16 84 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 42, i32 28, i16 85 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 50, i32 20, i16 86 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 58, i32 20, i16 92 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 0, i32 0, i16 87 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 8, i32 0, i16 17 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 2, i32 28, i16 88 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 10, i32 28, i16 89 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 18, i32 20, i16 90 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 26, i32 20, i16 91 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 37, i32 16, i16 81 }, %"struct.v8::internal::Heap::StringTypeTable" { i16 45, i32 16, i16 26 }], align 16
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"adoptText\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"baseName\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"accounting\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"breakType\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"calendar\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"calendars\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"cardinal\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"caseFirst\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"collation\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"collations\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"compact\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"compactDisplay\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"currency\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"currencyDisplay\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"currencySign\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"dateStyle\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"dateTimeField\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"dayPeriod\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"decimal\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"endRange\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"engineering\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"era\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"exceptZero\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"exponentInteger\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"exponentMinusSign\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"exponentSeparator\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"fallback\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"firstDay\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"fraction\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"fractionalSecond\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"fractionalSecondDigits\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"granularity\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"grapheme\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"h11\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"h12\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"h23\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"h24\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"hour12\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"hourCycle\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"hourCycles\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"ideo\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"ignorePunctuation\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"Invalid Date\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"isWordLike\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"kana\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"letter\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"loose\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"ltr\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"maximumFractionDigits\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"maximumSignificantDigits\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"minimalDays\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c"minimumFractionDigits\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"minimumIntegerDigits\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"minimumSignificantDigits\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"minusSign\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"narrowSymbol\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"notation\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"numberingSystem\00", align 1
@.str.81 = private unnamed_addr constant [17 x i8] c"numberingSystems\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"numeric\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"ordinal\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"percentSign\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"plusSign\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"quarter\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"region\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"relatedYear\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"scientific\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"segment\00", align 1
@.str.93 = private unnamed_addr constant [17 x i8] c"Segment Iterator\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"Segments\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"sensitivity\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"sep\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"signDisplay\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"standard\00", align 1
@.str.100 = private unnamed_addr constant [11 x i8] c"startRange\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.103 = private unnamed_addr constant [5 x i8] c"term\00", align 1
@.str.104 = private unnamed_addr constant [9 x i8] c"textInfo\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"timeStyle\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"timeZone\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"timeZones\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"timeZoneName\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"usage\00", align 1
@.str.113 = private unnamed_addr constant [12 x i8] c"useGrouping\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"unit\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"unitDisplay\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"weekday\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"weekendEnd\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"weekendStart\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"weekInfo\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"yearName\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.124 = private unnamed_addr constant [15 x i8] c"AggregateError\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.126 = private unnamed_addr constant [21 x i8] c"(anonymous function)\00", align 1
@.str.127 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"apply\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"Arguments\00", align 1
@.str.130 = private unnamed_addr constant [10 x i8] c"arguments\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"[object Arguments]\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@.str.133 = private unnamed_addr constant [15 x i8] c"[object Array]\00", align 1
@.str.134 = private unnamed_addr constant [12 x i8] c"ArrayBuffer\00", align 1
@.str.135 = private unnamed_addr constant [15 x i8] c"Array Iterator\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.139 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.140 = private unnamed_addr constant [6 x i8] c"await\00", align 1
@.str.141 = private unnamed_addr constant [7 x i8] c"BigInt\00", align 1
@.str.142 = private unnamed_addr constant [7 x i8] c"bigint\00", align 1
@.str.143 = private unnamed_addr constant [14 x i8] c"BigInt64Array\00", align 1
@.str.144 = private unnamed_addr constant [15 x i8] c"BigUint64Array\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"Boolean\00", align 1
@.str.147 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@.str.148 = private unnamed_addr constant [17 x i8] c"[object Boolean]\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"bound \00", align 1
@.str.150 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.151 = private unnamed_addr constant [11 x i8] c"byteLength\00", align 1
@.str.152 = private unnamed_addr constant [11 x i8] c"byteOffset\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"CompileError\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"callee\00", align 1
@.str.155 = private unnamed_addr constant [7 x i8] c"caller\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"cause\00", align 1
@.str.157 = private unnamed_addr constant [10 x i8] c"character\00", align 1
@.str.158 = private unnamed_addr constant [10 x i8] c"(closure)\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"column\00", align 1
@.str.161 = private unnamed_addr constant [11 x i8] c"<computed>\00", align 1
@.str.162 = private unnamed_addr constant [13 x i8] c"configurable\00", align 1
@.str.163 = private unnamed_addr constant [12 x i8] c"conjunction\00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c"construct\00", align 1
@.str.165 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.166 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@.str.167 = private unnamed_addr constant [5 x i8] c"Date\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"[object Date]\00", align 1
@.str.169 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.170 = private unnamed_addr constant [15 x i8] c"defineProperty\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"deleteProperty\00", align 1
@.str.172 = private unnamed_addr constant [12 x i8] c"disjunction\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c".brand\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c".catch\00", align 1
@.str.176 = private unnamed_addr constant [9 x i8] c".default\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c".for\00", align 1
@.str.178 = private unnamed_addr constant [18 x i8] c".generator_object\00", align 1
@.str.179 = private unnamed_addr constant [13 x i8] c".home_object\00", align 1
@.str.180 = private unnamed_addr constant [8 x i8] c".result\00", align 1
@.str.181 = private unnamed_addr constant [13 x i8] c".repl_result\00", align 1
@.str.182 = private unnamed_addr constant [21 x i8] c"._static_home_object\00", align 1
@.str.183 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.184 = private unnamed_addr constant [12 x i8] c".switch_tag\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"dotAll\00", align 1
@.str.186 = private unnamed_addr constant [11 x i8] c"enumerable\00", align 1
@.str.187 = private unnamed_addr constant [8 x i8] c"element\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@.str.190 = private unnamed_addr constant [15 x i8] c"[object Error]\00", align 1
@.str.191 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.192 = private unnamed_addr constant [10 x i8] c"EvalError\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.195 = private unnamed_addr constant [21 x i8] c"FinalizationRegistry\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"Float32Array\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"Float64Array\00", align 1
@.str.199 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@.str.201 = private unnamed_addr constant [30 x i8] c"function () { [native code] }\00", align 1
@.str.202 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"[object Function]\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"Generator\00", align 1
@.str.205 = private unnamed_addr constant [5 x i8] c"get \00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.207 = private unnamed_addr constant [25 x i8] c"getOwnPropertyDescriptor\00", align 1
@.str.208 = private unnamed_addr constant [15 x i8] c"getPrototypeOf\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.210 = private unnamed_addr constant [11 x i8] c"globalThis\00", align 1
@.str.211 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.212 = private unnamed_addr constant [26 x i8] c"GrowableSharedArrayBuffer\00", align 1
@.str.213 = private unnamed_addr constant [4 x i8] c"has\00", align 1
@.str.214 = private unnamed_addr constant [11 x i8] c"hasIndices\00", align 1
@.str.215 = private unnamed_addr constant [11 x i8] c"ignoreCase\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"illegal access\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"illegal argument\00", align 1
@.str.218 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.219 = private unnamed_addr constant [8 x i8] c"indices\00", align 1
@.str.220 = private unnamed_addr constant [9 x i8] c"Infinity\00", align 1
@.str.221 = private unnamed_addr constant [9 x i8] c"infinity\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.223 = private unnamed_addr constant [11 x i8] c"Int16Array\00", align 1
@.str.224 = private unnamed_addr constant [11 x i8] c"Int32Array\00", align 1
@.str.225 = private unnamed_addr constant [10 x i8] c"Int8Array\00", align 1
@.str.226 = private unnamed_addr constant [13 x i8] c"isExtensible\00", align 1
@.str.227 = private unnamed_addr constant [17 x i8] c"jsMemoryEstimate\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"jsMemoryRange\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"lastIndex\00", align 1
@.str.231 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.232 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.234 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.235 = private unnamed_addr constant [10 x i8] c"LinkError\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.237 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"Map Iterator\00", align 1
@.str.239 = private unnamed_addr constant [14 x i8] c"maxByteLength\00", align 1
@.str.240 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.244 = private unnamed_addr constant [7 x i8] c"Module\00", align 1
@.str.245 = private unnamed_addr constant [10 x i8] c"multiline\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.247 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c"narrow\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"native\00", align 1
@.str.250 = private unnamed_addr constant [12 x i8] c".new.target\00", align 1
@.str.251 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.252 = private unnamed_addr constant [4 x i8] c"NFC\00", align 1
@.str.253 = private unnamed_addr constant [4 x i8] c"NFD\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"NFKC\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"NFKD\00", align 1
@.str.256 = private unnamed_addr constant [10 x i8] c"not-equal\00", align 1
@.str.257 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.258 = private unnamed_addr constant [14 x i8] c"[object Null]\00", align 1
@.str.259 = private unnamed_addr constant [7 x i8] c"Number\00", align 1
@.str.260 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.261 = private unnamed_addr constant [16 x i8] c"[object Number]\00", align 1
@.str.262 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@.str.263 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.264 = private unnamed_addr constant [16 x i8] c"[object Object]\00", align 1
@.str.265 = private unnamed_addr constant [3 x i8] c"of\00", align 1
@.str.266 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.267 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.268 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@.str.269 = private unnamed_addr constant [8 x i8] c"ownKeys\00", align 1
@.str.270 = private unnamed_addr constant [8 x i8] c"percent\00", align 1
@.str.271 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.272 = private unnamed_addr constant [18 x i8] c"preventExtensions\00", align 1
@.str.273 = private unnamed_addr constant [13 x i8] c"#constructor\00", align 1
@.str.274 = private unnamed_addr constant [8 x i8] c"Promise\00", align 1
@.str.275 = private unnamed_addr constant [10 x i8] c"__proto__\00", align 1
@.str.276 = private unnamed_addr constant [10 x i8] c"prototype\00", align 1
@.str.277 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@.str.278 = private unnamed_addr constant [6 x i8] c"Proxy\00", align 1
@.str.279 = private unnamed_addr constant [5 x i8] c"(?:)\00", align 1
@.str.280 = private unnamed_addr constant [11 x i8] c"RangeError\00", align 1
@.str.281 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.282 = private unnamed_addr constant [15 x i8] c"ReferenceError\00", align 1
@.str.283 = private unnamed_addr constant [12 x i8] c"Reflect.get\00", align 1
@.str.284 = private unnamed_addr constant [12 x i8] c"Reflect.has\00", align 1
@.str.285 = private unnamed_addr constant [7 x i8] c"RegExp\00", align 1
@.str.286 = private unnamed_addr constant [16 x i8] c"[object RegExp]\00", align 1
@.str.287 = private unnamed_addr constant [21 x i8] c"ResizableArrayBuffer\00", align 1
@.str.288 = private unnamed_addr constant [8 x i8] c"resolve\00", align 1
@.str.289 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"revoke\00", align 1
@.str.291 = private unnamed_addr constant [13 x i8] c"RuntimeError\00", align 1
@.str.292 = private unnamed_addr constant [7 x i8] c"Script\00", align 1
@.str.293 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.295 = private unnamed_addr constant [4 x i8] c"Set\00", align 1
@.str.296 = private unnamed_addr constant [9 x i8] c"sentence\00", align 1
@.str.297 = private unnamed_addr constant [5 x i8] c"set \00", align 1
@.str.298 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.299 = private unnamed_addr constant [13 x i8] c"Set Iterator\00", align 1
@.str.300 = private unnamed_addr constant [15 x i8] c"setPrototypeOf\00", align 1
@.str.301 = private unnamed_addr constant [18 x i8] c"SharedArrayBuffer\00", align 1
@.str.302 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.303 = private unnamed_addr constant [11 x i8] c"sourceText\00", align 1
@.str.304 = private unnamed_addr constant [6 x i8] c"stack\00", align 1
@.str.305 = private unnamed_addr constant [16 x i8] c"stackTraceLimit\00", align 1
@.str.306 = private unnamed_addr constant [7 x i8] c"sticky\00", align 1
@.str.307 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.308 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.309 = private unnamed_addr constant [16 x i8] c"[object String]\00", align 1
@.str.310 = private unnamed_addr constant [17 x i8] c"[Symbol.species]\00", align 1
@.str.311 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.313 = private unnamed_addr constant [12 x i8] c"SyntaxError\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.315 = private unnamed_addr constant [5 x i8] c"then\00", align 1
@.str.316 = private unnamed_addr constant [15 x i8] c".this_function\00", align 1
@.str.317 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.318 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.319 = private unnamed_addr constant [10 x i8] c"timed-out\00", align 1
@.str.320 = private unnamed_addr constant [7 x i8] c"toJSON\00", align 1
@.str.321 = private unnamed_addr constant [9 x i8] c"toString\00", align 1
@.str.322 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.323 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.324 = private unnamed_addr constant [10 x i8] c"TypeError\00", align 1
@.str.325 = private unnamed_addr constant [12 x i8] c"Uint16Array\00", align 1
@.str.326 = private unnamed_addr constant [12 x i8] c"Uint32Array\00", align 1
@.str.327 = private unnamed_addr constant [11 x i8] c"Uint8Array\00", align 1
@.str.328 = private unnamed_addr constant [18 x i8] c"Uint8ClampedArray\00", align 1
@.str.329 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.330 = private unnamed_addr constant [19 x i8] c"[object Undefined]\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"URIError\00", align 1
@.str.333 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.334 = private unnamed_addr constant [8 x i8] c"valueOf\00", align 1
@.str.335 = private unnamed_addr constant [8 x i8] c"WeakMap\00", align 1
@.str.336 = private unnamed_addr constant [8 x i8] c"WeakRef\00", align 1
@.str.337 = private unnamed_addr constant [8 x i8] c"WeakSet\00", align 1
@.str.338 = private unnamed_addr constant [5 x i8] c"week\00", align 1
@.str.339 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.340 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.341 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@_ZN2v88internal4Heap21constant_string_tableE = hidden local_unnamed_addr constant [340 x %"struct.v8::internal::Heap::ConstantStringTable"] [%"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i16 9 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i16 135 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i16 136 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i16 137 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i16 138 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i16 139 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i16 140 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i16 141 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i16 142 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i16 143 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i16 144 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i16 145 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i16 146 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i16 147 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i16 148 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i16 149 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i16 150 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i16 151 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i16 152 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i16 153 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i16 154 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i16 155 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i16 156 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i16 157 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i16 158 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i16 159 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i16 160 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i16 161 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i16 162 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i16 163 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i16 164 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i16 165 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i16 166 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i16 167 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), i16 168 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i16 169 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i32 0, i32 0), i16 170 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i16 171 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i16 172 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i16 173 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i16 174 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i16 175 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i16 176 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i16 177 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i16 178 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i16 179 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i16 180 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i16 181 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i16 182 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i16 183 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i32 0, i32 0), i16 184 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i16 185 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i16 186 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), i16 187 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i16 188 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i16 189 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i16 190 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i16 191 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i16 192 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i16 193 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0), i16 194 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i16 195 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i16 196 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i32 0, i32 0), i16 197 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i32 0, i32 0), i16 198 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0), i16 199 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.68, i32 0, i32 0), i16 200 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i32 0, i32 0), i16 201 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i32 0, i32 0), i16 202 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i16 203 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), i16 204 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), i16 205 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i32 0, i32 0), i16 206 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i32 0, i32 0), i16 207 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i32 0, i32 0), i16 208 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i16 209 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i16 210 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i16 211 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i16 212 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0), i16 213 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0), i16 214 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i32 0, i32 0), i16 215 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), i16 216 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i16 217 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i16 218 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), i16 219 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), i16 220 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i32 0, i32 0), i16 221 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i32 0, i32 0), i16 222 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i16 223 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i32 0, i32 0), i16 224 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i32 0, i32 0), i16 225 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i16 226 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i32 0, i32 0), i16 227 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i16 228 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i32 0, i32 0), i16 229 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i32 0, i32 0), i16 230 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i16 231 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i16 232 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i16 233 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i32 0, i32 0), i16 234 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103, i32 0, i32 0), i16 235 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104, i32 0, i32 0), i16 236 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), i16 237 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), i16 238 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i16 239 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.108, i32 0, i32 0), i16 240 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i16 241 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i16 242 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i16 243 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i16 244 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.113, i32 0, i32 0), i16 245 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i16 246 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i16 247 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), i16 248 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i32 0, i32 0), i16 249 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i32 0, i32 0), i16 250 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i32 0, i32 0), i16 251 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), i16 252 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i16 253 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), i16 254 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i32 0, i32 0), i16 255 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i32 0), i16 256 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i32 0, i32 0), i16 257 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.126, i32 0, i32 0), i16 258 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.127, i32 0, i32 0), i16 259 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i16 260 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i16 261 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.130, i32 0, i32 0), i16 262 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), i16 263 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i16 264 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.133, i32 0, i32 0), i16 265 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.134, i32 0, i32 0), i16 266 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.135, i32 0, i32 0), i16 267 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i16 268 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), i16 269 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), i16 270 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i16 271 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0), i16 272 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), i16 273 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i16 274 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.143, i32 0, i32 0), i16 275 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.144, i32 0, i32 0), i16 276 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i16 277 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0), i16 278 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i32 0, i32 0), i16 279 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.148, i32 0, i32 0), i16 280 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i16 281 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i32 0, i32 0), i16 282 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.151, i32 0, i32 0), i16 283 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.152, i32 0, i32 0), i16 284 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i32 0, i32 0), i16 285 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i16 286 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i16 287 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0), i16 288 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.157, i32 0, i32 0), i16 289 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.158, i32 0, i32 0), i16 290 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i16 291 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i16 292 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.161, i32 0, i32 0), i16 293 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i32 0, i32 0), i16 294 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.163, i32 0, i32 0), i16 295 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i32 0, i32 0), i16 296 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.165, i32 0, i32 0), i16 297 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.166, i32 0, i32 0), i16 298 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0), i16 299 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i32 0, i32 0), i16 300 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i16 301 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.170, i32 0, i32 0), i16 302 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i32 0, i32 0), i16 303 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.172, i32 0, i32 0), i16 304 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i16 305 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0), i16 306 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i32 0, i32 0), i16 307 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.176, i32 0, i32 0), i16 308 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i16 309 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.178, i32 0, i32 0), i16 310 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.179, i32 0, i32 0), i16 311 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.180, i32 0, i32 0), i16 312 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.181, i32 0, i32 0), i16 313 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i32 0, i32 0), i16 314 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.183, i32 0, i32 0), i16 315 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.184, i32 0, i32 0), i16 316 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), i16 317 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.186, i32 0, i32 0), i16 318 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.187, i32 0, i32 0), i16 319 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), i16 320 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i16 321 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i32 0, i32 0), i16 322 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i32 0, i32 0), i16 323 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0), i16 324 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i16 325 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i16 326 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.195, i32 0, i32 0), i16 327 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), i16 328 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.197, i32 0, i32 0), i16 329 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.198, i32 0, i32 0), i16 330 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.199, i32 0, i32 0), i16 331 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), i16 332 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.201, i32 0, i32 0), i16 333 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.202, i32 0, i32 0), i16 334 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.203, i32 0, i32 0), i16 335 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i16 336 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.205, i32 0, i32 0), i16 337 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), i16 338 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.207, i32 0, i32 0), i16 339 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.208, i32 0, i32 0), i16 340 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i16 341 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.210, i32 0, i32 0), i16 342 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.211, i32 0, i32 0), i16 343 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.212, i32 0, i32 0), i16 344 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.213, i32 0, i32 0), i16 345 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.214, i32 0, i32 0), i16 346 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.215, i32 0, i32 0), i16 347 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.216, i32 0, i32 0), i16 348 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i32 0, i32 0), i16 349 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.218, i32 0, i32 0), i16 350 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.219, i32 0, i32 0), i16 351 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.220, i32 0, i32 0), i16 352 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0), i16 353 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i32 0, i32 0), i16 354 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i32 0, i32 0), i16 355 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.224, i32 0, i32 0), i16 356 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.225, i32 0, i32 0), i16 357 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i32 0, i32 0), i16 358 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.227, i32 0, i32 0), i16 359 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0), i16 360 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i16 361 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0), i16 362 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i16 363 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i32 0, i32 0), i16 364 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0), i16 365 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.234, i32 0, i32 0), i16 366 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.235, i32 0, i32 0), i16 367 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.236, i32 0, i32 0), i16 368 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.237, i32 0, i32 0), i16 369 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.238, i32 0, i32 0), i16 370 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.239, i32 0, i32 0), i16 371 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.240, i32 0, i32 0), i16 372 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0), i16 373 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i32 0, i32 0), i16 374 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.243, i32 0, i32 0), i16 375 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.244, i32 0, i32 0), i16 376 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.245, i32 0, i32 0), i16 377 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i32 0, i32 0), i16 378 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.247, i32 0, i32 0), i16 379 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i16 380 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i32 0, i32 0), i16 381 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i32 0, i32 0), i16 382 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.251, i32 0, i32 0), i16 383 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.252, i32 0, i32 0), i16 384 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.253, i32 0, i32 0), i16 385 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0), i16 386 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i32 0, i32 0), i16 387 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.256, i32 0, i32 0), i16 388 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.257, i32 0, i32 0), i16 389 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.258, i32 0, i32 0), i16 390 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.259, i32 0, i32 0), i16 391 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i16 392 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.261, i32 0, i32 0), i16 393 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.262, i32 0, i32 0), i16 394 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.263, i32 0, i32 0), i16 395 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.264, i32 0, i32 0), i16 396 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.265, i32 0, i32 0), i16 397 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.266, i32 0, i32 0), i16 398 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.267, i32 0, i32 0), i16 399 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.268, i32 0, i32 0), i16 400 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.269, i32 0, i32 0), i16 401 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.270, i32 0, i32 0), i16 402 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.271, i32 0, i32 0), i16 403 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.272, i32 0, i32 0), i16 404 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.273, i32 0, i32 0), i16 405 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.274, i32 0, i32 0), i16 406 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i32 0, i32 0), i16 407 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.276, i32 0, i32 0), i16 408 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.277, i32 0, i32 0), i16 409 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.278, i32 0, i32 0), i16 410 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.279, i32 0, i32 0), i16 411 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.280, i32 0, i32 0), i16 412 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i16 413 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i32 0, i32 0), i16 414 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i32 0, i32 0), i16 415 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.284, i32 0, i32 0), i16 416 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.285, i32 0, i32 0), i16 417 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.286, i32 0, i32 0), i16 418 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.287, i32 0, i32 0), i16 419 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.288, i32 0, i32 0), i16 420 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.289, i32 0, i32 0), i16 421 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.290, i32 0, i32 0), i16 422 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.291, i32 0, i32 0), i16 423 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.292, i32 0, i32 0), i16 424 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.293, i32 0, i32 0), i16 425 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0), i16 426 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.295, i32 0, i32 0), i16 427 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.296, i32 0, i32 0), i16 428 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.297, i32 0, i32 0), i16 429 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.298, i32 0, i32 0), i16 430 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.299, i32 0, i32 0), i16 431 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.300, i32 0, i32 0), i16 432 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.301, i32 0, i32 0), i16 433 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.302, i32 0, i32 0), i16 434 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.303, i32 0, i32 0), i16 435 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.304, i32 0, i32 0), i16 436 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.305, i32 0, i32 0), i16 437 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.306, i32 0, i32 0), i16 438 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.307, i32 0, i32 0), i16 439 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0), i16 440 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.309, i32 0, i32 0), i16 441 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.310, i32 0, i32 0), i16 442 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.311, i32 0, i32 0), i16 443 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), i16 444 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.313, i32 0, i32 0), i16 445 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.314, i32 0, i32 0), i16 446 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.315, i32 0, i32 0), i16 447 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.316, i32 0, i32 0), i16 448 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.317, i32 0, i32 0), i16 449 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.318, i32 0, i32 0), i16 450 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.319, i32 0, i32 0), i16 451 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.320, i32 0, i32 0), i16 452 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.321, i32 0, i32 0), i16 453 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.322, i32 0, i32 0), i16 454 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.323, i32 0, i32 0), i16 455 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.324, i32 0, i32 0), i16 456 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.325, i32 0, i32 0), i16 457 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.326, i32 0, i32 0), i16 458 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.327, i32 0, i32 0), i16 459 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.328, i32 0, i32 0), i16 460 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i32 0, i32 0), i16 461 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.330, i32 0, i32 0), i16 462 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i32 0, i32 0), i16 463 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i32 0, i32 0), i16 464 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.333, i32 0, i32 0), i16 465 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i32 0, i32 0), i16 466 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.335, i32 0, i32 0), i16 467 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.336, i32 0, i32 0), i16 468 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.337, i32 0, i32 0), i16 469 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.338, i32 0, i32 0), i16 470 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.339, i32 0, i32 0), i16 471 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.340, i32 0, i32 0), i16 472 }, %"struct.v8::internal::Heap::ConstantStringTable" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.341, i32 0, i32 0), i16 473 }], align 16
@_ZN2v88internal4Heap12struct_tableE = hidden local_unnamed_addr constant [47 x %"struct.v8::internal::Heap::StructTable"] [%"struct.v8::internal::Heap::StructTable" { i16 76, i32 24, i16 523 }, %"struct.v8::internal::Heap::StructTable" { i16 77, i32 24, i16 524 }, %"struct.v8::internal::Heap::StructTable" { i16 78, i32 12, i16 525 }, %"struct.v8::internal::Heap::StructTable" { i16 79, i32 12, i16 526 }, %"struct.v8::internal::Heap::StructTable" { i16 80, i32 20, i16 527 }, %"struct.v8::internal::Heap::StructTable" { i16 83, i32 56, i16 528 }, %"struct.v8::internal::Heap::StructTable" { i16 84, i32 32, i16 529 }, %"struct.v8::internal::Heap::StructTable" { i16 85, i32 20, i16 530 }, %"struct.v8::internal::Heap::StructTable" { i16 86, i32 32, i16 531 }, %"struct.v8::internal::Heap::StructTable" { i16 87, i32 12, i16 532 }, %"struct.v8::internal::Heap::StructTable" { i16 88, i32 8, i16 533 }, %"struct.v8::internal::Heap::StructTable" { i16 89, i32 8, i16 534 }, %"struct.v8::internal::Heap::StructTable" { i16 91, i32 12, i16 535 }, %"struct.v8::internal::Heap::StructTable" { i16 92, i32 16, i16 536 }, %"struct.v8::internal::Heap::StructTable" { i16 93, i32 20, i16 537 }, %"struct.v8::internal::Heap::StructTable" { i16 94, i32 12, i16 538 }, %"struct.v8::internal::Heap::StructTable" { i16 95, i32 12, i16 539 }, %"struct.v8::internal::Heap::StructTable" { i16 96, i32 12, i16 540 }, %"struct.v8::internal::Heap::StructTable" { i16 97, i32 16, i16 541 }, %"struct.v8::internal::Heap::StructTable" { i16 99, i32 12, i16 542 }, %"struct.v8::internal::Heap::StructTable" { i16 100, i32 36, i16 543 }, %"struct.v8::internal::Heap::StructTable" { i16 101, i32 12, i16 544 }, %"struct.v8::internal::Heap::StructTable" { i16 103, i32 40, i16 545 }, %"struct.v8::internal::Heap::StructTable" { i16 104, i32 40, i16 546 }, %"struct.v8::internal::Heap::StructTable" { i16 105, i32 12, i16 547 }, %"struct.v8::internal::Heap::StructTable" { i16 106, i32 16, i16 548 }, %"struct.v8::internal::Heap::StructTable" { i16 107, i32 16, i16 549 }, %"struct.v8::internal::Heap::StructTable" { i16 108, i32 24, i16 550 }, %"struct.v8::internal::Heap::StructTable" { i16 109, i32 20, i16 551 }, %"struct.v8::internal::Heap::StructTable" { i16 110, i32 28, i16 552 }, %"struct.v8::internal::Heap::StructTable" { i16 111, i32 16, i16 553 }, %"struct.v8::internal::Heap::StructTable" { i16 112, i32 64, i16 554 }, %"struct.v8::internal::Heap::StructTable" { i16 113, i32 32, i16 555 }, %"struct.v8::internal::Heap::StructTable" { i16 114, i32 28, i16 556 }, %"struct.v8::internal::Heap::StructTable" { i16 115, i32 12, i16 557 }, %"struct.v8::internal::Heap::StructTable" { i16 116, i32 12, i16 558 }, %"struct.v8::internal::Heap::StructTable" { i16 117, i32 8, i16 559 }, %"struct.v8::internal::Heap::StructTable" { i16 118, i32 32, i16 560 }, %"struct.v8::internal::Heap::StructTable" { i16 90, i32 28, i16 578 }, %"struct.v8::internal::Heap::StructTable" { i16 90, i32 24, i16 579 }, %"struct.v8::internal::Heap::StructTable" { i16 81, i32 16, i16 580 }, %"struct.v8::internal::Heap::StructTable" { i16 81, i32 20, i16 581 }, %"struct.v8::internal::Heap::StructTable" { i16 81, i32 24, i16 582 }, %"struct.v8::internal::Heap::StructTable" { i16 82, i32 12, i16 583 }, %"struct.v8::internal::Heap::StructTable" { i16 82, i32 16, i16 584 }, %"struct.v8::internal::Heap::StructTable" { i16 82, i32 20, i16 585 }, %"struct.v8::internal::Heap::StructTable" { i16 82, i32 24, i16 586 }], align 16
@.str.342 = private unnamed_addr constant [5 x i8] c"hole\00", align 1
@.str.343 = private unnamed_addr constant [14 x i8] c"uninitialized\00", align 1
@.str.344 = private unnamed_addr constant [17 x i8] c"arguments_marker\00", align 1
@.str.345 = private unnamed_addr constant [22 x i8] c"termination_exception\00", align 1
@.str.346 = private unnamed_addr constant [10 x i8] c"exception\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"optimized_out\00", align 1
@.str.348 = private unnamed_addr constant [15 x i8] c"stale_register\00", align 1
@.str.349 = private unnamed_addr constant [21 x i8] c"Symbol.asyncIterator\00", align 1
@.str.350 = private unnamed_addr constant [16 x i8] c"Symbol.iterator\00", align 1
@.str.351 = private unnamed_addr constant [28 x i8] c"IntlLegacyConstructedSymbol\00", align 1
@.str.352 = private unnamed_addr constant [16 x i8] c"Symbol.matchAll\00", align 1
@.str.353 = private unnamed_addr constant [13 x i8] c"Symbol.match\00", align 1
@.str.354 = private unnamed_addr constant [15 x i8] c"Symbol.replace\00", align 1
@.str.355 = private unnamed_addr constant [14 x i8] c"Symbol.search\00", align 1
@.str.356 = private unnamed_addr constant [15 x i8] c"Symbol.species\00", align 1
@.str.357 = private unnamed_addr constant [13 x i8] c"Symbol.split\00", align 1
@.str.358 = private unnamed_addr constant [19 x i8] c"Symbol.toPrimitive\00", align 1
@.str.359 = private unnamed_addr constant [19 x i8] c"Symbol.unscopables\00", align 1
@.str.360 = private unnamed_addr constant [19 x i8] c"Symbol.hasInstance\00", align 1
@.str.361 = private unnamed_addr constant [26 x i8] c"Symbol.isConcatSpreadable\00", align 1
@.str.362 = private unnamed_addr constant [19 x i8] c"Symbol.toStringTag\00", align 1
@.str.363 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal30FLAG_trace_allocations_originsE = external local_unnamed_addr global i8, align 1
@.str.364 = private unnamed_addr constant [11 x i8] c"!IsRetry()\00", align 1
@_ZN2v88internal23FLAG_fuzzer_gc_analysisE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal36FLAG_trace_allocation_stack_intervalE = external local_unnamed_addr global i32, align 4
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.365 = private unnamed_addr constant [16 x i8] c"!object.IsSmi()\00", align 1
@.str.366 = private unnamed_addr constant [30 x i8] c"IsAligned(value, kTaggedSize)\00", align 1
@.str.367 = private unnamed_addr constant [35 x i8] c"static_cast<unsigned>(value) < 256\00", align 1
@.str.368 = private unnamed_addr constant [32 x i8] c"static_cast<unsigned>(id) < 256\00", align 1
@.str.371 = private unnamed_addr constant [36 x i8] c"static_cast<unsigned>(value) <= 255\00", align 1
@.str.373 = private unnamed_addr constant [17 x i8] c"IsPrimitiveMap()\00", align 1
@.str.375 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal20SetupIsolateDelegate17SetupHeapInternalEPNS0_4HeapE(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2v88internal4Heap17CreateInitialMapsEv(%"class.v8::internal::Heap"* %0) #6
  br i1 %2, label %3, label %21

3:                                                ; preds = %1
  tail call void @_ZN2v88internal4Heap16CreateApiObjectsEv(%"class.v8::internal::Heap"* %0) #6
  tail call void @_ZN2v88internal4Heap20CreateInitialObjectsEv(%"class.v8::internal::Heap"* %0) #6
  tail call void @_ZN2v88internal4Heap33CreateInternalAccessorInfoObjectsEv(%"class.v8::internal::Heap"* %0) #6
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 51
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

8:                                                ; preds = %3
  %9 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 59, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %13, i64* %14 release, align 8
  %15 = load i64, i64* %12, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 60, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* %12, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 61, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 62, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %1, %8
  %22 = phi i1 [ true, %8 ], [ false, %1 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4Heap17CreateHeapObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2v88internal4Heap17CreateInitialMapsEv(%"class.v8::internal::Heap"* %0)
  br i1 %2, label %3, label %21

3:                                                ; preds = %1
  tail call void @_ZN2v88internal4Heap16CreateApiObjectsEv(%"class.v8::internal::Heap"* %0)
  tail call void @_ZN2v88internal4Heap20CreateInitialObjectsEv(%"class.v8::internal::Heap"* %0)
  tail call void @_ZN2v88internal4Heap33CreateInternalAccessorInfoObjectsEv(%"class.v8::internal::Heap"* %0)
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 51
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

8:                                                ; preds = %3
  %9 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 59, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %13, i64* %14 release, align 8
  %15 = load i64, i64* %12, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 60, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* %12, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 61, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* %12, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 62, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %1, %8
  %22 = phi i1 [ true, %8 ], [ false, %1 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4Heap17CreateInitialMapsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::DescriptorArray", align 8
  %3 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 172, i32 40)
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6363, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 10
  store i64 %3, i64* %10, align 8
  %11 = add i64 %3, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %3 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  %14 = and i64 %3, -262144
  %15 = or i64 %14, 8
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 262144
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %6
  %21 = or i64 %14, 16
  %22 = inttoptr i64 %21 to %"class.v8::internal::Heap"**
  %23 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %22, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %23, i64 %3, i64 0, i64 %3) #6
  br label %24

24:                                               ; preds = %6, %20
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 0
  %26 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 119, i32 0)
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %6363, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 12
  store i64 %26, i64* %30, align 8
  %31 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 159, i32 0)
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %6363, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 73
  store i64 %31, i64* %35, align 8
  %36 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 184, i32 0)
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %6363, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 74
  store i64 %36, i64* %40, align 8
  %41 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 119, i32 0)
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %6363, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 13
  store i64 %41, i64* %45, align 8
  %46 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 153, i32 0)
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %6363, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 562
  store i64 %46, i64* %50, align 8
  %51 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 67, i32 28)
  %52 = and i64 %51, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %6363, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 93
  store i64 %51, i64* %55, align 8
  %56 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 67, i32 28)
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %6363, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 95
  store i64 %56, i64* %60, align 8
  %61 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext 67, i32 28)
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %6363, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 94
  store i64 %61, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 123
  %67 = load i8, i8* %66, align 4, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %71 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %75, label %76, !prof !4

75:                                               ; preds = %69
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %71) #6
  br label %76

76:                                               ; preds = %75, %69, %64
  %77 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %78 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 31
  %79 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %80 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %79, i32 8, i32 0) #6
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %6363, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 0
  %85 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 1
  %87 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %88 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %85, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = add i64 %80, -1
  br label %94

91:                                               ; preds = %94, %83
  %92 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %106, label %102

94:                                               ; preds = %94, %89
  %95 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %85, %89 ], [ %100, %94 ]
  %96 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %95, align 8
  %97 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %96 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %98 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %97, align 8
  %99 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %98, align 8
  tail call void %99(%"class.v8::internal::HeapObjectAllocationTracker"* %96, i64 %90, i32 8) #6
  %100 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %95, i64 1
  %101 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %100, %87
  br i1 %101, label %91, label %94

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  br label %117

106:                                              ; preds = %91
  %107 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %117

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 8
  %113 = urem i32 %112, %107
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %116, i32 0) #6
  br label %117

117:                                              ; preds = %115, %109, %106, %102
  %118 = load i64, i64* %30, align 8
  %119 = add i64 %80, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = trunc i64 %118 to i32
  store atomic volatile i32 %121, i32* %120 monotonic, align 4
  %122 = add i64 %80, 3
  %123 = inttoptr i64 %122 to i32*
  store atomic volatile i32 0, i32* %123 monotonic, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 29
  store i64 %80, i64* %124, align 8
  %125 = load i8, i8* %66, align 4, !range !3
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %129 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %133, label %134, !prof !4

133:                                              ; preds = %127
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %129) #6
  br label %134

134:                                              ; preds = %133, %127, %117
  %135 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %136 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %137 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %136, i32 8, i32 0) #6
  %138 = and i64 %137, 1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %6363, label %140

140:                                              ; preds = %134
  %141 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %142 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %143 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = add i64 %137, -1
  br label %149

146:                                              ; preds = %149, %140
  %147 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %161, label %157

149:                                              ; preds = %149, %144
  %150 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %141, %144 ], [ %155, %149 ]
  %151 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %150, align 8
  %152 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %151 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %153 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %152, align 8
  %154 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %153, align 8
  tail call void %154(%"class.v8::internal::HeapObjectAllocationTracker"* %151, i64 %145, i32 8) #6
  %155 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %150, i64 1
  %156 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %155, %142
  br i1 %156, label %146, label %149

157:                                              ; preds = %146
  %158 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %159 = load i32, i32* %158, align 8
  %160 = add i32 %159, 1
  store i32 %160, i32* %158, align 8
  br label %172

161:                                              ; preds = %146
  %162 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %172

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %166 = load i32, i32* %165, align 8
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 8
  %168 = urem i32 %167, %162
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %171, i32 0) #6
  br label %172

172:                                              ; preds = %170, %164, %161, %157
  %173 = load i64, i64* %35, align 8
  %174 = add i64 %137, -1
  %175 = inttoptr i64 %174 to i32*
  %176 = trunc i64 %173 to i32
  store atomic volatile i32 %176, i32* %175 monotonic, align 4
  %177 = add i64 %137, 3
  %178 = inttoptr i64 %177 to i32*
  store atomic volatile i32 0, i32* %178 monotonic, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 119
  store i64 %137, i64* %179, align 8
  %180 = load i8, i8* %66, align 4, !range !3
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %172
  %183 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %184 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = icmp eq i32 %186, 2
  br i1 %187, label %188, label %189, !prof !4

188:                                              ; preds = %182
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %184) #6
  br label %189

189:                                              ; preds = %188, %182, %172
  %190 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %191 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %192 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %191, i32 12, i32 0) #6
  %193 = and i64 %192, 1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %6363, label %195

195:                                              ; preds = %189
  %196 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %197 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %198 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %196, %197
  br i1 %198, label %201, label %199

199:                                              ; preds = %195
  %200 = add i64 %192, -1
  br label %204

201:                                              ; preds = %204, %195
  %202 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %216, label %212

204:                                              ; preds = %204, %199
  %205 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %196, %199 ], [ %210, %204 ]
  %206 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %205, align 8
  %207 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %206 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %208 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %207, align 8
  %209 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %208, align 8
  tail call void %209(%"class.v8::internal::HeapObjectAllocationTracker"* %206, i64 %200, i32 12) #6
  %210 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %205, i64 1
  %211 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %210, %197
  br i1 %211, label %201, label %204

212:                                              ; preds = %201
  %213 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %214 = load i32, i32* %213, align 8
  %215 = add i32 %214, 1
  store i32 %215, i32* %213, align 8
  br label %227

216:                                              ; preds = %201
  %217 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %227

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %221 = load i32, i32* %220, align 8
  %222 = add i32 %221, 1
  store i32 %222, i32* %220, align 8
  %223 = urem i32 %222, %217
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %219
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %226, i32 0) #6
  br label %227

227:                                              ; preds = %225, %219, %216, %212
  %228 = load i64, i64* %40, align 8
  %229 = add i64 %192, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = trunc i64 %228 to i32
  store atomic volatile i32 %231, i32* %230 monotonic, align 4
  %232 = add i64 %192, 3
  %233 = inttoptr i64 %232 to i32*
  store atomic volatile i32 0, i32* %233 monotonic, align 4
  %234 = add i64 %192, 7
  %235 = inttoptr i64 %234 to i32*
  store atomic volatile i32 0, i32* %235 monotonic, align 4
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 120
  store i64 %192, i64* %236, align 8
  %237 = load i64, i64* %60, align 8
  %238 = add i64 %237, 3
  %239 = inttoptr i64 %238 to i8*
  %240 = load atomic i8, i8* %239 monotonic, align 1
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 2
  %243 = load i8, i8* %66, align 4, !range !3
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %252, label %245

245:                                              ; preds = %227
  %246 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %247 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = icmp eq i32 %249, 2
  br i1 %250, label %251, label %252, !prof !4

251:                                              ; preds = %245
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %247) #6
  br label %252

252:                                              ; preds = %251, %245, %227
  %253 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %254 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %255 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %254, i32 %242, i32 0) #6
  %256 = and i64 %255, 1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %6363, label %258

258:                                              ; preds = %252
  %259 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %260 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %261 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %259, %260
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = add i64 %255, -1
  br label %267

264:                                              ; preds = %267, %258
  %265 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %279, label %275

267:                                              ; preds = %267, %262
  %268 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %259, %262 ], [ %273, %267 ]
  %269 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %268, align 8
  %270 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %269 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %271 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %270, align 8
  %272 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %271, align 8
  tail call void %272(%"class.v8::internal::HeapObjectAllocationTracker"* %269, i64 %263, i32 %242) #6
  %273 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %268, i64 1
  %274 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %273, %260
  br i1 %274, label %264, label %267

275:                                              ; preds = %264
  %276 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %277 = load i32, i32* %276, align 8
  %278 = add i32 %277, 1
  store i32 %278, i32* %276, align 8
  br label %290

279:                                              ; preds = %264
  %280 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %290

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %284 = load i32, i32* %283, align 8
  %285 = add i32 %284, 1
  store i32 %285, i32* %283, align 8
  %286 = urem i32 %285, %280
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %282
  %289 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %289, i32 0) #6
  br label %290

290:                                              ; preds = %288, %282, %279, %275
  %291 = load i64, i64* %60, align 8
  %292 = add i64 %255, -1
  %293 = inttoptr i64 %292 to i32*
  %294 = trunc i64 %291 to i32
  store atomic volatile i32 %294, i32* %293 monotonic, align 4
  %295 = and i64 %291, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %308, label %297

297:                                              ; preds = %290
  %298 = and i64 %255, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 262144
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %297
  %305 = or i64 %298, 16
  %306 = inttoptr i64 %305 to %"class.v8::internal::Heap"**
  %307 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %306, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %307, i64 %255, i64 0, i64 %291) #6
  br label %308

308:                                              ; preds = %290, %297, %304
  %309 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 6
  store i64 %255, i64* %309, align 8
  %310 = add i64 %255, 23
  %311 = inttoptr i64 %310 to i32*
  store atomic volatile i32 6, i32* %311 monotonic, align 4
  %312 = load i64, i64* %55, align 8
  %313 = add i64 %312, 3
  %314 = inttoptr i64 %313 to i8*
  %315 = load atomic i8, i8* %314 monotonic, align 1
  %316 = zext i8 %315 to i32
  %317 = shl nuw nsw i32 %316, 2
  %318 = load i8, i8* %66, align 4, !range !3
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %327, label %320

320:                                              ; preds = %308
  %321 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %322 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = icmp eq i32 %324, 2
  br i1 %325, label %326, label %327, !prof !4

326:                                              ; preds = %320
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %322) #6
  br label %327

327:                                              ; preds = %326, %320, %308
  %328 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %329 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %330 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %329, i32 %317, i32 0) #6
  %331 = and i64 %330, 1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %6363, label %333

333:                                              ; preds = %327
  %334 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %335 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %336 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %334, %335
  br i1 %336, label %339, label %337

337:                                              ; preds = %333
  %338 = add i64 %330, -1
  br label %342

339:                                              ; preds = %342, %333
  %340 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %354, label %350

342:                                              ; preds = %342, %337
  %343 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %334, %337 ], [ %348, %342 ]
  %344 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %343, align 8
  %345 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %344 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %346 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %345, align 8
  %347 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %346, align 8
  tail call void %347(%"class.v8::internal::HeapObjectAllocationTracker"* %344, i64 %338, i32 %317) #6
  %348 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %343, i64 1
  %349 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %348, %335
  br i1 %349, label %339, label %342

350:                                              ; preds = %339
  %351 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %352 = load i32, i32* %351, align 8
  %353 = add i32 %352, 1
  store i32 %353, i32* %351, align 8
  br label %365

354:                                              ; preds = %339
  %355 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %356 = icmp sgt i32 %355, 0
  br i1 %356, label %357, label %365

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %359 = load i32, i32* %358, align 8
  %360 = add i32 %359, 1
  store i32 %360, i32* %358, align 8
  %361 = urem i32 %360, %355
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %357
  %364 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %364, i32 0) #6
  br label %365

365:                                              ; preds = %363, %357, %354, %350
  %366 = load i64, i64* %55, align 8
  %367 = add i64 %330, -1
  %368 = inttoptr i64 %367 to i32*
  %369 = trunc i64 %366 to i32
  store atomic volatile i32 %369, i32* %368 monotonic, align 4
  %370 = and i64 %366, 1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %383, label %372

372:                                              ; preds = %365
  %373 = and i64 %330, -262144
  %374 = or i64 %373, 8
  %375 = inttoptr i64 %374 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = and i64 %376, 262144
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %383, label %379

379:                                              ; preds = %372
  %380 = or i64 %373, 16
  %381 = inttoptr i64 %380 to %"class.v8::internal::Heap"**
  %382 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %381, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %382, i64 %330, i64 0, i64 %366) #6
  br label %383

383:                                              ; preds = %365, %372, %379
  %384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 4
  store i64 %330, i64* %384, align 8
  %385 = add i64 %330, 23
  %386 = inttoptr i64 %385 to i32*
  store atomic volatile i32 10, i32* %386 monotonic, align 4
  %387 = load i64, i64* %65, align 8
  %388 = add i64 %387, 3
  %389 = inttoptr i64 %388 to i8*
  %390 = load atomic i8, i8* %389 monotonic, align 1
  %391 = zext i8 %390 to i32
  %392 = shl nuw nsw i32 %391, 2
  %393 = load i8, i8* %66, align 4, !range !3
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %402, label %395

395:                                              ; preds = %383
  %396 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %397 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = icmp eq i32 %399, 2
  br i1 %400, label %401, label %402, !prof !4

401:                                              ; preds = %395
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %397) #6
  br label %402

402:                                              ; preds = %401, %395, %383
  %403 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %404 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %405 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %404, i32 %392, i32 0) #6
  %406 = and i64 %405, 1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %6363, label %408

408:                                              ; preds = %402
  %409 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %410 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %411 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %409, %410
  br i1 %411, label %414, label %412

412:                                              ; preds = %408
  %413 = add i64 %405, -1
  br label %417

414:                                              ; preds = %417, %408
  %415 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %416 = icmp eq i8 %415, 0
  br i1 %416, label %429, label %425

417:                                              ; preds = %417, %412
  %418 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %409, %412 ], [ %423, %417 ]
  %419 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %418, align 8
  %420 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %419 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %421 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %420, align 8
  %422 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %421, align 8
  tail call void %422(%"class.v8::internal::HeapObjectAllocationTracker"* %419, i64 %413, i32 %392) #6
  %423 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %418, i64 1
  %424 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %423, %410
  br i1 %424, label %414, label %417

425:                                              ; preds = %414
  %426 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %427 = load i32, i32* %426, align 8
  %428 = add i32 %427, 1
  store i32 %428, i32* %426, align 8
  br label %440

429:                                              ; preds = %414
  %430 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %431 = icmp sgt i32 %430, 0
  br i1 %431, label %432, label %440

432:                                              ; preds = %429
  %433 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %434 = load i32, i32* %433, align 8
  %435 = add i32 %434, 1
  store i32 %435, i32* %433, align 8
  %436 = urem i32 %435, %430
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %440

438:                                              ; preds = %432
  %439 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %439, i32 0) #6
  br label %440

440:                                              ; preds = %438, %432, %429, %425
  %441 = load i64, i64* %65, align 8
  %442 = add i64 %405, -1
  %443 = inttoptr i64 %442 to i32*
  %444 = trunc i64 %441 to i32
  store atomic volatile i32 %444, i32* %443 monotonic, align 4
  %445 = and i64 %441, 1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %458, label %447

447:                                              ; preds = %440
  %448 = and i64 %405, -262144
  %449 = or i64 %448, 8
  %450 = inttoptr i64 %449 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = and i64 %451, 262144
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %458, label %454

454:                                              ; preds = %447
  %455 = or i64 %448, 16
  %456 = inttoptr i64 %455 to %"class.v8::internal::Heap"**
  %457 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %456, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %457, i64 %405, i64 0, i64 %441) #6
  br label %458

458:                                              ; preds = %440, %447, %454
  %459 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 5
  store i64 %405, i64* %459, align 8
  %460 = add i64 %405, 23
  %461 = inttoptr i64 %460 to i32*
  store atomic volatile i32 4, i32* %461 monotonic, align 4
  %462 = load i64, i64* %309, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 32
  store i64 %462, i64* %463, align 8
  br label %464

464:                                              ; preds = %473, %458
  %465 = phi i64 [ 0, %458 ], [ %478, %473 ]
  %466 = getelementptr inbounds [47 x %"struct.v8::internal::Heap::StructTable"], [47 x %"struct.v8::internal::Heap::StructTable"]* @_ZN2v88internal4Heap12struct_tableE, i64 0, i64 %465, i32 0
  %467 = load i16, i16* %466, align 4
  %468 = getelementptr inbounds [47 x %"struct.v8::internal::Heap::StructTable"], [47 x %"struct.v8::internal::Heap::StructTable"]* @_ZN2v88internal4Heap12struct_tableE, i64 0, i64 %465, i32 1
  %469 = load i32, i32* %468, align 4
  %470 = tail call i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"* %0, i16 zeroext %467, i32 %469)
  %471 = and i64 %470, 1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %6363, label %473

473:                                              ; preds = %464
  %474 = getelementptr inbounds [47 x %"struct.v8::internal::Heap::StructTable"], [47 x %"struct.v8::internal::Heap::StructTable"]* @_ZN2v88internal4Heap12struct_tableE, i64 0, i64 %465, i32 2
  %475 = load i16, i16* %474, align 4
  %476 = zext i16 %475 to i64
  %477 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 %476
  store i64 %470, i64* %477, align 8
  %478 = add nuw nsw i64 %465, 1
  %479 = icmp eq i64 %478, 47
  br i1 %479, label %480, label %464

480:                                              ; preds = %473
  %481 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 544
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 3
  %484 = inttoptr i64 %483 to i8*
  %485 = load atomic i8, i8* %484 monotonic, align 1
  %486 = zext i8 %485 to i32
  %487 = shl nuw nsw i32 %486, 2
  %488 = load i8, i8* %66, align 4, !range !3
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %497, label %490

490:                                              ; preds = %480
  %491 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %492 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %491, align 8
  %493 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %492, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = icmp eq i32 %494, 2
  br i1 %495, label %496, label %497, !prof !4

496:                                              ; preds = %490
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %492) #6
  br label %497

497:                                              ; preds = %496, %490, %480
  %498 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %499 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %500 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %499, i32 %487, i32 0) #6
  %501 = and i64 %500, 1
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %6363, label %503

503:                                              ; preds = %497
  %504 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %505 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %506 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %504, %505
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = add i64 %500, -1
  br label %512

509:                                              ; preds = %512, %503
  %510 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %524, label %520

512:                                              ; preds = %512, %507
  %513 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %504, %507 ], [ %518, %512 ]
  %514 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %513, align 8
  %515 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %514 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %516 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %515, align 8
  %517 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %516, align 8
  tail call void %517(%"class.v8::internal::HeapObjectAllocationTracker"* %514, i64 %508, i32 %487) #6
  %518 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %513, i64 1
  %519 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %518, %505
  br i1 %519, label %509, label %512

520:                                              ; preds = %509
  %521 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %522 = load i32, i32* %521, align 8
  %523 = add i32 %522, 1
  store i32 %523, i32* %521, align 8
  br label %535

524:                                              ; preds = %509
  %525 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %526 = icmp sgt i32 %525, 0
  br i1 %526, label %527, label %535

527:                                              ; preds = %524
  %528 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %529 = load i32, i32* %528, align 8
  %530 = add i32 %529, 1
  store i32 %530, i32* %528, align 8
  %531 = urem i32 %530, %525
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %527
  %534 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %534, i32 0) #6
  br label %535

535:                                              ; preds = %533, %527, %524, %520
  %536 = load i64, i64* %481, align 8
  %537 = add i64 %500, -1
  %538 = inttoptr i64 %537 to i32*
  %539 = trunc i64 %536 to i32
  store atomic volatile i32 %539, i32* %538 monotonic, align 4
  %540 = and i64 %536, 1
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %553, label %542

542:                                              ; preds = %535
  %543 = and i64 %500, -262144
  %544 = or i64 %543, 8
  %545 = inttoptr i64 %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = and i64 %546, 262144
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %553, label %549

549:                                              ; preds = %542
  %550 = or i64 %543, 16
  %551 = inttoptr i64 %550 to %"class.v8::internal::Heap"**
  %552 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %551, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %552, i64 %500, i64 0, i64 %536) #6
  br label %553

553:                                              ; preds = %535, %542, %549
  %554 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 105
  store i64 %500, i64* %554, align 8
  %555 = load i64, i64* %124, align 8
  %556 = add i64 %500, 3
  %557 = inttoptr i64 %556 to i32*
  %558 = trunc i64 %555 to i32
  store atomic volatile i32 %558, i32* %557 monotonic, align 4
  %559 = and i64 %555, 1
  %560 = icmp eq i64 %559, 0
  br i1 %560, label %572, label %561

561:                                              ; preds = %553
  %562 = and i64 %500, -262144
  %563 = or i64 %562, 8
  %564 = inttoptr i64 %563 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = and i64 %565, 262144
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %572, label %568

568:                                              ; preds = %561
  %569 = or i64 %562, 16
  %570 = inttoptr i64 %569 to %"class.v8::internal::Heap"**
  %571 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %570, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %571, i64 %500, i64 %556, i64 %555) #6
  br label %572

572:                                              ; preds = %568, %561, %553
  %573 = and i64 %555, -262144
  %574 = or i64 %573, 8
  %575 = inttoptr i64 %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = and i64 %576, 24
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %587, label %579

579:                                              ; preds = %572
  %580 = and i64 %500, -262144
  %581 = or i64 %580, 8
  %582 = inttoptr i64 %581 to i64*
  %583 = load i64, i64* %582, align 8
  %584 = and i64 %583, 24
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %579
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %500, i64 %556, i64 %555) #6
  br label %587

587:                                              ; preds = %572, %579, %586
  %588 = load i64, i64* %124, align 8
  %589 = add i64 %500, 7
  %590 = inttoptr i64 %589 to i32*
  %591 = trunc i64 %588 to i32
  store atomic volatile i32 %591, i32* %590 monotonic, align 4
  %592 = and i64 %588, 1
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %587
  %595 = and i64 %500, -262144
  %596 = or i64 %595, 8
  %597 = inttoptr i64 %596 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = and i64 %598, 262144
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %605, label %601

601:                                              ; preds = %594
  %602 = or i64 %595, 16
  %603 = inttoptr i64 %602 to %"class.v8::internal::Heap"**
  %604 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %603, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %604, i64 %500, i64 %589, i64 %588) #6
  br label %605

605:                                              ; preds = %601, %594, %587
  %606 = and i64 %588, -262144
  %607 = or i64 %606, 8
  %608 = inttoptr i64 %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = and i64 %609, 24
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %620, label %612

612:                                              ; preds = %605
  %613 = and i64 %500, -262144
  %614 = or i64 %613, 8
  %615 = inttoptr i64 %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = and i64 %616, 24
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %612
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %500, i64 %589, i64 %588) #6
  br label %620

620:                                              ; preds = %605, %612, %619
  %621 = load i8, i8* %66, align 4, !range !3
  %622 = icmp eq i8 %621, 0
  br i1 %622, label %630, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %625 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %624, align 8
  %626 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %625, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = icmp eq i32 %627, 2
  br i1 %628, label %629, label %630, !prof !4

629:                                              ; preds = %623
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %625) #6
  br label %630

630:                                              ; preds = %629, %623, %620
  %631 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %632 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %633 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %632, i32 16, i32 0) #6
  %634 = and i64 %633, 1
  %635 = icmp eq i64 %634, 0
  br i1 %635, label %6363, label %636

636:                                              ; preds = %630
  %637 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %638 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %639 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %637, %638
  br i1 %639, label %642, label %640

640:                                              ; preds = %636
  %641 = add i64 %633, -1
  br label %645

642:                                              ; preds = %645, %636
  %643 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %644 = icmp eq i8 %643, 0
  br i1 %644, label %657, label %653

645:                                              ; preds = %645, %640
  %646 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %637, %640 ], [ %651, %645 ]
  %647 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %646, align 8
  %648 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %647 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %649 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %648, align 8
  %650 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %649, align 8
  tail call void %650(%"class.v8::internal::HeapObjectAllocationTracker"* %647, i64 %641, i32 16) #6
  %651 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %646, i64 1
  %652 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %651, %638
  br i1 %652, label %642, label %645

653:                                              ; preds = %642
  %654 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %655 = load i32, i32* %654, align 8
  %656 = add i32 %655, 1
  store i32 %656, i32* %654, align 8
  br label %668

657:                                              ; preds = %642
  %658 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %659 = icmp sgt i32 %658, 0
  br i1 %659, label %660, label %668

660:                                              ; preds = %657
  %661 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %662 = load i32, i32* %661, align 8
  %663 = add i32 %662, 1
  store i32 %663, i32* %661, align 8
  %664 = urem i32 %663, %658
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %668

666:                                              ; preds = %660
  %667 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %667, i32 0) #6
  br label %668

668:                                              ; preds = %666, %660, %657, %653
  %669 = load i64, i64* %50, align 8
  %670 = add i64 %633, -1
  %671 = inttoptr i64 %670 to i32*
  %672 = trunc i64 %669 to i32
  store atomic volatile i32 %672, i32* %671 monotonic, align 4
  %673 = bitcast %"class.v8::internal::DescriptorArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %673) #6
  %674 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %633, i64* %674, align 8
  %675 = load i64, i64* %554, align 8
  %676 = load i64, i64* %384, align 8
  call void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"* nonnull %2, i64 %675, i64 %676, i32 0, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %673) #6
  %677 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 30
  store i64 %633, i64* %677, align 8
  %678 = load i64, i64* %10, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %678)
  %679 = load i64, i64* %30, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %679)
  %680 = load i64, i64* %35, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %680)
  %681 = load i64, i64* %40, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %681)
  %682 = load i64, i64* %45, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %682)
  %683 = load i64, i64* %50, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %683)
  %684 = load i64, i64* %55, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %684)
  %685 = load i64, i64* %55, align 8
  %686 = add i64 %685, 9
  %687 = inttoptr i64 %686 to i8*
  %688 = load i8, i8* %687, align 1
  %689 = or i8 %688, 16
  store atomic volatile i8 %689, i8* %687 monotonic, align 1
  %690 = load i64, i64* %60, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %690)
  %691 = load i64, i64* %60, align 8
  %692 = add i64 %691, 9
  %693 = inttoptr i64 %692 to i8*
  %694 = load i8, i8* %693, align 1
  %695 = or i8 %694, 16
  store atomic volatile i8 %695, i8* %693 monotonic, align 1
  %696 = load i64, i64* %65, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %696)
  br label %759

697:                                              ; preds = %759
  %698 = load i8, i8* %66, align 4, !range !3
  %699 = icmp eq i8 %698, 0
  br i1 %699, label %707, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %702 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %701, align 8
  %703 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %704 = load atomic i32, i32* %703 monotonic, align 4
  %705 = icmp eq i32 %704, 2
  br i1 %705, label %706, label %707, !prof !4

706:                                              ; preds = %700
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %702) #6
  br label %707

707:                                              ; preds = %706, %700, %697
  %708 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %709 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %710 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %709, i32 40, i32 0) #6
  %711 = and i64 %710, 1
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %755, label %713

713:                                              ; preds = %707
  %714 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %715 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %716 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %714, %715
  br i1 %716, label %719, label %717

717:                                              ; preds = %713
  %718 = add i64 %710, -1
  br label %722

719:                                              ; preds = %722, %713
  %720 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %721 = icmp eq i8 %720, 0
  br i1 %721, label %734, label %730

722:                                              ; preds = %722, %717
  %723 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %714, %717 ], [ %728, %722 ]
  %724 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %723, align 8
  %725 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %724 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %726 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %725, align 8
  %727 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %726, align 8
  call void %727(%"class.v8::internal::HeapObjectAllocationTracker"* %724, i64 %718, i32 40) #6
  %728 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %723, i64 1
  %729 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %728, %715
  br i1 %729, label %719, label %722

730:                                              ; preds = %719
  %731 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %732 = load i32, i32* %731, align 8
  %733 = add i32 %732, 1
  store i32 %733, i32* %731, align 8
  br label %745

734:                                              ; preds = %719
  %735 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %737, label %745

737:                                              ; preds = %734
  %738 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %739 = load i32, i32* %738, align 8
  %740 = add i32 %739, 1
  store i32 %740, i32* %738, align 8
  %741 = urem i32 %740, %735
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %745

743:                                              ; preds = %737
  %744 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %744, i32 0) #6
  br label %745

745:                                              ; preds = %743, %737, %734, %730
  %746 = load i64, i64* %10, align 8
  %747 = add i64 %710, -1
  %748 = inttoptr i64 %747 to i32*
  %749 = trunc i64 %746 to i32
  store atomic volatile i32 %749, i32* %748 monotonic, align 4
  %750 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %751 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %750, i64 %710, i16 zeroext 178, i32 0, i8 zeroext 3, i32 0) #6
  %752 = and i64 %751, 1
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %754, label %755, !prof !4

754:                                              ; preds = %745
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

755:                                              ; preds = %707, %745
  %756 = phi i64 [ %751, %745 ], [ %710, %707 ]
  %757 = and i64 %756, 1
  %758 = icmp eq i64 %757, 0
  br i1 %758, label %6363, label %768

759:                                              ; preds = %759, %668
  %760 = phi i64 [ 0, %668 ], [ %766, %759 ]
  %761 = getelementptr inbounds [47 x %"struct.v8::internal::Heap::StructTable"], [47 x %"struct.v8::internal::Heap::StructTable"]* @_ZN2v88internal4Heap12struct_tableE, i64 0, i64 %760, i32 2
  %762 = load i16, i16* %761, align 4
  %763 = zext i16 %762 to i64
  %764 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 %763
  %765 = load i64, i64* %764, align 8
  call void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"* %0, i64 %765)
  %766 = add nuw nsw i64 %760, 1
  %767 = icmp eq i64 %766, 47
  br i1 %767, label %697, label %759

768:                                              ; preds = %755
  %769 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 18
  store i64 %756, i64* %769, align 8
  %770 = load i8, i8* %66, align 4, !range !3
  %771 = icmp eq i8 %770, 0
  br i1 %771, label %779, label %772

772:                                              ; preds = %768
  %773 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %774 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %773, align 8
  %775 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = icmp eq i32 %776, 2
  br i1 %777, label %778, label %779, !prof !4

778:                                              ; preds = %772
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %774) #6
  br label %779

779:                                              ; preds = %778, %772, %768
  %780 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %781 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %782 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %781, i32 40, i32 0) #6
  %783 = and i64 %782, 1
  %784 = icmp eq i64 %783, 0
  br i1 %784, label %827, label %785

785:                                              ; preds = %779
  %786 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %787 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %788 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %786, %787
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  %790 = add i64 %782, -1
  br label %794

791:                                              ; preds = %794, %785
  %792 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %793 = icmp eq i8 %792, 0
  br i1 %793, label %806, label %802

794:                                              ; preds = %794, %789
  %795 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %786, %789 ], [ %800, %794 ]
  %796 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %795, align 8
  %797 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %796 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %798 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %797, align 8
  %799 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %798, align 8
  call void %799(%"class.v8::internal::HeapObjectAllocationTracker"* %796, i64 %790, i32 40) #6
  %800 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %795, i64 1
  %801 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %800, %787
  br i1 %801, label %791, label %794

802:                                              ; preds = %791
  %803 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %804 = load i32, i32* %803, align 8
  %805 = add i32 %804, 1
  store i32 %805, i32* %803, align 8
  br label %817

806:                                              ; preds = %791
  %807 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %808 = icmp sgt i32 %807, 0
  br i1 %808, label %809, label %817

809:                                              ; preds = %806
  %810 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %811 = load i32, i32* %810, align 8
  %812 = add i32 %811, 1
  store i32 %812, i32* %810, align 8
  %813 = urem i32 %812, %807
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %815, label %817

815:                                              ; preds = %809
  %816 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %816, i32 0) #6
  br label %817

817:                                              ; preds = %815, %809, %806, %802
  %818 = load i64, i64* %10, align 8
  %819 = add i64 %782, -1
  %820 = inttoptr i64 %819 to i32*
  %821 = trunc i64 %818 to i32
  store atomic volatile i32 %821, i32* %820 monotonic, align 4
  %822 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %823 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %822, i64 %782, i16 zeroext 119, i32 0, i8 zeroext 3, i32 0) #6
  %824 = and i64 %823, 1
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %827, !prof !4

826:                                              ; preds = %817
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

827:                                              ; preds = %779, %817
  %828 = phi i64 [ %823, %817 ], [ %782, %779 ]
  %829 = and i64 %828, 1
  %830 = icmp eq i64 %829, 0
  br i1 %830, label %6363, label %831

831:                                              ; preds = %827
  %832 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 49
  store i64 %828, i64* %832, align 8
  %833 = load i8, i8* %66, align 4, !range !3
  %834 = icmp eq i8 %833, 0
  br i1 %834, label %842, label %835

835:                                              ; preds = %831
  %836 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %837 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %836, align 8
  %838 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %837, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %839 = load atomic i32, i32* %838 monotonic, align 4
  %840 = icmp eq i32 %839, 2
  br i1 %840, label %841, label %842, !prof !4

841:                                              ; preds = %835
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %837) #6
  br label %842

842:                                              ; preds = %841, %835, %831
  %843 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %844 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %845 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %844, i32 40, i32 0) #6
  %846 = and i64 %845, 1
  %847 = icmp eq i64 %846, 0
  br i1 %847, label %890, label %848

848:                                              ; preds = %842
  %849 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %850 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %851 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %849, %850
  br i1 %851, label %854, label %852

852:                                              ; preds = %848
  %853 = add i64 %845, -1
  br label %857

854:                                              ; preds = %857, %848
  %855 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %856 = icmp eq i8 %855, 0
  br i1 %856, label %869, label %865

857:                                              ; preds = %857, %852
  %858 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %849, %852 ], [ %863, %857 ]
  %859 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %858, align 8
  %860 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %859 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %861 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %860, align 8
  %862 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %861, align 8
  call void %862(%"class.v8::internal::HeapObjectAllocationTracker"* %859, i64 %853, i32 40) #6
  %863 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %858, i64 1
  %864 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %863, %850
  br i1 %864, label %854, label %857

865:                                              ; preds = %854
  %866 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %867 = load i32, i32* %866, align 8
  %868 = add i32 %867, 1
  store i32 %868, i32* %866, align 8
  br label %880

869:                                              ; preds = %854
  %870 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %871 = icmp sgt i32 %870, 0
  br i1 %871, label %872, label %880

872:                                              ; preds = %869
  %873 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %874 = load i32, i32* %873, align 8
  %875 = add i32 %874, 1
  store i32 %875, i32* %873, align 8
  %876 = urem i32 %875, %870
  %877 = icmp eq i32 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %872
  %879 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %879, i32 0) #6
  br label %880

880:                                              ; preds = %878, %872, %869, %865
  %881 = load i64, i64* %10, align 8
  %882 = add i64 %845, -1
  %883 = inttoptr i64 %882 to i32*
  %884 = trunc i64 %881 to i32
  store atomic volatile i32 %884, i32* %883 monotonic, align 4
  %885 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %886 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %885, i64 %845, i16 zeroext 129, i32 0, i8 zeroext 3, i32 0) #6
  %887 = and i64 %886, 1
  %888 = icmp eq i64 %887, 0
  br i1 %888, label %889, label %890, !prof !4

889:                                              ; preds = %880
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

890:                                              ; preds = %842, %880
  %891 = phi i64 [ %886, %880 ], [ %845, %842 ]
  %892 = and i64 %891, 1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %6363, label %894

894:                                              ; preds = %890
  %895 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 37
  store i64 %891, i64* %895, align 8
  %896 = load i8, i8* %66, align 4, !range !3
  %897 = icmp eq i8 %896, 0
  br i1 %897, label %905, label %898

898:                                              ; preds = %894
  %899 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %900 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %899, align 8
  %901 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %900, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %902 = load atomic i32, i32* %901 monotonic, align 4
  %903 = icmp eq i32 %902, 2
  br i1 %903, label %904, label %905, !prof !4

904:                                              ; preds = %898
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %900) #6
  br label %905

905:                                              ; preds = %904, %898, %894
  %906 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %907 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %908 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %907, i32 40, i32 0) #6
  %909 = and i64 %908, 1
  %910 = icmp eq i64 %909, 0
  br i1 %910, label %953, label %911

911:                                              ; preds = %905
  %912 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %913 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %914 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %912, %913
  br i1 %914, label %917, label %915

915:                                              ; preds = %911
  %916 = add i64 %908, -1
  br label %920

917:                                              ; preds = %920, %911
  %918 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %919 = icmp eq i8 %918, 0
  br i1 %919, label %932, label %928

920:                                              ; preds = %920, %915
  %921 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %912, %915 ], [ %926, %920 ]
  %922 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %921, align 8
  %923 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %922 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %924 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %923, align 8
  %925 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %924, align 8
  call void %925(%"class.v8::internal::HeapObjectAllocationTracker"* %922, i64 %916, i32 40) #6
  %926 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %921, i64 1
  %927 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %926, %913
  br i1 %927, label %917, label %920

928:                                              ; preds = %917
  %929 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %930 = load i32, i32* %929, align 8
  %931 = add i32 %930, 1
  store i32 %931, i32* %929, align 8
  br label %943

932:                                              ; preds = %917
  %933 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %934 = icmp sgt i32 %933, 0
  br i1 %934, label %935, label %943

935:                                              ; preds = %932
  %936 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %937 = load i32, i32* %936, align 8
  %938 = add i32 %937, 1
  store i32 %938, i32* %936, align 8
  %939 = urem i32 %938, %933
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %941, label %943

941:                                              ; preds = %935
  %942 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %942, i32 0) #6
  br label %943

943:                                              ; preds = %941, %935, %932, %928
  %944 = load i64, i64* %10, align 8
  %945 = add i64 %908, -1
  %946 = inttoptr i64 %945 to i32*
  %947 = trunc i64 %944 to i32
  store atomic volatile i32 %947, i32* %946 monotonic, align 4
  %948 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %949 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %948, i64 %908, i16 zeroext 167, i32 0, i8 zeroext 3, i32 0) #6
  %950 = and i64 %949, 1
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %952, label %953, !prof !4

952:                                              ; preds = %943
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

953:                                              ; preds = %905, %943
  %954 = phi i64 [ %949, %943 ], [ %908, %905 ]
  %955 = and i64 %954, 1
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %6363, label %957

957:                                              ; preds = %953
  %958 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 27
  store i64 %954, i64* %958, align 8
  %959 = load i8, i8* %66, align 4, !range !3
  %960 = icmp eq i8 %959, 0
  br i1 %960, label %968, label %961

961:                                              ; preds = %957
  %962 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %963 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %962, align 8
  %964 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %963, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %965 = load atomic i32, i32* %964 monotonic, align 4
  %966 = icmp eq i32 %965, 2
  br i1 %966, label %967, label %968, !prof !4

967:                                              ; preds = %961
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %963) #6
  br label %968

968:                                              ; preds = %967, %961, %957
  %969 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %970 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %971 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %970, i32 40, i32 0) #6
  %972 = and i64 %971, 1
  %973 = icmp eq i64 %972, 0
  br i1 %973, label %1016, label %974

974:                                              ; preds = %968
  %975 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %976 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %977 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %975, %976
  br i1 %977, label %980, label %978

978:                                              ; preds = %974
  %979 = add i64 %971, -1
  br label %983

980:                                              ; preds = %983, %974
  %981 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %982 = icmp eq i8 %981, 0
  br i1 %982, label %995, label %991

983:                                              ; preds = %983, %978
  %984 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %975, %978 ], [ %989, %983 ]
  %985 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %984, align 8
  %986 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %985 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %987 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %986, align 8
  %988 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %987, align 8
  call void %988(%"class.v8::internal::HeapObjectAllocationTracker"* %985, i64 %979, i32 40) #6
  %989 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %984, i64 1
  %990 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %989, %976
  br i1 %990, label %980, label %983

991:                                              ; preds = %980
  %992 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %993 = load i32, i32* %992, align 8
  %994 = add i32 %993, 1
  store i32 %994, i32* %992, align 8
  br label %1006

995:                                              ; preds = %980
  %996 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %997 = icmp sgt i32 %996, 0
  br i1 %997, label %998, label %1006

998:                                              ; preds = %995
  %999 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1000 = load i32, i32* %999, align 8
  %1001 = add i32 %1000, 1
  store i32 %1001, i32* %999, align 8
  %1002 = urem i32 %1001, %996
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1004, label %1006

1004:                                             ; preds = %998
  %1005 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1005, i32 0) #6
  br label %1006

1006:                                             ; preds = %1004, %998, %995, %991
  %1007 = load i64, i64* %10, align 8
  %1008 = add i64 %971, -1
  %1009 = inttoptr i64 %1008 to i32*
  %1010 = trunc i64 %1007 to i32
  store atomic volatile i32 %1010, i32* %1009 monotonic, align 4
  %1011 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1012 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1011, i64 %971, i16 zeroext 66, i32 12, i8 zeroext 3, i32 0) #6
  %1013 = and i64 %1012, 1
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1015, label %1016, !prof !4

1015:                                             ; preds = %1006
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1016:                                             ; preds = %968, %1006
  %1017 = phi i64 [ %1012, %1006 ], [ %971, %968 ]
  %1018 = and i64 %1017, 1
  %1019 = icmp eq i64 %1018, 0
  br i1 %1019, label %6363, label %1020

1020:                                             ; preds = %1016
  %1021 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 24
  store i64 %1017, i64* %1021, align 8
  %1022 = add i64 %1017, 7
  %1023 = inttoptr i64 %1022 to i16*
  %1024 = load atomic i16, i16* %1023 monotonic, align 2
  %1025 = icmp ult i16 %1024, 68
  br i1 %1025, label %1027, label %1026, !prof !2

1026:                                             ; preds = %1020
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.373, i64 0, i64 0)) #7
  unreachable

1027:                                             ; preds = %1020
  %1028 = add i64 %1017, 4
  %1029 = inttoptr i64 %1028 to i8*
  store atomic volatile i8 -116, i8* %1029 monotonic, align 1
  %1030 = load i8, i8* %66, align 4, !range !3
  %1031 = icmp eq i8 %1030, 0
  br i1 %1031, label %1039, label %1032

1032:                                             ; preds = %1027
  %1033 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1034 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1033, align 8
  %1035 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1034, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1036 = load atomic i32, i32* %1035 monotonic, align 4
  %1037 = icmp eq i32 %1036, 2
  br i1 %1037, label %1038, label %1039, !prof !4

1038:                                             ; preds = %1032
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1034) #6
  br label %1039

1039:                                             ; preds = %1038, %1032, %1027
  %1040 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1041 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1042 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1041, i32 40, i32 0) #6
  %1043 = and i64 %1042, 1
  %1044 = icmp eq i64 %1043, 0
  br i1 %1044, label %1087, label %1045

1045:                                             ; preds = %1039
  %1046 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1047 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1048 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1046, %1047
  br i1 %1048, label %1051, label %1049

1049:                                             ; preds = %1045
  %1050 = add i64 %1042, -1
  br label %1054

1051:                                             ; preds = %1054, %1045
  %1052 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1053 = icmp eq i8 %1052, 0
  br i1 %1053, label %1066, label %1062

1054:                                             ; preds = %1054, %1049
  %1055 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1046, %1049 ], [ %1060, %1054 ]
  %1056 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1055, align 8
  %1057 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1056 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1058 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1057, align 8
  %1059 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1058, align 8
  call void %1059(%"class.v8::internal::HeapObjectAllocationTracker"* %1056, i64 %1050, i32 40) #6
  %1060 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1055, i64 1
  %1061 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1060, %1047
  br i1 %1061, label %1051, label %1054

1062:                                             ; preds = %1051
  %1063 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1064 = load i32, i32* %1063, align 8
  %1065 = add i32 %1064, 1
  store i32 %1065, i32* %1063, align 8
  br label %1077

1066:                                             ; preds = %1051
  %1067 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1068 = icmp sgt i32 %1067, 0
  br i1 %1068, label %1069, label %1077

1069:                                             ; preds = %1066
  %1070 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1071 = load i32, i32* %1070, align 8
  %1072 = add i32 %1071, 1
  store i32 %1072, i32* %1070, align 8
  %1073 = urem i32 %1072, %1067
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1077

1075:                                             ; preds = %1069
  %1076 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1076, i32 0) #6
  br label %1077

1077:                                             ; preds = %1075, %1069, %1066, %1062
  %1078 = load i64, i64* %10, align 8
  %1079 = add i64 %1042, -1
  %1080 = inttoptr i64 %1079 to i32*
  %1081 = trunc i64 %1078 to i32
  store atomic volatile i32 %1081, i32* %1080 monotonic, align 4
  %1082 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1083 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1082, i64 %1042, i16 zeroext 64, i32 16, i8 zeroext 3, i32 0) #6
  %1084 = and i64 %1083, 1
  %1085 = icmp eq i64 %1084, 0
  br i1 %1085, label %1086, label %1087, !prof !4

1086:                                             ; preds = %1077
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1087:                                             ; preds = %1039, %1077
  %1088 = phi i64 [ %1083, %1077 ], [ %1042, %1039 ]
  %1089 = and i64 %1088, 1
  %1090 = icmp eq i64 %1089, 0
  br i1 %1090, label %6363, label %1091

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 15
  store i64 %1088, i64* %1092, align 8
  %1093 = add i64 %1088, 7
  %1094 = inttoptr i64 %1093 to i16*
  %1095 = load atomic i16, i16* %1094 monotonic, align 2
  %1096 = icmp ult i16 %1095, 68
  br i1 %1096, label %1098, label %1097, !prof !2

1097:                                             ; preds = %1091
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.373, i64 0, i64 0)) #7
  unreachable

1098:                                             ; preds = %1091
  %1099 = add i64 %1088, 4
  %1100 = inttoptr i64 %1099 to i8*
  store atomic volatile i8 -53, i8* %1100 monotonic, align 1
  %1101 = load i8, i8* %66, align 4, !range !3
  %1102 = icmp eq i8 %1101, 0
  br i1 %1102, label %1110, label %1103

1103:                                             ; preds = %1098
  %1104 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1105 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1104, align 8
  %1106 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1107 = load atomic i32, i32* %1106 monotonic, align 4
  %1108 = icmp eq i32 %1107, 2
  br i1 %1108, label %1109, label %1110, !prof !4

1109:                                             ; preds = %1103
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1105) #6
  br label %1110

1110:                                             ; preds = %1109, %1103, %1098
  %1111 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1112 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1113 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1112, i32 40, i32 0) #6
  %1114 = and i64 %1113, 1
  %1115 = icmp eq i64 %1114, 0
  br i1 %1115, label %1158, label %1116

1116:                                             ; preds = %1110
  %1117 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1118 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1119 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1117, %1118
  br i1 %1119, label %1122, label %1120

1120:                                             ; preds = %1116
  %1121 = add i64 %1113, -1
  br label %1125

1122:                                             ; preds = %1125, %1116
  %1123 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1124 = icmp eq i8 %1123, 0
  br i1 %1124, label %1137, label %1133

1125:                                             ; preds = %1125, %1120
  %1126 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1117, %1120 ], [ %1131, %1125 ]
  %1127 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1126, align 8
  %1128 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1127 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1129 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1128, align 8
  %1130 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1129, align 8
  call void %1130(%"class.v8::internal::HeapObjectAllocationTracker"* %1127, i64 %1121, i32 40) #6
  %1131 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1126, i64 1
  %1132 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1131, %1118
  br i1 %1132, label %1122, label %1125

1133:                                             ; preds = %1122
  %1134 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1135 = load i32, i32* %1134, align 8
  %1136 = add i32 %1135, 1
  store i32 %1136, i32* %1134, align 8
  br label %1148

1137:                                             ; preds = %1122
  %1138 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1139 = icmp sgt i32 %1138, 0
  br i1 %1139, label %1140, label %1148

1140:                                             ; preds = %1137
  %1141 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1142 = load i32, i32* %1141, align 8
  %1143 = add i32 %1142, 1
  store i32 %1143, i32* %1141, align 8
  %1144 = urem i32 %1143, %1138
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1148

1146:                                             ; preds = %1140
  %1147 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1147, i32 0) #6
  br label %1148

1148:                                             ; preds = %1146, %1140, %1137, %1133
  %1149 = load i64, i64* %10, align 8
  %1150 = add i64 %1113, -1
  %1151 = inttoptr i64 %1150 to i32*
  %1152 = trunc i64 %1149 to i32
  store atomic volatile i32 %1152, i32* %1151 monotonic, align 4
  %1153 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1154 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1153, i64 %1113, i16 zeroext 70, i32 12, i8 zeroext 3, i32 0) #6
  %1155 = and i64 %1154, 1
  %1156 = icmp eq i64 %1155, 0
  br i1 %1156, label %1157, label %1158, !prof !4

1157:                                             ; preds = %1148
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1158:                                             ; preds = %1110, %1148
  %1159 = phi i64 [ %1154, %1148 ], [ %1113, %1110 ]
  %1160 = and i64 %1159, 1
  %1161 = icmp eq i64 %1160, 0
  br i1 %1161, label %6363, label %1162

1162:                                             ; preds = %1158
  %1163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 23
  store i64 %1159, i64* %1163, align 8
  %1164 = load i8, i8* %66, align 4, !range !3
  %1165 = icmp eq i8 %1164, 0
  br i1 %1165, label %1173, label %1166

1166:                                             ; preds = %1162
  %1167 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1168 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1167, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1170 = load atomic i32, i32* %1169 monotonic, align 4
  %1171 = icmp eq i32 %1170, 2
  br i1 %1171, label %1172, label %1173, !prof !4

1172:                                             ; preds = %1166
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1168) #6
  br label %1173

1173:                                             ; preds = %1172, %1166, %1162
  %1174 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1175 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1176 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1175, i32 40, i32 0) #6
  %1177 = and i64 %1176, 1
  %1178 = icmp eq i64 %1177, 0
  br i1 %1178, label %1221, label %1179

1179:                                             ; preds = %1173
  %1180 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1181 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1182 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1180, %1181
  br i1 %1182, label %1185, label %1183

1183:                                             ; preds = %1179
  %1184 = add i64 %1176, -1
  br label %1188

1185:                                             ; preds = %1188, %1179
  %1186 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1187 = icmp eq i8 %1186, 0
  br i1 %1187, label %1200, label %1196

1188:                                             ; preds = %1188, %1183
  %1189 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1180, %1183 ], [ %1194, %1188 ]
  %1190 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1189, align 8
  %1191 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1190 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1192 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1191, align 8
  %1193 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1192, align 8
  call void %1193(%"class.v8::internal::HeapObjectAllocationTracker"* %1190, i64 %1184, i32 40) #6
  %1194 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1189, i64 1
  %1195 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1194, %1181
  br i1 %1195, label %1185, label %1188

1196:                                             ; preds = %1185
  %1197 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1198 = load i32, i32* %1197, align 8
  %1199 = add i32 %1198, 1
  store i32 %1199, i32* %1197, align 8
  br label %1211

1200:                                             ; preds = %1185
  %1201 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1202 = icmp sgt i32 %1201, 0
  br i1 %1202, label %1203, label %1211

1203:                                             ; preds = %1200
  %1204 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1205 = load i32, i32* %1204, align 8
  %1206 = add i32 %1205, 1
  store i32 %1206, i32* %1204, align 8
  %1207 = urem i32 %1206, %1201
  %1208 = icmp eq i32 %1207, 0
  br i1 %1208, label %1209, label %1211

1209:                                             ; preds = %1203
  %1210 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1210, i32 0) #6
  br label %1211

1211:                                             ; preds = %1209, %1203, %1200, %1196
  %1212 = load i64, i64* %10, align 8
  %1213 = add i64 %1176, -1
  %1214 = inttoptr i64 %1213 to i32*
  %1215 = trunc i64 %1212 to i32
  store atomic volatile i32 %1215, i32* %1214 monotonic, align 4
  %1216 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1217 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1216, i64 %1176, i16 zeroext 173, i32 12, i8 zeroext 3, i32 0) #6
  %1218 = and i64 %1217, 1
  %1219 = icmp eq i64 %1218, 0
  br i1 %1219, label %1220, label %1221, !prof !4

1220:                                             ; preds = %1211
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1221:                                             ; preds = %1173, %1211
  %1222 = phi i64 [ %1217, %1211 ], [ %1176, %1173 ]
  %1223 = and i64 %1222, 1
  %1224 = icmp eq i64 %1223, 0
  br i1 %1224, label %6363, label %1225

1225:                                             ; preds = %1221
  %1226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 48
  store i64 %1222, i64* %1226, align 8
  %1227 = load i8, i8* %66, align 4, !range !3
  %1228 = icmp eq i8 %1227, 0
  br i1 %1228, label %1236, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1231 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1230, align 8
  %1232 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1233 = load atomic i32, i32* %1232 monotonic, align 4
  %1234 = icmp eq i32 %1233, 2
  br i1 %1234, label %1235, label %1236, !prof !4

1235:                                             ; preds = %1229
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1231) #6
  br label %1236

1236:                                             ; preds = %1235, %1229, %1225
  %1237 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1238 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1239 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1238, i32 40, i32 0) #6
  %1240 = and i64 %1239, 1
  %1241 = icmp eq i64 %1240, 0
  br i1 %1241, label %1284, label %1242

1242:                                             ; preds = %1236
  %1243 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1244 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1245 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1243, %1244
  br i1 %1245, label %1248, label %1246

1246:                                             ; preds = %1242
  %1247 = add i64 %1239, -1
  br label %1251

1248:                                             ; preds = %1251, %1242
  %1249 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1250 = icmp eq i8 %1249, 0
  br i1 %1250, label %1263, label %1259

1251:                                             ; preds = %1251, %1246
  %1252 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1243, %1246 ], [ %1257, %1251 ]
  %1253 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1252, align 8
  %1254 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1253 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1255 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1254, align 8
  %1256 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1255, align 8
  call void %1256(%"class.v8::internal::HeapObjectAllocationTracker"* %1253, i64 %1247, i32 40) #6
  %1257 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1252, i64 1
  %1258 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1257, %1244
  br i1 %1258, label %1248, label %1251

1259:                                             ; preds = %1248
  %1260 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1261 = load i32, i32* %1260, align 8
  %1262 = add i32 %1261, 1
  store i32 %1262, i32* %1260, align 8
  br label %1274

1263:                                             ; preds = %1248
  %1264 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1265 = icmp sgt i32 %1264, 0
  br i1 %1265, label %1266, label %1274

1266:                                             ; preds = %1263
  %1267 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1268 = load i32, i32* %1267, align 8
  %1269 = add i32 %1268, 1
  store i32 %1269, i32* %1267, align 8
  %1270 = urem i32 %1269, %1264
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1272, label %1274

1272:                                             ; preds = %1266
  %1273 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1273, i32 0) #6
  br label %1274

1274:                                             ; preds = %1272, %1266, %1263, %1259
  %1275 = load i64, i64* %10, align 8
  %1276 = add i64 %1239, -1
  %1277 = inttoptr i64 %1276 to i32*
  %1278 = trunc i64 %1275 to i32
  store atomic volatile i32 %1278, i32* %1277 monotonic, align 4
  %1279 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1280 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1279, i64 %1239, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1281 = and i64 %1280, 1
  %1282 = icmp eq i64 %1281, 0
  br i1 %1282, label %1283, label %1284, !prof !4

1283:                                             ; preds = %1274
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1284:                                             ; preds = %1236, %1274
  %1285 = phi i64 [ %1280, %1274 ], [ %1239, %1236 ]
  %1286 = and i64 %1285, 1
  %1287 = icmp eq i64 %1286, 0
  br i1 %1287, label %6363, label %1288

1288:                                             ; preds = %1284
  %1289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 96
  store i64 %1285, i64* %1289, align 8
  %1290 = add i64 %1285, 7
  %1291 = inttoptr i64 %1290 to i16*
  %1292 = load atomic i16, i16* %1291 monotonic, align 2
  %1293 = icmp ult i16 %1292, 68
  br i1 %1293, label %1295, label %1294, !prof !2

1294:                                             ; preds = %1288
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.373, i64 0, i64 0)) #7
  unreachable

1295:                                             ; preds = %1288
  %1296 = add i64 %1285, 4
  %1297 = inttoptr i64 %1296 to i8*
  store atomic volatile i8 51, i8* %1297 monotonic, align 1
  %1298 = load i8, i8* %66, align 4, !range !3
  %1299 = icmp eq i8 %1298, 0
  br i1 %1299, label %1307, label %1300

1300:                                             ; preds = %1295
  %1301 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1302 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1301, align 8
  %1303 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1304 = load atomic i32, i32* %1303 monotonic, align 4
  %1305 = icmp eq i32 %1304, 2
  br i1 %1305, label %1306, label %1307, !prof !4

1306:                                             ; preds = %1300
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1302) #6
  br label %1307

1307:                                             ; preds = %1306, %1300, %1295
  %1308 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1309 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1310 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1309, i32 40, i32 0) #6
  %1311 = and i64 %1310, 1
  %1312 = icmp eq i64 %1311, 0
  br i1 %1312, label %1355, label %1313

1313:                                             ; preds = %1307
  %1314 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1315 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1316 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1314, %1315
  br i1 %1316, label %1319, label %1317

1317:                                             ; preds = %1313
  %1318 = add i64 %1310, -1
  br label %1322

1319:                                             ; preds = %1322, %1313
  %1320 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1321 = icmp eq i8 %1320, 0
  br i1 %1321, label %1334, label %1330

1322:                                             ; preds = %1322, %1317
  %1323 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1314, %1317 ], [ %1328, %1322 ]
  %1324 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1323, align 8
  %1325 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1324 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1326 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1325, align 8
  %1327 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1326, align 8
  call void %1327(%"class.v8::internal::HeapObjectAllocationTracker"* %1324, i64 %1318, i32 40) #6
  %1328 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1323, i64 1
  %1329 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1328, %1315
  br i1 %1329, label %1319, label %1322

1330:                                             ; preds = %1319
  %1331 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1332 = load i32, i32* %1331, align 8
  %1333 = add i32 %1332, 1
  store i32 %1333, i32* %1331, align 8
  br label %1345

1334:                                             ; preds = %1319
  %1335 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1336 = icmp sgt i32 %1335, 0
  br i1 %1336, label %1337, label %1345

1337:                                             ; preds = %1334
  %1338 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1339 = load i32, i32* %1338, align 8
  %1340 = add i32 %1339, 1
  store i32 %1340, i32* %1338, align 8
  %1341 = urem i32 %1340, %1335
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1343, label %1345

1343:                                             ; preds = %1337
  %1344 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1344, i32 0) #6
  br label %1345

1345:                                             ; preds = %1343, %1337, %1334, %1330
  %1346 = load i64, i64* %10, align 8
  %1347 = add i64 %1310, -1
  %1348 = inttoptr i64 %1347 to i32*
  %1349 = trunc i64 %1346 to i32
  store atomic volatile i32 %1349, i32* %1348 monotonic, align 4
  %1350 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1351 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1350, i64 %1310, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1352 = and i64 %1351, 1
  %1353 = icmp eq i64 %1352, 0
  br i1 %1353, label %1354, label %1355, !prof !4

1354:                                             ; preds = %1345
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1355:                                             ; preds = %1307, %1345
  %1356 = phi i64 [ %1351, %1345 ], [ %1310, %1307 ]
  %1357 = and i64 %1356, 1
  %1358 = icmp eq i64 %1357, 0
  br i1 %1358, label %6363, label %1359

1359:                                             ; preds = %1355
  %1360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 97
  store i64 %1356, i64* %1360, align 8
  %1361 = load i8, i8* %66, align 4, !range !3
  %1362 = icmp eq i8 %1361, 0
  br i1 %1362, label %1370, label %1363

1363:                                             ; preds = %1359
  %1364 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1365 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1364, align 8
  %1366 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1367 = load atomic i32, i32* %1366 monotonic, align 4
  %1368 = icmp eq i32 %1367, 2
  br i1 %1368, label %1369, label %1370, !prof !4

1369:                                             ; preds = %1363
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1365) #6
  br label %1370

1370:                                             ; preds = %1369, %1363, %1359
  %1371 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1372 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1373 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1372, i32 40, i32 0) #6
  %1374 = and i64 %1373, 1
  %1375 = icmp eq i64 %1374, 0
  br i1 %1375, label %1418, label %1376

1376:                                             ; preds = %1370
  %1377 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1378 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1379 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1377, %1378
  br i1 %1379, label %1382, label %1380

1380:                                             ; preds = %1376
  %1381 = add i64 %1373, -1
  br label %1385

1382:                                             ; preds = %1385, %1376
  %1383 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1384 = icmp eq i8 %1383, 0
  br i1 %1384, label %1397, label %1393

1385:                                             ; preds = %1385, %1380
  %1386 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1377, %1380 ], [ %1391, %1385 ]
  %1387 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1386, align 8
  %1388 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1387 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1389 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1388, align 8
  %1390 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1389, align 8
  call void %1390(%"class.v8::internal::HeapObjectAllocationTracker"* %1387, i64 %1381, i32 40) #6
  %1391 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1386, i64 1
  %1392 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1391, %1378
  br i1 %1392, label %1382, label %1385

1393:                                             ; preds = %1382
  %1394 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1395 = load i32, i32* %1394, align 8
  %1396 = add i32 %1395, 1
  store i32 %1396, i32* %1394, align 8
  br label %1408

1397:                                             ; preds = %1382
  %1398 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1399 = icmp sgt i32 %1398, 0
  br i1 %1399, label %1400, label %1408

1400:                                             ; preds = %1397
  %1401 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1402 = load i32, i32* %1401, align 8
  %1403 = add i32 %1402, 1
  store i32 %1403, i32* %1401, align 8
  %1404 = urem i32 %1403, %1398
  %1405 = icmp eq i32 %1404, 0
  br i1 %1405, label %1406, label %1408

1406:                                             ; preds = %1400
  %1407 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1407, i32 0) #6
  br label %1408

1408:                                             ; preds = %1406, %1400, %1397, %1393
  %1409 = load i64, i64* %10, align 8
  %1410 = add i64 %1373, -1
  %1411 = inttoptr i64 %1410 to i32*
  %1412 = trunc i64 %1409 to i32
  store atomic volatile i32 %1412, i32* %1411 monotonic, align 4
  %1413 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1414 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1413, i64 %1373, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1415 = and i64 %1414, 1
  %1416 = icmp eq i64 %1415, 0
  br i1 %1416, label %1417, label %1418, !prof !4

1417:                                             ; preds = %1408
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1418:                                             ; preds = %1370, %1408
  %1419 = phi i64 [ %1414, %1408 ], [ %1373, %1370 ]
  %1420 = and i64 %1419, 1
  %1421 = icmp eq i64 %1420, 0
  br i1 %1421, label %6363, label %1422

1422:                                             ; preds = %1418
  %1423 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 98
  store i64 %1419, i64* %1423, align 8
  %1424 = load i8, i8* %66, align 4, !range !3
  %1425 = icmp eq i8 %1424, 0
  br i1 %1425, label %1433, label %1426

1426:                                             ; preds = %1422
  %1427 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1428 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1427, align 8
  %1429 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1430 = load atomic i32, i32* %1429 monotonic, align 4
  %1431 = icmp eq i32 %1430, 2
  br i1 %1431, label %1432, label %1433, !prof !4

1432:                                             ; preds = %1426
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1428) #6
  br label %1433

1433:                                             ; preds = %1432, %1426, %1422
  %1434 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1435 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1436 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1435, i32 40, i32 0) #6
  %1437 = and i64 %1436, 1
  %1438 = icmp eq i64 %1437, 0
  br i1 %1438, label %1481, label %1439

1439:                                             ; preds = %1433
  %1440 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1441 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1442 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1440, %1441
  br i1 %1442, label %1445, label %1443

1443:                                             ; preds = %1439
  %1444 = add i64 %1436, -1
  br label %1448

1445:                                             ; preds = %1448, %1439
  %1446 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1447 = icmp eq i8 %1446, 0
  br i1 %1447, label %1460, label %1456

1448:                                             ; preds = %1448, %1443
  %1449 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1440, %1443 ], [ %1454, %1448 ]
  %1450 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1449, align 8
  %1451 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1450 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1452 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1451, align 8
  %1453 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1452, align 8
  call void %1453(%"class.v8::internal::HeapObjectAllocationTracker"* %1450, i64 %1444, i32 40) #6
  %1454 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1449, i64 1
  %1455 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1454, %1441
  br i1 %1455, label %1445, label %1448

1456:                                             ; preds = %1445
  %1457 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1458 = load i32, i32* %1457, align 8
  %1459 = add i32 %1458, 1
  store i32 %1459, i32* %1457, align 8
  br label %1471

1460:                                             ; preds = %1445
  %1461 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1462 = icmp sgt i32 %1461, 0
  br i1 %1462, label %1463, label %1471

1463:                                             ; preds = %1460
  %1464 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1465 = load i32, i32* %1464, align 8
  %1466 = add i32 %1465, 1
  store i32 %1466, i32* %1464, align 8
  %1467 = urem i32 %1466, %1461
  %1468 = icmp eq i32 %1467, 0
  br i1 %1468, label %1469, label %1471

1469:                                             ; preds = %1463
  %1470 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1470, i32 0) #6
  br label %1471

1471:                                             ; preds = %1469, %1463, %1460, %1456
  %1472 = load i64, i64* %10, align 8
  %1473 = add i64 %1436, -1
  %1474 = inttoptr i64 %1473 to i32*
  %1475 = trunc i64 %1472 to i32
  store atomic volatile i32 %1475, i32* %1474 monotonic, align 4
  %1476 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1477 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1476, i64 %1436, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1478 = and i64 %1477, 1
  %1479 = icmp eq i64 %1478, 0
  br i1 %1479, label %1480, label %1481, !prof !4

1480:                                             ; preds = %1471
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1481:                                             ; preds = %1433, %1471
  %1482 = phi i64 [ %1477, %1471 ], [ %1436, %1433 ]
  %1483 = and i64 %1482, 1
  %1484 = icmp eq i64 %1483, 0
  br i1 %1484, label %6363, label %1485

1485:                                             ; preds = %1481
  %1486 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 99
  store i64 %1482, i64* %1486, align 8
  %1487 = load i8, i8* %66, align 4, !range !3
  %1488 = icmp eq i8 %1487, 0
  br i1 %1488, label %1496, label %1489

1489:                                             ; preds = %1485
  %1490 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1491 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1490, align 8
  %1492 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1493 = load atomic i32, i32* %1492 monotonic, align 4
  %1494 = icmp eq i32 %1493, 2
  br i1 %1494, label %1495, label %1496, !prof !4

1495:                                             ; preds = %1489
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1491) #6
  br label %1496

1496:                                             ; preds = %1495, %1489, %1485
  %1497 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1498 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1499 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1498, i32 40, i32 0) #6
  %1500 = and i64 %1499, 1
  %1501 = icmp eq i64 %1500, 0
  br i1 %1501, label %1544, label %1502

1502:                                             ; preds = %1496
  %1503 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1504 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1505 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1503, %1504
  br i1 %1505, label %1508, label %1506

1506:                                             ; preds = %1502
  %1507 = add i64 %1499, -1
  br label %1511

1508:                                             ; preds = %1511, %1502
  %1509 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1510 = icmp eq i8 %1509, 0
  br i1 %1510, label %1523, label %1519

1511:                                             ; preds = %1511, %1506
  %1512 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1503, %1506 ], [ %1517, %1511 ]
  %1513 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1512, align 8
  %1514 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1513 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1515 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1514, align 8
  %1516 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1515, align 8
  call void %1516(%"class.v8::internal::HeapObjectAllocationTracker"* %1513, i64 %1507, i32 40) #6
  %1517 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1512, i64 1
  %1518 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1517, %1504
  br i1 %1518, label %1508, label %1511

1519:                                             ; preds = %1508
  %1520 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1521 = load i32, i32* %1520, align 8
  %1522 = add i32 %1521, 1
  store i32 %1522, i32* %1520, align 8
  br label %1534

1523:                                             ; preds = %1508
  %1524 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1525 = icmp sgt i32 %1524, 0
  br i1 %1525, label %1526, label %1534

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1528 = load i32, i32* %1527, align 8
  %1529 = add i32 %1528, 1
  store i32 %1529, i32* %1527, align 8
  %1530 = urem i32 %1529, %1524
  %1531 = icmp eq i32 %1530, 0
  br i1 %1531, label %1532, label %1534

1532:                                             ; preds = %1526
  %1533 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1533, i32 0) #6
  br label %1534

1534:                                             ; preds = %1532, %1526, %1523, %1519
  %1535 = load i64, i64* %10, align 8
  %1536 = add i64 %1499, -1
  %1537 = inttoptr i64 %1536 to i32*
  %1538 = trunc i64 %1535 to i32
  store atomic volatile i32 %1538, i32* %1537 monotonic, align 4
  %1539 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1540 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1539, i64 %1499, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1541 = and i64 %1540, 1
  %1542 = icmp eq i64 %1541, 0
  br i1 %1542, label %1543, label %1544, !prof !4

1543:                                             ; preds = %1534
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1544:                                             ; preds = %1496, %1534
  %1545 = phi i64 [ %1540, %1534 ], [ %1499, %1496 ]
  %1546 = and i64 %1545, 1
  %1547 = icmp eq i64 %1546, 0
  br i1 %1547, label %6363, label %1548

1548:                                             ; preds = %1544
  %1549 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 100
  store i64 %1545, i64* %1549, align 8
  %1550 = load i8, i8* %66, align 4, !range !3
  %1551 = icmp eq i8 %1550, 0
  br i1 %1551, label %1559, label %1552

1552:                                             ; preds = %1548
  %1553 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1554 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1553, align 8
  %1555 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1556 = load atomic i32, i32* %1555 monotonic, align 4
  %1557 = icmp eq i32 %1556, 2
  br i1 %1557, label %1558, label %1559, !prof !4

1558:                                             ; preds = %1552
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1554) #6
  br label %1559

1559:                                             ; preds = %1558, %1552, %1548
  %1560 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1561 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1562 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1561, i32 40, i32 0) #6
  %1563 = and i64 %1562, 1
  %1564 = icmp eq i64 %1563, 0
  br i1 %1564, label %1607, label %1565

1565:                                             ; preds = %1559
  %1566 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1567 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1568 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1566, %1567
  br i1 %1568, label %1571, label %1569

1569:                                             ; preds = %1565
  %1570 = add i64 %1562, -1
  br label %1574

1571:                                             ; preds = %1574, %1565
  %1572 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1573 = icmp eq i8 %1572, 0
  br i1 %1573, label %1586, label %1582

1574:                                             ; preds = %1574, %1569
  %1575 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1566, %1569 ], [ %1580, %1574 ]
  %1576 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1575, align 8
  %1577 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1576 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1578 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1577, align 8
  %1579 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1578, align 8
  call void %1579(%"class.v8::internal::HeapObjectAllocationTracker"* %1576, i64 %1570, i32 40) #6
  %1580 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1575, i64 1
  %1581 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1580, %1567
  br i1 %1581, label %1571, label %1574

1582:                                             ; preds = %1571
  %1583 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1584 = load i32, i32* %1583, align 8
  %1585 = add i32 %1584, 1
  store i32 %1585, i32* %1583, align 8
  br label %1597

1586:                                             ; preds = %1571
  %1587 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1588 = icmp sgt i32 %1587, 0
  br i1 %1588, label %1589, label %1597

1589:                                             ; preds = %1586
  %1590 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1591 = load i32, i32* %1590, align 8
  %1592 = add i32 %1591, 1
  store i32 %1592, i32* %1590, align 8
  %1593 = urem i32 %1592, %1587
  %1594 = icmp eq i32 %1593, 0
  br i1 %1594, label %1595, label %1597

1595:                                             ; preds = %1589
  %1596 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1596, i32 0) #6
  br label %1597

1597:                                             ; preds = %1595, %1589, %1586, %1582
  %1598 = load i64, i64* %10, align 8
  %1599 = add i64 %1562, -1
  %1600 = inttoptr i64 %1599 to i32*
  %1601 = trunc i64 %1598 to i32
  store atomic volatile i32 %1601, i32* %1600 monotonic, align 4
  %1602 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1603 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1602, i64 %1562, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1604 = and i64 %1603, 1
  %1605 = icmp eq i64 %1604, 0
  br i1 %1605, label %1606, label %1607, !prof !4

1606:                                             ; preds = %1597
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1607:                                             ; preds = %1559, %1597
  %1608 = phi i64 [ %1603, %1597 ], [ %1562, %1559 ]
  %1609 = and i64 %1608, 1
  %1610 = icmp eq i64 %1609, 0
  br i1 %1610, label %6363, label %1611

1611:                                             ; preds = %1607
  %1612 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 101
  store i64 %1608, i64* %1612, align 8
  %1613 = load i8, i8* %66, align 4, !range !3
  %1614 = icmp eq i8 %1613, 0
  br i1 %1614, label %1622, label %1615

1615:                                             ; preds = %1611
  %1616 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1617 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1616, align 8
  %1618 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1617, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1619 = load atomic i32, i32* %1618 monotonic, align 4
  %1620 = icmp eq i32 %1619, 2
  br i1 %1620, label %1621, label %1622, !prof !4

1621:                                             ; preds = %1615
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1617) #6
  br label %1622

1622:                                             ; preds = %1621, %1615, %1611
  %1623 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1624 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1625 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1624, i32 40, i32 0) #6
  %1626 = and i64 %1625, 1
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1670, label %1628

1628:                                             ; preds = %1622
  %1629 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1630 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1631 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1629, %1630
  br i1 %1631, label %1634, label %1632

1632:                                             ; preds = %1628
  %1633 = add i64 %1625, -1
  br label %1637

1634:                                             ; preds = %1637, %1628
  %1635 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1636 = icmp eq i8 %1635, 0
  br i1 %1636, label %1649, label %1645

1637:                                             ; preds = %1637, %1632
  %1638 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1629, %1632 ], [ %1643, %1637 ]
  %1639 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1638, align 8
  %1640 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1639 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1641 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1640, align 8
  %1642 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1641, align 8
  call void %1642(%"class.v8::internal::HeapObjectAllocationTracker"* %1639, i64 %1633, i32 40) #6
  %1643 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1638, i64 1
  %1644 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1643, %1630
  br i1 %1644, label %1634, label %1637

1645:                                             ; preds = %1634
  %1646 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1647 = load i32, i32* %1646, align 8
  %1648 = add i32 %1647, 1
  store i32 %1648, i32* %1646, align 8
  br label %1660

1649:                                             ; preds = %1634
  %1650 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1651 = icmp sgt i32 %1650, 0
  br i1 %1651, label %1652, label %1660

1652:                                             ; preds = %1649
  %1653 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1654 = load i32, i32* %1653, align 8
  %1655 = add i32 %1654, 1
  store i32 %1655, i32* %1653, align 8
  %1656 = urem i32 %1655, %1650
  %1657 = icmp eq i32 %1656, 0
  br i1 %1657, label %1658, label %1660

1658:                                             ; preds = %1652
  %1659 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1659, i32 0) #6
  br label %1660

1660:                                             ; preds = %1658, %1652, %1649, %1645
  %1661 = load i64, i64* %10, align 8
  %1662 = add i64 %1625, -1
  %1663 = inttoptr i64 %1662 to i32*
  %1664 = trunc i64 %1661 to i32
  store atomic volatile i32 %1664, i32* %1663 monotonic, align 4
  %1665 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1666 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1665, i64 %1625, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1667 = and i64 %1666, 1
  %1668 = icmp eq i64 %1667, 0
  br i1 %1668, label %1669, label %1670, !prof !4

1669:                                             ; preds = %1660
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1670:                                             ; preds = %1622, %1660
  %1671 = phi i64 [ %1666, %1660 ], [ %1625, %1622 ]
  %1672 = and i64 %1671, 1
  %1673 = icmp eq i64 %1672, 0
  br i1 %1673, label %6363, label %1674

1674:                                             ; preds = %1670
  %1675 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 102
  store i64 %1671, i64* %1675, align 8
  %1676 = load i8, i8* %66, align 4, !range !3
  %1677 = icmp eq i8 %1676, 0
  br i1 %1677, label %1685, label %1678

1678:                                             ; preds = %1674
  %1679 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1680 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1679, align 8
  %1681 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1682 = load atomic i32, i32* %1681 monotonic, align 4
  %1683 = icmp eq i32 %1682, 2
  br i1 %1683, label %1684, label %1685, !prof !4

1684:                                             ; preds = %1678
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1680) #6
  br label %1685

1685:                                             ; preds = %1684, %1678, %1674
  %1686 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1687 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1688 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1687, i32 40, i32 0) #6
  %1689 = and i64 %1688, 1
  %1690 = icmp eq i64 %1689, 0
  br i1 %1690, label %1733, label %1691

1691:                                             ; preds = %1685
  %1692 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1693 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1694 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1692, %1693
  br i1 %1694, label %1697, label %1695

1695:                                             ; preds = %1691
  %1696 = add i64 %1688, -1
  br label %1700

1697:                                             ; preds = %1700, %1691
  %1698 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1699 = icmp eq i8 %1698, 0
  br i1 %1699, label %1712, label %1708

1700:                                             ; preds = %1700, %1695
  %1701 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1692, %1695 ], [ %1706, %1700 ]
  %1702 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1701, align 8
  %1703 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1702 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1704 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1703, align 8
  %1705 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1704, align 8
  call void %1705(%"class.v8::internal::HeapObjectAllocationTracker"* %1702, i64 %1696, i32 40) #6
  %1706 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1701, i64 1
  %1707 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1706, %1693
  br i1 %1707, label %1697, label %1700

1708:                                             ; preds = %1697
  %1709 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1710 = load i32, i32* %1709, align 8
  %1711 = add i32 %1710, 1
  store i32 %1711, i32* %1709, align 8
  br label %1723

1712:                                             ; preds = %1697
  %1713 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1714 = icmp sgt i32 %1713, 0
  br i1 %1714, label %1715, label %1723

1715:                                             ; preds = %1712
  %1716 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1717 = load i32, i32* %1716, align 8
  %1718 = add i32 %1717, 1
  store i32 %1718, i32* %1716, align 8
  %1719 = urem i32 %1718, %1713
  %1720 = icmp eq i32 %1719, 0
  br i1 %1720, label %1721, label %1723

1721:                                             ; preds = %1715
  %1722 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1722, i32 0) #6
  br label %1723

1723:                                             ; preds = %1721, %1715, %1712, %1708
  %1724 = load i64, i64* %10, align 8
  %1725 = add i64 %1688, -1
  %1726 = inttoptr i64 %1725 to i32*
  %1727 = trunc i64 %1724 to i32
  store atomic volatile i32 %1727, i32* %1726 monotonic, align 4
  %1728 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1729 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1728, i64 %1688, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1730 = and i64 %1729, 1
  %1731 = icmp eq i64 %1730, 0
  br i1 %1731, label %1732, label %1733, !prof !4

1732:                                             ; preds = %1723
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1733:                                             ; preds = %1685, %1723
  %1734 = phi i64 [ %1729, %1723 ], [ %1688, %1685 ]
  %1735 = and i64 %1734, 1
  %1736 = icmp eq i64 %1735, 0
  br i1 %1736, label %6363, label %1737

1737:                                             ; preds = %1733
  %1738 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 103
  store i64 %1734, i64* %1738, align 8
  %1739 = load i8, i8* %66, align 4, !range !3
  %1740 = icmp eq i8 %1739, 0
  br i1 %1740, label %1748, label %1741

1741:                                             ; preds = %1737
  %1742 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1743 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1742, align 8
  %1744 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1743, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1745 = load atomic i32, i32* %1744 monotonic, align 4
  %1746 = icmp eq i32 %1745, 2
  br i1 %1746, label %1747, label %1748, !prof !4

1747:                                             ; preds = %1741
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1743) #6
  br label %1748

1748:                                             ; preds = %1747, %1741, %1737
  %1749 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1750 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1751 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1750, i32 40, i32 0) #6
  %1752 = and i64 %1751, 1
  %1753 = icmp eq i64 %1752, 0
  br i1 %1753, label %1796, label %1754

1754:                                             ; preds = %1748
  %1755 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1756 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1757 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1755, %1756
  br i1 %1757, label %1760, label %1758

1758:                                             ; preds = %1754
  %1759 = add i64 %1751, -1
  br label %1763

1760:                                             ; preds = %1763, %1754
  %1761 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1762 = icmp eq i8 %1761, 0
  br i1 %1762, label %1775, label %1771

1763:                                             ; preds = %1763, %1758
  %1764 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1755, %1758 ], [ %1769, %1763 ]
  %1765 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1764, align 8
  %1766 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1765 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1767 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1766, align 8
  %1768 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1767, align 8
  call void %1768(%"class.v8::internal::HeapObjectAllocationTracker"* %1765, i64 %1759, i32 40) #6
  %1769 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1764, i64 1
  %1770 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1769, %1756
  br i1 %1770, label %1760, label %1763

1771:                                             ; preds = %1760
  %1772 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1773 = load i32, i32* %1772, align 8
  %1774 = add i32 %1773, 1
  store i32 %1774, i32* %1772, align 8
  br label %1786

1775:                                             ; preds = %1760
  %1776 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1777 = icmp sgt i32 %1776, 0
  br i1 %1777, label %1778, label %1786

1778:                                             ; preds = %1775
  %1779 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1780 = load i32, i32* %1779, align 8
  %1781 = add i32 %1780, 1
  store i32 %1781, i32* %1779, align 8
  %1782 = urem i32 %1781, %1776
  %1783 = icmp eq i32 %1782, 0
  br i1 %1783, label %1784, label %1786

1784:                                             ; preds = %1778
  %1785 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1785, i32 0) #6
  br label %1786

1786:                                             ; preds = %1784, %1778, %1775, %1771
  %1787 = load i64, i64* %10, align 8
  %1788 = add i64 %1751, -1
  %1789 = inttoptr i64 %1788 to i32*
  %1790 = trunc i64 %1787 to i32
  store atomic volatile i32 %1790, i32* %1789 monotonic, align 4
  %1791 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1792 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1791, i64 %1751, i16 zeroext 67, i32 28, i8 zeroext 3, i32 0) #6
  %1793 = and i64 %1792, 1
  %1794 = icmp eq i64 %1793, 0
  br i1 %1794, label %1795, label %1796, !prof !4

1795:                                             ; preds = %1786
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1796:                                             ; preds = %1748, %1786
  %1797 = phi i64 [ %1792, %1786 ], [ %1751, %1748 ]
  %1798 = and i64 %1797, 1
  %1799 = icmp eq i64 %1798, 0
  br i1 %1799, label %6363, label %1800

1800:                                             ; preds = %1796
  %1801 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 104
  store i64 %1797, i64* %1801, align 8
  %1802 = load i8, i8* %66, align 4, !range !3
  %1803 = icmp eq i8 %1802, 0
  br i1 %1803, label %1811, label %1804

1804:                                             ; preds = %1800
  %1805 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1806 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1805, align 8
  %1807 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1806, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1808 = load atomic i32, i32* %1807 monotonic, align 4
  %1809 = icmp eq i32 %1808, 2
  br i1 %1809, label %1810, label %1811, !prof !4

1810:                                             ; preds = %1804
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1806) #6
  br label %1811

1811:                                             ; preds = %1810, %1804, %1800
  %1812 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1813 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1814 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1813, i32 40, i32 0) #6
  %1815 = and i64 %1814, 1
  %1816 = icmp eq i64 %1815, 0
  br i1 %1816, label %1859, label %1817

1817:                                             ; preds = %1811
  %1818 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1819 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1820 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1818, %1819
  br i1 %1820, label %1823, label %1821

1821:                                             ; preds = %1817
  %1822 = add i64 %1814, -1
  br label %1826

1823:                                             ; preds = %1826, %1817
  %1824 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1825 = icmp eq i8 %1824, 0
  br i1 %1825, label %1838, label %1834

1826:                                             ; preds = %1826, %1821
  %1827 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1818, %1821 ], [ %1832, %1826 ]
  %1828 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1827, align 8
  %1829 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1828 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1830 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1829, align 8
  %1831 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1830, align 8
  call void %1831(%"class.v8::internal::HeapObjectAllocationTracker"* %1828, i64 %1822, i32 40) #6
  %1832 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1827, i64 1
  %1833 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1832, %1819
  br i1 %1833, label %1823, label %1826

1834:                                             ; preds = %1823
  %1835 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1836 = load i32, i32* %1835, align 8
  %1837 = add i32 %1836, 1
  store i32 %1837, i32* %1835, align 8
  br label %1849

1838:                                             ; preds = %1823
  %1839 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1840 = icmp sgt i32 %1839, 0
  br i1 %1840, label %1841, label %1849

1841:                                             ; preds = %1838
  %1842 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1843 = load i32, i32* %1842, align 8
  %1844 = add i32 %1843, 1
  store i32 %1844, i32* %1842, align 8
  %1845 = urem i32 %1844, %1839
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1847, label %1849

1847:                                             ; preds = %1841
  %1848 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1848, i32 0) #6
  br label %1849

1849:                                             ; preds = %1847, %1841, %1838, %1834
  %1850 = load i64, i64* %10, align 8
  %1851 = add i64 %1814, -1
  %1852 = inttoptr i64 %1851 to i32*
  %1853 = trunc i64 %1850 to i32
  store atomic volatile i32 %1853, i32* %1852 monotonic, align 4
  %1854 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %1855 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1854, i64 %1814, i16 zeroext 65, i32 0, i8 zeroext 3, i32 0) #6
  %1856 = and i64 %1855, 1
  %1857 = icmp eq i64 %1856, 0
  br i1 %1857, label %1858, label %1859, !prof !4

1858:                                             ; preds = %1849
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1859:                                             ; preds = %1811, %1849
  %1860 = phi i64 [ %1855, %1849 ], [ %1814, %1811 ]
  %1861 = and i64 %1860, 1
  %1862 = icmp eq i64 %1861, 0
  br i1 %1862, label %6363, label %1863

1863:                                             ; preds = %1859
  %1864 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 40
  store i64 %1860, i64* %1864, align 8
  %1865 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  br label %1866

1866:                                             ; preds = %1907, %1863
  %1867 = phi i64 [ 0, %1863 ], [ %1912, %1907 ]
  %1868 = getelementptr inbounds [18 x %"struct.v8::internal::Heap::StringTypeTable"], [18 x %"struct.v8::internal::Heap::StringTypeTable"]* @_ZN2v88internal4Heap17string_type_tableE, i64 0, i64 %1867, i32 0
  %1869 = load i16, i16* %1868, align 4
  %1870 = getelementptr inbounds [18 x %"struct.v8::internal::Heap::StringTypeTable"], [18 x %"struct.v8::internal::Heap::StringTypeTable"]* @_ZN2v88internal4Heap17string_type_tableE, i64 0, i64 %1867, i32 1
  %1871 = load i32, i32* %1870, align 4
  %1872 = or i16 %1869, 1
  %1873 = icmp eq i16 %1872, 187
  %1874 = select i1 %1873, i8 3, i8 4
  %1875 = call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 40, i8 zeroext %1874, i32 1, i32 0) #6
  %1876 = and i64 %1875, 1
  %1877 = icmp eq i64 %1876, 0
  br i1 %1877, label %1887, label %1878

1878:                                             ; preds = %1866
  %1879 = load i64, i64* %10, align 8
  %1880 = add i64 %1875, -1
  %1881 = inttoptr i64 %1880 to i32*
  %1882 = trunc i64 %1879 to i32
  store atomic volatile i32 %1882, i32* %1881 monotonic, align 4
  %1883 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %1875, i16 zeroext %1869, i32 %1871, i8 zeroext 3, i32 0) #6
  %1884 = and i64 %1883, 1
  %1885 = icmp eq i64 %1884, 0
  br i1 %1885, label %1886, label %1887, !prof !4

1886:                                             ; preds = %1878
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1887:                                             ; preds = %1866, %1878
  %1888 = phi i64 [ %1875, %1866 ], [ %1883, %1878 ]
  %1889 = and i64 %1888, 1
  %1890 = icmp eq i64 %1889, 0
  br i1 %1890, label %6363, label %1891

1891:                                             ; preds = %1887
  %1892 = add i64 %1888, 7
  %1893 = inttoptr i64 %1892 to i16*
  %1894 = load atomic i16, i16* %1893 monotonic, align 2
  %1895 = icmp ult i16 %1894, 68
  br i1 %1895, label %1897, label %1896, !prof !2

1896:                                             ; preds = %1891
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.373, i64 0, i64 0)) #7
  unreachable

1897:                                             ; preds = %1891
  %1898 = add i64 %1888, 4
  %1899 = inttoptr i64 %1898 to i8*
  store atomic volatile i8 -55, i8* %1899 monotonic, align 1
  %1900 = or i64 %1867, 1
  %1901 = icmp eq i64 %1900, 3
  br i1 %1901, label %1902, label %1907

1902:                                             ; preds = %1897
  %1903 = add i64 %1888, 11
  %1904 = inttoptr i64 %1903 to i32*
  %1905 = load atomic i32, i32* %1904 monotonic, align 4
  %1906 = or i32 %1905, 33554432
  store atomic volatile i32 %1906, i32* %1904 release, align 4
  br label %1907

1907:                                             ; preds = %1897, %1902
  %1908 = getelementptr inbounds [18 x %"struct.v8::internal::Heap::StringTypeTable"], [18 x %"struct.v8::internal::Heap::StringTypeTable"]* @_ZN2v88internal4Heap17string_type_tableE, i64 0, i64 %1867, i32 2
  %1909 = load i16, i16* %1908, align 4
  %1910 = zext i16 %1909 to i64
  %1911 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 %1910
  store i64 %1888, i64* %1911, align 8
  %1912 = add nuw nsw i64 %1867, 1
  %1913 = icmp eq i64 %1912, 18
  br i1 %1913, label %1914, label %1866

1914:                                             ; preds = %1907
  %1915 = load i8, i8* %66, align 4, !range !3
  %1916 = icmp eq i8 %1915, 0
  br i1 %1916, label %1924, label %1917

1917:                                             ; preds = %1914
  %1918 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1919 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1918, align 8
  %1920 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1919, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1921 = load atomic i32, i32* %1920 monotonic, align 4
  %1922 = icmp eq i32 %1921, 2
  br i1 %1922, label %1923, label %1924, !prof !4

1923:                                             ; preds = %1917
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1919) #6
  br label %1924

1924:                                             ; preds = %1923, %1917, %1914
  %1925 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1926 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1927 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1926, i32 40, i32 0) #6
  %1928 = and i64 %1927, 1
  %1929 = icmp eq i64 %1928, 0
  br i1 %1929, label %1971, label %1930

1930:                                             ; preds = %1924
  %1931 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1932 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %1933 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1931, %1932
  br i1 %1933, label %1936, label %1934

1934:                                             ; preds = %1930
  %1935 = add i64 %1927, -1
  br label %1939

1936:                                             ; preds = %1939, %1930
  %1937 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %1938 = icmp eq i8 %1937, 0
  br i1 %1938, label %1951, label %1947

1939:                                             ; preds = %1939, %1934
  %1940 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1931, %1934 ], [ %1945, %1939 ]
  %1941 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1940, align 8
  %1942 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %1941 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %1943 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %1942, align 8
  %1944 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %1943, align 8
  call void %1944(%"class.v8::internal::HeapObjectAllocationTracker"* %1941, i64 %1935, i32 40) #6
  %1945 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %1940, i64 1
  %1946 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1945, %1932
  br i1 %1946, label %1936, label %1939

1947:                                             ; preds = %1936
  %1948 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1949 = load i32, i32* %1948, align 8
  %1950 = add i32 %1949, 1
  store i32 %1950, i32* %1948, align 8
  br label %1962

1951:                                             ; preds = %1936
  %1952 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %1953 = icmp sgt i32 %1952, 0
  br i1 %1953, label %1954, label %1962

1954:                                             ; preds = %1951
  %1955 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %1956 = load i32, i32* %1955, align 8
  %1957 = add i32 %1956, 1
  store i32 %1957, i32* %1955, align 8
  %1958 = urem i32 %1957, %1952
  %1959 = icmp eq i32 %1958, 0
  br i1 %1959, label %1960, label %1962

1960:                                             ; preds = %1954
  %1961 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %1961, i32 0) #6
  br label %1962

1962:                                             ; preds = %1960, %1954, %1951, %1947
  %1963 = load i64, i64* %10, align 8
  %1964 = add i64 %1927, -1
  %1965 = inttoptr i64 %1964 to i32*
  %1966 = trunc i64 %1963 to i32
  store atomic volatile i32 %1966, i32* %1965 monotonic, align 4
  %1967 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %1927, i16 zeroext 134, i32 0, i8 zeroext 3, i32 0) #6
  %1968 = and i64 %1967, 1
  %1969 = icmp eq i64 %1968, 0
  br i1 %1969, label %1970, label %1971, !prof !4

1970:                                             ; preds = %1962
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

1971:                                             ; preds = %1924, %1962
  %1972 = phi i64 [ %1967, %1962 ], [ %1927, %1924 ]
  %1973 = and i64 %1972, 1
  %1974 = icmp eq i64 %1973, 0
  br i1 %1974, label %6363, label %1975

1975:                                             ; preds = %1971
  %1976 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 45
  store i64 %1972, i64* %1976, align 8
  %1977 = add i64 %1972, 10
  %1978 = inttoptr i64 %1977 to i8*
  %1979 = load i8, i8* %1978, align 1
  %1980 = and i8 %1979, 3
  %1981 = or i8 %1980, 20
  store i8 %1981, i8* %1978, align 1
  %1982 = load i8, i8* %66, align 4, !range !3
  %1983 = icmp eq i8 %1982, 0
  br i1 %1983, label %1991, label %1984

1984:                                             ; preds = %1975
  %1985 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %1986 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %1985, align 8
  %1987 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %1986, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1988 = load atomic i32, i32* %1987 monotonic, align 4
  %1989 = icmp eq i32 %1988, 2
  br i1 %1989, label %1990, label %1991, !prof !4

1990:                                             ; preds = %1984
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %1986) #6
  br label %1991

1991:                                             ; preds = %1990, %1984, %1975
  %1992 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %1993 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %1994 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %1993, i32 40, i32 0) #6
  %1995 = and i64 %1994, 1
  %1996 = icmp eq i64 %1995, 0
  br i1 %1996, label %2038, label %1997

1997:                                             ; preds = %1991
  %1998 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %1999 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2000 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %1998, %1999
  br i1 %2000, label %2003, label %2001

2001:                                             ; preds = %1997
  %2002 = add i64 %1994, -1
  br label %2006

2003:                                             ; preds = %2006, %1997
  %2004 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2005 = icmp eq i8 %2004, 0
  br i1 %2005, label %2018, label %2014

2006:                                             ; preds = %2006, %2001
  %2007 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %1998, %2001 ], [ %2012, %2006 ]
  %2008 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2007, align 8
  %2009 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2008 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2010 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2009, align 8
  %2011 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2010, align 8
  call void %2011(%"class.v8::internal::HeapObjectAllocationTracker"* %2008, i64 %2002, i32 40) #6
  %2012 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2007, i64 1
  %2013 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2012, %1999
  br i1 %2013, label %2003, label %2006

2014:                                             ; preds = %2003
  %2015 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2016 = load i32, i32* %2015, align 8
  %2017 = add i32 %2016, 1
  store i32 %2017, i32* %2015, align 8
  br label %2029

2018:                                             ; preds = %2003
  %2019 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2020 = icmp sgt i32 %2019, 0
  br i1 %2020, label %2021, label %2029

2021:                                             ; preds = %2018
  %2022 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2023 = load i32, i32* %2022, align 8
  %2024 = add i32 %2023, 1
  store i32 %2024, i32* %2022, align 8
  %2025 = urem i32 %2024, %2019
  %2026 = icmp eq i32 %2025, 0
  br i1 %2026, label %2027, label %2029

2027:                                             ; preds = %2021
  %2028 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2028, i32 0) #6
  br label %2029

2029:                                             ; preds = %2027, %2021, %2018, %2014
  %2030 = load i64, i64* %10, align 8
  %2031 = add i64 %1994, -1
  %2032 = inttoptr i64 %2031 to i32*
  %2033 = trunc i64 %2030 to i32
  store atomic volatile i32 %2033, i32* %2032 monotonic, align 4
  %2034 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %1994, i16 zeroext 166, i32 0, i8 zeroext 3, i32 0) #6
  %2035 = and i64 %2034, 1
  %2036 = icmp eq i64 %2035, 0
  br i1 %2036, label %2037, label %2038, !prof !4

2037:                                             ; preds = %2029
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2038:                                             ; preds = %1991, %2029
  %2039 = phi i64 [ %2034, %2029 ], [ %1994, %1991 ]
  %2040 = and i64 %2039, 1
  %2041 = icmp eq i64 %2040, 0
  br i1 %2041, label %6363, label %2042

2042:                                             ; preds = %2038
  %2043 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 38
  store i64 %2039, i64* %2043, align 8
  %2044 = load i8, i8* %66, align 4, !range !3
  %2045 = icmp eq i8 %2044, 0
  br i1 %2045, label %2053, label %2046

2046:                                             ; preds = %2042
  %2047 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2048 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2047, align 8
  %2049 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2048, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2050 = load atomic i32, i32* %2049 monotonic, align 4
  %2051 = icmp eq i32 %2050, 2
  br i1 %2051, label %2052, label %2053, !prof !4

2052:                                             ; preds = %2046
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2048) #6
  br label %2053

2053:                                             ; preds = %2052, %2046, %2042
  %2054 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2055 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2056 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2055, i32 40, i32 0) #6
  %2057 = and i64 %2056, 1
  %2058 = icmp eq i64 %2057, 0
  br i1 %2058, label %2100, label %2059

2059:                                             ; preds = %2053
  %2060 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2061 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2062 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2060, %2061
  br i1 %2062, label %2065, label %2063

2063:                                             ; preds = %2059
  %2064 = add i64 %2056, -1
  br label %2068

2065:                                             ; preds = %2068, %2059
  %2066 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2067 = icmp eq i8 %2066, 0
  br i1 %2067, label %2080, label %2076

2068:                                             ; preds = %2068, %2063
  %2069 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2060, %2063 ], [ %2074, %2068 ]
  %2070 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2069, align 8
  %2071 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2070 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2072 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2071, align 8
  %2073 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2072, align 8
  call void %2073(%"class.v8::internal::HeapObjectAllocationTracker"* %2070, i64 %2064, i32 40) #6
  %2074 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2069, i64 1
  %2075 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2074, %2061
  br i1 %2075, label %2065, label %2068

2076:                                             ; preds = %2065
  %2077 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2078 = load i32, i32* %2077, align 8
  %2079 = add i32 %2078, 1
  store i32 %2079, i32* %2077, align 8
  br label %2091

2080:                                             ; preds = %2065
  %2081 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2082 = icmp sgt i32 %2081, 0
  br i1 %2082, label %2083, label %2091

2083:                                             ; preds = %2080
  %2084 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2085 = load i32, i32* %2084, align 8
  %2086 = add i32 %2085, 1
  store i32 %2086, i32* %2084, align 8
  %2087 = urem i32 %2086, %2081
  %2088 = icmp eq i32 %2087, 0
  br i1 %2088, label %2089, label %2091

2089:                                             ; preds = %2083
  %2090 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2090, i32 0) #6
  br label %2091

2091:                                             ; preds = %2089, %2083, %2080, %2076
  %2092 = load i64, i64* %10, align 8
  %2093 = add i64 %2056, -1
  %2094 = inttoptr i64 %2093 to i32*
  %2095 = trunc i64 %2092 to i32
  store atomic volatile i32 %2095, i32* %2094 monotonic, align 4
  %2096 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2056, i16 zeroext 132, i32 0, i8 zeroext 3, i32 0) #6
  %2097 = and i64 %2096, 1
  %2098 = icmp eq i64 %2097, 0
  br i1 %2098, label %2099, label %2100, !prof !4

2099:                                             ; preds = %2091
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2100:                                             ; preds = %2053, %2091
  %2101 = phi i64 [ %2096, %2091 ], [ %2056, %2053 ]
  %2102 = and i64 %2101, 1
  %2103 = icmp eq i64 %2102, 0
  br i1 %2103, label %6363, label %2104

2104:                                             ; preds = %2100
  %2105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 11
  store i64 %2101, i64* %2105, align 8
  %2106 = load i8, i8* %66, align 4, !range !3
  %2107 = icmp eq i8 %2106, 0
  br i1 %2107, label %2115, label %2108

2108:                                             ; preds = %2104
  %2109 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2110 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2109, align 8
  %2111 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2112 = load atomic i32, i32* %2111 monotonic, align 4
  %2113 = icmp eq i32 %2112, 2
  br i1 %2113, label %2114, label %2115, !prof !4

2114:                                             ; preds = %2108
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2110) #6
  br label %2115

2115:                                             ; preds = %2114, %2108, %2104
  %2116 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2117 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2118 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2117, i32 40, i32 0) #6
  %2119 = and i64 %2118, 1
  %2120 = icmp eq i64 %2119, 0
  br i1 %2120, label %2162, label %2121

2121:                                             ; preds = %2115
  %2122 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2123 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2124 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2122, %2123
  br i1 %2124, label %2127, label %2125

2125:                                             ; preds = %2121
  %2126 = add i64 %2118, -1
  br label %2130

2127:                                             ; preds = %2130, %2121
  %2128 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2129 = icmp eq i8 %2128, 0
  br i1 %2129, label %2142, label %2138

2130:                                             ; preds = %2130, %2125
  %2131 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2122, %2125 ], [ %2136, %2130 ]
  %2132 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2131, align 8
  %2133 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2132 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2134 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2133, align 8
  %2135 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2134, align 8
  call void %2135(%"class.v8::internal::HeapObjectAllocationTracker"* %2132, i64 %2126, i32 40) #6
  %2136 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2131, i64 1
  %2137 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2136, %2123
  br i1 %2137, label %2127, label %2130

2138:                                             ; preds = %2127
  %2139 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2140 = load i32, i32* %2139, align 8
  %2141 = add i32 %2140, 1
  store i32 %2141, i32* %2139, align 8
  br label %2153

2142:                                             ; preds = %2127
  %2143 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2144 = icmp sgt i32 %2143, 0
  br i1 %2144, label %2145, label %2153

2145:                                             ; preds = %2142
  %2146 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2147 = load i32, i32* %2146, align 8
  %2148 = add i32 %2147, 1
  store i32 %2148, i32* %2146, align 8
  %2149 = urem i32 %2148, %2143
  %2150 = icmp eq i32 %2149, 0
  br i1 %2150, label %2151, label %2153

2151:                                             ; preds = %2145
  %2152 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2152, i32 0) #6
  br label %2153

2153:                                             ; preds = %2151, %2145, %2142, %2138
  %2154 = load i64, i64* %10, align 8
  %2155 = add i64 %2118, -1
  %2156 = inttoptr i64 %2155 to i32*
  %2157 = trunc i64 %2154 to i32
  store atomic volatile i32 %2157, i32* %2156 monotonic, align 4
  %2158 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2118, i16 zeroext 133, i32 0, i8 zeroext 3, i32 0) #6
  %2159 = and i64 %2158, 1
  %2160 = icmp eq i64 %2159, 0
  br i1 %2160, label %2161, label %2162, !prof !4

2161:                                             ; preds = %2153
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2162:                                             ; preds = %2115, %2153
  %2163 = phi i64 [ %2158, %2153 ], [ %2118, %2115 ]
  %2164 = and i64 %2163, 1
  %2165 = icmp eq i64 %2164, 0
  br i1 %2165, label %6363, label %2166

2166:                                             ; preds = %2162
  %2167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 42
  store i64 %2163, i64* %2167, align 8
  %2168 = load i8, i8* %66, align 4, !range !3
  %2169 = icmp eq i8 %2168, 0
  br i1 %2169, label %2177, label %2170

2170:                                             ; preds = %2166
  %2171 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2172 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2171, align 8
  %2173 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2174 = load atomic i32, i32* %2173 monotonic, align 4
  %2175 = icmp eq i32 %2174, 2
  br i1 %2175, label %2176, label %2177, !prof !4

2176:                                             ; preds = %2170
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2172) #6
  br label %2177

2177:                                             ; preds = %2176, %2170, %2166
  %2178 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2179 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2180 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2179, i32 40, i32 0) #6
  %2181 = and i64 %2180, 1
  %2182 = icmp eq i64 %2181, 0
  br i1 %2182, label %2224, label %2183

2183:                                             ; preds = %2177
  %2184 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2185 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2186 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2184, %2185
  br i1 %2186, label %2189, label %2187

2187:                                             ; preds = %2183
  %2188 = add i64 %2180, -1
  br label %2192

2189:                                             ; preds = %2192, %2183
  %2190 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2191 = icmp eq i8 %2190, 0
  br i1 %2191, label %2204, label %2200

2192:                                             ; preds = %2192, %2187
  %2193 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2184, %2187 ], [ %2198, %2192 ]
  %2194 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2193, align 8
  %2195 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2194 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2196 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2195, align 8
  %2197 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2196, align 8
  call void %2197(%"class.v8::internal::HeapObjectAllocationTracker"* %2194, i64 %2188, i32 40) #6
  %2198 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2193, i64 1
  %2199 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2198, %2185
  br i1 %2199, label %2189, label %2192

2200:                                             ; preds = %2189
  %2201 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2202 = load i32, i32* %2201, align 8
  %2203 = add i32 %2202, 1
  store i32 %2203, i32* %2201, align 8
  br label %2215

2204:                                             ; preds = %2189
  %2205 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2206 = icmp sgt i32 %2205, 0
  br i1 %2206, label %2207, label %2215

2207:                                             ; preds = %2204
  %2208 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2209 = load i32, i32* %2208, align 8
  %2210 = add i32 %2209, 1
  store i32 %2210, i32* %2208, align 8
  %2211 = urem i32 %2210, %2205
  %2212 = icmp eq i32 %2211, 0
  br i1 %2212, label %2213, label %2215

2213:                                             ; preds = %2207
  %2214 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2214, i32 0) #6
  br label %2215

2215:                                             ; preds = %2213, %2207, %2204, %2200
  %2216 = load i64, i64* %10, align 8
  %2217 = add i64 %2180, -1
  %2218 = inttoptr i64 %2217 to i32*
  %2219 = trunc i64 %2216 to i32
  store atomic volatile i32 %2219, i32* %2218 monotonic, align 4
  %2220 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2180, i16 zeroext 169, i32 0, i8 zeroext 3, i32 0) #6
  %2221 = and i64 %2220, 1
  %2222 = icmp eq i64 %2221, 0
  br i1 %2222, label %2223, label %2224, !prof !4

2223:                                             ; preds = %2215
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2224:                                             ; preds = %2177, %2215
  %2225 = phi i64 [ %2220, %2215 ], [ %2180, %2177 ]
  %2226 = and i64 %2225, 1
  %2227 = icmp eq i64 %2226, 0
  br i1 %2227, label %6363, label %2228

2228:                                             ; preds = %2224
  store i64 %2225, i64* %25, align 8
  %2229 = load i8, i8* %66, align 4, !range !3
  %2230 = icmp eq i8 %2229, 0
  br i1 %2230, label %2238, label %2231

2231:                                             ; preds = %2228
  %2232 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2233 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2232, align 8
  %2234 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2235 = load atomic i32, i32* %2234 monotonic, align 4
  %2236 = icmp eq i32 %2235, 2
  br i1 %2236, label %2237, label %2238, !prof !4

2237:                                             ; preds = %2231
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2233) #6
  br label %2238

2238:                                             ; preds = %2237, %2231, %2228
  %2239 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2240 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2241 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2240, i32 40, i32 0) #6
  %2242 = and i64 %2241, 1
  %2243 = icmp eq i64 %2242, 0
  br i1 %2243, label %2285, label %2244

2244:                                             ; preds = %2238
  %2245 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2246 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2247 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2245, %2246
  br i1 %2247, label %2250, label %2248

2248:                                             ; preds = %2244
  %2249 = add i64 %2241, -1
  br label %2253

2250:                                             ; preds = %2253, %2244
  %2251 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2252 = icmp eq i8 %2251, 0
  br i1 %2252, label %2265, label %2261

2253:                                             ; preds = %2253, %2248
  %2254 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2245, %2248 ], [ %2259, %2253 ]
  %2255 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2254, align 8
  %2256 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2255 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2257 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2256, align 8
  %2258 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2257, align 8
  call void %2258(%"class.v8::internal::HeapObjectAllocationTracker"* %2255, i64 %2249, i32 40) #6
  %2259 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2254, i64 1
  %2260 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2259, %2246
  br i1 %2260, label %2250, label %2253

2261:                                             ; preds = %2250
  %2262 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2263 = load i32, i32* %2262, align 8
  %2264 = add i32 %2263, 1
  store i32 %2264, i32* %2262, align 8
  br label %2276

2265:                                             ; preds = %2250
  %2266 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2267 = icmp sgt i32 %2266, 0
  br i1 %2267, label %2268, label %2276

2268:                                             ; preds = %2265
  %2269 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2270 = load i32, i32* %2269, align 8
  %2271 = add i32 %2270, 1
  store i32 %2271, i32* %2269, align 8
  %2272 = urem i32 %2271, %2266
  %2273 = icmp eq i32 %2272, 0
  br i1 %2273, label %2274, label %2276

2274:                                             ; preds = %2268
  %2275 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2275, i32 0) #6
  br label %2276

2276:                                             ; preds = %2274, %2268, %2265, %2261
  %2277 = load i64, i64* %10, align 8
  %2278 = add i64 %2241, -1
  %2279 = inttoptr i64 %2278 to i32*
  %2280 = trunc i64 %2277 to i32
  store atomic volatile i32 %2280, i32* %2279 monotonic, align 4
  %2281 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2241, i16 zeroext 176, i32 0, i8 zeroext 3, i32 0) #6
  %2282 = and i64 %2281, 1
  %2283 = icmp eq i64 %2282, 0
  br i1 %2283, label %2284, label %2285, !prof !4

2284:                                             ; preds = %2276
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2285:                                             ; preds = %2238, %2276
  %2286 = phi i64 [ %2281, %2276 ], [ %2241, %2238 ]
  %2287 = and i64 %2286, 1
  %2288 = icmp eq i64 %2287, 0
  br i1 %2288, label %6363, label %2289

2289:                                             ; preds = %2285
  %2290 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 58
  store i64 %2286, i64* %2290, align 8
  %2291 = load i8, i8* %66, align 4, !range !3
  %2292 = icmp eq i8 %2291, 0
  br i1 %2292, label %2300, label %2293

2293:                                             ; preds = %2289
  %2294 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2295 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2294, align 8
  %2296 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2297 = load atomic i32, i32* %2296 monotonic, align 4
  %2298 = icmp eq i32 %2297, 2
  br i1 %2298, label %2299, label %2300, !prof !4

2299:                                             ; preds = %2293
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2295) #6
  br label %2300

2300:                                             ; preds = %2299, %2293, %2289
  %2301 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2302 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2303 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2302, i32 40, i32 0) #6
  %2304 = and i64 %2303, 1
  %2305 = icmp eq i64 %2304, 0
  br i1 %2305, label %2347, label %2306

2306:                                             ; preds = %2300
  %2307 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2308 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2309 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2307, %2308
  br i1 %2309, label %2312, label %2310

2310:                                             ; preds = %2306
  %2311 = add i64 %2303, -1
  br label %2315

2312:                                             ; preds = %2315, %2306
  %2313 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2314 = icmp eq i8 %2313, 0
  br i1 %2314, label %2327, label %2323

2315:                                             ; preds = %2315, %2310
  %2316 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2307, %2310 ], [ %2321, %2315 ]
  %2317 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2316, align 8
  %2318 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2317 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2319 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2318, align 8
  %2320 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2319, align 8
  call void %2320(%"class.v8::internal::HeapObjectAllocationTracker"* %2317, i64 %2311, i32 40) #6
  %2321 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2316, i64 1
  %2322 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2321, %2308
  br i1 %2322, label %2312, label %2315

2323:                                             ; preds = %2312
  %2324 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2325 = load i32, i32* %2324, align 8
  %2326 = add i32 %2325, 1
  store i32 %2326, i32* %2324, align 8
  br label %2338

2327:                                             ; preds = %2312
  %2328 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2329 = icmp sgt i32 %2328, 0
  br i1 %2329, label %2330, label %2338

2330:                                             ; preds = %2327
  %2331 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2332 = load i32, i32* %2331, align 8
  %2333 = add i32 %2332, 1
  store i32 %2333, i32* %2331, align 8
  %2334 = urem i32 %2333, %2328
  %2335 = icmp eq i32 %2334, 0
  br i1 %2335, label %2336, label %2338

2336:                                             ; preds = %2330
  %2337 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2337, i32 0) #6
  br label %2338

2338:                                             ; preds = %2336, %2330, %2327, %2323
  %2339 = load i64, i64* %10, align 8
  %2340 = add i64 %2303, -1
  %2341 = inttoptr i64 %2340 to i32*
  %2342 = trunc i64 %2339 to i32
  store atomic volatile i32 %2342, i32* %2341 monotonic, align 4
  %2343 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2303, i16 zeroext 150, i32 0, i8 zeroext 3, i32 0) #6
  %2344 = and i64 %2343, 1
  %2345 = icmp eq i64 %2344, 0
  br i1 %2345, label %2346, label %2347, !prof !4

2346:                                             ; preds = %2338
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2347:                                             ; preds = %2300, %2338
  %2348 = phi i64 [ %2343, %2338 ], [ %2303, %2300 ]
  %2349 = and i64 %2348, 1
  %2350 = icmp eq i64 %2349, 0
  br i1 %2350, label %6363, label %2351

2351:                                             ; preds = %2347
  %2352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 63
  store i64 %2348, i64* %2352, align 8
  %2353 = load i8, i8* %66, align 4, !range !3
  %2354 = icmp eq i8 %2353, 0
  br i1 %2354, label %2362, label %2355

2355:                                             ; preds = %2351
  %2356 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2357 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2356, align 8
  %2358 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2359 = load atomic i32, i32* %2358 monotonic, align 4
  %2360 = icmp eq i32 %2359, 2
  br i1 %2360, label %2361, label %2362, !prof !4

2361:                                             ; preds = %2355
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2357) #6
  br label %2362

2362:                                             ; preds = %2361, %2355, %2351
  %2363 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2364 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2365 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2364, i32 40, i32 0) #6
  %2366 = and i64 %2365, 1
  %2367 = icmp eq i64 %2366, 0
  br i1 %2367, label %2409, label %2368

2368:                                             ; preds = %2362
  %2369 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2370 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2371 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2369, %2370
  br i1 %2371, label %2374, label %2372

2372:                                             ; preds = %2368
  %2373 = add i64 %2365, -1
  br label %2377

2374:                                             ; preds = %2377, %2368
  %2375 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2376 = icmp eq i8 %2375, 0
  br i1 %2376, label %2389, label %2385

2377:                                             ; preds = %2377, %2372
  %2378 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2369, %2372 ], [ %2383, %2377 ]
  %2379 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2378, align 8
  %2380 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2379 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2381 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2380, align 8
  %2382 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2381, align 8
  call void %2382(%"class.v8::internal::HeapObjectAllocationTracker"* %2379, i64 %2373, i32 40) #6
  %2383 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2378, i64 1
  %2384 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2383, %2370
  br i1 %2384, label %2374, label %2377

2385:                                             ; preds = %2374
  %2386 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2387 = load i32, i32* %2386, align 8
  %2388 = add i32 %2387, 1
  store i32 %2388, i32* %2386, align 8
  br label %2400

2389:                                             ; preds = %2374
  %2390 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2391 = icmp sgt i32 %2390, 0
  br i1 %2391, label %2392, label %2400

2392:                                             ; preds = %2389
  %2393 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2394 = load i32, i32* %2393, align 8
  %2395 = add i32 %2394, 1
  store i32 %2395, i32* %2393, align 8
  %2396 = urem i32 %2395, %2390
  %2397 = icmp eq i32 %2396, 0
  br i1 %2397, label %2398, label %2400

2398:                                             ; preds = %2392
  %2399 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2399, i32 0) #6
  br label %2400

2400:                                             ; preds = %2398, %2392, %2389, %2385
  %2401 = load i64, i64* %10, align 8
  %2402 = add i64 %2365, -1
  %2403 = inttoptr i64 %2402 to i32*
  %2404 = trunc i64 %2401 to i32
  store atomic volatile i32 %2404, i32* %2403 monotonic, align 4
  %2405 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2365, i16 zeroext 151, i32 0, i8 zeroext 3, i32 0) #6
  %2406 = and i64 %2405, 1
  %2407 = icmp eq i64 %2406, 0
  br i1 %2407, label %2408, label %2409, !prof !4

2408:                                             ; preds = %2400
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2409:                                             ; preds = %2362, %2400
  %2410 = phi i64 [ %2405, %2400 ], [ %2365, %2362 ]
  %2411 = and i64 %2410, 1
  %2412 = icmp eq i64 %2411, 0
  br i1 %2412, label %6363, label %2413

2413:                                             ; preds = %2409
  %2414 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 64
  store i64 %2410, i64* %2414, align 8
  %2415 = load i8, i8* %66, align 4, !range !3
  %2416 = icmp eq i8 %2415, 0
  br i1 %2416, label %2424, label %2417

2417:                                             ; preds = %2413
  %2418 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2419 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2418, align 8
  %2420 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2421 = load atomic i32, i32* %2420 monotonic, align 4
  %2422 = icmp eq i32 %2421, 2
  br i1 %2422, label %2423, label %2424, !prof !4

2423:                                             ; preds = %2417
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2419) #6
  br label %2424

2424:                                             ; preds = %2423, %2417, %2413
  %2425 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2426 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2427 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2426, i32 40, i32 0) #6
  %2428 = and i64 %2427, 1
  %2429 = icmp eq i64 %2428, 0
  br i1 %2429, label %2471, label %2430

2430:                                             ; preds = %2424
  %2431 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2432 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2433 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2431, %2432
  br i1 %2433, label %2436, label %2434

2434:                                             ; preds = %2430
  %2435 = add i64 %2427, -1
  br label %2439

2436:                                             ; preds = %2439, %2430
  %2437 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2438 = icmp eq i8 %2437, 0
  br i1 %2438, label %2451, label %2447

2439:                                             ; preds = %2439, %2434
  %2440 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2431, %2434 ], [ %2445, %2439 ]
  %2441 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2440, align 8
  %2442 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2441 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2443 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2442, align 8
  %2444 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2443, align 8
  call void %2444(%"class.v8::internal::HeapObjectAllocationTracker"* %2441, i64 %2435, i32 40) #6
  %2445 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2440, i64 1
  %2446 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2445, %2432
  br i1 %2446, label %2436, label %2439

2447:                                             ; preds = %2436
  %2448 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2449 = load i32, i32* %2448, align 8
  %2450 = add i32 %2449, 1
  store i32 %2450, i32* %2448, align 8
  br label %2462

2451:                                             ; preds = %2436
  %2452 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2453 = icmp sgt i32 %2452, 0
  br i1 %2453, label %2454, label %2462

2454:                                             ; preds = %2451
  %2455 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2456 = load i32, i32* %2455, align 8
  %2457 = add i32 %2456, 1
  store i32 %2457, i32* %2455, align 8
  %2458 = urem i32 %2457, %2452
  %2459 = icmp eq i32 %2458, 0
  br i1 %2459, label %2460, label %2462

2460:                                             ; preds = %2454
  %2461 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2461, i32 0) #6
  br label %2462

2462:                                             ; preds = %2460, %2454, %2451, %2447
  %2463 = load i64, i64* %10, align 8
  %2464 = add i64 %2427, -1
  %2465 = inttoptr i64 %2464 to i32*
  %2466 = trunc i64 %2463 to i32
  store atomic volatile i32 %2466, i32* %2465 monotonic, align 4
  %2467 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2427, i16 zeroext 152, i32 0, i8 zeroext 3, i32 0) #6
  %2468 = and i64 %2467, 1
  %2469 = icmp eq i64 %2468, 0
  br i1 %2469, label %2470, label %2471, !prof !4

2470:                                             ; preds = %2462
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2471:                                             ; preds = %2424, %2462
  %2472 = phi i64 [ %2467, %2462 ], [ %2427, %2424 ]
  %2473 = and i64 %2472, 1
  %2474 = icmp eq i64 %2473, 0
  br i1 %2474, label %6363, label %2475

2475:                                             ; preds = %2471
  %2476 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 65
  store i64 %2472, i64* %2476, align 8
  %2477 = load i8, i8* %66, align 4, !range !3
  %2478 = icmp eq i8 %2477, 0
  br i1 %2478, label %2486, label %2479

2479:                                             ; preds = %2475
  %2480 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2481 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2480, align 8
  %2482 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2483 = load atomic i32, i32* %2482 monotonic, align 4
  %2484 = icmp eq i32 %2483, 2
  br i1 %2484, label %2485, label %2486, !prof !4

2485:                                             ; preds = %2479
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2481) #6
  br label %2486

2486:                                             ; preds = %2485, %2479, %2475
  %2487 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2488 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2489 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2488, i32 40, i32 0) #6
  %2490 = and i64 %2489, 1
  %2491 = icmp eq i64 %2490, 0
  br i1 %2491, label %2533, label %2492

2492:                                             ; preds = %2486
  %2493 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2494 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2495 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2493, %2494
  br i1 %2495, label %2498, label %2496

2496:                                             ; preds = %2492
  %2497 = add i64 %2489, -1
  br label %2501

2498:                                             ; preds = %2501, %2492
  %2499 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2500 = icmp eq i8 %2499, 0
  br i1 %2500, label %2513, label %2509

2501:                                             ; preds = %2501, %2496
  %2502 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2493, %2496 ], [ %2507, %2501 ]
  %2503 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2502, align 8
  %2504 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2503 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2505 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2504, align 8
  %2506 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2505, align 8
  call void %2506(%"class.v8::internal::HeapObjectAllocationTracker"* %2503, i64 %2497, i32 40) #6
  %2507 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2502, i64 1
  %2508 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2507, %2494
  br i1 %2508, label %2498, label %2501

2509:                                             ; preds = %2498
  %2510 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2511 = load i32, i32* %2510, align 8
  %2512 = add i32 %2511, 1
  store i32 %2512, i32* %2510, align 8
  br label %2524

2513:                                             ; preds = %2498
  %2514 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2515 = icmp sgt i32 %2514, 0
  br i1 %2515, label %2516, label %2524

2516:                                             ; preds = %2513
  %2517 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2518 = load i32, i32* %2517, align 8
  %2519 = add i32 %2518, 1
  store i32 %2519, i32* %2517, align 8
  %2520 = urem i32 %2519, %2514
  %2521 = icmp eq i32 %2520, 0
  br i1 %2521, label %2522, label %2524

2522:                                             ; preds = %2516
  %2523 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2523, i32 0) #6
  br label %2524

2524:                                             ; preds = %2522, %2516, %2513, %2509
  %2525 = load i64, i64* %10, align 8
  %2526 = add i64 %2489, -1
  %2527 = inttoptr i64 %2526 to i32*
  %2528 = trunc i64 %2525 to i32
  store atomic volatile i32 %2528, i32* %2527 monotonic, align 4
  %2529 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2489, i16 zeroext 158, i32 16, i8 zeroext 3, i32 0) #6
  %2530 = and i64 %2529, 1
  %2531 = icmp eq i64 %2530, 0
  br i1 %2531, label %2532, label %2533, !prof !4

2532:                                             ; preds = %2524
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2533:                                             ; preds = %2486, %2524
  %2534 = phi i64 [ %2529, %2524 ], [ %2489, %2486 ]
  %2535 = and i64 %2534, 1
  %2536 = icmp eq i64 %2535, 0
  br i1 %2536, label %6363, label %2537

2537:                                             ; preds = %2533
  %2538 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 564
  store i64 %2534, i64* %2538, align 8
  %2539 = load i8, i8* %66, align 4, !range !3
  %2540 = icmp eq i8 %2539, 0
  br i1 %2540, label %2548, label %2541

2541:                                             ; preds = %2537
  %2542 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2543 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2542, align 8
  %2544 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2545 = load atomic i32, i32* %2544 monotonic, align 4
  %2546 = icmp eq i32 %2545, 2
  br i1 %2546, label %2547, label %2548, !prof !4

2547:                                             ; preds = %2541
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2543) #6
  br label %2548

2548:                                             ; preds = %2547, %2541, %2537
  %2549 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2550 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2551 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2550, i32 40, i32 0) #6
  %2552 = and i64 %2551, 1
  %2553 = icmp eq i64 %2552, 0
  br i1 %2553, label %2595, label %2554

2554:                                             ; preds = %2548
  %2555 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2556 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2557 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2555, %2556
  br i1 %2557, label %2560, label %2558

2558:                                             ; preds = %2554
  %2559 = add i64 %2551, -1
  br label %2563

2560:                                             ; preds = %2563, %2554
  %2561 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2562 = icmp eq i8 %2561, 0
  br i1 %2562, label %2575, label %2571

2563:                                             ; preds = %2563, %2558
  %2564 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2555, %2558 ], [ %2569, %2563 ]
  %2565 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2564, align 8
  %2566 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2565 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2567 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2566, align 8
  %2568 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2567, align 8
  call void %2568(%"class.v8::internal::HeapObjectAllocationTracker"* %2565, i64 %2559, i32 40) #6
  %2569 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2564, i64 1
  %2570 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2569, %2556
  br i1 %2570, label %2560, label %2563

2571:                                             ; preds = %2560
  %2572 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2573 = load i32, i32* %2572, align 8
  %2574 = add i32 %2573, 1
  store i32 %2574, i32* %2572, align 8
  br label %2586

2575:                                             ; preds = %2560
  %2576 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2577 = icmp sgt i32 %2576, 0
  br i1 %2577, label %2578, label %2586

2578:                                             ; preds = %2575
  %2579 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2580 = load i32, i32* %2579, align 8
  %2581 = add i32 %2580, 1
  store i32 %2581, i32* %2579, align 8
  %2582 = urem i32 %2581, %2576
  %2583 = icmp eq i32 %2582, 0
  br i1 %2583, label %2584, label %2586

2584:                                             ; preds = %2578
  %2585 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2585, i32 0) #6
  br label %2586

2586:                                             ; preds = %2584, %2578, %2575, %2571
  %2587 = load i64, i64* %10, align 8
  %2588 = add i64 %2551, -1
  %2589 = inttoptr i64 %2588 to i32*
  %2590 = trunc i64 %2587 to i32
  store atomic volatile i32 %2590, i32* %2589 monotonic, align 4
  %2591 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2551, i16 zeroext 157, i32 20, i8 zeroext 3, i32 0) #6
  %2592 = and i64 %2591, 1
  %2593 = icmp eq i64 %2592, 0
  br i1 %2593, label %2594, label %2595, !prof !4

2594:                                             ; preds = %2586
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2595:                                             ; preds = %2548, %2586
  %2596 = phi i64 [ %2591, %2586 ], [ %2551, %2548 ]
  %2597 = and i64 %2596, 1
  %2598 = icmp eq i64 %2597, 0
  br i1 %2598, label %6363, label %2599

2599:                                             ; preds = %2595
  %2600 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 565
  store i64 %2596, i64* %2600, align 8
  %2601 = load i8, i8* %66, align 4, !range !3
  %2602 = icmp eq i8 %2601, 0
  br i1 %2602, label %2610, label %2603

2603:                                             ; preds = %2599
  %2604 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2605 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2604, align 8
  %2606 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2607 = load atomic i32, i32* %2606 monotonic, align 4
  %2608 = icmp eq i32 %2607, 2
  br i1 %2608, label %2609, label %2610, !prof !4

2609:                                             ; preds = %2603
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2605) #6
  br label %2610

2610:                                             ; preds = %2609, %2603, %2599
  %2611 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2612 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2613 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2612, i32 40, i32 0) #6
  %2614 = and i64 %2613, 1
  %2615 = icmp eq i64 %2614, 0
  br i1 %2615, label %2657, label %2616

2616:                                             ; preds = %2610
  %2617 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2618 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2619 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2617, %2618
  br i1 %2619, label %2622, label %2620

2620:                                             ; preds = %2616
  %2621 = add i64 %2613, -1
  br label %2625

2622:                                             ; preds = %2625, %2616
  %2623 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2624 = icmp eq i8 %2623, 0
  br i1 %2624, label %2637, label %2633

2625:                                             ; preds = %2625, %2620
  %2626 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2617, %2620 ], [ %2631, %2625 ]
  %2627 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2626, align 8
  %2628 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2627 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2629 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2628, align 8
  %2630 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2629, align 8
  call void %2630(%"class.v8::internal::HeapObjectAllocationTracker"* %2627, i64 %2621, i32 40) #6
  %2631 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2626, i64 1
  %2632 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2631, %2618
  br i1 %2632, label %2622, label %2625

2633:                                             ; preds = %2622
  %2634 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2635 = load i32, i32* %2634, align 8
  %2636 = add i32 %2635, 1
  store i32 %2636, i32* %2634, align 8
  br label %2648

2637:                                             ; preds = %2622
  %2638 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2639 = icmp sgt i32 %2638, 0
  br i1 %2639, label %2640, label %2648

2640:                                             ; preds = %2637
  %2641 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2642 = load i32, i32* %2641, align 8
  %2643 = add i32 %2642, 1
  store i32 %2643, i32* %2641, align 8
  %2644 = urem i32 %2643, %2638
  %2645 = icmp eq i32 %2644, 0
  br i1 %2645, label %2646, label %2648

2646:                                             ; preds = %2640
  %2647 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2647, i32 0) #6
  br label %2648

2648:                                             ; preds = %2646, %2640, %2637, %2633
  %2649 = load i64, i64* %10, align 8
  %2650 = add i64 %2613, -1
  %2651 = inttoptr i64 %2650 to i32*
  %2652 = trunc i64 %2649 to i32
  store atomic volatile i32 %2652, i32* %2651 monotonic, align 4
  %2653 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2613, i16 zeroext 174, i32 28, i8 zeroext 3, i32 0) #6
  %2654 = and i64 %2653, 1
  %2655 = icmp eq i64 %2654, 0
  br i1 %2655, label %2656, label %2657, !prof !4

2656:                                             ; preds = %2648
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2657:                                             ; preds = %2610, %2648
  %2658 = phi i64 [ %2653, %2648 ], [ %2613, %2610 ]
  %2659 = and i64 %2658, 1
  %2660 = icmp eq i64 %2659, 0
  br i1 %2660, label %6363, label %2661

2661:                                             ; preds = %2657
  %2662 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 566
  store i64 %2658, i64* %2662, align 8
  %2663 = load i8, i8* %66, align 4, !range !3
  %2664 = icmp eq i8 %2663, 0
  br i1 %2664, label %2672, label %2665

2665:                                             ; preds = %2661
  %2666 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2667 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2666, align 8
  %2668 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2669 = load atomic i32, i32* %2668 monotonic, align 4
  %2670 = icmp eq i32 %2669, 2
  br i1 %2670, label %2671, label %2672, !prof !4

2671:                                             ; preds = %2665
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2667) #6
  br label %2672

2672:                                             ; preds = %2671, %2665, %2661
  %2673 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2674 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2675 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2674, i32 40, i32 0) #6
  %2676 = and i64 %2675, 1
  %2677 = icmp eq i64 %2676, 0
  br i1 %2677, label %2719, label %2678

2678:                                             ; preds = %2672
  %2679 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2680 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2681 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2679, %2680
  br i1 %2681, label %2684, label %2682

2682:                                             ; preds = %2678
  %2683 = add i64 %2675, -1
  br label %2687

2684:                                             ; preds = %2687, %2678
  %2685 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2686 = icmp eq i8 %2685, 0
  br i1 %2686, label %2699, label %2695

2687:                                             ; preds = %2687, %2682
  %2688 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2679, %2682 ], [ %2693, %2687 ]
  %2689 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2688, align 8
  %2690 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2689 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2691 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2690, align 8
  %2692 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2691, align 8
  call void %2692(%"class.v8::internal::HeapObjectAllocationTracker"* %2689, i64 %2683, i32 40) #6
  %2693 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2688, i64 1
  %2694 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2693, %2680
  br i1 %2694, label %2684, label %2687

2695:                                             ; preds = %2684
  %2696 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2697 = load i32, i32* %2696, align 8
  %2698 = add i32 %2697, 1
  store i32 %2698, i32* %2696, align 8
  br label %2710

2699:                                             ; preds = %2684
  %2700 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2701 = icmp sgt i32 %2700, 0
  br i1 %2701, label %2702, label %2710

2702:                                             ; preds = %2699
  %2703 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2704 = load i32, i32* %2703, align 8
  %2705 = add i32 %2704, 1
  store i32 %2705, i32* %2703, align 8
  %2706 = urem i32 %2705, %2700
  %2707 = icmp eq i32 %2706, 0
  br i1 %2707, label %2708, label %2710

2708:                                             ; preds = %2702
  %2709 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2709, i32 0) #6
  br label %2710

2710:                                             ; preds = %2708, %2702, %2699, %2695
  %2711 = load i64, i64* %10, align 8
  %2712 = add i64 %2675, -1
  %2713 = inttoptr i64 %2712 to i32*
  %2714 = trunc i64 %2711 to i32
  store atomic volatile i32 %2714, i32* %2713 monotonic, align 4
  %2715 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2675, i16 zeroext 170, i32 12, i8 zeroext 3, i32 0) #6
  %2716 = and i64 %2715, 1
  %2717 = icmp eq i64 %2716, 0
  br i1 %2717, label %2718, label %2719, !prof !4

2718:                                             ; preds = %2710
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2719:                                             ; preds = %2672, %2710
  %2720 = phi i64 [ %2715, %2710 ], [ %2675, %2672 ]
  %2721 = and i64 %2720, 1
  %2722 = icmp eq i64 %2721, 0
  br i1 %2722, label %6363, label %2723

2723:                                             ; preds = %2719
  %2724 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 567
  store i64 %2720, i64* %2724, align 8
  %2725 = load i8, i8* %66, align 4, !range !3
  %2726 = icmp eq i8 %2725, 0
  br i1 %2726, label %2734, label %2727

2727:                                             ; preds = %2723
  %2728 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2729 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2728, align 8
  %2730 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2729, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2731 = load atomic i32, i32* %2730 monotonic, align 4
  %2732 = icmp eq i32 %2731, 2
  br i1 %2732, label %2733, label %2734, !prof !4

2733:                                             ; preds = %2727
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2729) #6
  br label %2734

2734:                                             ; preds = %2733, %2727, %2723
  %2735 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2736 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2737 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2736, i32 40, i32 0) #6
  %2738 = and i64 %2737, 1
  %2739 = icmp eq i64 %2738, 0
  br i1 %2739, label %2781, label %2740

2740:                                             ; preds = %2734
  %2741 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2742 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2743 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2741, %2742
  br i1 %2743, label %2746, label %2744

2744:                                             ; preds = %2740
  %2745 = add i64 %2737, -1
  br label %2749

2746:                                             ; preds = %2749, %2740
  %2747 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2748 = icmp eq i8 %2747, 0
  br i1 %2748, label %2761, label %2757

2749:                                             ; preds = %2749, %2744
  %2750 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2741, %2744 ], [ %2755, %2749 ]
  %2751 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2750, align 8
  %2752 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2751 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2753 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2752, align 8
  %2754 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2753, align 8
  call void %2754(%"class.v8::internal::HeapObjectAllocationTracker"* %2751, i64 %2745, i32 40) #6
  %2755 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2750, i64 1
  %2756 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2755, %2742
  br i1 %2756, label %2746, label %2749

2757:                                             ; preds = %2746
  %2758 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2759 = load i32, i32* %2758, align 8
  %2760 = add i32 %2759, 1
  store i32 %2760, i32* %2758, align 8
  br label %2772

2761:                                             ; preds = %2746
  %2762 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2763 = icmp sgt i32 %2762, 0
  br i1 %2763, label %2764, label %2772

2764:                                             ; preds = %2761
  %2765 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2766 = load i32, i32* %2765, align 8
  %2767 = add i32 %2766, 1
  store i32 %2767, i32* %2765, align 8
  %2768 = urem i32 %2767, %2762
  %2769 = icmp eq i32 %2768, 0
  br i1 %2769, label %2770, label %2772

2770:                                             ; preds = %2764
  %2771 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2771, i32 0) #6
  br label %2772

2772:                                             ; preds = %2770, %2764, %2761, %2757
  %2773 = load i64, i64* %10, align 8
  %2774 = add i64 %2737, -1
  %2775 = inttoptr i64 %2774 to i32*
  %2776 = trunc i64 %2773 to i32
  store atomic volatile i32 %2776, i32* %2775 monotonic, align 4
  %2777 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2737, i16 zeroext 181, i32 12, i8 zeroext 3, i32 0) #6
  %2778 = and i64 %2777, 1
  %2779 = icmp eq i64 %2778, 0
  br i1 %2779, label %2780, label %2781, !prof !4

2780:                                             ; preds = %2772
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2781:                                             ; preds = %2734, %2772
  %2782 = phi i64 [ %2777, %2772 ], [ %2737, %2734 ]
  %2783 = and i64 %2782, 1
  %2784 = icmp eq i64 %2783, 0
  br i1 %2784, label %6363, label %2785

2785:                                             ; preds = %2781
  %2786 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 568
  store i64 %2782, i64* %2786, align 8
  %2787 = load i8, i8* %66, align 4, !range !3
  %2788 = icmp eq i8 %2787, 0
  br i1 %2788, label %2796, label %2789

2789:                                             ; preds = %2785
  %2790 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2791 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2790, align 8
  %2792 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2793 = load atomic i32, i32* %2792 monotonic, align 4
  %2794 = icmp eq i32 %2793, 2
  br i1 %2794, label %2795, label %2796, !prof !4

2795:                                             ; preds = %2789
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2791) #6
  br label %2796

2796:                                             ; preds = %2795, %2789, %2785
  %2797 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2798 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2799 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2798, i32 40, i32 0) #6
  %2800 = and i64 %2799, 1
  %2801 = icmp eq i64 %2800, 0
  br i1 %2801, label %2843, label %2802

2802:                                             ; preds = %2796
  %2803 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2804 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2805 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2803, %2804
  br i1 %2805, label %2808, label %2806

2806:                                             ; preds = %2802
  %2807 = add i64 %2799, -1
  br label %2811

2808:                                             ; preds = %2811, %2802
  %2809 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2810 = icmp eq i8 %2809, 0
  br i1 %2810, label %2823, label %2819

2811:                                             ; preds = %2811, %2806
  %2812 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2803, %2806 ], [ %2817, %2811 ]
  %2813 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2812, align 8
  %2814 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2813 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2815 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2814, align 8
  %2816 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2815, align 8
  call void %2816(%"class.v8::internal::HeapObjectAllocationTracker"* %2813, i64 %2807, i32 40) #6
  %2817 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2812, i64 1
  %2818 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2817, %2804
  br i1 %2818, label %2808, label %2811

2819:                                             ; preds = %2808
  %2820 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2821 = load i32, i32* %2820, align 8
  %2822 = add i32 %2821, 1
  store i32 %2822, i32* %2820, align 8
  br label %2834

2823:                                             ; preds = %2808
  %2824 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2825 = icmp sgt i32 %2824, 0
  br i1 %2825, label %2826, label %2834

2826:                                             ; preds = %2823
  %2827 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2828 = load i32, i32* %2827, align 8
  %2829 = add i32 %2828, 1
  store i32 %2829, i32* %2827, align 8
  %2830 = urem i32 %2829, %2824
  %2831 = icmp eq i32 %2830, 0
  br i1 %2831, label %2832, label %2834

2832:                                             ; preds = %2826
  %2833 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2833, i32 0) #6
  br label %2834

2834:                                             ; preds = %2832, %2826, %2823, %2819
  %2835 = load i64, i64* %10, align 8
  %2836 = add i64 %2799, -1
  %2837 = inttoptr i64 %2836 to i32*
  %2838 = trunc i64 %2835 to i32
  store atomic volatile i32 %2838, i32* %2837 monotonic, align 4
  %2839 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2799, i16 zeroext 180, i32 12, i8 zeroext 3, i32 0) #6
  %2840 = and i64 %2839, 1
  %2841 = icmp eq i64 %2840, 0
  br i1 %2841, label %2842, label %2843, !prof !4

2842:                                             ; preds = %2834
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2843:                                             ; preds = %2796, %2834
  %2844 = phi i64 [ %2839, %2834 ], [ %2799, %2796 ]
  %2845 = and i64 %2844, 1
  %2846 = icmp eq i64 %2845, 0
  br i1 %2846, label %6363, label %2847

2847:                                             ; preds = %2843
  %2848 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 569
  store i64 %2844, i64* %2848, align 8
  %2849 = load i8, i8* %66, align 4, !range !3
  %2850 = icmp eq i8 %2849, 0
  br i1 %2850, label %2858, label %2851

2851:                                             ; preds = %2847
  %2852 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2853 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2852, align 8
  %2854 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2853, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2855 = load atomic i32, i32* %2854 monotonic, align 4
  %2856 = icmp eq i32 %2855, 2
  br i1 %2856, label %2857, label %2858, !prof !4

2857:                                             ; preds = %2851
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2853) #6
  br label %2858

2858:                                             ; preds = %2857, %2851, %2847
  %2859 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2860 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2861 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2860, i32 40, i32 0) #6
  %2862 = and i64 %2861, 1
  %2863 = icmp eq i64 %2862, 0
  br i1 %2863, label %2905, label %2864

2864:                                             ; preds = %2858
  %2865 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2866 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2867 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2865, %2866
  br i1 %2867, label %2870, label %2868

2868:                                             ; preds = %2864
  %2869 = add i64 %2861, -1
  br label %2873

2870:                                             ; preds = %2873, %2864
  %2871 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2872 = icmp eq i8 %2871, 0
  br i1 %2872, label %2885, label %2881

2873:                                             ; preds = %2873, %2868
  %2874 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2865, %2868 ], [ %2879, %2873 ]
  %2875 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2874, align 8
  %2876 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2875 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2877 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2876, align 8
  %2878 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2877, align 8
  call void %2878(%"class.v8::internal::HeapObjectAllocationTracker"* %2875, i64 %2869, i32 40) #6
  %2879 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2874, i64 1
  %2880 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2879, %2866
  br i1 %2880, label %2870, label %2873

2881:                                             ; preds = %2870
  %2882 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2883 = load i32, i32* %2882, align 8
  %2884 = add i32 %2883, 1
  store i32 %2884, i32* %2882, align 8
  br label %2896

2885:                                             ; preds = %2870
  %2886 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2887 = icmp sgt i32 %2886, 0
  br i1 %2887, label %2888, label %2896

2888:                                             ; preds = %2885
  %2889 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2890 = load i32, i32* %2889, align 8
  %2891 = add i32 %2890, 1
  store i32 %2891, i32* %2889, align 8
  %2892 = urem i32 %2891, %2886
  %2893 = icmp eq i32 %2892, 0
  br i1 %2893, label %2894, label %2896

2894:                                             ; preds = %2888
  %2895 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2895, i32 0) #6
  br label %2896

2896:                                             ; preds = %2894, %2888, %2885, %2881
  %2897 = load i64, i64* %10, align 8
  %2898 = add i64 %2861, -1
  %2899 = inttoptr i64 %2898 to i32*
  %2900 = trunc i64 %2897 to i32
  store atomic volatile i32 %2900, i32* %2899 monotonic, align 4
  %2901 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2861, i16 zeroext 147, i32 12, i8 zeroext 3, i32 0) #6
  %2902 = and i64 %2901, 1
  %2903 = icmp eq i64 %2902, 0
  br i1 %2903, label %2904, label %2905, !prof !4

2904:                                             ; preds = %2896
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2905:                                             ; preds = %2858, %2896
  %2906 = phi i64 [ %2901, %2896 ], [ %2861, %2858 ]
  %2907 = and i64 %2906, 1
  %2908 = icmp eq i64 %2907, 0
  br i1 %2908, label %6363, label %2909

2909:                                             ; preds = %2905
  %2910 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 570
  store i64 %2906, i64* %2910, align 8
  %2911 = load i8, i8* %66, align 4, !range !3
  %2912 = icmp eq i8 %2911, 0
  br i1 %2912, label %2920, label %2913

2913:                                             ; preds = %2909
  %2914 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2915 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2914, align 8
  %2916 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2915, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2917 = load atomic i32, i32* %2916 monotonic, align 4
  %2918 = icmp eq i32 %2917, 2
  br i1 %2918, label %2919, label %2920, !prof !4

2919:                                             ; preds = %2913
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2915) #6
  br label %2920

2920:                                             ; preds = %2919, %2913, %2909
  %2921 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2922 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2923 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2922, i32 40, i32 0) #6
  %2924 = and i64 %2923, 1
  %2925 = icmp eq i64 %2924, 0
  br i1 %2925, label %2967, label %2926

2926:                                             ; preds = %2920
  %2927 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2928 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2929 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2927, %2928
  br i1 %2929, label %2932, label %2930

2930:                                             ; preds = %2926
  %2931 = add i64 %2923, -1
  br label %2935

2932:                                             ; preds = %2935, %2926
  %2933 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2934 = icmp eq i8 %2933, 0
  br i1 %2934, label %2947, label %2943

2935:                                             ; preds = %2935, %2930
  %2936 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2927, %2930 ], [ %2941, %2935 ]
  %2937 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2936, align 8
  %2938 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2937 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %2939 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %2938, align 8
  %2940 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %2939, align 8
  call void %2940(%"class.v8::internal::HeapObjectAllocationTracker"* %2937, i64 %2931, i32 40) #6
  %2941 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2936, i64 1
  %2942 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2941, %2928
  br i1 %2942, label %2932, label %2935

2943:                                             ; preds = %2932
  %2944 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2945 = load i32, i32* %2944, align 8
  %2946 = add i32 %2945, 1
  store i32 %2946, i32* %2944, align 8
  br label %2958

2947:                                             ; preds = %2932
  %2948 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %2949 = icmp sgt i32 %2948, 0
  br i1 %2949, label %2950, label %2958

2950:                                             ; preds = %2947
  %2951 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %2952 = load i32, i32* %2951, align 8
  %2953 = add i32 %2952, 1
  store i32 %2953, i32* %2951, align 8
  %2954 = urem i32 %2953, %2948
  %2955 = icmp eq i32 %2954, 0
  br i1 %2955, label %2956, label %2958

2956:                                             ; preds = %2950
  %2957 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %2957, i32 0) #6
  br label %2958

2958:                                             ; preds = %2956, %2950, %2947, %2943
  %2959 = load i64, i64* %10, align 8
  %2960 = add i64 %2923, -1
  %2961 = inttoptr i64 %2960 to i32*
  %2962 = trunc i64 %2959 to i32
  store atomic volatile i32 %2962, i32* %2961 monotonic, align 4
  %2963 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2923, i16 zeroext 148, i32 24, i8 zeroext 3, i32 0) #6
  %2964 = and i64 %2963, 1
  %2965 = icmp eq i64 %2964, 0
  br i1 %2965, label %2966, label %2967, !prof !4

2966:                                             ; preds = %2958
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

2967:                                             ; preds = %2920, %2958
  %2968 = phi i64 [ %2963, %2958 ], [ %2923, %2920 ]
  %2969 = and i64 %2968, 1
  %2970 = icmp eq i64 %2969, 0
  br i1 %2970, label %6363, label %2971

2971:                                             ; preds = %2967
  %2972 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 571
  store i64 %2968, i64* %2972, align 8
  %2973 = load i8, i8* %66, align 4, !range !3
  %2974 = icmp eq i8 %2973, 0
  br i1 %2974, label %2982, label %2975

2975:                                             ; preds = %2971
  %2976 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %2977 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %2976, align 8
  %2978 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2977, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2979 = load atomic i32, i32* %2978 monotonic, align 4
  %2980 = icmp eq i32 %2979, 2
  br i1 %2980, label %2981, label %2982, !prof !4

2981:                                             ; preds = %2975
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %2977) #6
  br label %2982

2982:                                             ; preds = %2981, %2975, %2971
  %2983 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %2984 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %2985 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %2984, i32 40, i32 0) #6
  %2986 = and i64 %2985, 1
  %2987 = icmp eq i64 %2986, 0
  br i1 %2987, label %3029, label %2988

2988:                                             ; preds = %2982
  %2989 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %2990 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %2991 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %2989, %2990
  br i1 %2991, label %2994, label %2992

2992:                                             ; preds = %2988
  %2993 = add i64 %2985, -1
  br label %2997

2994:                                             ; preds = %2997, %2988
  %2995 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %2996 = icmp eq i8 %2995, 0
  br i1 %2996, label %3009, label %3005

2997:                                             ; preds = %2997, %2992
  %2998 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %2989, %2992 ], [ %3003, %2997 ]
  %2999 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2998, align 8
  %3000 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %2999 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3001 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3000, align 8
  %3002 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3001, align 8
  call void %3002(%"class.v8::internal::HeapObjectAllocationTracker"* %2999, i64 %2993, i32 40) #6
  %3003 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %2998, i64 1
  %3004 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3003, %2990
  br i1 %3004, label %2994, label %2997

3005:                                             ; preds = %2994
  %3006 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3007 = load i32, i32* %3006, align 8
  %3008 = add i32 %3007, 1
  store i32 %3008, i32* %3006, align 8
  br label %3020

3009:                                             ; preds = %2994
  %3010 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3011 = icmp sgt i32 %3010, 0
  br i1 %3011, label %3012, label %3020

3012:                                             ; preds = %3009
  %3013 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3014 = load i32, i32* %3013, align 8
  %3015 = add i32 %3014, 1
  store i32 %3015, i32* %3013, align 8
  %3016 = urem i32 %3015, %3010
  %3017 = icmp eq i32 %3016, 0
  br i1 %3017, label %3018, label %3020

3018:                                             ; preds = %3012
  %3019 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3019, i32 0) #6
  br label %3020

3020:                                             ; preds = %3018, %3012, %3009, %3005
  %3021 = load i64, i64* %10, align 8
  %3022 = add i64 %2985, -1
  %3023 = inttoptr i64 %3022 to i32*
  %3024 = trunc i64 %3021 to i32
  store atomic volatile i32 %3024, i32* %3023 monotonic, align 4
  %3025 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %2985, i16 zeroext 68, i32 4, i8 zeroext 3, i32 0) #6
  %3026 = and i64 %3025, 1
  %3027 = icmp eq i64 %3026, 0
  br i1 %3027, label %3028, label %3029, !prof !4

3028:                                             ; preds = %3020
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3029:                                             ; preds = %2982, %3020
  %3030 = phi i64 [ %3025, %3020 ], [ %2985, %2982 ]
  %3031 = and i64 %3030, 1
  %3032 = icmp eq i64 %3031, 0
  br i1 %3032, label %6363, label %3033

3033:                                             ; preds = %3029
  %3034 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 572
  store i64 %3030, i64* %3034, align 8
  %3035 = load i8, i8* %66, align 4, !range !3
  %3036 = icmp eq i8 %3035, 0
  br i1 %3036, label %3044, label %3037

3037:                                             ; preds = %3033
  %3038 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3039 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3038, align 8
  %3040 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3039, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3041 = load atomic i32, i32* %3040 monotonic, align 4
  %3042 = icmp eq i32 %3041, 2
  br i1 %3042, label %3043, label %3044, !prof !4

3043:                                             ; preds = %3037
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3039) #6
  br label %3044

3044:                                             ; preds = %3043, %3037, %3033
  %3045 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3046 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3047 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3046, i32 40, i32 0) #6
  %3048 = and i64 %3047, 1
  %3049 = icmp eq i64 %3048, 0
  br i1 %3049, label %3091, label %3050

3050:                                             ; preds = %3044
  %3051 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3052 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3053 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3051, %3052
  br i1 %3053, label %3056, label %3054

3054:                                             ; preds = %3050
  %3055 = add i64 %3047, -1
  br label %3059

3056:                                             ; preds = %3059, %3050
  %3057 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3058 = icmp eq i8 %3057, 0
  br i1 %3058, label %3071, label %3067

3059:                                             ; preds = %3059, %3054
  %3060 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3051, %3054 ], [ %3065, %3059 ]
  %3061 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3060, align 8
  %3062 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3061 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3063 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3062, align 8
  %3064 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3063, align 8
  call void %3064(%"class.v8::internal::HeapObjectAllocationTracker"* %3061, i64 %3055, i32 40) #6
  %3065 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3060, i64 1
  %3066 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3065, %3052
  br i1 %3066, label %3056, label %3059

3067:                                             ; preds = %3056
  %3068 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3069 = load i32, i32* %3068, align 8
  %3070 = add i32 %3069, 1
  store i32 %3070, i32* %3068, align 8
  br label %3082

3071:                                             ; preds = %3056
  %3072 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3073 = icmp sgt i32 %3072, 0
  br i1 %3073, label %3074, label %3082

3074:                                             ; preds = %3071
  %3075 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3076 = load i32, i32* %3075, align 8
  %3077 = add i32 %3076, 1
  store i32 %3077, i32* %3075, align 8
  %3078 = urem i32 %3077, %3072
  %3079 = icmp eq i32 %3078, 0
  br i1 %3079, label %3080, label %3082

3080:                                             ; preds = %3074
  %3081 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3081, i32 0) #6
  br label %3082

3082:                                             ; preds = %3080, %3074, %3071, %3067
  %3083 = load i64, i64* %10, align 8
  %3084 = add i64 %3047, -1
  %3085 = inttoptr i64 %3084 to i32*
  %3086 = trunc i64 %3083 to i32
  store atomic volatile i32 %3086, i32* %3085 monotonic, align 4
  %3087 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3047, i16 zeroext 69, i32 4, i8 zeroext 3, i32 0) #6
  %3088 = and i64 %3087, 1
  %3089 = icmp eq i64 %3088, 0
  br i1 %3089, label %3090, label %3091, !prof !4

3090:                                             ; preds = %3082
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3091:                                             ; preds = %3044, %3082
  %3092 = phi i64 [ %3087, %3082 ], [ %3047, %3044 ]
  %3093 = and i64 %3092, 1
  %3094 = icmp eq i64 %3093, 0
  br i1 %3094, label %6363, label %3095

3095:                                             ; preds = %3091
  %3096 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 573
  store i64 %3092, i64* %3096, align 8
  %3097 = load i8, i8* %66, align 4, !range !3
  %3098 = icmp eq i8 %3097, 0
  br i1 %3098, label %3106, label %3099

3099:                                             ; preds = %3095
  %3100 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3101 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3100, align 8
  %3102 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3103 = load atomic i32, i32* %3102 monotonic, align 4
  %3104 = icmp eq i32 %3103, 2
  br i1 %3104, label %3105, label %3106, !prof !4

3105:                                             ; preds = %3099
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3101) #6
  br label %3106

3106:                                             ; preds = %3105, %3099, %3095
  %3107 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3108 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3109 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3108, i32 40, i32 0) #6
  %3110 = and i64 %3109, 1
  %3111 = icmp eq i64 %3110, 0
  br i1 %3111, label %3153, label %3112

3112:                                             ; preds = %3106
  %3113 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3114 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3115 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3113, %3114
  br i1 %3115, label %3118, label %3116

3116:                                             ; preds = %3112
  %3117 = add i64 %3109, -1
  br label %3121

3118:                                             ; preds = %3121, %3112
  %3119 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3120 = icmp eq i8 %3119, 0
  br i1 %3120, label %3133, label %3129

3121:                                             ; preds = %3121, %3116
  %3122 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3113, %3116 ], [ %3127, %3121 ]
  %3123 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3122, align 8
  %3124 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3123 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3125 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3124, align 8
  %3126 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3125, align 8
  call void %3126(%"class.v8::internal::HeapObjectAllocationTracker"* %3123, i64 %3117, i32 40) #6
  %3127 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3122, i64 1
  %3128 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3127, %3114
  br i1 %3128, label %3118, label %3121

3129:                                             ; preds = %3118
  %3130 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3131 = load i32, i32* %3130, align 8
  %3132 = add i32 %3131, 1
  store i32 %3132, i32* %3130, align 8
  br label %3144

3133:                                             ; preds = %3118
  %3134 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3135 = icmp sgt i32 %3134, 0
  br i1 %3135, label %3136, label %3144

3136:                                             ; preds = %3133
  %3137 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3138 = load i32, i32* %3137, align 8
  %3139 = add i32 %3138, 1
  store i32 %3139, i32* %3137, align 8
  %3140 = urem i32 %3139, %3134
  %3141 = icmp eq i32 %3140, 0
  br i1 %3141, label %3142, label %3144

3142:                                             ; preds = %3136
  %3143 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3143, i32 0) #6
  br label %3144

3144:                                             ; preds = %3142, %3136, %3133, %3129
  %3145 = load i64, i64* %10, align 8
  %3146 = add i64 %3109, -1
  %3147 = inttoptr i64 %3146 to i32*
  %3148 = trunc i64 %3145 to i32
  store atomic volatile i32 %3148, i32* %3147 monotonic, align 4
  %3149 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3109, i16 zeroext 149, i32 24, i8 zeroext 3, i32 0) #6
  %3150 = and i64 %3149, 1
  %3151 = icmp eq i64 %3150, 0
  br i1 %3151, label %3152, label %3153, !prof !4

3152:                                             ; preds = %3144
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3153:                                             ; preds = %3106, %3144
  %3154 = phi i64 [ %3149, %3144 ], [ %3109, %3106 ]
  %3155 = and i64 %3154, 1
  %3156 = icmp eq i64 %3155, 0
  br i1 %3156, label %6363, label %3157

3157:                                             ; preds = %3153
  %3158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 576
  store i64 %3154, i64* %3158, align 8
  %3159 = load i8, i8* %66, align 4, !range !3
  %3160 = icmp eq i8 %3159, 0
  br i1 %3160, label %3168, label %3161

3161:                                             ; preds = %3157
  %3162 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3163 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3162, align 8
  %3164 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3165 = load atomic i32, i32* %3164 monotonic, align 4
  %3166 = icmp eq i32 %3165, 2
  br i1 %3166, label %3167, label %3168, !prof !4

3167:                                             ; preds = %3161
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3163) #6
  br label %3168

3168:                                             ; preds = %3167, %3161, %3157
  %3169 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3170 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3171 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3170, i32 40, i32 0) #6
  %3172 = and i64 %3171, 1
  %3173 = icmp eq i64 %3172, 0
  br i1 %3173, label %3215, label %3174

3174:                                             ; preds = %3168
  %3175 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3176 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3177 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3175, %3176
  br i1 %3177, label %3180, label %3178

3178:                                             ; preds = %3174
  %3179 = add i64 %3171, -1
  br label %3183

3180:                                             ; preds = %3183, %3174
  %3181 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3182 = icmp eq i8 %3181, 0
  br i1 %3182, label %3195, label %3191

3183:                                             ; preds = %3183, %3178
  %3184 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3175, %3178 ], [ %3189, %3183 ]
  %3185 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3184, align 8
  %3186 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3185 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3187 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3186, align 8
  %3188 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3187, align 8
  call void %3188(%"class.v8::internal::HeapObjectAllocationTracker"* %3185, i64 %3179, i32 40) #6
  %3189 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3184, i64 1
  %3190 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3189, %3176
  br i1 %3190, label %3180, label %3183

3191:                                             ; preds = %3180
  %3192 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3193 = load i32, i32* %3192, align 8
  %3194 = add i32 %3193, 1
  store i32 %3194, i32* %3192, align 8
  br label %3206

3195:                                             ; preds = %3180
  %3196 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3197 = icmp sgt i32 %3196, 0
  br i1 %3197, label %3198, label %3206

3198:                                             ; preds = %3195
  %3199 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3200 = load i32, i32* %3199, align 8
  %3201 = add i32 %3200, 1
  store i32 %3201, i32* %3199, align 8
  %3202 = urem i32 %3201, %3196
  %3203 = icmp eq i32 %3202, 0
  br i1 %3203, label %3204, label %3206

3204:                                             ; preds = %3198
  %3205 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3205, i32 0) #6
  br label %3206

3206:                                             ; preds = %3204, %3198, %3195, %3191
  %3207 = load i64, i64* %10, align 8
  %3208 = add i64 %3171, -1
  %3209 = inttoptr i64 %3208 to i32*
  %3210 = trunc i64 %3207 to i32
  store atomic volatile i32 %3210, i32* %3209 monotonic, align 4
  %3211 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3171, i16 zeroext 182, i32 68, i8 zeroext 3, i32 0) #6
  %3212 = and i64 %3211, 1
  %3213 = icmp eq i64 %3212, 0
  br i1 %3213, label %3214, label %3215, !prof !4

3214:                                             ; preds = %3206
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3215:                                             ; preds = %3168, %3206
  %3216 = phi i64 [ %3211, %3206 ], [ %3171, %3168 ]
  %3217 = and i64 %3216, 1
  %3218 = icmp eq i64 %3217, 0
  br i1 %3218, label %6363, label %3219

3219:                                             ; preds = %3215
  %3220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 577
  store i64 %3216, i64* %3220, align 8
  %3221 = load i8, i8* %66, align 4, !range !3
  %3222 = icmp eq i8 %3221, 0
  br i1 %3222, label %3230, label %3223

3223:                                             ; preds = %3219
  %3224 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3225 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3224, align 8
  %3226 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3227 = load atomic i32, i32* %3226 monotonic, align 4
  %3228 = icmp eq i32 %3227, 2
  br i1 %3228, label %3229, label %3230, !prof !4

3229:                                             ; preds = %3223
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3225) #6
  br label %3230

3230:                                             ; preds = %3229, %3223, %3219
  %3231 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3232 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3233 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3232, i32 40, i32 0) #6
  %3234 = and i64 %3233, 1
  %3235 = icmp eq i64 %3234, 0
  br i1 %3235, label %3277, label %3236

3236:                                             ; preds = %3230
  %3237 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3238 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3239 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3237, %3238
  br i1 %3239, label %3242, label %3240

3240:                                             ; preds = %3236
  %3241 = add i64 %3233, -1
  br label %3245

3242:                                             ; preds = %3245, %3236
  %3243 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3244 = icmp eq i8 %3243, 0
  br i1 %3244, label %3257, label %3253

3245:                                             ; preds = %3245, %3240
  %3246 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3237, %3240 ], [ %3251, %3245 ]
  %3247 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3246, align 8
  %3248 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3247 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3249 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3248, align 8
  %3250 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3249, align 8
  call void %3250(%"class.v8::internal::HeapObjectAllocationTracker"* %3247, i64 %3241, i32 40) #6
  %3251 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3246, i64 1
  %3252 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3251, %3238
  br i1 %3252, label %3242, label %3245

3253:                                             ; preds = %3242
  %3254 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3255 = load i32, i32* %3254, align 8
  %3256 = add i32 %3255, 1
  store i32 %3256, i32* %3254, align 8
  br label %3268

3257:                                             ; preds = %3242
  %3258 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3259 = icmp sgt i32 %3258, 0
  br i1 %3259, label %3260, label %3268

3260:                                             ; preds = %3257
  %3261 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3262 = load i32, i32* %3261, align 8
  %3263 = add i32 %3262, 1
  store i32 %3263, i32* %3261, align 8
  %3264 = urem i32 %3263, %3258
  %3265 = icmp eq i32 %3264, 0
  br i1 %3265, label %3266, label %3268

3266:                                             ; preds = %3260
  %3267 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3267, i32 0) #6
  br label %3268

3268:                                             ; preds = %3266, %3260, %3257, %3253
  %3269 = load i64, i64* %10, align 8
  %3270 = add i64 %3233, -1
  %3271 = inttoptr i64 %3270 to i32*
  %3272 = trunc i64 %3269 to i32
  store atomic volatile i32 %3272, i32* %3271 monotonic, align 4
  %3273 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3233, i16 zeroext 136, i32 0, i8 zeroext 3, i32 0) #6
  %3274 = and i64 %3273, 1
  %3275 = icmp eq i64 %3274, 0
  br i1 %3275, label %3276, label %3277, !prof !4

3276:                                             ; preds = %3268
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3277:                                             ; preds = %3230, %3268
  %3278 = phi i64 [ %3273, %3268 ], [ %3233, %3230 ]
  %3279 = and i64 %3278, 1
  %3280 = icmp eq i64 %3279, 0
  br i1 %3280, label %6363, label %3281

3281:                                             ; preds = %3277
  %3282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 561
  store i64 %3278, i64* %3282, align 8
  %3283 = load i8, i8* %66, align 4, !range !3
  %3284 = icmp eq i8 %3283, 0
  br i1 %3284, label %3292, label %3285

3285:                                             ; preds = %3281
  %3286 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3287 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3286, align 8
  %3288 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3289 = load atomic i32, i32* %3288 monotonic, align 4
  %3290 = icmp eq i32 %3289, 2
  br i1 %3290, label %3291, label %3292, !prof !4

3291:                                             ; preds = %3285
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3287) #6
  br label %3292

3292:                                             ; preds = %3291, %3285, %3281
  %3293 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3294 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3295 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3294, i32 40, i32 0) #6
  %3296 = and i64 %3295, 1
  %3297 = icmp eq i64 %3296, 0
  br i1 %3297, label %3339, label %3298

3298:                                             ; preds = %3292
  %3299 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3300 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3301 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3299, %3300
  br i1 %3301, label %3304, label %3302

3302:                                             ; preds = %3298
  %3303 = add i64 %3295, -1
  br label %3307

3304:                                             ; preds = %3307, %3298
  %3305 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3306 = icmp eq i8 %3305, 0
  br i1 %3306, label %3319, label %3315

3307:                                             ; preds = %3307, %3302
  %3308 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3299, %3302 ], [ %3313, %3307 ]
  %3309 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3308, align 8
  %3310 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3309 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3311 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3310, align 8
  %3312 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3311, align 8
  call void %3312(%"class.v8::internal::HeapObjectAllocationTracker"* %3309, i64 %3303, i32 40) #6
  %3313 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3308, i64 1
  %3314 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3313, %3300
  br i1 %3314, label %3304, label %3307

3315:                                             ; preds = %3304
  %3316 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3317 = load i32, i32* %3316, align 8
  %3318 = add i32 %3317, 1
  store i32 %3318, i32* %3316, align 8
  br label %3330

3319:                                             ; preds = %3304
  %3320 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3321 = icmp sgt i32 %3320, 0
  br i1 %3321, label %3322, label %3330

3322:                                             ; preds = %3319
  %3323 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3324 = load i32, i32* %3323, align 8
  %3325 = add i32 %3324, 1
  store i32 %3325, i32* %3323, align 8
  %3326 = urem i32 %3325, %3320
  %3327 = icmp eq i32 %3326, 0
  br i1 %3327, label %3328, label %3330

3328:                                             ; preds = %3322
  %3329 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3329, i32 0) #6
  br label %3330

3330:                                             ; preds = %3328, %3322, %3319, %3315
  %3331 = load i64, i64* %10, align 8
  %3332 = add i64 %3295, -1
  %3333 = inttoptr i64 %3332 to i32*
  %3334 = trunc i64 %3331 to i32
  store atomic volatile i32 %3334, i32* %3333 monotonic, align 4
  %3335 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3295, i16 zeroext 154, i32 0, i8 zeroext 3, i32 0) #6
  %3336 = and i64 %3335, 1
  %3337 = icmp eq i64 %3336, 0
  br i1 %3337, label %3338, label %3339, !prof !4

3338:                                             ; preds = %3330
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3339:                                             ; preds = %3292, %3330
  %3340 = phi i64 [ %3335, %3330 ], [ %3295, %3292 ]
  %3341 = and i64 %3340, 1
  %3342 = icmp eq i64 %3341, 0
  br i1 %3342, label %6363, label %3343

3343:                                             ; preds = %3339
  %3344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 563
  store i64 %3340, i64* %3344, align 8
  %3345 = load i8, i8* %66, align 4, !range !3
  %3346 = icmp eq i8 %3345, 0
  br i1 %3346, label %3354, label %3347

3347:                                             ; preds = %3343
  %3348 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3349 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3348, align 8
  %3350 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3351 = load atomic i32, i32* %3350 monotonic, align 4
  %3352 = icmp eq i32 %3351, 2
  br i1 %3352, label %3353, label %3354, !prof !4

3353:                                             ; preds = %3347
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3349) #6
  br label %3354

3354:                                             ; preds = %3353, %3347, %3343
  %3355 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3356 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3357 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3356, i32 40, i32 0) #6
  %3358 = and i64 %3357, 1
  %3359 = icmp eq i64 %3358, 0
  br i1 %3359, label %3401, label %3360

3360:                                             ; preds = %3354
  %3361 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3362 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3363 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3361, %3362
  br i1 %3363, label %3366, label %3364

3364:                                             ; preds = %3360
  %3365 = add i64 %3357, -1
  br label %3369

3366:                                             ; preds = %3369, %3360
  %3367 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3368 = icmp eq i8 %3367, 0
  br i1 %3368, label %3381, label %3377

3369:                                             ; preds = %3369, %3364
  %3370 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3361, %3364 ], [ %3375, %3369 ]
  %3371 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3370, align 8
  %3372 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3371 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3373 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3372, align 8
  %3374 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3373, align 8
  call void %3374(%"class.v8::internal::HeapObjectAllocationTracker"* %3371, i64 %3365, i32 40) #6
  %3375 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3370, i64 1
  %3376 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3375, %3362
  br i1 %3376, label %3366, label %3369

3377:                                             ; preds = %3366
  %3378 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3379 = load i32, i32* %3378, align 8
  %3380 = add i32 %3379, 1
  store i32 %3380, i32* %3378, align 8
  br label %3392

3381:                                             ; preds = %3366
  %3382 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3383 = icmp sgt i32 %3382, 0
  br i1 %3383, label %3384, label %3392

3384:                                             ; preds = %3381
  %3385 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3386 = load i32, i32* %3385, align 8
  %3387 = add i32 %3386, 1
  store i32 %3387, i32* %3385, align 8
  %3388 = urem i32 %3387, %3382
  %3389 = icmp eq i32 %3388, 0
  br i1 %3389, label %3390, label %3392

3390:                                             ; preds = %3384
  %3391 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3391, i32 0) #6
  br label %3392

3392:                                             ; preds = %3390, %3384, %3381, %3377
  %3393 = load i64, i64* %10, align 8
  %3394 = add i64 %3357, -1
  %3395 = inttoptr i64 %3394 to i32*
  %3396 = trunc i64 %3393 to i32
  store atomic volatile i32 %3396, i32* %3395 monotonic, align 4
  %3397 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3357, i16 zeroext 135, i32 0, i8 zeroext 3, i32 0) #6
  %3398 = and i64 %3397, 1
  %3399 = icmp eq i64 %3398, 0
  br i1 %3399, label %3400, label %3401, !prof !4

3400:                                             ; preds = %3392
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3401:                                             ; preds = %3354, %3392
  %3402 = phi i64 [ %3397, %3392 ], [ %3357, %3354 ]
  %3403 = and i64 %3402, 1
  %3404 = icmp eq i64 %3403, 0
  br i1 %3404, label %6363, label %3405

3405:                                             ; preds = %3401
  %3406 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 574
  store i64 %3402, i64* %3406, align 8
  %3407 = load i8, i8* %66, align 4, !range !3
  %3408 = icmp eq i8 %3407, 0
  br i1 %3408, label %3416, label %3409

3409:                                             ; preds = %3405
  %3410 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3411 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3410, align 8
  %3412 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3413 = load atomic i32, i32* %3412 monotonic, align 4
  %3414 = icmp eq i32 %3413, 2
  br i1 %3414, label %3415, label %3416, !prof !4

3415:                                             ; preds = %3409
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3411) #6
  br label %3416

3416:                                             ; preds = %3415, %3409, %3405
  %3417 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3418 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3419 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3418, i32 40, i32 0) #6
  %3420 = and i64 %3419, 1
  %3421 = icmp eq i64 %3420, 0
  br i1 %3421, label %3463, label %3422

3422:                                             ; preds = %3416
  %3423 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3424 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3425 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3423, %3424
  br i1 %3425, label %3428, label %3426

3426:                                             ; preds = %3422
  %3427 = add i64 %3419, -1
  br label %3431

3428:                                             ; preds = %3431, %3422
  %3429 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3430 = icmp eq i8 %3429, 0
  br i1 %3430, label %3443, label %3439

3431:                                             ; preds = %3431, %3426
  %3432 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3423, %3426 ], [ %3437, %3431 ]
  %3433 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3432, align 8
  %3434 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3433 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3435 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3434, align 8
  %3436 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3435, align 8
  call void %3436(%"class.v8::internal::HeapObjectAllocationTracker"* %3433, i64 %3427, i32 40) #6
  %3437 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3432, i64 1
  %3438 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3437, %3424
  br i1 %3438, label %3428, label %3431

3439:                                             ; preds = %3428
  %3440 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3441 = load i32, i32* %3440, align 8
  %3442 = add i32 %3441, 1
  store i32 %3442, i32* %3440, align 8
  br label %3454

3443:                                             ; preds = %3428
  %3444 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3445 = icmp sgt i32 %3444, 0
  br i1 %3445, label %3446, label %3454

3446:                                             ; preds = %3443
  %3447 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3448 = load i32, i32* %3447, align 8
  %3449 = add i32 %3448, 1
  store i32 %3449, i32* %3447, align 8
  %3450 = urem i32 %3449, %3444
  %3451 = icmp eq i32 %3450, 0
  br i1 %3451, label %3452, label %3454

3452:                                             ; preds = %3446
  %3453 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3453, i32 0) #6
  br label %3454

3454:                                             ; preds = %3452, %3446, %3443, %3439
  %3455 = load i64, i64* %10, align 8
  %3456 = add i64 %3419, -1
  %3457 = inttoptr i64 %3456 to i32*
  %3458 = trunc i64 %3455 to i32
  store atomic volatile i32 %3458, i32* %3457 monotonic, align 4
  %3459 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3419, i16 zeroext 171, i32 0, i8 zeroext 3, i32 0) #6
  %3460 = and i64 %3459, 1
  %3461 = icmp eq i64 %3460, 0
  br i1 %3461, label %3462, label %3463, !prof !4

3462:                                             ; preds = %3454
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3463:                                             ; preds = %3416, %3454
  %3464 = phi i64 [ %3459, %3454 ], [ %3419, %3416 ]
  %3465 = and i64 %3464, 1
  %3466 = icmp eq i64 %3465, 0
  br i1 %3466, label %6363, label %3467

3467:                                             ; preds = %3463
  %3468 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 575
  store i64 %3464, i64* %3468, align 8
  %3469 = load i8, i8* %66, align 4, !range !3
  %3470 = icmp eq i8 %3469, 0
  br i1 %3470, label %3478, label %3471

3471:                                             ; preds = %3467
  %3472 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3473 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3472, align 8
  %3474 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3475 = load atomic i32, i32* %3474 monotonic, align 4
  %3476 = icmp eq i32 %3475, 2
  br i1 %3476, label %3477, label %3478, !prof !4

3477:                                             ; preds = %3471
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3473) #6
  br label %3478

3478:                                             ; preds = %3477, %3471, %3467
  %3479 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3480 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3481 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3480, i32 40, i32 0) #6
  %3482 = and i64 %3481, 1
  %3483 = icmp eq i64 %3482, 0
  br i1 %3483, label %3525, label %3484

3484:                                             ; preds = %3478
  %3485 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3486 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3487 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3485, %3486
  br i1 %3487, label %3490, label %3488

3488:                                             ; preds = %3484
  %3489 = add i64 %3481, -1
  br label %3493

3490:                                             ; preds = %3493, %3484
  %3491 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3492 = icmp eq i8 %3491, 0
  br i1 %3492, label %3505, label %3501

3493:                                             ; preds = %3493, %3488
  %3494 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3485, %3488 ], [ %3499, %3493 ]
  %3495 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3494, align 8
  %3496 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3495 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3497 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3496, align 8
  %3498 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3497, align 8
  call void %3498(%"class.v8::internal::HeapObjectAllocationTracker"* %3495, i64 %3489, i32 40) #6
  %3499 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3494, i64 1
  %3500 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3499, %3486
  br i1 %3500, label %3490, label %3493

3501:                                             ; preds = %3490
  %3502 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3503 = load i32, i32* %3502, align 8
  %3504 = add i32 %3503, 1
  store i32 %3504, i32* %3502, align 8
  br label %3516

3505:                                             ; preds = %3490
  %3506 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3507 = icmp sgt i32 %3506, 0
  br i1 %3507, label %3508, label %3516

3508:                                             ; preds = %3505
  %3509 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3510 = load i32, i32* %3509, align 8
  %3511 = add i32 %3510, 1
  store i32 %3511, i32* %3509, align 8
  %3512 = urem i32 %3511, %3506
  %3513 = icmp eq i32 %3512, 0
  br i1 %3513, label %3514, label %3516

3514:                                             ; preds = %3508
  %3515 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3515, i32 0) #6
  br label %3516

3516:                                             ; preds = %3514, %3508, %3505, %3501
  %3517 = load i64, i64* %10, align 8
  %3518 = add i64 %3481, -1
  %3519 = inttoptr i64 %3518 to i32*
  %3520 = trunc i64 %3517 to i32
  store atomic volatile i32 %3520, i32* %3519 monotonic, align 4
  %3521 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3481, i16 zeroext 162, i32 0, i8 zeroext 3, i32 0) #6
  %3522 = and i64 %3521, 1
  %3523 = icmp eq i64 %3522, 0
  br i1 %3523, label %3524, label %3525, !prof !4

3524:                                             ; preds = %3516
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3525:                                             ; preds = %3478, %3516
  %3526 = phi i64 [ %3521, %3516 ], [ %3481, %3478 ]
  %3527 = and i64 %3526, 1
  %3528 = icmp eq i64 %3527, 0
  br i1 %3528, label %6363, label %3529

3529:                                             ; preds = %3525
  %3530 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 20
  store i64 %3526, i64* %3530, align 8
  %3531 = load i8, i8* %66, align 4, !range !3
  %3532 = icmp eq i8 %3531, 0
  br i1 %3532, label %3540, label %3533

3533:                                             ; preds = %3529
  %3534 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3535 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3534, align 8
  %3536 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3537 = load atomic i32, i32* %3536 monotonic, align 4
  %3538 = icmp eq i32 %3537, 2
  br i1 %3538, label %3539, label %3540, !prof !4

3539:                                             ; preds = %3533
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3535) #6
  br label %3540

3540:                                             ; preds = %3539, %3533, %3529
  %3541 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3542 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3543 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3542, i32 40, i32 0) #6
  %3544 = and i64 %3543, 1
  %3545 = icmp eq i64 %3544, 0
  br i1 %3545, label %3587, label %3546

3546:                                             ; preds = %3540
  %3547 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3548 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3549 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3547, %3548
  br i1 %3549, label %3552, label %3550

3550:                                             ; preds = %3546
  %3551 = add i64 %3543, -1
  br label %3555

3552:                                             ; preds = %3555, %3546
  %3553 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3554 = icmp eq i8 %3553, 0
  br i1 %3554, label %3567, label %3563

3555:                                             ; preds = %3555, %3550
  %3556 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3547, %3550 ], [ %3561, %3555 ]
  %3557 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3556, align 8
  %3558 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3557 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3559 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3558, align 8
  %3560 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3559, align 8
  call void %3560(%"class.v8::internal::HeapObjectAllocationTracker"* %3557, i64 %3551, i32 40) #6
  %3561 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3556, i64 1
  %3562 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3561, %3548
  br i1 %3562, label %3552, label %3555

3563:                                             ; preds = %3552
  %3564 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3565 = load i32, i32* %3564, align 8
  %3566 = add i32 %3565, 1
  store i32 %3566, i32* %3564, align 8
  br label %3578

3567:                                             ; preds = %3552
  %3568 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3569 = icmp sgt i32 %3568, 0
  br i1 %3569, label %3570, label %3578

3570:                                             ; preds = %3567
  %3571 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3572 = load i32, i32* %3571, align 8
  %3573 = add i32 %3572, 1
  store i32 %3573, i32* %3571, align 8
  %3574 = urem i32 %3573, %3568
  %3575 = icmp eq i32 %3574, 0
  br i1 %3575, label %3576, label %3578

3576:                                             ; preds = %3570
  %3577 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3577, i32 0) #6
  br label %3578

3578:                                             ; preds = %3576, %3570, %3567, %3563
  %3579 = load i64, i64* %10, align 8
  %3580 = add i64 %3543, -1
  %3581 = inttoptr i64 %3580 to i32*
  %3582 = trunc i64 %3579 to i32
  store atomic volatile i32 %3582, i32* %3581 monotonic, align 4
  %3583 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3543, i16 zeroext 161, i32 8, i8 zeroext 3, i32 0) #6
  %3584 = and i64 %3583, 1
  %3585 = icmp eq i64 %3584, 0
  br i1 %3585, label %3586, label %3587, !prof !4

3586:                                             ; preds = %3578
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3587:                                             ; preds = %3540, %3578
  %3588 = phi i64 [ %3583, %3578 ], [ %3543, %3540 ]
  %3589 = and i64 %3588, 1
  %3590 = icmp eq i64 %3589, 0
  br i1 %3590, label %6363, label %3591

3591:                                             ; preds = %3587
  %3592 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 21
  store i64 %3588, i64* %3592, align 8
  %3593 = call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 8, i8 zeroext 1, i32 1, i32 0)
  %3594 = and i64 %3593, 1
  %3595 = icmp eq i64 %3594, 0
  br i1 %3595, label %6363, label %3596

3596:                                             ; preds = %3591
  %3597 = load i64, i64* %3592, align 8
  %3598 = add i64 %3593, -1
  %3599 = inttoptr i64 %3598 to i32*
  %3600 = trunc i64 %3597 to i32
  store atomic volatile i32 %3600, i32* %3599 monotonic, align 4
  %3601 = add i64 %3593, 3
  %3602 = inttoptr i64 %3601 to i32*
  store atomic volatile i32 2, i32* %3602 monotonic, align 4
  %3603 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 602
  store i64 %3593, i64* %3603, align 8
  %3604 = load i8, i8* %66, align 4, !range !3
  %3605 = icmp eq i8 %3604, 0
  br i1 %3605, label %3613, label %3606

3606:                                             ; preds = %3596
  %3607 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3608 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3607, align 8
  %3609 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3610 = load atomic i32, i32* %3609 monotonic, align 4
  %3611 = icmp eq i32 %3610, 2
  br i1 %3611, label %3612, label %3613, !prof !4

3612:                                             ; preds = %3606
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3608) #6
  br label %3613

3613:                                             ; preds = %3612, %3606, %3596
  %3614 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3615 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3616 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3615, i32 40, i32 0) #6
  %3617 = and i64 %3616, 1
  %3618 = icmp eq i64 %3617, 0
  br i1 %3618, label %3660, label %3619

3619:                                             ; preds = %3613
  %3620 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3621 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3622 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3620, %3621
  br i1 %3622, label %3625, label %3623

3623:                                             ; preds = %3619
  %3624 = add i64 %3616, -1
  br label %3628

3625:                                             ; preds = %3628, %3619
  %3626 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3627 = icmp eq i8 %3626, 0
  br i1 %3627, label %3640, label %3636

3628:                                             ; preds = %3628, %3623
  %3629 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3620, %3623 ], [ %3634, %3628 ]
  %3630 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3629, align 8
  %3631 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3630 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3632 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3631, align 8
  %3633 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3632, align 8
  call void %3633(%"class.v8::internal::HeapObjectAllocationTracker"* %3630, i64 %3624, i32 40) #6
  %3634 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3629, i64 1
  %3635 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3634, %3621
  br i1 %3635, label %3625, label %3628

3636:                                             ; preds = %3625
  %3637 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3638 = load i32, i32* %3637, align 8
  %3639 = add i32 %3638, 1
  store i32 %3639, i32* %3637, align 8
  br label %3651

3640:                                             ; preds = %3625
  %3641 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3642 = icmp sgt i32 %3641, 0
  br i1 %3642, label %3643, label %3651

3643:                                             ; preds = %3640
  %3644 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3645 = load i32, i32* %3644, align 8
  %3646 = add i32 %3645, 1
  store i32 %3646, i32* %3644, align 8
  %3647 = urem i32 %3646, %3641
  %3648 = icmp eq i32 %3647, 0
  br i1 %3648, label %3649, label %3651

3649:                                             ; preds = %3643
  %3650 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3650, i32 0) #6
  br label %3651

3651:                                             ; preds = %3649, %3643, %3640, %3636
  %3652 = load i64, i64* %10, align 8
  %3653 = add i64 %3616, -1
  %3654 = inttoptr i64 %3653 to i32*
  %3655 = trunc i64 %3652 to i32
  store atomic volatile i32 %3655, i32* %3654 monotonic, align 4
  %3656 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3616, i16 zeroext 177, i32 20, i8 zeroext 3, i32 0) #6
  %3657 = and i64 %3656, 1
  %3658 = icmp eq i64 %3657, 0
  br i1 %3658, label %3659, label %3660, !prof !4

3659:                                             ; preds = %3651
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3660:                                             ; preds = %3613, %3651
  %3661 = phi i64 [ %3656, %3651 ], [ %3616, %3613 ]
  %3662 = and i64 %3661, 1
  %3663 = icmp eq i64 %3662, 0
  br i1 %3663, label %6363, label %3664

3664:                                             ; preds = %3660
  %3665 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 22
  store i64 %3661, i64* %3665, align 8
  %3666 = load i8, i8* %66, align 4, !range !3
  %3667 = icmp eq i8 %3666, 0
  br i1 %3667, label %3675, label %3668

3668:                                             ; preds = %3664
  %3669 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3670 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3669, align 8
  %3671 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3672 = load atomic i32, i32* %3671 monotonic, align 4
  %3673 = icmp eq i32 %3672, 2
  br i1 %3673, label %3674, label %3675, !prof !4

3674:                                             ; preds = %3668
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3670) #6
  br label %3675

3675:                                             ; preds = %3674, %3668, %3664
  %3676 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3677 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3678 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3677, i32 40, i32 0) #6
  %3679 = and i64 %3678, 1
  %3680 = icmp eq i64 %3679, 0
  br i1 %3680, label %3722, label %3681

3681:                                             ; preds = %3675
  %3682 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3683 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3684 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3682, %3683
  br i1 %3684, label %3687, label %3685

3685:                                             ; preds = %3681
  %3686 = add i64 %3678, -1
  br label %3690

3687:                                             ; preds = %3690, %3681
  %3688 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3689 = icmp eq i8 %3688, 0
  br i1 %3689, label %3702, label %3698

3690:                                             ; preds = %3690, %3685
  %3691 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3682, %3685 ], [ %3696, %3690 ]
  %3692 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3691, align 8
  %3693 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3692 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3694 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3693, align 8
  %3695 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3694, align 8
  call void %3695(%"class.v8::internal::HeapObjectAllocationTracker"* %3692, i64 %3686, i32 40) #6
  %3696 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3691, i64 1
  %3697 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3696, %3683
  br i1 %3697, label %3687, label %3690

3698:                                             ; preds = %3687
  %3699 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3700 = load i32, i32* %3699, align 8
  %3701 = add i32 %3700, 1
  store i32 %3701, i32* %3699, align 8
  br label %3713

3702:                                             ; preds = %3687
  %3703 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3704 = icmp sgt i32 %3703, 0
  br i1 %3704, label %3705, label %3713

3705:                                             ; preds = %3702
  %3706 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3707 = load i32, i32* %3706, align 8
  %3708 = add i32 %3707, 1
  store i32 %3708, i32* %3706, align 8
  %3709 = urem i32 %3708, %3703
  %3710 = icmp eq i32 %3709, 0
  br i1 %3710, label %3711, label %3713

3711:                                             ; preds = %3705
  %3712 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3712, i32 0) #6
  br label %3713

3713:                                             ; preds = %3711, %3705, %3702, %3698
  %3714 = load i64, i64* %10, align 8
  %3715 = add i64 %3678, -1
  %3716 = inttoptr i64 %3715 to i32*
  %3717 = trunc i64 %3714 to i32
  store atomic volatile i32 %3717, i32* %3716 monotonic, align 4
  %3718 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3678, i16 zeroext 168, i32 4, i8 zeroext 3, i32 0) #6
  %3719 = and i64 %3718, 1
  %3720 = icmp eq i64 %3719, 0
  br i1 %3720, label %3721, label %3722, !prof !4

3721:                                             ; preds = %3713
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3722:                                             ; preds = %3675, %3713
  %3723 = phi i64 [ %3718, %3713 ], [ %3678, %3675 ]
  %3724 = and i64 %3723, 1
  %3725 = icmp eq i64 %3724, 0
  br i1 %3725, label %6363, label %3726

3726:                                             ; preds = %3722
  %3727 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 1
  store i64 %3723, i64* %3727, align 8
  %3728 = load i8, i8* %66, align 4, !range !3
  %3729 = icmp eq i8 %3728, 0
  br i1 %3729, label %3737, label %3730

3730:                                             ; preds = %3726
  %3731 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3732 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3731, align 8
  %3733 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3732, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3734 = load atomic i32, i32* %3733 monotonic, align 4
  %3735 = icmp eq i32 %3734, 2
  br i1 %3735, label %3736, label %3737, !prof !4

3736:                                             ; preds = %3730
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3732) #6
  br label %3737

3737:                                             ; preds = %3736, %3730, %3726
  %3738 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3739 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3740 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3739, i32 40, i32 0) #6
  %3741 = and i64 %3740, 1
  %3742 = icmp eq i64 %3741, 0
  br i1 %3742, label %3784, label %3743

3743:                                             ; preds = %3737
  %3744 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3745 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3746 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3744, %3745
  br i1 %3746, label %3749, label %3747

3747:                                             ; preds = %3743
  %3748 = add i64 %3740, -1
  br label %3752

3749:                                             ; preds = %3752, %3743
  %3750 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3751 = icmp eq i8 %3750, 0
  br i1 %3751, label %3764, label %3760

3752:                                             ; preds = %3752, %3747
  %3753 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3744, %3747 ], [ %3758, %3752 ]
  %3754 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3753, align 8
  %3755 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3754 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3756 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3755, align 8
  %3757 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3756, align 8
  call void %3757(%"class.v8::internal::HeapObjectAllocationTracker"* %3754, i64 %3748, i32 40) #6
  %3758 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3753, i64 1
  %3759 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3758, %3745
  br i1 %3759, label %3749, label %3752

3760:                                             ; preds = %3749
  %3761 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3762 = load i32, i32* %3761, align 8
  %3763 = add i32 %3762, 1
  store i32 %3763, i32* %3761, align 8
  br label %3775

3764:                                             ; preds = %3749
  %3765 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3766 = icmp sgt i32 %3765, 0
  br i1 %3766, label %3767, label %3775

3767:                                             ; preds = %3764
  %3768 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3769 = load i32, i32* %3768, align 8
  %3770 = add i32 %3769, 1
  store i32 %3770, i32* %3768, align 8
  %3771 = urem i32 %3770, %3765
  %3772 = icmp eq i32 %3771, 0
  br i1 %3772, label %3773, label %3775

3773:                                             ; preds = %3767
  %3774 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3774, i32 0) #6
  br label %3775

3775:                                             ; preds = %3773, %3767, %3764, %3760
  %3776 = load i64, i64* %10, align 8
  %3777 = add i64 %3740, -1
  %3778 = inttoptr i64 %3777 to i32*
  %3779 = trunc i64 %3776 to i32
  store atomic volatile i32 %3779, i32* %3778 monotonic, align 4
  %3780 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3740, i16 zeroext 168, i32 8, i8 zeroext 3, i32 0) #6
  %3781 = and i64 %3780, 1
  %3782 = icmp eq i64 %3781, 0
  br i1 %3782, label %3783, label %3784, !prof !4

3783:                                             ; preds = %3775
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3784:                                             ; preds = %3737, %3775
  %3785 = phi i64 [ %3780, %3775 ], [ %3740, %3737 ]
  %3786 = and i64 %3785, 1
  %3787 = icmp eq i64 %3786, 0
  br i1 %3787, label %6363, label %3788

3788:                                             ; preds = %3784
  %3789 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 2
  store i64 %3785, i64* %3789, align 8
  %3790 = load i8, i8* %66, align 4, !range !3
  %3791 = icmp eq i8 %3790, 0
  br i1 %3791, label %3799, label %3792

3792:                                             ; preds = %3788
  %3793 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3794 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3793, align 8
  %3795 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3794, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3796 = load atomic i32, i32* %3795 monotonic, align 4
  %3797 = icmp eq i32 %3796, 2
  br i1 %3797, label %3798, label %3799, !prof !4

3798:                                             ; preds = %3792
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3794) #6
  br label %3799

3799:                                             ; preds = %3798, %3792, %3788
  %3800 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3801 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3802 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3801, i32 40, i32 0) #6
  %3803 = and i64 %3802, 1
  %3804 = icmp eq i64 %3803, 0
  br i1 %3804, label %3846, label %3805

3805:                                             ; preds = %3799
  %3806 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3807 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3808 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3806, %3807
  br i1 %3808, label %3811, label %3809

3809:                                             ; preds = %3805
  %3810 = add i64 %3802, -1
  br label %3814

3811:                                             ; preds = %3814, %3805
  %3812 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3813 = icmp eq i8 %3812, 0
  br i1 %3813, label %3826, label %3822

3814:                                             ; preds = %3814, %3809
  %3815 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3806, %3809 ], [ %3820, %3814 ]
  %3816 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3815, align 8
  %3817 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3816 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3818 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3817, align 8
  %3819 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3818, align 8
  call void %3819(%"class.v8::internal::HeapObjectAllocationTracker"* %3816, i64 %3810, i32 40) #6
  %3820 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3815, i64 1
  %3821 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3820, %3807
  br i1 %3821, label %3811, label %3814

3822:                                             ; preds = %3811
  %3823 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3824 = load i32, i32* %3823, align 8
  %3825 = add i32 %3824, 1
  store i32 %3825, i32* %3823, align 8
  br label %3837

3826:                                             ; preds = %3811
  %3827 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3828 = icmp sgt i32 %3827, 0
  br i1 %3828, label %3829, label %3837

3829:                                             ; preds = %3826
  %3830 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3831 = load i32, i32* %3830, align 8
  %3832 = add i32 %3831, 1
  store i32 %3832, i32* %3830, align 8
  %3833 = urem i32 %3832, %3827
  %3834 = icmp eq i32 %3833, 0
  br i1 %3834, label %3835, label %3837

3835:                                             ; preds = %3829
  %3836 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3836, i32 0) #6
  br label %3837

3837:                                             ; preds = %3835, %3829, %3826, %3822
  %3838 = load i64, i64* %10, align 8
  %3839 = add i64 %3802, -1
  %3840 = inttoptr i64 %3839 to i32*
  %3841 = trunc i64 %3838 to i32
  store atomic volatile i32 %3841, i32* %3840 monotonic, align 4
  %3842 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3802, i16 zeroext 102, i32 12, i8 zeroext 3, i32 0) #6
  %3843 = and i64 %3842, 1
  %3844 = icmp eq i64 %3843, 0
  br i1 %3844, label %3845, label %3846, !prof !4

3845:                                             ; preds = %3837
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3846:                                             ; preds = %3799, %3837
  %3847 = phi i64 [ %3842, %3837 ], [ %3802, %3799 ]
  %3848 = and i64 %3847, 1
  %3849 = icmp eq i64 %3848, 0
  br i1 %3849, label %6363, label %3850

3850:                                             ; preds = %3846
  %3851 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 51
  store i64 %3847, i64* %3851, align 8
  %3852 = add i64 %3847, 11
  %3853 = inttoptr i64 %3852 to i32*
  %3854 = load atomic i32, i32* %3853 monotonic, align 4
  %3855 = or i32 %3854, 33554432
  store atomic volatile i32 %3855, i32* %3853 release, align 4
  %3856 = load i8, i8* %66, align 4, !range !3
  %3857 = icmp eq i8 %3856, 0
  br i1 %3857, label %3865, label %3858

3858:                                             ; preds = %3850
  %3859 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3860 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3859, align 8
  %3861 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3860, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3862 = load atomic i32, i32* %3861 monotonic, align 4
  %3863 = icmp eq i32 %3862, 2
  br i1 %3863, label %3864, label %3865, !prof !4

3864:                                             ; preds = %3858
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3860) #6
  br label %3865

3865:                                             ; preds = %3864, %3858, %3850
  %3866 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3867 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3868 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3867, i32 40, i32 0) #6
  %3869 = and i64 %3868, 1
  %3870 = icmp eq i64 %3869, 0
  br i1 %3870, label %3912, label %3871

3871:                                             ; preds = %3865
  %3872 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3873 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3874 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3872, %3873
  br i1 %3874, label %3877, label %3875

3875:                                             ; preds = %3871
  %3876 = add i64 %3868, -1
  br label %3880

3877:                                             ; preds = %3880, %3871
  %3878 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3879 = icmp eq i8 %3878, 0
  br i1 %3879, label %3892, label %3888

3880:                                             ; preds = %3880, %3875
  %3881 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3872, %3875 ], [ %3886, %3880 ]
  %3882 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3881, align 8
  %3883 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3882 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3884 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3883, align 8
  %3885 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3884, align 8
  call void %3885(%"class.v8::internal::HeapObjectAllocationTracker"* %3882, i64 %3876, i32 40) #6
  %3886 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3881, i64 1
  %3887 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3886, %3873
  br i1 %3887, label %3877, label %3880

3888:                                             ; preds = %3877
  %3889 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3890 = load i32, i32* %3889, align 8
  %3891 = add i32 %3890, 1
  store i32 %3891, i32* %3889, align 8
  br label %3903

3892:                                             ; preds = %3877
  %3893 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3894 = icmp sgt i32 %3893, 0
  br i1 %3894, label %3895, label %3903

3895:                                             ; preds = %3892
  %3896 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3897 = load i32, i32* %3896, align 8
  %3898 = add i32 %3897, 1
  store i32 %3898, i32* %3896, align 8
  %3899 = urem i32 %3898, %3893
  %3900 = icmp eq i32 %3899, 0
  br i1 %3900, label %3901, label %3903

3901:                                             ; preds = %3895
  %3902 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3902, i32 0) #6
  br label %3903

3903:                                             ; preds = %3901, %3895, %3892, %3888
  %3904 = load i64, i64* %10, align 8
  %3905 = add i64 %3868, -1
  %3906 = inttoptr i64 %3905 to i32*
  %3907 = trunc i64 %3904 to i32
  store atomic volatile i32 %3907, i32* %3906 monotonic, align 4
  %3908 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3868, i16 zeroext 102, i32 12, i8 zeroext 3, i32 0) #6
  %3909 = and i64 %3908, 1
  %3910 = icmp eq i64 %3909, 0
  br i1 %3910, label %3911, label %3912, !prof !4

3911:                                             ; preds = %3903
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3912:                                             ; preds = %3865, %3903
  %3913 = phi i64 [ %3908, %3903 ], [ %3868, %3865 ]
  %3914 = and i64 %3913, 1
  %3915 = icmp eq i64 %3914, 0
  br i1 %3915, label %6363, label %3916

3916:                                             ; preds = %3912
  %3917 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 53
  store i64 %3913, i64* %3917, align 8
  %3918 = add i64 %3913, 11
  %3919 = inttoptr i64 %3918 to i32*
  %3920 = load atomic i32, i32* %3919 monotonic, align 4
  %3921 = or i32 %3920, 33554432
  store atomic volatile i32 %3921, i32* %3919 release, align 4
  %3922 = load i8, i8* %66, align 4, !range !3
  %3923 = icmp eq i8 %3922, 0
  br i1 %3923, label %3931, label %3924

3924:                                             ; preds = %3916
  %3925 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3926 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3925, align 8
  %3927 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3926, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3928 = load atomic i32, i32* %3927 monotonic, align 4
  %3929 = icmp eq i32 %3928, 2
  br i1 %3929, label %3930, label %3931, !prof !4

3930:                                             ; preds = %3924
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3926) #6
  br label %3931

3931:                                             ; preds = %3930, %3924, %3916
  %3932 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3933 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3934 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3933, i32 40, i32 0) #6
  %3935 = and i64 %3934, 1
  %3936 = icmp eq i64 %3935, 0
  br i1 %3936, label %3978, label %3937

3937:                                             ; preds = %3931
  %3938 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %3939 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %3940 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3938, %3939
  br i1 %3940, label %3943, label %3941

3941:                                             ; preds = %3937
  %3942 = add i64 %3934, -1
  br label %3946

3943:                                             ; preds = %3946, %3937
  %3944 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %3945 = icmp eq i8 %3944, 0
  br i1 %3945, label %3958, label %3954

3946:                                             ; preds = %3946, %3941
  %3947 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %3938, %3941 ], [ %3952, %3946 ]
  %3948 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3947, align 8
  %3949 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %3948 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %3950 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %3949, align 8
  %3951 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %3950, align 8
  call void %3951(%"class.v8::internal::HeapObjectAllocationTracker"* %3948, i64 %3942, i32 40) #6
  %3952 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %3947, i64 1
  %3953 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %3952, %3939
  br i1 %3953, label %3943, label %3946

3954:                                             ; preds = %3943
  %3955 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3956 = load i32, i32* %3955, align 8
  %3957 = add i32 %3956, 1
  store i32 %3957, i32* %3955, align 8
  br label %3969

3958:                                             ; preds = %3943
  %3959 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %3960 = icmp sgt i32 %3959, 0
  br i1 %3960, label %3961, label %3969

3961:                                             ; preds = %3958
  %3962 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %3963 = load i32, i32* %3962, align 8
  %3964 = add i32 %3963, 1
  store i32 %3964, i32* %3962, align 8
  %3965 = urem i32 %3964, %3959
  %3966 = icmp eq i32 %3965, 0
  br i1 %3966, label %3967, label %3969

3967:                                             ; preds = %3961
  %3968 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %3968, i32 0) #6
  br label %3969

3969:                                             ; preds = %3967, %3961, %3958, %3954
  %3970 = load i64, i64* %10, align 8
  %3971 = add i64 %3934, -1
  %3972 = inttoptr i64 %3971 to i32*
  %3973 = trunc i64 %3970 to i32
  store atomic volatile i32 %3973, i32* %3972 monotonic, align 4
  %3974 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3934, i16 zeroext 102, i32 12, i8 zeroext 3, i32 0) #6
  %3975 = and i64 %3974, 1
  %3976 = icmp eq i64 %3975, 0
  br i1 %3976, label %3977, label %3978, !prof !4

3977:                                             ; preds = %3969
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

3978:                                             ; preds = %3931, %3969
  %3979 = phi i64 [ %3974, %3969 ], [ %3934, %3931 ]
  %3980 = and i64 %3979, 1
  %3981 = icmp eq i64 %3980, 0
  br i1 %3981, label %6363, label %3982

3982:                                             ; preds = %3978
  %3983 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 47
  store i64 %3979, i64* %3983, align 8
  %3984 = load i8, i8* %66, align 4, !range !3
  %3985 = icmp eq i8 %3984, 0
  br i1 %3985, label %3993, label %3986

3986:                                             ; preds = %3982
  %3987 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %3988 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3987, align 8
  %3989 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %3988, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3990 = load atomic i32, i32* %3989 monotonic, align 4
  %3991 = icmp eq i32 %3990, 2
  br i1 %3991, label %3992, label %3993, !prof !4

3992:                                             ; preds = %3986
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %3988) #6
  br label %3993

3993:                                             ; preds = %3992, %3986, %3982
  %3994 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %3995 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %3996 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %3995, i32 40, i32 0) #6
  %3997 = and i64 %3996, 1
  %3998 = icmp eq i64 %3997, 0
  br i1 %3998, label %4040, label %3999

3999:                                             ; preds = %3993
  %4000 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4001 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4002 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4000, %4001
  br i1 %4002, label %4005, label %4003

4003:                                             ; preds = %3999
  %4004 = add i64 %3996, -1
  br label %4008

4005:                                             ; preds = %4008, %3999
  %4006 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4007 = icmp eq i8 %4006, 0
  br i1 %4007, label %4020, label %4016

4008:                                             ; preds = %4008, %4003
  %4009 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4000, %4003 ], [ %4014, %4008 ]
  %4010 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4009, align 8
  %4011 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4010 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4012 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4011, align 8
  %4013 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4012, align 8
  call void %4013(%"class.v8::internal::HeapObjectAllocationTracker"* %4010, i64 %4004, i32 40) #6
  %4014 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4009, i64 1
  %4015 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4014, %4001
  br i1 %4015, label %4005, label %4008

4016:                                             ; preds = %4005
  %4017 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4018 = load i32, i32* %4017, align 8
  %4019 = add i32 %4018, 1
  store i32 %4019, i32* %4017, align 8
  br label %4031

4020:                                             ; preds = %4005
  %4021 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4022 = icmp sgt i32 %4021, 0
  br i1 %4022, label %4023, label %4031

4023:                                             ; preds = %4020
  %4024 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4025 = load i32, i32* %4024, align 8
  %4026 = add i32 %4025, 1
  store i32 %4026, i32* %4024, align 8
  %4027 = urem i32 %4026, %4021
  %4028 = icmp eq i32 %4027, 0
  br i1 %4028, label %4029, label %4031

4029:                                             ; preds = %4023
  %4030 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4030, i32 0) #6
  br label %4031

4031:                                             ; preds = %4029, %4023, %4020, %4016
  %4032 = load i64, i64* %10, align 8
  %4033 = add i64 %3996, -1
  %4034 = inttoptr i64 %4033 to i32*
  %4035 = trunc i64 %4032 to i32
  store atomic volatile i32 %4035, i32* %4034 monotonic, align 4
  %4036 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %3996, i16 zeroext 160, i32 0, i8 zeroext 3, i32 0) #6
  %4037 = and i64 %4036, 1
  %4038 = icmp eq i64 %4037, 0
  br i1 %4038, label %4039, label %4040, !prof !4

4039:                                             ; preds = %4031
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4040:                                             ; preds = %3993, %4031
  %4041 = phi i64 [ %4036, %4031 ], [ %3996, %3993 ]
  %4042 = and i64 %4041, 1
  %4043 = icmp eq i64 %4042, 0
  br i1 %4043, label %6363, label %4044

4044:                                             ; preds = %4040
  %4045 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 25
  store i64 %4041, i64* %4045, align 8
  %4046 = load i8, i8* %66, align 4, !range !3
  %4047 = icmp eq i8 %4046, 0
  br i1 %4047, label %4055, label %4048

4048:                                             ; preds = %4044
  %4049 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4050 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4049, align 8
  %4051 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4050, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4052 = load atomic i32, i32* %4051 monotonic, align 4
  %4053 = icmp eq i32 %4052, 2
  br i1 %4053, label %4054, label %4055, !prof !4

4054:                                             ; preds = %4048
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4050) #6
  br label %4055

4055:                                             ; preds = %4054, %4048, %4044
  %4056 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4057 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4058 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4057, i32 40, i32 0) #6
  %4059 = and i64 %4058, 1
  %4060 = icmp eq i64 %4059, 0
  br i1 %4060, label %4102, label %4061

4061:                                             ; preds = %4055
  %4062 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4063 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4064 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4062, %4063
  br i1 %4064, label %4067, label %4065

4065:                                             ; preds = %4061
  %4066 = add i64 %4058, -1
  br label %4070

4067:                                             ; preds = %4070, %4061
  %4068 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4069 = icmp eq i8 %4068, 0
  br i1 %4069, label %4082, label %4078

4070:                                             ; preds = %4070, %4065
  %4071 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4062, %4065 ], [ %4076, %4070 ]
  %4072 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4071, align 8
  %4073 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4072 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4074 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4073, align 8
  %4075 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4074, align 8
  call void %4075(%"class.v8::internal::HeapObjectAllocationTracker"* %4072, i64 %4066, i32 40) #6
  %4076 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4071, i64 1
  %4077 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4076, %4063
  br i1 %4077, label %4067, label %4070

4078:                                             ; preds = %4067
  %4079 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4080 = load i32, i32* %4079, align 8
  %4081 = add i32 %4080, 1
  store i32 %4081, i32* %4079, align 8
  br label %4093

4082:                                             ; preds = %4067
  %4083 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4084 = icmp sgt i32 %4083, 0
  br i1 %4084, label %4085, label %4093

4085:                                             ; preds = %4082
  %4086 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4087 = load i32, i32* %4086, align 8
  %4088 = add i32 %4087, 1
  store i32 %4088, i32* %4086, align 8
  %4089 = urem i32 %4088, %4083
  %4090 = icmp eq i32 %4089, 0
  br i1 %4090, label %4091, label %4093

4091:                                             ; preds = %4085
  %4092 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4092, i32 0) #6
  br label %4093

4093:                                             ; preds = %4091, %4085, %4082, %4078
  %4094 = load i64, i64* %10, align 8
  %4095 = add i64 %4058, -1
  %4096 = inttoptr i64 %4095 to i32*
  %4097 = trunc i64 %4094 to i32
  store atomic volatile i32 %4097, i32* %4096 monotonic, align 4
  %4098 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4058, i16 zeroext 120, i32 0, i8 zeroext 3, i32 0) #6
  %4099 = and i64 %4098, 1
  %4100 = icmp eq i64 %4099, 0
  br i1 %4100, label %4101, label %4102, !prof !4

4101:                                             ; preds = %4093
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4102:                                             ; preds = %4055, %4093
  %4103 = phi i64 [ %4098, %4093 ], [ %4058, %4055 ]
  %4104 = and i64 %4103, 1
  %4105 = icmp eq i64 %4104, 0
  br i1 %4105, label %6363, label %4106

4106:                                             ; preds = %4102
  %4107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 14
  store i64 %4103, i64* %4107, align 8
  %4108 = load i8, i8* %66, align 4, !range !3
  %4109 = icmp eq i8 %4108, 0
  br i1 %4109, label %4117, label %4110

4110:                                             ; preds = %4106
  %4111 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4112 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4111, align 8
  %4113 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4114 = load atomic i32, i32* %4113 monotonic, align 4
  %4115 = icmp eq i32 %4114, 2
  br i1 %4115, label %4116, label %4117, !prof !4

4116:                                             ; preds = %4110
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4112) #6
  br label %4117

4117:                                             ; preds = %4116, %4110, %4106
  %4118 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4119 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4120 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4119, i32 40, i32 0) #6
  %4121 = and i64 %4120, 1
  %4122 = icmp eq i64 %4121, 0
  br i1 %4122, label %4164, label %4123

4123:                                             ; preds = %4117
  %4124 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4125 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4126 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4124, %4125
  br i1 %4126, label %4129, label %4127

4127:                                             ; preds = %4123
  %4128 = add i64 %4120, -1
  br label %4132

4129:                                             ; preds = %4132, %4123
  %4130 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4131 = icmp eq i8 %4130, 0
  br i1 %4131, label %4144, label %4140

4132:                                             ; preds = %4132, %4127
  %4133 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4124, %4127 ], [ %4138, %4132 ]
  %4134 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4133, align 8
  %4135 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4134 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4136 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4135, align 8
  %4137 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4136, align 8
  call void %4137(%"class.v8::internal::HeapObjectAllocationTracker"* %4134, i64 %4128, i32 40) #6
  %4138 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4133, i64 1
  %4139 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4138, %4125
  br i1 %4139, label %4129, label %4132

4140:                                             ; preds = %4129
  %4141 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4142 = load i32, i32* %4141, align 8
  %4143 = add i32 %4142, 1
  store i32 %4143, i32* %4141, align 8
  br label %4155

4144:                                             ; preds = %4129
  %4145 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4146 = icmp sgt i32 %4145, 0
  br i1 %4146, label %4147, label %4155

4147:                                             ; preds = %4144
  %4148 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4149 = load i32, i32* %4148, align 8
  %4150 = add i32 %4149, 1
  store i32 %4150, i32* %4148, align 8
  %4151 = urem i32 %4150, %4145
  %4152 = icmp eq i32 %4151, 0
  br i1 %4152, label %4153, label %4155

4153:                                             ; preds = %4147
  %4154 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4154, i32 0) #6
  br label %4155

4155:                                             ; preds = %4153, %4147, %4144, %4140
  %4156 = load i64, i64* %10, align 8
  %4157 = add i64 %4120, -1
  %4158 = inttoptr i64 %4157 to i32*
  %4159 = trunc i64 %4156 to i32
  store atomic volatile i32 %4159, i32* %4158 monotonic, align 4
  %4160 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4120, i16 zeroext 125, i32 0, i8 zeroext 3, i32 0) #6
  %4161 = and i64 %4160, 1
  %4162 = icmp eq i64 %4161, 0
  br i1 %4162, label %4163, label %4164, !prof !4

4163:                                             ; preds = %4155
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4164:                                             ; preds = %4117, %4155
  %4165 = phi i64 [ %4160, %4155 ], [ %4120, %4117 ]
  %4166 = and i64 %4165, 1
  %4167 = icmp eq i64 %4166, 0
  br i1 %4167, label %6363, label %4168

4168:                                             ; preds = %4164
  %4169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 54
  store i64 %4165, i64* %4169, align 8
  %4170 = load i8, i8* %66, align 4, !range !3
  %4171 = icmp eq i8 %4170, 0
  br i1 %4171, label %4179, label %4172

4172:                                             ; preds = %4168
  %4173 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4174 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4173, align 8
  %4175 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4176 = load atomic i32, i32* %4175 monotonic, align 4
  %4177 = icmp eq i32 %4176, 2
  br i1 %4177, label %4178, label %4179, !prof !4

4178:                                             ; preds = %4172
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4174) #6
  br label %4179

4179:                                             ; preds = %4178, %4172, %4168
  %4180 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4181 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4182 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4181, i32 40, i32 0) #6
  %4183 = and i64 %4182, 1
  %4184 = icmp eq i64 %4183, 0
  br i1 %4184, label %4226, label %4185

4185:                                             ; preds = %4179
  %4186 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4187 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4188 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4186, %4187
  br i1 %4188, label %4191, label %4189

4189:                                             ; preds = %4185
  %4190 = add i64 %4182, -1
  br label %4194

4191:                                             ; preds = %4194, %4185
  %4192 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4193 = icmp eq i8 %4192, 0
  br i1 %4193, label %4206, label %4202

4194:                                             ; preds = %4194, %4189
  %4195 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4186, %4189 ], [ %4200, %4194 ]
  %4196 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4195, align 8
  %4197 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4196 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4198 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4197, align 8
  %4199 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4198, align 8
  call void %4199(%"class.v8::internal::HeapObjectAllocationTracker"* %4196, i64 %4190, i32 40) #6
  %4200 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4195, i64 1
  %4201 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4200, %4187
  br i1 %4201, label %4191, label %4194

4202:                                             ; preds = %4191
  %4203 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4204 = load i32, i32* %4203, align 8
  %4205 = add i32 %4204, 1
  store i32 %4205, i32* %4203, align 8
  br label %4217

4206:                                             ; preds = %4191
  %4207 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4208 = icmp sgt i32 %4207, 0
  br i1 %4208, label %4209, label %4217

4209:                                             ; preds = %4206
  %4210 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4211 = load i32, i32* %4210, align 8
  %4212 = add i32 %4211, 1
  store i32 %4212, i32* %4210, align 8
  %4213 = urem i32 %4212, %4207
  %4214 = icmp eq i32 %4213, 0
  br i1 %4214, label %4215, label %4217

4215:                                             ; preds = %4209
  %4216 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4216, i32 0) #6
  br label %4217

4217:                                             ; preds = %4215, %4209, %4206, %4202
  %4218 = load i64, i64* %10, align 8
  %4219 = add i64 %4182, -1
  %4220 = inttoptr i64 %4219 to i32*
  %4221 = trunc i64 %4218 to i32
  store atomic volatile i32 %4221, i32* %4220 monotonic, align 4
  %4222 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4182, i16 zeroext 126, i32 0, i8 zeroext 3, i32 0) #6
  %4223 = and i64 %4222, 1
  %4224 = icmp eq i64 %4223, 0
  br i1 %4224, label %4225, label %4226, !prof !4

4225:                                             ; preds = %4217
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4226:                                             ; preds = %4179, %4217
  %4227 = phi i64 [ %4222, %4217 ], [ %4182, %4179 ]
  %4228 = and i64 %4227, 1
  %4229 = icmp eq i64 %4228, 0
  br i1 %4229, label %6363, label %4230

4230:                                             ; preds = %4226
  %4231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 55
  store i64 %4227, i64* %4231, align 8
  %4232 = load i8, i8* %66, align 4, !range !3
  %4233 = icmp eq i8 %4232, 0
  br i1 %4233, label %4241, label %4234

4234:                                             ; preds = %4230
  %4235 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4236 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4235, align 8
  %4237 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4238 = load atomic i32, i32* %4237 monotonic, align 4
  %4239 = icmp eq i32 %4238, 2
  br i1 %4239, label %4240, label %4241, !prof !4

4240:                                             ; preds = %4234
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4236) #6
  br label %4241

4241:                                             ; preds = %4240, %4234, %4230
  %4242 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4243 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4244 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4243, i32 40, i32 0) #6
  %4245 = and i64 %4244, 1
  %4246 = icmp eq i64 %4245, 0
  br i1 %4246, label %4288, label %4247

4247:                                             ; preds = %4241
  %4248 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4249 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4250 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4248, %4249
  br i1 %4250, label %4253, label %4251

4251:                                             ; preds = %4247
  %4252 = add i64 %4244, -1
  br label %4256

4253:                                             ; preds = %4256, %4247
  %4254 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4255 = icmp eq i8 %4254, 0
  br i1 %4255, label %4268, label %4264

4256:                                             ; preds = %4256, %4251
  %4257 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4248, %4251 ], [ %4262, %4256 ]
  %4258 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4257, align 8
  %4259 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4258 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4260 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4259, align 8
  %4261 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4260, align 8
  call void %4261(%"class.v8::internal::HeapObjectAllocationTracker"* %4258, i64 %4252, i32 40) #6
  %4262 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4257, i64 1
  %4263 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4262, %4249
  br i1 %4263, label %4253, label %4256

4264:                                             ; preds = %4253
  %4265 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4266 = load i32, i32* %4265, align 8
  %4267 = add i32 %4266, 1
  store i32 %4267, i32* %4265, align 8
  br label %4279

4268:                                             ; preds = %4253
  %4269 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4270 = icmp sgt i32 %4269, 0
  br i1 %4270, label %4271, label %4279

4271:                                             ; preds = %4268
  %4272 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4273 = load i32, i32* %4272, align 8
  %4274 = add i32 %4273, 1
  store i32 %4274, i32* %4272, align 8
  %4275 = urem i32 %4274, %4269
  %4276 = icmp eq i32 %4275, 0
  br i1 %4276, label %4277, label %4279

4277:                                             ; preds = %4271
  %4278 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4278, i32 0) #6
  br label %4279

4279:                                             ; preds = %4277, %4271, %4268, %4264
  %4280 = load i64, i64* %10, align 8
  %4281 = add i64 %4244, -1
  %4282 = inttoptr i64 %4281 to i32*
  %4283 = trunc i64 %4280 to i32
  store atomic volatile i32 %4283, i32* %4282 monotonic, align 4
  %4284 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4244, i16 zeroext 127, i32 0, i8 zeroext 3, i32 0) #6
  %4285 = and i64 %4284, 1
  %4286 = icmp eq i64 %4285, 0
  br i1 %4286, label %4287, label %4288, !prof !4

4287:                                             ; preds = %4279
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4288:                                             ; preds = %4241, %4279
  %4289 = phi i64 [ %4284, %4279 ], [ %4244, %4241 ]
  %4290 = and i64 %4289, 1
  %4291 = icmp eq i64 %4290, 0
  br i1 %4291, label %6363, label %4292

4292:                                             ; preds = %4288
  %4293 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 56
  store i64 %4289, i64* %4293, align 8
  %4294 = load i8, i8* %66, align 4, !range !3
  %4295 = icmp eq i8 %4294, 0
  br i1 %4295, label %4303, label %4296

4296:                                             ; preds = %4292
  %4297 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4298 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4297, align 8
  %4299 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4300 = load atomic i32, i32* %4299 monotonic, align 4
  %4301 = icmp eq i32 %4300, 2
  br i1 %4301, label %4302, label %4303, !prof !4

4302:                                             ; preds = %4296
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4298) #6
  br label %4303

4303:                                             ; preds = %4302, %4296, %4292
  %4304 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4305 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4306 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4305, i32 40, i32 0) #6
  %4307 = and i64 %4306, 1
  %4308 = icmp eq i64 %4307, 0
  br i1 %4308, label %4350, label %4309

4309:                                             ; preds = %4303
  %4310 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4311 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4312 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4310, %4311
  br i1 %4312, label %4315, label %4313

4313:                                             ; preds = %4309
  %4314 = add i64 %4306, -1
  br label %4318

4315:                                             ; preds = %4318, %4309
  %4316 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4317 = icmp eq i8 %4316, 0
  br i1 %4317, label %4330, label %4326

4318:                                             ; preds = %4318, %4313
  %4319 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4310, %4313 ], [ %4324, %4318 ]
  %4320 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4319, align 8
  %4321 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4320 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4322 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4321, align 8
  %4323 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4322, align 8
  call void %4323(%"class.v8::internal::HeapObjectAllocationTracker"* %4320, i64 %4314, i32 40) #6
  %4324 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4319, i64 1
  %4325 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4324, %4311
  br i1 %4325, label %4315, label %4318

4326:                                             ; preds = %4315
  %4327 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4328 = load i32, i32* %4327, align 8
  %4329 = add i32 %4328, 1
  store i32 %4329, i32* %4327, align 8
  br label %4341

4330:                                             ; preds = %4315
  %4331 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4332 = icmp sgt i32 %4331, 0
  br i1 %4332, label %4333, label %4341

4333:                                             ; preds = %4330
  %4334 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4335 = load i32, i32* %4334, align 8
  %4336 = add i32 %4335, 1
  store i32 %4336, i32* %4334, align 8
  %4337 = urem i32 %4336, %4331
  %4338 = icmp eq i32 %4337, 0
  br i1 %4338, label %4339, label %4341

4339:                                             ; preds = %4333
  %4340 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4340, i32 0) #6
  br label %4341

4341:                                             ; preds = %4339, %4333, %4330, %4326
  %4342 = load i64, i64* %10, align 8
  %4343 = add i64 %4306, -1
  %4344 = inttoptr i64 %4343 to i32*
  %4345 = trunc i64 %4342 to i32
  store atomic volatile i32 %4345, i32* %4344 monotonic, align 4
  %4346 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4306, i16 zeroext 123, i32 0, i8 zeroext 3, i32 0) #6
  %4347 = and i64 %4346, 1
  %4348 = icmp eq i64 %4347, 0
  br i1 %4348, label %4349, label %4350, !prof !4

4349:                                             ; preds = %4341
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4350:                                             ; preds = %4303, %4341
  %4351 = phi i64 [ %4346, %4341 ], [ %4306, %4303 ]
  %4352 = and i64 %4351, 1
  %4353 = icmp eq i64 %4352, 0
  br i1 %4353, label %6363, label %4354

4354:                                             ; preds = %4350
  %4355 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 50
  store i64 %4351, i64* %4355, align 8
  %4356 = load i8, i8* %66, align 4, !range !3
  %4357 = icmp eq i8 %4356, 0
  br i1 %4357, label %4365, label %4358

4358:                                             ; preds = %4354
  %4359 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4360 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4359, align 8
  %4361 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4362 = load atomic i32, i32* %4361 monotonic, align 4
  %4363 = icmp eq i32 %4362, 2
  br i1 %4363, label %4364, label %4365, !prof !4

4364:                                             ; preds = %4358
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4360) #6
  br label %4365

4365:                                             ; preds = %4364, %4358, %4354
  %4366 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4367 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4368 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4367, i32 40, i32 0) #6
  %4369 = and i64 %4368, 1
  %4370 = icmp eq i64 %4369, 0
  br i1 %4370, label %4412, label %4371

4371:                                             ; preds = %4365
  %4372 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4373 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4374 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4372, %4373
  br i1 %4374, label %4377, label %4375

4375:                                             ; preds = %4371
  %4376 = add i64 %4368, -1
  br label %4380

4377:                                             ; preds = %4380, %4371
  %4378 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4379 = icmp eq i8 %4378, 0
  br i1 %4379, label %4392, label %4388

4380:                                             ; preds = %4380, %4375
  %4381 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4372, %4375 ], [ %4386, %4380 ]
  %4382 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4381, align 8
  %4383 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4382 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4384 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4383, align 8
  %4385 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4384, align 8
  call void %4385(%"class.v8::internal::HeapObjectAllocationTracker"* %4382, i64 %4376, i32 40) #6
  %4386 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4381, i64 1
  %4387 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4386, %4373
  br i1 %4387, label %4377, label %4380

4388:                                             ; preds = %4377
  %4389 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4390 = load i32, i32* %4389, align 8
  %4391 = add i32 %4390, 1
  store i32 %4391, i32* %4389, align 8
  br label %4403

4392:                                             ; preds = %4377
  %4393 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4394 = icmp sgt i32 %4393, 0
  br i1 %4394, label %4395, label %4403

4395:                                             ; preds = %4392
  %4396 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4397 = load i32, i32* %4396, align 8
  %4398 = add i32 %4397, 1
  store i32 %4398, i32* %4396, align 8
  %4399 = urem i32 %4398, %4393
  %4400 = icmp eq i32 %4399, 0
  br i1 %4400, label %4401, label %4403

4401:                                             ; preds = %4395
  %4402 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4402, i32 0) #6
  br label %4403

4403:                                             ; preds = %4401, %4395, %4392, %4388
  %4404 = load i64, i64* %10, align 8
  %4405 = add i64 %4368, -1
  %4406 = inttoptr i64 %4405 to i32*
  %4407 = trunc i64 %4404 to i32
  store atomic volatile i32 %4407, i32* %4406 monotonic, align 4
  %4408 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4368, i16 zeroext 183, i32 0, i8 zeroext 3, i32 0) #6
  %4409 = and i64 %4408, 1
  %4410 = icmp eq i64 %4409, 0
  br i1 %4410, label %4411, label %4412, !prof !4

4411:                                             ; preds = %4403
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4412:                                             ; preds = %4365, %4403
  %4413 = phi i64 [ %4408, %4403 ], [ %4368, %4365 ]
  %4414 = and i64 %4413, 1
  %4415 = icmp eq i64 %4414, 0
  br i1 %4415, label %6363, label %4416

4416:                                             ; preds = %4412
  %4417 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 67
  store i64 %4413, i64* %4417, align 8
  %4418 = load i8, i8* %66, align 4, !range !3
  %4419 = icmp eq i8 %4418, 0
  br i1 %4419, label %4427, label %4420

4420:                                             ; preds = %4416
  %4421 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4422 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4421, align 8
  %4423 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4424 = load atomic i32, i32* %4423 monotonic, align 4
  %4425 = icmp eq i32 %4424, 2
  br i1 %4425, label %4426, label %4427, !prof !4

4426:                                             ; preds = %4420
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4422) #6
  br label %4427

4427:                                             ; preds = %4426, %4420, %4416
  %4428 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4429 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4430 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4429, i32 40, i32 0) #6
  %4431 = and i64 %4430, 1
  %4432 = icmp eq i64 %4431, 0
  br i1 %4432, label %4474, label %4433

4433:                                             ; preds = %4427
  %4434 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4435 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4436 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4434, %4435
  br i1 %4436, label %4439, label %4437

4437:                                             ; preds = %4433
  %4438 = add i64 %4430, -1
  br label %4442

4439:                                             ; preds = %4442, %4433
  %4440 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4441 = icmp eq i8 %4440, 0
  br i1 %4441, label %4454, label %4450

4442:                                             ; preds = %4442, %4437
  %4443 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4434, %4437 ], [ %4448, %4442 ]
  %4444 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4443, align 8
  %4445 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4444 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4446 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4445, align 8
  %4447 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4446, align 8
  call void %4447(%"class.v8::internal::HeapObjectAllocationTracker"* %4444, i64 %4438, i32 40) #6
  %4448 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4443, i64 1
  %4449 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4448, %4435
  br i1 %4449, label %4439, label %4442

4450:                                             ; preds = %4439
  %4451 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4452 = load i32, i32* %4451, align 8
  %4453 = add i32 %4452, 1
  store i32 %4453, i32* %4451, align 8
  br label %4465

4454:                                             ; preds = %4439
  %4455 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4456 = icmp sgt i32 %4455, 0
  br i1 %4456, label %4457, label %4465

4457:                                             ; preds = %4454
  %4458 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4459 = load i32, i32* %4458, align 8
  %4460 = add i32 %4459, 1
  store i32 %4460, i32* %4458, align 8
  %4461 = urem i32 %4460, %4455
  %4462 = icmp eq i32 %4461, 0
  br i1 %4462, label %4463, label %4465

4463:                                             ; preds = %4457
  %4464 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4464, i32 0) #6
  br label %4465

4465:                                             ; preds = %4463, %4457, %4454, %4450
  %4466 = load i64, i64* %10, align 8
  %4467 = add i64 %4430, -1
  %4468 = inttoptr i64 %4467 to i32*
  %4469 = trunc i64 %4466 to i32
  store atomic volatile i32 %4469, i32* %4468 monotonic, align 4
  %4470 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4430, i16 zeroext 122, i32 0, i8 zeroext 3, i32 0) #6
  %4471 = and i64 %4470, 1
  %4472 = icmp eq i64 %4471, 0
  br i1 %4472, label %4473, label %4474, !prof !4

4473:                                             ; preds = %4465
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4474:                                             ; preds = %4427, %4465
  %4475 = phi i64 [ %4470, %4465 ], [ %4430, %4427 ]
  %4476 = and i64 %4475, 1
  %4477 = icmp eq i64 %4476, 0
  br i1 %4477, label %6363, label %4478

4478:                                             ; preds = %4474
  %4479 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 46
  store i64 %4475, i64* %4479, align 8
  %4480 = load i8, i8* %66, align 4, !range !3
  %4481 = icmp eq i8 %4480, 0
  br i1 %4481, label %4489, label %4482

4482:                                             ; preds = %4478
  %4483 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4484 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4483, align 8
  %4485 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4486 = load atomic i32, i32* %4485 monotonic, align 4
  %4487 = icmp eq i32 %4486, 2
  br i1 %4487, label %4488, label %4489, !prof !4

4488:                                             ; preds = %4482
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4484) #6
  br label %4489

4489:                                             ; preds = %4488, %4482, %4478
  %4490 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4491 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4492 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4491, i32 40, i32 0) #6
  %4493 = and i64 %4492, 1
  %4494 = icmp eq i64 %4493, 0
  br i1 %4494, label %4536, label %4495

4495:                                             ; preds = %4489
  %4496 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4497 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4498 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4496, %4497
  br i1 %4498, label %4501, label %4499

4499:                                             ; preds = %4495
  %4500 = add i64 %4492, -1
  br label %4504

4501:                                             ; preds = %4504, %4495
  %4502 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4503 = icmp eq i8 %4502, 0
  br i1 %4503, label %4516, label %4512

4504:                                             ; preds = %4504, %4499
  %4505 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4496, %4499 ], [ %4510, %4504 ]
  %4506 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4505, align 8
  %4507 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4506 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4508 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4507, align 8
  %4509 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4508, align 8
  call void %4509(%"class.v8::internal::HeapObjectAllocationTracker"* %4506, i64 %4500, i32 40) #6
  %4510 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4505, i64 1
  %4511 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4510, %4497
  br i1 %4511, label %4501, label %4504

4512:                                             ; preds = %4501
  %4513 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4514 = load i32, i32* %4513, align 8
  %4515 = add i32 %4514, 1
  store i32 %4515, i32* %4513, align 8
  br label %4527

4516:                                             ; preds = %4501
  %4517 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4518 = icmp sgt i32 %4517, 0
  br i1 %4518, label %4519, label %4527

4519:                                             ; preds = %4516
  %4520 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4521 = load i32, i32* %4520, align 8
  %4522 = add i32 %4521, 1
  store i32 %4522, i32* %4520, align 8
  %4523 = urem i32 %4522, %4517
  %4524 = icmp eq i32 %4523, 0
  br i1 %4524, label %4525, label %4527

4525:                                             ; preds = %4519
  %4526 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4526, i32 0) #6
  br label %4527

4527:                                             ; preds = %4525, %4519, %4516, %4512
  %4528 = load i64, i64* %10, align 8
  %4529 = add i64 %4492, -1
  %4530 = inttoptr i64 %4529 to i32*
  %4531 = trunc i64 %4528 to i32
  store atomic volatile i32 %4531, i32* %4530 monotonic, align 4
  %4532 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4492, i16 zeroext 124, i32 0, i8 zeroext 3, i32 0) #6
  %4533 = and i64 %4532, 1
  %4534 = icmp eq i64 %4533, 0
  br i1 %4534, label %4535, label %4536, !prof !4

4535:                                             ; preds = %4527
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4536:                                             ; preds = %4489, %4527
  %4537 = phi i64 [ %4532, %4527 ], [ %4492, %4489 ]
  %4538 = and i64 %4537, 1
  %4539 = icmp eq i64 %4538, 0
  br i1 %4539, label %6363, label %4540

4540:                                             ; preds = %4536
  %4541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 52
  store i64 %4537, i64* %4541, align 8
  %4542 = load i8, i8* %66, align 4, !range !3
  %4543 = icmp eq i8 %4542, 0
  br i1 %4543, label %4551, label %4544

4544:                                             ; preds = %4540
  %4545 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4546 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4545, align 8
  %4547 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4546, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4548 = load atomic i32, i32* %4547 monotonic, align 4
  %4549 = icmp eq i32 %4548, 2
  br i1 %4549, label %4550, label %4551, !prof !4

4550:                                             ; preds = %4544
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4546) #6
  br label %4551

4551:                                             ; preds = %4550, %4544, %4540
  %4552 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4553 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4554 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4553, i32 40, i32 0) #6
  %4555 = and i64 %4554, 1
  %4556 = icmp eq i64 %4555, 0
  br i1 %4556, label %4598, label %4557

4557:                                             ; preds = %4551
  %4558 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4559 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4560 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4558, %4559
  br i1 %4560, label %4563, label %4561

4561:                                             ; preds = %4557
  %4562 = add i64 %4554, -1
  br label %4566

4563:                                             ; preds = %4566, %4557
  %4564 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4565 = icmp eq i8 %4564, 0
  br i1 %4565, label %4578, label %4574

4566:                                             ; preds = %4566, %4561
  %4567 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4558, %4561 ], [ %4572, %4566 ]
  %4568 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4567, align 8
  %4569 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4568 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4570 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4569, align 8
  %4571 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4570, align 8
  call void %4571(%"class.v8::internal::HeapObjectAllocationTracker"* %4568, i64 %4562, i32 40) #6
  %4572 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4567, i64 1
  %4573 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4572, %4559
  br i1 %4573, label %4563, label %4566

4574:                                             ; preds = %4563
  %4575 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4576 = load i32, i32* %4575, align 8
  %4577 = add i32 %4576, 1
  store i32 %4577, i32* %4575, align 8
  br label %4589

4578:                                             ; preds = %4563
  %4579 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4580 = icmp sgt i32 %4579, 0
  br i1 %4580, label %4581, label %4589

4581:                                             ; preds = %4578
  %4582 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4583 = load i32, i32* %4582, align 8
  %4584 = add i32 %4583, 1
  store i32 %4584, i32* %4582, align 8
  %4585 = urem i32 %4584, %4579
  %4586 = icmp eq i32 %4585, 0
  br i1 %4586, label %4587, label %4589

4587:                                             ; preds = %4581
  %4588 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4588, i32 0) #6
  br label %4589

4589:                                             ; preds = %4587, %4581, %4578, %4574
  %4590 = load i64, i64* %10, align 8
  %4591 = add i64 %4554, -1
  %4592 = inttoptr i64 %4591 to i32*
  %4593 = trunc i64 %4590 to i32
  store atomic volatile i32 %4593, i32* %4592 monotonic, align 4
  %4594 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4554, i16 zeroext 128, i32 0, i8 zeroext 3, i32 0) #6
  %4595 = and i64 %4594, 1
  %4596 = icmp eq i64 %4595, 0
  br i1 %4596, label %4597, label %4598, !prof !4

4597:                                             ; preds = %4589
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4598:                                             ; preds = %4551, %4589
  %4599 = phi i64 [ %4594, %4589 ], [ %4554, %4551 ]
  %4600 = and i64 %4599, 1
  %4601 = icmp eq i64 %4600, 0
  br i1 %4601, label %6363, label %4602

4602:                                             ; preds = %4598
  %4603 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 62
  store i64 %4599, i64* %4603, align 8
  %4604 = load i8, i8* %66, align 4, !range !3
  %4605 = icmp eq i8 %4604, 0
  br i1 %4605, label %4613, label %4606

4606:                                             ; preds = %4602
  %4607 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4608 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4607, align 8
  %4609 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4610 = load atomic i32, i32* %4609 monotonic, align 4
  %4611 = icmp eq i32 %4610, 2
  br i1 %4611, label %4612, label %4613, !prof !4

4612:                                             ; preds = %4606
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4608) #6
  br label %4613

4613:                                             ; preds = %4612, %4606, %4602
  %4614 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4615 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4616 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4615, i32 40, i32 0) #6
  %4617 = and i64 %4616, 1
  %4618 = icmp eq i64 %4617, 0
  br i1 %4618, label %4660, label %4619

4619:                                             ; preds = %4613
  %4620 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4621 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4622 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4620, %4621
  br i1 %4622, label %4625, label %4623

4623:                                             ; preds = %4619
  %4624 = add i64 %4616, -1
  br label %4628

4625:                                             ; preds = %4628, %4619
  %4626 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4627 = icmp eq i8 %4626, 0
  br i1 %4627, label %4640, label %4636

4628:                                             ; preds = %4628, %4623
  %4629 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4620, %4623 ], [ %4634, %4628 ]
  %4630 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4629, align 8
  %4631 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4630 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4632 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4631, align 8
  %4633 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4632, align 8
  call void %4633(%"class.v8::internal::HeapObjectAllocationTracker"* %4630, i64 %4624, i32 40) #6
  %4634 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4629, i64 1
  %4635 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4634, %4621
  br i1 %4635, label %4625, label %4628

4636:                                             ; preds = %4625
  %4637 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4638 = load i32, i32* %4637, align 8
  %4639 = add i32 %4638, 1
  store i32 %4639, i32* %4637, align 8
  br label %4651

4640:                                             ; preds = %4625
  %4641 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4642 = icmp sgt i32 %4641, 0
  br i1 %4642, label %4643, label %4651

4643:                                             ; preds = %4640
  %4644 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4645 = load i32, i32* %4644, align 8
  %4646 = add i32 %4645, 1
  store i32 %4646, i32* %4644, align 8
  %4647 = urem i32 %4646, %4641
  %4648 = icmp eq i32 %4647, 0
  br i1 %4648, label %4649, label %4651

4649:                                             ; preds = %4643
  %4650 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4650, i32 0) #6
  br label %4651

4651:                                             ; preds = %4649, %4643, %4640, %4636
  %4652 = load i64, i64* %10, align 8
  %4653 = add i64 %4616, -1
  %4654 = inttoptr i64 %4653 to i32*
  %4655 = trunc i64 %4652 to i32
  store atomic volatile i32 %4655, i32* %4654 monotonic, align 4
  %4656 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4616, i16 zeroext 165, i32 0, i8 zeroext 3, i32 0) #6
  %4657 = and i64 %4656, 1
  %4658 = icmp eq i64 %4657, 0
  br i1 %4658, label %4659, label %4660, !prof !4

4659:                                             ; preds = %4651
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4660:                                             ; preds = %4613, %4651
  %4661 = phi i64 [ %4656, %4651 ], [ %4616, %4613 ]
  %4662 = and i64 %4661, 1
  %4663 = icmp eq i64 %4662, 0
  br i1 %4663, label %6363, label %4664

4664:                                             ; preds = %4660
  %4665 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 76
  store i64 %4661, i64* %4665, align 8
  %4666 = load i8, i8* %66, align 4, !range !3
  %4667 = icmp eq i8 %4666, 0
  br i1 %4667, label %4675, label %4668

4668:                                             ; preds = %4664
  %4669 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4670 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4669, align 8
  %4671 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4672 = load atomic i32, i32* %4671 monotonic, align 4
  %4673 = icmp eq i32 %4672, 2
  br i1 %4673, label %4674, label %4675, !prof !4

4674:                                             ; preds = %4668
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4670) #6
  br label %4675

4675:                                             ; preds = %4674, %4668, %4664
  %4676 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4677 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4678 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4677, i32 40, i32 0) #6
  %4679 = and i64 %4678, 1
  %4680 = icmp eq i64 %4679, 0
  br i1 %4680, label %4722, label %4681

4681:                                             ; preds = %4675
  %4682 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4683 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4684 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4682, %4683
  br i1 %4684, label %4687, label %4685

4685:                                             ; preds = %4681
  %4686 = add i64 %4678, -1
  br label %4690

4687:                                             ; preds = %4690, %4681
  %4688 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4689 = icmp eq i8 %4688, 0
  br i1 %4689, label %4702, label %4698

4690:                                             ; preds = %4690, %4685
  %4691 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4682, %4685 ], [ %4696, %4690 ]
  %4692 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4691, align 8
  %4693 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4692 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4694 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4693, align 8
  %4695 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4694, align 8
  call void %4695(%"class.v8::internal::HeapObjectAllocationTracker"* %4692, i64 %4686, i32 40) #6
  %4696 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4691, i64 1
  %4697 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4696, %4683
  br i1 %4697, label %4687, label %4690

4698:                                             ; preds = %4687
  %4699 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4700 = load i32, i32* %4699, align 8
  %4701 = add i32 %4700, 1
  store i32 %4701, i32* %4699, align 8
  br label %4713

4702:                                             ; preds = %4687
  %4703 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4704 = icmp sgt i32 %4703, 0
  br i1 %4704, label %4705, label %4713

4705:                                             ; preds = %4702
  %4706 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4707 = load i32, i32* %4706, align 8
  %4708 = add i32 %4707, 1
  store i32 %4708, i32* %4706, align 8
  %4709 = urem i32 %4708, %4703
  %4710 = icmp eq i32 %4709, 0
  br i1 %4710, label %4711, label %4713

4711:                                             ; preds = %4705
  %4712 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4712, i32 0) #6
  br label %4713

4713:                                             ; preds = %4711, %4705, %4702, %4698
  %4714 = load i64, i64* %10, align 8
  %4715 = add i64 %4678, -1
  %4716 = inttoptr i64 %4715 to i32*
  %4717 = trunc i64 %4714 to i32
  store atomic volatile i32 %4717, i32* %4716 monotonic, align 4
  %4718 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4678, i16 zeroext 121, i32 0, i8 zeroext 3, i32 0) #6
  %4719 = and i64 %4718, 1
  %4720 = icmp eq i64 %4719, 0
  br i1 %4720, label %4721, label %4722, !prof !4

4721:                                             ; preds = %4713
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4722:                                             ; preds = %4675, %4713
  %4723 = phi i64 [ %4718, %4713 ], [ %4678, %4675 ]
  %4724 = and i64 %4723, 1
  %4725 = icmp eq i64 %4724, 0
  br i1 %4725, label %6363, label %4726

4726:                                             ; preds = %4722
  %4727 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 75
  store i64 %4723, i64* %4727, align 8
  %4728 = load i8, i8* %66, align 4, !range !3
  %4729 = icmp eq i8 %4728, 0
  br i1 %4729, label %4737, label %4730

4730:                                             ; preds = %4726
  %4731 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4732 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4731, align 8
  %4733 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4732, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4734 = load atomic i32, i32* %4733 monotonic, align 4
  %4735 = icmp eq i32 %4734, 2
  br i1 %4735, label %4736, label %4737, !prof !4

4736:                                             ; preds = %4730
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4732) #6
  br label %4737

4737:                                             ; preds = %4736, %4730, %4726
  %4738 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4739 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4740 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4739, i32 40, i32 0) #6
  %4741 = and i64 %4740, 1
  %4742 = icmp eq i64 %4741, 0
  br i1 %4742, label %4784, label %4743

4743:                                             ; preds = %4737
  %4744 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4745 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4746 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4744, %4745
  br i1 %4746, label %4749, label %4747

4747:                                             ; preds = %4743
  %4748 = add i64 %4740, -1
  br label %4752

4749:                                             ; preds = %4752, %4743
  %4750 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4751 = icmp eq i8 %4750, 0
  br i1 %4751, label %4764, label %4760

4752:                                             ; preds = %4752, %4747
  %4753 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4744, %4747 ], [ %4758, %4752 ]
  %4754 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4753, align 8
  %4755 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4754 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4756 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4755, align 8
  %4757 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4756, align 8
  call void %4757(%"class.v8::internal::HeapObjectAllocationTracker"* %4754, i64 %4748, i32 40) #6
  %4758 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4753, i64 1
  %4759 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4758, %4745
  br i1 %4759, label %4749, label %4752

4760:                                             ; preds = %4749
  %4761 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4762 = load i32, i32* %4761, align 8
  %4763 = add i32 %4762, 1
  store i32 %4763, i32* %4761, align 8
  br label %4775

4764:                                             ; preds = %4749
  %4765 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4766 = icmp sgt i32 %4765, 0
  br i1 %4766, label %4767, label %4775

4767:                                             ; preds = %4764
  %4768 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4769 = load i32, i32* %4768, align 8
  %4770 = add i32 %4769, 1
  store i32 %4770, i32* %4768, align 8
  %4771 = urem i32 %4770, %4765
  %4772 = icmp eq i32 %4771, 0
  br i1 %4772, label %4773, label %4775

4773:                                             ; preds = %4767
  %4774 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4774, i32 0) #6
  br label %4775

4775:                                             ; preds = %4773, %4767, %4764, %4760
  %4776 = load i64, i64* %10, align 8
  %4777 = add i64 %4740, -1
  %4778 = inttoptr i64 %4777 to i32*
  %4779 = trunc i64 %4776 to i32
  store atomic volatile i32 %4779, i32* %4778 monotonic, align 4
  %4780 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4740, i16 zeroext 119, i32 0, i8 zeroext 3, i32 0) #6
  %4781 = and i64 %4780, 1
  %4782 = icmp eq i64 %4781, 0
  br i1 %4782, label %4783, label %4784, !prof !4

4783:                                             ; preds = %4775
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4784:                                             ; preds = %4737, %4775
  %4785 = phi i64 [ %4780, %4775 ], [ %4740, %4737 ]
  %4786 = and i64 %4785, 1
  %4787 = icmp eq i64 %4786, 0
  br i1 %4787, label %6363, label %4788

4788:                                             ; preds = %4784
  %4789 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 39
  store i64 %4785, i64* %4789, align 8
  %4790 = load i8, i8* %66, align 4, !range !3
  %4791 = icmp eq i8 %4790, 0
  br i1 %4791, label %4799, label %4792

4792:                                             ; preds = %4788
  %4793 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4794 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4793, align 8
  %4795 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4794, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4796 = load atomic i32, i32* %4795 monotonic, align 4
  %4797 = icmp eq i32 %4796, 2
  br i1 %4797, label %4798, label %4799, !prof !4

4798:                                             ; preds = %4792
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4794) #6
  br label %4799

4799:                                             ; preds = %4798, %4792, %4788
  %4800 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4801 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4802 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4801, i32 40, i32 0) #6
  %4803 = and i64 %4802, 1
  %4804 = icmp eq i64 %4803, 0
  br i1 %4804, label %4846, label %4805

4805:                                             ; preds = %4799
  %4806 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4807 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4808 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4806, %4807
  br i1 %4808, label %4811, label %4809

4809:                                             ; preds = %4805
  %4810 = add i64 %4802, -1
  br label %4814

4811:                                             ; preds = %4814, %4805
  %4812 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4813 = icmp eq i8 %4812, 0
  br i1 %4813, label %4826, label %4822

4814:                                             ; preds = %4814, %4809
  %4815 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4806, %4809 ], [ %4820, %4814 ]
  %4816 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4815, align 8
  %4817 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4816 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4818 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4817, align 8
  %4819 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4818, align 8
  call void %4819(%"class.v8::internal::HeapObjectAllocationTracker"* %4816, i64 %4810, i32 40) #6
  %4820 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4815, i64 1
  %4821 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4820, %4807
  br i1 %4821, label %4811, label %4814

4822:                                             ; preds = %4811
  %4823 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4824 = load i32, i32* %4823, align 8
  %4825 = add i32 %4824, 1
  store i32 %4825, i32* %4823, align 8
  br label %4837

4826:                                             ; preds = %4811
  %4827 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4828 = icmp sgt i32 %4827, 0
  br i1 %4828, label %4829, label %4837

4829:                                             ; preds = %4826
  %4830 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4831 = load i32, i32* %4830, align 8
  %4832 = add i32 %4831, 1
  store i32 %4832, i32* %4830, align 8
  %4833 = urem i32 %4832, %4827
  %4834 = icmp eq i32 %4833, 0
  br i1 %4834, label %4835, label %4837

4835:                                             ; preds = %4829
  %4836 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4836, i32 0) #6
  br label %4837

4837:                                             ; preds = %4835, %4829, %4826, %4822
  %4838 = load i64, i64* %10, align 8
  %4839 = add i64 %4802, -1
  %4840 = inttoptr i64 %4839 to i32*
  %4841 = trunc i64 %4838 to i32
  store atomic volatile i32 %4841, i32* %4840 monotonic, align 4
  %4842 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4802, i16 zeroext 131, i32 0, i8 zeroext 3, i32 0) #6
  %4843 = and i64 %4842, 1
  %4844 = icmp eq i64 %4843, 0
  br i1 %4844, label %4845, label %4846, !prof !4

4845:                                             ; preds = %4837
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4846:                                             ; preds = %4799, %4837
  %4847 = phi i64 [ %4842, %4837 ], [ %4802, %4799 ]
  %4848 = and i64 %4847, 1
  %4849 = icmp eq i64 %4848, 0
  br i1 %4849, label %6363, label %4850

4850:                                             ; preds = %4846
  %4851 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 36
  store i64 %4847, i64* %4851, align 8
  %4852 = load i8, i8* %66, align 4, !range !3
  %4853 = icmp eq i8 %4852, 0
  br i1 %4853, label %4861, label %4854

4854:                                             ; preds = %4850
  %4855 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4856 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4855, align 8
  %4857 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4856, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4858 = load atomic i32, i32* %4857 monotonic, align 4
  %4859 = icmp eq i32 %4858, 2
  br i1 %4859, label %4860, label %4861, !prof !4

4860:                                             ; preds = %4854
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4856) #6
  br label %4861

4861:                                             ; preds = %4860, %4854, %4850
  %4862 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4863 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4864 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4863, i32 40, i32 0) #6
  %4865 = and i64 %4864, 1
  %4866 = icmp eq i64 %4865, 0
  br i1 %4866, label %4908, label %4867

4867:                                             ; preds = %4861
  %4868 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4869 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4870 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4868, %4869
  br i1 %4870, label %4873, label %4871

4871:                                             ; preds = %4867
  %4872 = add i64 %4864, -1
  br label %4876

4873:                                             ; preds = %4876, %4867
  %4874 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4875 = icmp eq i8 %4874, 0
  br i1 %4875, label %4888, label %4884

4876:                                             ; preds = %4876, %4871
  %4877 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4868, %4871 ], [ %4882, %4876 ]
  %4878 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4877, align 8
  %4879 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4878 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4880 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4879, align 8
  %4881 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4880, align 8
  call void %4881(%"class.v8::internal::HeapObjectAllocationTracker"* %4878, i64 %4872, i32 40) #6
  %4882 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4877, i64 1
  %4883 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4882, %4869
  br i1 %4883, label %4873, label %4876

4884:                                             ; preds = %4873
  %4885 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4886 = load i32, i32* %4885, align 8
  %4887 = add i32 %4886, 1
  store i32 %4887, i32* %4885, align 8
  br label %4899

4888:                                             ; preds = %4873
  %4889 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4890 = icmp sgt i32 %4889, 0
  br i1 %4890, label %4891, label %4899

4891:                                             ; preds = %4888
  %4892 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4893 = load i32, i32* %4892, align 8
  %4894 = add i32 %4893, 1
  store i32 %4894, i32* %4892, align 8
  %4895 = urem i32 %4894, %4889
  %4896 = icmp eq i32 %4895, 0
  br i1 %4896, label %4897, label %4899

4897:                                             ; preds = %4891
  %4898 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4898, i32 0) #6
  br label %4899

4899:                                             ; preds = %4897, %4891, %4888, %4884
  %4900 = load i64, i64* %10, align 8
  %4901 = add i64 %4864, -1
  %4902 = inttoptr i64 %4901 to i32*
  %4903 = trunc i64 %4900 to i32
  store atomic volatile i32 %4903, i32* %4902 monotonic, align 4
  %4904 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4864, i16 zeroext 130, i32 0, i8 zeroext 3, i32 0) #6
  %4905 = and i64 %4904, 1
  %4906 = icmp eq i64 %4905, 0
  br i1 %4906, label %4907, label %4908, !prof !4

4907:                                             ; preds = %4899
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4908:                                             ; preds = %4861, %4899
  %4909 = phi i64 [ %4904, %4899 ], [ %4864, %4861 ]
  %4910 = and i64 %4909, 1
  %4911 = icmp eq i64 %4910, 0
  br i1 %4911, label %6363, label %4912

4912:                                             ; preds = %4908
  %4913 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 41
  store i64 %4909, i64* %4913, align 8
  %4914 = load i8, i8* %66, align 4, !range !3
  %4915 = icmp eq i8 %4914, 0
  br i1 %4915, label %4923, label %4916

4916:                                             ; preds = %4912
  %4917 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4918 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4917, align 8
  %4919 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4918, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4920 = load atomic i32, i32* %4919 monotonic, align 4
  %4921 = icmp eq i32 %4920, 2
  br i1 %4921, label %4922, label %4923, !prof !4

4922:                                             ; preds = %4916
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4918) #6
  br label %4923

4923:                                             ; preds = %4922, %4916, %4912
  %4924 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4925 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4926 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4925, i32 40, i32 0) #6
  %4927 = and i64 %4926, 1
  %4928 = icmp eq i64 %4927, 0
  br i1 %4928, label %4970, label %4929

4929:                                             ; preds = %4923
  %4930 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4931 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4932 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4930, %4931
  br i1 %4932, label %4935, label %4933

4933:                                             ; preds = %4929
  %4934 = add i64 %4926, -1
  br label %4938

4935:                                             ; preds = %4938, %4929
  %4936 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4937 = icmp eq i8 %4936, 0
  br i1 %4937, label %4950, label %4946

4938:                                             ; preds = %4938, %4933
  %4939 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4930, %4933 ], [ %4944, %4938 ]
  %4940 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4939, align 8
  %4941 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %4940 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %4942 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %4941, align 8
  %4943 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %4942, align 8
  call void %4943(%"class.v8::internal::HeapObjectAllocationTracker"* %4940, i64 %4934, i32 40) #6
  %4944 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %4939, i64 1
  %4945 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4944, %4931
  br i1 %4945, label %4935, label %4938

4946:                                             ; preds = %4935
  %4947 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4948 = load i32, i32* %4947, align 8
  %4949 = add i32 %4948, 1
  store i32 %4949, i32* %4947, align 8
  br label %4961

4950:                                             ; preds = %4935
  %4951 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %4952 = icmp sgt i32 %4951, 0
  br i1 %4952, label %4953, label %4961

4953:                                             ; preds = %4950
  %4954 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %4955 = load i32, i32* %4954, align 8
  %4956 = add i32 %4955, 1
  store i32 %4956, i32* %4954, align 8
  %4957 = urem i32 %4956, %4951
  %4958 = icmp eq i32 %4957, 0
  br i1 %4958, label %4959, label %4961

4959:                                             ; preds = %4953
  %4960 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %4960, i32 0) #6
  br label %4961

4961:                                             ; preds = %4959, %4953, %4950, %4946
  %4962 = load i64, i64* %10, align 8
  %4963 = add i64 %4926, -1
  %4964 = inttoptr i64 %4963 to i32*
  %4965 = trunc i64 %4962 to i32
  store atomic volatile i32 %4965, i32* %4964 monotonic, align 4
  %4966 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4926, i16 zeroext 164, i32 0, i8 zeroext 3, i32 0) #6
  %4967 = and i64 %4966, 1
  %4968 = icmp eq i64 %4967, 0
  br i1 %4968, label %4969, label %4970, !prof !4

4969:                                             ; preds = %4961
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

4970:                                             ; preds = %4923, %4961
  %4971 = phi i64 [ %4966, %4961 ], [ %4926, %4923 ]
  %4972 = and i64 %4971, 1
  %4973 = icmp eq i64 %4972, 0
  br i1 %4973, label %6363, label %4974

4974:                                             ; preds = %4970
  %4975 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 44
  store i64 %4971, i64* %4975, align 8
  %4976 = load i8, i8* %66, align 4, !range !3
  %4977 = icmp eq i8 %4976, 0
  br i1 %4977, label %4985, label %4978

4978:                                             ; preds = %4974
  %4979 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %4980 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %4979, align 8
  %4981 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4980, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4982 = load atomic i32, i32* %4981 monotonic, align 4
  %4983 = icmp eq i32 %4982, 2
  br i1 %4983, label %4984, label %4985, !prof !4

4984:                                             ; preds = %4978
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %4980) #6
  br label %4985

4985:                                             ; preds = %4984, %4978, %4974
  %4986 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %4987 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %4988 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %4987, i32 40, i32 0) #6
  %4989 = and i64 %4988, 1
  %4990 = icmp eq i64 %4989, 0
  br i1 %4990, label %5032, label %4991

4991:                                             ; preds = %4985
  %4992 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %4993 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %4994 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %4992, %4993
  br i1 %4994, label %4997, label %4995

4995:                                             ; preds = %4991
  %4996 = add i64 %4988, -1
  br label %5000

4997:                                             ; preds = %5000, %4991
  %4998 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %4999 = icmp eq i8 %4998, 0
  br i1 %4999, label %5012, label %5008

5000:                                             ; preds = %5000, %4995
  %5001 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %4992, %4995 ], [ %5006, %5000 ]
  %5002 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5001, align 8
  %5003 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5002 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5004 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5003, align 8
  %5005 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5004, align 8
  call void %5005(%"class.v8::internal::HeapObjectAllocationTracker"* %5002, i64 %4996, i32 40) #6
  %5006 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5001, i64 1
  %5007 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5006, %4993
  br i1 %5007, label %4997, label %5000

5008:                                             ; preds = %4997
  %5009 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5010 = load i32, i32* %5009, align 8
  %5011 = add i32 %5010, 1
  store i32 %5011, i32* %5009, align 8
  br label %5023

5012:                                             ; preds = %4997
  %5013 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5014 = icmp sgt i32 %5013, 0
  br i1 %5014, label %5015, label %5023

5015:                                             ; preds = %5012
  %5016 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5017 = load i32, i32* %5016, align 8
  %5018 = add i32 %5017, 1
  store i32 %5018, i32* %5016, align 8
  %5019 = urem i32 %5018, %5013
  %5020 = icmp eq i32 %5019, 0
  br i1 %5020, label %5021, label %5023

5021:                                             ; preds = %5015
  %5022 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5022, i32 0) #6
  br label %5023

5023:                                             ; preds = %5021, %5015, %5012, %5008
  %5024 = load i64, i64* %10, align 8
  %5025 = add i64 %4988, -1
  %5026 = inttoptr i64 %5025 to i32*
  %5027 = trunc i64 %5024 to i32
  store atomic volatile i32 %5027, i32* %5026 monotonic, align 4
  %5028 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %4988, i16 zeroext 98, i32 16, i8 zeroext 3, i32 0) #6
  %5029 = and i64 %5028, 1
  %5030 = icmp eq i64 %5029, 0
  br i1 %5030, label %5031, label %5032, !prof !4

5031:                                             ; preds = %5023
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5032:                                             ; preds = %4985, %5023
  %5033 = phi i64 [ %5028, %5023 ], [ %4988, %4985 ]
  %5034 = and i64 %5033, 1
  %5035 = icmp eq i64 %5034, 0
  br i1 %5035, label %6363, label %5036

5036:                                             ; preds = %5032
  %5037 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 59
  store i64 %5033, i64* %5037, align 8
  %5038 = load i8, i8* %66, align 4, !range !3
  %5039 = icmp eq i8 %5038, 0
  br i1 %5039, label %5047, label %5040

5040:                                             ; preds = %5036
  %5041 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5042 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5041, align 8
  %5043 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5042, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5044 = load atomic i32, i32* %5043 monotonic, align 4
  %5045 = icmp eq i32 %5044, 2
  br i1 %5045, label %5046, label %5047, !prof !4

5046:                                             ; preds = %5040
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5042) #6
  br label %5047

5047:                                             ; preds = %5046, %5040, %5036
  %5048 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5049 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5050 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5049, i32 40, i32 0) #6
  %5051 = and i64 %5050, 1
  %5052 = icmp eq i64 %5051, 0
  br i1 %5052, label %5094, label %5053

5053:                                             ; preds = %5047
  %5054 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5055 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5056 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5054, %5055
  br i1 %5056, label %5059, label %5057

5057:                                             ; preds = %5053
  %5058 = add i64 %5050, -1
  br label %5062

5059:                                             ; preds = %5062, %5053
  %5060 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5061 = icmp eq i8 %5060, 0
  br i1 %5061, label %5074, label %5070

5062:                                             ; preds = %5062, %5057
  %5063 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5054, %5057 ], [ %5068, %5062 ]
  %5064 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5063, align 8
  %5065 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5064 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5066 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5065, align 8
  %5067 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5066, align 8
  call void %5067(%"class.v8::internal::HeapObjectAllocationTracker"* %5064, i64 %5058, i32 40) #6
  %5068 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5063, i64 1
  %5069 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5068, %5055
  br i1 %5069, label %5059, label %5062

5070:                                             ; preds = %5059
  %5071 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5072 = load i32, i32* %5071, align 8
  %5073 = add i32 %5072, 1
  store i32 %5073, i32* %5071, align 8
  br label %5085

5074:                                             ; preds = %5059
  %5075 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5076 = icmp sgt i32 %5075, 0
  br i1 %5076, label %5077, label %5085

5077:                                             ; preds = %5074
  %5078 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5079 = load i32, i32* %5078, align 8
  %5080 = add i32 %5079, 1
  store i32 %5080, i32* %5078, align 8
  %5081 = urem i32 %5080, %5075
  %5082 = icmp eq i32 %5081, 0
  br i1 %5082, label %5083, label %5085

5083:                                             ; preds = %5077
  %5084 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5084, i32 0) #6
  br label %5085

5085:                                             ; preds = %5083, %5077, %5074, %5070
  %5086 = load i64, i64* %10, align 8
  %5087 = add i64 %5050, -1
  %5088 = inttoptr i64 %5087 to i32*
  %5089 = trunc i64 %5086 to i32
  store atomic volatile i32 %5089, i32* %5088 monotonic, align 4
  %5090 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5050, i16 zeroext 98, i32 16, i8 zeroext 3, i32 0) #6
  %5091 = and i64 %5090, 1
  %5092 = icmp eq i64 %5091, 0
  br i1 %5092, label %5093, label %5094, !prof !4

5093:                                             ; preds = %5085
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5094:                                             ; preds = %5047, %5085
  %5095 = phi i64 [ %5090, %5085 ], [ %5050, %5047 ]
  %5096 = and i64 %5095, 1
  %5097 = icmp eq i64 %5096, 0
  br i1 %5097, label %6363, label %5098

5098:                                             ; preds = %5094
  %5099 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 60
  store i64 %5095, i64* %5099, align 8
  %5100 = load i8, i8* %66, align 4, !range !3
  %5101 = icmp eq i8 %5100, 0
  br i1 %5101, label %5109, label %5102

5102:                                             ; preds = %5098
  %5103 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5104 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5103, align 8
  %5105 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5106 = load atomic i32, i32* %5105 monotonic, align 4
  %5107 = icmp eq i32 %5106, 2
  br i1 %5107, label %5108, label %5109, !prof !4

5108:                                             ; preds = %5102
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5104) #6
  br label %5109

5109:                                             ; preds = %5108, %5102, %5098
  %5110 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5111 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5112 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5111, i32 40, i32 0) #6
  %5113 = and i64 %5112, 1
  %5114 = icmp eq i64 %5113, 0
  br i1 %5114, label %5156, label %5115

5115:                                             ; preds = %5109
  %5116 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5117 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5118 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5116, %5117
  br i1 %5118, label %5121, label %5119

5119:                                             ; preds = %5115
  %5120 = add i64 %5112, -1
  br label %5124

5121:                                             ; preds = %5124, %5115
  %5122 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5123 = icmp eq i8 %5122, 0
  br i1 %5123, label %5136, label %5132

5124:                                             ; preds = %5124, %5119
  %5125 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5116, %5119 ], [ %5130, %5124 ]
  %5126 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5125, align 8
  %5127 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5126 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5128 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5127, align 8
  %5129 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5128, align 8
  call void %5129(%"class.v8::internal::HeapObjectAllocationTracker"* %5126, i64 %5120, i32 40) #6
  %5130 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5125, i64 1
  %5131 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5130, %5117
  br i1 %5131, label %5121, label %5124

5132:                                             ; preds = %5121
  %5133 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5134 = load i32, i32* %5133, align 8
  %5135 = add i32 %5134, 1
  store i32 %5135, i32* %5133, align 8
  br label %5147

5136:                                             ; preds = %5121
  %5137 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5138 = icmp sgt i32 %5137, 0
  br i1 %5138, label %5139, label %5147

5139:                                             ; preds = %5136
  %5140 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5141 = load i32, i32* %5140, align 8
  %5142 = add i32 %5141, 1
  store i32 %5142, i32* %5140, align 8
  %5143 = urem i32 %5142, %5137
  %5144 = icmp eq i32 %5143, 0
  br i1 %5144, label %5145, label %5147

5145:                                             ; preds = %5139
  %5146 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5146, i32 0) #6
  br label %5147

5147:                                             ; preds = %5145, %5139, %5136, %5132
  %5148 = load i64, i64* %10, align 8
  %5149 = add i64 %5112, -1
  %5150 = inttoptr i64 %5149 to i32*
  %5151 = trunc i64 %5148 to i32
  store atomic volatile i32 %5151, i32* %5150 monotonic, align 4
  %5152 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5112, i16 zeroext 98, i32 16, i8 zeroext 3, i32 0) #6
  %5153 = and i64 %5152, 1
  %5154 = icmp eq i64 %5153, 0
  br i1 %5154, label %5155, label %5156, !prof !4

5155:                                             ; preds = %5147
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5156:                                             ; preds = %5109, %5147
  %5157 = phi i64 [ %5152, %5147 ], [ %5112, %5109 ]
  %5158 = and i64 %5157, 1
  %5159 = icmp eq i64 %5158, 0
  br i1 %5159, label %6363, label %5160

5160:                                             ; preds = %5156
  %5161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 61
  store i64 %5157, i64* %5161, align 8
  %5162 = load i8, i8* %66, align 4, !range !3
  %5163 = icmp eq i8 %5162, 0
  br i1 %5163, label %5171, label %5164

5164:                                             ; preds = %5160
  %5165 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5166 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5165, align 8
  %5167 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5168 = load atomic i32, i32* %5167 monotonic, align 4
  %5169 = icmp eq i32 %5168, 2
  br i1 %5169, label %5170, label %5171, !prof !4

5170:                                             ; preds = %5164
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5166) #6
  br label %5171

5171:                                             ; preds = %5170, %5164, %5160
  %5172 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5173 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5174 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5173, i32 40, i32 0) #6
  %5175 = and i64 %5174, 1
  %5176 = icmp eq i64 %5175, 0
  br i1 %5176, label %5218, label %5177

5177:                                             ; preds = %5171
  %5178 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5179 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5180 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5178, %5179
  br i1 %5180, label %5183, label %5181

5181:                                             ; preds = %5177
  %5182 = add i64 %5174, -1
  br label %5186

5183:                                             ; preds = %5186, %5177
  %5184 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5185 = icmp eq i8 %5184, 0
  br i1 %5185, label %5198, label %5194

5186:                                             ; preds = %5186, %5181
  %5187 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5178, %5181 ], [ %5192, %5186 ]
  %5188 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5187, align 8
  %5189 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5188 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5190 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5189, align 8
  %5191 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5190, align 8
  call void %5191(%"class.v8::internal::HeapObjectAllocationTracker"* %5188, i64 %5182, i32 40) #6
  %5192 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5187, i64 1
  %5193 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5192, %5179
  br i1 %5193, label %5183, label %5186

5194:                                             ; preds = %5183
  %5195 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5196 = load i32, i32* %5195, align 8
  %5197 = add i32 %5196, 1
  store i32 %5197, i32* %5195, align 8
  br label %5209

5198:                                             ; preds = %5183
  %5199 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5200 = icmp sgt i32 %5199, 0
  br i1 %5200, label %5201, label %5209

5201:                                             ; preds = %5198
  %5202 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5203 = load i32, i32* %5202, align 8
  %5204 = add i32 %5203, 1
  store i32 %5204, i32* %5202, align 8
  %5205 = urem i32 %5204, %5199
  %5206 = icmp eq i32 %5205, 0
  br i1 %5206, label %5207, label %5209

5207:                                             ; preds = %5201
  %5208 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5208, i32 0) #6
  br label %5209

5209:                                             ; preds = %5207, %5201, %5198, %5194
  %5210 = load i64, i64* %10, align 8
  %5211 = add i64 %5174, -1
  %5212 = inttoptr i64 %5211 to i32*
  %5213 = trunc i64 %5210 to i32
  store atomic volatile i32 %5213, i32* %5212 monotonic, align 4
  %5214 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5174, i16 zeroext 175, i32 0, i8 zeroext 3, i32 0) #6
  %5215 = and i64 %5214, 1
  %5216 = icmp eq i64 %5215, 0
  br i1 %5216, label %5217, label %5218, !prof !4

5217:                                             ; preds = %5209
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5218:                                             ; preds = %5171, %5209
  %5219 = phi i64 [ %5214, %5209 ], [ %5174, %5171 ]
  %5220 = and i64 %5219, 1
  %5221 = icmp eq i64 %5220, 0
  br i1 %5221, label %6363, label %5222

5222:                                             ; preds = %5218
  %5223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 57
  store i64 %5219, i64* %5223, align 8
  %5224 = load i8, i8* %66, align 4, !range !3
  %5225 = icmp eq i8 %5224, 0
  br i1 %5225, label %5233, label %5226

5226:                                             ; preds = %5222
  %5227 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5228 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5227, align 8
  %5229 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5230 = load atomic i32, i32* %5229 monotonic, align 4
  %5231 = icmp eq i32 %5230, 2
  br i1 %5231, label %5232, label %5233, !prof !4

5232:                                             ; preds = %5226
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5228) #6
  br label %5233

5233:                                             ; preds = %5232, %5226, %5222
  %5234 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5235 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5236 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5235, i32 40, i32 0) #6
  %5237 = and i64 %5236, 1
  %5238 = icmp eq i64 %5237, 0
  br i1 %5238, label %5280, label %5239

5239:                                             ; preds = %5233
  %5240 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5241 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5242 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5240, %5241
  br i1 %5242, label %5245, label %5243

5243:                                             ; preds = %5239
  %5244 = add i64 %5236, -1
  br label %5248

5245:                                             ; preds = %5248, %5239
  %5246 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5247 = icmp eq i8 %5246, 0
  br i1 %5247, label %5260, label %5256

5248:                                             ; preds = %5248, %5243
  %5249 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5240, %5243 ], [ %5254, %5248 ]
  %5250 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5249, align 8
  %5251 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5250 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5252 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5251, align 8
  %5253 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5252, align 8
  call void %5253(%"class.v8::internal::HeapObjectAllocationTracker"* %5250, i64 %5244, i32 40) #6
  %5254 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5249, i64 1
  %5255 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5254, %5241
  br i1 %5255, label %5245, label %5248

5256:                                             ; preds = %5245
  %5257 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5258 = load i32, i32* %5257, align 8
  %5259 = add i32 %5258, 1
  store i32 %5259, i32* %5257, align 8
  br label %5271

5260:                                             ; preds = %5245
  %5261 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5262 = icmp sgt i32 %5261, 0
  br i1 %5262, label %5263, label %5271

5263:                                             ; preds = %5260
  %5264 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5265 = load i32, i32* %5264, align 8
  %5266 = add i32 %5265, 1
  store i32 %5266, i32* %5264, align 8
  %5267 = urem i32 %5266, %5261
  %5268 = icmp eq i32 %5267, 0
  br i1 %5268, label %5269, label %5271

5269:                                             ; preds = %5263
  %5270 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5270, i32 0) #6
  br label %5271

5271:                                             ; preds = %5269, %5263, %5260, %5256
  %5272 = load i64, i64* %10, align 8
  %5273 = add i64 %5236, -1
  %5274 = inttoptr i64 %5273 to i32*
  %5275 = trunc i64 %5272 to i32
  store atomic volatile i32 %5275, i32* %5274 monotonic, align 4
  %5276 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5236, i16 zeroext 179, i32 36, i8 zeroext 3, i32 0) #6
  %5277 = and i64 %5276, 1
  %5278 = icmp eq i64 %5277, 0
  br i1 %5278, label %5279, label %5280, !prof !4

5279:                                             ; preds = %5271
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5280:                                             ; preds = %5233, %5271
  %5281 = phi i64 [ %5276, %5271 ], [ %5236, %5233 ]
  %5282 = and i64 %5281, 1
  %5283 = icmp eq i64 %5282, 0
  br i1 %5283, label %6363, label %5284

5284:                                             ; preds = %5280
  %5285 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 19
  store i64 %5281, i64* %5285, align 8
  %5286 = load i8, i8* %66, align 4, !range !3
  %5287 = icmp eq i8 %5286, 0
  br i1 %5287, label %5295, label %5288

5288:                                             ; preds = %5284
  %5289 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5290 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5289, align 8
  %5291 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5292 = load atomic i32, i32* %5291 monotonic, align 4
  %5293 = icmp eq i32 %5292, 2
  br i1 %5293, label %5294, label %5295, !prof !4

5294:                                             ; preds = %5288
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5290) #6
  br label %5295

5295:                                             ; preds = %5294, %5288, %5284
  %5296 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5297 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5298 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5297, i32 40, i32 0) #6
  %5299 = and i64 %5298, 1
  %5300 = icmp eq i64 %5299, 0
  br i1 %5300, label %5342, label %5301

5301:                                             ; preds = %5295
  %5302 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5303 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5304 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5302, %5303
  br i1 %5304, label %5307, label %5305

5305:                                             ; preds = %5301
  %5306 = add i64 %5298, -1
  br label %5310

5307:                                             ; preds = %5310, %5301
  %5308 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5309 = icmp eq i8 %5308, 0
  br i1 %5309, label %5322, label %5318

5310:                                             ; preds = %5310, %5305
  %5311 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5302, %5305 ], [ %5316, %5310 ]
  %5312 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5311, align 8
  %5313 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5312 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5314 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5313, align 8
  %5315 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5314, align 8
  call void %5315(%"class.v8::internal::HeapObjectAllocationTracker"* %5312, i64 %5306, i32 40) #6
  %5316 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5311, i64 1
  %5317 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5316, %5303
  br i1 %5317, label %5307, label %5310

5318:                                             ; preds = %5307
  %5319 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5320 = load i32, i32* %5319, align 8
  %5321 = add i32 %5320, 1
  store i32 %5321, i32* %5319, align 8
  br label %5333

5322:                                             ; preds = %5307
  %5323 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5324 = icmp sgt i32 %5323, 0
  br i1 %5324, label %5325, label %5333

5325:                                             ; preds = %5322
  %5326 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5327 = load i32, i32* %5326, align 8
  %5328 = add i32 %5327, 1
  store i32 %5328, i32* %5326, align 8
  %5329 = urem i32 %5328, %5323
  %5330 = icmp eq i32 %5329, 0
  br i1 %5330, label %5331, label %5333

5331:                                             ; preds = %5325
  %5332 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5332, i32 0) #6
  br label %5333

5333:                                             ; preds = %5331, %5325, %5322, %5318
  %5334 = load i64, i64* %10, align 8
  %5335 = add i64 %5298, -1
  %5336 = inttoptr i64 %5335 to i32*
  %5337 = trunc i64 %5334 to i32
  store atomic volatile i32 %5337, i32* %5336 monotonic, align 4
  %5338 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5298, i16 zeroext 155, i32 72, i8 zeroext 3, i32 0) #6
  %5339 = and i64 %5338, 1
  %5340 = icmp eq i64 %5339, 0
  br i1 %5340, label %5341, label %5342, !prof !4

5341:                                             ; preds = %5333
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5342:                                             ; preds = %5295, %5333
  %5343 = phi i64 [ %5338, %5333 ], [ %5298, %5295 ]
  %5344 = and i64 %5343, 1
  %5345 = icmp eq i64 %5344, 0
  br i1 %5345, label %6363, label %5346

5346:                                             ; preds = %5342
  %5347 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 66
  store i64 %5343, i64* %5347, align 8
  %5348 = load i8, i8* %66, align 4, !range !3
  %5349 = icmp eq i8 %5348, 0
  br i1 %5349, label %5357, label %5350

5350:                                             ; preds = %5346
  %5351 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5352 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5351, align 8
  %5353 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5354 = load atomic i32, i32* %5353 monotonic, align 4
  %5355 = icmp eq i32 %5354, 2
  br i1 %5355, label %5356, label %5357, !prof !4

5356:                                             ; preds = %5350
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5352) #6
  br label %5357

5357:                                             ; preds = %5356, %5350, %5346
  %5358 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5359 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5360 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5359, i32 40, i32 0) #6
  %5361 = and i64 %5360, 1
  %5362 = icmp eq i64 %5361, 0
  br i1 %5362, label %5404, label %5363

5363:                                             ; preds = %5357
  %5364 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5365 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5366 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5364, %5365
  br i1 %5366, label %5369, label %5367

5367:                                             ; preds = %5363
  %5368 = add i64 %5360, -1
  br label %5372

5369:                                             ; preds = %5372, %5363
  %5370 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5371 = icmp eq i8 %5370, 0
  br i1 %5371, label %5384, label %5380

5372:                                             ; preds = %5372, %5367
  %5373 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5364, %5367 ], [ %5378, %5372 ]
  %5374 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5373, align 8
  %5375 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5374 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5376 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5375, align 8
  %5377 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5376, align 8
  call void %5377(%"class.v8::internal::HeapObjectAllocationTracker"* %5374, i64 %5368, i32 40) #6
  %5378 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5373, i64 1
  %5379 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5378, %5365
  br i1 %5379, label %5369, label %5372

5380:                                             ; preds = %5369
  %5381 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5382 = load i32, i32* %5381, align 8
  %5383 = add i32 %5382, 1
  store i32 %5383, i32* %5381, align 8
  br label %5395

5384:                                             ; preds = %5369
  %5385 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5386 = icmp sgt i32 %5385, 0
  br i1 %5386, label %5387, label %5395

5387:                                             ; preds = %5384
  %5388 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5389 = load i32, i32* %5388, align 8
  %5390 = add i32 %5389, 1
  store i32 %5390, i32* %5388, align 8
  %5391 = urem i32 %5390, %5385
  %5392 = icmp eq i32 %5391, 0
  br i1 %5392, label %5393, label %5395

5393:                                             ; preds = %5387
  %5394 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5394, i32 0) #6
  br label %5395

5395:                                             ; preds = %5393, %5387, %5384, %5380
  %5396 = load i64, i64* %10, align 8
  %5397 = add i64 %5360, -1
  %5398 = inttoptr i64 %5397 to i32*
  %5399 = trunc i64 %5396 to i32
  store atomic volatile i32 %5399, i32* %5398 monotonic, align 4
  %5400 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5360, i16 zeroext 156, i32 40, i8 zeroext 3, i32 0) #6
  %5401 = and i64 %5400, 1
  %5402 = icmp eq i64 %5401, 0
  br i1 %5402, label %5403, label %5404, !prof !4

5403:                                             ; preds = %5395
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5404:                                             ; preds = %5357, %5395
  %5405 = phi i64 [ %5400, %5395 ], [ %5360, %5357 ]
  %5406 = and i64 %5405, 1
  %5407 = icmp eq i64 %5406, 0
  br i1 %5407, label %6363, label %5408

5408:                                             ; preds = %5404
  %5409 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 68
  store i64 %5405, i64* %5409, align 8
  %5410 = load i8, i8* %66, align 4, !range !3
  %5411 = icmp eq i8 %5410, 0
  br i1 %5411, label %5419, label %5412

5412:                                             ; preds = %5408
  %5413 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5414 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5413, align 8
  %5415 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5416 = load atomic i32, i32* %5415 monotonic, align 4
  %5417 = icmp eq i32 %5416, 2
  br i1 %5417, label %5418, label %5419, !prof !4

5418:                                             ; preds = %5412
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5414) #6
  br label %5419

5419:                                             ; preds = %5418, %5412, %5408
  %5420 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5421 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5422 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5421, i32 40, i32 0) #6
  %5423 = and i64 %5422, 1
  %5424 = icmp eq i64 %5423, 0
  br i1 %5424, label %5466, label %5425

5425:                                             ; preds = %5419
  %5426 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5427 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5428 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5426, %5427
  br i1 %5428, label %5431, label %5429

5429:                                             ; preds = %5425
  %5430 = add i64 %5422, -1
  br label %5434

5431:                                             ; preds = %5434, %5425
  %5432 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5433 = icmp eq i8 %5432, 0
  br i1 %5433, label %5446, label %5442

5434:                                             ; preds = %5434, %5429
  %5435 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5426, %5429 ], [ %5440, %5434 ]
  %5436 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5435, align 8
  %5437 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5436 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5438 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5437, align 8
  %5439 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5438, align 8
  call void %5439(%"class.v8::internal::HeapObjectAllocationTracker"* %5436, i64 %5430, i32 40) #6
  %5440 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5435, i64 1
  %5441 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5440, %5427
  br i1 %5441, label %5431, label %5434

5442:                                             ; preds = %5431
  %5443 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5444 = load i32, i32* %5443, align 8
  %5445 = add i32 %5444, 1
  store i32 %5445, i32* %5443, align 8
  br label %5457

5446:                                             ; preds = %5431
  %5447 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5448 = icmp sgt i32 %5447, 0
  br i1 %5448, label %5449, label %5457

5449:                                             ; preds = %5446
  %5450 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5451 = load i32, i32* %5450, align 8
  %5452 = add i32 %5451, 1
  store i32 %5452, i32* %5450, align 8
  %5453 = urem i32 %5452, %5447
  %5454 = icmp eq i32 %5453, 0
  br i1 %5454, label %5455, label %5457

5455:                                             ; preds = %5449
  %5456 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5456, i32 0) #6
  br label %5457

5457:                                             ; preds = %5455, %5449, %5446, %5442
  %5458 = load i64, i64* %10, align 8
  %5459 = add i64 %5422, -1
  %5460 = inttoptr i64 %5459 to i32*
  %5461 = trunc i64 %5458 to i32
  store atomic volatile i32 %5461, i32* %5460 monotonic, align 4
  %5462 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5422, i16 zeroext 163, i32 12, i8 zeroext 3, i32 0) #6
  %5463 = and i64 %5462, 1
  %5464 = icmp eq i64 %5463, 0
  br i1 %5464, label %5465, label %5466, !prof !4

5465:                                             ; preds = %5457
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5466:                                             ; preds = %5419, %5457
  %5467 = phi i64 [ %5462, %5457 ], [ %5422, %5419 ]
  %5468 = and i64 %5467, 1
  %5469 = icmp eq i64 %5468, 0
  br i1 %5469, label %6363, label %5470

5470:                                             ; preds = %5466
  %5471 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 43
  store i64 %5467, i64* %5471, align 8
  %5472 = load i8, i8* %66, align 4, !range !3
  %5473 = icmp eq i8 %5472, 0
  br i1 %5473, label %5481, label %5474

5474:                                             ; preds = %5470
  %5475 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5476 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5475, align 8
  %5477 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5476, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5478 = load atomic i32, i32* %5477 monotonic, align 4
  %5479 = icmp eq i32 %5478, 2
  br i1 %5479, label %5480, label %5481, !prof !4

5480:                                             ; preds = %5474
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5476) #6
  br label %5481

5481:                                             ; preds = %5480, %5474, %5470
  %5482 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5483 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5484 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5483, i32 40, i32 0) #6
  %5485 = and i64 %5484, 1
  %5486 = icmp eq i64 %5485, 0
  br i1 %5486, label %5528, label %5487

5487:                                             ; preds = %5481
  %5488 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5489 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5490 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5488, %5489
  br i1 %5490, label %5493, label %5491

5491:                                             ; preds = %5487
  %5492 = add i64 %5484, -1
  br label %5496

5493:                                             ; preds = %5496, %5487
  %5494 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5495 = icmp eq i8 %5494, 0
  br i1 %5495, label %5508, label %5504

5496:                                             ; preds = %5496, %5491
  %5497 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5488, %5491 ], [ %5502, %5496 ]
  %5498 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5497, align 8
  %5499 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5498 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5500 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5499, align 8
  %5501 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5500, align 8
  call void %5501(%"class.v8::internal::HeapObjectAllocationTracker"* %5498, i64 %5492, i32 40) #6
  %5502 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5497, i64 1
  %5503 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5502, %5489
  br i1 %5503, label %5493, label %5496

5504:                                             ; preds = %5493
  %5505 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5506 = load i32, i32* %5505, align 8
  %5507 = add i32 %5506, 1
  store i32 %5507, i32* %5505, align 8
  br label %5519

5508:                                             ; preds = %5493
  %5509 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5510 = icmp sgt i32 %5509, 0
  br i1 %5510, label %5511, label %5519

5511:                                             ; preds = %5508
  %5512 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5513 = load i32, i32* %5512, align 8
  %5514 = add i32 %5513, 1
  store i32 %5514, i32* %5512, align 8
  %5515 = urem i32 %5514, %5509
  %5516 = icmp eq i32 %5515, 0
  br i1 %5516, label %5517, label %5519

5517:                                             ; preds = %5511
  %5518 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5518, i32 0) #6
  br label %5519

5519:                                             ; preds = %5517, %5511, %5508, %5504
  %5520 = load i64, i64* %10, align 8
  %5521 = add i64 %5484, -1
  %5522 = inttoptr i64 %5521 to i32*
  %5523 = trunc i64 %5520 to i32
  store atomic volatile i32 %5523, i32* %5522 monotonic, align 4
  %5524 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5484, i16 zeroext 72, i32 28, i8 zeroext 3, i32 0) #6
  %5525 = and i64 %5524, 1
  %5526 = icmp eq i64 %5525, 0
  br i1 %5526, label %5527, label %5528, !prof !4

5527:                                             ; preds = %5519
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5528:                                             ; preds = %5481, %5519
  %5529 = phi i64 [ %5524, %5519 ], [ %5484, %5481 ]
  %5530 = and i64 %5529, 1
  %5531 = icmp eq i64 %5530, 0
  br i1 %5531, label %6363, label %5532

5532:                                             ; preds = %5528
  %5533 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 69
  store i64 %5529, i64* %5533, align 8
  %5534 = load i8, i8* %66, align 4, !range !3
  %5535 = icmp eq i8 %5534, 0
  br i1 %5535, label %5543, label %5536

5536:                                             ; preds = %5532
  %5537 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5538 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5537, align 8
  %5539 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5540 = load atomic i32, i32* %5539 monotonic, align 4
  %5541 = icmp eq i32 %5540, 2
  br i1 %5541, label %5542, label %5543, !prof !4

5542:                                             ; preds = %5536
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5538) #6
  br label %5543

5543:                                             ; preds = %5542, %5536, %5532
  %5544 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5545 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5546 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5545, i32 40, i32 0) #6
  %5547 = and i64 %5546, 1
  %5548 = icmp eq i64 %5547, 0
  br i1 %5548, label %5590, label %5549

5549:                                             ; preds = %5543
  %5550 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5551 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5552 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5550, %5551
  br i1 %5552, label %5555, label %5553

5553:                                             ; preds = %5549
  %5554 = add i64 %5546, -1
  br label %5558

5555:                                             ; preds = %5558, %5549
  %5556 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5557 = icmp eq i8 %5556, 0
  br i1 %5557, label %5570, label %5566

5558:                                             ; preds = %5558, %5553
  %5559 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5550, %5553 ], [ %5564, %5558 ]
  %5560 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5559, align 8
  %5561 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5560 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5562 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5561, align 8
  %5563 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5562, align 8
  call void %5563(%"class.v8::internal::HeapObjectAllocationTracker"* %5560, i64 %5554, i32 40) #6
  %5564 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5559, i64 1
  %5565 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5564, %5551
  br i1 %5565, label %5555, label %5558

5566:                                             ; preds = %5555
  %5567 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5568 = load i32, i32* %5567, align 8
  %5569 = add i32 %5568, 1
  store i32 %5569, i32* %5567, align 8
  br label %5581

5570:                                             ; preds = %5555
  %5571 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5572 = icmp sgt i32 %5571, 0
  br i1 %5572, label %5573, label %5581

5573:                                             ; preds = %5570
  %5574 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5575 = load i32, i32* %5574, align 8
  %5576 = add i32 %5575, 1
  store i32 %5576, i32* %5574, align 8
  %5577 = urem i32 %5576, %5571
  %5578 = icmp eq i32 %5577, 0
  br i1 %5578, label %5579, label %5581

5579:                                             ; preds = %5573
  %5580 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5580, i32 0) #6
  br label %5581

5581:                                             ; preds = %5579, %5573, %5570, %5566
  %5582 = load i64, i64* %10, align 8
  %5583 = add i64 %5546, -1
  %5584 = inttoptr i64 %5583 to i32*
  %5585 = trunc i64 %5582 to i32
  store atomic volatile i32 %5585, i32* %5584 monotonic, align 4
  %5586 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5546, i16 zeroext 73, i32 44, i8 zeroext 3, i32 0) #6
  %5587 = and i64 %5586, 1
  %5588 = icmp eq i64 %5587, 0
  br i1 %5588, label %5589, label %5590, !prof !4

5589:                                             ; preds = %5581
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5590:                                             ; preds = %5543, %5581
  %5591 = phi i64 [ %5586, %5581 ], [ %5546, %5543 ]
  %5592 = and i64 %5591, 1
  %5593 = icmp eq i64 %5592, 0
  br i1 %5593, label %6363, label %5594

5594:                                             ; preds = %5590
  %5595 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 70
  store i64 %5591, i64* %5595, align 8
  %5596 = load i8, i8* %66, align 4, !range !3
  %5597 = icmp eq i8 %5596, 0
  br i1 %5597, label %5605, label %5598

5598:                                             ; preds = %5594
  %5599 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5600 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5599, align 8
  %5601 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5600, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5602 = load atomic i32, i32* %5601 monotonic, align 4
  %5603 = icmp eq i32 %5602, 2
  br i1 %5603, label %5604, label %5605, !prof !4

5604:                                             ; preds = %5598
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5600) #6
  br label %5605

5605:                                             ; preds = %5604, %5598, %5594
  %5606 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5607 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5608 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5607, i32 40, i32 0) #6
  %5609 = and i64 %5608, 1
  %5610 = icmp eq i64 %5609, 0
  br i1 %5610, label %5652, label %5611

5611:                                             ; preds = %5605
  %5612 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5613 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5614 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5612, %5613
  br i1 %5614, label %5617, label %5615

5615:                                             ; preds = %5611
  %5616 = add i64 %5608, -1
  br label %5620

5617:                                             ; preds = %5620, %5611
  %5618 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5619 = icmp eq i8 %5618, 0
  br i1 %5619, label %5632, label %5628

5620:                                             ; preds = %5620, %5615
  %5621 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5612, %5615 ], [ %5626, %5620 ]
  %5622 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5621, align 8
  %5623 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5622 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5624 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5623, align 8
  %5625 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5624, align 8
  call void %5625(%"class.v8::internal::HeapObjectAllocationTracker"* %5622, i64 %5616, i32 40) #6
  %5626 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5621, i64 1
  %5627 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5626, %5613
  br i1 %5627, label %5617, label %5620

5628:                                             ; preds = %5617
  %5629 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5630 = load i32, i32* %5629, align 8
  %5631 = add i32 %5630, 1
  store i32 %5631, i32* %5629, align 8
  br label %5643

5632:                                             ; preds = %5617
  %5633 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5634 = icmp sgt i32 %5633, 0
  br i1 %5634, label %5635, label %5643

5635:                                             ; preds = %5632
  %5636 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5637 = load i32, i32* %5636, align 8
  %5638 = add i32 %5637, 1
  store i32 %5638, i32* %5636, align 8
  %5639 = urem i32 %5638, %5633
  %5640 = icmp eq i32 %5639, 0
  br i1 %5640, label %5641, label %5643

5641:                                             ; preds = %5635
  %5642 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5642, i32 0) #6
  br label %5643

5643:                                             ; preds = %5641, %5635, %5632, %5628
  %5644 = load i64, i64* %10, align 8
  %5645 = add i64 %5608, -1
  %5646 = inttoptr i64 %5645 to i32*
  %5647 = trunc i64 %5644 to i32
  store atomic volatile i32 %5647, i32* %5646 monotonic, align 4
  %5648 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5608, i16 zeroext 74, i32 36, i8 zeroext 3, i32 0) #6
  %5649 = and i64 %5648, 1
  %5650 = icmp eq i64 %5649, 0
  br i1 %5650, label %5651, label %5652, !prof !4

5651:                                             ; preds = %5643
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5652:                                             ; preds = %5605, %5643
  %5653 = phi i64 [ %5648, %5643 ], [ %5608, %5605 ]
  %5654 = and i64 %5653, 1
  %5655 = icmp eq i64 %5654, 0
  br i1 %5655, label %6363, label %5656

5656:                                             ; preds = %5652
  %5657 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 71
  store i64 %5653, i64* %5657, align 8
  %5658 = load i8, i8* %66, align 4, !range !3
  %5659 = icmp eq i8 %5658, 0
  br i1 %5659, label %5667, label %5660

5660:                                             ; preds = %5656
  %5661 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5662 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5661, align 8
  %5663 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5664 = load atomic i32, i32* %5663 monotonic, align 4
  %5665 = icmp eq i32 %5664, 2
  br i1 %5665, label %5666, label %5667, !prof !4

5666:                                             ; preds = %5660
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5662) #6
  br label %5667

5667:                                             ; preds = %5666, %5660, %5656
  %5668 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5669 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5670 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5669, i32 40, i32 0) #6
  %5671 = and i64 %5670, 1
  %5672 = icmp eq i64 %5671, 0
  br i1 %5672, label %5714, label %5673

5673:                                             ; preds = %5667
  %5674 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5675 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5676 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5674, %5675
  br i1 %5676, label %5679, label %5677

5677:                                             ; preds = %5673
  %5678 = add i64 %5670, -1
  br label %5682

5679:                                             ; preds = %5682, %5673
  %5680 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5681 = icmp eq i8 %5680, 0
  br i1 %5681, label %5694, label %5690

5682:                                             ; preds = %5682, %5677
  %5683 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5674, %5677 ], [ %5688, %5682 ]
  %5684 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5683, align 8
  %5685 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5684 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5686 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5685, align 8
  %5687 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5686, align 8
  call void %5687(%"class.v8::internal::HeapObjectAllocationTracker"* %5684, i64 %5678, i32 40) #6
  %5688 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5683, i64 1
  %5689 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5688, %5675
  br i1 %5689, label %5679, label %5682

5690:                                             ; preds = %5679
  %5691 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5692 = load i32, i32* %5691, align 8
  %5693 = add i32 %5692, 1
  store i32 %5693, i32* %5691, align 8
  br label %5705

5694:                                             ; preds = %5679
  %5695 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5696 = icmp sgt i32 %5695, 0
  br i1 %5696, label %5697, label %5705

5697:                                             ; preds = %5694
  %5698 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5699 = load i32, i32* %5698, align 8
  %5700 = add i32 %5699, 1
  store i32 %5700, i32* %5698, align 8
  %5701 = urem i32 %5700, %5695
  %5702 = icmp eq i32 %5701, 0
  br i1 %5702, label %5703, label %5705

5703:                                             ; preds = %5697
  %5704 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5704, i32 0) #6
  br label %5705

5705:                                             ; preds = %5703, %5697, %5694, %5690
  %5706 = load i64, i64* %10, align 8
  %5707 = add i64 %5670, -1
  %5708 = inttoptr i64 %5707 to i32*
  %5709 = trunc i64 %5706 to i32
  store atomic volatile i32 %5709, i32* %5708 monotonic, align 4
  %5710 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5670, i16 zeroext 75, i32 24, i8 zeroext 3, i32 0) #6
  %5711 = and i64 %5710, 1
  %5712 = icmp eq i64 %5711, 0
  br i1 %5712, label %5713, label %5714, !prof !4

5713:                                             ; preds = %5705
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5714:                                             ; preds = %5667, %5705
  %5715 = phi i64 [ %5710, %5705 ], [ %5670, %5667 ]
  %5716 = and i64 %5715, 1
  %5717 = icmp eq i64 %5716, 0
  br i1 %5717, label %6363, label %5718

5718:                                             ; preds = %5714
  %5719 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 72
  store i64 %5715, i64* %5719, align 8
  %5720 = load i8, i8* %66, align 4, !range !3
  %5721 = icmp eq i8 %5720, 0
  br i1 %5721, label %5729, label %5722

5722:                                             ; preds = %5718
  %5723 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5724 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5723, align 8
  %5725 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5724, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5726 = load atomic i32, i32* %5725 monotonic, align 4
  %5727 = icmp eq i32 %5726, 2
  br i1 %5727, label %5728, label %5729, !prof !4

5728:                                             ; preds = %5722
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5724) #6
  br label %5729

5729:                                             ; preds = %5728, %5722, %5718
  %5730 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5731 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5732 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5731, i32 40, i32 0) #6
  %5733 = and i64 %5732, 1
  %5734 = icmp eq i64 %5733, 0
  br i1 %5734, label %5776, label %5735

5735:                                             ; preds = %5729
  %5736 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5737 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5738 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5736, %5737
  br i1 %5738, label %5741, label %5739

5739:                                             ; preds = %5735
  %5740 = add i64 %5732, -1
  br label %5744

5741:                                             ; preds = %5744, %5735
  %5742 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5743 = icmp eq i8 %5742, 0
  br i1 %5743, label %5756, label %5752

5744:                                             ; preds = %5744, %5739
  %5745 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5736, %5739 ], [ %5750, %5744 ]
  %5746 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5745, align 8
  %5747 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5746 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5748 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5747, align 8
  %5749 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5748, align 8
  call void %5749(%"class.v8::internal::HeapObjectAllocationTracker"* %5746, i64 %5740, i32 40) #6
  %5750 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5745, i64 1
  %5751 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5750, %5737
  br i1 %5751, label %5741, label %5744

5752:                                             ; preds = %5741
  %5753 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5754 = load i32, i32* %5753, align 8
  %5755 = add i32 %5754, 1
  store i32 %5755, i32* %5753, align 8
  br label %5767

5756:                                             ; preds = %5741
  %5757 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5758 = icmp sgt i32 %5757, 0
  br i1 %5758, label %5759, label %5767

5759:                                             ; preds = %5756
  %5760 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5761 = load i32, i32* %5760, align 8
  %5762 = add i32 %5761, 1
  store i32 %5762, i32* %5760, align 8
  %5763 = urem i32 %5762, %5757
  %5764 = icmp eq i32 %5763, 0
  br i1 %5764, label %5765, label %5767

5765:                                             ; preds = %5759
  %5766 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5766, i32 0) #6
  br label %5767

5767:                                             ; preds = %5765, %5759, %5756, %5752
  %5768 = load i64, i64* %10, align 8
  %5769 = add i64 %5732, -1
  %5770 = inttoptr i64 %5769 to i32*
  %5771 = trunc i64 %5768 to i32
  store atomic volatile i32 %5771, i32* %5770 monotonic, align 4
  %5772 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5732, i16 zeroext 185, i32 36, i8 zeroext 3, i32 0) #6
  %5773 = and i64 %5772, 1
  %5774 = icmp eq i64 %5773, 0
  br i1 %5774, label %5775, label %5776, !prof !4

5775:                                             ; preds = %5767
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5776:                                             ; preds = %5729, %5767
  %5777 = phi i64 [ %5772, %5767 ], [ %5732, %5729 ]
  %5778 = and i64 %5777, 1
  %5779 = icmp eq i64 %5778, 0
  br i1 %5779, label %6363, label %5780

5780:                                             ; preds = %5776
  %5781 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 77
  store i64 %5777, i64* %5781, align 8
  %5782 = call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 40, i8 zeroext 3, i32 1, i32 0) #6
  %5783 = and i64 %5782, 1
  %5784 = icmp eq i64 %5783, 0
  br i1 %5784, label %6363, label %5785

5785:                                             ; preds = %5780
  %5786 = load i64, i64* %10, align 8
  %5787 = add i64 %5782, -1
  %5788 = inttoptr i64 %5787 to i32*
  %5789 = trunc i64 %5786 to i32
  store atomic volatile i32 %5789, i32* %5788 monotonic, align 4
  %5790 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5782, i16 zeroext 1098, i32 48, i8 zeroext 3, i32 0) #6
  %5791 = and i64 %5790, 1
  %5792 = icmp eq i64 %5791, 0
  br i1 %5792, label %5793, label %5794, !prof !4

5793:                                             ; preds = %5785
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5794:                                             ; preds = %5785
  %5795 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 599
  store i64 %5790, i64* %5795, align 8
  %5796 = call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 40, i8 zeroext 3, i32 1, i32 0) #6
  %5797 = and i64 %5796, 1
  %5798 = icmp eq i64 %5797, 0
  br i1 %5798, label %6363, label %5799

5799:                                             ; preds = %5794
  %5800 = load i64, i64* %10, align 8
  %5801 = add i64 %5796, -1
  %5802 = inttoptr i64 %5801 to i32*
  %5803 = trunc i64 %5800 to i32
  store atomic volatile i32 %5803, i32* %5802 monotonic, align 4
  %5804 = call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %1865, i64 %5796, i16 zeroext 1057, i32 20, i8 zeroext 3, i32 0) #6
  %5805 = and i64 %5804, 1
  %5806 = icmp eq i64 %5805, 0
  br i1 %5806, label %5807, label %5808, !prof !4

5807:                                             ; preds = %5799
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

5808:                                             ; preds = %5799
  %5809 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 598
  store i64 %5804, i64* %5809, align 8
  %5810 = add i64 %5804, 11
  %5811 = inttoptr i64 %5810 to i32*
  %5812 = load atomic i32, i32* %5811 monotonic, align 4
  %5813 = and i32 %5812, -134217729
  store atomic volatile i32 %5813, i32* %5811 monotonic, align 4
  %5814 = load i8, i8* %66, align 4, !range !3
  %5815 = icmp eq i8 %5814, 0
  br i1 %5815, label %5823, label %5816

5816:                                             ; preds = %5808
  %5817 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5818 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5817, align 8
  %5819 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5820 = load atomic i32, i32* %5819 monotonic, align 4
  %5821 = icmp eq i32 %5820, 2
  br i1 %5821, label %5822, label %5823, !prof !4

5822:                                             ; preds = %5816
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5818) #6
  br label %5823

5823:                                             ; preds = %5822, %5816, %5808
  %5824 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5825 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5826 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5825, i32 16, i32 0) #6
  %5827 = and i64 %5826, 1
  %5828 = icmp eq i64 %5827, 0
  br i1 %5828, label %6363, label %5829

5829:                                             ; preds = %5823
  %5830 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5831 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5832 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5830, %5831
  br i1 %5832, label %5835, label %5833

5833:                                             ; preds = %5829
  %5834 = add i64 %5826, -1
  br label %5838

5835:                                             ; preds = %5838, %5829
  %5836 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5837 = icmp eq i8 %5836, 0
  br i1 %5837, label %5850, label %5846

5838:                                             ; preds = %5838, %5833
  %5839 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5830, %5833 ], [ %5844, %5838 ]
  %5840 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5839, align 8
  %5841 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5840 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5842 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5841, align 8
  %5843 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5842, align 8
  call void %5843(%"class.v8::internal::HeapObjectAllocationTracker"* %5840, i64 %5834, i32 16) #6
  %5844 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5839, i64 1
  %5845 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5844, %5831
  br i1 %5845, label %5835, label %5838

5846:                                             ; preds = %5835
  %5847 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5848 = load i32, i32* %5847, align 8
  %5849 = add i32 %5848, 1
  store i32 %5849, i32* %5847, align 8
  br label %5861

5850:                                             ; preds = %5835
  %5851 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5852 = icmp sgt i32 %5851, 0
  br i1 %5852, label %5853, label %5861

5853:                                             ; preds = %5850
  %5854 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5855 = load i32, i32* %5854, align 8
  %5856 = add i32 %5855, 1
  store i32 %5856, i32* %5854, align 8
  %5857 = urem i32 %5856, %5851
  %5858 = icmp eq i32 %5857, 0
  br i1 %5858, label %5859, label %5861

5859:                                             ; preds = %5853
  %5860 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5860, i32 0) #6
  br label %5861

5861:                                             ; preds = %5859, %5853, %5850, %5846
  %5862 = load i64, i64* %769, align 8
  %5863 = add i64 %5826, -1
  %5864 = inttoptr i64 %5863 to i32*
  %5865 = trunc i64 %5862 to i32
  store atomic volatile i32 %5865, i32* %5864 monotonic, align 4
  %5866 = add i64 %5826, 3
  %5867 = inttoptr i64 %5866 to i32*
  store atomic volatile i32 1073741824, i32* %5867 monotonic, align 4
  %5868 = add i64 %5826, 11
  %5869 = inttoptr i64 %5868 to i32*
  store atomic volatile i32 0, i32* %5869 monotonic, align 4
  %5870 = add i64 %5826, 7
  %5871 = inttoptr i64 %5870 to i32*
  store atomic volatile i32 0, i32* %5871 monotonic, align 4
  %5872 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 28
  store i64 %5826, i64* %5872, align 8
  %5873 = load i8, i8* %66, align 4, !range !3
  %5874 = icmp eq i8 %5873, 0
  br i1 %5874, label %5882, label %5875

5875:                                             ; preds = %5861
  %5876 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5877 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5876, align 8
  %5878 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5877, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5879 = load atomic i32, i32* %5878 monotonic, align 4
  %5880 = icmp eq i32 %5879, 2
  br i1 %5880, label %5881, label %5882, !prof !4

5881:                                             ; preds = %5875
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5877) #6
  br label %5882

5882:                                             ; preds = %5881, %5875, %5861
  %5883 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5884 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5885 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5884, i32 12, i32 0) #6
  %5886 = and i64 %5885, 1
  %5887 = icmp eq i64 %5886, 0
  br i1 %5887, label %6363, label %5888

5888:                                             ; preds = %5882
  %5889 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5890 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5891 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5889, %5890
  br i1 %5891, label %5894, label %5892

5892:                                             ; preds = %5888
  %5893 = add i64 %5885, -1
  br label %5897

5894:                                             ; preds = %5897, %5888
  %5895 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5896 = icmp eq i8 %5895, 0
  br i1 %5896, label %5909, label %5905

5897:                                             ; preds = %5897, %5892
  %5898 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5889, %5892 ], [ %5903, %5897 ]
  %5899 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5898, align 8
  %5900 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5899 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5901 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5900, align 8
  %5902 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5901, align 8
  call void %5902(%"class.v8::internal::HeapObjectAllocationTracker"* %5899, i64 %5893, i32 12) #6
  %5903 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5898, i64 1
  %5904 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5903, %5890
  br i1 %5904, label %5894, label %5897

5905:                                             ; preds = %5894
  %5906 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5907 = load i32, i32* %5906, align 8
  %5908 = add i32 %5907, 1
  store i32 %5908, i32* %5906, align 8
  br label %5920

5909:                                             ; preds = %5894
  %5910 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5911 = icmp sgt i32 %5910, 0
  br i1 %5911, label %5912, label %5920

5912:                                             ; preds = %5909
  %5913 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5914 = load i32, i32* %5913, align 8
  %5915 = add i32 %5914, 1
  store i32 %5915, i32* %5913, align 8
  %5916 = urem i32 %5915, %5910
  %5917 = icmp eq i32 %5916, 0
  br i1 %5917, label %5918, label %5920

5918:                                             ; preds = %5912
  %5919 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5919, i32 0) #6
  br label %5920

5920:                                             ; preds = %5918, %5912, %5909, %5905
  %5921 = load i64, i64* %4913, align 8
  %5922 = add i64 %5885, -1
  %5923 = inttoptr i64 %5922 to i32*
  %5924 = trunc i64 %5921 to i32
  store atomic volatile i32 %5924, i32* %5923 monotonic, align 4
  %5925 = add i64 %5885, 3
  %5926 = inttoptr i64 %5925 to i32*
  store atomic volatile i32 2, i32* %5926 monotonic, align 4
  %5927 = add i64 %5885, 7
  %5928 = inttoptr i64 %5927 to i32*
  store atomic volatile i32 0, i32* %5928 monotonic, align 4
  %5929 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 108
  store i64 %5885, i64* %5929, align 8
  %5930 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 535
  %5931 = load i64, i64* %5930, align 8
  %5932 = add i64 %5931, 3
  %5933 = inttoptr i64 %5932 to i8*
  %5934 = load atomic i8, i8* %5933 monotonic, align 1
  %5935 = zext i8 %5934 to i32
  %5936 = shl nuw nsw i32 %5935, 2
  %5937 = load i8, i8* %66, align 4, !range !3
  %5938 = icmp eq i8 %5937, 0
  br i1 %5938, label %5946, label %5939

5939:                                             ; preds = %5920
  %5940 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %5941 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %5940, align 8
  %5942 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %5941, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5943 = load atomic i32, i32* %5942 monotonic, align 4
  %5944 = icmp eq i32 %5943, 2
  br i1 %5944, label %5945, label %5946, !prof !4

5945:                                             ; preds = %5939
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %5941) #6
  br label %5946

5946:                                             ; preds = %5945, %5939, %5920
  %5947 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %5948 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %5949 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %5948, i32 %5936, i32 0) #6
  %5950 = and i64 %5949, 1
  %5951 = icmp eq i64 %5950, 0
  br i1 %5951, label %6363, label %5952

5952:                                             ; preds = %5946
  %5953 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %5954 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %5955 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5953, %5954
  br i1 %5955, label %5958, label %5956

5956:                                             ; preds = %5952
  %5957 = add i64 %5949, -1
  br label %5961

5958:                                             ; preds = %5961, %5952
  %5959 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %5960 = icmp eq i8 %5959, 0
  br i1 %5960, label %5973, label %5969

5961:                                             ; preds = %5961, %5956
  %5962 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %5953, %5956 ], [ %5967, %5961 ]
  %5963 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5962, align 8
  %5964 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %5963 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %5965 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %5964, align 8
  %5966 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %5965, align 8
  call void %5966(%"class.v8::internal::HeapObjectAllocationTracker"* %5963, i64 %5957, i32 %5936) #6
  %5967 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %5962, i64 1
  %5968 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %5967, %5954
  br i1 %5968, label %5958, label %5961

5969:                                             ; preds = %5958
  %5970 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5971 = load i32, i32* %5970, align 8
  %5972 = add i32 %5971, 1
  store i32 %5972, i32* %5970, align 8
  br label %5984

5973:                                             ; preds = %5958
  %5974 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %5975 = icmp sgt i32 %5974, 0
  br i1 %5975, label %5976, label %5984

5976:                                             ; preds = %5973
  %5977 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %5978 = load i32, i32* %5977, align 8
  %5979 = add i32 %5978, 1
  store i32 %5979, i32* %5977, align 8
  %5980 = urem i32 %5979, %5974
  %5981 = icmp eq i32 %5980, 0
  br i1 %5981, label %5982, label %5984

5982:                                             ; preds = %5976
  %5983 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %5983, i32 0) #6
  br label %5984

5984:                                             ; preds = %5982, %5976, %5973, %5969
  %5985 = load i64, i64* %5930, align 8
  %5986 = add i64 %5949, -1
  %5987 = inttoptr i64 %5986 to i32*
  %5988 = trunc i64 %5985 to i32
  store atomic volatile i32 %5988, i32* %5987 monotonic, align 4
  %5989 = and i64 %5985, 1
  %5990 = icmp eq i64 %5989, 0
  br i1 %5990, label %6002, label %5991

5991:                                             ; preds = %5984
  %5992 = and i64 %5949, -262144
  %5993 = or i64 %5992, 8
  %5994 = inttoptr i64 %5993 to i64*
  %5995 = load i64, i64* %5994, align 8
  %5996 = and i64 %5995, 262144
  %5997 = icmp eq i64 %5996, 0
  br i1 %5997, label %6002, label %5998

5998:                                             ; preds = %5991
  %5999 = or i64 %5992, 16
  %6000 = inttoptr i64 %5999 to %"class.v8::internal::Heap"**
  %6001 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6000, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %6001, i64 %5949, i64 0, i64 %5985) #6
  br label %6002

6002:                                             ; preds = %5984, %5991, %5998
  %6003 = load i64, i64* %124, align 8
  %6004 = add i64 %5949, 7
  %6005 = inttoptr i64 %6004 to i32*
  %6006 = trunc i64 %6003 to i32
  store atomic volatile i32 %6006, i32* %6005 monotonic, align 4
  %6007 = and i64 %6003, 1
  %6008 = icmp eq i64 %6007, 0
  br i1 %6008, label %6020, label %6009

6009:                                             ; preds = %6002
  %6010 = and i64 %5949, -262144
  %6011 = or i64 %6010, 8
  %6012 = inttoptr i64 %6011 to i64*
  %6013 = load i64, i64* %6012, align 8
  %6014 = and i64 %6013, 262144
  %6015 = icmp eq i64 %6014, 0
  br i1 %6015, label %6020, label %6016

6016:                                             ; preds = %6009
  %6017 = or i64 %6010, 16
  %6018 = inttoptr i64 %6017 to %"class.v8::internal::Heap"**
  %6019 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6018, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %6019, i64 %5949, i64 %6004, i64 %6003) #6
  br label %6020

6020:                                             ; preds = %6016, %6009, %6002
  %6021 = and i64 %6003, -262144
  %6022 = or i64 %6021, 8
  %6023 = inttoptr i64 %6022 to i64*
  %6024 = load i64, i64* %6023, align 8
  %6025 = and i64 %6024, 24
  %6026 = icmp eq i64 %6025, 0
  br i1 %6026, label %6035, label %6027

6027:                                             ; preds = %6020
  %6028 = and i64 %5949, -262144
  %6029 = or i64 %6028, 8
  %6030 = inttoptr i64 %6029 to i64*
  %6031 = load i64, i64* %6030, align 8
  %6032 = and i64 %6031, 24
  %6033 = icmp eq i64 %6032, 0
  br i1 %6033, label %6034, label %6035

6034:                                             ; preds = %6027
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5949, i64 %6004, i64 %6003) #6
  br label %6035

6035:                                             ; preds = %6020, %6027, %6034
  %6036 = add i64 %5949, 3
  %6037 = inttoptr i64 %6036 to i32*
  store atomic volatile i32 0, i32* %6037 monotonic, align 4
  %6038 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 109
  store i64 %5949, i64* %6038, align 8
  %6039 = load i64, i64* %1289, align 8
  %6040 = add i64 %6039, 3
  %6041 = inttoptr i64 %6040 to i8*
  %6042 = load atomic i8, i8* %6041 monotonic, align 1
  %6043 = zext i8 %6042 to i32
  %6044 = shl nuw nsw i32 %6043, 2
  %6045 = load i8, i8* %66, align 4, !range !3
  %6046 = icmp eq i8 %6045, 0
  br i1 %6046, label %6054, label %6047

6047:                                             ; preds = %6035
  %6048 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %6049 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6048, align 8
  %6050 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %6049, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6051 = load atomic i32, i32* %6050 monotonic, align 4
  %6052 = icmp eq i32 %6051, 2
  br i1 %6052, label %6053, label %6054, !prof !4

6053:                                             ; preds = %6047
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %6049) #6
  br label %6054

6054:                                             ; preds = %6053, %6047, %6035
  %6055 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %6056 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %6057 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %6056, i32 %6044, i32 0) #6
  %6058 = and i64 %6057, 1
  %6059 = icmp eq i64 %6058, 0
  br i1 %6059, label %6363, label %6060

6060:                                             ; preds = %6054
  %6061 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %6062 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %6063 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6061, %6062
  br i1 %6063, label %6066, label %6064

6064:                                             ; preds = %6060
  %6065 = add i64 %6057, -1
  br label %6069

6066:                                             ; preds = %6069, %6060
  %6067 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %6068 = icmp eq i8 %6067, 0
  br i1 %6068, label %6081, label %6077

6069:                                             ; preds = %6069, %6064
  %6070 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %6061, %6064 ], [ %6075, %6069 ]
  %6071 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6070, align 8
  %6072 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %6071 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %6073 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %6072, align 8
  %6074 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %6073, align 8
  call void %6074(%"class.v8::internal::HeapObjectAllocationTracker"* %6071, i64 %6065, i32 %6044) #6
  %6075 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6070, i64 1
  %6076 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6075, %6062
  br i1 %6076, label %6066, label %6069

6077:                                             ; preds = %6066
  %6078 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6079 = load i32, i32* %6078, align 8
  %6080 = add i32 %6079, 1
  store i32 %6080, i32* %6078, align 8
  br label %6092

6081:                                             ; preds = %6066
  %6082 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %6083 = icmp sgt i32 %6082, 0
  br i1 %6083, label %6084, label %6092

6084:                                             ; preds = %6081
  %6085 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6086 = load i32, i32* %6085, align 8
  %6087 = add i32 %6086, 1
  store i32 %6087, i32* %6085, align 8
  %6088 = urem i32 %6087, %6082
  %6089 = icmp eq i32 %6088, 0
  br i1 %6089, label %6090, label %6092

6090:                                             ; preds = %6084
  %6091 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %6091, i32 0) #6
  br label %6092

6092:                                             ; preds = %6090, %6084, %6081, %6077
  %6093 = load i64, i64* %1289, align 8
  %6094 = add i64 %6057, -1
  %6095 = inttoptr i64 %6094 to i32*
  %6096 = trunc i64 %6093 to i32
  store atomic volatile i32 %6096, i32* %6095 monotonic, align 4
  %6097 = and i64 %6093, 1
  %6098 = icmp eq i64 %6097, 0
  br i1 %6098, label %6110, label %6099

6099:                                             ; preds = %6092
  %6100 = and i64 %6057, -262144
  %6101 = or i64 %6100, 8
  %6102 = inttoptr i64 %6101 to i64*
  %6103 = load i64, i64* %6102, align 8
  %6104 = and i64 %6103, 262144
  %6105 = icmp eq i64 %6104, 0
  br i1 %6105, label %6110, label %6106

6106:                                             ; preds = %6099
  %6107 = or i64 %6100, 16
  %6108 = inttoptr i64 %6107 to %"class.v8::internal::Heap"**
  %6109 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6108, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %6109, i64 %6057, i64 0, i64 %6093) #6
  br label %6110

6110:                                             ; preds = %6092, %6099, %6106
  %6111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 7
  store i64 %6057, i64* %6111, align 8
  %6112 = add i64 %6057, 23
  %6113 = inttoptr i64 %6112 to i32*
  store atomic volatile i32 2, i32* %6113 monotonic, align 4
  %6114 = load i64, i64* %1289, align 8
  %6115 = add i64 %6114, 3
  %6116 = inttoptr i64 %6115 to i8*
  %6117 = load atomic i8, i8* %6116 monotonic, align 1
  %6118 = zext i8 %6117 to i32
  %6119 = shl nuw nsw i32 %6118, 2
  %6120 = load i8, i8* %66, align 4, !range !3
  %6121 = icmp eq i8 %6120, 0
  br i1 %6121, label %6129, label %6122

6122:                                             ; preds = %6110
  %6123 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %6124 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6123, align 8
  %6125 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %6124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6126 = load atomic i32, i32* %6125 monotonic, align 4
  %6127 = icmp eq i32 %6126, 2
  br i1 %6127, label %6128, label %6129, !prof !4

6128:                                             ; preds = %6122
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %6124) #6
  br label %6129

6129:                                             ; preds = %6128, %6122, %6110
  %6130 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %6131 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %6132 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %6131, i32 %6119, i32 0) #6
  %6133 = and i64 %6132, 1
  %6134 = icmp eq i64 %6133, 0
  br i1 %6134, label %6363, label %6135

6135:                                             ; preds = %6129
  %6136 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %6137 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %6138 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6136, %6137
  br i1 %6138, label %6141, label %6139

6139:                                             ; preds = %6135
  %6140 = add i64 %6132, -1
  br label %6144

6141:                                             ; preds = %6144, %6135
  %6142 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %6143 = icmp eq i8 %6142, 0
  br i1 %6143, label %6156, label %6152

6144:                                             ; preds = %6144, %6139
  %6145 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %6136, %6139 ], [ %6150, %6144 ]
  %6146 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6145, align 8
  %6147 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %6146 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %6148 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %6147, align 8
  %6149 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %6148, align 8
  call void %6149(%"class.v8::internal::HeapObjectAllocationTracker"* %6146, i64 %6140, i32 %6119) #6
  %6150 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6145, i64 1
  %6151 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6150, %6137
  br i1 %6151, label %6141, label %6144

6152:                                             ; preds = %6141
  %6153 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6154 = load i32, i32* %6153, align 8
  %6155 = add i32 %6154, 1
  store i32 %6155, i32* %6153, align 8
  br label %6167

6156:                                             ; preds = %6141
  %6157 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %6158 = icmp sgt i32 %6157, 0
  br i1 %6158, label %6159, label %6167

6159:                                             ; preds = %6156
  %6160 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6161 = load i32, i32* %6160, align 8
  %6162 = add i32 %6161, 1
  store i32 %6162, i32* %6160, align 8
  %6163 = urem i32 %6162, %6157
  %6164 = icmp eq i32 %6163, 0
  br i1 %6164, label %6165, label %6167

6165:                                             ; preds = %6159
  %6166 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %6166, i32 0) #6
  br label %6167

6167:                                             ; preds = %6165, %6159, %6156, %6152
  %6168 = load i64, i64* %1289, align 8
  %6169 = add i64 %6132, -1
  %6170 = inttoptr i64 %6169 to i32*
  %6171 = trunc i64 %6168 to i32
  store atomic volatile i32 %6171, i32* %6170 monotonic, align 4
  %6172 = and i64 %6168, 1
  %6173 = icmp eq i64 %6172, 0
  br i1 %6173, label %6185, label %6174

6174:                                             ; preds = %6167
  %6175 = and i64 %6132, -262144
  %6176 = or i64 %6175, 8
  %6177 = inttoptr i64 %6176 to i64*
  %6178 = load i64, i64* %6177, align 8
  %6179 = and i64 %6178, 262144
  %6180 = icmp eq i64 %6179, 0
  br i1 %6180, label %6185, label %6181

6181:                                             ; preds = %6174
  %6182 = or i64 %6175, 16
  %6183 = inttoptr i64 %6182 to %"class.v8::internal::Heap"**
  %6184 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6183, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %6184, i64 %6132, i64 0, i64 %6168) #6
  br label %6185

6185:                                             ; preds = %6167, %6174, %6181
  %6186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 8
  store i64 %6132, i64* %6186, align 8
  %6187 = add i64 %6132, 23
  %6188 = inttoptr i64 %6187 to i32*
  store atomic volatile i32 0, i32* %6188 monotonic, align 4
  %6189 = load i8, i8* %66, align 4, !range !3
  %6190 = icmp eq i8 %6189, 0
  br i1 %6190, label %6198, label %6191

6191:                                             ; preds = %6185
  %6192 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %6193 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6192, align 8
  %6194 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %6193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6195 = load atomic i32, i32* %6194 monotonic, align 4
  %6196 = icmp eq i32 %6195, 2
  br i1 %6196, label %6197, label %6198, !prof !4

6197:                                             ; preds = %6191
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %6193) #6
  br label %6198

6198:                                             ; preds = %6197, %6191, %6185
  %6199 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %6200 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %6201 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %6200, i32 8, i32 0) #6
  %6202 = and i64 %6201, 1
  %6203 = icmp eq i64 %6202, 0
  br i1 %6203, label %6363, label %6204

6204:                                             ; preds = %6198
  %6205 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %6206 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %6207 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6205, %6206
  br i1 %6207, label %6210, label %6208

6208:                                             ; preds = %6204
  %6209 = add i64 %6201, -1
  br label %6213

6210:                                             ; preds = %6213, %6204
  %6211 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %6212 = icmp eq i8 %6211, 0
  br i1 %6212, label %6225, label %6221

6213:                                             ; preds = %6213, %6208
  %6214 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %6205, %6208 ], [ %6219, %6213 ]
  %6215 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6214, align 8
  %6216 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %6215 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %6217 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %6216, align 8
  %6218 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %6217, align 8
  call void %6218(%"class.v8::internal::HeapObjectAllocationTracker"* %6215, i64 %6209, i32 8) #6
  %6219 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6214, i64 1
  %6220 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6219, %6206
  br i1 %6220, label %6210, label %6213

6221:                                             ; preds = %6210
  %6222 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6223 = load i32, i32* %6222, align 8
  %6224 = add i32 %6223, 1
  store i32 %6224, i32* %6222, align 8
  br label %6236

6225:                                             ; preds = %6210
  %6226 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %6227 = icmp sgt i32 %6226, 0
  br i1 %6227, label %6228, label %6236

6228:                                             ; preds = %6225
  %6229 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6230 = load i32, i32* %6229, align 8
  %6231 = add i32 %6230, 1
  store i32 %6231, i32* %6229, align 8
  %6232 = urem i32 %6231, %6226
  %6233 = icmp eq i32 %6232, 0
  br i1 %6233, label %6234, label %6236

6234:                                             ; preds = %6228
  %6235 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %6235, i32 0) #6
  br label %6236

6236:                                             ; preds = %6234, %6228, %6225, %6221
  %6237 = load i64, i64* %2105, align 8
  %6238 = add i64 %6201, -1
  %6239 = inttoptr i64 %6238 to i32*
  %6240 = trunc i64 %6237 to i32
  store atomic volatile i32 %6240, i32* %6239 monotonic, align 4
  %6241 = add i64 %6201, 3
  %6242 = inttoptr i64 %6241 to i32*
  store atomic volatile i32 0, i32* %6242 monotonic, align 4
  %6243 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 107
  store i64 %6201, i64* %6243, align 8
  %6244 = load i8, i8* %66, align 4, !range !3
  %6245 = icmp eq i8 %6244, 0
  br i1 %6245, label %6253, label %6246

6246:                                             ; preds = %6236
  %6247 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %6248 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6247, align 8
  %6249 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %6248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6250 = load atomic i32, i32* %6249 monotonic, align 4
  %6251 = icmp eq i32 %6250, 2
  br i1 %6251, label %6252, label %6253, !prof !4

6252:                                             ; preds = %6246
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %6248) #6
  br label %6253

6253:                                             ; preds = %6252, %6246, %6236
  %6254 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %6255 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %6256 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %6255, i32 8, i32 0) #6
  %6257 = and i64 %6256, 1
  %6258 = icmp eq i64 %6257, 0
  br i1 %6258, label %6363, label %6259

6259:                                             ; preds = %6253
  %6260 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %6261 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %6262 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6260, %6261
  br i1 %6262, label %6265, label %6263

6263:                                             ; preds = %6259
  %6264 = add i64 %6256, -1
  br label %6268

6265:                                             ; preds = %6268, %6259
  %6266 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %6267 = icmp eq i8 %6266, 0
  br i1 %6267, label %6280, label %6276

6268:                                             ; preds = %6268, %6263
  %6269 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %6260, %6263 ], [ %6274, %6268 ]
  %6270 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6269, align 8
  %6271 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %6270 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %6272 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %6271, align 8
  %6273 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %6272, align 8
  call void %6273(%"class.v8::internal::HeapObjectAllocationTracker"* %6270, i64 %6264, i32 8) #6
  %6274 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6269, i64 1
  %6275 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6274, %6261
  br i1 %6275, label %6265, label %6268

6276:                                             ; preds = %6265
  %6277 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6278 = load i32, i32* %6277, align 8
  %6279 = add i32 %6278, 1
  store i32 %6279, i32* %6277, align 8
  br label %6291

6280:                                             ; preds = %6265
  %6281 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %6282 = icmp sgt i32 %6281, 0
  br i1 %6282, label %6283, label %6291

6283:                                             ; preds = %6280
  %6284 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6285 = load i32, i32* %6284, align 8
  %6286 = add i32 %6285, 1
  store i32 %6286, i32* %6284, align 8
  %6287 = urem i32 %6286, %6281
  %6288 = icmp eq i32 %6287, 0
  br i1 %6288, label %6289, label %6291

6289:                                             ; preds = %6283
  %6290 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %6290, i32 0) #6
  br label %6291

6291:                                             ; preds = %6289, %6283, %6280, %6276
  %6292 = load i64, i64* %2290, align 8
  %6293 = add i64 %6256, -1
  %6294 = inttoptr i64 %6293 to i32*
  %6295 = trunc i64 %6292 to i32
  store atomic volatile i32 %6295, i32* %6294 monotonic, align 4
  %6296 = add i64 %6256, 3
  %6297 = inttoptr i64 %6296 to i32*
  store atomic volatile i32 0, i32* %6297 monotonic, align 4
  %6298 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 106
  store i64 %6256, i64* %6298, align 8
  %6299 = load i8, i8* %66, align 4, !range !3
  %6300 = icmp eq i8 %6299, 0
  br i1 %6300, label %6308, label %6301

6301:                                             ; preds = %6291
  %6302 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %6303 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %6302, align 8
  %6304 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %6303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6305 = load atomic i32, i32* %6304 monotonic, align 4
  %6306 = icmp eq i32 %6305, 2
  br i1 %6306, label %6307, label %6308, !prof !4

6307:                                             ; preds = %6301
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %6303) #6
  br label %6308

6308:                                             ; preds = %6307, %6301, %6291
  %6309 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %6310 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %78, align 8
  %6311 = call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %6310, i32 8, i32 0) #6
  %6312 = and i64 %6311, 1
  %6313 = icmp eq i64 %6312, 0
  br i1 %6313, label %6363, label %6314

6314:                                             ; preds = %6308
  %6315 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %84, align 8
  %6316 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %86, align 8
  %6317 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6315, %6316
  br i1 %6317, label %6320, label %6318

6318:                                             ; preds = %6314
  %6319 = add i64 %6311, -1
  br label %6323

6320:                                             ; preds = %6323, %6314
  %6321 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %6322 = icmp eq i8 %6321, 0
  br i1 %6322, label %6335, label %6331

6323:                                             ; preds = %6323, %6318
  %6324 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %6315, %6318 ], [ %6329, %6323 ]
  %6325 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6324, align 8
  %6326 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %6325 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %6327 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %6326, align 8
  %6328 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %6327, align 8
  call void %6328(%"class.v8::internal::HeapObjectAllocationTracker"* %6325, i64 %6319, i32 8) #6
  %6329 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %6324, i64 1
  %6330 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %6329, %6316
  br i1 %6330, label %6320, label %6323

6331:                                             ; preds = %6320
  %6332 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6333 = load i32, i32* %6332, align 8
  %6334 = add i32 %6333, 1
  store i32 %6334, i32* %6332, align 8
  br label %6346

6335:                                             ; preds = %6320
  %6336 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %6337 = icmp sgt i32 %6336, 0
  br i1 %6337, label %6338, label %6346

6338:                                             ; preds = %6335
  %6339 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %6340 = load i32, i32* %6339, align 8
  %6341 = add i32 %6340, 1
  store i32 %6341, i32* %6339, align 8
  %6342 = urem i32 %6341, %6336
  %6343 = icmp eq i32 %6342, 0
  br i1 %6343, label %6344, label %6346

6344:                                             ; preds = %6338
  %6345 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %9, %struct._IO_FILE* %6345, i32 0) #6
  br label %6346

6346:                                             ; preds = %6344, %6338, %6335, %6331
  %6347 = load i64, i64* %895, align 8
  %6348 = add i64 %6311, -1
  %6349 = inttoptr i64 %6348 to i32*
  %6350 = trunc i64 %6347 to i32
  store atomic volatile i32 %6350, i32* %6349 monotonic, align 4
  %6351 = add i64 %6311, 3
  %6352 = inttoptr i64 %6351 to i32*
  store atomic volatile i32 0, i32* %6352 monotonic, align 4
  %6353 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 110
  store i64 %6311, i64* %6353, align 8
  %6354 = load i64, i64* %1864, align 8
  %6355 = add i64 %6354, 7
  %6356 = inttoptr i64 %6355 to i16*
  %6357 = load atomic i16, i16* %6356 monotonic, align 2
  %6358 = icmp ult i16 %6357, 68
  br i1 %6358, label %6360, label %6359, !prof !2

6359:                                             ; preds = %6346
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.373, i64 0, i64 0)) #7
  unreachable

6360:                                             ; preds = %6346
  %6361 = add i64 %6354, 4
  %6362 = inttoptr i64 %6361 to i8*
  store atomic volatile i8 50, i8* %6362 monotonic, align 1
  br label %6363

6363:                                             ; preds = %464, %1887, %5794, %5780, %6308, %6253, %6198, %6129, %6054, %5946, %5882, %5823, %630, %497, %402, %327, %252, %189, %134, %76, %6360, %24, %29, %34, %39, %44, %49, %54, %59, %755, %827, %890, %953, %1016, %1087, %1158, %1221, %1284, %1355, %1418, %1481, %1544, %1607, %1670, %1733, %1796, %1859, %1971, %2038, %2100, %2162, %2224, %2285, %2347, %2409, %2471, %2533, %2595, %2657, %2719, %2781, %2843, %2905, %2967, %3029, %3091, %3153, %3215, %3277, %3339, %3401, %3463, %3525, %3587, %3591, %3660, %3722, %3784, %3846, %3912, %3978, %4040, %4102, %4164, %4226, %4288, %4350, %4412, %4474, %4536, %4598, %4660, %4722, %4784, %4846, %4908, %4970, %5032, %5094, %5156, %5218, %5280, %5342, %5404, %5466, %5528, %5590, %5652, %5714, %5776, %1
  %6364 = phi i1 [ false, %1 ], [ true, %6360 ], [ false, %24 ], [ false, %29 ], [ false, %34 ], [ false, %39 ], [ false, %44 ], [ false, %49 ], [ false, %54 ], [ false, %59 ], [ false, %755 ], [ false, %827 ], [ false, %890 ], [ false, %953 ], [ false, %1016 ], [ false, %1087 ], [ false, %1158 ], [ false, %1221 ], [ false, %1284 ], [ false, %1355 ], [ false, %1418 ], [ false, %1481 ], [ false, %1544 ], [ false, %1607 ], [ false, %1670 ], [ false, %1733 ], [ false, %1796 ], [ false, %1859 ], [ false, %1971 ], [ false, %2038 ], [ false, %2100 ], [ false, %2162 ], [ false, %2224 ], [ false, %2285 ], [ false, %2347 ], [ false, %2409 ], [ false, %2471 ], [ false, %2533 ], [ false, %2595 ], [ false, %2657 ], [ false, %2719 ], [ false, %2781 ], [ false, %2843 ], [ false, %2905 ], [ false, %2967 ], [ false, %3029 ], [ false, %3091 ], [ false, %3153 ], [ false, %3215 ], [ false, %3277 ], [ false, %3339 ], [ false, %3401 ], [ false, %3463 ], [ false, %3525 ], [ false, %3587 ], [ false, %3591 ], [ false, %3660 ], [ false, %3722 ], [ false, %3784 ], [ false, %3846 ], [ false, %3912 ], [ false, %3978 ], [ false, %4040 ], [ false, %4102 ], [ false, %4164 ], [ false, %4226 ], [ false, %4288 ], [ false, %4350 ], [ false, %4412 ], [ false, %4474 ], [ false, %4536 ], [ false, %4598 ], [ false, %4660 ], [ false, %4722 ], [ false, %4784 ], [ false, %4846 ], [ false, %4908 ], [ false, %4970 ], [ false, %5032 ], [ false, %5094 ], [ false, %5156 ], [ false, %5218 ], [ false, %5280 ], [ false, %5342 ], [ false, %5404 ], [ false, %5466 ], [ false, %5528 ], [ false, %5590 ], [ false, %5652 ], [ false, %5714 ], [ false, %5776 ], [ false, %76 ], [ false, %134 ], [ false, %189 ], [ false, %252 ], [ false, %327 ], [ false, %402 ], [ false, %497 ], [ false, %630 ], [ false, %5823 ], [ false, %5882 ], [ false, %5946 ], [ false, %6054 ], [ false, %6129 ], [ false, %6198 ], [ false, %6253 ], [ false, %6308 ], [ false, %5780 ], [ false, %5794 ], [ false, %1887 ], [ false, %464 ]
  ret i1 %6364
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Heap16CreateApiObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %3 = add i64 %2, -41416
  %4 = inttoptr i64 %3 to %"class.v8::internal::Isolate"*
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = tail call i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* %4, i32 2) #6
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 656
  store i64 %14, i64* %15, align 8
  %16 = inttoptr i64 %3 to %"class.v8::internal::FactoryBase"*
  %17 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %16, i16 zeroext 104, i8 zeroext 4) #6
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 35
  %20 = inttoptr i64 %19 to i32*
  store atomic volatile i32 0, i32* %20 monotonic, align 4
  %21 = load i64, i64* %17, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 118
  store i64 %21, i64* %22, align 8
  %23 = icmp eq i64 %3, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to i64*
  %26 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  store i64 %7, i64* %6, align 8
  %28 = load i32, i32* %10, align 8
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %10, align 8
  %30 = load i64*, i64** %8, align 8
  %31 = icmp eq i64* %30, %9
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  store i64* %9, i64** %8, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #6
  %33 = load i64*, i64** %26, align 8
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i64* [ %33, %32 ], [ %25, %24 ]
  %36 = phi i64* [ %9, %32 ], [ %27, %24 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %35, i64* %36) #6
  br label %37

37:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Heap20CreateInitialObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Vector.1195", align 8
  %3 = alloca %"class.v8::internal::Vector.1195", align 8
  %4 = alloca %"class.v8::internal::Vector.1195", align 8
  %5 = alloca %"class.v8::internal::Vector.1195", align 8
  %6 = alloca %"class.v8::internal::Vector.1195", align 8
  %7 = alloca %"class.v8::internal::Vector.1195", align 8
  %8 = alloca %"class.v8::internal::Vector.1195", align 8
  %9 = alloca %"class.v8::internal::Vector.1195", align 8
  %10 = alloca %"class.v8::internal::Vector.1195", align 8
  %11 = alloca %"class.v8::internal::Vector.1195", align 8
  %12 = alloca %"class.v8::internal::Vector.1195", align 8
  %13 = alloca %"class.v8::internal::Vector.1195", align 8
  %14 = alloca %"class.v8::internal::Vector.1195", align 8
  %15 = alloca %"class.v8::internal::Vector.1195", align 8
  %16 = alloca %"class.v8::internal::String", align 8
  %17 = alloca %"class.v8::internal::String", align 8
  %18 = alloca %"class.v8::internal::Vector.1195", align 8
  %19 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31
  %23 = bitcast %"struct.v8::internal::HandleScopeData"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = inttoptr i64 %20 to %"class.v8::internal::Factory"*
  %31 = inttoptr i64 %20 to %"class.v8::internal::FactoryBase"*
  %32 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %31) #6
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 3
  %35 = inttoptr i64 %34 to double*
  store double -0.000000e+00, double* %35, align 1
  %36 = load i64, i64* %32, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 124
  store i64 %36, i64* %37, align 8
  %38 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %31) #6
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 3
  %41 = inttoptr i64 %40 to double*
  store double 0x7FF8000000000000, double* %41, align 1
  %42 = load i64, i64* %38, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 121
  store i64 %42, i64* %43, align 8
  %44 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %31) #6
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 3
  %47 = inttoptr i64 %46 to i64*
  store i64 -2251799814209537, i64* %47, align 1
  %48 = load i64, i64* %44, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 122
  store i64 %48, i64* %49, align 8
  %50 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %31) #6
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 3
  %53 = inttoptr i64 %52 to double*
  store double 0x7FF0000000000000, double* %53, align 1
  %54 = load i64, i64* %50, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 123
  store i64 %54, i64* %55, align 8
  %56 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %31) #6
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 3
  %59 = inttoptr i64 %58 to double*
  store double 0xFFF0000000000000, double* %59, align 1
  %60 = load i64, i64* %56, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 125
  store i64 %60, i64* %61, align 8
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 8, i8 zeroext 4) #6
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 134
  store i64 %63, i64* %64, align 8
  tail call void @_ZN2v88internal4Heap18InitializeHashSeedEv(%"class.v8::internal::Heap"* %0) #6
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 4
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 657
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 658
  store i64 %66, i64* %68, align 8
  %69 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 256, i8 zeroext 1) #6
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 620
  store i64 %70, i64* %71, align 8
  %72 = bitcast %"class.v8::internal::Vector.1195"* %18 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %18, i64 0, i32 0
  %74 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %18, i64 0, i32 1
  br label %1477

75:                                               ; preds = %1477
  %76 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 160
  %77 = bitcast %"class.v8::internal::Factory"* %76 to i64*
  %78 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 1096
  %79 = bitcast %"class.v8::internal::Factory"* %78 to i64*
  call void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"* %21, i64* %77, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i64* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 5) #6
  %80 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 176
  %81 = bitcast %"class.v8::internal::Factory"* %80 to i64*
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 4
  %83 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %84 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %75
  %86 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %83, i64 0) #6
  br label %99

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = load i64*, i64** %25, align 8
  %91 = icmp eq i64* %89, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %94

94:                                               ; preds = %92, %87
  %95 = phi i64* [ %93, %92 ], [ %89, %87 ]
  %96 = ptrtoint i64* %95 to i64
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  store i64* %98, i64** %88, align 8
  store i64 0, i64* %95, align 8
  br label %99

99:                                               ; preds = %85, %94
  %100 = phi i64* [ %86, %85 ], [ %95, %94 ]
  call void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"* %21, i64* %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.257, i64 0, i64 0), i64* %100, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.263, i64 0, i64 0), i8 zeroext 3) #6
  %101 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 168
  %102 = bitcast %"class.v8::internal::Factory"* %101 to i64*
  %103 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 1104
  %104 = bitcast %"class.v8::internal::Factory"* %103 to i64*
  call void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"* %21, i64* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.342, i64 0, i64 0), i64* %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 2) #6
  %105 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 184
  %106 = bitcast %"class.v8::internal::Factory"* %105 to i64*
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %99
  %110 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 2) #6
  br label %123

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = load i64*, i64** %25, align 8
  %115 = icmp eq i64* %113, %114
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i64* [ %117, %116 ], [ %113, %111 ]
  %120 = ptrtoint i64* %119 to i64
  %121 = add i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  store i64* %122, i64** %112, align 8
  store i64 2, i64* %119, align 8
  br label %123

123:                                              ; preds = %109, %118
  %124 = phi i64* [ %110, %109 ], [ %119, %118 ]
  call void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"* %21, i64* %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.322, i64 0, i64 0), i64* %124, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i64 0, i64 0), i8 zeroext 1) #6
  %125 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 192
  %126 = bitcast %"class.v8::internal::Factory"* %125 to i64*
  %127 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %128 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  %130 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %127, i64 0) #6
  br label %143

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %133 = load i64*, i64** %132, align 8
  %134 = load i64*, i64** %25, align 8
  %135 = icmp eq i64* %133, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  %137 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i64* [ %137, %136 ], [ %133, %131 ]
  %140 = ptrtoint i64* %139 to i64
  %141 = add i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  store i64* %142, i64** %132, align 8
  store i64 0, i64* %139, align 8
  br label %143

143:                                              ; preds = %129, %138
  %144 = phi i64* [ %130, %129 ], [ %139, %138 ]
  call void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"* %21, i64* %126, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i64 0, i64 0), i64* %144, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i64 0, i64 0), i8 zeroext 0) #6
  %145 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 904
  %146 = bitcast %"class.v8::internal::Factory"* %145 to i64*
  %147 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %148 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %143
  %150 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %147, i64 -2) #6
  br label %163

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = load i64*, i64** %25, align 8
  %155 = icmp eq i64* %153, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %158

158:                                              ; preds = %156, %151
  %159 = phi i64* [ %157, %156 ], [ %153, %151 ]
  %160 = ptrtoint i64* %159 to i64
  %161 = add i64 %160, 8
  %162 = inttoptr i64 %161 to i64*
  store i64* %162, i64** %152, align 8
  store i64 -2, i64* %159, align 8
  br label %163

163:                                              ; preds = %149, %158
  %164 = phi i64* [ %150, %149 ], [ %159, %158 ]
  %165 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %146, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.343, i64 0, i64 0), i64* %164, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 6) #6
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 3
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 912
  %169 = bitcast %"class.v8::internal::Factory"* %168 to i64*
  %170 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %171 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %163
  %173 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %170, i64 -8) #6
  br label %186

174:                                              ; preds = %163
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = load i64*, i64** %25, align 8
  %178 = icmp eq i64* %176, %177
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  %180 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %181

181:                                              ; preds = %179, %174
  %182 = phi i64* [ %180, %179 ], [ %176, %174 ]
  %183 = ptrtoint i64* %182 to i64
  %184 = add i64 %183, 8
  %185 = inttoptr i64 %184 to i64*
  store i64* %185, i64** %175, align 8
  store i64 -8, i64* %182, align 8
  br label %186

186:                                              ; preds = %172, %181
  %187 = phi i64* [ %173, %172 ], [ %182, %181 ]
  %188 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %169, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.344, i64 0, i64 0), i64* %187, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 4) #6
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 31
  store i64 %189, i64* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 928
  %192 = bitcast %"class.v8::internal::Factory"* %191 to i64*
  %193 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %194 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %193, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %186
  %196 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %193, i64 -6) #6
  br label %209

197:                                              ; preds = %186
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = load i64*, i64** %25, align 8
  %201 = icmp eq i64* %199, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %204

204:                                              ; preds = %202, %197
  %205 = phi i64* [ %203, %202 ], [ %199, %197 ]
  %206 = ptrtoint i64* %205 to i64
  %207 = add i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  store i64* %208, i64** %198, align 8
  store i64 -6, i64* %205, align 8
  br label %209

209:                                              ; preds = %195, %204
  %210 = phi i64* [ %196, %195 ], [ %205, %204 ]
  %211 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %192, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.345, i64 0, i64 0), i64* %210, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 7) #6
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 33
  store i64 %212, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 920
  %215 = bitcast %"class.v8::internal::Factory"* %214 to i64*
  %216 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %217 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %209
  %219 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %216, i64 -10) #6
  br label %232

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = load i64*, i64** %25, align 8
  %224 = icmp eq i64* %222, %223
  br i1 %224, label %225, label %227

225:                                              ; preds = %220
  %226 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64* [ %226, %225 ], [ %222, %220 ]
  %229 = ptrtoint i64* %228 to i64
  %230 = add i64 %229, 8
  %231 = inttoptr i64 %230 to i64*
  store i64* %231, i64** %221, align 8
  store i64 -10, i64* %228, align 8
  br label %232

232:                                              ; preds = %218, %227
  %233 = phi i64* [ %219, %218 ], [ %228, %227 ]
  %234 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %215, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.346, i64 0, i64 0), i64* %233, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 8) #6
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 32
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 936
  %238 = bitcast %"class.v8::internal::Factory"* %237 to i64*
  %239 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %240 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %232
  %242 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %239, i64 -12) #6
  br label %255

243:                                              ; preds = %232
  %244 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %245 = load i64*, i64** %244, align 8
  %246 = load i64*, i64** %25, align 8
  %247 = icmp eq i64* %245, %246
  br i1 %247, label %248, label %250

248:                                              ; preds = %243
  %249 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %250

250:                                              ; preds = %248, %243
  %251 = phi i64* [ %249, %248 ], [ %245, %243 ]
  %252 = ptrtoint i64* %251 to i64
  %253 = add i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  store i64* %254, i64** %244, align 8
  store i64 -12, i64* %251, align 8
  br label %255

255:                                              ; preds = %241, %250
  %256 = phi i64* [ %242, %241 ], [ %251, %250 ]
  %257 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %238, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i64 0, i64 0), i64* %256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 9) #6
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 34
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 944
  %261 = bitcast %"class.v8::internal::Factory"* %260 to i64*
  %262 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %263 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %262, null
  br i1 %263, label %266, label %264

264:                                              ; preds = %255
  %265 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %262, i64 -14) #6
  br label %278

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 31, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = load i64*, i64** %25, align 8
  %270 = icmp eq i64* %268, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %266
  %272 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  br label %273

273:                                              ; preds = %271, %266
  %274 = phi i64* [ %272, %271 ], [ %268, %266 ]
  %275 = ptrtoint i64* %274 to i64
  %276 = add i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  store i64* %277, i64** %267, align 8
  store i64 -14, i64* %274, align 8
  br label %278

278:                                              ; preds = %264, %273
  %279 = phi i64* [ %265, %264 ], [ %274, %273 ]
  %280 = call i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"* %30, i64* %261, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.348, i64 0, i64 0), i64* %279, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.329, i64 0, i64 0), i8 zeroext 10) #6
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 35
  store i64 %281, i64* %282, align 8
  %283 = call i64* @_ZN2v88internal7Factory22NewSelfReferenceMarkerEv(%"class.v8::internal::Factory"* %30) #6
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 126
  store i64 %284, i64* %285, align 8
  %286 = call i64* @_ZN2v88internal7Factory27NewBasicBlockCountersMarkerEv(%"class.v8::internal::Factory"* %30) #6
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 127
  store i64 %287, i64* %288, align 8
  %289 = load i64, i64* %65, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 659
  store i64 %289, i64* %290, align 8
  %291 = load i64, i64* %23, align 8
  %292 = load i64*, i64** %25, align 8
  %293 = load i32, i32* %27, align 8
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %27, align 8
  %295 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %296 = load i64, i64* %295, align 8
  %297 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 474
  store i64 %296, i64* %297, align 8
  %298 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 475
  store i64 %299, i64* %300, align 8
  %301 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %302 = load i64, i64* %301, align 8
  %303 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 476
  store i64 %302, i64* %303, align 8
  %304 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 477
  store i64 %305, i64* %306, align 8
  %307 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %308 = load i64, i64* %307, align 8
  %309 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 478
  store i64 %308, i64* %309, align 8
  %310 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %311 = load i64, i64* %310, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 479
  store i64 %311, i64* %312, align 8
  %313 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %314 = load i64, i64* %313, align 8
  %315 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 480
  store i64 %314, i64* %315, align 8
  %316 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 481
  store i64 %317, i64* %318, align 8
  %319 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 482
  store i64 %320, i64* %321, align 8
  %322 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 483
  store i64 %323, i64* %324, align 8
  %325 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 484
  store i64 %326, i64* %327, align 8
  %328 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %329 = load i64, i64* %328, align 8
  %330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 485
  store i64 %329, i64* %330, align 8
  %331 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 486
  store i64 %332, i64* %333, align 8
  %334 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %335 = load i64, i64* %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 487
  store i64 %335, i64* %336, align 8
  %337 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %338 = load i64, i64* %337, align 8
  %339 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 488
  store i64 %338, i64* %339, align 8
  %340 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %341 = load i64, i64* %340, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 489
  store i64 %341, i64* %342, align 8
  %343 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 490
  store i64 %344, i64* %345, align 8
  %346 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %347 = load i64, i64* %346, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 491
  store i64 %347, i64* %348, align 8
  %349 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 492
  store i64 %350, i64* %351, align 8
  %352 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 493
  store i64 %353, i64* %354, align 8
  %355 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %356 = load i64, i64* %355, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 494
  store i64 %356, i64* %357, align 8
  %358 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %359 = load i64, i64* %358, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 495
  store i64 %359, i64* %360, align 8
  %361 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %362 = load i64, i64* %361, align 8
  %363 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 496
  store i64 %362, i64* %363, align 8
  %364 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %365 = load i64, i64* %364, align 8
  %366 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 497
  store i64 %365, i64* %366, align 8
  %367 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %368 = load i64, i64* %367, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 498
  store i64 %368, i64* %369, align 8
  %370 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %371 = load i64, i64* %370, align 8
  %372 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 499
  store i64 %371, i64* %372, align 8
  %373 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %374 = load i64, i64* %373, align 8
  %375 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 500
  store i64 %374, i64* %375, align 8
  %376 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %377 = load i64, i64* %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 501
  store i64 %377, i64* %378, align 8
  %379 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %380 = load i64, i64* %379, align 8
  %381 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 502
  store i64 %380, i64* %381, align 8
  %382 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 503
  store i64 %383, i64* %384, align 8
  %385 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %386 = load i64, i64* %385, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 504
  store i64 %386, i64* %387, align 8
  %388 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 505
  store i64 %389, i64* %390, align 8
  %391 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %392 = load i64, i64* %391, align 8
  %393 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 506
  store i64 %392, i64* %393, align 8
  %394 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %395 = load i64, i64* %394, align 8
  %396 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 507
  store i64 %395, i64* %396, align 8
  %397 = call i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %398 = load i64, i64* %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 508
  store i64 %398, i64* %399, align 8
  %400 = icmp eq i64 %20, 0
  br i1 %400, label %414, label %401

401:                                              ; preds = %278
  %402 = inttoptr i64 %291 to i64*
  %403 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %22, i64 0, i32 0
  %404 = load i64*, i64** %403, align 8
  store i64 %291, i64* %23, align 8
  %405 = load i32, i32* %27, align 8
  %406 = add nsw i32 %405, -1
  store i32 %406, i32* %27, align 8
  %407 = load i64*, i64** %25, align 8
  %408 = icmp eq i64* %407, %292
  br i1 %408, label %411, label %409

409:                                              ; preds = %401
  store i64* %292, i64** %25, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %21) #6
  %410 = load i64*, i64** %403, align 8
  br label %411

411:                                              ; preds = %409, %401
  %412 = phi i64* [ %410, %409 ], [ %402, %401 ]
  %413 = phi i64* [ %292, %409 ], [ %404, %401 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %412, i64* %413) #6
  br label %414

414:                                              ; preds = %278, %411
  %415 = load i64, i64* %23, align 8
  %416 = load i64*, i64** %25, align 8
  %417 = load i32, i32* %27, align 8
  %418 = add nsw i32 %417, 1
  store i32 %418, i32* %27, align 8
  %419 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %420 = bitcast %"class.v8::internal::Vector.1195"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %420) #6
  %421 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.349, i64 0, i64 0), i8** %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %2, i64 0, i32 1
  store i64 20, i64* %422, align 8
  %423 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %2) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %420) #6
  %424 = load i64, i64* %419, align 8
  %425 = load i64, i64* %423, align 8
  %426 = add i64 %424, 11
  %427 = inttoptr i64 %426 to i32*
  %428 = trunc i64 %425 to i32
  store atomic volatile i32 %428, i32* %427 monotonic, align 4
  %429 = and i64 %425, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %442, label %431

431:                                              ; preds = %414
  %432 = and i64 %424, -262144
  %433 = or i64 %432, 8
  %434 = inttoptr i64 %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = and i64 %435, 262144
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %442, label %438

438:                                              ; preds = %431
  %439 = or i64 %432, 16
  %440 = inttoptr i64 %439 to %"class.v8::internal::Heap"**
  %441 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %440, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %441, i64 %424, i64 %426, i64 %425) #6
  br label %442

442:                                              ; preds = %438, %431, %414
  %443 = and i64 %425, -262144
  %444 = or i64 %443, 8
  %445 = inttoptr i64 %444 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = and i64 %446, 24
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %457, label %449

449:                                              ; preds = %442
  %450 = and i64 %424, -262144
  %451 = or i64 %450, 8
  %452 = inttoptr i64 %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = and i64 %453, 24
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %449
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %424, i64 %426, i64 %425) #6
  br label %457

457:                                              ; preds = %442, %449, %456
  %458 = load i64, i64* %419, align 8
  %459 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 509
  store i64 %458, i64* %459, align 8
  %460 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %461 = bitcast %"class.v8::internal::Vector.1195"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %461) #6
  %462 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.350, i64 0, i64 0), i8** %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %3, i64 0, i32 1
  store i64 15, i64* %463, align 8
  %464 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %461) #6
  %465 = load i64, i64* %460, align 8
  %466 = load i64, i64* %464, align 8
  %467 = add i64 %465, 11
  %468 = inttoptr i64 %467 to i32*
  %469 = trunc i64 %466 to i32
  store atomic volatile i32 %469, i32* %468 monotonic, align 4
  %470 = and i64 %466, 1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %483, label %472

472:                                              ; preds = %457
  %473 = and i64 %465, -262144
  %474 = or i64 %473, 8
  %475 = inttoptr i64 %474 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = and i64 %476, 262144
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %483, label %479

479:                                              ; preds = %472
  %480 = or i64 %473, 16
  %481 = inttoptr i64 %480 to %"class.v8::internal::Heap"**
  %482 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %481, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %482, i64 %465, i64 %467, i64 %466) #6
  br label %483

483:                                              ; preds = %479, %472, %457
  %484 = and i64 %466, -262144
  %485 = or i64 %484, 8
  %486 = inttoptr i64 %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = and i64 %487, 24
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %498, label %490

490:                                              ; preds = %483
  %491 = and i64 %465, -262144
  %492 = or i64 %491, 8
  %493 = inttoptr i64 %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = and i64 %494, 24
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %490
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %465, i64 %467, i64 %466) #6
  br label %498

498:                                              ; preds = %483, %490, %497
  %499 = load i64, i64* %460, align 8
  %500 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 510
  store i64 %499, i64* %500, align 8
  %501 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %502 = bitcast %"class.v8::internal::Vector.1195"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %502) #6
  %503 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.351, i64 0, i64 0), i8** %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %4, i64 0, i32 1
  store i64 27, i64* %504, align 8
  %505 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %502) #6
  %506 = load i64, i64* %501, align 8
  %507 = load i64, i64* %505, align 8
  %508 = add i64 %506, 11
  %509 = inttoptr i64 %508 to i32*
  %510 = trunc i64 %507 to i32
  store atomic volatile i32 %510, i32* %509 monotonic, align 4
  %511 = and i64 %507, 1
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %524, label %513

513:                                              ; preds = %498
  %514 = and i64 %506, -262144
  %515 = or i64 %514, 8
  %516 = inttoptr i64 %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = and i64 %517, 262144
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %524, label %520

520:                                              ; preds = %513
  %521 = or i64 %514, 16
  %522 = inttoptr i64 %521 to %"class.v8::internal::Heap"**
  %523 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %522, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %523, i64 %506, i64 %508, i64 %507) #6
  br label %524

524:                                              ; preds = %520, %513, %498
  %525 = and i64 %507, -262144
  %526 = or i64 %525, 8
  %527 = inttoptr i64 %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = and i64 %528, 24
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %539, label %531

531:                                              ; preds = %524
  %532 = and i64 %506, -262144
  %533 = or i64 %532, 8
  %534 = inttoptr i64 %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = and i64 %535, 24
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %539

538:                                              ; preds = %531
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %506, i64 %508, i64 %507) #6
  br label %539

539:                                              ; preds = %524, %531, %538
  %540 = load i64, i64* %501, align 8
  %541 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 511
  store i64 %540, i64* %541, align 8
  %542 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %543 = bitcast %"class.v8::internal::Vector.1195"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %543) #6
  %544 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.352, i64 0, i64 0), i8** %544, align 8
  %545 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %5, i64 0, i32 1
  store i64 15, i64* %545, align 8
  %546 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %543) #6
  %547 = load i64, i64* %542, align 8
  %548 = load i64, i64* %546, align 8
  %549 = add i64 %547, 11
  %550 = inttoptr i64 %549 to i32*
  %551 = trunc i64 %548 to i32
  store atomic volatile i32 %551, i32* %550 monotonic, align 4
  %552 = and i64 %548, 1
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %565, label %554

554:                                              ; preds = %539
  %555 = and i64 %547, -262144
  %556 = or i64 %555, 8
  %557 = inttoptr i64 %556 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = and i64 %558, 262144
  %560 = icmp eq i64 %559, 0
  br i1 %560, label %565, label %561

561:                                              ; preds = %554
  %562 = or i64 %555, 16
  %563 = inttoptr i64 %562 to %"class.v8::internal::Heap"**
  %564 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %563, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %564, i64 %547, i64 %549, i64 %548) #6
  br label %565

565:                                              ; preds = %561, %554, %539
  %566 = and i64 %548, -262144
  %567 = or i64 %566, 8
  %568 = inttoptr i64 %567 to i64*
  %569 = load i64, i64* %568, align 8
  %570 = and i64 %569, 24
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %580, label %572

572:                                              ; preds = %565
  %573 = and i64 %547, -262144
  %574 = or i64 %573, 8
  %575 = inttoptr i64 %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = and i64 %576, 24
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %572
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %547, i64 %549, i64 %548) #6
  br label %580

580:                                              ; preds = %565, %572, %579
  %581 = load i64, i64* %542, align 8
  %582 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 512
  store i64 %581, i64* %582, align 8
  %583 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %584 = bitcast %"class.v8::internal::Vector.1195"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %584) #6
  %585 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.353, i64 0, i64 0), i8** %585, align 8
  %586 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %6, i64 0, i32 1
  store i64 12, i64* %586, align 8
  %587 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %584) #6
  %588 = load i64, i64* %583, align 8
  %589 = load i64, i64* %587, align 8
  %590 = add i64 %588, 11
  %591 = inttoptr i64 %590 to i32*
  %592 = trunc i64 %589 to i32
  store atomic volatile i32 %592, i32* %591 monotonic, align 4
  %593 = and i64 %589, 1
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %606, label %595

595:                                              ; preds = %580
  %596 = and i64 %588, -262144
  %597 = or i64 %596, 8
  %598 = inttoptr i64 %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = and i64 %599, 262144
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %606, label %602

602:                                              ; preds = %595
  %603 = or i64 %596, 16
  %604 = inttoptr i64 %603 to %"class.v8::internal::Heap"**
  %605 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %604, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %605, i64 %588, i64 %590, i64 %589) #6
  br label %606

606:                                              ; preds = %602, %595, %580
  %607 = and i64 %589, -262144
  %608 = or i64 %607, 8
  %609 = inttoptr i64 %608 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = and i64 %610, 24
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %621, label %613

613:                                              ; preds = %606
  %614 = and i64 %588, -262144
  %615 = or i64 %614, 8
  %616 = inttoptr i64 %615 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = and i64 %617, 24
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %613
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %588, i64 %590, i64 %589) #6
  br label %621

621:                                              ; preds = %606, %613, %620
  %622 = load i64, i64* %583, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 513
  store i64 %622, i64* %623, align 8
  %624 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %625 = bitcast %"class.v8::internal::Vector.1195"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %625) #6
  %626 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.354, i64 0, i64 0), i8** %626, align 8
  %627 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %7, i64 0, i32 1
  store i64 14, i64* %627, align 8
  %628 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %625) #6
  %629 = load i64, i64* %624, align 8
  %630 = load i64, i64* %628, align 8
  %631 = add i64 %629, 11
  %632 = inttoptr i64 %631 to i32*
  %633 = trunc i64 %630 to i32
  store atomic volatile i32 %633, i32* %632 monotonic, align 4
  %634 = and i64 %630, 1
  %635 = icmp eq i64 %634, 0
  br i1 %635, label %647, label %636

636:                                              ; preds = %621
  %637 = and i64 %629, -262144
  %638 = or i64 %637, 8
  %639 = inttoptr i64 %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = and i64 %640, 262144
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %647, label %643

643:                                              ; preds = %636
  %644 = or i64 %637, 16
  %645 = inttoptr i64 %644 to %"class.v8::internal::Heap"**
  %646 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %645, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %646, i64 %629, i64 %631, i64 %630) #6
  br label %647

647:                                              ; preds = %643, %636, %621
  %648 = and i64 %630, -262144
  %649 = or i64 %648, 8
  %650 = inttoptr i64 %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = and i64 %651, 24
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %662, label %654

654:                                              ; preds = %647
  %655 = and i64 %629, -262144
  %656 = or i64 %655, 8
  %657 = inttoptr i64 %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = and i64 %658, 24
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %661, label %662

661:                                              ; preds = %654
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %629, i64 %631, i64 %630) #6
  br label %662

662:                                              ; preds = %647, %654, %661
  %663 = load i64, i64* %624, align 8
  %664 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 514
  store i64 %663, i64* %664, align 8
  %665 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %666 = bitcast %"class.v8::internal::Vector.1195"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %666) #6
  %667 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.355, i64 0, i64 0), i8** %667, align 8
  %668 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %8, i64 0, i32 1
  store i64 13, i64* %668, align 8
  %669 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %666) #6
  %670 = load i64, i64* %665, align 8
  %671 = load i64, i64* %669, align 8
  %672 = add i64 %670, 11
  %673 = inttoptr i64 %672 to i32*
  %674 = trunc i64 %671 to i32
  store atomic volatile i32 %674, i32* %673 monotonic, align 4
  %675 = and i64 %671, 1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %688, label %677

677:                                              ; preds = %662
  %678 = and i64 %670, -262144
  %679 = or i64 %678, 8
  %680 = inttoptr i64 %679 to i64*
  %681 = load i64, i64* %680, align 8
  %682 = and i64 %681, 262144
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %688, label %684

684:                                              ; preds = %677
  %685 = or i64 %678, 16
  %686 = inttoptr i64 %685 to %"class.v8::internal::Heap"**
  %687 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %686, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %687, i64 %670, i64 %672, i64 %671) #6
  br label %688

688:                                              ; preds = %684, %677, %662
  %689 = and i64 %671, -262144
  %690 = or i64 %689, 8
  %691 = inttoptr i64 %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = and i64 %692, 24
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %703, label %695

695:                                              ; preds = %688
  %696 = and i64 %670, -262144
  %697 = or i64 %696, 8
  %698 = inttoptr i64 %697 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = and i64 %699, 24
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %703

702:                                              ; preds = %695
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %670, i64 %672, i64 %671) #6
  br label %703

703:                                              ; preds = %688, %695, %702
  %704 = load i64, i64* %665, align 8
  %705 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 515
  store i64 %704, i64* %705, align 8
  %706 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %707 = bitcast %"class.v8::internal::Vector.1195"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %707) #6
  %708 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.356, i64 0, i64 0), i8** %708, align 8
  %709 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %9, i64 0, i32 1
  store i64 14, i64* %709, align 8
  %710 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %707) #6
  %711 = load i64, i64* %706, align 8
  %712 = load i64, i64* %710, align 8
  %713 = add i64 %711, 11
  %714 = inttoptr i64 %713 to i32*
  %715 = trunc i64 %712 to i32
  store atomic volatile i32 %715, i32* %714 monotonic, align 4
  %716 = and i64 %712, 1
  %717 = icmp eq i64 %716, 0
  br i1 %717, label %729, label %718

718:                                              ; preds = %703
  %719 = and i64 %711, -262144
  %720 = or i64 %719, 8
  %721 = inttoptr i64 %720 to i64*
  %722 = load i64, i64* %721, align 8
  %723 = and i64 %722, 262144
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %729, label %725

725:                                              ; preds = %718
  %726 = or i64 %719, 16
  %727 = inttoptr i64 %726 to %"class.v8::internal::Heap"**
  %728 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %727, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %728, i64 %711, i64 %713, i64 %712) #6
  br label %729

729:                                              ; preds = %725, %718, %703
  %730 = and i64 %712, -262144
  %731 = or i64 %730, 8
  %732 = inttoptr i64 %731 to i64*
  %733 = load i64, i64* %732, align 8
  %734 = and i64 %733, 24
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %744, label %736

736:                                              ; preds = %729
  %737 = and i64 %711, -262144
  %738 = or i64 %737, 8
  %739 = inttoptr i64 %738 to i64*
  %740 = load i64, i64* %739, align 8
  %741 = and i64 %740, 24
  %742 = icmp eq i64 %741, 0
  br i1 %742, label %743, label %744

743:                                              ; preds = %736
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %711, i64 %713, i64 %712) #6
  br label %744

744:                                              ; preds = %729, %736, %743
  %745 = load i64, i64* %706, align 8
  %746 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 516
  store i64 %745, i64* %746, align 8
  %747 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %748 = bitcast %"class.v8::internal::Vector.1195"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %748) #6
  %749 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.357, i64 0, i64 0), i8** %749, align 8
  %750 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %10, i64 0, i32 1
  store i64 12, i64* %750, align 8
  %751 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %748) #6
  %752 = load i64, i64* %747, align 8
  %753 = load i64, i64* %751, align 8
  %754 = add i64 %752, 11
  %755 = inttoptr i64 %754 to i32*
  %756 = trunc i64 %753 to i32
  store atomic volatile i32 %756, i32* %755 monotonic, align 4
  %757 = and i64 %753, 1
  %758 = icmp eq i64 %757, 0
  br i1 %758, label %770, label %759

759:                                              ; preds = %744
  %760 = and i64 %752, -262144
  %761 = or i64 %760, 8
  %762 = inttoptr i64 %761 to i64*
  %763 = load i64, i64* %762, align 8
  %764 = and i64 %763, 262144
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %770, label %766

766:                                              ; preds = %759
  %767 = or i64 %760, 16
  %768 = inttoptr i64 %767 to %"class.v8::internal::Heap"**
  %769 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %768, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %769, i64 %752, i64 %754, i64 %753) #6
  br label %770

770:                                              ; preds = %766, %759, %744
  %771 = and i64 %753, -262144
  %772 = or i64 %771, 8
  %773 = inttoptr i64 %772 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = and i64 %774, 24
  %776 = icmp eq i64 %775, 0
  br i1 %776, label %785, label %777

777:                                              ; preds = %770
  %778 = and i64 %752, -262144
  %779 = or i64 %778, 8
  %780 = inttoptr i64 %779 to i64*
  %781 = load i64, i64* %780, align 8
  %782 = and i64 %781, 24
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %784, label %785

784:                                              ; preds = %777
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %752, i64 %754, i64 %753) #6
  br label %785

785:                                              ; preds = %770, %777, %784
  %786 = load i64, i64* %747, align 8
  %787 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 517
  store i64 %786, i64* %787, align 8
  %788 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %789 = bitcast %"class.v8::internal::Vector.1195"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %789) #6
  %790 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.358, i64 0, i64 0), i8** %790, align 8
  %791 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %11, i64 0, i32 1
  store i64 18, i64* %791, align 8
  %792 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %789) #6
  %793 = load i64, i64* %788, align 8
  %794 = load i64, i64* %792, align 8
  %795 = add i64 %793, 11
  %796 = inttoptr i64 %795 to i32*
  %797 = trunc i64 %794 to i32
  store atomic volatile i32 %797, i32* %796 monotonic, align 4
  %798 = and i64 %794, 1
  %799 = icmp eq i64 %798, 0
  br i1 %799, label %811, label %800

800:                                              ; preds = %785
  %801 = and i64 %793, -262144
  %802 = or i64 %801, 8
  %803 = inttoptr i64 %802 to i64*
  %804 = load i64, i64* %803, align 8
  %805 = and i64 %804, 262144
  %806 = icmp eq i64 %805, 0
  br i1 %806, label %811, label %807

807:                                              ; preds = %800
  %808 = or i64 %801, 16
  %809 = inttoptr i64 %808 to %"class.v8::internal::Heap"**
  %810 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %809, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %810, i64 %793, i64 %795, i64 %794) #6
  br label %811

811:                                              ; preds = %807, %800, %785
  %812 = and i64 %794, -262144
  %813 = or i64 %812, 8
  %814 = inttoptr i64 %813 to i64*
  %815 = load i64, i64* %814, align 8
  %816 = and i64 %815, 24
  %817 = icmp eq i64 %816, 0
  br i1 %817, label %826, label %818

818:                                              ; preds = %811
  %819 = and i64 %793, -262144
  %820 = or i64 %819, 8
  %821 = inttoptr i64 %820 to i64*
  %822 = load i64, i64* %821, align 8
  %823 = and i64 %822, 24
  %824 = icmp eq i64 %823, 0
  br i1 %824, label %825, label %826

825:                                              ; preds = %818
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %793, i64 %795, i64 %794) #6
  br label %826

826:                                              ; preds = %811, %818, %825
  %827 = load i64, i64* %788, align 8
  %828 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 518
  store i64 %827, i64* %828, align 8
  %829 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %830 = bitcast %"class.v8::internal::Vector.1195"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %830) #6
  %831 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.359, i64 0, i64 0), i8** %831, align 8
  %832 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %12, i64 0, i32 1
  store i64 18, i64* %832, align 8
  %833 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %12) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %830) #6
  %834 = load i64, i64* %829, align 8
  %835 = load i64, i64* %833, align 8
  %836 = add i64 %834, 11
  %837 = inttoptr i64 %836 to i32*
  %838 = trunc i64 %835 to i32
  store atomic volatile i32 %838, i32* %837 monotonic, align 4
  %839 = and i64 %835, 1
  %840 = icmp eq i64 %839, 0
  br i1 %840, label %852, label %841

841:                                              ; preds = %826
  %842 = and i64 %834, -262144
  %843 = or i64 %842, 8
  %844 = inttoptr i64 %843 to i64*
  %845 = load i64, i64* %844, align 8
  %846 = and i64 %845, 262144
  %847 = icmp eq i64 %846, 0
  br i1 %847, label %852, label %848

848:                                              ; preds = %841
  %849 = or i64 %842, 16
  %850 = inttoptr i64 %849 to %"class.v8::internal::Heap"**
  %851 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %850, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %851, i64 %834, i64 %836, i64 %835) #6
  br label %852

852:                                              ; preds = %848, %841, %826
  %853 = and i64 %835, -262144
  %854 = or i64 %853, 8
  %855 = inttoptr i64 %854 to i64*
  %856 = load i64, i64* %855, align 8
  %857 = and i64 %856, 24
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %867, label %859

859:                                              ; preds = %852
  %860 = and i64 %834, -262144
  %861 = or i64 %860, 8
  %862 = inttoptr i64 %861 to i64*
  %863 = load i64, i64* %862, align 8
  %864 = and i64 %863, 24
  %865 = icmp eq i64 %864, 0
  br i1 %865, label %866, label %867

866:                                              ; preds = %859
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %834, i64 %836, i64 %835) #6
  br label %867

867:                                              ; preds = %852, %859, %866
  %868 = load i64, i64* %829, align 8
  %869 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 519
  store i64 %868, i64* %869, align 8
  %870 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %871 = bitcast %"class.v8::internal::Vector.1195"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %871) #6
  %872 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.360, i64 0, i64 0), i8** %872, align 8
  %873 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %13, i64 0, i32 1
  store i64 18, i64* %873, align 8
  %874 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %13) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %871) #6
  %875 = load i64, i64* %870, align 8
  %876 = add i64 %875, 7
  %877 = inttoptr i64 %876 to i32*
  %878 = load i32, i32* %877, align 4
  %879 = or i32 %878, 2
  store i32 %879, i32* %877, align 4
  %880 = load i64, i64* %870, align 8
  %881 = load i64, i64* %874, align 8
  %882 = add i64 %880, 11
  %883 = inttoptr i64 %882 to i32*
  %884 = trunc i64 %881 to i32
  store atomic volatile i32 %884, i32* %883 monotonic, align 4
  %885 = and i64 %881, 1
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %898, label %887

887:                                              ; preds = %867
  %888 = and i64 %880, -262144
  %889 = or i64 %888, 8
  %890 = inttoptr i64 %889 to i64*
  %891 = load i64, i64* %890, align 8
  %892 = and i64 %891, 262144
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %898, label %894

894:                                              ; preds = %887
  %895 = or i64 %888, 16
  %896 = inttoptr i64 %895 to %"class.v8::internal::Heap"**
  %897 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %896, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %897, i64 %880, i64 %882, i64 %881) #6
  br label %898

898:                                              ; preds = %894, %887, %867
  %899 = and i64 %881, -262144
  %900 = or i64 %899, 8
  %901 = inttoptr i64 %900 to i64*
  %902 = load i64, i64* %901, align 8
  %903 = and i64 %902, 24
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %913, label %905

905:                                              ; preds = %898
  %906 = and i64 %880, -262144
  %907 = or i64 %906, 8
  %908 = inttoptr i64 %907 to i64*
  %909 = load i64, i64* %908, align 8
  %910 = and i64 %909, 24
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %912, label %913

912:                                              ; preds = %905
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %880, i64 %882, i64 %881) #6
  br label %913

913:                                              ; preds = %898, %905, %912
  %914 = load i64, i64* %870, align 8
  %915 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 520
  store i64 %914, i64* %915, align 8
  %916 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %917 = bitcast %"class.v8::internal::Vector.1195"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %917) #6
  %918 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.361, i64 0, i64 0), i8** %918, align 8
  %919 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %14, i64 0, i32 1
  store i64 25, i64* %919, align 8
  %920 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %917) #6
  %921 = load i64, i64* %916, align 8
  %922 = add i64 %921, 7
  %923 = inttoptr i64 %922 to i32*
  %924 = load i32, i32* %923, align 4
  %925 = or i32 %924, 2
  store i32 %925, i32* %923, align 4
  %926 = load i64, i64* %916, align 8
  %927 = load i64, i64* %920, align 8
  %928 = add i64 %926, 11
  %929 = inttoptr i64 %928 to i32*
  %930 = trunc i64 %927 to i32
  store atomic volatile i32 %930, i32* %929 monotonic, align 4
  %931 = and i64 %927, 1
  %932 = icmp eq i64 %931, 0
  br i1 %932, label %944, label %933

933:                                              ; preds = %913
  %934 = and i64 %926, -262144
  %935 = or i64 %934, 8
  %936 = inttoptr i64 %935 to i64*
  %937 = load i64, i64* %936, align 8
  %938 = and i64 %937, 262144
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %944, label %940

940:                                              ; preds = %933
  %941 = or i64 %934, 16
  %942 = inttoptr i64 %941 to %"class.v8::internal::Heap"**
  %943 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %942, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %943, i64 %926, i64 %928, i64 %927) #6
  br label %944

944:                                              ; preds = %940, %933, %913
  %945 = and i64 %927, -262144
  %946 = or i64 %945, 8
  %947 = inttoptr i64 %946 to i64*
  %948 = load i64, i64* %947, align 8
  %949 = and i64 %948, 24
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %959, label %951

951:                                              ; preds = %944
  %952 = and i64 %926, -262144
  %953 = or i64 %952, 8
  %954 = inttoptr i64 %953 to i64*
  %955 = load i64, i64* %954, align 8
  %956 = and i64 %955, 24
  %957 = icmp eq i64 %956, 0
  br i1 %957, label %958, label %959

958:                                              ; preds = %951
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %926, i64 %928, i64 %927) #6
  br label %959

959:                                              ; preds = %944, %951, %958
  %960 = load i64, i64* %916, align 8
  %961 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 521
  store i64 %960, i64* %961, align 8
  %962 = call i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i8 zeroext 4) #6
  %963 = bitcast %"class.v8::internal::Vector.1195"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %963) #6
  %964 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.362, i64 0, i64 0), i8** %964, align 8
  %965 = getelementptr inbounds %"class.v8::internal::Vector.1195", %"class.v8::internal::Vector.1195"* %15, i64 0, i32 1
  store i64 18, i64* %965, align 8
  %966 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %963) #6
  %967 = load i64, i64* %962, align 8
  %968 = add i64 %967, 7
  %969 = inttoptr i64 %968 to i32*
  %970 = load i32, i32* %969, align 4
  %971 = or i32 %970, 2
  store i32 %971, i32* %969, align 4
  %972 = load i64, i64* %962, align 8
  %973 = load i64, i64* %966, align 8
  %974 = add i64 %972, 11
  %975 = inttoptr i64 %974 to i32*
  %976 = trunc i64 %973 to i32
  store atomic volatile i32 %976, i32* %975 monotonic, align 4
  %977 = and i64 %973, 1
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %990, label %979

979:                                              ; preds = %959
  %980 = and i64 %972, -262144
  %981 = or i64 %980, 8
  %982 = inttoptr i64 %981 to i64*
  %983 = load i64, i64* %982, align 8
  %984 = and i64 %983, 262144
  %985 = icmp eq i64 %984, 0
  br i1 %985, label %990, label %986

986:                                              ; preds = %979
  %987 = or i64 %980, 16
  %988 = inttoptr i64 %987 to %"class.v8::internal::Heap"**
  %989 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %988, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %989, i64 %972, i64 %974, i64 %973) #6
  br label %990

990:                                              ; preds = %986, %979, %959
  %991 = and i64 %973, -262144
  %992 = or i64 %991, 8
  %993 = inttoptr i64 %992 to i64*
  %994 = load i64, i64* %993, align 8
  %995 = and i64 %994, 24
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %1005, label %997

997:                                              ; preds = %990
  %998 = and i64 %972, -262144
  %999 = or i64 %998, 8
  %1000 = inttoptr i64 %999 to i64*
  %1001 = load i64, i64* %1000, align 8
  %1002 = and i64 %1001, 24
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %1005

1004:                                             ; preds = %997
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %972, i64 %974, i64 %973) #6
  br label %1005

1005:                                             ; preds = %990, %997, %1004
  %1006 = load i64, i64* %962, align 8
  %1007 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 522
  store i64 %1006, i64* %1007, align 8
  %1008 = load i64, i64* %962, align 8
  %1009 = add i64 %1008, 7
  %1010 = inttoptr i64 %1009 to i32*
  %1011 = load i32, i32* %1010, align 4
  %1012 = or i32 %1011, 8
  store i32 %1012, i32* %1010, align 4
  br i1 %400, label %1026, label %1013

1013:                                             ; preds = %1005
  %1014 = inttoptr i64 %415 to i64*
  %1015 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %22, i64 0, i32 0
  %1016 = load i64*, i64** %1015, align 8
  store i64 %415, i64* %23, align 8
  %1017 = load i32, i32* %27, align 8
  %1018 = add nsw i32 %1017, -1
  store i32 %1018, i32* %27, align 8
  %1019 = load i64*, i64** %25, align 8
  %1020 = icmp eq i64* %1019, %416
  br i1 %1020, label %1023, label %1021

1021:                                             ; preds = %1013
  store i64* %416, i64** %25, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %21) #6
  %1022 = load i64*, i64** %1015, align 8
  br label %1023

1023:                                             ; preds = %1021, %1013
  %1024 = phi i64* [ %1022, %1021 ], [ %1014, %1013 ]
  %1025 = phi i64* [ %416, %1021 ], [ %1016, %1013 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1024, i64* %1025) #6
  br label %1026

1026:                                             ; preds = %1005, %1023
  %1027 = call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %21, i32 1, i8 zeroext 4, i32 1) #6
  %1028 = load i64, i64* %1027, align 8
  %1029 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 115
  store i64 %1028, i64* %1029, align 8
  %1030 = load i64, i64* %1027, align 8
  %1031 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 646
  store i64 %1030, i64* %1031, align 8
  %1032 = load i64, i64* %1027, align 8
  %1033 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 647
  store i64 %1032, i64* %1033, align 8
  %1034 = load i64, i64* %1027, align 8
  %1035 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 648
  store i64 %1034, i64* %1035, align 8
  %1036 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 512, i8 zeroext 1) #6
  %1037 = load i64, i64* %1036, align 8
  %1038 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 645
  store i64 %1037, i64* %1038, align 8
  %1039 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 29
  %1040 = load i64, i64* %1039, align 8
  %1041 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 661
  store i64 %1040, i64* %1041, align 8
  %1042 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 256, i8 zeroext 1) #6
  %1043 = load i64, i64* %1042, align 8
  %1044 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 621
  store i64 %1043, i64* %1044, align 8
  %1045 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 256, i8 zeroext 1) #6
  %1046 = load i64, i64* %1045, align 8
  %1047 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 622
  store i64 %1046, i64* %1047, align 8
  %1048 = call i64* @_ZN2v88internal7Factory19NewManyClosuresCellENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Factory"* %30, i64* %77) #6
  %1049 = load i64, i64* %1048, align 8
  %1050 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 601
  store i64 %1049, i64* %1050, align 8
  %1051 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 120
  %1052 = load i64, i64* %1051, align 8
  %1053 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 651
  store i64 %1052, i64* %1053, align 8
  %1054 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 652
  store i64 %1052, i64* %1054, align 8
  %1055 = load i64, i64* %65, align 8
  %1056 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 653
  store i64 %1055, i64* %1056, align 8
  %1057 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 660
  store i64 %1055, i64* %1057, align 8
  %1058 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 662
  store i64 %1052, i64* %1058, align 8
  %1059 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 649
  store i64 %1052, i64* %1059, align 8
  %1060 = call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %21, i32 1, i8 zeroext 4, i32 1) #6
  %1061 = load i64, i64* %1060, align 8
  %1062 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 111
  store i64 %1061, i64* %1062, align 8
  %1063 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 0, i8 zeroext 1) #6
  %1064 = load i64, i64* %1063, align 8
  %1065 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 650
  store i64 %1064, i64* %1065, align 8
  %1066 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 663
  %1067 = bitcast i64* %1066 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1067, i8 0, i64 24, i1 false)
  %1068 = call i64* @_ZN2v88internal14OrderedHashMap13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %21, i8 zeroext 4) #6
  %1069 = icmp eq i64* %1068, null
  br i1 %1069, label %1070, label %1071, !prof !4

1070:                                             ; preds = %1026
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.375, i64 0, i64 0)) #7
  unreachable

1071:                                             ; preds = %1026
  %1072 = load i64, i64* %1068, align 8
  %1073 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 112
  store i64 %1072, i64* %1073, align 8
  %1074 = call i64* @_ZN2v88internal14OrderedHashSet13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %21, i8 zeroext 4) #6
  %1075 = icmp eq i64* %1074, null
  br i1 %1075, label %1076, label %1077, !prof !4

1076:                                             ; preds = %1071
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.375, i64 0, i64 0)) #7
  unreachable

1077:                                             ; preds = %1071
  %1078 = load i64, i64* %1074, align 8
  %1079 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 113
  store i64 %1078, i64* %1079, align 8
  %1080 = call i64* @_ZN2v88internal21OrderedNameDictionary13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %21, i8 zeroext 4) #6
  %1081 = icmp eq i64* %1080, null
  br i1 %1081, label %1082, label %1083, !prof !4

1082:                                             ; preds = %1077
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.375, i64 0, i64 0)) #7
  unreachable

1083:                                             ; preds = %1077
  %1084 = load i64, i64* %1080, align 8
  %1085 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 116
  store i64 %1084, i64* %1085, align 8
  %1086 = call i64* @_ZN2v88internal7Factory39CreateCanonicalEmptySwissNameDictionaryEv(%"class.v8::internal::Factory"* %30) #6
  %1087 = load i64, i64* %1086, align 8
  %1088 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 117
  store i64 %1087, i64* %1088, align 8
  %1089 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %31, i32 0, i32 0, i8 zeroext 4) #6
  %1090 = load i64, i64* %1089, align 8
  %1091 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 114
  store i64 %1090, i64* %1091, align 8
  %1092 = call i64* @_ZN2v88internal9ScopeInfo23CreateGlobalThisBindingEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  %1093 = load i64, i64* %1092, align 8
  %1094 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 131
  store i64 %1093, i64* %1094, align 8
  %1095 = call i64* @_ZN2v88internal9ScopeInfo22CreateForEmptyFunctionEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  %1096 = load i64, i64* %1095, align 8
  %1097 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 132
  store i64 %1096, i64* %1097, align 8
  %1098 = call i64* @_ZN2v88internal9ScopeInfo22CreateForNativeContextEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %21) #6
  %1099 = load i64, i64* %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 133
  store i64 %1099, i64* %1100, align 8
  %1101 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 200
  %1102 = bitcast %"class.v8::internal::Factory"* %1101 to i64*
  %1103 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"* %31, i64* %1102) #6
  %1104 = load i64, i64* %1103, align 8
  %1105 = add i64 %1104, 23
  %1106 = inttoptr i64 %1105 to i32*
  store atomic volatile i32 0, i32* %1106 monotonic, align 4
  %1107 = load i64, i64* %1103, align 8
  %1108 = add i64 %1107, 47
  %1109 = inttoptr i64 %1108 to i32*
  %1110 = load i32, i32* %1109, align 4
  %1111 = and i32 %1110, -242
  %1112 = or i32 %1111, 16
  store atomic volatile i32 %1112, i32* %1109 monotonic, align 4
  %1113 = load i64, i64* %1103, align 8
  %1114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 600
  store i64 %1113, i64* %1114, align 8
  %1115 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1116 = load i64, i64* %1115, align 8
  %1117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 613
  store i64 %1116, i64* %1117, align 8
  %1118 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1119 = load i64, i64* %1118, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 603
  store i64 %1119, i64* %1120, align 8
  %1121 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1122 = load i64, i64* %1121, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 612
  store i64 %1122, i64* %1123, align 8
  %1124 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1125 = load i64, i64* %1124, align 8
  %1126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 607
  store i64 %1125, i64* %1126, align 8
  %1127 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1128 = load i64, i64* %1127, align 8
  %1129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 606
  store i64 %1128, i64* %1129, align 8
  %1130 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1131 = load i64, i64* %1130, align 8
  %1132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 616
  store i64 %1131, i64* %1132, align 8
  %1133 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1134 = load i64, i64* %1133, align 8
  %1135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 604
  store i64 %1134, i64* %1135, align 8
  %1136 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1137 = load i64, i64* %1136, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 605
  store i64 %1137, i64* %1138, align 8
  %1139 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1140 = load i64, i64* %1139, align 8
  %1141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 614
  store i64 %1140, i64* %1141, align 8
  %1142 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1143 = load i64, i64* %1142, align 8
  %1144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 615
  store i64 %1143, i64* %1144, align 8
  %1145 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1146 = load i64, i64* %1145, align 8
  %1147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 609
  store i64 %1146, i64* %1147, align 8
  %1148 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1149 = load i64, i64* %1148, align 8
  %1150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 617
  store i64 %1149, i64* %1150, align 8
  %1151 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1152 = load i64, i64* %1151, align 8
  %1153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 610
  store i64 %1152, i64* %1153, align 8
  %1154 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1155 = load i64, i64* %1154, align 8
  %1156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 618
  store i64 %1155, i64* %1156, align 8
  %1157 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1158 = load i64, i64* %1157, align 8
  %1159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 619
  store i64 %1158, i64* %1159, align 8
  %1160 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1161 = load i64, i64* %1160, align 8
  %1162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 611
  store i64 %1161, i64* %1162, align 8
  %1163 = call i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"* %30) #6
  %1164 = load i64, i64* %1163, align 8
  %1165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 608
  store i64 %1164, i64* %1165, align 8
  %1166 = load i64, i64* %1039, align 8
  %1167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 654
  store i64 %1166, i64* %1167, align 8
  %1168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 655
  store i64 %1166, i64* %1168, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 3
  %1170 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1171 = call i64* @_ZN2v88internal8Builtins34GenerateOffHeapTrampolineRelocInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1170) #6
  %1172 = load i64, i64* %1171, align 8
  %1173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 128
  store i64 %1172, i64* %1173, align 8
  %1174 = call i64* @_ZN2v88internal7Factory20NewCodeDataContainerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i32 0, i8 zeroext 4) #6
  %1175 = load i64, i64* %1174, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 129
  store i64 %1175, i64* %1176, align 8
  %1177 = call i64* @_ZN2v88internal7Factory20NewCodeDataContainerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %30, i32 16, i8 zeroext 4) #6
  %1178 = load i64, i64* %1177, align 8
  %1179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 130
  store i64 %1178, i64* %1179, align 8
  %1180 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 3912
  %1181 = bitcast %"class.v8::internal::Factory"* %1180 to i64*
  %1182 = load i64, i64* %1181, align 8
  %1183 = add i64 %1182, 3
  %1184 = inttoptr i64 %1183 to i32*
  %1185 = load i32, i32* %1184, align 4
  %1186 = and i32 %1185, 1
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1192, label %1188

1188:                                             ; preds = %1083
  %1189 = bitcast %"class.v8::internal::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1189) #6
  %1190 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1182, i64* %1190, align 8
  %1191 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1189) #6
  br label %1192

1192:                                             ; preds = %1083, %1188
  %1193 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 3320
  %1194 = bitcast %"class.v8::internal::Factory"* %1193 to i64*
  %1195 = load i64, i64* %1194, align 8
  %1196 = add i64 %1195, 3
  %1197 = inttoptr i64 %1196 to i32*
  %1198 = load i32, i32* %1197, align 4
  %1199 = and i32 %1198, 1
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1205, label %1201

1201:                                             ; preds = %1192
  %1202 = bitcast %"class.v8::internal::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1202) #6
  %1203 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1195, i64* %1203, align 8
  %1204 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1202) #6
  br label %1205

1205:                                             ; preds = %1192, %1201
  %1206 = load i64, i64* %1039, align 8
  %1207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 623
  store i64 %1206, i64* %1207, align 8
  %1208 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1208, i64 0, i32 30
  %1210 = load %"class.v8::internal::DescriptorLookupCache"*, %"class.v8::internal::DescriptorLookupCache"** %1209, align 8
  call void @_ZN2v88internal21DescriptorLookupCache5ClearEv(%"class.v8::internal::DescriptorLookupCache"* %1210) #6
  %1211 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1211, i64 0, i32 13
  %1213 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %1212, align 8
  call void @_ZN2v88internal16CompilationCache5ClearEv(%"class.v8::internal::CompilationCache"* %1213) #6
  %1214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 9
  %1215 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 219, i8 zeroext 0) #6
  %1216 = load i64, i64* %1215, align 8
  %1217 = add i64 %1216, 21
  %1218 = inttoptr i64 %1217 to i16*
  store i16 1, i16* %1218, align 2
  %1219 = load i64, i64* %1215, align 8
  %1220 = add i64 %1219, 19
  %1221 = inttoptr i64 %1220 to i16*
  store i16 1, i16* %1221, align 2
  %1222 = load i64, i64* %1215, align 8
  %1223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 624
  store i64 %1222, i64* %1223, align 8
  %1224 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 220, i8 zeroext 0) #6
  %1225 = load i64, i64* %1224, align 8
  %1226 = add i64 %1225, 21
  %1227 = inttoptr i64 %1226 to i16*
  store i16 1, i16* %1227, align 2
  %1228 = load i64, i64* %1224, align 8
  %1229 = add i64 %1228, 19
  %1230 = inttoptr i64 %1229 to i16*
  store i16 1, i16* %1230, align 2
  %1231 = load i64, i64* %1224, align 8
  %1232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 625
  store i64 %1231, i64* %1232, align 8
  %1233 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 605, i8 zeroext 0) #6
  %1234 = load i64, i64* %1233, align 8
  %1235 = add i64 %1234, 21
  %1236 = inttoptr i64 %1235 to i16*
  store i16 1, i16* %1236, align 2
  %1237 = load i64, i64* %1233, align 8
  %1238 = add i64 %1237, 19
  %1239 = inttoptr i64 %1238 to i16*
  store i16 1, i16* %1239, align 2
  %1240 = load i64, i64* %1233, align 8
  %1241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 627
  store i64 %1240, i64* %1241, align 8
  %1242 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 606, i8 zeroext 0) #6
  %1243 = load i64, i64* %1242, align 8
  %1244 = add i64 %1243, 21
  %1245 = inttoptr i64 %1244 to i16*
  store i16 1, i16* %1245, align 2
  %1246 = load i64, i64* %1242, align 8
  %1247 = add i64 %1246, 19
  %1248 = inttoptr i64 %1247 to i16*
  store i16 1, i16* %1248, align 2
  %1249 = load i64, i64* %1242, align 8
  %1250 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 626
  store i64 %1249, i64* %1250, align 8
  %1251 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 607, i8 zeroext 0) #6
  %1252 = load i64, i64* %1251, align 8
  %1253 = add i64 %1252, 21
  %1254 = inttoptr i64 %1253 to i16*
  store i16 1, i16* %1254, align 2
  %1255 = load i64, i64* %1251, align 8
  %1256 = add i64 %1255, 19
  %1257 = inttoptr i64 %1256 to i16*
  store i16 1, i16* %1257, align 2
  %1258 = load i64, i64* %1251, align 8
  %1259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 628
  store i64 %1258, i64* %1259, align 8
  %1260 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 610, i8 zeroext 0) #6
  %1261 = load i64, i64* %1260, align 8
  %1262 = add i64 %1261, 21
  %1263 = inttoptr i64 %1262 to i16*
  store i16 1, i16* %1263, align 2
  %1264 = load i64, i64* %1260, align 8
  %1265 = add i64 %1264, 19
  %1266 = inttoptr i64 %1265 to i16*
  store i16 1, i16* %1266, align 2
  %1267 = load i64, i64* %1260, align 8
  %1268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 629
  store i64 %1267, i64* %1268, align 8
  %1269 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 608, i8 zeroext 0) #6
  %1270 = load i64, i64* %1269, align 8
  %1271 = add i64 %1270, 21
  %1272 = inttoptr i64 %1271 to i16*
  store i16 1, i16* %1272, align 2
  %1273 = load i64, i64* %1269, align 8
  %1274 = add i64 %1273, 19
  %1275 = inttoptr i64 %1274 to i16*
  store i16 1, i16* %1275, align 2
  %1276 = load i64, i64* %1269, align 8
  %1277 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 631
  store i64 %1276, i64* %1277, align 8
  %1278 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 609, i8 zeroext 0) #6
  %1279 = load i64, i64* %1278, align 8
  %1280 = add i64 %1279, 21
  %1281 = inttoptr i64 %1280 to i16*
  store i16 1, i16* %1281, align 2
  %1282 = load i64, i64* %1278, align 8
  %1283 = add i64 %1282, 19
  %1284 = inttoptr i64 %1283 to i16*
  store i16 1, i16* %1284, align 2
  %1285 = load i64, i64* %1278, align 8
  %1286 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 630
  store i64 %1285, i64* %1286, align 8
  %1287 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1288 = bitcast %"class.v8::internal::Isolate"* %1287 to %"class.v8::internal::Factory"*
  %1289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1287, i64 0, i32 0, i32 7, i32 0, i64 9
  %1290 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1288, i64* %1289, i32 614, i8 zeroext 0) #6
  %1291 = load i64, i64* %1290, align 8
  %1292 = add i64 %1291, 21
  %1293 = inttoptr i64 %1292 to i16*
  store i16 1, i16* %1293, align 2
  %1294 = load i64, i64* %1290, align 8
  %1295 = add i64 %1294, 19
  %1296 = inttoptr i64 %1295 to i16*
  store i16 1, i16* %1296, align 2
  %1297 = load i64, i64* %1290, align 8
  %1298 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 632
  store i64 %1297, i64* %1298, align 8
  %1299 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1300 = bitcast %"class.v8::internal::Isolate"* %1299 to %"class.v8::internal::Factory"*
  %1301 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1299, i64 0, i32 0, i32 7, i32 0, i64 9
  %1302 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1300, i64* %1301, i32 879, i8 zeroext 22) #6
  %1303 = load i64, i64* %1302, align 8
  %1304 = add i64 %1303, 21
  %1305 = inttoptr i64 %1304 to i16*
  store i16 1, i16* %1305, align 2
  %1306 = load i64, i64* %1302, align 8
  %1307 = add i64 %1306, 19
  %1308 = inttoptr i64 %1307 to i16*
  store i16 1, i16* %1308, align 2
  %1309 = load i64, i64* %1302, align 8
  %1310 = add i64 %1309, 27
  %1311 = inttoptr i64 %1310 to i32*
  %1312 = load atomic i32, i32* %1311 monotonic, align 4
  %1313 = or i32 %1312, 32
  store atomic volatile i32 %1313, i32* %1311 monotonic, align 4
  %1314 = load i64, i64* %1302, align 8
  %1315 = add i64 %1314, 27
  %1316 = inttoptr i64 %1315 to i32*
  %1317 = load atomic i32, i32* %1316 monotonic, align 4
  %1318 = and i32 %1317, -507905
  %1319 = or i32 %1318, 114688
  store atomic volatile i32 %1319, i32* %1316 monotonic, align 4
  %1320 = load i64, i64* %1302, align 8
  %1321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 638
  store i64 %1320, i64* %1321, align 8
  %1322 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1323 = bitcast %"class.v8::internal::Isolate"* %1322 to %"class.v8::internal::Factory"*
  %1324 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1322, i64 0, i32 0, i32 7, i32 0, i64 9
  %1325 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1323, i64* %1324, i32 878, i8 zeroext 22) #6
  %1326 = load i64, i64* %1325, align 8
  %1327 = add i64 %1326, 21
  %1328 = inttoptr i64 %1327 to i16*
  store i16 1, i16* %1328, align 2
  %1329 = load i64, i64* %1325, align 8
  %1330 = add i64 %1329, 19
  %1331 = inttoptr i64 %1330 to i16*
  store i16 1, i16* %1331, align 2
  %1332 = load i64, i64* %1325, align 8
  %1333 = add i64 %1332, 27
  %1334 = inttoptr i64 %1333 to i32*
  %1335 = load atomic i32, i32* %1334 monotonic, align 4
  %1336 = or i32 %1335, 32
  store atomic volatile i32 %1336, i32* %1334 monotonic, align 4
  %1337 = load i64, i64* %1325, align 8
  %1338 = add i64 %1337, 27
  %1339 = inttoptr i64 %1338 to i32*
  %1340 = load atomic i32, i32* %1339 monotonic, align 4
  %1341 = and i32 %1340, -507905
  %1342 = or i32 %1341, 114688
  store atomic volatile i32 %1342, i32* %1339 monotonic, align 4
  %1343 = load i64, i64* %1325, align 8
  %1344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 637
  store i64 %1343, i64* %1344, align 8
  %1345 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1346 = bitcast %"class.v8::internal::Isolate"* %1345 to %"class.v8::internal::Factory"*
  %1347 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1345, i64 0, i32 0, i32 7, i32 0, i64 9
  %1348 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1346, i64* %1347, i32 882, i8 zeroext 0) #6
  %1349 = load i64, i64* %1348, align 8
  %1350 = add i64 %1349, 21
  %1351 = inttoptr i64 %1350 to i16*
  store i16 2, i16* %1351, align 2
  %1352 = load i64, i64* %1348, align 8
  %1353 = add i64 %1352, 19
  %1354 = inttoptr i64 %1353 to i16*
  store i16 2, i16* %1354, align 2
  %1355 = load i64, i64* %1348, align 8
  %1356 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 640
  store i64 %1355, i64* %1356, align 8
  %1357 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 896, i8 zeroext 0) #6
  %1358 = load i64, i64* %1357, align 8
  %1359 = add i64 %1358, 21
  %1360 = inttoptr i64 %1359 to i16*
  store i16 1, i16* %1360, align 2
  %1361 = load i64, i64* %1357, align 8
  %1362 = add i64 %1361, 19
  %1363 = inttoptr i64 %1362 to i16*
  store i16 1, i16* %1363, align 2
  %1364 = load i64, i64* %1357, align 8
  %1365 = add i64 %1364, 27
  %1366 = inttoptr i64 %1365 to i32*
  %1367 = load atomic i32, i32* %1366 monotonic, align 4
  %1368 = or i32 %1367, 32
  store atomic volatile i32 %1368, i32* %1366 monotonic, align 4
  %1369 = load i64, i64* %1357, align 8
  %1370 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 641
  store i64 %1369, i64* %1370, align 8
  %1371 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 895, i8 zeroext 0) #6
  %1372 = load i64, i64* %1371, align 8
  %1373 = add i64 %1372, 21
  %1374 = inttoptr i64 %1373 to i16*
  store i16 1, i16* %1374, align 2
  %1375 = load i64, i64* %1371, align 8
  %1376 = add i64 %1375, 19
  %1377 = inttoptr i64 %1376 to i16*
  store i16 1, i16* %1377, align 2
  %1378 = load i64, i64* %1371, align 8
  %1379 = add i64 %1378, 27
  %1380 = inttoptr i64 %1379 to i32*
  %1381 = load atomic i32, i32* %1380 monotonic, align 4
  %1382 = or i32 %1381, 32
  store atomic volatile i32 %1382, i32* %1380 monotonic, align 4
  %1383 = load i64, i64* %1371, align 8
  %1384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 639
  store i64 %1383, i64* %1384, align 8
  %1385 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 893, i8 zeroext 0) #6
  %1386 = load i64, i64* %1385, align 8
  %1387 = add i64 %1386, 21
  %1388 = inttoptr i64 %1387 to i16*
  store i16 0, i16* %1388, align 2
  %1389 = load i64, i64* %1385, align 8
  %1390 = add i64 %1389, 19
  %1391 = inttoptr i64 %1390 to i16*
  store i16 0, i16* %1391, align 2
  %1392 = load i64, i64* %1385, align 8
  %1393 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 643
  store i64 %1392, i64* %1393, align 8
  %1394 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %30, i64* %1214, i32 894, i8 zeroext 0) #6
  %1395 = load i64, i64* %1394, align 8
  %1396 = add i64 %1395, 21
  %1397 = inttoptr i64 %1396 to i16*
  store i16 0, i16* %1397, align 2
  %1398 = load i64, i64* %1394, align 8
  %1399 = add i64 %1398, 19
  %1400 = inttoptr i64 %1399 to i16*
  store i16 0, i16* %1400, align 2
  %1401 = load i64, i64* %1394, align 8
  %1402 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 642
  store i64 %1401, i64* %1402, align 8
  %1403 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1404 = bitcast %"class.v8::internal::Isolate"* %1403 to %"class.v8::internal::Factory"*
  %1405 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1403, i64 0, i32 0, i32 7, i32 0, i64 9
  %1406 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1404, i64* %1405, i32 886, i8 zeroext 0) #6
  %1407 = load i64, i64* %1406, align 8
  %1408 = add i64 %1407, 21
  %1409 = inttoptr i64 %1408 to i16*
  store i16 1, i16* %1409, align 2
  %1410 = load i64, i64* %1406, align 8
  %1411 = add i64 %1410, 19
  %1412 = inttoptr i64 %1411 to i16*
  store i16 1, i16* %1412, align 2
  %1413 = load i64, i64* %1406, align 8
  %1414 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 633
  store i64 %1413, i64* %1414, align 8
  %1415 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1416 = bitcast %"class.v8::internal::Isolate"* %1415 to %"class.v8::internal::Factory"*
  %1417 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1415, i64 0, i32 0, i32 7, i32 0, i64 9
  %1418 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1416, i64* %1417, i32 887, i8 zeroext 0) #6
  %1419 = load i64, i64* %1418, align 8
  %1420 = add i64 %1419, 21
  %1421 = inttoptr i64 %1420 to i16*
  store i16 1, i16* %1421, align 2
  %1422 = load i64, i64* %1418, align 8
  %1423 = add i64 %1422, 19
  %1424 = inttoptr i64 %1423 to i16*
  store i16 1, i16* %1424, align 2
  %1425 = load i64, i64* %1418, align 8
  %1426 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 634
  store i64 %1425, i64* %1426, align 8
  %1427 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1428 = bitcast %"class.v8::internal::Isolate"* %1427 to %"class.v8::internal::Factory"*
  %1429 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1427, i64 0, i32 0, i32 7, i32 0, i64 9
  %1430 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1428, i64* %1429, i32 888, i8 zeroext 0) #6
  %1431 = load i64, i64* %1430, align 8
  %1432 = add i64 %1431, 21
  %1433 = inttoptr i64 %1432 to i16*
  store i16 1, i16* %1433, align 2
  %1434 = load i64, i64* %1430, align 8
  %1435 = add i64 %1434, 19
  %1436 = inttoptr i64 %1435 to i16*
  store i16 1, i16* %1436, align 2
  %1437 = load i64, i64* %1430, align 8
  %1438 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 635
  store i64 %1437, i64* %1438, align 8
  %1439 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1440 = bitcast %"class.v8::internal::Isolate"* %1439 to %"class.v8::internal::Factory"*
  %1441 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1439, i64 0, i32 0, i32 7, i32 0, i64 9
  %1442 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1440, i64* %1441, i32 889, i8 zeroext 0) #6
  %1443 = load i64, i64* %1442, align 8
  %1444 = add i64 %1443, 21
  %1445 = inttoptr i64 %1444 to i16*
  store i16 1, i16* %1445, align 2
  %1446 = load i64, i64* %1442, align 8
  %1447 = add i64 %1446, 19
  %1448 = inttoptr i64 %1447 to i16*
  store i16 1, i16* %1448, align 2
  %1449 = load i64, i64* %1442, align 8
  %1450 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 636
  store i64 %1449, i64* %1450, align 8
  %1451 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1169, align 8
  %1452 = bitcast %"class.v8::internal::Isolate"* %1451 to %"class.v8::internal::Factory"*
  %1453 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1451, i64 0, i32 0, i32 7, i32 0, i64 9
  %1454 = call i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"* %1452, i64* %1453, i32 914, i8 zeroext 0) #6
  %1455 = load i64, i64* %1454, align 8
  %1456 = add i64 %1455, 21
  %1457 = inttoptr i64 %1456 to i16*
  store i16 0, i16* %1457, align 2
  %1458 = load i64, i64* %1454, align 8
  %1459 = add i64 %1458, 19
  %1460 = inttoptr i64 %1459 to i16*
  store i16 0, i16* %1460, align 2
  %1461 = load i64, i64* %1454, align 8
  %1462 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 644
  store i64 %1461, i64* %1462, align 8
  br i1 %400, label %1476, label %1463

1463:                                             ; preds = %1205
  %1464 = inttoptr i64 %24 to i64*
  %1465 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %22, i64 0, i32 0
  %1466 = load i64*, i64** %1465, align 8
  store i64 %24, i64* %23, align 8
  %1467 = load i32, i32* %27, align 8
  %1468 = add nsw i32 %1467, -1
  store i32 %1468, i32* %27, align 8
  %1469 = load i64*, i64** %25, align 8
  %1470 = icmp eq i64* %1469, %26
  br i1 %1470, label %1473, label %1471

1471:                                             ; preds = %1463
  store i64* %26, i64** %25, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %21) #6
  %1472 = load i64*, i64** %1465, align 8
  br label %1473

1473:                                             ; preds = %1471, %1463
  %1474 = phi i64* [ %1472, %1471 ], [ %1464, %1463 ]
  %1475 = phi i64* [ %26, %1471 ], [ %1466, %1463 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1474, i64* %1475) #6
  br label %1476

1476:                                             ; preds = %1205, %1473
  ret void

1477:                                             ; preds = %1477, %1
  %1478 = phi i64 [ 0, %1 ], [ %1488, %1477 ]
  %1479 = getelementptr inbounds [340 x %"struct.v8::internal::Heap::ConstantStringTable"], [340 x %"struct.v8::internal::Heap::ConstantStringTable"]* @_ZN2v88internal4Heap21constant_string_tableE, i64 0, i64 %1478, i32 0
  %1480 = load i8*, i8** %1479, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #6
  %1481 = call i64 @strlen(i8* %1480) #8
  store i8* %1480, i8** %73, align 8
  store i64 %1481, i64* %74, align 8
  %1482 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %30, %"class.v8::internal::Vector.1195"* nonnull dereferenceable(16) %18) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #6
  %1483 = load i64, i64* %1482, align 8
  %1484 = getelementptr inbounds [340 x %"struct.v8::internal::Heap::ConstantStringTable"], [340 x %"struct.v8::internal::Heap::ConstantStringTable"]* @_ZN2v88internal4Heap21constant_string_tableE, i64 0, i64 %1478, i32 1
  %1485 = load i16, i16* %1484, align 8
  %1486 = zext i16 %1485 to i64
  %1487 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 %1486
  store i64 %1483, i64* %1487, align 8
  %1488 = add nuw nsw i64 %1478, 1
  %1489 = icmp eq i64 %1488, 340
  br i1 %1489, label %75, label %1477
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Heap33CreateInternalAccessorInfoObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %3 = add i64 %2, -41416
  %4 = inttoptr i64 %3 to %"class.v8::internal::Isolate"*
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = tail call i64* @_ZN2v88internal9Accessors25MakeArgumentsIteratorInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 587
  store i64 %14, i64* %15, align 8
  %16 = tail call i64* @_ZN2v88internal9Accessors19MakeArrayLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 588
  store i64 %17, i64* %18, align 8
  %19 = tail call i64* @_ZN2v88internal9Accessors27MakeBoundFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 589
  store i64 %20, i64* %21, align 8
  %22 = tail call i64* @_ZN2v88internal9Accessors25MakeBoundFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 590
  store i64 %23, i64* %24, align 8
  %25 = tail call i64* @_ZN2v88internal9Accessors18MakeErrorStackInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 591
  store i64 %26, i64* %27, align 8
  %28 = tail call i64* @_ZN2v88internal9Accessors25MakeFunctionArgumentsInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 592
  store i64 %29, i64* %30, align 8
  %31 = tail call i64* @_ZN2v88internal9Accessors22MakeFunctionCallerInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 593
  store i64 %32, i64* %33, align 8
  %34 = tail call i64* @_ZN2v88internal9Accessors20MakeFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 594
  store i64 %35, i64* %36, align 8
  %37 = tail call i64* @_ZN2v88internal9Accessors22MakeFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 595
  store i64 %38, i64* %39, align 8
  %40 = tail call i64* @_ZN2v88internal9Accessors25MakeFunctionPrototypeInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 596
  store i64 %41, i64* %42, align 8
  %43 = tail call i64* @_ZN2v88internal9Accessors20MakeStringLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %4) #6
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 597
  store i64 %44, i64* %45, align 8
  %46 = load i64, i64* %15, align 8
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, -194
  %51 = or i32 %50, 64
  store atomic volatile i32 %51, i32* %48 monotonic, align 4
  %52 = load i64, i64* %15, align 8
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, -770
  %57 = or i32 %56, 512
  store atomic volatile i32 %57, i32* %54 monotonic, align 4
  %58 = load i64, i64* %18, align 8
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, -194
  %63 = or i32 %62, 64
  store atomic volatile i32 %63, i32* %60 monotonic, align 4
  %64 = load i64, i64* %18, align 8
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, -770
  %69 = or i32 %68, 512
  store atomic volatile i32 %69, i32* %66 monotonic, align 4
  %70 = load i64, i64* %21, align 8
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, -194
  %75 = or i32 %74, 64
  store atomic volatile i32 %75, i32* %72 monotonic, align 4
  %76 = load i64, i64* %21, align 8
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -770
  %81 = or i32 %80, 512
  store atomic volatile i32 %81, i32* %78 monotonic, align 4
  %82 = load i64, i64* %24, align 8
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, -194
  %87 = or i32 %86, 64
  store atomic volatile i32 %87, i32* %84 monotonic, align 4
  %88 = load i64, i64* %24, align 8
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, -770
  %93 = or i32 %92, 512
  store atomic volatile i32 %93, i32* %90 monotonic, align 4
  %94 = load i64, i64* %27, align 8
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, -194
  %99 = or i32 %98, 128
  store atomic volatile i32 %99, i32* %96 monotonic, align 4
  %100 = load i64, i64* %27, align 8
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, -770
  %105 = or i32 %104, 512
  store atomic volatile i32 %105, i32* %102 monotonic, align 4
  %106 = load i64, i64* %30, align 8
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -194
  %111 = or i32 %110, 64
  store atomic volatile i32 %111, i32* %108 monotonic, align 4
  %112 = load i64, i64* %30, align 8
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, -770
  %117 = or i32 %116, 512
  store atomic volatile i32 %117, i32* %114 monotonic, align 4
  %118 = load i64, i64* %33, align 8
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, -194
  %123 = or i32 %122, 64
  store atomic volatile i32 %123, i32* %120 monotonic, align 4
  %124 = load i64, i64* %33, align 8
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, -770
  %129 = or i32 %128, 512
  store atomic volatile i32 %129, i32* %126 monotonic, align 4
  %130 = load i64, i64* %36, align 8
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, -194
  %135 = or i32 %134, 64
  store atomic volatile i32 %135, i32* %132 monotonic, align 4
  %136 = load i64, i64* %36, align 8
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, -770
  %141 = or i32 %140, 512
  store atomic volatile i32 %141, i32* %138 monotonic, align 4
  %142 = load i64, i64* %39, align 8
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, -194
  %147 = or i32 %146, 64
  store atomic volatile i32 %147, i32* %144 monotonic, align 4
  %148 = load i64, i64* %39, align 8
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, -770
  %153 = or i32 %152, 512
  store atomic volatile i32 %153, i32* %150 monotonic, align 4
  %154 = load i64, i64* %42, align 8
  %155 = add i64 %154, 7
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, -194
  %159 = or i32 %158, 64
  store atomic volatile i32 %159, i32* %156 monotonic, align 4
  %160 = load i64, i64* %42, align 8
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = and i32 %163, -770
  %165 = or i32 %164, 512
  store atomic volatile i32 %165, i32* %162 monotonic, align 4
  %166 = load i64, i64* %45, align 8
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = and i32 %169, -194
  %171 = or i32 %170, 64
  store atomic volatile i32 %171, i32* %168 monotonic, align 4
  %172 = load i64, i64* %45, align 8
  %173 = add i64 %172, 7
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, -770
  %177 = or i32 %176, 512
  store atomic volatile i32 %177, i32* %174 monotonic, align 4
  %178 = icmp eq i64 %3, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %1
  %180 = inttoptr i64 %7 to i64*
  %181 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %182 = load i64*, i64** %181, align 8
  store i64 %7, i64* %6, align 8
  %183 = load i32, i32* %10, align 8
  %184 = add nsw i32 %183, -1
  store i32 %184, i32* %10, align 8
  %185 = load i64*, i64** %8, align 8
  %186 = icmp eq i64* %185, %9
  br i1 %186, label %189, label %187

187:                                              ; preds = %179
  store i64* %9, i64** %8, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #6
  %188 = load i64*, i64** %181, align 8
  br label %189

189:                                              ; preds = %187, %179
  %190 = phi i64* [ %188, %187 ], [ %180, %179 ]
  %191 = phi i64* [ %9, %187 ], [ %182, %179 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %190, i64* %191) #6
  br label %192

192:                                              ; preds = %1, %189
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4Heap11AllocateMapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Heap"*, i16 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp ugt i16 %1, 188
  %7 = or i16 %1, 1
  %8 = icmp eq i16 %7, 187
  %9 = or i1 %6, %8
  %10 = select i1 %9, i8 3, i8 4
  %11 = tail call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 40, i8 zeroext %10, i32 1, i32 0)
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %5
  %15 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 10
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %11, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %19 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = inttoptr i64 %16 to %"class.v8::internal::Factory"*
  %24 = tail call i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"* %23, i64 %11, i16 zeroext %1, i32 %2, i8 zeroext %3, i32 %4) #6
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

28:                                               ; preds = %14, %5
  %29 = phi i64 [ %11, %5 ], [ %24, %14 ]
  ret i64 %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"*, i32, i8 zeroext, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 123
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %11 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %16, !prof !4

15:                                               ; preds = %9
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %11) #6
  br label %16

16:                                               ; preds = %5, %15, %9
  %17 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #6
  %18 = icmp ult i32 %17, %1
  switch i8 %2, label %280 [
    i8 0, label %19
    i8 1, label %77
    i8 2, label %87
    i8 3, label %146
    i8 4, label %200
    i8 5, label %204
    i8 6, label %242
  ]

19:                                               ; preds = %16
  br i1 %18, label %20, label %24

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 30
  %22 = load %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"** %21, align 8
  %23 = tail call i64 @_ZN2v88internal19NewLargeObjectSpace11AllocateRawEi(%"class.v8::internal::NewLargeObjectSpace"* %22, i32 %1) #6
  br label %281

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 24
  %26 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %25, align 8
  %27 = icmp eq i32 %4, 0
  %28 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %26, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %26, i64 0, i32 0, i32 1, i32 1
  %30 = load i64, i64* %29, align 8
  br i1 %27, label %60, label %31

31:                                               ; preds = %24
  %32 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %30, i32 %4) #6
  %33 = add nsw i32 %32, %1
  %34 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %26, i64 0, i32 0, i32 1, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %30
  %37 = sext i32 %33 to i64
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %75, label %39

39:                                               ; preds = %31
  %40 = add i64 %30, 1
  %41 = add i64 %30, %37
  store i64 %41, i64* %29, align 8
  %42 = icmp sgt i32 %32, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::Heap"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  %50 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %49, i64 %40, i32 %32) #6
  br label %51

51:                                               ; preds = %43, %39
  %52 = phi i64 [ %50, %43 ], [ %40, %39 ]
  %53 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %28, i32 %3) #6
  br label %56

56:                                               ; preds = %55, %51
  %57 = and i64 %52, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %281, !prof !4

59:                                               ; preds = %56
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

60:                                               ; preds = %24
  %61 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %26, i64 0, i32 0, i32 1, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = sext i32 %1 to i64
  %64 = add i64 %30, %63
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %75, label %66

66:                                               ; preds = %60
  %67 = add i64 %30, 1
  store i64 %64, i64* %29, align 8
  %68 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %28, i32 %3) #6
  br label %71

71:                                               ; preds = %70, %66
  %72 = and i64 %67, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %281, !prof !4

74:                                               ; preds = %71
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

75:                                               ; preds = %60, %31
  %76 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %26, i32 %1, i32 %4, i32 %3) #6
  br label %281

77:                                               ; preds = %16
  br i1 %18, label %78, label %82

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 28
  %80 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %79, align 8
  %81 = tail call i64 @_ZN2v88internal19OldLargeObjectSpace11AllocateRawEi(%"class.v8::internal::OldLargeObjectSpace"* %80, i32 %1) #6
  br label %281

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 25
  %84 = bitcast %"class.v8::internal::OldSpace"** %83 to %"class.v8::internal::PagedSpace"**
  %85 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %84, align 8
  %86 = tail call i64 @_ZN2v88internal10PagedSpace11AllocateRawEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %85, i32 %1, i32 %4, i32 %3)
  br label %281

87:                                               ; preds = %16
  br i1 %18, label %88, label %92

88:                                               ; preds = %87
  %89 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 29
  %90 = load %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"** %89, align 8
  %91 = tail call i64 @_ZN2v88internal20CodeLargeObjectSpace11AllocateRawEi(%"class.v8::internal::CodeLargeObjectSpace"* %90, i32 %1) #6
  br label %281

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 26
  %94 = bitcast %"class.v8::internal::CodeSpace"** %93 to %"class.v8::internal::PagedSpace"**
  %95 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0, i32 1, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = sext i32 %1 to i64
  %99 = add i64 %97, %98
  %100 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0, i32 1, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = icmp ugt i64 %99, %101
  br i1 %102, label %103, label %118

103:                                              ; preds = %92
  %104 = bitcast %"class.v8::internal::PagedSpace"* %95 to i1 (%"class.v8::internal::PagedSpace"*, i32, i32)***
  %105 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)**, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %105, i64 22
  %107 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.v8::internal::PagedSpace"* %95, i32 %1, i32 1) #6
  br i1 %108, label %109, label %113

109:                                              ; preds = %103
  %110 = load i64, i64* %96, align 8
  %111 = load i64, i64* %100, align 8
  %112 = add i64 %110, %98
  br label %118

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 1
  br label %281

118:                                              ; preds = %109, %92
  %119 = phi i64 [ %112, %109 ], [ %99, %92 ]
  %120 = phi i64 [ %111, %109 ], [ %101, %92 ]
  %121 = phi i64 [ %110, %109 ], [ %97, %92 ]
  %122 = icmp ugt i64 %119, %120
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = sext i32 %125 to i64
  %127 = shl nsw i64 %126, 1
  br label %133

128:                                              ; preds = %118
  store i64 %119, i64* %96, align 8
  %129 = add i64 %121, 1
  %130 = and i64 %129, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %133, !prof !4

132:                                              ; preds = %128
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

133:                                              ; preds = %128, %123
  %134 = phi i64 [ %127, %123 ], [ %129, %128 ]
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %138, !prof !4

137:                                              ; preds = %133
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.364, i64 0, i64 0)) #7
  unreachable

138:                                              ; preds = %133
  %139 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !3
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %142, i32 1) #6
  br label %143

143:                                              ; preds = %141, %138
  %144 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %95, i64 0, i32 0
  %145 = add i64 %134, -1
  tail call void @_ZN2v88internal19SpaceWithLinearArea25InvokeAllocationObserversEmmmm(%"class.v8::internal::SpaceWithLinearArea"* %144, i64 %145, i64 %98, i64 %98, i64 %98) #6
  br label %281

146:                                              ; preds = %16
  %147 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 27
  %148 = bitcast %"class.v8::internal::MapSpace"** %147 to %"class.v8::internal::PagedSpace"**
  %149 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0, i32 1, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = sext i32 %1 to i64
  %153 = add i64 %151, %152
  %154 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0, i32 1, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = icmp ugt i64 %153, %155
  br i1 %156, label %157, label %172

157:                                              ; preds = %146
  %158 = bitcast %"class.v8::internal::PagedSpace"* %149 to i1 (%"class.v8::internal::PagedSpace"*, i32, i32)***
  %159 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)**, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %159, i64 22
  %161 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %160, align 8
  %162 = tail call zeroext i1 %161(%"class.v8::internal::PagedSpace"* %149, i32 %1, i32 1) #6
  br i1 %162, label %163, label %167

163:                                              ; preds = %157
  %164 = load i64, i64* %150, align 8
  %165 = load i64, i64* %154, align 8
  %166 = add i64 %164, %152
  br label %172

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 8
  %170 = sext i32 %169 to i64
  %171 = shl nsw i64 %170, 1
  br label %281

172:                                              ; preds = %163, %146
  %173 = phi i64 [ %166, %163 ], [ %153, %146 ]
  %174 = phi i64 [ %165, %163 ], [ %155, %146 ]
  %175 = phi i64 [ %164, %163 ], [ %151, %146 ]
  %176 = icmp ugt i64 %173, %174
  br i1 %176, label %177, label %182

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0, i32 0, i32 0, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = sext i32 %179 to i64
  %181 = shl nsw i64 %180, 1
  br label %187

182:                                              ; preds = %172
  store i64 %173, i64* %150, align 8
  %183 = add i64 %175, 1
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %187, !prof !4

186:                                              ; preds = %182
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

187:                                              ; preds = %182, %177
  %188 = phi i64 [ %181, %177 ], [ %183, %182 ]
  %189 = and i64 %188, 1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %192, !prof !4

191:                                              ; preds = %187
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.364, i64 0, i64 0)) #7
  unreachable

192:                                              ; preds = %187
  %193 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %196, i32 1) #6
  br label %197

197:                                              ; preds = %195, %192
  %198 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %149, i64 0, i32 0
  %199 = add i64 %188, -1
  tail call void @_ZN2v88internal19SpaceWithLinearArea25InvokeAllocationObserversEmmmm(%"class.v8::internal::SpaceWithLinearArea"* %198, i64 %199, i64 %152, i64 %152, i64 %152) #6
  br label %281

200:                                              ; preds = %16
  %201 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 31
  %202 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %201, align 8
  %203 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %202, i32 %1, i32 %4) #6
  br label %281

204:                                              ; preds = %16
  %205 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 34, i32 0, i32 0, i32 0
  %206 = load %"class.v8::internal::ConcurrentAllocator"*, %"class.v8::internal::ConcurrentAllocator"** %205, align 8
  %207 = icmp sgt i32 %1, 2048
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = tail call i64 @_ZN2v88internal19ConcurrentAllocator18AllocateOutsideLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %206, i32 %1, i32 %4, i32 %3) #6
  br label %281

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %206, i64 0, i32 2
  %212 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %206, i64 0, i32 2, i32 1, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %213, i32 %4) #6
  %215 = sext i32 %214 to i64
  %216 = sext i32 %1 to i64
  %217 = add i64 %213, %216
  %218 = add i64 %217, %215
  %219 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %206, i64 0, i32 2, i32 1, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = icmp ugt i64 %218, %220
  br i1 %221, label %240, label %222

222:                                              ; preds = %210
  store i64 %218, i64* %212, align 8
  %223 = icmp sgt i32 %214, 0
  br i1 %223, label %224, label %235

224:                                              ; preds = %222
  %225 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %211 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, -41416
  %228 = inttoptr i64 %227 to %"class.v8::internal::Isolate"*
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 0, i32 7, i32 0, i64 0
  %230 = add i64 %213, 1
  %231 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %229, i64 %230, i32 %214) #6
  %232 = and i64 %231, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %281, !prof !4

234:                                              ; preds = %224
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

235:                                              ; preds = %222
  %236 = add i64 %213, 1
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %281, !prof !4

239:                                              ; preds = %235
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

240:                                              ; preds = %210
  %241 = tail call i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %206, i32 %1, i32 %4, i32 %3) #6
  br label %281

242:                                              ; preds = %16
  %243 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %244 = load %"class.v8::internal::ConcurrentAllocator"*, %"class.v8::internal::ConcurrentAllocator"** %243, align 8
  %245 = icmp sgt i32 %1, 2048
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  %247 = tail call i64 @_ZN2v88internal19ConcurrentAllocator18AllocateOutsideLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %244, i32 %1, i32 %4, i32 %3) #6
  br label %281

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %244, i64 0, i32 2
  %250 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %244, i64 0, i32 2, i32 1, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %251, i32 %4) #6
  %253 = sext i32 %252 to i64
  %254 = sext i32 %1 to i64
  %255 = add i64 %251, %254
  %256 = add i64 %255, %253
  %257 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %244, i64 0, i32 2, i32 1, i32 2
  %258 = load i64, i64* %257, align 8
  %259 = icmp ugt i64 %256, %258
  br i1 %259, label %278, label %260

260:                                              ; preds = %248
  store i64 %256, i64* %250, align 8
  %261 = icmp sgt i32 %252, 0
  br i1 %261, label %262, label %273

262:                                              ; preds = %260
  %263 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %249 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = add i64 %264, -41416
  %266 = inttoptr i64 %265 to %"class.v8::internal::Isolate"*
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %266, i64 0, i32 0, i32 7, i32 0, i64 0
  %268 = add i64 %251, 1
  %269 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %267, i64 %268, i32 %252) #6
  %270 = and i64 %269, 1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %281, !prof !4

272:                                              ; preds = %262
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

273:                                              ; preds = %260
  %274 = add i64 %251, 1
  %275 = and i64 %274, 1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %281, !prof !4

277:                                              ; preds = %273
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

278:                                              ; preds = %248
  %279 = tail call i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %244, i32 %1, i32 %4, i32 %3) #6
  br label %281

280:                                              ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.363, i64 0, i64 0)) #7
  unreachable

281:                                              ; preds = %246, %262, %273, %278, %208, %224, %235, %240, %197, %167, %143, %113, %75, %71, %56, %82, %78, %200, %88, %20
  %282 = phi i64 [ %203, %200 ], [ %91, %88 ], [ %81, %78 ], [ %86, %82 ], [ %23, %20 ], [ %76, %75 ], [ %67, %71 ], [ %52, %56 ], [ %134, %143 ], [ %117, %113 ], [ %188, %197 ], [ %171, %167 ], [ %209, %208 ], [ %241, %240 ], [ %231, %224 ], [ %236, %235 ], [ %247, %246 ], [ %279, %278 ], [ %269, %262 ], [ %274, %273 ]
  %283 = and i64 %282, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %331, label %285

285:                                              ; preds = %281
  %286 = icmp eq i8 %2, 2
  br i1 %286, label %287, label %294

287:                                              ; preds = %285
  tail call void @_ZN2v88internal4Heap31UnprotectAndRegisterMemoryChunkENS0_10HeapObjectE(%"class.v8::internal::Heap"* %0, i64 %282) #6
  %288 = add i64 %282, -1
  tail call void @_ZN2v88internal4Heap13ZapCodeObjectEmi(%"class.v8::internal::Heap"* %0, i64 %288, i32 %1) #6
  br i1 %18, label %294, label %289

289:                                              ; preds = %287
  %290 = and i64 %282, -262144
  %291 = inttoptr i64 %290 to %"class.v8::internal::MemoryChunk"*
  %292 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %291, i64 0, i32 16
  %293 = load %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::CodeObjectRegistry"** %292, align 256
  tail call void @_ZN2v88internal18CodeObjectRegistry32RegisterNewlyAllocatedCodeObjectEm(%"class.v8::internal::CodeObjectRegistry"* %293, i64 %288) #6
  br label %294

294:                                              ; preds = %287, %289, %285
  %295 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 0
  %296 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %295, align 8
  %297 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 1
  %298 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %297, align 8
  %299 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %296, %298
  br i1 %299, label %302, label %300

300:                                              ; preds = %294
  %301 = add i64 %282, -1
  br label %305

302:                                              ; preds = %305, %294
  %303 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %317, label %313

305:                                              ; preds = %305, %300
  %306 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %296, %300 ], [ %311, %305 ]
  %307 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %306, align 8
  %308 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %307 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %309 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %308, align 8
  %310 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %309, align 8
  tail call void %310(%"class.v8::internal::HeapObjectAllocationTracker"* %307, i64 %301, i32 %1) #6
  %311 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %306, i64 1
  %312 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %311, %298
  br i1 %312, label %302, label %305

313:                                              ; preds = %302
  %314 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %315 = load i32, i32* %314, align 8
  %316 = add i32 %315, 1
  store i32 %316, i32* %314, align 8
  br label %331

317:                                              ; preds = %302
  %318 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %331

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %322 = load i32, i32* %321, align 8
  %323 = add i32 %322, 1
  store i32 %323, i32* %321, align 8
  %324 = urem i32 %323, %318
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %331

326:                                              ; preds = %320
  %327 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %328 = add i64 %327, -41416
  %329 = inttoptr i64 %328 to %"class.v8::internal::Isolate"*
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %329, %struct._IO_FILE* %330, i32 0) #6
  br label %331

331:                                              ; preds = %326, %320, %317, %313, %281
  ret i64 %282
}

declare i64 @_ZN2v88internal7Factory13InitializeMapENS0_3MapENS0_12InstanceTypeEiNS0_12ElementsKindEi(%"class.v8::internal::Factory"*, i64, i16 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4Heap18AllocatePartialMapENS0_12InstanceTypeEi(%"class.v8::internal::Heap"*, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 123
  %5 = load i8, i8* %4, align 4, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 37
  %9 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %14, !prof !4

13:                                               ; preds = %7
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %9) #6
  br label %14

14:                                               ; preds = %13, %7, %3
  %15 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 4) #6
  %16 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 31
  %17 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %16, align 8
  %18 = tail call i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"* %17, i32 40, i32 0) #6
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %121, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 0
  %23 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 138, i32 0, i32 1
  %25 = load %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"*** %24, align 8
  %26 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = add i64 %18, -1
  br label %32

29:                                               ; preds = %32, %21
  %30 = load i8, i8* @_ZN2v88internal23FLAG_fuzzer_gc_analysisE, align 1, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %44, label %40

32:                                               ; preds = %32, %27
  %33 = phi %"class.v8::internal::HeapObjectAllocationTracker"** [ %23, %27 ], [ %38, %32 ]
  %34 = load %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %33, align 8
  %35 = bitcast %"class.v8::internal::HeapObjectAllocationTracker"* %34 to void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)***
  %36 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)**, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*** %35, align 8
  %37 = load void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)*, void (%"class.v8::internal::HeapObjectAllocationTracker"*, i64, i32)** %36, align 8
  tail call void %37(%"class.v8::internal::HeapObjectAllocationTracker"* %34, i64 %28, i32 40) #6
  %38 = getelementptr inbounds %"class.v8::internal::HeapObjectAllocationTracker"*, %"class.v8::internal::HeapObjectAllocationTracker"** %33, i64 1
  %39 = icmp eq %"class.v8::internal::HeapObjectAllocationTracker"** %38, %25
  br i1 %39, label %29, label %32

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, 1
  store i32 %43, i32* %41, align 8
  br label %58

44:                                               ; preds = %29
  %45 = load i32, i32* @_ZN2v88internal36FLAG_trace_allocation_stack_intervalE, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %0, i64 0, i32 44
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  %51 = urem i32 %50, %45
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %55 = add i64 %54, -41416
  %56 = inttoptr i64 %55 to %"class.v8::internal::Isolate"*
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"* %56, %struct._IO_FILE* %57, i32 0) #6
  br label %58

58:                                               ; preds = %53, %47, %44, %40
  %59 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %60 = add i64 %59, -41416
  %61 = inttoptr i64 %60 to %"class.v8::internal::Isolate"*
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 7, i32 0, i64 10
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %18, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %63 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  %67 = add i64 %18, 7
  %68 = inttoptr i64 %67 to i16*
  store atomic volatile i16 %1, i16* %68 monotonic, align 2
  %69 = and i32 %2, 3
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.366, i64 0, i64 0)) #7
  unreachable

72:                                               ; preds = %58
  %73 = ashr i32 %2, 2
  %74 = icmp ult i32 %73, 256
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %72
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.367, i64 0, i64 0)) #7
  unreachable

76:                                               ; preds = %72
  %77 = add i64 %18, 3
  %78 = inttoptr i64 %77 to i8*
  %79 = trunc i32 %73 to i8
  store atomic volatile i8 %79, i8* %78 monotonic, align 1
  %80 = tail call i32 @_ZN2v88internal3Map12GetVisitorIdES1_(i64 %18) #6
  %81 = icmp ult i32 %80, 256
  br i1 %81, label %83, label %82, !prof !2

82:                                               ; preds = %76
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.368, i64 0, i64 0)) #7
  unreachable

83:                                               ; preds = %76
  %84 = add i64 %18, 6
  %85 = inttoptr i64 %84 to i8*
  %86 = trunc i32 %80 to i8
  store atomic volatile i8 %86, i8* %85 monotonic, align 1
  %87 = add i64 %18, 4
  %88 = inttoptr i64 %87 to i8*
  store atomic volatile i8 0, i8* %88 monotonic, align 1
  %89 = add i64 %18, 31
  %90 = inttoptr i64 %89 to i32*
  store atomic volatile i32 0, i32* %90 monotonic, align 4
  %91 = load atomic i16, i16* %68 monotonic, align 2
  %92 = icmp ugt i16 %91, 188
  br i1 %92, label %96, label %93

93:                                               ; preds = %83
  %94 = add i64 %18, 5
  %95 = inttoptr i64 %94 to i8*
  store atomic volatile i8 0, i8* %95 monotonic, align 1
  br label %111

96:                                               ; preds = %83
  %97 = load atomic i8, i8* %78 monotonic, align 1
  %98 = zext i8 %97 to i32
  %99 = load atomic i8, i8* %88 monotonic, align 1
  %100 = zext i8 %99 to i32
  %101 = load atomic i8, i8* %88 monotonic, align 1
  %102 = zext i8 %101 to i32
  %103 = sub nsw i32 %98, %100
  %104 = add nsw i32 %103, %102
  %105 = icmp ult i32 %104, 256
  br i1 %105, label %107, label %106, !prof !2

106:                                              ; preds = %96
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.371, i64 0, i64 0)) #7
  unreachable

107:                                              ; preds = %96
  %108 = add i64 %18, 5
  %109 = inttoptr i64 %108 to i8*
  %110 = trunc i32 %104 to i8
  store atomic volatile i8 %110, i8* %109 monotonic, align 1
  br label %111

111:                                              ; preds = %93, %107
  %112 = add i64 %18, 9
  %113 = inttoptr i64 %112 to i8*
  store atomic volatile i8 0, i8* %113 monotonic, align 1
  %114 = add i64 %18, 10
  %115 = inttoptr i64 %114 to i8*
  store i8 0, i8* %115, align 1
  %116 = add i64 %18, 11
  %117 = inttoptr i64 %116 to i32*
  store atomic volatile i32 4195327, i32* %117 monotonic, align 4
  %118 = load i8, i8* %115, align 1
  %119 = and i8 %118, 3
  %120 = or i8 %119, 12
  store i8 %120, i8* %115, align 1
  br label %121

121:                                              ; preds = %111, %14
  ret i64 %18
}

declare i32 @_ZN2v88internal3Map12GetVisitorIdES1_(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Heap18FinalizePartialMapENS0_3MapE(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Map", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 119
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %1, 27
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %9 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  %13 = load i64, i64* %4, align 8
  %14 = add i64 %13, 27
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = and i64 %13, -262144
  %19 = or i64 %18, 8
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = or i64 %18, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %13, i64 %14, i64 %9) #6
  br label %28

28:                                               ; preds = %24, %17, %2
  %29 = and i64 %9, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %28
  %36 = and i64 %13, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %13, i64 %14, i64 %9) #6
  br label %43

43:                                               ; preds = %42, %35, %28
  %44 = add i64 %13, 35
  %45 = inttoptr i64 %44 to i32*
  store atomic volatile i32 0, i32* %45 monotonic, align 4
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 30
  %47 = load i64, i64* %46, align 8
  call void @_ZN2v88internal3Map22SetInstanceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayEi(%"class.v8::internal::Map"* nonnull %3, %"class.v8::internal::Isolate"* %7, i64 %47, i32 0) #6
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 6
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* %4, align 8
  %51 = add i64 %50, 15
  %52 = inttoptr i64 %51 to i32*
  %53 = trunc i64 %49 to i32
  store atomic volatile i32 %53, i32* %52 monotonic, align 4
  %54 = load i64, i64* %4, align 8
  %55 = add i64 %54, 15
  %56 = and i64 %49, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %43
  %59 = and i64 %54, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 262144
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %58
  %66 = or i64 %59, 16
  %67 = inttoptr i64 %66 to %"class.v8::internal::Heap"**
  %68 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %67, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %68, i64 %54, i64 %55, i64 %49) #6
  %69 = load i64, i64* %4, align 8
  %70 = add i64 %69, 15
  br label %71

71:                                               ; preds = %65, %58, %43
  %72 = phi i64 [ %70, %65 ], [ %55, %58 ], [ %55, %43 ]
  %73 = phi i64 [ %69, %65 ], [ %54, %58 ], [ %54, %43 ]
  %74 = and i64 %49, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %71
  %81 = and i64 %73, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %73, i64 %72, i64 %49) #6
  %88 = load i64, i64* %4, align 8
  br label %89

89:                                               ; preds = %71, %80, %87
  %90 = phi i64 [ %73, %71 ], [ %73, %80 ], [ %88, %87 ]
  %91 = load i64, i64* %48, align 8
  %92 = add i64 %90, 19
  %93 = inttoptr i64 %92 to i32*
  %94 = trunc i64 %91 to i32
  store atomic volatile i32 %94, i32* %93 monotonic, align 4
  %95 = load i64, i64* %4, align 8
  %96 = add i64 %95, 19
  %97 = and i64 %91, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %129, label %99

99:                                               ; preds = %89
  %100 = and i64 %95, -262144
  %101 = or i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 262144
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %99
  %107 = or i64 %100, 16
  %108 = inttoptr i64 %107 to %"class.v8::internal::Heap"**
  %109 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %108, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %109, i64 %95, i64 %96, i64 %91) #6
  %110 = load i64, i64* %4, align 8
  %111 = add i64 %110, 19
  br label %112

112:                                              ; preds = %106, %99
  %113 = phi i64 [ %111, %106 ], [ %96, %99 ]
  %114 = phi i64 [ %110, %106 ], [ %95, %99 ]
  %115 = and i64 %91, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 24
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %112
  %122 = and i64 %114, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 24
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %114, i64 %113, i64 %91) #6
  br label %129

129:                                              ; preds = %89, %112, %121, %128
  ret void
}

declare void @_ZN2v88internal3Map22SetInstanceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayEi(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4Heap8AllocateENS0_6HandleINS0_3MapEEENS0_14AllocationTypeE(%"class.v8::internal::Heap"*, i64*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i8*
  %7 = load atomic i8, i8* %6 monotonic, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 2
  %10 = tail call i64 @_ZN2v88internal4Heap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::Heap"* %0, i32 %9, i8 zeroext %2, i32 1, i32 0)
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %3
  %14 = icmp eq i8 %2, 0
  %15 = load i64, i64* %1, align 8
  %16 = add i64 %10, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %15 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  %21 = or i1 %14, %20
  br i1 %21, label %33, label %22

22:                                               ; preds = %13
  %23 = and i64 %10, -262144
  %24 = or i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = or i64 %23, 16
  %31 = inttoptr i64 %30 to %"class.v8::internal::Heap"**
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %32, i64 %10, i64 0, i64 %15) #6
  br label %33

33:                                               ; preds = %29, %22, %13, %3
  ret i64 %10
}

declare void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"*, i64, i64, i32, i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewStructENS0_12InstanceTypeENS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i16 zeroext, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap18InitializeHashSeedEv(%"class.v8::internal::Heap"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"*, i64*, i8*, i64*, i8*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory10NewOddballENS0_6HandleINS0_3MapEEEPKcNS2_INS0_6ObjectEEES6_h(%"class.v8::internal::Factory"*, i64*, i8*, i64*, i8*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory22NewSelfReferenceMarkerEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory27NewBasicBlockCountersMarkerEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory16NewPrivateSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory9NewSymbolENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory19NewManyClosuresCellENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #4

declare i64* @_ZN2v88internal14OrderedHashMap13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal14OrderedHashSet13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal21OrderedNameDictionary13AllocateEmptyEPNS0_7IsolateENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory39CreateCanonicalEmptySwissNameDictionaryEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFeedbackMetadataEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i32, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal9ScopeInfo23CreateGlobalThisBindingEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9ScopeInfo22CreateForEmptyFunctionEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9ScopeInfo22CreateForNativeContextEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE9NewScriptENS0_6HandleINS0_19PrimitiveHeapObjectEEE(%"class.v8::internal::FactoryBase"*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory12NewProtectorEv(%"class.v8::internal::Factory"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal8Builtins34GenerateOffHeapTrampolineRelocInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory20NewCodeDataContainerEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i32, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal21DescriptorLookupCache5ClearEv(%"class.v8::internal::DescriptorLookupCache"*) local_unnamed_addr #4

declare void @_ZN2v88internal16CompilationCache5ClearEv(%"class.v8::internal::CompilationCache"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors25MakeArgumentsIteratorInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors19MakeArrayLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors27MakeBoundFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors25MakeBoundFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors18MakeErrorStackInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors25MakeFunctionArgumentsInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors22MakeFunctionCallerInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors20MakeFunctionNameInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors22MakeFunctionLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors25MakeFunctionPrototypeInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal9Accessors20MakeStringLengthInfoEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext) local_unnamed_addr #4

declare i64 @_ZN2v88internal19NewLargeObjectSpace11AllocateRawEi(%"class.v8::internal::NewLargeObjectSpace"*, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal19OldLargeObjectSpace11AllocateRawEi(%"class.v8::internal::OldLargeObjectSpace"*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10PagedSpace11AllocateRawEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  br i1 %5, label %38, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %7, i32 %2) #6
  %10 = sext i32 %9 to i64
  %11 = add i64 %7, %10
  %12 = sext i32 %1 to i64
  %13 = add i64 %11, %12
  %14 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 1
  br label %54

22:                                               ; preds = %8
  store i64 %13, i64* %6, align 8
  %23 = icmp sgt i32 %9, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::Heap"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -41416
  %29 = inttoptr i64 %28 to %"class.v8::internal::Isolate"*
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 0
  %31 = add i64 %7, 1
  %32 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %30, i64 %31, i32 %9) #6
  br label %33

33:                                               ; preds = %24, %22
  %34 = add i64 %11, 1
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %54, !prof !4

37:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

38:                                               ; preds = %4
  %39 = sext i32 %1 to i64
  %40 = add i64 %7, %39
  %41 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %40, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = shl nsw i64 %47, 1
  br label %54

49:                                               ; preds = %38
  store i64 %40, i64* %6, align 8
  %50 = add i64 %7, 1
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %49
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.365, i64 0, i64 0)) #7
  unreachable

54:                                               ; preds = %49, %44, %33, %17
  %55 = phi i64 [ %21, %17 ], [ %34, %33 ], [ %48, %44 ], [ %50, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = tail call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i32 %1, i32 %2, i32 %3) #6
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i64 [ %59, %58 ], [ %55, %54 ]
  ret i64 %61
}

declare i64 @_ZN2v88internal20CodeLargeObjectSpace11AllocateRawEi(%"class.v8::internal::CodeLargeObjectSpace"*, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal13ReadOnlySpace11AllocateRawEiNS0_19AllocationAlignmentE(%"class.v8::internal::ReadOnlySpace"*, i32, i32) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap31UnprotectAndRegisterMemoryChunkENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal4Heap13ZapCodeObjectEmi(%"class.v8::internal::Heap"*, i64, i32) local_unnamed_addr #4

declare void @_ZN2v88internal18CodeObjectRegistry32RegisterNewlyAllocatedCodeObjectEm(%"class.v8::internal::CodeObjectRegistry"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"*, i32, i32, i32) local_unnamed_addr #4

declare i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64*, i64, i32) local_unnamed_addr #4

declare void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"*, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN2v88internal19SpaceWithLinearArea25InvokeAllocationObserversEmmmm(%"class.v8::internal::SpaceWithLinearArea"*, i64, i64, i64, i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal19ConcurrentAllocator18AllocateOutsideLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"*, i32, i32, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"*, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN2v88internal7Isolate10PrintStackEP8_IO_FILENS1_14PrintStackModeE(%"class.v8::internal::Isolate"*, %struct._IO_FILE*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #4

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1195"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal7Factory31NewSharedFunctionInfoForBuiltinENS0_11MaybeHandleINS0_6StringEEEiNS0_12FunctionKindE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE4EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
