; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/circular_raw_ostream.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/circular_raw_ostream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.llvm::circular_raw_ostream" = type { %"class.llvm::raw_ostream.base", %"class.llvm::raw_ostream"*, i8, i64, i8*, i8*, i8, i8* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>

$_ZN4llvm20circular_raw_ostream11flushBufferEv = comdat any

$_ZN4llvm20circular_raw_ostreamD2Ev = comdat any

$_ZN4llvm20circular_raw_ostreamD0Ev = comdat any

$_ZN4llvm11raw_ostream11changeColorENS0_6ColorsEbb = comdat any

$_ZN4llvm11raw_ostream10resetColorEv = comdat any

$_ZN4llvm11raw_ostream12reverseColorEv = comdat any

$_ZNK4llvm11raw_ostream12is_displayedEv = comdat any

$_ZNK4llvm11raw_ostream10has_colorsEv = comdat any

$_ZNK4llvm20circular_raw_ostream11current_posEv = comdat any

@_ZTVN4llvm20circular_raw_ostreamE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.llvm::circular_raw_ostream"*)* @_ZN4llvm20circular_raw_ostreamD2Ev to i8*), i8* bitcast (void (%"class.llvm::circular_raw_ostream"*)* @_ZN4llvm20circular_raw_ostreamD0Ev to i8*), i8* bitcast (%"class.llvm::raw_ostream"* (%"class.llvm::raw_ostream"*, i32, i1, i1)* @_ZN4llvm11raw_ostream11changeColorENS0_6ColorsEbb to i8*), i8* bitcast (%"class.llvm::raw_ostream"* (%"class.llvm::raw_ostream"*)* @_ZN4llvm11raw_ostream10resetColorEv to i8*), i8* bitcast (%"class.llvm::raw_ostream"* (%"class.llvm::raw_ostream"*)* @_ZN4llvm11raw_ostream12reverseColorEv to i8*), i8* bitcast (i1 (%"class.llvm::raw_ostream"*)* @_ZNK4llvm11raw_ostream12is_displayedEv to i8*), i8* bitcast (i1 (%"class.llvm::raw_ostream"*)* @_ZNK4llvm11raw_ostream10has_colorsEv to i8*), i8* bitcast (void (%"class.llvm::circular_raw_ostream"*, i8*, i64)* @_ZN4llvm20circular_raw_ostream10write_implEPKcm to i8*), i8* bitcast (void (%"class.llvm::raw_ostream"*)* @_ZN4llvm11raw_ostream6handleEv to i8*), i8* bitcast (i64 (%"class.llvm::circular_raw_ostream"*)* @_ZNK4llvm20circular_raw_ostream11current_posEv to i8*), i8* bitcast (i64 (%"class.llvm::raw_ostream"*)* @_ZNK4llvm11raw_ostream21preferred_buffer_sizeEv to i8*)] }, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm20circular_raw_ostream10write_implEPKcm(%"class.llvm::circular_raw_ostream"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %49, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 5
  %11 = bitcast i8** %10 to i64*
  %12 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 4
  %13 = bitcast i8** %12 to i64*
  %14 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 6
  %15 = load i64, i64* %11, align 8
  %16 = load i64, i64* %13, align 8
  %17 = inttoptr i64 %15 to i8*
  br label %22

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %20 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %19, align 8
  %21 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %20, i8* %1, i64 %2) #6
  br label %49

22:                                               ; preds = %9, %45
  %23 = phi i8* [ %17, %9 ], [ %46, %45 ]
  %24 = phi i64 [ %16, %9 ], [ %43, %45 ]
  %25 = phi i64 [ %15, %9 ], [ %47, %45 ]
  %26 = phi i64 [ %5, %9 ], [ %39, %45 ]
  %27 = phi i64 [ %2, %9 ], [ %35, %45 ]
  %28 = trunc i64 %27 to i32
  %29 = sub i64 %24, %25
  %30 = add i64 %29, %26
  %31 = trunc i64 %30 to i32
  %32 = icmp ult i32 %31, %28
  %33 = select i1 %32, i64 %30, i64 %27
  %34 = and i64 %33, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %1, i64 %34, i1 false)
  %35 = sub i64 %27, %34
  %36 = load i8*, i8** %10, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %34
  store i8* %37, i8** %10, align 8
  %38 = load i8*, i8** %12, align 8
  %39 = load i64, i64* %4, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = icmp eq i8* %37, %40
  %42 = ptrtoint i8* %37 to i64
  %43 = ptrtoint i8* %38 to i64
  br i1 %41, label %44, label %45

44:                                               ; preds = %22
  store i8* %38, i8** %10, align 8
  store i8 1, i8* %14, align 8
  br label %45

45:                                               ; preds = %44, %22
  %46 = phi i8* [ %38, %44 ], [ %37, %22 ]
  %47 = phi i64 [ %43, %44 ], [ %42, %22 ]
  %48 = icmp eq i64 %35, 0
  br i1 %48, label %49, label %22

49:                                               ; preds = %45, %7, %18
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm20circular_raw_ostream21flushBufferWithBannerEv(%"class.llvm::circular_raw_ostream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %7 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 7
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i64 @strlen(i8* %9) #7
  %11 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %7, i8* %9, i64 %10) #6
  tail call void @_ZN4llvm20circular_raw_ostream11flushBufferEv(%"class.llvm::circular_raw_ostream"* %0) #8
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20circular_raw_ostream11flushBufferEv(%"class.llvm::circular_raw_ostream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %7 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 5
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = ptrtoint i8* %14 to i64
  %16 = ptrtoint i8* %9 to i64
  %17 = sub i64 %15, %16
  %18 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %7, i8* %9, i64 %17) #6
  br label %19

19:                                               ; preds = %1, %5
  %20 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %21 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 5
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = ptrtoint i8* %23 to i64
  %28 = sub i64 %26, %27
  %29 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %21, i8* %23, i64 %28) #6
  %30 = bitcast i8** %22 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %25, align 8
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20circular_raw_ostreamD2Ev(%"class.llvm::circular_raw_ostream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm20circular_raw_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.llvm::circular_raw_ostream"* %0 to %"class.llvm::raw_ostream"*
  %4 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* %3) #6
  br label %10

10:                                               ; preds = %1, %9
  tail call void @_ZN4llvm20circular_raw_ostream21flushBufferWithBannerEv(%"class.llvm::circular_raw_ostream"* %0) #8
  %11 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %12 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %11, align 8
  %13 = icmp eq %"class.llvm::raw_ostream"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.llvm::raw_ostream"* %12 to void (%"class.llvm::raw_ostream"*)***
  %20 = load void (%"class.llvm::raw_ostream"*)**, void (%"class.llvm::raw_ostream"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.llvm::raw_ostream"*)*, void (%"class.llvm::raw_ostream"*)** %20, i64 1
  %22 = load void (%"class.llvm::raw_ostream"*)*, void (%"class.llvm::raw_ostream"*)** %21, align 8
  tail call void %22(%"class.llvm::raw_ostream"* nonnull %12) #6
  br label %23

23:                                               ; preds = %10, %14, %18
  %24 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 4
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @_ZdaPv(i8* nonnull %25) #9
  br label %28

28:                                               ; preds = %27, %23
  tail call void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"* %3) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20circular_raw_ostreamD0Ev(%"class.llvm::circular_raw_ostream"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4llvm20circular_raw_ostreamD2Ev(%"class.llvm::circular_raw_ostream"* %0) #6
  %2 = bitcast %"class.llvm::circular_raw_ostream"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream11changeColorENS0_6ColorsEbb(%"class.llvm::raw_ostream"*, i32, i1 zeroext, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.llvm::raw_ostream"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream10resetColorEv(%"class.llvm::raw_ostream"*) unnamed_addr #0 comdat align 2 {
  ret %"class.llvm::raw_ostream"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream12reverseColorEv(%"class.llvm::raw_ostream"*) unnamed_addr #0 comdat align 2 {
  ret %"class.llvm::raw_ostream"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm11raw_ostream12is_displayedEv(%"class.llvm::raw_ostream"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4llvm11raw_ostream10has_colorsEv(%"class.llvm::raw_ostream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.llvm::raw_ostream"* %0 to i1 (%"class.llvm::raw_ostream"*)***
  %3 = load i1 (%"class.llvm::raw_ostream"*)**, i1 (%"class.llvm::raw_ostream"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.llvm::raw_ostream"*)*, i1 (%"class.llvm::raw_ostream"*)** %3, i64 5
  %5 = load i1 (%"class.llvm::raw_ostream"*)*, i1 (%"class.llvm::raw_ostream"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.llvm::raw_ostream"* %0) #6
  ret i1 %6
}

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream6handleEv(%"class.llvm::raw_ostream"*) unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK4llvm20circular_raw_ostream11current_posEv(%"class.llvm::circular_raw_ostream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::circular_raw_ostream", %"class.llvm::circular_raw_ostream"* %0, i64 0, i32 1
  %3 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %2, align 8
  %4 = bitcast %"class.llvm::raw_ostream"* %3 to i64 (%"class.llvm::raw_ostream"*)***
  %5 = load i64 (%"class.llvm::raw_ostream"*)**, i64 (%"class.llvm::raw_ostream"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.llvm::raw_ostream"*)*, i64 (%"class.llvm::raw_ostream"*)** %5, i64 9
  %7 = load i64 (%"class.llvm::raw_ostream"*)*, i64 (%"class.llvm::raw_ostream"*)** %6, align 8
  %8 = tail call i64 %7(%"class.llvm::raw_ostream"* %3) #6
  %9 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %3, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %3, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = load %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"** %2, align 8
  %16 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %15, i64 0, i32 3
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %15, i64 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %11, %8
  %23 = sub i64 %22, %14
  %24 = sub i64 %23, %18
  %25 = add i64 %24, %21
  ret i64 %25
}

; Function Attrs: optsize
declare i64 @_ZNK4llvm11raw_ostream21preferred_buffer_sizeEv(%"class.llvm::raw_ostream"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize }
attributes #7 = { nounwind optsize readonly }
attributes #8 = { optsize }
attributes #9 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
