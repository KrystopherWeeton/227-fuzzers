; ModuleID = '../../third_party/swiftshader/third_party/astc-encoder/Source/astc_quantization.cpp'
source_filename = "../../third_party/swiftshader/third_party/astc-encoder/Source/astc_quantization.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@color_unquantization_tables = hidden local_unnamed_addr constant <{ <{ i8, i8, [254 x i8] }>, <{ i8, i8, i8, [253 x i8] }>, <{ i8, i8, i8, i8, [252 x i8] }>, <{ i8, i8, i8, i8, i8, [251 x i8] }>, <{ i8, i8, i8, i8, i8, i8, [250 x i8] }>, <{ [8 x i8], [248 x i8] }>, <{ [10 x i8], [246 x i8] }>, <{ [12 x i8], [244 x i8] }>, <{ [16 x i8], [240 x i8] }>, <{ [20 x i8], [236 x i8] }>, <{ [24 x i8], [232 x i8] }>, <{ [32 x i8], [224 x i8] }>, <{ [40 x i8], [216 x i8] }>, <{ [48 x i8], [208 x i8] }>, <{ [64 x i8], [192 x i8] }>, <{ [80 x i8], [176 x i8] }>, <{ [96 x i8], [160 x i8] }>, <{ [128 x i8], [128 x i8] }>, <{ [160 x i8], [96 x i8] }>, <{ [192 x i8], [64 x i8] }>, [256 x i8] }> <{ <{ i8, i8, [254 x i8] }> <{ i8 0, i8 -1, [254 x i8] zeroinitializer }>, <{ i8, i8, i8, [253 x i8] }> <{ i8 0, i8 -128, i8 -1, [253 x i8] zeroinitializer }>, <{ i8, i8, i8, i8, [252 x i8] }> <{ i8 0, i8 85, i8 -86, i8 -1, [252 x i8] zeroinitializer }>, <{ i8, i8, i8, i8, i8, [251 x i8] }> <{ i8 0, i8 64, i8 -128, i8 -64, i8 -1, [251 x i8] zeroinitializer }>, <{ i8, i8, i8, i8, i8, i8, [250 x i8] }> <{ i8 0, i8 -1, i8 51, i8 -52, i8 102, i8 -103, [250 x i8] zeroinitializer }>, <{ [8 x i8], [248 x i8] }> <{ [8 x i8] c"\00$Im\92\B6\DB\FF", [248 x i8] zeroinitializer }>, <{ [10 x i8], [246 x i8] }> <{ [10 x i8] c"\00\FF\1C\E38\C7T\ABq\8E", [246 x i8] zeroinitializer }>, <{ [12 x i8], [244 x i8] }> <{ [12 x i8] c"\00\FFE\BA\17\E8\5C\A3.\D1t\8B", [244 x i8] zeroinitializer }>, <{ [16 x i8], [240 x i8] }> <{ [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", [240 x i8] zeroinitializer }>, <{ [20 x i8], [236 x i8] }> <{ [20 x i8] c"\00\FFC\BC\0D\F2P\AF\1B\E4^\A1(\D7k\946\C9y\86", [236 x i8] zeroinitializer }>, <{ [24 x i8], [232 x i8] }> <{ [24 x i8] c"\00\FF!\DEB\BDc\9C\0B\F4,\D3M\B2n\91\16\E97\C8X\A7y\86", [232 x i8] zeroinitializer }>, <{ [32 x i8], [224 x i8] }> <{ [32 x i8] c"\00\08\10\18!)19BJRZcks{\84\8C\94\9C\A5\AD\B5\BD\C6\CE\D6\DE\E7\EF\F7\FF", [224 x i8] zeroinitializer }>, <{ [40 x i8], [216 x i8] }> <{ [40 x i8] c"\00\FF \DFA\BEa\9E\06\F9'\D8G\B8h\97\0D\F2-\D2N\B1n\91\13\EC4\CBT\ABu\8A\1A\E5:\C5[\A4{\84", [216 x i8] zeroinitializer }>, <{ [48 x i8], [208 x i8] }> <{ [48 x i8] c"\00\FF\10\EF \DF0\CFA\BEQ\AEa\9Eq\8E\05\FA\15\EA&\D96\C9F\B9V\A9g\98w\88\0B\F4\1B\E4+\D4;\C4L\B3\5C\A3l\93|\83", [208 x i8] zeroinitializer }>, <{ [64 x i8], [192 x i8] }> <{ [64 x i8] c"\00\04\08\0C\10\14\18\1C $(,048<AEIMQUY]aeimquy}\82\86\8A\8E\92\96\9A\9E\A2\A6\AA\AE\B2\B6\BA\BE\C3\C7\CB\CF\D3\D7\DB\DF\E3\E7\EB\EF\F3\F7\FB\FF", [192 x i8] zeroinitializer }>, <{ [80 x i8], [176 x i8] }> <{ [80 x i8] c"\00\FF\10\EF \DF0\CF@\BFP\AF`\9Fp\8F\03\FC\13\EC#\DC3\CCC\BCS\ACd\9Bt\8B\06\F9\16\E9&\D96\C9G\B8W\A8g\98w\88\09\F6\19\E6*\D5:\C5J\B5Z\A5j\95z\85\0D\F2\1D\E2-\D2=\C2M\B2]\A2m\92}\82", [176 x i8] zeroinitializer }>, <{ [96 x i8], [160 x i8] }> <{ [96 x i8] c"\00\FF\08\F7\10\EF\18\E7 \DF(\D70\CF8\C7@\BFH\B7P\AFX\A7`\9Fh\97p\8Fx\87\02\FD\0A\F5\12\ED\1A\E5#\DC+\D43\CC;\C4C\BCK\B4S\AC[\A4c\9Ck\94s\8C{\84\05\FA\0D\F2\15\EA\1D\E2%\DA-\D25\CA=\C2F\B9N\B1V\A9^\A1f\99n\91v\89~\81", [160 x i8] zeroinitializer }>, <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\00\02\04\06\08\0A\0C\0E\10\12\14\16\18\1A\1C\1E \22$&(*,.02468:<>@BDFHJLNPRTVXZ\5C^`bdfhjlnprtvxz|~\81\83\85\87\89\8B\8D\8F\91\93\95\97\99\9B\9D\9F\A1\A3\A5\A7\A9\AB\AD\AF\B1\B3\B5\B7\B9\BB\BD\BF\C1\C3\C5\C7\C9\CB\CD\CF\D1\D3\D5\D7\D9\DB\DD\DF\E1\E3\E5\E7\E9\EB\ED\EF\F1\F3\F5\F7\F9\FB\FD\FF", [128 x i8] zeroinitializer }>, <{ [160 x i8], [96 x i8] }> <{ [160 x i8] c"\00\FF\08\F7\10\EF\18\E7 \DF(\D70\CF8\C7@\BFH\B7P\AFX\A7`\9Fh\97p\8Fx\87\01\FE\09\F6\11\EE\19\E6!\DE)\D61\CE9\C6A\BEI\B6Q\AEY\A6a\9Ei\96q\8Ey\86\03\FC\0B\F4\13\EC\1B\E4#\DC+\D43\CC;\C4C\BCK\B4S\AC[\A4c\9Ck\94s\8C{\84\04\FB\0C\F3\14\EB\1C\E3$\DB,\D34\CB<\C3D\BBL\B3T\AB\5C\A3d\9Bl\93t\8B|\83\06\F9\0E\F1\16\E9\1E\E1&\D9.\D16\C9>\C1F\B9N\B1V\A9^\A1f\99n\91v\89~\81", [96 x i8] zeroinitializer }>, <{ [192 x i8], [64 x i8] }> <{ [192 x i8] c"\00\FF\04\FB\08\F7\0C\F3\10\EF\14\EB\18\E7\1C\E3 \DF$\DB(\D7,\D30\CF4\CB8\C7<\C3@\BFD\BBH\B7L\B3P\AFT\ABX\A7\5C\A3`\9Fd\9Bh\97l\93p\8Ft\8Bx\87|\83\01\FE\05\FA\09\F6\0D\F2\11\EE\15\EA\19\E6\1D\E2!\DE%\DA)\D6-\D21\CE5\CA9\C6=\C2A\BEE\BAI\B6M\B2Q\AEU\AAY\A6]\A2a\9Ee\9Ai\96m\92q\8Eu\8Ay\86}\82\02\FD\06\F9\0A\F5\0E\F1\12\ED\16\E9\1A\E5\1E\E1\22\DD&\D9*\D5.\D12\CD6\C9:\C5>\C1B\BDF\B9J\B5N\B1R\ADV\A9Z\A5^\A1b\9Df\99j\95n\91r\8Dv\89z\85~\81", [64 x i8] zeroinitializer }>, [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF" }>, align 16
@quantization_mode_table = hidden local_unnamed_addr global [17 x [128 x i32]] zeroinitializer, align 16

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z29build_quantization_mode_tablev() local_unnamed_addr #0 {
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([17 x [128 x i32]]* @quantization_mode_table to i8*), i8 -1, i64 8704, i1 false)
  br label %1

1:                                                ; preds = %15, %0
  %2 = phi i32 [ %16, %15 ], [ 0, %0 ]
  br label %3

3:                                                ; preds = %12, %1
  %4 = phi i64 [ 1, %1 ], [ %13, %12 ]
  %5 = trunc i64 %4 to i32
  %6 = shl i32 %5, 1
  %7 = tail call i32 @_Z20compute_ise_bitcounti19quantization_method(i32 %6, i32 %2) #3
  %8 = icmp slt i32 %7, 128
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds [17 x [128 x i32]], [17 x [128 x i32]]* @quantization_mode_table, i64 0, i64 %4, i64 %10
  store i32 %2, i32* %11, align 4
  br label %12

12:                                               ; preds = %9, %3
  %13 = add nuw nsw i64 %4, 1
  %14 = icmp eq i64 %13, 17
  br i1 %14, label %15, label %3

15:                                               ; preds = %12
  %16 = add nuw nsw i32 %2, 1
  %17 = icmp eq i32 %16, 21
  br i1 %17, label %18, label %1

18:                                               ; preds = %15, %31
  %19 = phi i64 [ %32, %31 ], [ 0, %15 ]
  br label %20

20:                                               ; preds = %27, %18
  %21 = phi i64 [ 0, %18 ], [ %29, %27 ]
  %22 = phi i32 [ -1, %18 ], [ %28, %27 ]
  %23 = getelementptr inbounds [17 x [128 x i32]], [17 x [128 x i32]]* @quantization_mode_table, i64 0, i64 %19, i64 %21
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %22
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  store i32 %22, i32* %23, align 4
  br label %27

27:                                               ; preds = %20, %26
  %28 = phi i32 [ %22, %26 ], [ %24, %20 ]
  %29 = add nuw nsw i64 %21, 1
  %30 = icmp eq i64 %29, 128
  br i1 %30, label %31, label %20

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %19, 1
  %33 = icmp eq i64 %32, 17
  br i1 %33, label %34, label %18

34:                                               ; preds = %31
  ret void
}

; Function Attrs: optsize
declare i32 @_Z20compute_ise_bitcounti19quantization_method(i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
