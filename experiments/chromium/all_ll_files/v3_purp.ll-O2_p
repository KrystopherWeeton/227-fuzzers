; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_purp.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_purp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_X509_PURPOSE = type opaque
%struct.x509_purpose_st = type { i32, i32, i32, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)*, i8*, i8*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.env_md_st = type opaque
%struct.BASIC_CONSTRAINTS_st = type { i32, %struct.asn1_string_st* }
%struct.PROXY_CERT_INFO_EXTENSION_st = type { %struct.asn1_string_st*, %struct.PROXY_POLICY_st* }
%struct.PROXY_POLICY_st = type { %struct.asn1_object_st*, %struct.asn1_string_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.1, %struct.X509_name_st* }
%union.anon.1 = type { %struct.stack_st_GENERAL_NAME* }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/boringssl/src/crypto/x509v3/v3_purp.c\00", align 1
@xptable = internal unnamed_addr global %struct.stack_st_X509_PURPOSE* null, align 8
@xstandard = internal global [9 x %struct.x509_purpose_st] [%struct.x509_purpose_st { i32 1, i32 2, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_ssl_client, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 2, i32 3, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_ssl_server, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 3, i32 3, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_ns_ssl_server, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 4, i32 4, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_smime_sign, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 5, i32 4, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_smime_encrypt, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 6, i32 1, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_crl_sign, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 7, i32 -1, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @no_check, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 8, i32 1, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @ocsp_helper, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* null }, %struct.x509_purpose_st { i32 9, i32 8, i32 0, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* @check_purpose_timestamp_sign, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), i8* null }], align 16
@X509_supported_extension.supported_nids = internal constant [11 x i32] [i32 71, i32 83, i32 85, i32 87, i32 89, i32 126, i32 401, i32 663, i32 666, i32 747, i32 748], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"SSL client\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"sslclient\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"SSL server\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"sslserver\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Netscape SSL server\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"nssslserver\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"S/MIME signing\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"smimesign\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"S/MIME encryption\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"smimeencrypt\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"CRL signing\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"crlsign\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"Any Purpose\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"OCSP helper\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"ocsphelper\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"Time Stamp signing\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"timestampsign\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_check_purpose(%struct.x509_st*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.x509_purpose_st, align 8
  %5 = alloca i64, align 8
  %6 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %3
  %9 = icmp eq i32 %1, -1
  br i1 %9, label %50, label %10

10:                                               ; preds = %8
  %11 = bitcast %struct.x509_purpose_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false) #7
  %12 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 -6148914691236517206, i64* %5, align 8
  %13 = add i32 %1, -1
  %14 = icmp ult i32 %13, 9
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  br label %35

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %4, i64 0, i32 0
  store i32 %1, i32* %17, align 8
  %18 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %19 = icmp eq %struct.stack_st_X509_PURPOSE* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.stack_st_X509_PURPOSE* %18 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %21) #7
  %22 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %23 = call i32 @sk_find(%struct.stack_st* %22, i64* nonnull %5, i8* nonnull %11, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_PURPOSE_call_cmp_func) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  br label %50

26:                                               ; preds = %20
  %27 = load i64, i64* %5, align 8
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, 9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %50, label %31

31:                                               ; preds = %26
  %32 = icmp slt i32 %29, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = icmp slt i32 %29, 9
  br i1 %34, label %35, label %39

35:                                               ; preds = %15, %33
  %36 = phi i32 [ %13, %15 ], [ %29, %33 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %37
  br label %45

39:                                               ; preds = %33
  %40 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %41 = sext i32 %29 to i64
  %42 = add nsw i64 %41, -9
  %43 = call i8* @sk_value(%struct.stack_st* %40, i64 %42) #7
  %44 = bitcast i8* %43 to %struct.x509_purpose_st*
  br label %45

45:                                               ; preds = %31, %35, %39
  %46 = phi %struct.x509_purpose_st* [ %38, %35 ], [ %44, %39 ], [ null, %31 ]
  %47 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %46, i64 0, i32 3
  %48 = load i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)*, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)** %47, align 8
  %49 = call i32 %48(%struct.x509_purpose_st* %46, %struct.x509_st* %0, i32 %2) #7
  br label %50

50:                                               ; preds = %25, %26, %8, %3, %45
  %51 = phi i32 [ %49, %45 ], [ -1, %3 ], [ 1, %8 ], [ -1, %26 ], [ -1, %25 ]
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @x509v3_cache_extensions(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 20
  tail call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %5) #7
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %7 = load i64, i64* %6, align 8
  tail call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %5) #7
  %8 = and i64 %7, 256
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %414

10:                                               ; preds = %1
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %5) #7
  %11 = load i64, i64* %6, align 8
  %12 = and i64 %11, 256
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %5) #7
  br label %414

15:                                               ; preds = %10
  %16 = tail call %struct.env_md_st* @EVP_sha1() #7
  %17 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 17, i64 0
  %18 = tail call i32 @X509_digest(%struct.x509_st* %0, %struct.env_md_st* %16, i8* %17, i32* null) #7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = load i64, i64* %6, align 8
  %22 = or i64 %21, 128
  store i64 %22, i64* %6, align 8
  br label %23

23:                                               ; preds = %15, %20
  %24 = tail call i64 @X509_get_version(%struct.x509_st* %0) #7
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load i64, i64* %6, align 8
  %28 = or i64 %27, 64
  store i64 %28, i64* %6, align 8
  br label %29

29:                                               ; preds = %26, %23
  %30 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 87, i32* nonnull %3, i32* null) #7
  %31 = bitcast i8* %30 to %struct.BASIC_CONSTRAINTS_st*
  %32 = icmp eq i8* %30, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = bitcast i8* %30 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  %39 = or i64 %38, 16
  store i64 %39, i64* %6, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = getelementptr inbounds i8, i8* %30, i64 8
  %42 = bitcast i8* %41 to %struct.asn1_string_st**
  %43 = load %struct.asn1_string_st*, %struct.asn1_string_st** %42, align 8
  %44 = icmp eq %struct.asn1_string_st* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 258
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %34, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %49, %45
  %53 = load i64, i64* %6, align 8
  %54 = or i64 %53, 128
  store i64 %54, i64* %6, align 8
  br label %57

55:                                               ; preds = %49
  %56 = call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* nonnull %43) #7
  br label %57

57:                                               ; preds = %40, %52, %55
  %58 = phi i64 [ 0, %52 ], [ %56, %55 ], [ -1, %40 ]
  %59 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 5
  store i64 %58, i64* %59, align 8
  call void @BASIC_CONSTRAINTS_free(%struct.BASIC_CONSTRAINTS_st* nonnull %31) #7
  br label %63

60:                                               ; preds = %29
  %61 = load i32, i32* %3, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %67, label %63

63:                                               ; preds = %60, %57
  %64 = phi i64 [ 1, %57 ], [ 128, %60 ]
  %65 = load i64, i64* %6, align 8
  %66 = or i64 %65, %64
  store i64 %66, i64* %6, align 8
  br label %67

67:                                               ; preds = %63, %60
  %68 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 663, i32* nonnull %3, i32* null) #7
  %69 = bitcast i8* %68 to %struct.PROXY_CERT_INFO_EXTENSION_st*
  %70 = icmp eq i8* %68, null
  br i1 %70, label %93, label %71

71:                                               ; preds = %67
  %72 = load i64, i64* %6, align 8
  %73 = and i64 %72, 16
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = call i32 @X509_get_ext_by_NID(%struct.x509_st* %0, i32 85, i32 -1) #7
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = call i32 @X509_get_ext_by_NID(%struct.x509_st* %0, i32 86, i32 -1) #7
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %81, label %84

81:                                               ; preds = %71, %78, %75
  %82 = load i64, i64* %6, align 8
  %83 = or i64 %82, 128
  store i64 %83, i64* %6, align 8
  br label %84

84:                                               ; preds = %81, %78
  %85 = bitcast i8* %68 to %struct.asn1_string_st**
  %86 = load %struct.asn1_string_st*, %struct.asn1_string_st** %85, align 8
  %87 = icmp eq %struct.asn1_string_st* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* nonnull %86) #7
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i64 [ %89, %88 ], [ -1, %84 ]
  %92 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 6
  store i64 %91, i64* %92, align 8
  call void @PROXY_CERT_INFO_EXTENSION_free(%struct.PROXY_CERT_INFO_EXTENSION_st* nonnull %69) #7
  br label %96

93:                                               ; preds = %67
  %94 = load i32, i32* %3, align 4
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %100, label %96

96:                                               ; preds = %93, %90
  %97 = phi i64 [ 1024, %90 ], [ 128, %93 ]
  %98 = load i64, i64* %6, align 8
  %99 = or i64 %98, %97
  store i64 %99, i64* %6, align 8
  br label %100

100:                                              ; preds = %96, %93
  %101 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 83, i32* nonnull %3, i32* null) #7
  %102 = bitcast i8* %101 to %struct.asn1_string_st*
  %103 = icmp eq i8* %101, null
  br i1 %103, label %129, label %104

104:                                              ; preds = %100
  %105 = bitcast i8* %101 to i32*
  %106 = load i32, i32* %105, align 8
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %124

108:                                              ; preds = %104
  %109 = getelementptr inbounds i8, i8* %101, i64 8
  %110 = bitcast i8* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  store i64 %113, i64* %114, align 8
  %115 = load i32, i32* %105, align 8
  %116 = icmp sgt i32 %115, 1
  br i1 %116, label %117, label %126

117:                                              ; preds = %108
  %118 = load i8*, i8** %110, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = shl nuw nsw i64 %121, 8
  %123 = or i64 %122, %113
  store i64 %123, i64* %114, align 8
  br label %126

124:                                              ; preds = %104
  %125 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  store i64 0, i64* %125, align 8
  br label %126

126:                                              ; preds = %108, %117, %124
  %127 = load i64, i64* %6, align 8
  %128 = or i64 %127, 2
  store i64 %128, i64* %6, align 8
  call void @ASN1_BIT_STRING_free(%struct.asn1_string_st* nonnull %102) #7
  br label %135

129:                                              ; preds = %100
  %130 = load i32, i32* %3, align 4
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = load i64, i64* %6, align 8
  %134 = or i64 %133, 128
  store i64 %134, i64* %6, align 8
  br label %135

135:                                              ; preds = %129, %132, %126
  %136 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 9
  store i64 0, i64* %136, align 8
  %137 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 126, i32* nonnull %3, i32* null) #7
  %138 = icmp eq i8* %137, null
  br i1 %138, label %168, label %139

139:                                              ; preds = %135
  %140 = bitcast i8* %137 to %struct.stack_st_ASN1_OBJECT*
  %141 = load i64, i64* %6, align 8
  %142 = or i64 %141, 4
  store i64 %142, i64* %6, align 8
  %143 = bitcast %struct.stack_st_ASN1_OBJECT* %140 to %struct.stack_st*
  %144 = call i64 @sk_num(%struct.stack_st* nonnull %143) #7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %167, label %146

146:                                              ; preds = %139, %163
  %147 = phi i64 [ %164, %163 ], [ 0, %139 ]
  %148 = call i8* @sk_value(%struct.stack_st* nonnull %143, i64 %147) #7
  %149 = bitcast i8* %148 to %struct.asn1_object_st*
  %150 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %149) #7
  switch i32 %150, label %163 [
    i32 129, label %159
    i32 130, label %151
    i32 132, label %152
    i32 131, label %153
    i32 137, label %154
    i32 139, label %154
    i32 180, label %155
    i32 133, label %156
    i32 297, label %157
    i32 910, label %158
  ]

151:                                              ; preds = %146
  br label %159

152:                                              ; preds = %146
  br label %159

153:                                              ; preds = %146
  br label %159

154:                                              ; preds = %146, %146
  br label %159

155:                                              ; preds = %146
  br label %159

156:                                              ; preds = %146
  br label %159

157:                                              ; preds = %146
  br label %159

158:                                              ; preds = %146
  br label %159

159:                                              ; preds = %146, %158, %157, %156, %155, %154, %153, %152, %151
  %160 = phi i64 [ 2, %151 ], [ 4, %152 ], [ 8, %153 ], [ 16, %154 ], [ 32, %155 ], [ 64, %156 ], [ 128, %157 ], [ 256, %158 ], [ 1, %146 ]
  %161 = load i64, i64* %136, align 8
  %162 = or i64 %161, %160
  store i64 %162, i64* %136, align 8
  br label %163

163:                                              ; preds = %159, %146
  %164 = add nuw i64 %147, 1
  %165 = call i64 @sk_num(%struct.stack_st* nonnull %143) #7
  %166 = icmp ult i64 %164, %165
  br i1 %166, label %146, label %167

167:                                              ; preds = %163, %139
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %143, void (void (i8*)*, i8*)* nonnull @sk_ASN1_OBJECT_call_free_func, void (i8*)* bitcast (void (%struct.asn1_object_st*)* @ASN1_OBJECT_free to void (i8*)*)) #7
  br label %174

168:                                              ; preds = %135
  %169 = load i32, i32* %3, align 4
  %170 = icmp eq i32 %169, -1
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = load i64, i64* %6, align 8
  %173 = or i64 %172, 128
  store i64 %173, i64* %6, align 8
  br label %174

174:                                              ; preds = %168, %171, %167
  %175 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 71, i32* nonnull %3, i32* null) #7
  %176 = bitcast i8* %175 to %struct.asn1_string_st*
  %177 = icmp eq i8* %175, null
  br i1 %177, label %193, label %178

178:                                              ; preds = %174
  %179 = bitcast i8* %175 to i32*
  %180 = load i32, i32* %179, align 8
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = getelementptr inbounds i8, i8* %175, i64 8
  %184 = bitcast i8* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  br label %188

188:                                              ; preds = %178, %182
  %189 = phi i64 [ %187, %182 ], [ 0, %178 ]
  %190 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 10
  store i64 %189, i64* %190, align 8
  %191 = load i64, i64* %6, align 8
  %192 = or i64 %191, 8
  store i64 %192, i64* %6, align 8
  call void @ASN1_BIT_STRING_free(%struct.asn1_string_st* nonnull %176) #7
  br label %199

193:                                              ; preds = %174
  %194 = load i32, i32* %3, align 4
  %195 = icmp eq i32 %194, -1
  br i1 %195, label %199, label %196

196:                                              ; preds = %193
  %197 = load i64, i64* %6, align 8
  %198 = or i64 %197, 128
  store i64 %198, i64* %6, align 8
  br label %199

199:                                              ; preds = %193, %196, %188
  %200 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 82, i32* nonnull %3, i32* null) #7
  %201 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 11
  %202 = bitcast %struct.asn1_string_st** %201 to i8**
  store i8* %200, i8** %202, align 8
  %203 = icmp eq i8* %200, null
  %204 = load i32, i32* %3, align 4
  %205 = icmp ne i32 %204, -1
  %206 = and i1 %203, %205
  br i1 %206, label %207, label %210

207:                                              ; preds = %199
  %208 = load i64, i64* %6, align 8
  %209 = or i64 %208, 128
  store i64 %209, i64* %6, align 8
  br label %210

210:                                              ; preds = %207, %199
  %211 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 90, i32* nonnull %3, i32* null) #7
  %212 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 12
  %213 = bitcast %struct.AUTHORITY_KEYID_st** %212 to i8**
  store i8* %211, i8** %213, align 8
  %214 = icmp eq i8* %211, null
  %215 = load i32, i32* %3, align 4
  %216 = icmp ne i32 %215, -1
  %217 = and i1 %214, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %210
  %219 = load i64, i64* %6, align 8
  %220 = or i64 %219, 128
  store i64 %220, i64* %6, align 8
  br label %221

221:                                              ; preds = %218, %210
  %222 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %0) #7
  %223 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %0) #7
  %224 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %222, %struct.X509_name_st* %223) #7
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %243

226:                                              ; preds = %221
  %227 = load i64, i64* %6, align 8
  %228 = or i64 %227, 32
  store i64 %228, i64* %6, align 8
  %229 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %212, align 8
  %230 = call i32 @X509_check_akid(%struct.x509_st* %0, %struct.AUTHORITY_KEYID_st* %229)
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %243

232:                                              ; preds = %226
  %233 = load i64, i64* %6, align 8
  %234 = and i64 %233, 2
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  %238 = load i64, i64* %237, align 8
  %239 = and i64 %238, 4
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %236, %232
  %242 = or i64 %233, 8192
  store i64 %242, i64* %6, align 8
  br label %243

243:                                              ; preds = %236, %221, %226, %241
  %244 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 85, i32* nonnull %3, i32* null) #7
  %245 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 15
  %246 = bitcast %struct.stack_st_GENERAL_NAME** %245 to i8**
  store i8* %244, i8** %246, align 8
  %247 = icmp eq i8* %244, null
  %248 = load i32, i32* %3, align 4
  %249 = icmp ne i32 %248, -1
  %250 = and i1 %247, %249
  br i1 %250, label %251, label %254

251:                                              ; preds = %243
  %252 = load i64, i64* %6, align 8
  %253 = or i64 %252, 128
  store i64 %253, i64* %6, align 8
  br label %254

254:                                              ; preds = %251, %243
  %255 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 666, i32* nonnull %3, i32* null) #7
  %256 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 16
  %257 = bitcast %struct.NAME_CONSTRAINTS_st** %256 to i8**
  store i8* %255, i8** %257, align 8
  %258 = icmp eq i8* %255, null
  %259 = load i32, i32* %3, align 4
  %260 = icmp ne i32 %259, -1
  %261 = and i1 %258, %260
  br i1 %261, label %262, label %265

262:                                              ; preds = %254
  %263 = load i64, i64* %6, align 8
  %264 = or i64 %263, 128
  store i64 %264, i64* %6, align 8
  br label %265

265:                                              ; preds = %262, %254
  %266 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %266) #7
  store i32 -1431655766, i32* %2, align 4
  %267 = call i8* @X509_get_ext_d2i(%struct.x509_st* %0, i32 103, i32* nonnull %2, i32* null) #7
  %268 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 14
  %269 = bitcast %struct.stack_st_DIST_POINT** %268 to i8**
  store i8* %267, i8** %269, align 8
  %270 = icmp eq i8* %267, null
  %271 = load i32, i32* %2, align 4
  %272 = icmp ne i32 %271, -1
  %273 = and i1 %270, %272
  br i1 %273, label %362, label %274

274:                                              ; preds = %265
  %275 = bitcast i8* %267 to %struct.stack_st*
  %276 = bitcast %struct.stack_st_DIST_POINT** %268 to %struct.stack_st**
  %277 = call i64 @sk_num(%struct.stack_st* %275) #7
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %361, label %279

279:                                              ; preds = %274, %356
  %280 = phi i64 [ %357, %356 ], [ 0, %274 ]
  %281 = load %struct.stack_st*, %struct.stack_st** %276, align 8
  %282 = call i8* @sk_value(%struct.stack_st* %281, i64 %280) #7
  %283 = getelementptr inbounds i8, i8* %282, i64 8
  %284 = bitcast i8* %283 to %struct.asn1_string_st**
  %285 = load %struct.asn1_string_st*, %struct.asn1_string_st** %284, align 8
  %286 = icmp eq %struct.asn1_string_st* %285, null
  br i1 %286, label %315, label %287

287:                                              ; preds = %279
  %288 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %285, i64 0, i32 0
  %289 = load i32, i32* %288, align 8
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %295, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds i8, i8* %282, i64 24
  %293 = bitcast i8* %292 to i32*
  %294 = load i32, i32* %293, align 8
  br label %311

295:                                              ; preds = %287
  %296 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %285, i64 0, i32 2
  %297 = load i8*, i8** %296, align 8
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = getelementptr inbounds i8, i8* %282, i64 24
  %301 = bitcast i8* %300 to i32*
  store i32 %299, i32* %301, align 8
  %302 = load i32, i32* %288, align 8
  %303 = icmp sgt i32 %302, 1
  br i1 %303, label %304, label %311

304:                                              ; preds = %295
  %305 = load i8*, i8** %296, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i32
  %309 = shl nuw nsw i32 %308, 8
  %310 = or i32 %309, %299
  store i32 %310, i32* %301, align 8
  br label %311

311:                                              ; preds = %304, %295, %291
  %312 = phi i32* [ %301, %304 ], [ %301, %295 ], [ %293, %291 ]
  %313 = phi i32 [ %310, %304 ], [ %299, %295 ], [ %294, %291 ]
  %314 = and i32 %313, 32895
  store i32 %314, i32* %312, align 8
  br label %318

315:                                              ; preds = %279
  %316 = getelementptr inbounds i8, i8* %282, i64 24
  %317 = bitcast i8* %316 to i32*
  store i32 32895, i32* %317, align 8
  br label %318

318:                                              ; preds = %315, %311
  %319 = bitcast i8* %282 to %struct.DIST_POINT_NAME_st**
  %320 = load %struct.DIST_POINT_NAME_st*, %struct.DIST_POINT_NAME_st** %319, align 8
  %321 = icmp eq %struct.DIST_POINT_NAME_st* %320, null
  br i1 %321, label %356, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %struct.DIST_POINT_NAME_st, %struct.DIST_POINT_NAME_st* %320, i64 0, i32 0
  %324 = load i32, i32* %323, align 8
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %356

326:                                              ; preds = %322
  %327 = getelementptr inbounds i8, i8* %282, i64 16
  %328 = bitcast i8* %327 to %struct.stack_st**
  %329 = load %struct.stack_st*, %struct.stack_st** %328, align 8
  %330 = call i64 @sk_num(%struct.stack_st* %329) #7
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %349, label %336

332:                                              ; preds = %336
  %333 = load %struct.stack_st*, %struct.stack_st** %328, align 8
  %334 = call i64 @sk_num(%struct.stack_st* %333) #7
  %335 = icmp ult i64 %343, %334
  br i1 %335, label %336, label %349

336:                                              ; preds = %326, %332
  %337 = phi i64 [ %343, %332 ], [ 0, %326 ]
  %338 = load %struct.stack_st*, %struct.stack_st** %328, align 8
  %339 = call i8* @sk_value(%struct.stack_st* %338, i64 %337) #7
  %340 = bitcast i8* %339 to i32*
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 4
  %343 = add nuw i64 %337, 1
  br i1 %342, label %344, label %332

344:                                              ; preds = %336
  %345 = getelementptr inbounds i8, i8* %339, i64 8
  %346 = bitcast i8* %345 to %struct.X509_name_st**
  %347 = load %struct.X509_name_st*, %struct.X509_name_st** %346, align 8
  %348 = icmp eq %struct.X509_name_st* %347, null
  br i1 %348, label %349, label %351

349:                                              ; preds = %332, %344, %326
  %350 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %0) #7
  br label %351

351:                                              ; preds = %349, %344
  %352 = phi %struct.X509_name_st* [ %347, %344 ], [ %350, %349 ]
  %353 = load %struct.DIST_POINT_NAME_st*, %struct.DIST_POINT_NAME_st** %319, align 8
  %354 = call i32 @DIST_POINT_set_dpname(%struct.DIST_POINT_NAME_st* %353, %struct.X509_name_st* %352) #7
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %362, label %356

356:                                              ; preds = %351, %322, %318
  %357 = add nuw i64 %280, 1
  %358 = load %struct.stack_st*, %struct.stack_st** %276, align 8
  %359 = call i64 @sk_num(%struct.stack_st* %358) #7
  %360 = icmp ult i64 %357, %359
  br i1 %360, label %279, label %361

361:                                              ; preds = %356, %274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266) #7
  br label %365

362:                                              ; preds = %351, %265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266) #7
  %363 = load i64, i64* %6, align 8
  %364 = or i64 %363, 128
  store i64 %364, i64* %6, align 8
  br label %365

365:                                              ; preds = %361, %362
  store i32 0, i32* %3, align 4
  %366 = call i32 @X509_get_ext_count(%struct.x509_st* %0) #7
  %367 = icmp sgt i32 %366, 0
  br i1 %367, label %368, label %411

368:                                              ; preds = %365, %406
  %369 = load i32, i32* %3, align 4
  %370 = call %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %0, i32 %369) #7
  %371 = call %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* %370) #7
  %372 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %371) #7
  %373 = icmp eq i32 %372, 857
  br i1 %373, label %374, label %377

374:                                              ; preds = %368
  %375 = load i64, i64* %6, align 8
  %376 = or i64 %375, 4096
  store i64 %376, i64* %6, align 8
  br label %377

377:                                              ; preds = %374, %368
  %378 = call i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st* %370) #7
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %406, label %380

380:                                              ; preds = %377
  %381 = call %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* %370) #7
  %382 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %381) #7
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %403, label %384

384:                                              ; preds = %380, %397
  %385 = phi i64 [ %399, %397 ], [ 11, %380 ]
  %386 = phi i64 [ %398, %397 ], [ 0, %380 ]
  %387 = add i64 %386, %385
  %388 = lshr i64 %387, 1
  %389 = getelementptr [11 x i32], [11 x i32]* @X509_supported_extension.supported_nids, i64 0, i64 %388
  %390 = load i32, i32* %389, align 4
  %391 = sub nsw i32 %382, %390
  %392 = icmp slt i32 %391, 0
  br i1 %392, label %397, label %393

393:                                              ; preds = %384
  %394 = icmp eq i32 %391, 0
  br i1 %394, label %401, label %395

395:                                              ; preds = %393
  %396 = add nuw i64 %388, 1
  br label %397

397:                                              ; preds = %395, %384
  %398 = phi i64 [ %396, %395 ], [ %386, %384 ]
  %399 = phi i64 [ %385, %395 ], [ %388, %384 ]
  %400 = icmp ult i64 %398, %399
  br i1 %400, label %384, label %403

401:                                              ; preds = %393
  %402 = icmp eq i32* %389, null
  br i1 %402, label %403, label %406

403:                                              ; preds = %380, %401, %397
  %404 = load i64, i64* %6, align 8
  %405 = or i64 %404, 512
  store i64 %405, i64* %6, align 8
  br label %411

406:                                              ; preds = %401, %377
  %407 = load i32, i32* %3, align 4
  %408 = add nsw i32 %407, 1
  store i32 %408, i32* %3, align 4
  %409 = call i32 @X509_get_ext_count(%struct.x509_st* %0) #7
  %410 = icmp slt i32 %408, %409
  br i1 %410, label %368, label %411

411:                                              ; preds = %406, %365, %403
  %412 = load i64, i64* %6, align 8
  %413 = or i64 %412, 256
  store i64 %413, i64* %6, align 8
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %5) #7
  br label %414

414:                                              ; preds = %1, %411, %14
  %415 = load i64, i64* %6, align 8
  %416 = trunc i64 %415 to i32
  %417 = lshr i32 %416, 7
  %418 = and i32 %417, 1
  %419 = xor i32 %418, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret i32 %419
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PURPOSE_get_by_id(i32) local_unnamed_addr #0 {
  %2 = alloca %struct.x509_purpose_st, align 8
  %3 = alloca i64, align 8
  %4 = bitcast %struct.x509_purpose_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store i64 -6148914691236517206, i64* %3, align 8
  %6 = add i32 %0, -1
  %7 = icmp ult i32 %6, 9
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %2, i64 0, i32 0
  store i32 %0, i32* %9, align 8
  %10 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %11 = icmp eq %struct.stack_st_X509_PURPOSE* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct.stack_st_X509_PURPOSE* %10 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %13) #7
  %14 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %15 = call i32 @sk_find(%struct.stack_st* %14, i64* nonnull %3, i8* nonnull %4, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_PURPOSE_call_cmp_func) #7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %3, align 8
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 9
  br label %21

21:                                               ; preds = %1, %12, %8, %17
  %22 = phi i32 [ %20, %17 ], [ -1, %8 ], [ -1, %12 ], [ %6, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #7
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_purpose_st* @X509_PURPOSE_get0(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 0
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, 9
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %6
  br label %14

8:                                                ; preds = %3
  %9 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %10 = sext i32 %0 to i64
  %11 = add nsw i64 %10, -9
  %12 = tail call i8* @sk_value(%struct.stack_st* %9, i64 %11) #7
  %13 = bitcast i8* %12 to %struct.x509_purpose_st*
  br label %14

14:                                               ; preds = %1, %8, %5
  %15 = phi %struct.x509_purpose_st* [ %7, %5 ], [ %13, %8 ], [ null, %1 ]
  ret %struct.x509_purpose_st* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PURPOSE_set(i32* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.x509_purpose_st, align 8
  %4 = alloca i64, align 8
  %5 = bitcast %struct.x509_purpose_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false) #7
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = add i32 %1, -1
  %8 = icmp ult i32 %7, 9
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #7
  br label %25

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %3, i64 0, i32 0
  store i32 %1, i32* %11, align 8
  %12 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %13 = icmp eq %struct.stack_st_X509_PURPOSE* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct.stack_st_X509_PURPOSE* %12 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %15) #7
  %16 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %17 = call i32 @sk_find(%struct.stack_st* %16, i64* nonnull %4, i8* nonnull %5, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_PURPOSE_call_cmp_func) #7
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %10, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #7
  br label %24

20:                                               ; preds = %14
  %21 = load i64, i64* %4, align 8
  %22 = trunc i64 %21 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #7
  %23 = icmp eq i32 %22, -10
  br i1 %23, label %24, label %25

24:                                               ; preds = %19, %20
  call void @ERR_put_error(i32 20, i32 0, i32 133, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 162) #7
  br label %26

25:                                               ; preds = %9, %20
  store i32 %1, i32* %0, align 4
  br label %26

26:                                               ; preds = %25, %24
  %27 = phi i32 [ 0, %24 ], [ 1, %25 ]
  ret i32 %27
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PURPOSE_get_count() local_unnamed_addr #0 {
  %1 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %2 = icmp eq %struct.stack_st_X509_PURPOSE* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %struct.stack_st_X509_PURPOSE* %1 to %struct.stack_st*
  %5 = tail call i64 @sk_num(%struct.stack_st* nonnull %4) #7
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 9
  br label %8

8:                                                ; preds = %0, %3
  %9 = phi i32 [ %7, %3 ], [ 9, %0 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PURPOSE_get_by_sname(i8* nocapture readonly) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %30, %1
  %3 = phi i64 [ %31, %30 ], [ 0, %1 ]
  %4 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %5 = icmp eq %struct.stack_st_X509_PURPOSE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.stack_st_X509_PURPOSE* %4 to %struct.stack_st*
  %8 = tail call i64 @sk_num(%struct.stack_st* nonnull %7) #7
  %9 = add i64 %8, 9
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i64 [ %9, %6 ], [ 9, %2 ]
  %12 = shl i64 %11, 32
  %13 = ashr exact i64 %12, 32
  %14 = icmp slt i64 %3, %13
  br i1 %14, label %15, label %34

15:                                               ; preds = %10
  %16 = icmp ult i64 %3, 9
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %3
  br label %24

19:                                               ; preds = %15
  %20 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %21 = add nsw i64 %3, -9
  %22 = tail call i8* @sk_value(%struct.stack_st* %20, i64 %21) #7
  %23 = bitcast i8* %22 to %struct.x509_purpose_st*
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi %struct.x509_purpose_st* [ %18, %17 ], [ %23, %19 ]
  %26 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %25, i64 0, i32 5
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i32 @strcmp(i8* %27, i8* %0) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = add nuw nsw i64 %3, 1
  br label %2

32:                                               ; preds = %24
  %33 = trunc i64 %3 to i32
  br label %34

34:                                               ; preds = %10, %32
  %35 = phi i32 [ %33, %32 ], [ -1, %10 ]
  ret i32 %35
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PURPOSE_add(i32, i32, i32, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)*, i8*, i8*, i8*) local_unnamed_addr #0 {
  %8 = alloca %struct.x509_purpose_st, align 8
  %9 = alloca i64, align 8
  %10 = and i32 %2, -4
  %11 = bitcast %struct.x509_purpose_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false) #7
  %12 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 -6148914691236517206, i64* %9, align 8
  %13 = add i32 %0, -1
  %14 = icmp ult i32 %13, 9
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  br label %43

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %8, i64 0, i32 0
  store i32 %0, i32* %17, align 8
  %18 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %19 = icmp eq %struct.stack_st_X509_PURPOSE* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.stack_st_X509_PURPOSE* %18 to %struct.stack_st*
  tail call void @sk_sort(%struct.stack_st* nonnull %21) #7
  %22 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %23 = call i32 @sk_find(%struct.stack_st* %22, i64* nonnull %9, i8* nonnull %11, i32 (i32 (i8**, i8**)*, i8**, i8**)* nonnull @sk_X509_PURPOSE_call_cmp_func) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %16, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  br label %31

26:                                               ; preds = %20
  %27 = load i64, i64* %9, align 8
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, 9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %39

31:                                               ; preds = %25, %26
  %32 = call i8* @OPENSSL_malloc(i64 48) #7
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 233) #7
  br label %129

35:                                               ; preds = %31
  %36 = bitcast i8* %32 to %struct.x509_purpose_st*
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 1, i32* %38, align 8
  br label %53

39:                                               ; preds = %26
  %40 = icmp slt i32 %29, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = icmp slt i32 %29, 9
  br i1 %42, label %43, label %47

43:                                               ; preds = %15, %41
  %44 = phi i32 [ %13, %15 ], [ %29, %41 ]
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %45
  br label %53

47:                                               ; preds = %41
  %48 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %49 = sext i32 %29 to i64
  %50 = add nsw i64 %49, -9
  %51 = call i8* @sk_value(%struct.stack_st* %48, i64 %50) #7
  %52 = bitcast i8* %51 to %struct.x509_purpose_st*
  br label %53

53:                                               ; preds = %47, %43, %39, %35
  %54 = phi i1 [ true, %35 ], [ false, %43 ], [ false, %47 ], [ false, %39 ]
  %55 = phi %struct.x509_purpose_st* [ %36, %35 ], [ %46, %43 ], [ %52, %47 ], [ null, %39 ]
  %56 = call i8* @OPENSSL_strdup(i8* %4) #7
  %57 = call i8* @OPENSSL_strdup(i8* %5) #7
  %58 = icmp eq i8* %56, null
  %59 = icmp eq i8* %57, null
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %53
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 244) #7
  br i1 %58, label %63, label %62

62:                                               ; preds = %61
  call void @OPENSSL_free(i8* nonnull %56) #7
  br label %63

63:                                               ; preds = %61, %62
  br i1 %59, label %65, label %64

64:                                               ; preds = %63
  call void @OPENSSL_free(i8* nonnull %57) #7
  br label %65

65:                                               ; preds = %63, %64
  br i1 %54, label %66, label %129

66:                                               ; preds = %65
  %67 = bitcast %struct.x509_purpose_st* %55 to i8*
  call void @OPENSSL_free(i8* %67) #7
  br label %129

68:                                               ; preds = %53
  %69 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 4
  %75 = load i8*, i8** %74, align 8
  call void @OPENSSL_free(i8* %75) #7
  %76 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 5
  %77 = load i8*, i8** %76, align 8
  call void @OPENSSL_free(i8* %77) #7
  %78 = load i32, i32* %69, align 8
  br label %79

79:                                               ; preds = %68, %73
  %80 = phi i32 [ %70, %68 ], [ %78, %73 ]
  %81 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 4
  store i8* %56, i8** %81, align 8
  %82 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 5
  store i8* %57, i8** %82, align 8
  %83 = and i32 %80, 1
  %84 = or i32 %10, %83
  %85 = or i32 %84, 2
  store i32 %85, i32* %69, align 8
  %86 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 0
  store i32 %0, i32* %86, align 8
  %87 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 1
  store i32 %1, i32* %87, align 4
  %88 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 3
  store i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)* %3, i32 (%struct.x509_purpose_st*, %struct.x509_st*, i32)** %88, align 8
  %89 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %55, i64 0, i32 6
  store i8* %6, i8** %89, align 8
  br i1 %54, label %90, label %129

90:                                               ; preds = %79
  %91 = load %struct.stack_st_X509_PURPOSE*, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  %92 = icmp eq %struct.stack_st_X509_PURPOSE* %91, null
  %93 = bitcast %struct.stack_st_X509_PURPOSE* %91 to %struct.stack_st*
  br i1 %92, label %94, label %111

94:                                               ; preds = %90
  %95 = call %struct.stack_st* @sk_new(i32 (i8**, i8**)* bitcast (i32 (%struct.x509_purpose_st**, %struct.x509_purpose_st**)* @xp_cmp to i32 (i8**, i8**)*)) #7
  store %struct.stack_st* %95, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  %96 = icmp eq %struct.stack_st* %95, null
  br i1 %96, label %97, label %111

97:                                               ; preds = %94
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 275) #7
  %98 = icmp eq %struct.x509_purpose_st* %55, null
  br i1 %98, label %129, label %99

99:                                               ; preds = %97
  %100 = load i32, i32* %69, align 8
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %129, label %103

103:                                              ; preds = %99
  %104 = and i32 %100, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = load i8*, i8** %81, align 8
  call void @OPENSSL_free(i8* %107) #7
  %108 = load i8*, i8** %82, align 8
  call void @OPENSSL_free(i8* %108) #7
  br label %109

109:                                              ; preds = %106, %103
  %110 = bitcast %struct.x509_purpose_st* %55 to i8*
  call void @OPENSSL_free(i8* nonnull %110) #7
  br label %129

111:                                              ; preds = %94, %90
  %112 = phi %struct.stack_st* [ %95, %94 ], [ %93, %90 ]
  %113 = bitcast %struct.x509_purpose_st* %55 to i8*
  %114 = call i64 @sk_push(%struct.stack_st* %112, i8* %113) #7
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %129

116:                                              ; preds = %111
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 280) #7
  %117 = icmp eq %struct.x509_purpose_st* %55, null
  br i1 %117, label %129, label %118

118:                                              ; preds = %116
  %119 = load i32, i32* %69, align 8
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = and i32 %119, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %122
  %126 = load i8*, i8** %81, align 8
  call void @OPENSSL_free(i8* %126) #7
  %127 = load i8*, i8** %82, align 8
  call void @OPENSSL_free(i8* %127) #7
  br label %128

128:                                              ; preds = %125, %122
  call void @OPENSSL_free(i8* nonnull %113) #7
  br label %129

129:                                              ; preds = %128, %118, %116, %109, %99, %97, %79, %111, %65, %66, %34
  %130 = phi i32 [ 0, %34 ], [ 0, %66 ], [ 0, %65 ], [ 1, %111 ], [ 1, %79 ], [ 0, %97 ], [ 0, %99 ], [ 0, %109 ], [ 0, %116 ], [ 0, %118 ], [ 0, %128 ]
  ret i32 %130
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @xp_cmp(%struct.x509_purpose_st** nocapture readonly, %struct.x509_purpose_st** nocapture readonly) #4 {
  %3 = load %struct.x509_purpose_st*, %struct.x509_purpose_st** %0, align 8
  %4 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = load %struct.x509_purpose_st*, %struct.x509_purpose_st** %1, align 8
  %7 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %5, %8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @xptable_free(%struct.x509_purpose_st*) #0 {
  %2 = icmp eq %struct.x509_purpose_st* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = and i32 %5, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8
  tail call void @OPENSSL_free(i8* %13) #7
  %14 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 5
  %15 = load i8*, i8** %14, align 8
  tail call void @OPENSSL_free(i8* %15) #7
  br label %16

16:                                               ; preds = %8, %11
  %17 = bitcast %struct.x509_purpose_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %17) #7
  br label %18

18:                                               ; preds = %3, %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_PURPOSE_cleanup() local_unnamed_addr #0 {
  %1 = load %struct.stack_st*, %struct.stack_st** bitcast (%struct.stack_st_X509_PURPOSE** @xptable to %struct.stack_st**), align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %1, void (void (i8*)*, i8*)* nonnull @sk_X509_PURPOSE_call_free_func, void (i8*)* bitcast (void (%struct.x509_purpose_st*)* @xptable_free to void (i8*)*)) #7
  br label %2

2:                                                ; preds = %21, %0
  %3 = phi i64 [ 0, %0 ], [ %22, %21 ]
  %4 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %3
  %5 = icmp eq %struct.x509_purpose_st* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %3, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = and i32 %8, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %3, i32 4
  %16 = load i8*, i8** %15, align 8
  tail call void @OPENSSL_free(i8* %16) #7
  %17 = getelementptr inbounds [9 x %struct.x509_purpose_st], [9 x %struct.x509_purpose_st]* @xstandard, i64 0, i64 %3, i32 5
  %18 = load i8*, i8** %17, align 16
  tail call void @OPENSSL_free(i8* %18) #7
  br label %19

19:                                               ; preds = %14, %11
  %20 = bitcast %struct.x509_purpose_st* %4 to i8*
  tail call void @OPENSSL_free(i8* nonnull %20) #7
  br label %21

21:                                               ; preds = %2, %6, %19
  %22 = add nuw nsw i64 %3, 1
  %23 = icmp eq i64 %22, 9
  br i1 %23, label %24, label %2

24:                                               ; preds = %21
  store %struct.stack_st_X509_PURPOSE* null, %struct.stack_st_X509_PURPOSE** @xptable, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_PURPOSE_get_id(%struct.x509_purpose_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @X509_PURPOSE_get0_name(%struct.x509_purpose_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 4
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @X509_PURPOSE_get0_sname(%struct.x509_purpose_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 5
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_PURPOSE_get_trust(%struct.x509_purpose_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_purpose_st, %struct.x509_purpose_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_supported_extension(%struct.X509_extension_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* %0) #7
  %3 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %2) #7
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1, %18
  %6 = phi i64 [ %20, %18 ], [ 11, %1 ]
  %7 = phi i64 [ %19, %18 ], [ 0, %1 ]
  %8 = add i64 %7, %6
  %9 = lshr i64 %8, 1
  %10 = getelementptr [11 x i32], [11 x i32]* @X509_supported_extension.supported_nids, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %3, %11
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %9, 1
  br label %18

18:                                               ; preds = %16, %5
  %19 = phi i64 [ %17, %16 ], [ %7, %5 ]
  %20 = phi i64 [ %6, %16 ], [ %9, %5 ]
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %5, label %25

22:                                               ; preds = %14
  %23 = icmp ne i32* %10, null
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %18, %22, %1
  %26 = phi i32 [ 0, %1 ], [ %24, %22 ], [ 0, %18 ]
  ret i32 %26
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #2

declare %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare i32 @X509_digest(%struct.x509_st*, %struct.env_md_st*, i8*, i32*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare i64 @X509_get_version(%struct.x509_st*) local_unnamed_addr #2

declare i8* @X509_get_ext_d2i(%struct.x509_st*, i32, i32*, i32*) local_unnamed_addr #2

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) local_unnamed_addr #2

declare void @BASIC_CONSTRAINTS_free(%struct.BASIC_CONSTRAINTS_st*) local_unnamed_addr #2

declare i32 @X509_get_ext_by_NID(%struct.x509_st*, i32, i32) local_unnamed_addr #2

declare void @PROXY_CERT_INFO_EXTENSION_free(%struct.PROXY_CERT_INFO_EXTENSION_st*) local_unnamed_addr #2

declare void @ASN1_BIT_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) #2

declare i32 @X509_NAME_cmp(%struct.X509_name_st*, %struct.X509_name_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_check_akid(%struct.x509_st*, %struct.AUTHORITY_KEYID_st* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.AUTHORITY_KEYID_st* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %1, i64 0, i32 0
  %6 = load %struct.asn1_string_st*, %struct.asn1_string_st** %5, align 8
  %7 = icmp eq %struct.asn1_string_st* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 11
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %9, align 8
  %11 = icmp eq %struct.asn1_string_st* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @ASN1_OCTET_STRING_cmp(%struct.asn1_string_st* nonnull %6, %struct.asn1_string_st* nonnull %10) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %52

15:                                               ; preds = %12, %8, %4
  %16 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %1, i64 0, i32 2
  %17 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  %18 = icmp eq %struct.asn1_string_st* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = tail call %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st* %0) #7
  %21 = load %struct.asn1_string_st*, %struct.asn1_string_st** %16, align 8
  %22 = tail call i32 @ASN1_INTEGER_cmp(%struct.asn1_string_st* %20, %struct.asn1_string_st* %21) #7
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %52

24:                                               ; preds = %19, %15
  %25 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %1, i64 0, i32 1
  %26 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %25, align 8
  %27 = icmp eq %struct.stack_st_GENERAL_NAME* %26, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %24
  %29 = bitcast %struct.stack_st_GENERAL_NAME* %26 to %struct.stack_st*
  %30 = tail call i64 @sk_num(%struct.stack_st* nonnull %29) #7
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %51, label %35

32:                                               ; preds = %35
  %33 = tail call i64 @sk_num(%struct.stack_st* nonnull %29) #7
  %34 = icmp ult i64 %41, %33
  br i1 %34, label %35, label %51

35:                                               ; preds = %28, %32
  %36 = phi i64 [ %41, %32 ], [ 0, %28 ]
  %37 = tail call i8* @sk_value(%struct.stack_st* nonnull %29, i64 %36) #7
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 4
  %41 = add nuw i64 %36, 1
  br i1 %40, label %42, label %32

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %37, i64 8
  %44 = bitcast i8* %43 to %struct.X509_name_st**
  %45 = load %struct.X509_name_st*, %struct.X509_name_st** %44, align 8
  %46 = icmp eq %struct.X509_name_st* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = tail call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %0) #7
  %49 = tail call i32 @X509_NAME_cmp(%struct.X509_name_st* nonnull %45, %struct.X509_name_st* %48) #7
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %32, %28, %42, %47
  br label %52

52:                                               ; preds = %24, %51, %47, %19, %12, %2
  %53 = phi i32 [ 0, %2 ], [ 30, %12 ], [ 31, %19 ], [ 31, %47 ], [ 0, %51 ], [ 0, %24 ]
  ret i32 %53
}

declare i32 @X509_get_ext_count(%struct.x509_st*) local_unnamed_addr #2

declare %struct.X509_extension_st* @X509_get_ext(%struct.x509_st*, i32) local_unnamed_addr #2

declare i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_check_ca(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %9, %4
  %15 = and i64 %6, 8256
  %16 = icmp eq i64 %15, 8256
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = and i64 %6, 1
  %19 = icmp eq i64 %18, 0
  %20 = lshr i64 %6, 4
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 1
  %23 = select i1 %19, i32 0, i32 %22
  br label %24

24:                                               ; preds = %17, %14, %9, %1
  %25 = phi i32 [ 0, %1 ], [ 0, %9 ], [ 1, %14 ], [ %23, %17 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_check_issued(%struct.x509_st*, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %0) #7
  %4 = tail call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %1) #7
  %5 = tail call i32 @X509_NAME_cmp(%struct.X509_name_st* %3, %struct.X509_name_st* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %42

7:                                                ; preds = %2
  %8 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %42, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %1)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 12
  %15 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %14, align 8
  %16 = icmp eq %struct.AUTHORITY_KEYID_st* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @X509_check_akid(%struct.x509_st* %0, %struct.AUTHORITY_KEYID_st* nonnull %15)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %42

20:                                               ; preds = %13, %17
  %21 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 1024
  %24 = icmp eq i64 %23, 0
  %25 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 2
  %28 = icmp ne i64 %27, 0
  br i1 %24, label %35, label %29

29:                                               ; preds = %20
  br i1 %28, label %30, label %41

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i8
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %41, label %42

35:                                               ; preds = %20
  br i1 %28, label %36, label %41

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %36, %35, %29, %30
  br label %42

42:                                               ; preds = %36, %30, %7, %10, %2, %17, %41
  %43 = phi i32 [ 0, %41 ], [ %18, %17 ], [ 29, %2 ], [ 1, %10 ], [ 1, %7 ], [ 39, %30 ], [ 32, %36 ]
  ret i32 %43
}

declare i32 @ASN1_OCTET_STRING_cmp(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @ASN1_INTEGER_cmp(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #2

declare %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_get_extension_flags(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_get_key_usage(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  br label %13

13:                                               ; preds = %4, %1, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %1 ], [ -1, %4 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_get_extended_key_usage(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  br label %13

13:                                               ; preds = %4, %1, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %1 ], [ -1, %4 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_subject_key_id(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 11
  %6 = load %struct.asn1_string_st*, %struct.asn1_string_st** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %struct.asn1_string_st* [ %6, %4 ], [ null, %1 ]
  ret %struct.asn1_string_st* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_authority_key_id(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 12
  %6 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %5, align 8
  %7 = icmp eq %struct.AUTHORITY_KEYID_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %6, i64 0, i32 0
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %9, align 8
  br label %11

11:                                               ; preds = %8, %4, %1
  %12 = phi %struct.asn1_string_st* [ null, %1 ], [ %10, %8 ], [ null, %4 ]
  ret %struct.asn1_string_st* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_GENERAL_NAME* @X509_get0_authority_issuer(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 12
  %6 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %5, align 8
  %7 = icmp eq %struct.AUTHORITY_KEYID_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %6, i64 0, i32 1
  %10 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %9, align 8
  br label %11

11:                                               ; preds = %8, %4, %1
  %12 = phi %struct.stack_st_GENERAL_NAME* [ null, %1 ], [ %10, %8 ], [ null, %4 ]
  ret %struct.stack_st_GENERAL_NAME* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_authority_serial(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 12
  %6 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %5, align 8
  %7 = icmp eq %struct.AUTHORITY_KEYID_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AUTHORITY_KEYID_st, %struct.AUTHORITY_KEYID_st* %6, i64 0, i32 2
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %9, align 8
  br label %11

11:                                               ; preds = %8, %4, %1
  %12 = phi %struct.asn1_string_st* [ null, %1 ], [ %10, %8 ], [ null, %4 ]
  ret %struct.asn1_string_st* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_get_pathlen(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %4, %1, %9
  %13 = phi i64 [ %11, %9 ], [ -1, %1 ], [ -1, %4 ]
  ret i64 %13
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_ssl_client(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 2
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %48, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i32 %2, 0
  %15 = and i64 %5, 2
  %16 = icmp eq i64 %15, 0
  br i1 %14, label %33, label %17

17:                                               ; preds = %13
  br i1 %16, label %23, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %18, %17
  %24 = and i64 %5, 8256
  %25 = icmp eq i64 %24, 8256
  br i1 %25, label %48, label %26

26:                                               ; preds = %23
  %27 = and i64 %5, 1
  %28 = icmp eq i64 %27, 0
  %29 = lshr i64 %5, 4
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 1
  %32 = select i1 %28, i32 0, i32 %31
  br label %48

33:                                               ; preds = %13
  br i1 %16, label %39, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 136
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %34, %33
  %40 = and i64 %5, 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i8
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %39, %42
  br label %48

48:                                               ; preds = %26, %23, %18, %42, %34, %8, %47
  %49 = phi i32 [ 1, %47 ], [ 0, %8 ], [ 0, %34 ], [ 0, %42 ], [ 0, %18 ], [ 1, %23 ], [ %32, %26 ]
  ret i32 %49
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_ssl_server(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %13
  %16 = and i64 %5, 2
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %18, %15
  %24 = and i64 %5, 8256
  %25 = icmp eq i64 %24, 8256
  br i1 %25, label %50, label %26

26:                                               ; preds = %23
  %27 = and i64 %5, 1
  %28 = icmp eq i64 %27, 0
  %29 = lshr i64 %5, 4
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 1
  %32 = select i1 %28, i32 0, i32 %31
  br label %50

33:                                               ; preds = %13
  %34 = and i64 %5, 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 64
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %36, %33
  %42 = and i64 %5, 2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 168
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %44, %41
  br label %50

50:                                               ; preds = %26, %23, %18, %44, %36, %8, %49
  %51 = phi i32 [ 1, %49 ], [ 0, %8 ], [ 0, %36 ], [ 0, %44 ], [ 0, %18 ], [ 1, %23 ], [ %32, %26 ]
  ret i32 %51
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_ns_ssl_server(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %55, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %13
  %16 = and i64 %5, 2
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %18, %15
  %24 = and i64 %5, 8256
  %25 = icmp eq i64 %24, 8256
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = and i64 %5, 1
  %28 = icmp eq i64 %27, 0
  %29 = lshr i64 %5, 4
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 1
  %32 = select i1 %28, i32 0, i32 %31
  br label %55

33:                                               ; preds = %13
  %34 = and i64 %5, 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 64
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %36, %33
  %42 = and i64 %5, 2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 168
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 32
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %41, %49
  br label %55

55:                                               ; preds = %26, %23, %18, %44, %36, %8, %49, %54
  %56 = phi i32 [ 1, %54 ], [ 0, %49 ], [ %32, %26 ], [ 1, %23 ], [ 0, %18 ], [ 0, %44 ], [ 0, %36 ], [ 0, %8 ]
  ret i32 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_smime_sign(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 4
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %56, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i32 %2, 0
  %15 = and i64 %5, 8
  %16 = icmp ne i64 %15, 0
  br i1 %14, label %41, label %17

17:                                               ; preds = %13
  br i1 %16, label %18, label %23

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 2
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %18, %17
  %24 = and i64 %5, 2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %26, %23
  %32 = and i64 %5, 8256
  %33 = icmp eq i64 %32, 8256
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = and i64 %5, 1
  %36 = icmp eq i64 %35, 0
  %37 = lshr i64 %5, 4
  %38 = trunc i64 %37 to i32
  %39 = and i32 %38, 1
  %40 = select i1 %36, i32 0, i32 %39
  br label %56

41:                                               ; preds = %13
  br i1 %16, label %42, label %47

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 32
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %41, %42
  %48 = and i64 %5, 2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 192
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %50, %47
  br label %56

56:                                               ; preds = %34, %31, %26, %18, %8, %50, %42, %55
  %57 = phi i32 [ 1, %55 ], [ 0, %42 ], [ 0, %50 ], [ %40, %34 ], [ 1, %31 ], [ 0, %26 ], [ 0, %18 ], [ 0, %8 ]
  ret i32 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_smime_encrypt(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 4
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %56, label %13

13:                                               ; preds = %8, %3
  %14 = icmp eq i32 %2, 0
  %15 = and i64 %5, 8
  %16 = icmp ne i64 %15, 0
  br i1 %14, label %41, label %17

17:                                               ; preds = %13
  br i1 %16, label %18, label %23

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 2
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %18, %17
  %24 = and i64 %5, 2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %26, %23
  %32 = and i64 %5, 8256
  %33 = icmp eq i64 %32, 8256
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = and i64 %5, 1
  %36 = icmp eq i64 %35, 0
  %37 = lshr i64 %5, 4
  %38 = trunc i64 %37 to i32
  %39 = and i32 %38, 1
  %40 = select i1 %36, i32 0, i32 %39
  br label %56

41:                                               ; preds = %13
  br i1 %16, label %42, label %47

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 10
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 32
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %41, %42
  %48 = and i64 %5, 2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 32
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %50, %47
  br label %56

56:                                               ; preds = %34, %31, %26, %18, %8, %50, %42, %55
  %57 = phi i32 [ 1, %55 ], [ 0, %42 ], [ 0, %50 ], [ %40, %34 ], [ 1, %31 ], [ 0, %26 ], [ 0, %18 ], [ 0, %8 ]
  ret i32 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @check_purpose_crl_sign(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %4, label %25, label %9

9:                                                ; preds = %3
  br i1 %8, label %15, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %10, %9
  %16 = and i64 %6, 8256
  %17 = icmp eq i64 %16, 8256
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = and i64 %6, 1
  %20 = icmp eq i64 %19, 0
  %21 = lshr i64 %6, 4
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 1
  %24 = select i1 %20, i32 0, i32 %23
  br label %32

25:                                               ; preds = %3
  br i1 %8, label %31, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 2
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26, %25
  br label %32

32:                                               ; preds = %18, %15, %10, %26, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %26 ], [ 0, %10 ], [ 1, %15 ], [ %24, %18 ]
  ret i32 %33
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @no_check(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readnone, i32) #5 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @ocsp_helper(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st* nocapture readonly, i32) #4 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10, %5
  %16 = and i64 %7, 8256
  %17 = icmp eq i64 %16, 8256
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = and i64 %7, 1
  %20 = icmp eq i64 %19, 0
  %21 = lshr i64 %7, 4
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 1
  %24 = select i1 %20, i32 0, i32 %23
  br label %25

25:                                               ; preds = %18, %15, %10, %3
  %26 = phi i32 [ 1, %3 ], [ 0, %10 ], [ 1, %15 ], [ %24, %18 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @check_purpose_timestamp_sign(%struct.x509_purpose_st* nocapture readnone, %struct.x509_st*, i32) #0 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %4, label %25, label %9

9:                                                ; preds = %3
  br i1 %8, label %15, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 4
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %10, %9
  %16 = and i64 %6, 8256
  %17 = icmp eq i64 %16, 8256
  br i1 %17, label %49, label %18

18:                                               ; preds = %15
  %19 = and i64 %6, 1
  %20 = icmp eq i64 %19, 0
  %21 = lshr i64 %6, 4
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 1
  %24 = select i1 %20, i32 0, i32 %23
  br label %49

25:                                               ; preds = %3
  br i1 %8, label %34, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, -193
  %30 = icmp ne i64 %29, 0
  %31 = and i64 %28, 192
  %32 = icmp eq i64 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %26, %25
  %35 = and i64 %6, 4
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 9
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 64
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = tail call i32 @X509_get_ext_by_NID(%struct.x509_st* %1, i32 126, i32 -1) #7
  %43 = icmp sgt i32 %42, -1
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = tail call %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %1, i32 %42) #7
  %46 = tail call i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st* %45) #7
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44, %41
  br label %49

49:                                               ; preds = %44, %18, %15, %10, %34, %37, %26, %48
  %50 = phi i32 [ 1, %48 ], [ 0, %44 ], [ 0, %26 ], [ 0, %37 ], [ 0, %34 ], [ 0, %10 ], [ 1, %15 ], [ %24, %18 ]
  ret i32 %50
}

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_sort(%struct.stack_st*) local_unnamed_addr #2

declare i32 @sk_find(%struct.stack_st*, i64*, i8*, i32 (i32 (i8**, i8**)*, i8**, i8**)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i32 @sk_X509_PURPOSE_call_cmp_func(i32 (i8**, i8**)* nocapture, i8** nocapture readonly, i8** nocapture readonly) #6 {
  %4 = alloca %struct.x509_purpose_st*, align 8
  %5 = alloca %struct.x509_purpose_st*, align 8
  %6 = bitcast %struct.x509_purpose_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = bitcast i8** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.x509_purpose_st** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %struct.x509_purpose_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.x509_purpose_st** %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i32 (i8**, i8**)* %0 to i32 (%struct.x509_purpose_st**, %struct.x509_purpose_st**)*
  %15 = call i32 %14(%struct.x509_purpose_st** nonnull %4, %struct.x509_purpose_st** nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i32 %15
}

declare %struct.stack_st* @sk_new(i32 (i8**, i8**)*) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_PURPOSE_call_free_func(void (i8*)* nocapture, i8*) #6 {
  %3 = bitcast void (i8*)* %0 to void (%struct.x509_purpose_st*)*
  %4 = bitcast i8* %1 to %struct.x509_purpose_st*
  tail call void %3(%struct.x509_purpose_st* %4) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_ASN1_OBJECT_call_free_func(void (i8*)* nocapture, i8*) #6 {
  %3 = bitcast void (i8*)* %0 to void (%struct.asn1_object_st*)*
  %4 = bitcast i8* %1 to %struct.asn1_object_st*
  tail call void %3(%struct.asn1_object_st* %4) #7
  ret void
}

declare i32 @DIST_POINT_set_dpname(%struct.DIST_POINT_NAME_st*, %struct.X509_name_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
