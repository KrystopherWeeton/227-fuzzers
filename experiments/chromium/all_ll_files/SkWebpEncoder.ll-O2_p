; ModuleID = '../../third_party/skia/src/images/SkWebpEncoder.cpp'
source_filename = "../../third_party/skia/src/images/SkWebpEncoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.WebPConfig = type { i32, float, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.SkWStream = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkWebpEncoder::Options" = type { i32, float }
%struct.WebPPicture = type { i32, i32, i32, i32, i8*, i8*, i8*, i32, i32, i8*, i32, [2 x i32], i32*, i32, [3 x i32], i32 (i8*, i64, %struct.WebPPicture*)*, i8*, i32, i8*, %struct.WebPAuxStats*, i32, i32 (i32, %struct.WebPPicture*)*, i8*, [3 x i32], i8*, i8*, [8 x i32], i8*, i8*, [2 x i8*] }
%struct.WebPAuxStats = type { i32, [5 x float], [3 x i32], [2 x i32], [3 x [4 x i32]], [4 x i32], [4 x i32], [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkBitmap = type { %class.sk_sp.9, %class.SkPixmap, %class.sk_sp.10 }
%class.sk_sp.9 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.10 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.WebPData = type { i8*, i64 }
%struct.WebPMux = type opaque

@__const._ZN13SkWebpEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE.webp_config = private unnamed_addr constant %struct.WebPConfig { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, align 4
@.str = private unnamed_addr constant [5 x i8] c"ICCP\00", align 1
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkWebpEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkWebpEncoder::Options"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %struct.skcms_TransferFunction, align 4
  %5 = alloca %struct.skcms_Matrix3x3, align 4
  %6 = alloca %struct.WebPConfig, align 4
  %7 = alloca %struct.WebPPicture, align 8
  %8 = alloca %class.sk_sp.7, align 8
  %9 = alloca %class.SkDynamicMemoryWStream, align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %struct.SkImageInfo, align 16
  %12 = alloca %class.sk_sp.7, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.WebPData*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %struct.WebPData*
  %17 = alloca %struct.WebPData, align 8
  %18 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %262, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %19, 536870911
  %25 = add i32 %23, -1
  %26 = icmp ugt i32 %25, 536870910
  %27 = or i1 %24, %26
  br i1 %27, label %262, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 0
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp ne i32 %33, 0
  %35 = and i1 %31, %34
  br i1 %35, label %36, label %262

36:                                               ; preds = %28
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %262, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = sext i32 %19 to i64
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0
  %45 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %44) #6
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %46, %43
  %48 = icmp ult i64 %47, 2147483648
  %49 = select i1 %48, i64 %47, i64 0
  %50 = icmp ult i64 %42, %49
  br i1 %50, label %262, label %51

51:                                               ; preds = %40
  %52 = load i32, i32* %29, align 8
  switch i32 %52, label %53 [
    i32 0, label %54
    i32 1, label %262
    i32 2, label %54
    i32 3, label %54
    i32 4, label %54
    i32 5, label %54
    i32 6, label %54
    i32 7, label %54
    i32 9, label %54
    i32 8, label %54
    i32 10, label %54
    i32 11, label %54
    i32 12, label %54
    i32 13, label %54
    i32 14, label %54
    i32 15, label %54
    i32 18, label %262
    i32 19, label %54
    i32 16, label %262
    i32 17, label %54
    i32 20, label %54
  ]

53:                                               ; preds = %51
  tail call void @llvm.trap() #6
  unreachable

54:                                               ; preds = %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51
  %55 = load i8*, i8** %37, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %262, label %57

57:                                               ; preds = %54
  %58 = bitcast %struct.WebPConfig* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 116, i8* nonnull %58) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 bitcast (%struct.WebPConfig* @__const._ZN13SkWebpEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE.webp_config to i8*), i64 116, i1 false)
  %59 = getelementptr inbounds %"struct.SkWebpEncoder::Options", %"struct.SkWebpEncoder::Options"* %2, i64 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = call i32 @WebPConfigInitInternal(%struct.WebPConfig* nonnull %6, i32 0, float %60, i32 527) #6
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %260, label %63

63:                                               ; preds = %57
  %64 = bitcast %struct.WebPPicture* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %64) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 256, i1 false)
  %65 = call i32 @WebPPictureInitInternal(%struct.WebPPicture* nonnull %7, i32 527) #6
  %66 = load i32, i32* %18, align 4
  %67 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %7, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  %68 = load i32, i32* %22, align 4
  %69 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %7, i64 0, i32 3
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %7, i64 0, i32 15
  store i32 (i8*, i64, %struct.WebPPicture*)* @_ZL13stream_writerPKhmPK11WebPPicture, i32 (i8*, i64, %struct.WebPPicture*)** %70, align 8
  %71 = getelementptr inbounds %"struct.SkWebpEncoder::Options", %"struct.SkWebpEncoder::Options"* %2, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %6, i64 0, i32 0
  %75 = xor i1 %73, true
  %76 = zext i1 %75 to i32
  %77 = select i1 %73, i32 3, i32 0
  %78 = xor i1 %73, true
  %79 = zext i1 %78 to i32
  store i32 %76, i32* %74, align 4
  %80 = getelementptr inbounds %struct.WebPConfig, %struct.WebPConfig* %6, i64 0, i32 2
  store i32 %77, i32* %80, align 4
  %81 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %7, i64 0, i32 0
  store i32 %79, i32* %81, align 8
  %82 = bitcast %class.sk_sp.7* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #6
  %83 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %8, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %83, align 8
  %84 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8, !noalias !2
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %63
  store %class.SkData* null, %class.SkData** %83, align 8, !alias.scope !2
  br label %99

88:                                               ; preds = %63
  %89 = bitcast %struct.skcms_TransferFunction* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %89) #6, !noalias !2
  %90 = bitcast %struct.skcms_Matrix3x3* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %89, i8 -1, i64 28, i1 false) #6, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %90) #6, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %90, i8 -1, i64 36, i1 false) #6, !noalias !2
  %91 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* nonnull %85, %struct.skcms_TransferFunction* nonnull %4) #6, !noalias !2
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* nonnull %85, %struct.skcms_Matrix3x3* nonnull %5) #6, !noalias !2
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  call void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.7* nonnull sret %8, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %4, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %5) #6
  %95 = load %class.SkData*, %class.SkData** %83, align 8
  br label %97

96:                                               ; preds = %92, %88
  store %class.SkData* null, %class.SkData** %83, align 8, !alias.scope !2
  br label %97

97:                                               ; preds = %96, %94
  %98 = phi %class.SkData* [ null, %96 ], [ %95, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %90) #6, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %89) #6, !noalias !2
  br label %99

99:                                               ; preds = %87, %97
  %100 = phi %class.SkData* [ null, %87 ], [ %98, %97 ]
  %101 = bitcast %class.SkDynamicMemoryWStream* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #6
  %102 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %9, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %9, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %104 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #6
  %105 = icmp eq %class.SkData* %100, null
  %106 = bitcast %class.SkWStream* %0 to i8*
  %107 = select i1 %105, i8* %106, i8* %101
  %108 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %7, i64 0, i32 16
  store i8* %107, i8** %108, align 8
  %109 = load i32, i32* %29, align 8
  %110 = load i32, i32* %32, align 4
  %111 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %111) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #6
  %112 = icmp eq i32 %109, 5
  br i1 %112, label %179, label %113

113:                                              ; preds = %99
  %114 = icmp ne i32 %110, 2
  %115 = icmp eq i32 %109, 4
  %116 = and i1 %115, %114
  br i1 %116, label %179, label %117

117:                                              ; preds = %113
  %118 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #6
  %119 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1, i32 0
  %121 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %122 = bitcast %struct.SkISize* %121 to i64*
  %123 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %123, i8 -86, i64 24, i1 false)
  %124 = load i64, i64* %122, align 8, !noalias !5
  %125 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8, !noalias !8
  %126 = icmp eq %class.SkColorSpace* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %117
  %128 = bitcast %struct.SkImageInfo* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901892>, <2 x i64>* %128, align 16, !alias.scope !13
  %129 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %130 = bitcast %struct.SkISize* %129 to i64*
  store i64 %124, i64* %130, align 16, !alias.scope !13
  br label %145

131:                                              ; preds = %117
  %132 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 1 monotonic, !noalias !8
  %135 = ptrtoint %class.SkColorSpace* %125 to i64
  %136 = atomicrmw add i32* %133, i32 1 monotonic, !noalias !18
  %137 = bitcast %struct.SkImageInfo* %11 to i64*
  store i64 %135, i64* %137, align 16, !alias.scope !13
  %138 = bitcast i32* %132 to i64*
  store i64 12884901892, i64* %138, align 8, !alias.scope !13
  %139 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %140 = bitcast %struct.SkISize* %139 to i64*
  store i64 %124, i64* %140, align 16, !alias.scope !13
  %141 = atomicrmw add i32* %133, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %131
  %144 = bitcast %class.SkColorSpace* %125 to i8*
  call void @_ZdlPv(i8* %144) #7
  br label %145

145:                                              ; preds = %127, %131, %143
  %146 = load i32, i32* %120, align 16
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0
  %149 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %148) #6
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %150, %147
  %152 = icmp ult i64 %151, 2147483648
  %153 = select i1 %152, i64 %151, i64 0
  %154 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %10, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i64 %153) #6
  br i1 %154, label %155, label %166

155:                                              ; preds = %145
  %156 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 2
  %157 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = call zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap* %1, %struct.SkImageInfo* dereferenceable(24) %156, i8* %158, i64 %160, i32 0, i32 0) #6
  %162 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %10, i64 0, i32 1
  %163 = xor i1 %161, true
  %164 = zext i1 %163 to i32
  %165 = select i1 %161, %class.SkPixmap* %162, %class.SkPixmap* %1
  br label %166

166:                                              ; preds = %155, %145
  %167 = phi i32 [ 1, %145 ], [ %164, %155 ]
  %168 = phi %class.SkPixmap* [ %1, %145 ], [ %165, %155 ]
  %169 = load %class.SkColorSpace*, %class.SkColorSpace** %119, align 16
  %170 = icmp eq %class.SkColorSpace* %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = bitcast %class.SkColorSpace* %169 to i8*
  call void @_ZdlPv(i8* %176) #7
  br label %177

177:                                              ; preds = %166, %171, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #6
  %178 = icmp eq i32 %167, 0
  br i1 %178, label %179, label %248

179:                                              ; preds = %99, %113, %177
  %180 = phi i32 (%struct.WebPPicture*, i8*, i32)* [ @WebPPictureImportRGBA, %113 ], [ @WebPPictureImportRGBA, %177 ], [ @WebPPictureImportRGBX, %99 ]
  %181 = phi %class.SkPixmap* [ %1, %113 ], [ %168, %177 ], [ %1, %99 ]
  %182 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %181, i64 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %181, i64 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = trunc i64 %185 to i32
  %187 = call i32 %180(%struct.WebPPicture* nonnull %7, i8* %183, i32 %186) #6, !callees !23
  %188 = icmp eq i32 %187, 0
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %111) #6
  br i1 %188, label %249, label %189

189:                                              ; preds = %179
  %190 = call i32 @WebPEncode(%struct.WebPConfig* nonnull %6, %struct.WebPPicture* nonnull %7) #6
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %249, label %192

192:                                              ; preds = %189
  %193 = load %class.SkData*, %class.SkData** %83, align 8
  %194 = icmp eq %class.SkData* %193, null
  br i1 %194, label %247, label %195

195:                                              ; preds = %192
  %196 = bitcast %class.sk_sp.7* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #6
  %197 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %12, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %197, align 8
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.7* nonnull sret %12, %class.SkDynamicMemoryWStream* nonnull %9) #6
  %198 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #6
  %199 = load %class.SkData*, %class.SkData** %197, align 8
  %200 = getelementptr inbounds %class.SkData, %class.SkData* %199, i64 0, i32 3
  %201 = bitcast i8** %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  store <2 x i64> %202, <2 x i64>* %13, align 16
  %203 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #6
  %204 = load %class.SkData*, %class.SkData** %83, align 8
  %205 = getelementptr inbounds %class.SkData, %class.SkData* %204, i64 0, i32 3
  %206 = bitcast i8** %205 to <2 x i64>*
  %207 = load <2 x i64>, <2 x i64>* %206, align 8
  store <2 x i64> %207, <2 x i64>* %15, align 16
  %208 = call %struct.WebPMux* @WebPNewInternal(i32 264) #6
  %209 = call i32 @WebPMuxSetImage(%struct.WebPMux* %208, %struct.WebPData* nonnull %14, i32 0) #6
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %211, label %232

211:                                              ; preds = %195
  %212 = call i32 @WebPMuxSetChunk(%struct.WebPMux* %208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %struct.WebPData* nonnull %16, i32 0) #6
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %232

214:                                              ; preds = %211
  %215 = bitcast %struct.WebPData* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #6
  %216 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %17, i64 0, i32 0
  %217 = bitcast %struct.WebPData* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 -86, i64 16, i1 false)
  %218 = call i32 @WebPMuxAssemble(%struct.WebPMux* %208, %struct.WebPData* nonnull %17) #6
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %230

220:                                              ; preds = %214
  %221 = getelementptr inbounds %struct.WebPData, %struct.WebPData* %17, i64 0, i32 1
  %222 = load i8*, i8** %216, align 8
  %223 = load i64, i64* %221, align 8
  %224 = bitcast %class.SkWStream* %0 to i1 (%class.SkWStream*, i8*, i64)***
  %225 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %224, align 8
  %226 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %225, i64 2
  %227 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %226, align 8
  %228 = call zeroext i1 %227(%class.SkWStream* %0, i8* %222, i64 %223) #6
  %229 = load i8*, i8** %216, align 8
  call void @WebPFree(i8* %229) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 16, i1 false) #6
  br label %230

230:                                              ; preds = %214, %220
  %231 = phi i32 [ 0, %220 ], [ 1, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #6
  br label %232

232:                                              ; preds = %211, %195, %230
  %233 = phi i32 [ %231, %230 ], [ 1, %195 ], [ 1, %211 ]
  %234 = icmp eq %struct.WebPMux* %208, null
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @WebPMuxDelete(%struct.WebPMux* nonnull %208) #6
  br label %236

236:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #6
  %237 = load %class.SkData*, %class.SkData** %197, align 8
  %238 = icmp eq %class.SkData* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %class.SkData, %class.SkData* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 -1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %237) #6
  %244 = bitcast %class.SkData* %237 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %244) #6
  br label %245

245:                                              ; preds = %236, %239, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #6
  %246 = icmp eq i32 %233, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %192, %245
  br label %249

248:                                              ; preds = %177
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %111) #6
  br label %249

249:                                              ; preds = %179, %248, %189, %245, %247
  %250 = phi i1 [ true, %247 ], [ false, %245 ], [ false, %179 ], [ false, %189 ], [ false, %248 ]
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #6
  %251 = load %class.SkData*, %class.SkData** %83, align 8
  %252 = icmp eq %class.SkData* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %class.SkData, %class.SkData* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 -1 acq_rel
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %259

257:                                              ; preds = %253
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %251) #6
  %258 = bitcast %class.SkData* %251 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %258) #6
  br label %259

259:                                              ; preds = %249, %253, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #6
  call void @WebPPictureFree(%struct.WebPPicture* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %64) #6
  br label %260

260:                                              ; preds = %57, %259
  %261 = phi i1 [ %250, %259 ], [ false, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 116, i8* nonnull %58) #6
  br label %262

262:                                              ; preds = %40, %51, %51, %51, %3, %21, %28, %36, %54, %260
  %263 = phi i1 [ %261, %260 ], [ false, %40 ], [ false, %54 ], [ false, %36 ], [ false, %28 ], [ false, %21 ], [ false, %3 ], [ false, %51 ], [ false, %51 ], [ false, %51 ]
  ret i1 %263
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL13stream_writerPKhmPK11WebPPicture(i8*, i64, %struct.WebPPicture* nocapture readonly) #0 {
  %4 = getelementptr inbounds %struct.WebPPicture, %struct.WebPPicture* %2, i64 0, i32 16
  %5 = bitcast i8** %4 to %class.SkWStream**
  %6 = load %class.SkWStream*, %class.SkWStream** %5, align 8
  %7 = bitcast %class.SkWStream* %6 to i1 (%class.SkWStream*, i8*, i64)***
  %8 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, i64 2
  %10 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkWStream* %6, i8* %0, i64 %1) #6
  %12 = zext i1 %11 to i32
  ret i32 %12
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare i32 @WebPPictureImportRGBX(%struct.WebPPicture*, i8*, i32) local_unnamed_addr #2

declare i32 @WebPPictureImportRGBA(%struct.WebPPicture*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare i32 @WebPEncode(%struct.WebPConfig*, %struct.WebPPicture*) local_unnamed_addr #2

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.7* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

declare i32 @WebPMuxSetImage(%struct.WebPMux*, %struct.WebPData*, i32) local_unnamed_addr #2

declare i32 @WebPMuxSetChunk(%struct.WebPMux*, i8*, %struct.WebPData*, i32) local_unnamed_addr #2

declare i32 @WebPMuxAssemble(%struct.WebPMux*, %struct.WebPData*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i32 @WebPConfigInitInternal(%struct.WebPConfig*, i32, float, i32) local_unnamed_addr #2

declare i32 @WebPPictureInitInternal(%struct.WebPPicture*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #2

declare void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.7* sret, %struct.skcms_TransferFunction* dereferenceable(28), %struct.skcms_Matrix3x3* dereferenceable(36)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #2

declare %struct.WebPMux* @WebPNewInternal(i32) local_unnamed_addr #2

declare void @WebPFree(i8*) local_unnamed_addr #2

declare void @WebPMuxDelete(%struct.WebPMux*) local_unnamed_addr #2

declare void @WebPPictureFree(%struct.WebPPicture*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL20icc_from_color_spaceRK11SkImageInfo: argument 0"}
!4 = distinct !{!4, !"_ZL20icc_from_color_spaceRK11SkImageInfo"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = distinct !{!11, !12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!15 = distinct !{!15, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!16 = distinct !{!16, !17, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!17 = distinct !{!17, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!18 = !{!19, !21, !16}
!19 = distinct !{!19, !20, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!21 = distinct !{!21, !22, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!22 = distinct !{!22, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!23 = !{i32 (%struct.WebPPicture*, i8*, i32)* @WebPPictureImportRGBA, i32 (%struct.WebPPicture*, i8*, i32)* @WebPPictureImportRGBX}
