; ModuleID = '../../components/autofill/core/browser/geo/subkey_requester.cc'
source_filename = "../../components/autofill/core/browser/geo/subkey_requester.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::SubKeyRequester" = type { %"class.autofill::LoadRulesListener", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.autofill::AddressValidator" }
%"class.autofill::LoadRulesListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.autofill::SubKeyRequester::Request"* }
%"class.autofill::SubKeyRequester::Request" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::AddressValidator" = type { i32 (...)**, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.autofill::LoadRulesListener"*, %"class.std::__1::map.73", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.i18n::addressinput::PreloadSupplier"* }
%"class.i18n::addressinput::PreloadSupplier" = type { %"class.i18n::addressinput::Supplier", %"class.std::__1::unique_ptr.7", %"class.std::__1::set", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector", %"class.std::__1::map" }
%"class.i18n::addressinput::Supplier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.i18n::addressinput::Retriever"* }
%"class.i18n::addressinput::Retriever" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.i18n::addressinput::IndexMap"* }
%"class.i18n::addressinput::IndexMap" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::Rule"**, %"class.i18n::addressinput::Rule"**, %"class.std::__1::__compressed_pair.27" }
%"class.i18n::addressinput::Rule" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.i18n::addressinput::Rule"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.autofill::InputSuggester"* }
%"class.autofill::InputSuggester" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.i18n::addressinput::AddressNormalizer"* }
%"class.i18n::addressinput::AddressNormalizer" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.i18n::addressinput::AddressValidator"* }
%"class.i18n::addressinput::AddressValidator" = type { %"class.i18n::addressinput::Supplier"* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.i18n::addressinput::Callback"* }
%"class.i18n::addressinput::Callback" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.i18n::addressinput::Callback.69"* }
%"class.i18n::addressinput::Callback.69" = type opaque
%"class.std::__1::map.73" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.83" }
%"struct.std::__1::atomic.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__cxx_atomic_impl.86" }
%"struct.std::__1::__cxx_atomic_impl.86" = type { %"struct.std::__1::__cxx_atomic_base_impl.87" }
%"struct.std::__1::__cxx_atomic_base_impl.87" = type { i8 }
%"class.i18n::addressinput::Source" = type { i32 (...)** }
%"class.i18n::addressinput::Storage" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.100 }
%class.scoped_refptr.100 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.101", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.101" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.105" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.autofill::(anonymous namespace)::SubKeyRequest" = type { %"class.autofill::SubKeyRequester::Request", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::AddressValidator"*, %"class.base::OnceCallback", i8, %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.105", %"class.base::WeakPtrFactory.106" }
%"class.base::WeakPtrFactory.106" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.110 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.111" }>
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.111", [4 x i8] }>
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.123" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::basic_string"* }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.115 }
%class.scoped_refptr.115 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZTVN8autofill15SubKeyRequesterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::SubKeyRequester"*)* @_ZN8autofill15SubKeyRequesterD2Ev to i8*), i8* bitcast (void (%"class.autofill::SubKeyRequester"*)* @_ZN8autofill15SubKeyRequesterD0Ev to i8*), i8* bitcast (void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*, i1)* @_ZN8autofill15SubKeyRequester30OnAddressValidationRulesLoadedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb to i8*), i8* bitcast (void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)* @_ZN8autofill15SubKeyRequester18LoadRulesForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8
@_ZTVN8autofill12_GLOBAL__N_113SubKeyRequestE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)* @_ZN8autofill12_GLOBAL__N_113SubKeyRequest13OnRulesLoadedEv to i8*), i8* bitcast (void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)* @_ZN8autofill12_GLOBAL__N_113SubKeyRequestD2Ev to i8*), i8* bitcast (void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)* @_ZN8autofill12_GLOBAL__N_113SubKeyRequestD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"SubKeyRequest\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"../../components/autofill/core/browser/geo/subkey_requester.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN8autofill15SubKeyRequesterC1ENSt3__110unique_ptrIN4i18n12addressinput6SourceENS1_14default_deleteIS5_EEEENS2_INS4_7StorageENS6_IS9_EEEE = hidden unnamed_addr alias void (%"class.autofill::SubKeyRequester"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*), void (%"class.autofill::SubKeyRequester"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*)* @_ZN8autofill15SubKeyRequesterC2ENSt3__110unique_ptrIN4i18n12addressinput6SourceENS1_14default_deleteIS5_EEEENS2_INS4_7StorageENS6_IS9_EEEE
@_ZN8autofill15SubKeyRequesterD1Ev = hidden unnamed_addr alias void (%"class.autofill::SubKeyRequester"*), void (%"class.autofill::SubKeyRequester"*)* @_ZN8autofill15SubKeyRequesterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequesterC2ENSt3__110unique_ptrIN4i18n12addressinput6SourceENS1_14default_deleteIS5_EEEENS2_INS4_7StorageENS6_IS9_EEEE(%"class.autofill::SubKeyRequester"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8autofill15SubKeyRequesterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  tail call void @_ZN8autofill16AddressValidatorC1ENSt3__110unique_ptrIN4i18n12addressinput6SourceENS1_14default_deleteIS5_EEEENS2_INS4_7StorageENS6_IS9_EEEEPNS_17LoadRulesListenerE(%"class.autofill::AddressValidator"* %7, %"class.i18n::addressinput::Source"* %1, %"class.i18n::addressinput::Storage"* %2, %"class.autofill::LoadRulesListener"* %4) #9
  ret void
}

declare void @_ZN8autofill16AddressValidatorC1ENSt3__110unique_ptrIN4i18n12addressinput6SourceENS1_14default_deleteIS5_EEEENS2_INS4_7StorageENS6_IS9_EEEEPNS_17LoadRulesListenerE(%"class.autofill::AddressValidator"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*, %"class.autofill::LoadRulesListener"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequesterD2Ev(%"class.autofill::SubKeyRequester"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8autofill15SubKeyRequesterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  tail call void @_ZN8autofill16AddressValidatorD1Ev(%"class.autofill::AddressValidator"* %3) #9
  %4 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %13, align 8
  store %"class.autofill::SubKeyRequester::Request"* null, %"class.autofill::SubKeyRequester::Request"** %13, align 8
  %15 = icmp eq %"class.autofill::SubKeyRequester::Request"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.autofill::SubKeyRequester::Request"* %14 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %18 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %18, i64 2
  %20 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %19, align 8
  tail call void %20(%"class.autofill::SubKeyRequester::Request"* nonnull %14) #9
  br label %21

21:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8autofill16AddressValidatorD1Ev(%"class.autofill::AddressValidator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequesterD0Ev(%"class.autofill::SubKeyRequester"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8autofill15SubKeyRequesterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  tail call void @_ZN8autofill16AddressValidatorD1Ev(%"class.autofill::AddressValidator"* %3) #9
  %4 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %9, %1
  %13 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %13, align 8
  store %"class.autofill::SubKeyRequester::Request"* null, %"class.autofill::SubKeyRequester::Request"** %13, align 8
  %15 = icmp eq %"class.autofill::SubKeyRequester::Request"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.autofill::SubKeyRequester::Request"* %14 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %18 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %18, i64 2
  %20 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %19, align 8
  tail call void %20(%"class.autofill::SubKeyRequester::Request"* nonnull %14) #9
  br label %21

21:                                               ; preds = %12, %16
  %22 = bitcast %"class.autofill::SubKeyRequester"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequester25StartRegionSubKeysRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_iN4base12OnceCallbackIFvRKNS1_6vectorIS7_NS5_IS7_EEEESG_EEE(%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.105", align 8
  %7 = alloca %"class.base::OnceCallback.105", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::OnceCallback.105", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  %12 = ptrtoint %"class.autofill::AddressValidator"* %11 to i64
  %13 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call i8* @_Znwm(i64 104) #10
  %15 = bitcast i8* %14 to %"class.autofill::(anonymous namespace)::SubKeyRequest"*
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = bitcast %"class.base::OnceCallback.105"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast %"class.base::OnceCallback.105"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill12_GLOBAL__N_113SubKeyRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %14, i64 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %5
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %29, i64 24, i1 false) #9
  br label %36

30:                                               ; preds = %5
  %31 = bitcast i8* %23 to %"class.std::__1::basic_string"*
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %33, i64 %35) #9
  br label %36

36:                                               ; preds = %30, %28
  %37 = getelementptr inbounds i8, i8* %14, i64 32
  %38 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %43, i64 24, i1 false) #9
  br label %50

44:                                               ; preds = %36
  %45 = bitcast i8* %37 to %"class.std::__1::basic_string"*
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #9
  br label %50

50:                                               ; preds = %44, %42
  %51 = getelementptr inbounds i8, i8* %14, i64 56
  %52 = bitcast i8* %51 to i64*
  store i64 %12, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %14, i64 64
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast i8* %53 to i64*
  store i64 %18, i64* %55, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8
  %56 = getelementptr inbounds i8, i8* %14, i64 72
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %14, i64 80
  %58 = ptrtoint i8* %14 to i64
  %59 = tail call i8* @_Znwm(i64 56) #10, !noalias !2
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %62, align 8, !noalias !2
  %63 = getelementptr inbounds i8, i8* %59, i64 48
  %64 = bitcast i8* %63 to i64*
  store i64 %58, i64* %64, align 8, !noalias !2
  %65 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %7, i64 0, i32 0, i32 0, i32 0
  %66 = ptrtoint i8* %59 to i64
  %67 = bitcast i8* %57 to i64*
  store i64 %66, i64* %67, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %68 = getelementptr inbounds i8, i8* %14, i64 88
  %69 = bitcast i8* %68 to %"class.base::internal::WeakPtrFactoryBase"*
  %70 = ptrtoint i8* %57 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %69, i64 %70) #9
  %71 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #9
  %72 = call dereferenceable(8) %class.scoped_refptr.110* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #9
  %73 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %72, i64 0, i32 0
  %74 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %73, align 8
  %75 = bitcast %"class.base::SequencedTaskRunner"* %74 to %"class.base::TaskRunner"*
  %76 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 44) #9
  %77 = bitcast i8* %57 to %"class.base::internal::BindStateBase"**
  %78 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %77, align 8, !noalias !7
  %79 = icmp eq %"class.base::internal::BindStateBase"* %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %50
  %81 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8, !alias.scope !7
  br label %90

82:                                               ; preds = %50
  %83 = bitcast i8* %57 to %"class.base::internal::CancelableCallbackImpl"*
  %84 = bitcast %"class.base::OnceCallback.105"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #9, !noalias !7
  %85 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8, !noalias !7
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %83, %"class.base::OnceCallback.105"* nonnull %6) #9, !noalias !7
  %86 = bitcast %"class.base::OnceCallback.105"* %6 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !7
  %88 = bitcast %"class.base::OnceCallback.105"* %9 to i64*
  store i64 %87, i64* %88, align 8, !alias.scope !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8, !noalias !7
  %89 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #9, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #9, !noalias !7
  br label %90

90:                                               ; preds = %80, %82
  %91 = sext i32 %3 to i64
  %92 = mul nsw i64 %91, 1000000
  %93 = bitcast %"class.base::SequencedTaskRunner"* %74 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.105"*, i64)***
  %94 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.105"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.105"*, i64)*** %93, align 8
  %95 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.105"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.105"*, i64)** %94, align 8
  %96 = call zeroext i1 %95(%"class.base::TaskRunner"* %75, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback.105"* nonnull %9, i64 %92) #9
  %97 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %99 = call zeroext i1 @_ZN8autofill16AddressValidator23AreRulesLoadedForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressValidator"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  br i1 %99, label %145, label %100

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %102 = icmp eq %"class.std::__1::basic_string"* %101, %1
  br i1 %102, label %130, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i8, i8* %25, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %107, label %120, label %110

110:                                              ; preds = %103
  br i1 %109, label %114, label %111

111:                                              ; preds = %110
  %112 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #9
  br label %130

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %101, i8* %116, i64 %118) #9
  br label %130

120:                                              ; preds = %103
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %126 = zext i8 %108 to i64
  %127 = select i1 %109, i8* %122, i8* %125
  %128 = select i1 %109, i64 %124, i64 %126
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %101, i8* %127, i64 %128) #9
  br label %130

130:                                              ; preds = %100, %111, %114, %120
  %131 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %131, align 8
  %133 = bitcast %"class.autofill::SubKeyRequester::Request"** %131 to i8**
  store i8* %14, i8** %133, align 8
  %134 = icmp eq %"class.autofill::SubKeyRequester::Request"* %132, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.autofill::SubKeyRequester::Request"* %132 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %137 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %137, i64 2
  %139 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %138, align 8
  call void %139(%"class.autofill::SubKeyRequester::Request"* nonnull %132) #9
  br label %140

140:                                              ; preds = %135, %130
  %141 = bitcast %"class.autofill::SubKeyRequester"* %0 to void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)***
  %142 = load void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)**, void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)*, void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)** %142, i64 3
  %144 = load void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)*, void (%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"*)** %143, align 8
  call void %144(%"class.autofill::SubKeyRequester"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  br label %152

145:                                              ; preds = %90
  %146 = bitcast i8* %14 to void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)***
  %147 = load void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)**, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*** %146, align 8
  %148 = load void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)** %147, align 8
  call void %148(%"class.autofill::(anonymous namespace)::SubKeyRequest"* nonnull %15) #9
  %149 = load void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)**, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*** %146, align 8
  %150 = getelementptr inbounds void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)** %149, i64 2
  %151 = load void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)** %150, align 8
  call void %151(%"class.autofill::(anonymous namespace)::SubKeyRequest"* nonnull %15) #9
  br label %152

152:                                              ; preds = %140, %145
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill15SubKeyRequester23AreRulesLoadedForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  %4 = tail call zeroext i1 @_ZN8autofill16AddressValidator23AreRulesLoadedForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressValidator"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  ret i1 %4
}

declare zeroext i1 @_ZN8autofill16AddressValidator23AreRulesLoadedForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequester18LoadRulesForRegionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::SubKeyRequester"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 3
  tail call void @_ZN8autofill16AddressValidator9LoadRulesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressValidator"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  ret void
}

declare void @_ZN8autofill16AddressValidator9LoadRulesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequester30OnAddressValidationRulesLoadedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.autofill::SubKeyRequester"* nocapture, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %4, align 8
  %6 = icmp eq %"class.autofill::SubKeyRequester::Request"* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %18 = zext i8 %11 to i64
  %19 = select i1 %12, i8* %14, i8* %17
  %20 = select i1 %12, i64 %16, i64 %18
  %21 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %33

30:                                               ; preds = %7
  %31 = zext i8 %23 to i64
  %32 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %33

33:                                               ; preds = %30, %25
  %34 = phi i64 [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %29, %25 ], [ %32, %30 ]
  %36 = icmp ult i64 %20, %34
  %37 = select i1 %36, i64 %20, i64 %34
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call i32 @bcmp(i8* %35, i8* %19, i64 %37)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %39, %33
  %43 = icmp uge i64 %34, %20
  %44 = xor i1 %36, true
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = bitcast %"class.autofill::SubKeyRequester::Request"* %5 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %48 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %47, align 8
  %49 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %48, align 8
  tail call void %49(%"class.autofill::SubKeyRequester::Request"* nonnull %5) #9
  br label %50

50:                                               ; preds = %3, %42, %39, %46
  %51 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %59, align 8
  br label %62

60:                                               ; preds = %50
  %61 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  store i8 0, i8* %61, align 1
  store i8 0, i8* %53, align 1
  br label %62

62:                                               ; preds = %56, %60
  %63 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %4, align 8
  store %"class.autofill::SubKeyRequester::Request"* null, %"class.autofill::SubKeyRequester::Request"** %4, align 8
  %64 = icmp eq %"class.autofill::SubKeyRequester::Request"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.autofill::SubKeyRequester::Request"* %63 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %67 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %67, i64 2
  %69 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %68, align 8
  tail call void %69(%"class.autofill::SubKeyRequester::Request"* nonnull %63) #9
  br label %70

70:                                               ; preds = %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15SubKeyRequester23CancelPendingGetSubKeysEv(%"class.autofill::SubKeyRequester"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %12, align 1
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.autofill::SubKeyRequester", %"class.autofill::SubKeyRequester"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.autofill::SubKeyRequester::Request"*, %"class.autofill::SubKeyRequester::Request"** %14, align 8
  store %"class.autofill::SubKeyRequester::Request"* null, %"class.autofill::SubKeyRequester::Request"** %14, align 8
  %16 = icmp eq %"class.autofill::SubKeyRequester::Request"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.autofill::SubKeyRequester::Request"* %15 to void (%"class.autofill::SubKeyRequester::Request"*)***
  %19 = load void (%"class.autofill::SubKeyRequester::Request"*)**, void (%"class.autofill::SubKeyRequester::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %19, i64 2
  %21 = load void (%"class.autofill::SubKeyRequester::Request"*)*, void (%"class.autofill::SubKeyRequester::Request"*)** %20, align 8
  tail call void %21(%"class.autofill::SubKeyRequester::Request"* nonnull %15) #9
  br label %22

22:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr.110* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8autofill12_GLOBAL__N_113SubKeyRequest13OnRulesLoadedEv(%"class.autofill::(anonymous namespace)::SubKeyRequest"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::vector.121", align 8
  %4 = alloca %"class.std::__1::vector.128", align 8
  %5 = alloca %"class.std::__1::vector.128", align 8
  %6 = alloca %"struct.std::__1::pair", align 8
  %7 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %7) #9
  %8 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %8) #9
  %9 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !10
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %216

12:                                               ; preds = %1
  store i8 1, i8* %9, align 8
  %13 = bitcast %"class.std::__1::vector.121"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.121", %"class.std::__1::vector.121"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 3
  %17 = bitcast %"class.std::__1::vector.121"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.autofill::AddressValidator"*, %"class.autofill::AddressValidator"** %16, align 8
  %19 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 2
  %21 = bitcast %"class.autofill::AddressValidator"* %18 to void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %22 = load void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %22, i64 3
  %24 = load void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.std::__1::vector.121"*, %"class.autofill::AddressValidator"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %23, align 8
  call void %24(%"class.std::__1::vector.121"* nonnull sret %3, %"class.autofill::AddressValidator"* %18, %"class.std::__1::basic_string"* dereferenceable(24) %19, %"class.std::__1::basic_string"* dereferenceable(24) %20) #9
  %25 = bitcast %"class.std::__1::vector.128"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %4, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #9
  %29 = bitcast %"class.std::__1::vector.128"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %5, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %5, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #9
  %33 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %35 = icmp eq %"struct.std::__1::pair"* %33, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %12
  %37 = bitcast %"struct.std::__1::pair"* %6 to i8*
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %45 = bitcast %"struct.std::__1::pair"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string"** %27 to i64*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::basic_string"** %31 to i64*
  %51 = bitcast %"struct.std::__1::pair"* %6 to i8*
  br label %145

52:                                               ; preds = %213, %12
  %53 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 4
  %54 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %53, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::OnceCallback"* %53 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %59 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %60 = inttoptr i64 %57 to %"class.base::internal::BindStateBase"*
  %61 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %60, i64 0, i32 1
  %62 = bitcast void ()** %61 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.128"*, %"class.std::__1::vector.128"*)**
  %63 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.128"*, %"class.std::__1::vector.128"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.128"*, %"class.std::__1::vector.128"*)** %62, align 8
  call void %63(%"class.base::internal::BindStateBase"* %60, %"class.std::__1::vector.128"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.128"* nonnull dereferenceable(24) %5) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %65 = icmp eq %"class.std::__1::basic_string"* %64, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %52
  %67 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %64
  br i1 %69, label %85, label %70

70:                                               ; preds = %66, %80
  %71 = phi %"class.std::__1::basic_string"* [ %72, %80 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 -1
  %73 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %77, %70
  %81 = icmp eq %"class.std::__1::basic_string"* %72, %64
  br i1 %81, label %82, label %70

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::vector.128"* %5 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %66
  %86 = phi i8* [ %84, %82 ], [ %67, %66 ]
  store %"class.std::__1::basic_string"* %64, %"class.std::__1::basic_string"** %31, align 8
  call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %52, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %89 = icmp eq %"class.std::__1::basic_string"* %88, null
  br i1 %89, label %111, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %93 = icmp eq %"class.std::__1::basic_string"* %92, %88
  br i1 %93, label %109, label %94

94:                                               ; preds = %90, %104
  %95 = phi %"class.std::__1::basic_string"* [ %96, %104 ], [ %92, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 -1
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #10
  br label %104

104:                                              ; preds = %101, %94
  %105 = icmp eq %"class.std::__1::basic_string"* %96, %88
  br i1 %105, label %106, label %94

106:                                              ; preds = %104
  %107 = bitcast %"class.std::__1::vector.128"* %4 to i8**
  %108 = load i8*, i8** %107, align 8
  br label %109

109:                                              ; preds = %106, %90
  %110 = phi i8* [ %108, %106 ], [ %91, %90 ]
  store %"class.std::__1::basic_string"* %88, %"class.std::__1::basic_string"** %27, align 8
  call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %87, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  %112 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %113 = icmp eq %"struct.std::__1::pair"* %112, null
  br i1 %113, label %144, label %114

114:                                              ; preds = %111
  %115 = bitcast %"struct.std::__1::pair"* %112 to i8*
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %117 = icmp eq %"struct.std::__1::pair"* %116, %112
  br i1 %117, label %142, label %118

118:                                              ; preds = %114, %137
  %119 = phi %"struct.std::__1::pair"* [ %120, %137 ], [ %116, %114 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %119, i64 -1
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %119, i64 -1, i32 1
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %128) #10
  br label %129

129:                                              ; preds = %126, %118
  %130 = bitcast %"struct.std::__1::pair"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #10
  br label %137

137:                                              ; preds = %134, %129
  %138 = icmp eq %"struct.std::__1::pair"* %120, %112
  br i1 %138, label %139, label %118

139:                                              ; preds = %137
  %140 = bitcast %"class.std::__1::vector.121"* %3 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %114
  %143 = phi i8* [ %141, %139 ], [ %115, %114 ]
  store %"struct.std::__1::pair"* %112, %"struct.std::__1::pair"** %15, align 8
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %111, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %216

145:                                              ; preds = %36, %213
  %146 = phi %"struct.std::__1::pair"* [ %33, %36 ], [ %214, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  %147 = bitcast %"struct.std::__1::pair"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 48, i1 false)
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %145
  %152 = bitcast %"struct.std::__1::pair"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %152, i64 24, i1 false) #9
  br label %158

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %38, i8* %155, i64 %157) #9
  br label %158

158:                                              ; preds = %153, %151
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 1
  %160 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %165, i64 24, i1 false) #9
  br label %171

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %168, i64 %170) #9
  br label %171

171:                                              ; preds = %164, %166
  %172 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %173 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %174 = icmp eq %"class.std::__1::basic_string"* %172, %173
  br i1 %174, label %186, label %175

175:                                              ; preds = %171
  %176 = load i8, i8* %46, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %37, i64 24, i1 false) #9
  br label %183

180:                                              ; preds = %175
  %181 = load i8*, i8** %39, align 8
  %182 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %172, i8* %181, i64 %182) #9
  br label %183

183:                                              ; preds = %180, %178
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 1
  %185 = ptrtoint %"class.std::__1::basic_string"* %184 to i64
  store i64 %185, i64* %47, align 8
  br label %187

186:                                              ; preds = %171
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.128"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %38) #9
  br label %187

187:                                              ; preds = %183, %186
  %188 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %189 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %190 = icmp eq %"class.std::__1::basic_string"* %188, %189
  br i1 %190, label %202, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* %49, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %44, i64 24, i1 false) #9
  br label %199

196:                                              ; preds = %191
  %197 = load i8*, i8** %42, align 8
  %198 = load i64, i64* %43, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %188, i8* %197, i64 %198) #9
  br label %199

199:                                              ; preds = %196, %194
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 1
  %201 = ptrtoint %"class.std::__1::basic_string"* %200 to i64
  store i64 %201, i64* %50, align 8
  br label %203

202:                                              ; preds = %187
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.128"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %41) #9
  br label %203

203:                                              ; preds = %199, %202
  %204 = load i8, i8* %49, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %203
  %207 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %207) #10
  br label %208

208:                                              ; preds = %206, %203
  %209 = load i8, i8* %46, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %208
  %212 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %212) #10
  br label %213

213:                                              ; preds = %208, %211
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 1
  %215 = icmp eq %"struct.std::__1::pair"* %214, %34
  br i1 %215, label %52, label %145

216:                                              ; preds = %1, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8autofill12_GLOBAL__N_113SubKeyRequestD2Ev(%"class.autofill::(anonymous namespace)::SubKeyRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill12_GLOBAL__N_113SubKeyRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #9
  %4 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %4) #9
  %5 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 6, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %5) #9
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #9
  %6 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #9
  %7 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.autofill::(anonymous namespace)::SubKeyRequest", %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %15, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8autofill12_GLOBAL__N_113SubKeyRequestD0Ev(%"class.autofill::(anonymous namespace)::SubKeyRequest"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8autofill12_GLOBAL__N_113SubKeyRequestD2Ev(%"class.autofill::(anonymous namespace)::SubKeyRequest"* %0) #9
  %2 = bitcast %"class.autofill::(anonymous namespace)::SubKeyRequest"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.autofill::(anonymous namespace)::SubKeyRequest"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)**
  %21 = load void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*, void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.autofill::(anonymous namespace)::SubKeyRequest"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.autofill::(anonymous namespace)::SubKeyRequest"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"*, %"class.base::OnceCallback.105"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback.105", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = bitcast %"class.base::OnceCallback.105"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !noalias !11
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #9, !noalias !11
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !11
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !noalias !11
  %13 = call i8* @_Znwm(i64 64) #10, !noalias !14
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !14
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl"*)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !14
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #9, !noalias !14
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !14
  store i64 %23, i64* %21, align 8, !noalias !14
  %24 = bitcast %"class.base::OnceCallback.105"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !14
  %25 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.105", align 8
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #9
  %4 = bitcast %"class.base::OnceCallback.105"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.105"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback.105", %"class.base::OnceCallback.105"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl"**
  %10 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl"*)*, void (%"class.base::internal::CancelableCallbackImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl"**
  %9 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.128"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.128"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.128"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #9
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.128", %"class.std::__1::vector.128"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #9
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN8autofill12_GLOBAL__N_113SubKeyRequestEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
