; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_resource.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_resource.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type opaque
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClDescNull = type { %struct.NaClDesc }
%struct.NaClHostDesc = type { i32, i32 }
%struct.NaClDescIoDesc = type { %struct.NaClDesc, %struct.NaClHostDesc* }

@.str = private unnamed_addr constant [35 x i8] c"NaClResourceOpen(*,\22%s\22,0x%x,0%o)\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"DEBUG_ONLY:\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c" prefix \22%s\22\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c" prefix match at %lu, rest \22%s\22.\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c" trying default scheme %lu.\0A\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c" no match, and no default scheme to try.\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"NaClResourceNaClAppCtor, scheme_tbl 0x%lx, size %lu.\0A\00", align 1
@NaClResourceNaClAppInit.schemes = internal constant [1 x %struct.NaClResourceSchemes] [%struct.NaClResourceSchemes { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 1, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* @NaClResourceNaClAppFileOpen }], align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"NaClResourceNaClAppInit -- Ctor with default schemes\0A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"Could not create Null device. Redirect failed.\0A\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"Could not open file \22%s\22. Redirect failed.\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"NaClResourceNaClAppFileOpen returning 0x%lx\0A\00", align 1
@.str.13 = private unnamed_addr constant [80 x i8] c"NaClResourceFileFactory: invoking NaClHostDescOpen on %s, flags 0x%x, mode 0%o\0A\00", align 1
@.str.14 = private unnamed_addr constant [50 x i8] c"NaClResourceFileFactory: NaClHostDescOpen failed\0A\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"NaClResourceFileFactory: NaClDescIoDescCtor failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [51 x i8] c"NaClResourceFileFactory: NaClHostDescClose failed\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDesc* @NaClResourceOpen(%struct.NaClResource*, i8*, i32, i32) local_unnamed_addr #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %1, i32 %2, i32 %3) #7
  %5 = tail call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds i8, i8* %1, i64 11
  %8 = select i1 %6, i8* %7, i8* %1
  %9 = zext i1 %6 to i32
  %10 = getelementptr inbounds %struct.NaClResource, %struct.NaClResource* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.NaClResource, %struct.NaClResource* %0, i64 0, i32 0
  %15 = load %struct.NaClResourceSchemes*, %struct.NaClResourceSchemes** %14, align 8
  br label %16

16:                                               ; preds = %13, %36
  %17 = phi %struct.NaClResourceSchemes* [ %15, %13 ], [ %25, %36 ]
  %18 = phi i64 [ -1, %13 ], [ %38, %36 ]
  %19 = phi i64 [ 0, %13 ], [ %39, %36 ]
  %20 = getelementptr inbounds %struct.NaClResourceSchemes, %struct.NaClResourceSchemes* %17, i64 %19, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.NaClResourceSchemes, %struct.NaClResourceSchemes* %17, i64 %19, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i64 @strlen(i8* %23) #8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* %23) #7
  %25 = load %struct.NaClResourceSchemes*, %struct.NaClResourceSchemes** %14, align 8
  %26 = getelementptr inbounds %struct.NaClResourceSchemes, %struct.NaClResourceSchemes* %25, i64 %19, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i32 @strncmp(i8* %27, i8* %8, i64 %24) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %16
  %31 = getelementptr inbounds i8, i8* %8, i64 %24
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 %19, i8* %31) #7
  %32 = load %struct.NaClResourceSchemes*, %struct.NaClResourceSchemes** %14, align 8
  %33 = getelementptr inbounds %struct.NaClResourceSchemes, %struct.NaClResourceSchemes* %32, i64 %19, i32 2
  %34 = load %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)*, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)** %33, align 8
  %35 = tail call %struct.NaClDesc* %34(%struct.NaClResource* %0, i8* %31, i32 %2, i32 %3, i32 %9) #7
  br label %51

36:                                               ; preds = %16
  %37 = icmp eq i32 %21, 0
  %38 = select i1 %37, i64 %18, i64 %19
  %39 = add nuw i64 %19, 1
  %40 = load i64, i64* %10, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %16, label %42

42:                                               ; preds = %36
  %43 = icmp ult i64 %38, %40
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i64 %38) #7
  %45 = getelementptr inbounds %struct.NaClResource, %struct.NaClResource* %0, i64 0, i32 0
  %46 = load %struct.NaClResourceSchemes*, %struct.NaClResourceSchemes** %45, align 8
  %47 = getelementptr inbounds %struct.NaClResourceSchemes, %struct.NaClResourceSchemes* %46, i64 %38, i32 2
  %48 = load %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)*, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)** %47, align 8
  %49 = tail call %struct.NaClDesc* %48(%struct.NaClResource* %0, i8* %8, i32 %2, i32 %3, i32 %9) #7
  br label %51

50:                                               ; preds = %4, %42
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %51

51:                                               ; preds = %50, %44, %30
  %52 = phi %struct.NaClDesc* [ %35, %30 ], [ %49, %44 ], [ null, %50 ]
  ret %struct.NaClDesc* %52
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @NaClResourceCtor(%struct.NaClResource* nocapture, %struct.NaClResourceSchemes*, i64) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.NaClResource, %struct.NaClResource* %0, i64 0, i32 0
  store %struct.NaClResourceSchemes* %1, %struct.NaClResourceSchemes** %4, align 8
  %5 = getelementptr inbounds %struct.NaClResource, %struct.NaClResource* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClResourceNaClAppCtor(%struct.NaClResourceNaClApp* nocapture, %struct.NaClResourceSchemes*, i64, %struct.NaClApp*) local_unnamed_addr #0 {
  %5 = ptrtoint %struct.NaClResourceSchemes* %1 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i64 %5, i64 %2) #7
  %6 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 0, i32 0
  store %struct.NaClResourceSchemes* %1, %struct.NaClResourceSchemes** %6, align 8
  %7 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 1
  store %struct.NaClApp* %3, %struct.NaClApp** %8, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClResourceNaClAppInit(%struct.NaClResourceNaClApp* nocapture, %struct.NaClApp*) local_unnamed_addr #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #7
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i64 ptrtoint ([1 x %struct.NaClResourceSchemes]* @NaClResourceNaClAppInit.schemes to i64), i64 1) #7
  %3 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 0, i32 0
  store %struct.NaClResourceSchemes* getelementptr inbounds ([1 x %struct.NaClResourceSchemes], [1 x %struct.NaClResourceSchemes]* @NaClResourceNaClAppInit.schemes, i64 0, i64 0), %struct.NaClResourceSchemes** %3, align 8
  %4 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 0, i32 1
  store i64 1, i64* %4, align 8
  %5 = getelementptr inbounds %struct.NaClResourceNaClApp, %struct.NaClResourceNaClApp* %0, i64 0, i32 1
  store %struct.NaClApp* %1, %struct.NaClApp** %5, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.NaClDesc* @NaClResourceNaClAppFileOpen(%struct.NaClResource* nocapture readnone, i8*, i32, i32, i32) #0 {
  %6 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %5
  %9 = tail call noalias i8* @malloc(i64 80) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = bitcast i8* %9 to %struct.NaClDescNull*
  %13 = tail call i32 @NaClDescNullCtor(%struct.NaClDescNull* nonnull %12) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @free(i8* nonnull %9) #7
  br label %18

16:                                               ; preds = %11
  %17 = bitcast i8* %9 to %struct.NaClDesc*
  br label %46

18:                                               ; preds = %15, %8
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %46

19:                                               ; preds = %5
  %20 = tail call noalias i8* @malloc(i64 8) #7
  %21 = bitcast i8* %20 to %struct.NaClHostDesc*
  %22 = tail call noalias i8* @malloc(i64 88) #7
  %23 = bitcast i8* %22 to %struct.NaClDescIoDesc*
  %24 = icmp eq i8* %20, null
  %25 = icmp eq i8* %22, null
  %26 = or i1 %24, %25
  br i1 %26, label %40, label %27

27:                                               ; preds = %19
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.13, i64 0, i64 0), i8* %1, i32 %2, i32 %3) #7
  %28 = tail call i32 @NaClHostDescOpen(%struct.NaClHostDesc* %21, i8* %1, i32 %2, i32 %3) #7
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14, i64 0, i64 0)) #7
  br label %40

31:                                               ; preds = %27
  %32 = tail call i32 @NaClDescIoDescCtor(%struct.NaClDescIoDesc* %23, %struct.NaClHostDesc* %21) #7
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0)) #7
  %35 = tail call i32 @NaClHostDescClose(%struct.NaClHostDesc* %21) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0)) #7
  br label %40

38:                                               ; preds = %31
  %39 = bitcast i8* %22 to %struct.NaClDesc*
  br label %40

40:                                               ; preds = %19, %30, %34, %37, %38
  %41 = phi i8* [ %20, %19 ], [ %20, %30 ], [ null, %38 ], [ %20, %37 ], [ %20, %34 ]
  %42 = phi i8* [ %22, %19 ], [ %22, %30 ], [ null, %38 ], [ %22, %37 ], [ %22, %34 ]
  %43 = phi %struct.NaClDesc* [ null, %19 ], [ null, %30 ], [ %39, %38 ], [ null, %37 ], [ null, %34 ]
  tail call void @free(i8* %41) #7
  tail call void @free(i8* %42) #7
  %44 = icmp eq %struct.NaClDesc* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %1) #7
  br label %46

46:                                               ; preds = %16, %40, %45, %18
  %47 = phi %struct.NaClDesc* [ null, %18 ], [ %17, %16 ], [ null, %45 ], [ %43, %40 ]
  %48 = ptrtoint %struct.NaClDesc* %47 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), i64 %48) #7
  ret %struct.NaClDesc* %47
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare i32 @NaClDescNullCtor(%struct.NaClDescNull*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare i32 @NaClHostDescOpen(%struct.NaClHostDesc*, i8*, i32, i32) local_unnamed_addr #1

declare i32 @NaClDescIoDescCtor(%struct.NaClDescIoDesc*, %struct.NaClHostDesc*) local_unnamed_addr #1

declare i32 @NaClHostDescClose(%struct.NaClHostDesc*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
