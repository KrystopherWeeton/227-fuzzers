; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.rx::FramebufferGL" = type <{ %"class.rx::FramebufferImpl", i32, i8, i8, %"class.angle::BitSetT.147", i8 }>
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.700" }
%"struct.std::__1::pair.700" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::TextureState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.702" }
%"struct.std::__1::pair.702" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.704" }
%"struct.std::__1::pair.704" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.706" }
%"struct.std::__1::pair.706" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.708" }
%"struct.std::__1::pair.708" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.710" }
%"struct.std::__1::pair.710" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::StateManagerGL" = type { %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"*, i32, i32, %"class.std::__1::vector.378", i32, %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"*, %"class.angle::PackedEnumMap.640", %"class.angle::PackedEnumMap.642", i64, %"class.angle::PackedEnumMap.651", %"struct.std::__1::array.169", %"class.std::__1::vector.653", i32, %"class.rx::TransformFeedbackGL"*, %"class.angle::PackedEnumMap.660", %"class.angle::PackedEnumMap.660", %"struct.gl::ContextID", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, i8, %"struct.gl::Rectangle", %"struct.gl::Rectangle", float, float, %"struct.angle::Color", %"class.gl::BlendStateExt", i8, i8, i8, float, i8, i8, %"struct.std::__1::array.373", i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, float, float, i8, float, i8, i32, %"struct.angle::Color", float, i32, i8, i8, i8, i8, i8, i8, i8, i32, i8, i32, %"class.angle::BitSetT.476", i64, %"class.angle::BitSetT.168", %"class.angle::BitSetT.166" }
%"class.rx::FunctionsGL" = type { %"class.rx::DispatchTableGL", %"struct.gl::Version", i32, i32, %"class.std::__1::vector.125" }
%"class.rx::DispatchTableGL" = type { i32 (...)**, void (i32, i32)*, void (i32)*, void (float, float, float, float)*, void (double)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32)*, void (i8)*, void (double, double)*, void (i32)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32)*, void (i32, i8*)*, void (i32, double*)*, i32 ()*, void (i32, float*)*, void (i32, i32*)*, i8* (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, float)*, void (i32, i32)*, void (float)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32, i32*)*, i8 (i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (float, float, float, float)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, i8* (i32, i32)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, float)*, void (i32, float*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32)*, void (i32, i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i8, i8, i8, i8)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8* (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8* (i32, i64, i64, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8**, i32*)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i64*)*, void (i32, i32, float*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, i8 (%struct.__GLsync*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (float)*, void (i32, float*)*, void (i32, i32)*, void ()*, void ()*, void (i32, double)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32)*, void (float)*, i32 (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (float, float)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void ()*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, void (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void ()*, void (float, float, float, float, float, float, float, float)*, void (i32)*, void (i32, i8*)*, void ()*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i32, i64)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8*)*, void (i32, i8*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i64, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i64*)*, i8 (i32)*, void (i32, i32, i64*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)* }
%struct.__GLsync = type opaque
%"struct.angle::FeaturesGL" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.625" }
%"class.std::__1::map.625" = type { %"class.std::__1::__tree.626" }
%"class.std::__1::__tree.626" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"struct.rx::VertexArrayStateGL" = type { i32, %"class.angle::FixedVector.636", %"class.angle::FixedVector.638" }
%"class.angle::FixedVector.636" = type { %"struct.std::__1::array.637", i64 }
%"struct.std::__1::array.637" = type { [16 x %"struct.rx::VertexAttributeGL"] }
%"struct.rx::VertexAttributeGL" = type { i8, %"struct.angle::Format"*, i8*, i32, i32 }
%"class.angle::FixedVector.638" = type { %"struct.std::__1::array.639", i64 }
%"struct.std::__1::array.639" = type { [16 x %"struct.rx::VertexBindingGL"] }
%"struct.rx::VertexBindingGL" = type <{ i32, i32, i64, i32, [4 x i8] }>
%"class.angle::PackedEnumMap.640" = type { %"struct.std::__1::array.641" }
%"struct.std::__1::array.641" = type { [13 x i32] }
%"class.angle::PackedEnumMap.642" = type { %"struct.std::__1::array.643" }
%"struct.std::__1::array.643" = type { [13 x %"class.std::__1::vector.644"] }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"class.std::__1::__compressed_pair.646" }
%"struct.rx::StateManagerGL::IndexedBufferBinding" = type <{ i64, i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"* }
%"class.angle::PackedEnumMap.651" = type { %"struct.std::__1::array.652" }
%"struct.std::__1::array.652" = type { [11 x %"struct.std::__1::array.169"] }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"class.std::__1::__compressed_pair.655" }
%"struct.rx::StateManagerGL::ImageUnitBinding" = type { i32, i32, i8, i32, i32, i32 }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"* }
%"class.rx::TransformFeedbackGL" = type opaque
%"class.angle::PackedEnumMap.660" = type { %"struct.std::__1::array.661" }
%"struct.std::__1::array.661" = type { [7 x %"class.rx::QueryGL"*] }
%"class.rx::QueryGL" = type opaque
%"class.rx::ClearMultiviewGL" = type <{ %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*, i32, [4 x i8] }>
%"class.rx::ContextGL" = type <{ %"class.rx::ContextImpl", %"class.std::__1::shared_ptr.662", i32, [4 x i8] }>
%"class.std::__1::shared_ptr.662" = type { %"class.rx::RendererGL"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::RendererGL" = type <{ i32 (...)**, %"struct.gl::Version", %"class.std::__1::unique_ptr.663", %"class.rx::StateManagerGL"*, %"class.rx::BlitGL"*, %"class.rx::ClearMultiviewGL"*, i8, i8, [6 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", i32, [4 x i8], %"class.absl::flat_hash_map.680", %"class.std::__1::list", %"class.std::__1::mutex", i8, [7 x i8], %"struct.angle::FeaturesGL", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.rx::FunctionsGL"* }
%"class.rx::BlitGL" = type { %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"*, %"class.rx::StateManagerGL"*, i8, %"class.std::__1::map.669", [2 x i32], i32, i32, %"struct.rx::VertexArrayStateGL"*, i8, i32, i32, %"struct.rx::nativegl::TexImageFormat" }
%"class.std::__1::map.669" = type { %"class.std::__1::__tree.670" }
%"class.std::__1::__tree.670" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.671", %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.rx::nativegl::TexImageFormat" = type { i32, i32, i32 }
%"class.absl::flat_hash_map.680" = type { %"class.absl::container_internal::raw_hash_map.681" }
%"class.absl::container_internal::raw_hash_map.681" = type { %"class.absl::container_internal::raw_hash_set.682" }
%"class.absl::container_internal::raw_hash_set.682" = type { i8*, %"union.absl::container_internal::map_slot_type.683"*, i64, i64, %"class.absl::container_internal::CompressedTuple.684" }
%"union.absl::container_internal::map_slot_type.683" = type opaque
%"class.absl::container_internal::CompressedTuple.684" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.685" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.685" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.695" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround" = type <{ i8*, i8*, i8, [7 x i8] }>
%"struct.rx::(anonymous namespace)::BlitFramebufferBounds" = type <{ %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"struct.gl::Rectangle", i8, i8, [2 x i8] }>
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.rx::TextureGL" = type { %"class.rx::TextureImpl", %"class.std::__1::vector.712", %"class.angle::BitSetT.266", %"class.angle::BitSetT.266", %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32 }
%"class.std::__1::vector.712" = type { %"class.std::__1::__vector_base.713" }
%"class.std::__1::__vector_base.713" = type { %"struct.rx::LevelInfoGL"*, %"struct.rx::LevelInfoGL"*, %"class.std::__1::__compressed_pair.714" }
%"struct.rx::LevelInfoGL" = type <{ i32, i32, i8, [3 x i8], %"struct.rx::LUMAWorkaroundGL", i8, [3 x i8] }>
%"struct.rx::LUMAWorkaroundGL" = type { i8, i32 }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"struct.rx::LevelInfoGL"* }
%"class.rx::RenderbufferGL" = type { %"class.rx::RenderbufferImpl", i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@_ZTVN2rx13FramebufferGLE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::FramebufferGL"*)* @_ZN2rx13FramebufferGLD2Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferGL"*)* @_ZN2rx13FramebufferGLD0Ev to i8*), i8* bitcast (void (%"class.rx::FramebufferGL"*, %"class.gl::Context"*)* @_ZN2rx13FramebufferGL7destroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx13FramebufferGL7discardEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)* @_ZN2rx13FramebufferGL10invalidateEPKN2gl7ContextEmPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"*)* @_ZN2rx13FramebufferGL13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32)* @_ZN2rx13FramebufferGL5clearEPKN2gl7ContextEj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32, i32, float*)* @_ZN2rx13FramebufferGL13clearBufferfvEPKN2gl7ContextEjiPKf to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx13FramebufferGL14clearBufferuivEPKN2gl7ContextEjiPKj to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32, i32, i32*)* @_ZN2rx13FramebufferGL13clearBufferivEPKN2gl7ContextEjiPKi to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32, i32, float, i32)* @_ZN2rx13FramebufferGL13clearBufferfiEPKN2gl7ContextEjifi to i8*), i8* bitcast (%"struct.gl::InternalFormat"* (%"class.rx::FramebufferImpl"*, %"class.gl::Context"*)* @_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, i32, i32, %"struct.gl::PixelPackState"*, %"class.gl::Buffer"*, i8*)* @_ZN2rx13FramebufferGL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, %"struct.gl::Rectangle"*, %"struct.gl::Rectangle"*, i32, i32)* @_ZN2rx13FramebufferGL4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj to i8*), i8* bitcast ({ i32, i8* } (%"class.rx::FramebufferGL"*, %"class.gl::Context"*)* @_ZNK2rx13FramebufferGL11checkStatusEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i32, %"class.angle::BitSetT.623"*, i32)* @_ZN2rx13FramebufferGL9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, float*)* @_ZNK2rx13FramebufferGL17getSamplePositionEPKN2gl7ContextEmPf to i8*), i8* bitcast (i1 (%"class.rx::FramebufferGL"*)* @_ZNK2rx13FramebufferGL32shouldSyncStateBeforeCheckStatusEv to i8*)] }, align 8
@.str = private unnamed_addr constant [123 x i8] c"glReadPixels: GL_IMPLEMENTATION_COLOR_READ_FORMAT advertised by the driver is not handled by RGBA16 readPixels workaround.\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp\00", align 1
@__func__._ZN2rx13FramebufferGL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv = private unnamed_addr constant [11 x i8] c"readPixels\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Integer overflow.\00", align 1
@__FUNCTION__._ZNK2rx13FramebufferGL11checkStatusEPKN2gl7ContextE = private unnamed_addr constant [12 x i8] c"checkStatus\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"GL framebuffer returned incomplete: \00", align 1
@.str.4 = private unnamed_addr constant [83 x i8] c"Framebuffer is incomplete: Driver does not support this framebuffer configuration.\00", align 1
@__func__._ZNK2rx13FramebufferGL18readPixelsRowByRowEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPh = private unnamed_addr constant [19 x i8] c"readPixelsRowByRow\00", align 1
@__func__._ZNK2rx13FramebufferGL19readPixelsAllAtOnceEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPhb = private unnamed_addr constant [20 x i8] c"readPixelsAllAtOnce\00", align 1
@_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE = external local_unnamed_addr constant i32, align 4
@__func__._ZN2rx12_GLOBAL__N_140ScopedEXTTextureNorm16ReadbackWorkaround10InitializeEPKN2gl7ContextERKNS2_9RectangleEjjjjjjPh = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@__func__._ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_ = private unnamed_addr constant [32 x i8] c"RearrangeEXTTextureNorm16Pixels\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.6 = private unnamed_addr constant [3 x i8] c"0x\00", align 1

@_ZN2rx13FramebufferGLC1ERKN2gl16FramebufferStateEjbb = hidden unnamed_addr alias void (%"class.rx::FramebufferGL"*, %"class.gl::FramebufferState"*, i32, i1, i1), void (%"class.rx::FramebufferGL"*, %"class.gl::FramebufferState"*, i32, i1, i1)* @_ZN2rx13FramebufferGLC2ERKN2gl16FramebufferStateEjbb
@_ZN2rx13FramebufferGLD1Ev = hidden unnamed_addr alias void (%"class.rx::FramebufferGL"*), void (%"class.rx::FramebufferGL"*)* @_ZN2rx13FramebufferGLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"struct.gl::InternalFormat"* @_ZNK2rx15FramebufferImpl32getImplementationColorReadFormatEPKN2gl7ContextE(%"class.rx::FramebufferImpl"*, %"class.gl::Context"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.gl::Format", align 8
  %4 = getelementptr inbounds %"class.rx::FramebufferImpl", %"class.rx::FramebufferImpl"* %0, i64 0, i32 1
  %5 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %4, align 8
  %6 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"* %5) #13
  %7 = bitcast %"struct.gl::Format"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 2
  %9 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %8, align 8, !noalias !2
  %10 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4, !noalias !2
  %12 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %6, i64 0, i32 1, i32 1
  %13 = bitcast %"class.gl::FramebufferAttachmentObject"* %9 to void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)***
  %14 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)**, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %14, i64 3
  %16 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %15, align 8, !noalias !2
  call void %16(%"struct.gl::Format"* nonnull sret %3, %"class.gl::FramebufferAttachmentObject"* %9, i32 %11, %"class.gl::ImageIndex"* dereferenceable(16) %12) #13
  %17 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %3, i64 0, i32 0
  %18 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret %"struct.gl::InternalFormat"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState17getReadAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx13FramebufferGLC2ERKN2gl16FramebufferStateEjbb(%"class.rx::FramebufferGL"* nocapture, %"class.gl::FramebufferState"* dereferenceable(464), i32, i1 zeroext, i1 zeroext) unnamed_addr #3 align 2 {
  %6 = zext i1 %3 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  store %"class.gl::FramebufferState"* %1, %"class.gl::FramebufferState"** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  store i8 %6, i8* %11, align 4
  %12 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 3
  store i8 %7, i8* %12, align 1
  %13 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %13, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx13FramebufferGLD2Ev(%"class.rx::FramebufferGL"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2rx13FramebufferGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferGLD0Ev(%"class.rx::FramebufferGL"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.rx::FramebufferGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferGL7destroyEPKN2gl7ContextE(%"class.rx::FramebufferGL"* nocapture, %"class.gl::Context"*) unnamed_addr #4 align 2 {
  %3 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %4 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN2rx14StateManagerGL17deleteFramebufferEj(%"class.rx::StateManagerGL"* %3, i32 %5) #13
  store i32 0, i32* %4, align 8
  ret void
}

declare %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2rx14StateManagerGL17deleteFramebufferEj(%"class.rx::StateManagerGL"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL7discardEPKN2gl7ContextEmPKj(%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*) unnamed_addr #4 align 2 {
  %5 = bitcast %"class.rx::FramebufferGL"* %0 to i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)***
  %6 = load i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)**, i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)** %6, i64 4
  %8 = load i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)*, i32 (%"class.rx::FramebufferGL"*, %"class.gl::Context"*, i64, i32*)** %7, align 8
  %9 = tail call i32 %8(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i64 %2, i32* %3) #13
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL10invalidateEPKN2gl7ContextEmPKj(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i64, i32*) unnamed_addr #4 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #13
  %9 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 4, !range !5
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %56, label %16

16:                                               ; preds = %12
  %17 = icmp eq i64 %2, 0
  br i1 %17, label %56, label %18

18:                                               ; preds = %16
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %2) #13
  %19 = and i64 %2, 1
  %20 = icmp eq i64 %2, 1
  br i1 %20, label %41, label %21

21:                                               ; preds = %18
  %22 = sub i64 %2, %19
  br label %23

23:                                               ; preds = %90, %21
  %24 = phi i64 [ 0, %21 ], [ %91, %90 ]
  %25 = phi i64 [ %22, %21 ], [ %92, %90 ]
  %26 = getelementptr inbounds i32, i32* %3, i64 %24
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -6144
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = shl i32 %28, 5
  %32 = add i32 %31, 36064
  %33 = load i32*, i32** %7, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %24
  store i32 %32, i32* %34, align 4
  br label %35

35:                                               ; preds = %23, %30
  %36 = or i64 %24, 1
  %37 = getelementptr inbounds i32, i32* %3, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, -6144
  %40 = icmp ult i32 %39, 3
  br i1 %40, label %85, label %90

41:                                               ; preds = %90, %18
  %42 = phi i64 [ 0, %18 ], [ %91, %90 ]
  %43 = icmp eq i64 %19, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds i32, i32* %3, i64 %42
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, -6144
  %48 = icmp ult i32 %47, 3
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = shl i32 %47, 5
  %51 = add i32 %50, 36064
  %52 = load i32*, i32** %7, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 %42
  store i32 %51, i32* %53, align 4
  br label %54

54:                                               ; preds = %49, %44, %41
  %55 = load i32*, i32** %7, align 8
  br label %56

56:                                               ; preds = %54, %16, %12, %4
  %57 = phi i32* [ %3, %4 ], [ %3, %12 ], [ %55, %54 ], [ null, %16 ]
  %58 = call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %59 = call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %60 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %58, i64 0, i32 0, i32 523
  %61 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %60, align 8
  %62 = icmp eq void (i32, i32, i32*)* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %59, i32 36160, i32 %65) #13
  %66 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %60, align 8
  %67 = trunc i64 %2 to i32
  call void %66(i32 36160, i32 %67, i32* %57) #13
  br label %77

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %58, i64 0, i32 0, i32 668
  %70 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %69, align 8
  %71 = icmp eq void (i32, i32, i32*)* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %59, i32 36160, i32 %74) #13
  %75 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %69, align 8
  %76 = trunc i64 %2 to i32
  call void %75(i32 36160, i32 %76, i32* %57) #13
  br label %77

77:                                               ; preds = %68, %72, %63
  %78 = load i32*, i32** %7, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = ptrtoint i32* %78 to i64
  %82 = bitcast i32** %8 to i64*
  store i64 %81, i64* %82, align 8
  %83 = bitcast i32* %78 to i8*
  call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret i32 0

85:                                               ; preds = %35
  %86 = shl i32 %39, 5
  %87 = add i32 %86, 36064
  %88 = load i32*, i32** %7, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %36
  store i32 %87, i32* %89, align 4
  br label %90

90:                                               ; preds = %85, %35
  %91 = add nuw i64 %24, 2
  %92 = add i64 %25, -2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %41, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2rx13FramebufferGL48modifyInvalidateAttachmentsForEmulatedDefaultFBOEmPKjPNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.rx::FramebufferGL"* nocapture readonly, i64, i32* nocapture readonly, %"class.std::__1::vector"*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %67, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  %20 = icmp ult i64 %19, %1
  %21 = inttoptr i64 %17 to i32*
  br i1 %20, label %22, label %24

22:                                               ; preds = %12
  %23 = sub i64 %1, %19
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  br label %30

24:                                               ; preds = %12
  %25 = icmp ugt i64 %19, %1
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds i32, i32* %21, i64 %1
  store i32* %27, i32** %13, align 8
  br label %28

28:                                               ; preds = %24, %26
  %29 = icmp eq i64 %1, 0
  br i1 %29, label %67, label %30

30:                                               ; preds = %22, %28
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = and i64 %1, 1
  %33 = icmp eq i64 %1, 1
  br i1 %33, label %54, label %34

34:                                               ; preds = %30
  %35 = sub i64 %1, %32
  br label %36

36:                                               ; preds = %74, %34
  %37 = phi i64 [ 0, %34 ], [ %75, %74 ]
  %38 = phi i64 [ %35, %34 ], [ %76, %74 ]
  %39 = getelementptr inbounds i32, i32* %2, i64 %37
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, -6144
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %48

43:                                               ; preds = %36
  %44 = shl i32 %41, 5
  %45 = add i32 %44, 36064
  %46 = load i32*, i32** %31, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %37
  store i32 %45, i32* %47, align 4
  br label %48

48:                                               ; preds = %36, %43
  %49 = or i64 %37, 1
  %50 = getelementptr inbounds i32, i32* %2, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, -6144
  %53 = icmp ult i32 %52, 3
  br i1 %53, label %69, label %74

54:                                               ; preds = %74, %30
  %55 = phi i64 [ 0, %30 ], [ %75, %74 ]
  %56 = icmp eq i64 %32, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds i32, i32* %2, i64 %55
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, -6144
  %61 = icmp ult i32 %60, 3
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = shl i32 %60, 5
  %64 = add i32 %63, 36064
  %65 = load i32*, i32** %31, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %55
  store i32 %64, i32* %66, align 4
  br label %67

67:                                               ; preds = %54, %57, %62, %28, %8, %4
  %68 = phi i1 [ false, %8 ], [ false, %4 ], [ true, %28 ], [ true, %62 ], [ true, %57 ], [ true, %54 ]
  ret i1 %68

69:                                               ; preds = %48
  %70 = shl i32 %52, 5
  %71 = add i32 %70, 36064
  %72 = load i32*, i32** %31, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %49
  store i32 %71, i32* %73, align 4
  br label %74

74:                                               ; preds = %69, %48
  %75 = add nuw i64 %37, 2
  %76 = add i64 %38, -2
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %54, label %36
}

declare %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL13invalidateSubEPKN2gl7ContextEmPKjRKNS1_9RectangleE(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i64, i32*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  %10 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 4, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %57, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %57, label %17

17:                                               ; preds = %13
  %18 = icmp eq i64 %2, 0
  br i1 %18, label %57, label %19

19:                                               ; preds = %17
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"* nonnull %6, i64 %2) #13
  %20 = and i64 %2, 1
  %21 = icmp eq i64 %2, 1
  br i1 %21, label %42, label %22

22:                                               ; preds = %19
  %23 = sub i64 %2, %20
  br label %24

24:                                               ; preds = %90, %22
  %25 = phi i64 [ 0, %22 ], [ %91, %90 ]
  %26 = phi i64 [ %23, %22 ], [ %92, %90 ]
  %27 = getelementptr inbounds i32, i32* %3, i64 %25
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -6144
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %36

31:                                               ; preds = %24
  %32 = shl i32 %29, 5
  %33 = add i32 %32, 36064
  %34 = load i32*, i32** %8, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %25
  store i32 %33, i32* %35, align 4
  br label %36

36:                                               ; preds = %24, %31
  %37 = or i64 %25, 1
  %38 = getelementptr inbounds i32, i32* %3, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -6144
  %41 = icmp ult i32 %40, 3
  br i1 %41, label %85, label %90

42:                                               ; preds = %90, %19
  %43 = phi i64 [ 0, %19 ], [ %91, %90 ]
  %44 = icmp eq i64 %20, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds i32, i32* %3, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, -6144
  %49 = icmp ult i32 %48, 3
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = shl i32 %48, 5
  %52 = add i32 %51, 36064
  %53 = load i32*, i32** %8, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %43
  store i32 %52, i32* %54, align 4
  br label %55

55:                                               ; preds = %50, %45, %42
  %56 = load i32*, i32** %8, align 8
  br label %57

57:                                               ; preds = %55, %17, %13, %5
  %58 = phi i32* [ %3, %5 ], [ %3, %13 ], [ %56, %55 ], [ null, %17 ]
  %59 = call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %60 = call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %61 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %59, i64 0, i32 0, i32 524
  %62 = load void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32, i32, i32)** %61, align 8
  %63 = icmp eq void (i32, i32, i32*, i32, i32, i32, i32)* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %60, i32 36160, i32 %66) #13
  %67 = load void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32, i32, i32)** %61, align 8
  %68 = trunc i64 %2 to i32
  %69 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  call void %67(i32 36160, i32 %68, i32* %58, i32 %70, i32 %72, i32 %74, i32 %76) #13
  br label %77

77:                                               ; preds = %57, %64
  %78 = load i32*, i32** %8, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = ptrtoint i32* %78 to i64
  %82 = bitcast i32** %9 to i64*
  store i64 %81, i64* %82, align 8
  %83 = bitcast i32* %78 to i8*
  call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret i32 0

85:                                               ; preds = %36
  %86 = shl i32 %40, 5
  %87 = add i32 %86, 36064
  %88 = load i32*, i32** %8, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %37
  store i32 %87, i32* %89, align 4
  br label %90

90:                                               ; preds = %85, %36
  %91 = add nuw i64 %25, 2
  %92 = add i64 %26, -2
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %42, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL5clearEPKN2gl7ContextEj(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32) unnamed_addr #4 align 2 {
  %4 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %5 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx13FramebufferGL14syncClearStateEPKN2gl7ContextEj(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i32 %2)
  %6 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %5, i32 36160, i32 %7) #13
  %8 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %10 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464) %9)
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %4, i64 0, i32 0, i32 2
  %13 = load void (i32)*, void (i32)** %12, align 8
  tail call void %13(i32 %2) #13
  br label %18

14:                                               ; preds = %3
  %15 = tail call %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %16 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %8, align 8
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 28
  tail call void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"* %15, %"class.gl::FramebufferState"* dereferenceable(464) %16, %"struct.gl::Rectangle"* dereferenceable(16) %17, i32 0, i32 %2, i32 0, i32 0, i8* null, float 0.000000e+00, i32 0) #13
  br label %18

18:                                               ; preds = %14, %11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferGL14syncClearStateEPKN2gl7ContextEj(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32) local_unnamed_addr #4 align 2 {
  %4 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %5 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %45

8:                                                ; preds = %3
  %9 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %10 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %11 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %10, i64 0, i32 4, i32 4
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  %14 = and i32 %2, 16384
  %15 = icmp eq i32 %14, 0
  %16 = or i1 %15, %13
  %17 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %18 = load i8, i8* %17, align 4, !range !5
  br i1 %16, label %40, label %19

19:                                               ; preds = %8
  %20 = icmp eq i8 %18, 0
  br i1 %20, label %21, label %40

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %23 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %23, i64 0, i32 3, i32 0, i32 1
  %27 = load %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"** %26, align 8
  %28 = icmp eq %"class.gl::FramebufferAttachment"* %25, %27
  br i1 %28, label %43, label %29

29:                                               ; preds = %21, %37
  %30 = phi %"class.gl::FramebufferAttachment"* [ %38, %37 ], [ %25, %21 ]
  %31 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = tail call i32 @_ZNK2gl21FramebufferAttachment16getColorEncodingEv(%"class.gl::FramebufferAttachment"* %30) #13
  %36 = icmp eq i32 %35, 35904
  br i1 %36, label %43, label %37

37:                                               ; preds = %29, %34
  %38 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 1
  %39 = icmp eq %"class.gl::FramebufferAttachment"* %38, %27
  br i1 %39, label %43, label %29

40:                                               ; preds = %8, %19
  %41 = phi i8 [ 1, %19 ], [ %18, %8 ]
  %42 = icmp eq i8 %41, 0
  br label %43

43:                                               ; preds = %37, %34, %21, %40
  %44 = phi i1 [ %42, %40 ], [ false, %21 ], [ false, %37 ], [ true, %34 ]
  tail call void @_ZN2rx14StateManagerGL25setFramebufferSRGBEnabledEPKN2gl7ContextEb(%"class.rx::StateManagerGL"* %9, %"class.gl::Context"* %1, i1 zeroext %44) #13
  br label %45

45:                                               ; preds = %43, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464)) unnamed_addr #4 {
  %2 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = load %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"** %4, align 8
  %6 = icmp eq %"class.gl::FramebufferAttachment"* %3, %5
  br i1 %6, label %42, label %7

7:                                                ; preds = %1, %37
  %8 = phi i8 [ %39, %37 ], [ 1, %1 ]
  %9 = phi %"class.gl::FramebufferAttachment"* [ %38, %37 ], [ null, %1 ]
  %10 = phi %"class.gl::FramebufferAttachment"* [ %40, %37 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %7
  %15 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"* %10) #13
  br i1 %15, label %16, label %103

16:                                               ; preds = %14
  %17 = and i8 %8, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @_ZNK2gl21FramebufferAttachment16getBaseViewIndexEv(%"class.gl::FramebufferAttachment"* %10) #13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 1, i32 1
  %24 = tail call %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"* %10) #13
  %25 = tail call zeroext i8 @_ZNK2gl10ImageIndex9getTargetEv(%"class.gl::ImageIndex"* %23) #13
  %26 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 1, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = tail call i64 @_ZNK2gl7Texture8getDepthENS_13TextureTargetEm(%"class.gl::Texture"* %24, i8 zeroext %25, i64 %28) #13
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, %30
  br label %34

34:                                               ; preds = %22, %19, %16
  %35 = phi i1 [ false, %16 ], [ %33, %22 ], [ false, %19 ]
  %36 = zext i1 %35 to i8
  br label %37

37:                                               ; preds = %7, %34
  %38 = phi %"class.gl::FramebufferAttachment"* [ %9, %7 ], [ %10, %34 ]
  %39 = phi i8 [ %8, %7 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %10, i64 1
  %41 = icmp eq %"class.gl::FramebufferAttachment"* %40, %5
  br i1 %41, label %42, label %7

42:                                               ; preds = %37, %1
  %43 = phi %"class.gl::FramebufferAttachment"* [ null, %1 ], [ %38, %37 ]
  %44 = phi i8 [ 1, %1 ], [ %39, %37 ]
  %45 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getDepthAttachmentEv(%"class.gl::FramebufferState"* %0) #13
  %46 = icmp eq %"class.gl::FramebufferAttachment"* %45, null
  br i1 %46, label %68, label %47

47:                                               ; preds = %42
  %48 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"* nonnull %45) #13
  br i1 %48, label %49, label %103

49:                                               ; preds = %47
  %50 = and i8 %44, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %49
  %53 = tail call i32 @_ZNK2gl21FramebufferAttachment16getBaseViewIndexEv(%"class.gl::FramebufferAttachment"* nonnull %45) #13
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %68

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %45, i64 0, i32 1, i32 1
  %57 = tail call %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"* nonnull %45) #13
  %58 = tail call zeroext i8 @_ZNK2gl10ImageIndex9getTargetEv(%"class.gl::ImageIndex"* %56) #13
  %59 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %45, i64 0, i32 1, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = tail call i64 @_ZNK2gl7Texture8getDepthENS_13TextureTargetEm(%"class.gl::Texture"* %57, i8 zeroext %58, i64 %61) #13
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %45, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, %63
  %67 = zext i1 %66 to i8
  br label %68

68:                                               ; preds = %55, %52, %49, %42
  %69 = phi %"class.gl::FramebufferAttachment"* [ %43, %42 ], [ %45, %49 ], [ %45, %52 ], [ %45, %55 ]
  %70 = phi i8 [ %44, %42 ], [ 0, %49 ], [ 0, %52 ], [ %67, %55 ]
  %71 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState20getStencilAttachmentEv(%"class.gl::FramebufferState"* %0) #13
  %72 = icmp eq %"class.gl::FramebufferAttachment"* %71, null
  br i1 %72, label %94, label %73

73:                                               ; preds = %68
  %74 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"* nonnull %71) #13
  br i1 %74, label %75, label %103

75:                                               ; preds = %73
  %76 = and i8 %70, 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %75
  %79 = tail call i32 @_ZNK2gl21FramebufferAttachment16getBaseViewIndexEv(%"class.gl::FramebufferAttachment"* nonnull %71) #13
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %96

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %71, i64 0, i32 1, i32 1
  %83 = tail call %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"* nonnull %71) #13
  %84 = tail call zeroext i8 @_ZNK2gl10ImageIndex9getTargetEv(%"class.gl::ImageIndex"* %82) #13
  %85 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %71, i64 0, i32 1, i32 1, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = tail call i64 @_ZNK2gl7Texture8getDepthENS_13TextureTargetEm(%"class.gl::Texture"* %83, i8 zeroext %84, i64 %87) #13
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %71, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, %89
  %93 = zext i1 %92 to i8
  br label %96

94:                                               ; preds = %68
  %95 = icmp eq %"class.gl::FramebufferAttachment"* %69, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %81, %78, %75, %94
  %97 = phi i8 [ %70, %94 ], [ 0, %75 ], [ %93, %81 ], [ 0, %78 ]
  %98 = phi %"class.gl::FramebufferAttachment"* [ %69, %94 ], [ %71, %75 ], [ %71, %81 ], [ %71, %78 ]
  %99 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"* nonnull %98) #13
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br label %103

103:                                              ; preds = %14, %47, %96, %94, %73, %100
  %104 = phi i1 [ false, %47 ], [ %102, %100 ], [ false, %73 ], [ false, %94 ], [ false, %96 ], [ false, %14 ]
  ret i1 %104
}

declare %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"*, %"class.gl::FramebufferState"* dereferenceable(464), %"struct.gl::Rectangle"* dereferenceable(16), i32, i32, i32, i32, i8*, float, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL13clearBufferfvEPKN2gl7ContextEjiPKf(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32, i32, float*) unnamed_addr #4 align 2 {
  %6 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %7 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx13FramebufferGL20syncClearBufferStateEPKN2gl7ContextEji(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i32 %2, i32 %3)
  %8 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %7, i32 36160, i32 %9) #13
  %10 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %12 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464) %11)
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 221
  %15 = load void (i32, i32, float*)*, void (i32, i32, float*)** %14, align 8
  tail call void %15(i32 %2, i32 %3, float* %4) #13
  br label %21

16:                                               ; preds = %5
  %17 = tail call %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %18 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 28
  %20 = bitcast float* %4 to i8*
  tail call void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"* %17, %"class.gl::FramebufferState"* dereferenceable(464) %18, %"struct.gl::Rectangle"* dereferenceable(16) %19, i32 1, i32 0, i32 %2, i32 %3, i8* %20, float 0.000000e+00, i32 0) #13
  br label %21

21:                                               ; preds = %16, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13FramebufferGL20syncClearBufferStateEPKN2gl7ContextEji(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %6 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %54

9:                                                ; preds = %4
  %10 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %11 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %12 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %11, i64 0, i32 4, i32 4
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp ne i8 %13, 0
  %15 = icmp eq i32 %2, 6144
  %16 = and i1 %15, %14
  %17 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %18 = load i8, i8* %17, align 4, !range !5
  br i1 %16, label %19, label %51

19:                                               ; preds = %9
  %20 = icmp eq i8 %18, 0
  br i1 %20, label %21, label %51

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %23 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %22, align 8
  %24 = sext i32 %3 to i64
  %25 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %23, i64 0, i32 7, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 %24
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, 36063
  br i1 %29, label %30, label %54

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %23, i64 0, i32 3
  %32 = zext i32 %28 to i64
  %33 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %23, i64 0, i32 3, i32 0, i32 1
  %34 = bitcast %"class.gl::FramebufferAttachment"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.615"* %31 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = sdiv exact i64 %38, 48
  %40 = add nsw i64 %39, 36064
  %41 = icmp ugt i64 %40, %32
  br i1 %41, label %42, label %54

42:                                               ; preds = %30
  %43 = inttoptr i64 %37 to %"class.gl::FramebufferAttachment"*
  %44 = add i32 %28, -36064
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %43, i64 %45
  %47 = icmp eq %"class.gl::FramebufferAttachment"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %42
  %49 = tail call i32 @_ZNK2gl21FramebufferAttachment16getColorEncodingEv(%"class.gl::FramebufferAttachment"* nonnull %46) #13
  %50 = icmp eq i32 %49, 35904
  tail call void @_ZN2rx14StateManagerGL25setFramebufferSRGBEnabledEPKN2gl7ContextEb(%"class.rx::StateManagerGL"* %10, %"class.gl::Context"* %1, i1 zeroext %50) #13
  br label %54

51:                                               ; preds = %9, %19
  %52 = phi i8 [ 1, %19 ], [ %18, %9 ]
  %53 = icmp eq i8 %52, 0
  tail call void @_ZN2rx14StateManagerGL25setFramebufferSRGBEnabledEPKN2gl7ContextEb(%"class.rx::StateManagerGL"* %10, %"class.gl::Context"* %1, i1 zeroext %53) #13
  br label %54

54:                                               ; preds = %21, %30, %51, %42, %48, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL14clearBufferuivEPKN2gl7ContextEjiPKj(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32, i32, i32*) unnamed_addr #4 align 2 {
  %6 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %7 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx13FramebufferGL20syncClearBufferStateEPKN2gl7ContextEji(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i32 %2, i32 %3)
  %8 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %7, i32 36160, i32 %9) #13
  %10 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %12 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464) %11)
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 223
  %15 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %14, align 8
  tail call void %15(i32 %2, i32 %3, i32* %4) #13
  br label %21

16:                                               ; preds = %5
  %17 = tail call %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %18 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 28
  %20 = bitcast i32* %4 to i8*
  tail call void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"* %17, %"class.gl::FramebufferState"* dereferenceable(464) %18, %"struct.gl::Rectangle"* dereferenceable(16) %19, i32 2, i32 0, i32 %2, i32 %3, i8* %20, float 0.000000e+00, i32 0) #13
  br label %21

21:                                               ; preds = %16, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL13clearBufferivEPKN2gl7ContextEjiPKi(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32, i32, i32*) unnamed_addr #4 align 2 {
  %6 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %7 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx13FramebufferGL20syncClearBufferStateEPKN2gl7ContextEji(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i32 %2, i32 %3)
  %8 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %7, i32 36160, i32 %9) #13
  %10 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %12 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464) %11)
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 222
  %15 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %14, align 8
  tail call void %15(i32 %2, i32 %3, i32* %4) #13
  br label %21

16:                                               ; preds = %5
  %17 = tail call %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %18 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %10, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 28
  %20 = bitcast i32* %4 to i8*
  tail call void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"* %17, %"class.gl::FramebufferState"* dereferenceable(464) %18, %"struct.gl::Rectangle"* dereferenceable(16) %19, i32 3, i32 0, i32 %2, i32 %3, i8* %20, float 0.000000e+00, i32 0) #13
  br label %21

21:                                               ; preds = %16, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL13clearBufferfiEPKN2gl7ContextEjifi(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i32, i32, float, i32) unnamed_addr #4 align 2 {
  %7 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %8 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx13FramebufferGL20syncClearBufferStateEPKN2gl7ContextEji(%"class.rx::FramebufferGL"* %0, %"class.gl::Context"* %1, i32 %2, i32 %3)
  %9 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %8, i32 36160, i32 %10) #13
  %11 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %11, align 8
  %13 = tail call fastcc zeroext i1 @_ZN2rx12_GLOBAL__N_122RequiresMultiviewClearERKN2gl16FramebufferStateEb(%"class.gl::FramebufferState"* dereferenceable(464) %12)
  br i1 %13, label %17, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 220
  %16 = load void (i32, i32, float, i32)*, void (i32, i32, float, i32)** %15, align 8
  tail call void %16(i32 %2, i32 %3, float %4, i32 %5) #13
  br label %21

17:                                               ; preds = %6
  %18 = tail call %"class.rx::ClearMultiviewGL"* @_ZN2rx19GetMultiviewClearerEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %19 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %11, align 8
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 28
  tail call void @_ZN2rx16ClearMultiviewGL17clearMultiviewFBOERKN2gl16FramebufferStateERKNS1_9RectangleENS0_16ClearCommandTypeEjjiPKhfi(%"class.rx::ClearMultiviewGL"* %18, %"class.gl::FramebufferState"* dereferenceable(464) %19, %"struct.gl::Rectangle"* dereferenceable(16) %20, i32 4, i32 0, i32 %2, i32 %3, i8* null, float %4, i32 %5) #13
  br label %21

21:                                               ; preds = %17, %14
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, %"struct.gl::Rectangle"* dereferenceable(16), i32, i32, %"struct.gl::PixelPackState"* nocapture readonly dereferenceable(28), %"class.gl::Buffer"*, i8*) unnamed_addr #4 align 2 {
  %9 = alloca %"struct.gl::PixelPackState", align 4
  %10 = alloca %"struct.gl::Rectangle", align 4
  %11 = alloca %"struct.gl::Rectangle", align 4
  %12 = alloca %"struct.gl::Format", align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %"struct.gl::Extents", align 4
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %17 = bitcast %"class.rx::ContextImpl"** %16 to %"class.rx::ContextGL"**
  %18 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %17, align 8
  %19 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %20 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %21 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %22 = bitcast %"struct.gl::PixelPackState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %9, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %9, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %9, i64 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %9, i64 0, i32 0, i32 3
  %27 = bitcast %"struct.gl::PixelPackState"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %27, i64 28, i1 false)
  %28 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %29 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %28, align 8
  %30 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"* %29, i32 %3) #13
  %31 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 0, i32 2
  %32 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %31, align 8
  %33 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 0, i32 1, i32 1
  %34 = bitcast %"class.gl::FramebufferAttachmentObject"* %32 to { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %35 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %34, align 8
  %36 = getelementptr inbounds { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %35, i64 2
  %37 = load { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, { i64, i32 } (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %36, align 8
  %38 = tail call { i64, i32 } %37(%"class.gl::FramebufferAttachmentObject"* %32, %"class.gl::ImageIndex"* dereferenceable(16) %33) #13
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = bitcast %"struct.gl::Rectangle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 3
  store i32 0, i32* %44, align 4
  store i32 0, i32* %45, align 4
  store i32 %40, i32* %46, align 4
  store i32 %42, i32* %47, align 4
  %48 = bitcast %"struct.gl::Rectangle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #13
  %49 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 0, i64 16, i1 false) #13
  %53 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %10, %"struct.gl::Rectangle"* nonnull %11) #13
  br i1 %53, label %54, label %191

54:                                               ; preds = %8
  %55 = bitcast %"struct.gl::Format"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %31, align 8, !noalias !6
  %57 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %30, i64 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4, !noalias !6
  %59 = bitcast %"class.gl::FramebufferAttachmentObject"* %56 to void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)***
  %60 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)**, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*** %59, align 8, !noalias !6
  %61 = getelementptr inbounds void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %60, i64 3
  %62 = load void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)*, void (%"struct.gl::Format"*, %"class.gl::FramebufferAttachmentObject"*, i32, %"class.gl::ImageIndex"*)** %61, align 8, !noalias !6
  call void %62(%"struct.gl::Format"* nonnull sret %12, %"class.gl::FramebufferAttachmentObject"* %56, i32 %58, %"class.gl::ImageIndex"* dereferenceable(16) %33) #13
  %63 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %12, i64 0, i32 0
  %64 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %63, align 8
  %65 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7
  %66 = call i32 @_ZNK2gl14InternalFormat19getReadPixelsFormatERKNS_10ExtensionsE(%"struct.gl::InternalFormat"* %64, %"struct.gl::Extensions"* dereferenceable(228) %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %67 = call i64 @_ZN2rx8nativegl19GetReadPixelsFormatEPKNS_11FunctionsGLERKN5angle10FeaturesGLEjjj(%"class.rx::FunctionsGL"* %19, %"struct.angle::FeaturesGL"* dereferenceable(3576) %21, i32 %66, i32 %3, i32 %4) #13
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %21, i64 0, i32 50, i32 4
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp ne i8 %72, 0
  %74 = icmp eq i32 %70, 5123
  %75 = and i1 %73, %74
  br i1 %75, label %76, label %83, !prof !9

76:                                               ; preds = %54
  switch i32 %68, label %81 [
    i32 33319, label %83
    i32 6408, label %83
    i32 6403, label %83
    i32 6402, label %77
  ]

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 2
  %79 = load i8, i8* %78, align 2, !range !5
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %83, !prof !10

81:                                               ; preds = %77, %76
  %82 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %18, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %82, i32 1282, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN2rx13FramebufferGL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv, i64 0, i64 0), i32 672) #13
  br label %191

83:                                               ; preds = %77, %76, %76, %76, %54
  %84 = getelementptr inbounds %"class.rx::StateManagerGL", %"class.rx::StateManagerGL"* %20, i64 0, i32 78
  %85 = load i8, i8* %84, align 2, !range !5
  %86 = icmp eq i8 %85, 0
  %87 = select i1 %86, i32 36160, i32 36008
  %88 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %20, i32 %87, i32 %89) #13
  %90 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %21, i64 0, i32 10, i32 4
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp ne i8 %91, 0
  %93 = icmp ne %"class.gl::Buffer"* %6, null
  %94 = and i1 %93, %92
  br i1 %94, label %95, label %101

95:                                               ; preds = %83
  %96 = load i32, i32* %24, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = load i32, i32* %51, align 4
  %100 = icmp slt i32 %96, %99
  br label %101

101:                                              ; preds = %95, %98, %83
  %102 = phi i1 [ false, %95 ], [ false, %83 ], [ %100, %98 ]
  %103 = load i32, i32* %49, align 4
  %104 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = sub nsw i32 %103, %105
  %107 = load i32, i32* %50, align 4
  %108 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub nsw i32 %107, %109
  %111 = or i32 %110, %106
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %132, label %113

113:                                              ; preds = %101
  %114 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32 %68, i32 %70) #13
  %115 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #13
  store i32 0, i32* %13, align 4
  %116 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %23, align 4
  %119 = load i32, i32* %24, align 4
  %120 = call zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"* %114, i32 %70, i32 %117, i32 %118, i32 %119, i32* nonnull %13) #13
  br i1 %120, label %121, label %130, !prof !11

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %114, i64 0, i32 11
  %123 = load i32, i32* %122, align 4
  %124 = mul i32 %123, %106
  %125 = load i32, i32* %13, align 4
  %126 = mul i32 %125, %110
  %127 = add i32 %126, %124
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %7, i64 %128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  br label %132

130:                                              ; preds = %113
  %131 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %18, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %131, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN2rx13FramebufferGL10readPixelsEPKN2gl7ContextERKNS1_9RectangleEjjRKNS1_14PixelPackStateEPNS1_6BufferEPv, i64 0, i64 0), i32 694) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  br label %191

132:                                              ; preds = %121, %101
  %133 = phi i8* [ %7, %101 ], [ %129, %121 ]
  %134 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %9, i64 0, i32 0
  %135 = load i32, i32* %24, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %144

137:                                              ; preds = %132
  %138 = load i32, i32* %51, align 4
  %139 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %138, %140
  br i1 %141, label %154, label %142

142:                                              ; preds = %137
  store i32 %140, i32* %24, align 4
  %143 = icmp eq i32 %140, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %132, %142
  %145 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %17, align 8
  %146 = bitcast %"class.rx::ContextGL"* %145 to %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)***
  %147 = load %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)**, %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)*** %146, align 8
  %148 = getelementptr inbounds %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)*, %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)** %147, i64 58
  %149 = load %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)*, %"struct.gl::Extensions"* (%"class.rx::ContextGL"*)** %148, align 8
  %150 = call dereferenceable(228) %"struct.gl::Extensions"* %149(%"class.rx::ContextGL"* %145) #13
  %151 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %150, i64 0, i32 104
  %152 = load i8, i8* %151, align 1, !range !5
  %153 = icmp eq i8 %152, 0
  br label %154

154:                                              ; preds = %137, %142, %144
  %155 = phi i1 [ false, %142 ], [ %153, %144 ], [ false, %137 ]
  %156 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %21, i64 0, i32 61, i32 4
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %154
  %160 = load i32, i32* %25, align 4
  %161 = load i32, i32* %26, align 4
  %162 = or i32 %161, %160
  %163 = icmp ne i32 %162, 0
  br label %164

164:                                              ; preds = %154, %159
  %165 = phi i1 [ false, %154 ], [ %163, %159 ]
  %166 = or i1 %102, %155
  %167 = or i1 %166, %165
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = call i32 @_ZNK2rx13FramebufferGL18readPixelsRowByRowEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPh(%"class.rx::FramebufferGL"* undef, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %11, i32 %3, i32 %68, i32 %70, %"struct.gl::PixelPackState"* nonnull dereferenceable(28) %9, i8* %133)
  br label %191

170:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #13
  store i8 0, i8* %14, align 1
  %171 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %21, i64 0, i32 15, i32 4
  %172 = load i8, i8* %171, align 8, !range !5
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %186, label %174

174:                                              ; preds = %170
  %175 = bitcast %"struct.gl::Extents"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %175) #13
  %176 = load i32, i32* %51, align 4
  %177 = load i32, i32* %52, align 4
  %178 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %15, i64 0, i32 0
  store i32 %176, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %15, i64 0, i32 1
  store i32 %177, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %15, i64 0, i32 2
  store i32 1, i32* %180, align 4
  %181 = call i32 @_ZN2rx35ShouldApplyLastRowPaddingWorkaroundEPNS_9ContextGLERKN2gl7ExtentsERKNS2_19PixelStoreStateBaseEPKNS2_6BufferEjjbPKvPb(%"class.rx::ContextGL"* %18, %"struct.gl::Extents"* nonnull dereferenceable(12) %15, %"struct.gl::PixelStoreStateBase"* nonnull dereferenceable(24) %134, %"class.gl::Buffer"* %6, i32 %68, i32 %70, i1 zeroext false, i8* %133, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %175) #13
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %189, label %183

183:                                              ; preds = %174
  %184 = load i8, i8* %14, align 1, !range !5
  %185 = icmp ne i8 %184, 0
  br label %186

186:                                              ; preds = %183, %170
  %187 = phi i1 [ %185, %183 ], [ false, %170 ]
  %188 = call i32 @_ZNK2rx13FramebufferGL19readPixelsAllAtOnceEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPhb(%"class.rx::FramebufferGL"* undef, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %11, i32 %3, i32 %68, i32 %70, %"struct.gl::PixelPackState"* nonnull dereferenceable(28) %9, i8* %133, i1 zeroext %187)
  br label %189

189:                                              ; preds = %174, %186
  %190 = phi i32 [ %188, %186 ], [ 1, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #13
  br label %191

191:                                              ; preds = %130, %81, %168, %189, %8
  %192 = phi i32 [ 0, %8 ], [ 1, %81 ], [ 1, %130 ], [ %169, %168 ], [ %190, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %22) #13
  ret i32 %192
}

declare dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState23getReadPixelsAttachmentEj(%"class.gl::FramebufferState"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #2

declare i32 @_ZNK2gl14InternalFormat19getReadPixelsFormatERKNS_10ExtensionsE(%"struct.gl::InternalFormat"*, %"struct.gl::Extensions"* dereferenceable(228)) local_unnamed_addr #2

declare i64 @_ZN2rx8nativegl19GetReadPixelsFormatEPKNS_11FunctionsGLERKN5angle10FeaturesGLEjjj(%"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"* dereferenceable(3576), i32, i32, i32) local_unnamed_addr #2

declare void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #2

declare dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"*, i32, i32, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferGL18readPixelsRowByRowEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPh(%"class.rx::FramebufferGL"* nocapture readnone, %"class.gl::Context"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), i32, i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), i8*) local_unnamed_addr #4 align 2 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", align 8
  %12 = alloca %"struct.gl::PixelPackState", align 4
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = bitcast %"class.rx::ContextImpl"** %13 to %"class.rx::ContextGL"**
  %15 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %14, align 8
  %16 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %17 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %18 = tail call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32 %4, i32 %5) #13
  %19 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 0, i32* %9, align 4
  %20 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = call zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"* %18, i32 %5, i32 %21, i32 %23, i32 %25, i32* nonnull %9) #13
  br i1 %26, label %29, label %27, !prof !11

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %15, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %28, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZNK2rx13FramebufferGL18readPixelsRowByRowEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPh, i64 0, i64 0), i32 1494) #13
  br label %105

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #13
  store i32 0, i32* %10, align 4
  %32 = load i32, i32* %9, align 4
  %33 = call zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"* %18, i32 %5, i32 %32, i32 0, %"struct.gl::PixelStoreStateBase"* dereferenceable(24) %30, i1 zeroext false, i32* nonnull %10) #13
  br i1 %33, label %36, label %34, !prof !11

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %15, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %35, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZNK2rx13FramebufferGL18readPixelsRowByRowEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPh, i64 0, i64 0), i32 1497) #13
  br label %103

36:                                               ; preds = %29
  %37 = bitcast %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %11, i64 0, i32 1
  %40 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %11, i64 0, i32 2
  %41 = bitcast %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 17, i1 false) #13
  %42 = load i32, i32* %10, align 4
  %43 = load i32, i32* %9, align 4
  %44 = call i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"* %18, i32 %5) #13
  %45 = call fastcc i32 @_ZN2rx12_GLOBAL__N_140ScopedEXTTextureNorm16ReadbackWorkaround10InitializeEPKN2gl7ContextERKNS2_9RectangleEjjjjjjPh(%"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* nonnull %11, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %2, i32 %3, i32 %4, i32 %5, i32 %42, i32 %43, i32 %44, i8* %7)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %97

47:                                               ; preds = %36
  %48 = bitcast %"struct.gl::PixelPackState"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %48) #13
  %49 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %12, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %12, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.gl::PixelPackState"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 -86, i64 28, i1 false)
  %52 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 21, i1 false) #13
  store i32 1, i32* %49, align 4
  %53 = call i32 @_ZN2rx14StateManagerGL17setPixelPackStateEPKN2gl7ContextERKNS1_14PixelPackStateE(%"class.rx::StateManagerGL"* %17, %"class.gl::Context"* %1, %"struct.gl::PixelPackState"* nonnull dereferenceable(28) %12) #13
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %95, label %55

55:                                               ; preds = %47
  %56 = load i8*, i8** %38, align 8
  %57 = icmp eq i8* %56, null
  %58 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %71

62:                                               ; preds = %55
  %63 = load i32, i32* %58, align 4
  %64 = load i8*, i8** %39, align 8
  %65 = select i1 %57, i8* %64, i8* %56
  %66 = load i32, i32* %10, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  %69 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %16, i64 0, i32 0, i32 37
  %70 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  br label %74

71:                                               ; preds = %74, %55
  %72 = load i8, i8* %40, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %95, label %88

74:                                               ; preds = %62, %74
  %75 = phi i32 [ %63, %62 ], [ %83, %74 ]
  %76 = phi i8* [ %68, %62 ], [ %82, %74 ]
  %77 = load void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)** %69, align 8
  %78 = load i32, i32* %70, align 4
  %79 = load i32, i32* %20, align 4
  call void %77(i32 %78, i32 %75, i32 %79, i32 1, i32 %4, i32 %5, i8* %76) #13
  %80 = load i32, i32* %9, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  %83 = add nsw i32 %75, 1
  %84 = load i32, i32* %58, align 4
  %85 = load i32, i32* %59, align 4
  %86 = add nsw i32 %85, %84
  %87 = icmp slt i32 %83, %86
  br i1 %87, label %74, label %71

88:                                               ; preds = %71
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* %9, align 4
  %91 = call i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"* %18, i32 %5) #13
  %92 = load i8*, i8** %39, align 8
  %93 = select i1 %57, i8* %92, i8* %56
  %94 = call fastcc i32 @_ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_(%"class.gl::Context"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %2, i32 %3, i32 %4, i32 %5, i32 %89, i32 %90, i32 %91, %"struct.gl::PixelPackState"* dereferenceable(28) %6, i8* %7, i8* %93)
  br label %95

95:                                               ; preds = %71, %47, %88
  %96 = phi i32 [ 1, %47 ], [ %94, %88 ], [ 0, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %48) #13
  br label %97

97:                                               ; preds = %36, %95
  %98 = phi i32 [ %96, %95 ], [ %45, %36 ]
  %99 = load i8*, i8** %38, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %102, label %101

101:                                              ; preds = %97
  call void @_ZdaPv(i8* nonnull %99) #14
  br label %102

102:                                              ; preds = %97, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br label %103

103:                                              ; preds = %102, %34
  %104 = phi i32 [ 1, %34 ], [ %98, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #13
  br label %105

105:                                              ; preds = %103, %27
  %106 = phi i32 [ 1, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  ret i32 %106
}

declare i32 @_ZN2rx35ShouldApplyLastRowPaddingWorkaroundEPNS_9ContextGLERKN2gl7ExtentsERKNS2_19PixelStoreStateBaseEPKNS2_6BufferEjjbPKvPb(%"class.rx::ContextGL"*, %"struct.gl::Extents"* dereferenceable(12), %"struct.gl::PixelStoreStateBase"* dereferenceable(24), %"class.gl::Buffer"*, i32, i32, i1 zeroext, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferGL19readPixelsAllAtOnceEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPhb(%"class.rx::FramebufferGL"* nocapture readnone, %"class.gl::Context"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), i32, i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), i8*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", align 8
  %13 = alloca %"struct.gl::PixelPackState", align 4
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = bitcast %"class.rx::ContextImpl"** %14 to %"class.rx::ContextGL"**
  %16 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %15, align 8
  %17 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %18 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %19 = tail call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32 %4, i32 %5) #13
  %20 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 0, i32* %10, align 4
  %21 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"* %19, i32 %5, i32 %22, i32 %24, i32 %26, i32* nonnull %10) #13
  br i1 %27, label %30, label %28, !prof !11

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %16, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %29, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZNK2rx13FramebufferGL19readPixelsAllAtOnceEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPhb, i64 0, i64 0), i32 1549) #13
  br label %123

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %6, i64 0, i32 0
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  store i32 0, i32* %11, align 4
  %33 = load i32, i32* %10, align 4
  %34 = call zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"* %19, i32 %5, i32 %33, i32 0, %"struct.gl::PixelStoreStateBase"* dereferenceable(24) %31, i1 zeroext false, i32* nonnull %11) #13
  br i1 %34, label %37, label %35, !prof !11

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %16, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %36, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZNK2rx13FramebufferGL19readPixelsAllAtOnceEPKN2gl7ContextERKNS1_9RectangleEjjjRKNS1_14PixelPackStateEPhb, i64 0, i64 0), i32 1552) #13
  br label %121

37:                                               ; preds = %30
  %38 = bitcast %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %12, i64 0, i32 0
  %40 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %12, i64 0, i32 1
  %41 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %12, i64 0, i32 2
  %42 = bitcast %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 17, i1 false) #13
  %43 = load i32, i32* %11, align 4
  %44 = load i32, i32* %10, align 4
  %45 = call i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"* %19, i32 %5) #13
  %46 = call fastcc i32 @_ZN2rx12_GLOBAL__N_140ScopedEXTTextureNorm16ReadbackWorkaround10InitializeEPKN2gl7ContextERKNS2_9RectangleEjjjjjjPh(%"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* nonnull %12, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %2, i32 %3, i32 %4, i32 %5, i32 %43, i32 %44, i32 %45, i8* %7)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %112

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = zext i1 %8 to i32
  %52 = sub nsw i32 %50, %51
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %48
  %55 = call i32 @_ZN2rx14StateManagerGL17setPixelPackStateEPKN2gl7ContextERKNS1_14PixelPackStateE(%"class.rx::StateManagerGL"* %18, %"class.gl::Context"* %1, %"struct.gl::PixelPackState"* dereferenceable(28) %6) #13
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %112, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %17, i64 0, i32 0, i32 37
  %59 = load void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)** %58, align 8
  %60 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %21, align 4
  %65 = load i8*, i8** %39, align 8
  %66 = icmp eq i8* %65, null
  %67 = load i8*, i8** %40, align 8
  %68 = select i1 %66, i8* %67, i8* %65
  call void %59(i32 %61, i32 %63, i32 %64, i32 %52, i32 %4, i32 %5, i8* %68) #13
  br label %69

69:                                               ; preds = %57, %48
  br i1 %8, label %70, label %100

70:                                               ; preds = %69
  %71 = bitcast %"struct.gl::PixelPackState"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %13, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %13, i64 0, i32 0, i32 1
  %74 = bitcast %"struct.gl::PixelPackState"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %74, i8 -86, i64 28, i1 false)
  %75 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 21, i1 false) #13
  store i32 1, i32* %72, align 4
  %76 = call i32 @_ZN2rx14StateManagerGL17setPixelPackStateEPKN2gl7ContextERKNS1_14PixelPackStateE(%"class.rx::StateManagerGL"* %18, %"class.gl::Context"* %1, %"struct.gl::PixelPackState"* nonnull dereferenceable(28) %13) #13
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %99, label %78

78:                                               ; preds = %70
  %79 = load i8*, i8** %39, align 8
  %80 = icmp eq i8* %79, null
  %81 = load i8*, i8** %40, align 8
  %82 = select i1 %80, i8* %81, i8* %79
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %49, align 4
  %85 = add i32 %84, -1
  %86 = load i32, i32* %10, align 4
  %87 = mul i32 %85, %86
  %88 = add i32 %87, %83
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %82, i64 %89
  %91 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %17, i64 0, i32 0, i32 37
  %92 = load void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)** %91, align 8
  %93 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %85, %96
  %98 = load i32, i32* %21, align 4
  call void %92(i32 %94, i32 %97, i32 %98, i32 1, i32 %4, i32 %5, i8* %90) #13
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %71) #13
  br label %100

99:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %71) #13
  br label %112

100:                                              ; preds = %78, %69
  %101 = load i8, i8* %41, align 8, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %100
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %10, align 4
  %106 = call i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"* %19, i32 %5) #13
  %107 = load i8*, i8** %39, align 8
  %108 = icmp eq i8* %107, null
  %109 = load i8*, i8** %40, align 8
  %110 = select i1 %108, i8* %109, i8* %107
  %111 = call fastcc i32 @_ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_(%"class.gl::Context"* %1, %"struct.gl::Rectangle"* dereferenceable(16) %2, i32 %3, i32 %4, i32 %5, i32 %104, i32 %105, i32 %106, %"struct.gl::PixelPackState"* dereferenceable(28) %6, i8* %7, i8* %110)
  br label %115

112:                                              ; preds = %37, %99, %100, %54
  %113 = phi i32 [ 0, %100 ], [ 1, %54 ], [ 1, %99 ], [ %46, %37 ]
  %114 = load i8*, i8** %39, align 8
  br label %115

115:                                              ; preds = %112, %103
  %116 = phi i8* [ %114, %112 ], [ %107, %103 ]
  %117 = phi i32 [ %113, %112 ], [ %111, %103 ]
  %118 = icmp eq i8* %116, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  call void @_ZdaPv(i8* nonnull %116) #14
  br label %120

120:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  br label %121

121:                                              ; preds = %120, %35
  %122 = phi i32 [ 1, %35 ], [ %117, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  br label %123

123:                                              ; preds = %121, %28
  %124 = phi i32 [ 1, %28 ], [ %122, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL4blitEPKN2gl7ContextERKNS1_9RectangleES7_jj(%"class.rx::FramebufferGL"*, %"class.gl::Context"*, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), i32, i32) unnamed_addr #4 align 2 {
  %7 = alloca %"struct.gl::Version", align 4
  %8 = alloca %"struct.gl::Version", align 4
  %9 = alloca %"struct.gl::Rectangle", align 4
  %10 = alloca %"struct.gl::Rectangle", align 4
  %11 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %12 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %13 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 60
  %15 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %17 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %16, align 8
  %18 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer22getReadColorAttachmentEv(%"class.gl::Framebuffer"* %15) #13
  %19 = icmp eq %"class.gl::FramebufferAttachment"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %6
  %21 = bitcast %"struct.gl::Version"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  br label %38

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %18, i64 0, i32 2
  %24 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %23, align 8
  %25 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %18, i64 0, i32 1, i32 1
  %26 = bitcast %"class.gl::FramebufferAttachmentObject"* %24 to i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %27 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %27, i64 4
  %29 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %28, align 8
  %30 = tail call i32 %29(%"class.gl::FramebufferAttachmentObject"* %24, %"class.gl::ImageIndex"* dereferenceable(16) %25) #13
  %31 = tail call i32 @_ZNK2gl21FramebufferAttachment16getColorEncodingEv(%"class.gl::FramebufferAttachment"* nonnull %18) #13
  %32 = icmp eq i32 %31, 35904
  %33 = bitcast %"struct.gl::Version"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  br i1 %32, label %34, label %38

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %7, i64 0, i32 0
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %7, i64 0, i32 1
  store i32 3, i32* %36, align 4
  %37 = call zeroext i1 @_ZNK2rx11FunctionsGL10isAtMostGLERKN2gl7VersionE(%"class.rx::FunctionsGL"* %11, %"struct.gl::Version"* nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br i1 %37, label %66, label %41

38:                                               ; preds = %20, %22
  %39 = phi i8* [ %33, %22 ], [ %21, %20 ]
  %40 = phi i32 [ %30, %22 ], [ 0, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi i32 [ %30, %34 ], [ %40, %38 ]
  %43 = call i64 @_ZNK2gl11Framebuffer23getDrawbufferStateCountEv(%"class.gl::Framebuffer"* %17) #13
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %41, %52
  %46 = phi i64 [ %53, %52 ], [ 0, %41 ]
  %47 = call %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer13getDrawBufferEm(%"class.gl::Framebuffer"* %17, i64 %46) #13
  %48 = icmp eq %"class.gl::FramebufferAttachment"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = call i32 @_ZNK2gl21FramebufferAttachment16getColorEncodingEv(%"class.gl::FramebufferAttachment"* nonnull %47) #13
  %51 = icmp eq i32 %50, 35904
  br i1 %51, label %58, label %52

52:                                               ; preds = %49, %45
  %53 = add nuw i64 %46, 1
  %54 = call i64 @_ZNK2gl11Framebuffer23getDrawbufferStateCountEv(%"class.gl::Framebuffer"* %17) #13
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %45, label %56

56:                                               ; preds = %52, %41
  %57 = bitcast %"struct.gl::Version"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  br label %63

58:                                               ; preds = %49
  %59 = bitcast %"struct.gl::Version"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %8, i64 0, i32 0
  store i32 4, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %8, i64 0, i32 1
  store i32 1, i32* %61, align 4
  %62 = call zeroext i1 @_ZNK2rx11FunctionsGL10isAtMostGLERKN2gl7VersionE(%"class.rx::FunctionsGL"* %11, %"struct.gl::Version"* nonnull dereferenceable(8) %8) #13
  br label %63

63:                                               ; preds = %56, %58
  %64 = phi i8* [ %59, %58 ], [ %57, %56 ]
  %65 = phi i1 [ %62, %58 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  br label %66

66:                                               ; preds = %34, %63
  %67 = phi i32 [ %42, %63 ], [ %30, %34 ]
  %68 = phi i1 [ %65, %63 ], [ true, %34 ]
  %69 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 3
  %70 = load i8, i8* %69, align 1, !range !5
  %71 = icmp ne i8 %70, 0
  %72 = or i1 %68, %71
  call void @_ZN2rx14StateManagerGL39setFramebufferSRGBEnabledForFramebufferEPKN2gl7ContextEbPKNS_13FramebufferGLE(%"class.rx::StateManagerGL"* %12, %"class.gl::Context"* %1, i1 zeroext true, %"class.rx::FramebufferGL"* %0) #13
  br i1 %72, label %73, label %85

73:                                               ; preds = %66
  %74 = and i32 %4, 16384
  %75 = icmp ne i32 %74, 0
  %76 = icmp slt i32 %67, 2
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = call %"class.rx::BlitGL"* @_ZN2rx9GetBlitGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %80 = load i8, i8* %69, align 1, !range !5
  %81 = icmp eq i8 %80, 0
  %82 = call i32 @_ZN2rx6BlitGL25blitColorBufferWithShaderEPKN2gl7ContextEPKNS1_11FramebufferES7_RKNS1_9RectangleESA_jb(%"class.rx::BlitGL"* %79, %"class.gl::Context"* %1, %"class.gl::Framebuffer"* %15, %"class.gl::Framebuffer"* %17, %"struct.gl::Rectangle"* dereferenceable(16) %2, %"struct.gl::Rectangle"* dereferenceable(16) %3, i32 %5, i1 zeroext %81) #13
  %83 = icmp eq i32 %82, 1
  %84 = and i32 %4, -16385
  br i1 %83, label %138, label %85

85:                                               ; preds = %78, %73, %66
  %86 = phi i32 [ %84, %78 ], [ %4, %73 ], [ %4, %66 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %138, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %15, i64 0, i32 4
  %90 = bitcast %"class.rx::FramebufferImpl"** %89 to %"class.rx::FramebufferGL"**
  %91 = load %"class.rx::FramebufferGL"*, %"class.rx::FramebufferGL"** %90, align 8
  %92 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %12, i32 36008, i32 %93) #13
  %94 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %12, i32 36009, i32 %95) #13
  %96 = bitcast %"struct.gl::Rectangle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #13
  %97 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %9, i64 0, i32 3
  %101 = bitcast %"struct.gl::Rectangle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* align 4 %101, i64 16, i1 false)
  %102 = bitcast %"struct.gl::Rectangle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %103 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %10, i64 0, i32 3
  %107 = bitcast %"struct.gl::Rectangle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %107, i64 16, i1 false)
  %108 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %13, i64 0, i32 41, i32 4
  %109 = load i8, i8* %108, align 8, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %88
  %112 = call i32 @_ZN2rx13FramebufferGL18adjustSrcDstRegionEPKN2gl7ContextERKNS1_9RectangleES7_PS5_S8_(%"class.rx::FramebufferGL"* undef, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %10, %"struct.gl::Rectangle"* nonnull %9, %"struct.gl::Rectangle"* nonnull %10)
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %136

114:                                              ; preds = %88, %111
  %115 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %13, i64 0, i32 42, i32 4
  %116 = load i8, i8* %115, align 8, !range !5
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = call i32 @_ZN2rx13FramebufferGL13clipSrcRegionEPKN2gl7ContextERKNS1_9RectangleES7_PS5_S8_(%"class.rx::FramebufferGL"* undef, %"class.gl::Context"* %1, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %9, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %10, %"struct.gl::Rectangle"* nonnull %9, %"struct.gl::Rectangle"* nonnull %10)
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %136

121:                                              ; preds = %114, %118
  %122 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %11, i64 0, i32 0, i32 217
  %123 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %122, align 8
  %124 = load i32, i32* %97, align 4
  %125 = load i32, i32* %98, align 4
  %126 = load i32, i32* %99, align 4
  %127 = add nsw i32 %126, %124
  %128 = load i32, i32* %100, align 4
  %129 = add nsw i32 %128, %125
  %130 = load i32, i32* %103, align 4
  %131 = load i32, i32* %104, align 4
  %132 = load i32, i32* %105, align 4
  %133 = add nsw i32 %132, %130
  %134 = load i32, i32* %106, align 4
  %135 = add nsw i32 %134, %131
  call void %123(i32 %124, i32 %125, i32 %127, i32 %129, i32 %130, i32 %131, i32 %133, i32 %135, i32 %86, i32 %5) #13
  br label %136

136:                                              ; preds = %111, %118, %121
  %137 = phi i32 [ 0, %121 ], [ %119, %118 ], [ %112, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #13
  br label %138

138:                                              ; preds = %78, %85, %136
  %139 = phi i32 [ %137, %136 ], [ 1, %78 ], [ 0, %85 ]
  ret i32 %139
}

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer22getReadColorAttachmentEv(%"class.gl::Framebuffer"*) local_unnamed_addr #2

declare i32 @_ZNK2gl21FramebufferAttachment16getColorEncodingEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2rx11FunctionsGL10isAtMostGLERKN2gl7VersionE(%"class.rx::FunctionsGL"*, %"struct.gl::Version"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK2gl11Framebuffer23getDrawbufferStateCountEv(%"class.gl::Framebuffer"*) local_unnamed_addr #2

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl11Framebuffer13getDrawBufferEm(%"class.gl::Framebuffer"*, i64) local_unnamed_addr #2

declare void @_ZN2rx14StateManagerGL39setFramebufferSRGBEnabledForFramebufferEPKN2gl7ContextEbPKNS_13FramebufferGLE(%"class.rx::StateManagerGL"*, %"class.gl::Context"*, i1 zeroext, %"class.rx::FramebufferGL"*) local_unnamed_addr #2

declare %"class.rx::BlitGL"* @_ZN2rx9GetBlitGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare i32 @_ZN2rx6BlitGL25blitColorBufferWithShaderEPKN2gl7ContextEPKNS1_11FramebufferES7_RKNS1_9RectangleESA_jb(%"class.rx::BlitGL"*, %"class.gl::Context"*, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferGL16getFramebufferIDEv(%"class.rx::FramebufferGL"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL18adjustSrcDstRegionEPKN2gl7ContextERKNS1_9RectangleES7_PS5_S8_(%"class.rx::FramebufferGL"* nocapture readnone, %"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* nocapture, %"struct.gl::Rectangle"* nocapture) local_unnamed_addr #4 align 2 {
  %7 = alloca %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", align 4
  %8 = bitcast %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 60
  %10 = bitcast %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -86, i64 68, i1 false)
  %11 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %9, align 8, !noalias !12
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %13 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %12, align 8, !noalias !12
  %14 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %11) #13, !noalias !12
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %13) #13, !noalias !12
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %24, align 4, !alias.scope !12
  %25 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 1
  store i32 0, i32* %25, align 4, !alias.scope !12
  %26 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 2
  store i32 %16, i32* %26, align 4, !alias.scope !12
  %27 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 3
  store i32 %18, i32* %27, align 4, !alias.scope !12
  %28 = tail call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* %2) #13, !noalias !12
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = extractvalue { i64, i64 } %28, 1
  %31 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1
  %32 = bitcast %"struct.gl::Rectangle"* %31 to i64*
  store i64 %29, i64* %32, align 4, !alias.scope !12
  %33 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 2
  %34 = bitcast i32* %33 to i64*
  store i64 %30, i64* %34, align 4, !alias.scope !12
  %35 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 0
  store i32 0, i32* %35, align 4, !alias.scope !12
  %36 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 1
  store i32 0, i32* %36, align 4, !alias.scope !12
  %37 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 2
  store i32 %21, i32* %37, align 4, !alias.scope !12
  %38 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 3
  store i32 %23, i32* %38, align 4, !alias.scope !12
  %39 = tail call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* %3) #13, !noalias !12
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3
  %43 = bitcast %"struct.gl::Rectangle"* %42 to i64*
  store i64 %40, i64* %43, align 4, !alias.scope !12
  %44 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 2
  %45 = bitcast i32* %44 to i64*
  store i64 %41, i64* %45, align 4, !alias.scope !12
  %46 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %47 = load i32, i32* %46, align 4, !noalias !12
  %48 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 2
  %49 = load i32, i32* %48, align 4, !noalias !12
  %50 = xor i32 %49, %47
  %51 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 4
  %52 = lshr i32 %50, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 4, !alias.scope !12
  %54 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %55 = load i32, i32* %54, align 4, !noalias !12
  %56 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 3
  %57 = load i32, i32* %56, align 4, !noalias !12
  %58 = xor i32 %57, %55
  %59 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 5
  %60 = lshr i32 %58, 31
  %61 = trunc i32 %60 to i8
  store i8 %61, i8* %59, align 1, !alias.scope !12
  %62 = trunc i64 %41 to i32
  %63 = icmp eq i32 %62, 0
  %64 = trunc i64 %30 to i32
  %65 = icmp eq i32 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %315, label %67

67:                                               ; preds = %6
  %68 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 3
  %69 = icmp ult i64 %41, 4294967296
  br i1 %69, label %315, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 3
  %72 = icmp ult i64 %30, 4294967296
  br i1 %72, label %315, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2
  %75 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %74, %"struct.gl::Rectangle"* dereferenceable(16) %42, %"struct.gl::Rectangle"* null) #13
  br i1 %75, label %76, label %315

76:                                               ; preds = %73
  %77 = call zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"* %74, %"struct.gl::Rectangle"* dereferenceable(16) %42) #13
  br i1 %77, label %187, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %42, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 1
  %81 = load i32, i32* %44, align 4
  %82 = load i32, i32* %37, align 4
  %83 = shl nsw i32 %82, 1
  %84 = icmp sgt i32 %81, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %78, %85
  %86 = phi i32 [ %89, %85 ], [ 0, %78 ]
  %87 = phi i32 [ %88, %85 ], [ %81, %78 ]
  %88 = sdiv i32 %87, 2
  %89 = add i32 %86, 1
  %90 = icmp sgt i32 %88, %83
  br i1 %90, label %85, label %91

91:                                               ; preds = %85, %78
  %92 = phi i32 [ %81, %78 ], [ %88, %85 ]
  %93 = phi i32 [ 0, %78 ], [ %89, %85 ]
  %94 = load i32, i32* %68, align 4
  %95 = load i32, i32* %38, align 4
  %96 = shl nsw i32 %95, 1
  %97 = icmp sgt i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %91, %98
  %99 = phi i32 [ %102, %98 ], [ 0, %91 ]
  %100 = phi i32 [ %101, %98 ], [ %94, %91 ]
  %101 = sdiv i32 %100, 2
  %102 = add i32 %99, 1
  %103 = icmp sgt i32 %101, %96
  br i1 %103, label %98, label %104

104:                                              ; preds = %98, %91
  %105 = phi i32 [ %94, %91 ], [ %101, %98 ]
  %106 = phi i32 [ 0, %91 ], [ %102, %98 ]
  %107 = load i32, i32* %79, align 4
  %108 = add nsw i32 %81, %107
  %109 = load i32, i32* %80, align 4
  %110 = add nsw i32 %94, %109
  %111 = icmp sgt i32 %107, -1
  %112 = icmp slt i32 %107, %82
  %113 = and i1 %111, %112
  br i1 %113, label %125, label %114

114:                                              ; preds = %104
  %115 = icmp slt i32 %108, 1
  %116 = icmp sgt i32 %108, %82
  %117 = or i1 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = sub nsw i32 %108, %92
  br label %125

120:                                              ; preds = %114
  %121 = sub nsw i32 %81, %92
  %122 = sdiv i32 %121, 2
  %123 = add nsw i32 %107, %122
  %124 = sdiv i32 %121, 4
  br label %125

125:                                              ; preds = %104, %118, %120
  %126 = phi i32 [ %119, %118 ], [ %123, %120 ], [ %107, %104 ]
  %127 = phi i32 [ 0, %118 ], [ %124, %120 ], [ 0, %104 ]
  %128 = icmp sgt i32 %109, -1
  %129 = icmp slt i32 %109, %95
  %130 = and i1 %128, %129
  br i1 %130, label %142, label %131

131:                                              ; preds = %125
  %132 = icmp slt i32 %110, 1
  %133 = icmp sgt i32 %110, %95
  %134 = or i1 %132, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = sub nsw i32 %110, %105
  br label %142

137:                                              ; preds = %131
  %138 = sub nsw i32 %94, %105
  %139 = sdiv i32 %138, 2
  %140 = add nsw i32 %109, %139
  %141 = sdiv i32 %138, 4
  br label %142

142:                                              ; preds = %125, %135, %137
  %143 = phi i32 [ %136, %135 ], [ %140, %137 ], [ %109, %125 ]
  %144 = phi i32 [ 0, %135 ], [ %141, %137 ], [ 0, %125 ]
  %145 = sub i32 %126, %107
  %146 = sub i32 %145, %127
  %147 = sub i32 %143, %144
  %148 = sub i32 %147, %109
  %149 = load i8, i8* %51, align 4, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %142
  %152 = sub i32 %108, %92
  %153 = sub i32 %152, %126
  %154 = add i32 %153, %127
  br label %155

155:                                              ; preds = %142, %151
  %156 = phi i32 [ %146, %142 ], [ %154, %151 ]
  %157 = load i8, i8* %59, align 1, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = sub i32 %110, %105
  %161 = sub i32 %160, %143
  %162 = add i32 %161, %144
  br label %163

163:                                              ; preds = %155, %159
  %164 = phi i32 [ %148, %155 ], [ %162, %159 ]
  %165 = or i32 %164, %156
  %166 = icmp sgt i32 %165, -1
  br i1 %166, label %167, label %315

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 0
  store i32 %126, i32* %168, align 4
  store i32 %143, i32* %80, align 4
  store i32 %92, i32* %44, align 4
  store i32 %105, i32* %68, align 4
  %169 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %31, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = lshr i32 %156, %93
  %172 = add i32 %170, %171
  %173 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = lshr i32 %164, %106
  %176 = add i32 %174, %175
  %177 = load i32, i32* %33, align 4
  %178 = ashr i32 %177, %93
  %179 = load i32, i32* %71, align 4
  %180 = ashr i32 %179, %106
  %181 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 0
  store i32 %172, i32* %181, align 4
  store i32 %176, i32* %173, align 4
  store i32 %178, i32* %33, align 4
  store i32 %180, i32* %71, align 4
  %182 = icmp eq i32 %178, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %167
  store i32 1, i32* %33, align 4
  br label %184

184:                                              ; preds = %183, %167
  %185 = icmp eq i32 %180, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %184
  store i32 1, i32* %71, align 4
  br label %187

187:                                              ; preds = %186, %184, %76
  %188 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0
  %189 = call zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"* nonnull %188, %"struct.gl::Rectangle"* dereferenceable(16) %31) #13
  br i1 %189, label %294, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %31, i64 0, i32 0
  %192 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 1
  %193 = load i32, i32* %33, align 4
  %194 = load i32, i32* %26, align 4
  %195 = shl nsw i32 %194, 1
  %196 = icmp sgt i32 %193, %195
  br i1 %196, label %197, label %203

197:                                              ; preds = %190, %197
  %198 = phi i32 [ %200, %197 ], [ %193, %190 ]
  %199 = phi i32 [ %201, %197 ], [ 0, %190 ]
  %200 = sdiv i32 %198, 2
  %201 = add i32 %199, 1
  %202 = icmp sgt i32 %200, %195
  br i1 %202, label %197, label %203

203:                                              ; preds = %197, %190
  %204 = phi i32 [ 0, %190 ], [ %201, %197 ]
  %205 = phi i32 [ %193, %190 ], [ %200, %197 ]
  %206 = load i32, i32* %71, align 4
  %207 = load i32, i32* %27, align 4
  %208 = shl nsw i32 %207, 1
  %209 = icmp sgt i32 %206, %208
  br i1 %209, label %210, label %216

210:                                              ; preds = %203, %210
  %211 = phi i32 [ %213, %210 ], [ %206, %203 ]
  %212 = phi i32 [ %214, %210 ], [ 0, %203 ]
  %213 = sdiv i32 %211, 2
  %214 = add i32 %212, 1
  %215 = icmp sgt i32 %213, %208
  br i1 %215, label %210, label %216

216:                                              ; preds = %210, %203
  %217 = phi i32 [ 0, %203 ], [ %214, %210 ]
  %218 = phi i32 [ %206, %203 ], [ %213, %210 ]
  %219 = load i32, i32* %191, align 4
  %220 = add nsw i32 %193, %219
  %221 = load i32, i32* %192, align 4
  %222 = add nsw i32 %206, %221
  %223 = icmp sgt i32 %219, -1
  %224 = icmp slt i32 %219, %194
  %225 = and i1 %223, %224
  br i1 %225, label %237, label %226

226:                                              ; preds = %216
  %227 = icmp slt i32 %220, 1
  %228 = icmp sgt i32 %220, %194
  %229 = or i1 %227, %228
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = sub nsw i32 %220, %205
  br label %237

232:                                              ; preds = %226
  %233 = sub nsw i32 %193, %205
  %234 = sdiv i32 %233, 2
  %235 = add nsw i32 %219, %234
  %236 = sdiv i32 %233, 4
  br label %237

237:                                              ; preds = %216, %230, %232
  %238 = phi i32 [ %231, %230 ], [ %235, %232 ], [ %219, %216 ]
  %239 = phi i32 [ 0, %230 ], [ %236, %232 ], [ 0, %216 ]
  %240 = icmp sgt i32 %221, -1
  %241 = icmp slt i32 %221, %207
  %242 = and i1 %240, %241
  br i1 %242, label %254, label %243

243:                                              ; preds = %237
  %244 = icmp slt i32 %222, 1
  %245 = icmp sgt i32 %222, %207
  %246 = or i1 %244, %245
  br i1 %246, label %249, label %247

247:                                              ; preds = %243
  %248 = sub nsw i32 %222, %218
  br label %254

249:                                              ; preds = %243
  %250 = sub nsw i32 %206, %218
  %251 = sdiv i32 %250, 2
  %252 = add nsw i32 %221, %251
  %253 = sdiv i32 %250, 4
  br label %254

254:                                              ; preds = %237, %247, %249
  %255 = phi i32 [ %248, %247 ], [ %252, %249 ], [ %221, %237 ]
  %256 = phi i32 [ 0, %247 ], [ %253, %249 ], [ 0, %237 ]
  %257 = sub i32 %238, %219
  %258 = sub i32 %257, %239
  %259 = sub i32 %255, %256
  %260 = sub i32 %259, %221
  %261 = load i8, i8* %51, align 4, !range !5
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %254
  %264 = sub i32 %220, %205
  %265 = sub i32 %264, %238
  %266 = add i32 %265, %239
  br label %267

267:                                              ; preds = %254, %263
  %268 = phi i32 [ %258, %254 ], [ %266, %263 ]
  %269 = load i8, i8* %59, align 1, !range !5
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %267
  %272 = sub i32 %222, %218
  %273 = sub i32 %272, %255
  %274 = add i32 %273, %256
  br label %275

275:                                              ; preds = %267, %271
  %276 = phi i32 [ %260, %267 ], [ %274, %271 ]
  %277 = or i32 %276, %268
  %278 = icmp sgt i32 %277, -1
  br i1 %278, label %279, label %315

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 0
  store i32 %238, i32* %280, align 4
  store i32 %255, i32* %192, align 4
  store i32 %205, i32* %33, align 4
  store i32 %218, i32* %71, align 4
  %281 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %42, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = lshr i32 %268, %204
  %284 = add i32 %282, %283
  %285 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = lshr i32 %276, %217
  %288 = add i32 %286, %287
  %289 = load i32, i32* %44, align 4
  %290 = ashr i32 %289, %204
  %291 = load i32, i32* %68, align 4
  %292 = ashr i32 %291, %217
  %293 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 0
  store i32 %284, i32* %293, align 4
  store i32 %288, i32* %285, align 4
  store i32 %290, i32* %44, align 4
  store i32 %292, i32* %68, align 4
  br label %294

294:                                              ; preds = %279, %187
  %295 = load i32, i32* %46, align 4
  %296 = icmp slt i32 %295, 0
  %297 = load i32, i32* %54, align 4
  %298 = icmp slt i32 %297, 0
  %299 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* %31, i1 zeroext %296, i1 zeroext %298) #13
  %300 = extractvalue { i64, i64 } %299, 0
  %301 = extractvalue { i64, i64 } %299, 1
  %302 = bitcast %"struct.gl::Rectangle"* %4 to i64*
  store i64 %300, i64* %302, align 4
  %303 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 2
  %304 = bitcast i32* %303 to i64*
  store i64 %301, i64* %304, align 4
  %305 = load i32, i32* %48, align 4
  %306 = icmp slt i32 %305, 0
  %307 = load i32, i32* %56, align 4
  %308 = icmp slt i32 %307, 0
  %309 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* %42, i1 zeroext %306, i1 zeroext %308) #13
  %310 = extractvalue { i64, i64 } %309, 0
  %311 = extractvalue { i64, i64 } %309, 1
  %312 = bitcast %"struct.gl::Rectangle"* %5 to i64*
  store i64 %310, i64* %312, align 4
  %313 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 2
  %314 = bitcast i32* %313 to i64*
  store i64 %311, i64* %314, align 4
  br label %315

315:                                              ; preds = %163, %275, %73, %6, %67, %70, %294
  %316 = phi i32 [ 0, %294 ], [ 1, %70 ], [ 1, %67 ], [ 1, %6 ], [ 1, %73 ], [ 1, %275 ], [ 1, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %8) #13
  ret i32 %316
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL13clipSrcRegionEPKN2gl7ContextERKNS1_9RectangleES7_PS5_S8_(%"class.rx::FramebufferGL"* nocapture readnone, %"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* dereferenceable(16), %"struct.gl::Rectangle"* nocapture, %"struct.gl::Rectangle"* nocapture) local_unnamed_addr #4 align 2 {
  %7 = alloca %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", align 4
  %8 = alloca %"struct.gl::Rectangle", align 4
  %9 = bitcast %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 60
  %11 = bitcast %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 68, i1 false)
  %12 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %10, align 8, !noalias !15
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %14 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %13, align 8, !noalias !15
  %15 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %12) #13, !noalias !15
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = tail call { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"* %14) #13, !noalias !15
  %21 = extractvalue { i64, i32 } %20, 0
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %25, align 4, !alias.scope !15
  %26 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 1
  store i32 0, i32* %26, align 4, !alias.scope !15
  %27 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 2
  store i32 %17, i32* %27, align 4, !alias.scope !15
  %28 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0, i32 3
  store i32 %19, i32* %28, align 4, !alias.scope !15
  %29 = tail call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* %2) #13, !noalias !15
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1
  %33 = bitcast %"struct.gl::Rectangle"* %32 to i64*
  store i64 %30, i64* %33, align 4, !alias.scope !15
  %34 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 2
  %35 = bitcast i32* %34 to i64*
  store i64 %31, i64* %35, align 4, !alias.scope !15
  %36 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 0
  store i32 0, i32* %36, align 4, !alias.scope !15
  %37 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 1
  store i32 0, i32* %37, align 4, !alias.scope !15
  %38 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 2
  store i32 %22, i32* %38, align 4, !alias.scope !15
  %39 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2, i32 3
  store i32 %24, i32* %39, align 4, !alias.scope !15
  %40 = tail call { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* %3) #13, !noalias !15
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3
  %44 = bitcast %"struct.gl::Rectangle"* %43 to i64*
  store i64 %41, i64* %44, align 4, !alias.scope !15
  %45 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 2
  %46 = bitcast i32* %45 to i64*
  store i64 %42, i64* %46, align 4, !alias.scope !15
  %47 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %48 = load i32, i32* %47, align 4, !noalias !15
  %49 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 2
  %50 = load i32, i32* %49, align 4, !noalias !15
  %51 = xor i32 %50, %48
  %52 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 4
  %53 = lshr i32 %51, 31
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %52, align 4, !alias.scope !15
  %55 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %56 = load i32, i32* %55, align 4, !noalias !15
  %57 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %3, i64 0, i32 3
  %58 = load i32, i32* %57, align 4, !noalias !15
  %59 = xor i32 %58, %56
  %60 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 5
  %61 = lshr i32 %59, 31
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %60, align 1, !alias.scope !15
  %63 = trunc i64 %42 to i32
  %64 = icmp eq i32 %63, 0
  %65 = trunc i64 %31 to i32
  %66 = icmp eq i32 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %185, label %68

68:                                               ; preds = %6
  %69 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 3
  %70 = icmp ult i64 %42, 4294967296
  br i1 %70, label %185, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 3
  %73 = icmp ult i64 %31, 4294967296
  br i1 %73, label %185, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 2
  %76 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %75, %"struct.gl::Rectangle"* dereferenceable(16) %43, %"struct.gl::Rectangle"* null) #13
  br i1 %76, label %77, label %185

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 0
  %79 = call zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"* nonnull %78, %"struct.gl::Rectangle"* dereferenceable(16) %32) #13
  br i1 %79, label %164, label %80

80:                                               ; preds = %77
  %81 = bitcast %"struct.gl::Rectangle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #13
  %82 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %8, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 16, i1 false) #13
  %84 = call zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* dereferenceable(16) %32, %"struct.gl::Rectangle"* nonnull dereferenceable(16) %78, %"struct.gl::Rectangle"* nonnull %8) #13
  br i1 %84, label %85, label %163

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %8, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %8, i64 0, i32 1
  %88 = load i32, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %32, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %88, %90
  %92 = load i32, i32* %87, align 4
  %93 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 1, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub nsw i32 %92, %94
  %96 = load i8, i8* %52, align 4, !range !5
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %85
  %99 = load i32, i32* %34, align 4
  %100 = load i32, i32* %82, align 4
  %101 = sub i32 %90, %88
  %102 = add i32 %101, %99
  %103 = sub i32 %102, %100
  br label %104

104:                                              ; preds = %85, %98
  %105 = phi i32 [ %103, %98 ], [ %91, %85 ]
  %106 = load i8, i8* %60, align 1, !range !5
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = load i32, i32* %83, align 4
  %110 = load i32, i32* %72, align 4
  br label %117

111:                                              ; preds = %104
  %112 = load i32, i32* %72, align 4
  %113 = load i32, i32* %83, align 4
  %114 = sub i32 %94, %92
  %115 = add i32 %114, %112
  %116 = sub i32 %115, %113
  br label %117

117:                                              ; preds = %108, %111
  %118 = phi i32 [ %112, %111 ], [ %110, %108 ]
  %119 = phi i32 [ %113, %111 ], [ %109, %108 ]
  %120 = phi i32 [ %116, %111 ], [ %95, %108 ]
  %121 = load i32, i32* %82, align 4
  %122 = sitofp i32 %121 to float
  %123 = load i32, i32* %45, align 4
  %124 = sitofp i32 %123 to float
  %125 = fmul float %122, %124
  %126 = load i32, i32* %34, align 4
  %127 = sitofp i32 %126 to float
  %128 = fdiv float %125, %127
  %129 = sitofp i32 %119 to float
  %130 = load i32, i32* %69, align 4
  %131 = sitofp i32 %130 to float
  %132 = fmul float %129, %131
  %133 = sitofp i32 %118 to float
  %134 = fdiv float %132, %133
  %135 = uitofp i32 %105 to float
  %136 = fmul float %135, %124
  %137 = fdiv float %136, %127
  %138 = uitofp i32 %120 to float
  %139 = fmul float %138, %131
  %140 = fdiv float %139, %133
  %141 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %43, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = sitofp i32 %142 to float
  %144 = fadd float %137, %143
  %145 = call float @llvm.round.f32(float %144) #13
  %146 = fptoui float %145 to i32
  %147 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sitofp i32 %148 to float
  %150 = fadd float %140, %149
  %151 = call float @llvm.round.f32(float %150) #13
  %152 = fptoui float %151 to i32
  %153 = fadd float %128, %144
  %154 = call float @llvm.round.f32(float %153) #13
  %155 = fptoui float %154 to i32
  %156 = fadd float %134, %150
  %157 = call float @llvm.round.f32(float %156) #13
  %158 = fptoui float %157 to i32
  %159 = sub i32 %155, %146
  %160 = sub i32 %158, %152
  %161 = getelementptr inbounds %"struct.rx::(anonymous namespace)::BlitFramebufferBounds", %"struct.rx::(anonymous namespace)::BlitFramebufferBounds"* %7, i64 0, i32 3, i32 0
  store i32 %146, i32* %161, align 4
  store i32 %152, i32* %147, align 4
  store i32 %159, i32* %45, align 4
  store i32 %160, i32* %69, align 4
  %162 = bitcast %"struct.gl::Rectangle"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* nonnull align 4 %81, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %164

163:                                              ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #13
  br label %185

164:                                              ; preds = %117, %77
  %165 = load i32, i32* %47, align 4
  %166 = icmp slt i32 %165, 0
  %167 = load i32, i32* %55, align 4
  %168 = icmp slt i32 %167, 0
  %169 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* %32, i1 zeroext %166, i1 zeroext %168) #13
  %170 = extractvalue { i64, i64 } %169, 0
  %171 = extractvalue { i64, i64 } %169, 1
  %172 = bitcast %"struct.gl::Rectangle"* %4 to i64*
  store i64 %170, i64* %172, align 4
  %173 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %4, i64 0, i32 2
  %174 = bitcast i32* %173 to i64*
  store i64 %171, i64* %174, align 4
  %175 = load i32, i32* %49, align 4
  %176 = icmp slt i32 %175, 0
  %177 = load i32, i32* %57, align 4
  %178 = icmp slt i32 %177, 0
  %179 = call { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* %43, i1 zeroext %176, i1 zeroext %178) #13
  %180 = extractvalue { i64, i64 } %179, 0
  %181 = extractvalue { i64, i64 } %179, 1
  %182 = bitcast %"struct.gl::Rectangle"* %5 to i64*
  store i64 %180, i64* %182, align 4
  %183 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %5, i64 0, i32 2
  %184 = bitcast i32* %183 to i64*
  store i64 %181, i64* %184, align 4
  br label %185

185:                                              ; preds = %163, %74, %6, %68, %71, %164
  %186 = phi i32 [ 0, %164 ], [ 1, %163 ], [ 1, %71 ], [ 1, %68 ], [ 1, %6 ], [ 1, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %9) #13
  ret i32 %186
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"*, %"struct.gl::Rectangle"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13FramebufferGL17getSamplePositionEPKN2gl7ContextEmPf(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*, i64, float*) unnamed_addr #4 align 2 {
  %5 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %6 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %7 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %6, i32 36160, i32 %8) #13
  %9 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %5, i64 0, i32 0, i32 315
  %10 = load void (i32, i32, float*)*, void (i32, i32, float*)** %9, align 8
  %11 = trunc i64 %2 to i32
  tail call void %10(i32 36432, i32 %11, float* %3) #13
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx13FramebufferGL32shouldSyncStateBeforeCheckStatusEv(%"class.rx::FramebufferGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i8* } @_ZNK2rx13FramebufferGL11checkStatusEPKN2gl7ContextE(%"class.rx::FramebufferGL"* nocapture readonly, %"class.gl::Context"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.gl::LogMessage", align 8
  %4 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %5 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %6 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %5, i32 36160, i32 %7) #13
  %8 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %4, i64 0, i32 0, i32 218
  %9 = load i32 (i32)*, i32 (i32)** %8, align 8
  %10 = tail call i32 %9(i32 36160) #13
  %11 = icmp eq i32 %10, 36053
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #13
  br i1 %13, label %14, label %20

14:                                               ; preds = %12
  %15 = bitcast %"class.gl::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %15) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__._ZNK2rx13FramebufferGL11checkStatusEPKN2gl7ContextE, i64 0, i64 0), i32 1222, i32 2) #13
  %16 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %3, i64 0, i32 4
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i64 36) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i32 %10) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %15) #13
  br label %20

20:                                               ; preds = %12, %14
  %21 = call { i32, i8* } @_ZN2gl17FramebufferStatus10IncompleteEjPKc(i32 36061, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.4, i64 0, i64 0)) #13
  br label %24

22:                                               ; preds = %2
  %23 = tail call { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() #13
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi { i32, i8* } [ %23, %22 ], [ %21, %20 ]
  ret { i32, i8* } %25
}

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #8

declare { i32, i8* } @_ZN2gl17FramebufferStatus10IncompleteEjPKc(i32, i8*) local_unnamed_addr #2

declare { i32, i8* } @_ZN2gl17FramebufferStatus8CompleteEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13FramebufferGL9syncStateEPKN2gl7ContextEjRKN5angle7BitSetTILm28EmmEENS1_7CommandE(%"class.rx::FramebufferGL"* nocapture, %"class.gl::Context"*, i32, %"class.angle::BitSetT.623"* nocapture readonly dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 4, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %144

9:                                                ; preds = %5
  %10 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %11 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %12 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %11, i32 36160, i32 %13) #13
  %14 = getelementptr inbounds %"class.angle::BitSetT.623", %"class.angle::BitSetT.623"* %3, i64 0, i32 0
  %15 = load i64, i64* %14, align 8, !noalias !18
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %144, label %17

17:                                               ; preds = %9
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #13, !range !21
  %19 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %10, i64 0, i32 0, i32 508
  %20 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %10, i64 0, i32 0, i32 36
  %22 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %10, i64 0, i32 0, i32 120
  %23 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 4, i32 0
  %24 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 3
  br label %27

25:                                               ; preds = %114
  %26 = icmp eq %"class.gl::FramebufferAttachment"* %115, null
  br i1 %26, label %144, label %121

27:                                               ; preds = %17, %114
  %28 = phi %"class.gl::FramebufferAttachment"* [ null, %17 ], [ %115, %114 ]
  %29 = phi i64 [ %18, %17 ], [ %120, %114 ]
  %30 = phi i64 [ %15, %17 ], [ %118, %114 ]
  switch i64 %29, label %88 [
    i64 8, label %31
    i64 9, label %36
    i64 20, label %41
    i64 21, label %57
    i64 22, label %62
    i64 23, label %67
    i64 24, label %72
    i64 25, label %77
    i64 26, label %83
  ]

31:                                               ; preds = %27
  %32 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %33 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getDepthAttachmentEv(%"class.gl::FramebufferState"* %32) #13
  tail call fastcc void @_ZN2rx12_GLOBAL__N_125BindFramebufferAttachmentEPKNS_11FunctionsGLEjPKN2gl21FramebufferAttachmentE(%"class.rx::FunctionsGL"* %10, i32 36096, %"class.gl::FramebufferAttachment"* %33)
  %34 = icmp eq %"class.gl::FramebufferAttachment"* %33, null
  %35 = select i1 %34, %"class.gl::FramebufferAttachment"* %28, %"class.gl::FramebufferAttachment"* %33
  br label %114

36:                                               ; preds = %27
  %37 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %38 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState20getStencilAttachmentEv(%"class.gl::FramebufferState"* %37) #13
  tail call fastcc void @_ZN2rx12_GLOBAL__N_125BindFramebufferAttachmentEPKNS_11FunctionsGLEjPKN2gl21FramebufferAttachmentE(%"class.rx::FunctionsGL"* %10, i32 36128, %"class.gl::FramebufferAttachment"* %38)
  %39 = icmp eq %"class.gl::FramebufferAttachment"* %38, null
  %40 = select i1 %39, %"class.gl::FramebufferAttachment"* %28, %"class.gl::FramebufferAttachment"* %38
  br label %114

41:                                               ; preds = %27
  %42 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %43 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %42, i64 0, i32 7
  %44 = load void (i32, i32*)*, void (i32, i32*)** %22, align 8
  %45 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %42, i64 0, i32 7, i32 0, i32 1
  %46 = bitcast i32** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %43 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = lshr exact i64 %50, 2
  %52 = trunc i64 %51 to i32
  %53 = inttoptr i64 %49 to i32*
  tail call void %44(i32 %52, i32* %53) #13
  %54 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %55 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %54, i64 0, i32 9, i32 0
  %56 = load i8, i8* %55, align 1, !noalias !22
  store i8 %56, i8* %23, align 1
  br label %114

57:                                               ; preds = %27
  %58 = load void (i32)*, void (i32)** %21, align 8
  %59 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %60 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %59, i64 0, i32 8
  %61 = load i32, i32* %60, align 8
  tail call void %58(i32 %61) #13
  br label %114

62:                                               ; preds = %27
  %63 = load void (i32, i32, i32)*, void (i32, i32, i32)** %19, align 8
  %64 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %65 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  tail call void %63(i32 36160, i32 37648, i32 %66) #13
  br label %114

67:                                               ; preds = %27
  %68 = load void (i32, i32, i32)*, void (i32, i32, i32)** %19, align 8
  %69 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %70 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %69, i64 0, i32 12
  %71 = load i32, i32* %70, align 4
  tail call void %68(i32 36160, i32 37649, i32 %71) #13
  br label %114

72:                                               ; preds = %27
  %73 = load void (i32, i32, i32)*, void (i32, i32, i32)** %19, align 8
  %74 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %75 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %74, i64 0, i32 13
  %76 = load i32, i32* %75, align 8
  tail call void %73(i32 36160, i32 37651, i32 %76) #13
  br label %114

77:                                               ; preds = %27
  %78 = load void (i32, i32, i32)*, void (i32, i32, i32)** %19, align 8
  %79 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %80 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %79, i64 0, i32 14
  %81 = load i8, i8* %80, align 4, !range !5
  %82 = zext i8 %81 to i32
  tail call void %78(i32 36160, i32 37652, i32 %82) #13
  br label %114

83:                                               ; preds = %27
  %84 = load void (i32, i32, i32)*, void (i32, i32, i32)** %19, align 8
  %85 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %86 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %85, i64 0, i32 15
  %87 = load i32, i32* %86, align 8
  tail call void %84(i32 36160, i32 37650, i32 %87) #13
  br label %114

88:                                               ; preds = %27
  %89 = icmp ult i64 %29, 8
  br i1 %89, label %90, label %114

90:                                               ; preds = %88
  %91 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %20, align 8
  %92 = tail call %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"* %91, i64 %29) #13
  %93 = trunc i64 %29 to i32
  %94 = add nuw nsw i32 %93, 36064
  tail call fastcc void @_ZN2rx12_GLOBAL__N_125BindFramebufferAttachmentEPKNS_11FunctionsGLEjPKN2gl21FramebufferAttachmentE(%"class.rx::FunctionsGL"* %10, i32 %94, %"class.gl::FramebufferAttachment"* %92)
  %95 = icmp eq %"class.gl::FramebufferAttachment"* %92, null
  %96 = select i1 %95, %"class.gl::FramebufferAttachment"* %28, %"class.gl::FramebufferAttachment"* %92
  %97 = icmp eq i64 %29, 0
  br i1 %97, label %98, label %114

98:                                               ; preds = %90
  %99 = icmp eq %"class.gl::FramebufferAttachment"* %96, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %96, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 5890
  br i1 %103, label %104, label %111

104:                                              ; preds = %100
  %105 = tail call %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"* nonnull %96) #13
  %106 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %105, i64 0, i32 6
  %107 = bitcast %"class.rx::TextureImpl"** %106 to %"class.rx::TextureGL"**
  %108 = load %"class.rx::TextureGL"*, %"class.rx::TextureGL"** %107, align 8
  %109 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %96, i64 0, i32 1, i32 1
  %110 = tail call zeroext i1 @_ZNK2rx9TextureGL23hasEmulatedAlphaChannelERKN2gl10ImageIndexE(%"class.rx::TextureGL"* %108, %"class.gl::ImageIndex"* dereferenceable(16) %109) #13
  br label %111

111:                                              ; preds = %98, %100, %104
  %112 = phi i1 [ %110, %104 ], [ false, %100 ], [ false, %98 ]
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %24, align 1
  br label %114

114:                                              ; preds = %90, %111, %88, %83, %77, %72, %67, %62, %57, %41, %36, %31
  %115 = phi %"class.gl::FramebufferAttachment"* [ %28, %88 ], [ %28, %83 ], [ %28, %77 ], [ %28, %72 ], [ %28, %67 ], [ %28, %62 ], [ %28, %57 ], [ %28, %41 ], [ %40, %36 ], [ %35, %31 ], [ %96, %111 ], [ %96, %90 ]
  %116 = shl i64 1, %29
  %117 = xor i64 %116, -1
  %118 = and i64 %30, %117
  %119 = icmp eq i64 %118, 0
  %120 = tail call i64 @llvm.cttz.i64(i64 %118, i1 true) #13, !range !21
  br i1 %119, label %25, label %27

121:                                              ; preds = %25
  %122 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 0, i32 1
  %123 = load %"class.gl::FramebufferState"*, %"class.gl::FramebufferState"** %122, align 8
  %124 = getelementptr inbounds %"class.gl::FramebufferState", %"class.gl::FramebufferState"* %123, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 61
  %127 = load %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"** %126, align 8
  %128 = getelementptr inbounds %"class.gl::Framebuffer", %"class.gl::Framebuffer"* %127, i64 0, i32 3, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %125, %129
  br i1 %130, label %131, label %144

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %133 = load %"class.gl::Program"*, %"class.gl::Program"** %132, align 8
  %134 = getelementptr inbounds %"class.rx::StateManagerGL", %"class.rx::StateManagerGL"* %11, i64 0, i32 84
  %135 = load i8, i8* %134, align 8, !range !5
  %136 = icmp ne i8 %135, 0
  %137 = icmp ne %"class.gl::Program"* %133, null
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %144

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %133, i64 0, i32 4, i32 16
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, -1
  br i1 %142, label %144, label %143

143:                                              ; preds = %139
  tail call void @_ZNK2rx14StateManagerGL44updateMultiviewBaseViewLayerIndexUniformImplEPKN2gl7ProgramERKNS1_16FramebufferStateE(%"class.rx::StateManagerGL"* %11, %"class.gl::Program"* nonnull %133, %"class.gl::FramebufferState"* dereferenceable(464) %123) #13
  br label %144

144:                                              ; preds = %9, %25, %143, %139, %131, %121, %5
  ret i32 0
}

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getDepthAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_125BindFramebufferAttachmentEPKNS_11FunctionsGLEjPKN2gl21FramebufferAttachmentE(%"class.rx::FunctionsGL"* nocapture readonly, i32, %"class.gl::FramebufferAttachment"*) unnamed_addr #4 {
  %4 = icmp eq %"class.gl::FramebufferAttachment"* %2, null
  br i1 %4, label %109, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %112 [
    i32 5890, label %8
    i32 36161, label %102
  ]

8:                                                ; preds = %5
  %9 = tail call %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %10 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %9, i64 0, i32 6
  %11 = bitcast %"class.rx::TextureImpl"** %10 to %"class.rx::TextureGL"**
  %12 = load %"class.rx::TextureGL"*, %"class.rx::TextureGL"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %9, i64 0, i32 4, i32 0
  %14 = load i8, i8* %13, align 8
  switch i8 %14, label %69 [
    i8 0, label %15
    i8 2, label %15
    i8 6, label %15
    i8 5, label %15
  ]

15:                                               ; preds = %8, %8, %8, %8
  %16 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* @_ZN2gl21FramebufferAttachment30kDefaultRenderToTextureSamplesE, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %62, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 690
  %22 = load void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** %21, align 8
  %23 = icmp eq void (i32, i32, i32, i32, i32, i32)* %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = tail call i32 @_ZN2gl8ToGLenumENS_11TextureTypeE(i8 zeroext %14) #13
  %26 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %29 = load i32, i32* %16, align 4
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %40

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 2
  %33 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %32, align 8
  %34 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 1, i32 1
  %35 = bitcast %"class.gl::FramebufferAttachmentObject"* %33 to i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %36 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %36, i64 4
  %38 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %37, align 8
  %39 = tail call i32 %38(%"class.gl::FramebufferAttachmentObject"* %33, %"class.gl::ImageIndex"* dereferenceable(16) %34) #13
  br label %40

40:                                               ; preds = %24, %31
  %41 = phi i32 [ %39, %31 ], [ %29, %24 ]
  tail call void %22(i32 36160, i32 %1, i32 %25, i32 %27, i32 %28, i32 %41) #13
  br label %112

42:                                               ; preds = %20
  %43 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 704
  %44 = load void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)** %43, align 8
  %45 = tail call i32 @_ZN2gl8ToGLenumENS_11TextureTypeE(i8 zeroext %14) #13
  %46 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %49 = load i32, i32* %16, align 4
  %50 = icmp eq i32 %49, %18
  br i1 %50, label %51, label %60

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 2
  %53 = load %"class.gl::FramebufferAttachmentObject"*, %"class.gl::FramebufferAttachmentObject"** %52, align 8
  %54 = getelementptr inbounds %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment"* %2, i64 0, i32 1, i32 1
  %55 = bitcast %"class.gl::FramebufferAttachmentObject"* %53 to i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)***
  %56 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)**, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %56, i64 4
  %58 = load i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)*, i32 (%"class.gl::FramebufferAttachmentObject"*, %"class.gl::ImageIndex"*)** %57, align 8
  %59 = tail call i32 %58(%"class.gl::FramebufferAttachmentObject"* %53, %"class.gl::ImageIndex"* dereferenceable(16) %54) #13
  br label %60

60:                                               ; preds = %42, %51
  %61 = phi i32 [ %59, %51 ], [ %49, %42 ]
  tail call void %44(i32 36160, i32 %1, i32 %45, i32 %47, i32 %48, i32 %61) #13
  br label %112

62:                                               ; preds = %15
  %63 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 235
  %64 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %63, align 8
  %65 = tail call i32 @_ZN2gl8ToGLenumENS_11TextureTypeE(i8 zeroext %14) #13
  %66 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %67 = load i32, i32* %66, align 4
  %68 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  tail call void %64(i32 36160, i32 %1, i32 %65, i32 %67, i32 %68) #13
  br label %112

69:                                               ; preds = %8
  %70 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment9isLayeredEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 311
  %73 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %72, align 8
  %74 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %75 = load i32, i32* %74, align 4
  %76 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  tail call void %73(i32 36160, i32 %1, i32 %75, i32 %76) #13
  br label %112

77:                                               ; preds = %69
  %78 = load i8, i8* %13, align 8
  switch i8 %78, label %112 [
    i8 7, label %79
    i8 1, label %87
    i8 4, label %87
    i8 3, label %87
    i8 8, label %87
  ]

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 235
  %81 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %80, align 8
  %82 = tail call zeroext i8 @_ZNK2gl21FramebufferAttachment11cubeMapFaceEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %83 = tail call i32 @_ZN2gl8ToGLenumENS_13TextureTargetE(i8 zeroext %82) #13
  %84 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %85 = load i32, i32* %84, align 4
  %86 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  tail call void %81(i32 36160, i32 %1, i32 %83, i32 %85, i32 %86) #13
  br label %112

87:                                               ; preds = %77, %77, %77, %77
  %88 = tail call zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  br i1 %88, label %89, label %95

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 311
  %91 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %90, align 8
  %92 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %93 = load i32, i32* %92, align 4
  %94 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  tail call void %91(i32 36160, i32 %1, i32 %93, i32 %94) #13
  br label %112

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 237
  %97 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %96, align 8
  %98 = getelementptr inbounds %"class.rx::TextureGL", %"class.rx::TextureGL"* %12, i64 0, i32 8
  %99 = load i32, i32* %98, align 4
  %100 = tail call i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %101 = tail call i32 @_ZNK2gl21FramebufferAttachment5layerEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  tail call void %97(i32 36160, i32 %1, i32 %99, i32 %100, i32 %101) #13
  br label %112

102:                                              ; preds = %5
  %103 = tail call %"class.gl::Renderbuffer"* @_ZNK2gl21FramebufferAttachment15getRenderbufferEv(%"class.gl::FramebufferAttachment"* nonnull %2) #13
  %104 = tail call %"class.rx::RenderbufferImpl"* @_ZNK2gl12Renderbuffer17getImplementationEv(%"class.gl::Renderbuffer"* %103) #13
  %105 = bitcast %"class.rx::RenderbufferImpl"* %104 to %"class.rx::RenderbufferGL"*
  %106 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 233
  %107 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %106, align 8
  %108 = tail call i32 @_ZNK2rx14RenderbufferGL17getRenderbufferIDEv(%"class.rx::RenderbufferGL"* %105) #13
  tail call void %107(i32 36160, i32 %1, i32 36161, i32 %108) #13
  br label %112

109:                                              ; preds = %3
  %110 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 235
  %111 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %110, align 8
  tail call void %111(i32 36160, i32 %1, i32 3553, i32 0, i32 0) #13
  br label %112

112:                                              ; preds = %5, %77, %40, %60, %62, %79, %89, %95, %71, %102, %109
  ret void
}

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState20getStencilAttachmentEv(%"class.gl::FramebufferState"*) local_unnamed_addr #2

declare %"class.gl::FramebufferAttachment"* @_ZNK2gl16FramebufferState18getColorAttachmentEm(%"class.gl::FramebufferState"*, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx13FramebufferGL26updateDefaultFramebufferIDEj(%"class.rx::FramebufferGL"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx13FramebufferGL9isDefaultEv(%"class.rx::FramebufferGL"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx13FramebufferGL40hasEmulatedAlphaChannelTextureAttachmentEv(%"class.rx::FramebufferGL"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rx::FramebufferGL", %"class.rx::FramebufferGL"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN2rx14StateManagerGL25setFramebufferSRGBEnabledEPKN2gl7ContextEb(%"class.rx::StateManagerGL"*, %"class.gl::Context"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"*, i32, i32, i32, %"struct.gl::PixelStoreStateBase"* dereferenceable(24), i1 zeroext, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2rx12_GLOBAL__N_140ScopedEXTTextureNorm16ReadbackWorkaround10InitializeEPKN2gl7ContextERKNS2_9RectangleEjjjjjjPh(%"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* nocapture, %"class.gl::Context"*, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), i32, i32, i32, i32, i32, i32, i8*) unnamed_addr #4 align 2 {
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = bitcast %"class.rx::ContextImpl"** %11 to %"class.rx::ContextGL"**
  %13 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %12, align 8
  %14 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %15 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %14, i64 0, i32 50, i32 4
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp ne i8 %16, 0
  %18 = icmp eq i32 %5, 5123
  %19 = and i1 %18, %17
  %20 = icmp eq i32 %3, 6408
  %21 = and i1 %20, %19
  br i1 %21, label %25, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %0, i64 0, i32 2
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %0, i64 0, i32 1
  store i8* %9, i8** %24, align 8
  br label %70

25:                                               ; preds = %10
  %26 = icmp eq i32 %4, 6403
  %27 = icmp eq i32 %4, 33319
  %28 = or i1 %26, %27
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %0, i64 0, i32 2
  store i8 %29, i8* %30, align 8
  %31 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %0, i64 0, i32 1
  store i8* %9, i8** %31, align 8
  %32 = xor i1 %27, true
  %33 = xor i1 %26, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = lshr i32 %36, 31
  %38 = trunc i32 %37 to i8
  %39 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %7, i32 %36) #13
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = select i1 %41, i8 2, i8 0
  %43 = or i8 %42, %38
  %44 = add i32 %40, %6
  %45 = xor i32 %6, -1
  %46 = icmp ugt i32 %40, %45
  %47 = select i1 %46, i8 2, i8 0
  %48 = or i8 %43, %47
  %49 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 %50, %8
  %52 = icmp ugt i32 %51, %7
  br i1 %52, label %53, label %60

53:                                               ; preds = %34
  %54 = sub i32 %51, %7
  %55 = add i32 %44, %54
  %56 = xor i32 %44, -1
  %57 = icmp ugt i32 %54, %56
  %58 = select i1 %57, i8 2, i8 0
  %59 = or i8 %58, %48
  br label %60

60:                                               ; preds = %34, %53
  %61 = phi i8 [ %59, %53 ], [ %48, %34 ]
  %62 = phi i32 [ %55, %53 ], [ %44, %34 ]
  %63 = icmp eq i8 %61, 0
  br i1 %63, label %66, label %64, !prof !11

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %13, i64 0, i32 0
  tail call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %65, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN2rx12_GLOBAL__N_140ScopedEXTTextureNorm16ReadbackWorkaround10InitializeEPKN2gl7ContextERKNS2_9RectangleEjjjjjjPh, i64 0, i64 0), i32 307) #13
  br label %70

66:                                               ; preds = %60
  %67 = zext i32 %62 to i64
  %68 = tail call i8* @_Znam(i64 %67) #14
  %69 = getelementptr inbounds %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround", %"class.rx::(anonymous namespace)::ScopedEXTTextureNorm16ReadbackWorkaround"* %0, i64 0, i32 0
  store i8* %68, i8** %69, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %68, i8 0, i64 %67, i1 false)
  br label %70

70:                                               ; preds = %22, %25, %66, %64
  %71 = phi i32 [ 1, %64 ], [ 0, %66 ], [ 0, %25 ], [ 0, %22 ]
  ret i32 %71
}

declare i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"*, i32) local_unnamed_addr #2

declare i32 @_ZN2rx14StateManagerGL17setPixelPackStateEPKN2gl7ContextERKNS1_14PixelPackStateE(%"class.rx::StateManagerGL"*, %"class.gl::Context"*, %"struct.gl::PixelPackState"* dereferenceable(28)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_(%"class.gl::Context"* nocapture readonly, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), i32, i32, i32, i32, i32, i32, %"struct.gl::PixelPackState"* dereferenceable(28), i8* nocapture, i8* nocapture readonly) unnamed_addr #4 {
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = bitcast %"class.rx::ContextImpl"** %14 to %"class.rx::ContextGL"**
  %16 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %15, align 8
  %17 = tail call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl21GetInternalFormatInfoEjj(i32 %2, i32 %4) #13
  %18 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 0, i32* %12, align 4
  %19 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %8, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %8, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = call zeroext i1 @_ZNK2gl14InternalFormat15computeRowPitchEjiiiPj(%"struct.gl::InternalFormat"* %17, i32 %4, i32 %20, i32 %22, i32 %24, i32* nonnull %12) #13
  br i1 %25, label %28, label %26, !prof !11

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %16, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %27, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__._ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_, i64 0, i64 0), i32 355) #13
  br label %95

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"struct.gl::PixelPackState", %"struct.gl::PixelPackState"* %8, i64 0, i32 0
  %30 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #13
  store i32 0, i32* %13, align 4
  %31 = load i32, i32* %12, align 4
  %32 = call zeroext i1 @_ZNK2gl14InternalFormat16computeSkipBytesEjjjRKNS_19PixelStoreStateBaseEbPj(%"struct.gl::InternalFormat"* %17, i32 %4, i32 %31, i32 0, %"struct.gl::PixelStoreStateBase"* dereferenceable(24) %29, i1 zeroext false, i32* nonnull %13) #13
  br i1 %32, label %35, label %33, !prof !11

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %16, i64 0, i32 0
  call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %34, i32 1282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__._ZN2rx12_GLOBAL__N_131RearrangeEXTTextureNorm16PixelsEPKN2gl7ContextERKNS1_9RectangleEjjjjjjRKNS1_14PixelPackStateEPhSB_, i64 0, i64 0), i32 359) #13
  br label %93

35:                                               ; preds = %28
  %36 = call i32 @_ZNK2gl14InternalFormat17computePixelBytesEj(%"struct.gl::InternalFormat"* %17, i32 %4) #13
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %93

40:                                               ; preds = %35
  %41 = load i32, i32* %13, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %9, i64 %42
  %44 = zext i32 %5 to i64
  %45 = getelementptr inbounds i8, i8* %10, i64 %44
  %46 = icmp eq i32 %3, 33319
  %47 = zext i32 %7 to i64
  %48 = zext i32 %36 to i64
  %49 = zext i32 %6 to i64
  %50 = load i32, i32* %19, align 4
  br label %51

51:                                               ; preds = %40, %60
  %52 = phi i32 [ %38, %40 ], [ %61, %60 ]
  %53 = phi i32 [ %50, %40 ], [ %62, %60 ]
  %54 = phi i32 [ 0, %40 ], [ %67, %60 ]
  %55 = phi i8* [ %43, %40 ], [ %66, %60 ]
  %56 = phi i8* [ %45, %40 ], [ %63, %60 ]
  %57 = icmp sgt i32 %53, 0
  br i1 %57, label %69, label %60

58:                                               ; preds = %80
  %59 = load i32, i32* %37, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %52, %51 ]
  %62 = phi i32 [ %91, %58 ], [ %53, %51 ]
  %63 = getelementptr inbounds i8, i8* %56, i64 %49
  %64 = load i32, i32* %12, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %55, i64 %65
  %67 = add nuw nsw i32 %54, 1
  %68 = icmp slt i32 %67, %61
  br i1 %68, label %51, label %93

69:                                               ; preds = %51, %80
  %70 = phi i32 [ %90, %80 ], [ 0, %51 ]
  %71 = phi i8* [ %89, %80 ], [ %55, %51 ]
  %72 = phi i8* [ %88, %80 ], [ %56, %51 ]
  %73 = bitcast i8* %72 to i16*
  %74 = bitcast i8* %71 to i16*
  %75 = load i16, i16* %73, align 2
  store i16 %75, i16* %74, align 2
  br i1 %46, label %76, label %80

76:                                               ; preds = %69
  %77 = getelementptr inbounds i8, i8* %72, i64 2
  %78 = bitcast i8* %77 to i16*
  %79 = load i16, i16* %78, align 2
  br label %80

80:                                               ; preds = %69, %76
  %81 = phi i16 [ %79, %76 ], [ 0, %69 ]
  %82 = getelementptr inbounds i8, i8* %71, i64 2
  %83 = bitcast i8* %82 to i16*
  store i16 %81, i16* %83, align 2
  %84 = getelementptr inbounds i8, i8* %71, i64 4
  %85 = bitcast i8* %84 to i16*
  store i16 0, i16* %85, align 2
  %86 = getelementptr inbounds i8, i8* %71, i64 6
  %87 = bitcast i8* %86 to i16*
  store i16 -1, i16* %87, align 2
  %88 = getelementptr inbounds i8, i8* %72, i64 %47
  %89 = getelementptr inbounds i8, i8* %71, i64 %48
  %90 = add nuw nsw i32 %70, 1
  %91 = load i32, i32* %19, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %69, label %58

93:                                               ; preds = %60, %35, %33
  %94 = phi i32 [ 1, %33 ], [ 0, %35 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #13
  br label %95

95:                                               ; preds = %93, %26
  %96 = phi i32 [ 1, %26 ], [ %94, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  ret i32 %96
}

declare zeroext i1 @_ZNK2gl21FramebufferAttachment11isMultiviewEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare i32 @_ZNK2gl21FramebufferAttachment16getBaseViewIndexEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare %"class.gl::Texture"* @_ZNK2gl21FramebufferAttachment10getTextureEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare i64 @_ZNK2gl7Texture8getDepthENS_13TextureTargetEm(%"class.gl::Texture"*, i8 zeroext, i64) local_unnamed_addr #2

declare zeroext i8 @_ZNK2gl10ImageIndex9getTargetEv(%"class.gl::ImageIndex"*) local_unnamed_addr #2

declare { i64, i32 } @_ZNK2gl11Framebuffer10getExtentsEv(%"class.gl::Framebuffer"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

declare i32 @_ZN2gl8ToGLenumENS_11TextureTypeE(i8 zeroext) local_unnamed_addr #2

declare i32 @_ZNK2gl21FramebufferAttachment8mipLevelEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2gl21FramebufferAttachment9isLayeredEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare i32 @_ZN2gl8ToGLenumENS_13TextureTargetE(i8 zeroext) local_unnamed_addr #2

declare zeroext i8 @_ZNK2gl21FramebufferAttachment11cubeMapFaceEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare i32 @_ZNK2gl21FramebufferAttachment5layerEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare %"class.gl::Renderbuffer"* @_ZNK2gl21FramebufferAttachment15getRenderbufferEv(%"class.gl::FramebufferAttachment"*) local_unnamed_addr #2

declare i32 @_ZNK2rx14RenderbufferGL17getRenderbufferIDEv(%"class.rx::RenderbufferGL"*) local_unnamed_addr #2

declare %"class.rx::RenderbufferImpl"* @_ZNK2gl12Renderbuffer17getImplementationEv(%"class.gl::Renderbuffer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2rx9TextureGL23hasEmulatedAlphaChannelERKN2gl10ImageIndexE(%"class.rx::TextureGL"*, %"class.gl::ImageIndex"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK2rx14StateManagerGL44updateMultiviewBaseViewLayerIndexUniformImplEPKN2gl7ProgramERKNS1_16FramebufferStateE(%"class.rx::StateManagerGL"*, %"class.gl::Program"*, %"class.gl::FramebufferState"* dereferenceable(464)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #4 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2gl4priv6FmtHexILi8EjEERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_T0_(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #13
  %5 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 144
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %41

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = bitcast i8* %11 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %24) #13
  %25 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %26 = bitcast %"class.std::__1::locale::facet"* %25 to %"class.std::__1::ctype"*
  %27 = bitcast %"class.std::__1::locale::facet"* %25 to i8 (%"class.std::__1::ctype"*, i8)***
  %28 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %27, align 8
  %29 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %28, i64 7
  %30 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %29, align 8
  %31 = call signext i8 %30(%"class.std::__1::ctype"* %26, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %32 = sext i8 %31 to i32
  store i32 %32, i32* %19, align 8
  %33 = load i8*, i8** %5, align 8
  %34 = getelementptr i8, i8* %33, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %10, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  br label %41

41:                                               ; preds = %2, %22
  %42 = phi i32* [ %13, %2 ], [ %39, %22 ]
  %43 = phi i32 [ %14, %2 ], [ %40, %22 ]
  %44 = phi i32 [ %20, %2 ], [ %32, %22 ]
  %45 = and i32 %43, -75
  %46 = or i32 %45, 8
  store i32 %46, i32* %42, align 8
  %47 = load i8*, i8** %5, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %10, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = or i32 %54, 16384
  store i32 %55, i32* %53, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr i8, i8* %56, i64 -24
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %10, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to i64*
  store i64 8, i64* %62, align 8
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %10, i64 %66
  %68 = getelementptr inbounds i8, i8* %67, i64 144
  %69 = bitcast i8* %68 to i32*
  store i32 48, i32* %69, align 8
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %0, i32 %1) #13
  %71 = load i8*, i8** %5, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %10, i64 %74
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 %14, i32* %77, align 8
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr i8, i8* %78, i64 -24
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %10, i64 %81
  %83 = getelementptr inbounds i8, i8* %82, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 %17, i64* %84, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %10, i64 %88
  %90 = getelementptr inbounds i8, i8* %89, i64 144
  %91 = bitcast i8* %90 to i32*
  %92 = shl i32 %44, 24
  %93 = ashr exact i32 %92, 24
  store i32 %93, i32* %91, align 8
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #9

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2gl21FramebufferAttachment9getFormatEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2gl21FramebufferAttachment9getFormatEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2gl21FramebufferAttachment9getFormatEv: argument 0"}
!8 = distinct !{!8, !"_ZNK2gl21FramebufferAttachment9getFormatEv"}
!9 = !{!"branch_weights", i32 1073205, i32 2146410443}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN2rx12_GLOBAL__N_124GetBlitFramebufferBoundsEPKN2gl7ContextERKNS1_9RectangleES7_: argument 0"}
!14 = distinct !{!14, !"_ZN2rx12_GLOBAL__N_124GetBlitFramebufferBoundsEPKN2gl7ContextERKNS1_9RectangleES7_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN2rx12_GLOBAL__N_124GetBlitFramebufferBoundsEPKN2gl7ContextERKNS1_9RectangleES7_: argument 0"}
!17 = distinct !{!17, !"_ZN2rx12_GLOBAL__N_124GetBlitFramebufferBoundsEPKN2gl7ContextERKNS1_9RectangleES7_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5angle7BitSetTILm28EmmE5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5angle7BitSetTILm28EmmE5beginEv"}
!21 = !{i64 0, i64 65}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv: argument 0"}
!24 = distinct !{!24, !"_ZNK2gl16FramebufferState21getEnabledDrawBuffersEv"}
