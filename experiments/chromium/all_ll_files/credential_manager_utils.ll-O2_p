; ModuleID = '../../components/password_manager/core/browser/credential_manager_utils.cc'
source_filename = "../../components/password_manager/core/browser/credential_manager_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string.7", %"class.std::__1::vector", %"class.std::__1::vector", i8, %"class.std::__1::basic_string.7", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string", %"class.std::__1::basic_string.7", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.7", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.7", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string.7", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.68" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::vector.21", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.33", %"class.std::__1::vector.40", i32, [4 x i8], %"class.std::__1::vector.47", %"class.std::__1::vector.61", i8, [7 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair.23" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair.23"* }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.30" }
%"class.base::StrongAlias.30" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.31" }
%"class.util::IdType.31" = type { %"class.base::StrongAlias.32" }
%"class.base::StrongAlias.32" = type { i32 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.35" }
%"class.absl::variant" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.absl::variant"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.56" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string.7", %"class.std::__1::vector.49", %"class.std::__1::vector.49", i32, %"class.gfx::RectF", %"class.std::__1::vector.49", %"class.std::__1::vector.49" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::basic_string.7"* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.autofill::FieldRendererId"* }
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.70" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.autofill::GaiaIdHash"* }
%"struct.password_manager::CredentialInfo" = type { i32, %"class.absl::optional.78", %"class.absl::optional.78", %class.GURL, %"class.absl::optional.78", %"class.url::Origin" }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.std::__1::basic_string.7" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.11 }
%struct.anon.11 = type { %"struct.std::__1::__padding.12", i8 }
%"struct.std::__1::__padding.12" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [14 x i8] c"federation://\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.password_manager::PasswordForm"* @_ZN16password_manager36CreatePasswordFormFromCredentialInfoERKNS_14CredentialInfoERKN3url6OriginE(%"struct.password_manager::CredentialInfo"* dereferenceable(304), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.7", align 8
  %4 = alloca [15 x i8], align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string.7", align 8
  %7 = alloca [15 x i8], align 8
  %8 = alloca %"class.std::__1::basic_string.7", align 8
  %9 = alloca [15 x i8], align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %776, label %16

16:                                               ; preds = %2
  %17 = tail call i8* @_Znwm(i64 1744) #8
  %18 = bitcast i8* %17 to %"struct.password_manager::PasswordForm"*
  tail call void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"* nonnull %18) #9
  %19 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 3
  %20 = getelementptr inbounds i8, i8* %17, i64 1504
  %21 = bitcast i8* %20 to %class.GURL*
  %22 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %21, %class.GURL* dereferenceable(120) %19) #9
  %23 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %24)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 15, i1 false)
  %25 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2, !noalias !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %211, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.std::__1::basic_string.7"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string.7"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %35, i64 24, i1 false) #9
  br label %216

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, 11
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string.7"* %3 to i16*
  %44 = trunc i64 %40 to i8
  %45 = bitcast %"class.std::__1::basic_string.7"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 %44, i8* %46, align 1
  br label %64

47:                                               ; preds = %36
  %48 = icmp ugt i64 %40, 9223372036854775791
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string.7"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %50) #10
  unreachable

51:                                               ; preds = %47
  %52 = add nuw nsw i64 %40, 8
  %53 = and i64 %52, -8
  %54 = icmp slt i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  tail call void @abort() #10
  unreachable

56:                                               ; preds = %51
  %57 = shl i64 %53, 1
  %58 = tail call i8* @_Znwm(i64 %57) #8
  %59 = bitcast i8* %58 to i16*
  %60 = bitcast %"class.std::__1::basic_string.7"* %3 to i8**
  store i8* %58, i8** %60, align 8
  %61 = or i64 %53, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %63, align 8
  br label %64

64:                                               ; preds = %56, %42
  %65 = phi i16* [ %43, %42 ], [ %59, %56 ]
  %66 = add nuw nsw i64 %40, 1
  %67 = add i64 %40, 1
  %68 = icmp ult i64 %67, 16
  br i1 %68, label %158, label %69

69:                                               ; preds = %64
  %70 = add i64 %40, 1
  %71 = getelementptr i16, i16* %65, i64 %70
  %72 = getelementptr i16, i16* %38, i64 %70
  %73 = icmp ult i16* %65, %72
  %74 = icmp ult i16* %38, %71
  %75 = and i1 %73, %74
  br i1 %75, label %158, label %76

76:                                               ; preds = %69
  %77 = and i64 %67, -16
  %78 = sub i64 %66, %77
  %79 = getelementptr i16, i16* %38, i64 %77
  %80 = getelementptr i16, i16* %65, i64 %77
  %81 = add i64 %77, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %137, label %86

86:                                               ; preds = %76
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %134, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %135, %88 ]
  %91 = getelementptr i16, i16* %38, i64 %89
  %92 = getelementptr i16, i16* %65, i64 %89
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !6
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !6
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !9, !noalias !6
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !9, !noalias !6
  %101 = or i64 %89, 16
  %102 = getelementptr i16, i16* %38, i64 %101
  %103 = getelementptr i16, i16* %65, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !6
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !6
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !9, !noalias !6
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !9, !noalias !6
  %112 = or i64 %89, 32
  %113 = getelementptr i16, i16* %38, i64 %112
  %114 = getelementptr i16, i16* %65, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !6
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !6
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !9, !noalias !6
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !9, !noalias !6
  %123 = or i64 %89, 48
  %124 = getelementptr i16, i16* %38, i64 %123
  %125 = getelementptr i16, i16* %65, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !6
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !6
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !9, !noalias !6
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !9, !noalias !6
  %134 = add i64 %89, 64
  %135 = add i64 %90, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %88, !llvm.loop !11

137:                                              ; preds = %88, %76
  %138 = phi i64 [ 0, %76 ], [ %134, %88 ]
  %139 = icmp eq i64 %84, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %153, %140 ], [ %138, %137 ]
  %142 = phi i64 [ %154, %140 ], [ %84, %137 ]
  %143 = getelementptr i16, i16* %38, i64 %141
  %144 = getelementptr i16, i16* %65, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !6
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !6
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !9, !noalias !6
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !9, !noalias !6
  %153 = add i64 %141, 16
  %154 = add i64 %142, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %140, !llvm.loop !13

156:                                              ; preds = %140, %137
  %157 = icmp eq i64 %67, %77
  br i1 %157, label %216, label %158

158:                                              ; preds = %156, %69, %64
  %159 = phi i64 [ %66, %69 ], [ %66, %64 ], [ %78, %156 ]
  %160 = phi i16* [ %38, %69 ], [ %38, %64 ], [ %79, %156 ]
  %161 = phi i16* [ %65, %69 ], [ %65, %64 ], [ %80, %156 ]
  %162 = add i64 %159, -1
  %163 = and i64 %159, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %158, %165
  %166 = phi i64 [ %171, %165 ], [ %159, %158 ]
  %167 = phi i16* [ %173, %165 ], [ %160, %158 ]
  %168 = phi i16* [ %172, %165 ], [ %161, %158 ]
  %169 = phi i64 [ %174, %165 ], [ %163, %158 ]
  %170 = load i16, i16* %167, align 2
  store i16 %170, i16* %168, align 2
  %171 = add i64 %166, -1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = add i64 %169, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %165, !llvm.loop !15

176:                                              ; preds = %165, %158
  %177 = phi i64 [ %159, %158 ], [ %171, %165 ]
  %178 = phi i16* [ %160, %158 ], [ %173, %165 ]
  %179 = phi i16* [ %161, %158 ], [ %172, %165 ]
  %180 = icmp ult i64 %162, 7
  br i1 %180, label %216, label %181

181:                                              ; preds = %176, %181
  %182 = phi i64 [ %207, %181 ], [ %177, %176 ]
  %183 = phi i16* [ %209, %181 ], [ %178, %176 ]
  %184 = phi i16* [ %208, %181 ], [ %179, %176 ]
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %184, i64 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %184, i64 3
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %184, i64 4
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %184, i64 5
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %184, i64 6
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %184, i64 7
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = add i64 %182, -8
  %208 = getelementptr inbounds i16, i16* %184, i64 8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %216, label %181, !llvm.loop !16

211:                                              ; preds = %16
  %212 = bitcast %"class.std::__1::basic_string.7"* %3 to i8**
  store i8* null, i8** %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = bitcast i64* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* nonnull align 8 %24, i64 15, i1 false)
  %215 = getelementptr inbounds i8, i8* %23, i64 23
  store i8 0, i8* %215, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 15, i1 false), !noalias !3
  br label %216

216:                                              ; preds = %176, %181, %156, %34, %211
  %217 = getelementptr inbounds i8, i8* %17, i64 1480
  %218 = getelementptr inbounds i8, i8* %17, i64 1503
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = bitcast i8* %217 to i8**
  %223 = load i8*, i8** %222, align 8
  tail call void @_ZdlPv(i8* %223) #8
  br label %224

224:                                              ; preds = %216, %221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* nonnull align 8 %23, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  %225 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5
  %226 = getelementptr inbounds i8, i8* %17, i64 1624
  %227 = bitcast i8* %226 to %"class.url::Origin"*
  %228 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %227, %"class.url::Origin"* dereferenceable(80) %225) #9
  %229 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %229) #9
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %5, %"class.url::Origin"* %1) #9
  %230 = getelementptr inbounds i8, i8* %17, i64 32
  %231 = bitcast i8* %230 to %class.GURL*
  %232 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %231, %class.GURL* nonnull dereferenceable(120) %5) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %229) #9
  %233 = bitcast %"class.std::__1::basic_string.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #9
  %234 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %234)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 15, i1 false)
  %235 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %236 = load i8, i8* %235, align 8, !range !2, !noalias !17
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %421, label %238

238:                                              ; preds = %224
  %239 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %240 = bitcast %"class.std::__1::basic_string.7"* %239 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %240, i64 0, i32 1, i32 1
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %238
  %245 = bitcast %"class.std::__1::basic_string.7"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %233, i8* align 8 %245, i64 24, i1 false) #9
  br label %426

246:                                              ; preds = %238
  %247 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i16*, i16** %247, align 8
  %249 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = icmp ult i64 %250, 11
  br i1 %251, label %252, label %257

252:                                              ; preds = %246
  %253 = bitcast %"class.std::__1::basic_string.7"* %6 to i16*
  %254 = trunc i64 %250 to i8
  %255 = bitcast %"class.std::__1::basic_string.7"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %255, i64 0, i32 1, i32 1
  store i8 %254, i8* %256, align 1
  br label %274

257:                                              ; preds = %246
  %258 = icmp ugt i64 %250, 9223372036854775791
  br i1 %258, label %259, label %261

259:                                              ; preds = %257
  %260 = bitcast %"class.std::__1::basic_string.7"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %260) #10
  unreachable

261:                                              ; preds = %257
  %262 = add nuw nsw i64 %250, 8
  %263 = and i64 %262, -8
  %264 = icmp slt i64 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %261
  call void @abort() #10
  unreachable

266:                                              ; preds = %261
  %267 = shl i64 %263, 1
  %268 = call i8* @_Znwm(i64 %267) #8
  %269 = bitcast i8* %268 to i16*
  %270 = bitcast %"class.std::__1::basic_string.7"* %6 to i8**
  store i8* %268, i8** %270, align 8
  %271 = or i64 %263, -9223372036854775808
  %272 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %250, i64* %273, align 8
  br label %274

274:                                              ; preds = %266, %252
  %275 = phi i16* [ %253, %252 ], [ %269, %266 ]
  %276 = add nuw nsw i64 %250, 1
  %277 = add i64 %250, 1
  %278 = icmp ult i64 %277, 16
  br i1 %278, label %368, label %279

279:                                              ; preds = %274
  %280 = add i64 %250, 1
  %281 = getelementptr i16, i16* %275, i64 %280
  %282 = getelementptr i16, i16* %248, i64 %280
  %283 = icmp ult i16* %275, %282
  %284 = icmp ult i16* %248, %281
  %285 = and i1 %283, %284
  br i1 %285, label %368, label %286

286:                                              ; preds = %279
  %287 = and i64 %277, -16
  %288 = sub i64 %276, %287
  %289 = getelementptr i16, i16* %248, i64 %287
  %290 = getelementptr i16, i16* %275, i64 %287
  %291 = add i64 %287, -16
  %292 = lshr exact i64 %291, 4
  %293 = add nuw nsw i64 %292, 1
  %294 = and i64 %293, 3
  %295 = icmp ult i64 %291, 48
  br i1 %295, label %347, label %296

296:                                              ; preds = %286
  %297 = sub nsw i64 %293, %294
  br label %298

298:                                              ; preds = %298, %296
  %299 = phi i64 [ 0, %296 ], [ %344, %298 ]
  %300 = phi i64 [ %297, %296 ], [ %345, %298 ]
  %301 = getelementptr i16, i16* %248, i64 %299
  %302 = getelementptr i16, i16* %275, i64 %299
  %303 = bitcast i16* %301 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !20
  %305 = getelementptr i16, i16* %301, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !20
  %308 = bitcast i16* %302 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !23, !noalias !20
  %309 = getelementptr i16, i16* %302, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !23, !noalias !20
  %311 = or i64 %299, 16
  %312 = getelementptr i16, i16* %248, i64 %311
  %313 = getelementptr i16, i16* %275, i64 %311
  %314 = bitcast i16* %312 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !20
  %316 = getelementptr i16, i16* %312, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !20
  %319 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %319, align 2, !alias.scope !23, !noalias !20
  %320 = getelementptr i16, i16* %313, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %321, align 2, !alias.scope !23, !noalias !20
  %322 = or i64 %299, 32
  %323 = getelementptr i16, i16* %248, i64 %322
  %324 = getelementptr i16, i16* %275, i64 %322
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !20
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !20
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !23, !noalias !20
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !23, !noalias !20
  %333 = or i64 %299, 48
  %334 = getelementptr i16, i16* %248, i64 %333
  %335 = getelementptr i16, i16* %275, i64 %333
  %336 = bitcast i16* %334 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !20
  %338 = getelementptr i16, i16* %334, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !20
  %341 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !23, !noalias !20
  %342 = getelementptr i16, i16* %335, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !23, !noalias !20
  %344 = add i64 %299, 64
  %345 = add i64 %300, -4
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %298, !llvm.loop !25

347:                                              ; preds = %298, %286
  %348 = phi i64 [ 0, %286 ], [ %344, %298 ]
  %349 = icmp eq i64 %294, 0
  br i1 %349, label %366, label %350

350:                                              ; preds = %347, %350
  %351 = phi i64 [ %363, %350 ], [ %348, %347 ]
  %352 = phi i64 [ %364, %350 ], [ %294, %347 ]
  %353 = getelementptr i16, i16* %248, i64 %351
  %354 = getelementptr i16, i16* %275, i64 %351
  %355 = bitcast i16* %353 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !20
  %357 = getelementptr i16, i16* %353, i64 8
  %358 = bitcast i16* %357 to <8 x i16>*
  %359 = load <8 x i16>, <8 x i16>* %358, align 2, !alias.scope !20
  %360 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %360, align 2, !alias.scope !23, !noalias !20
  %361 = getelementptr i16, i16* %354, i64 8
  %362 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %359, <8 x i16>* %362, align 2, !alias.scope !23, !noalias !20
  %363 = add i64 %351, 16
  %364 = add i64 %352, -1
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %350, !llvm.loop !26

366:                                              ; preds = %350, %347
  %367 = icmp eq i64 %277, %287
  br i1 %367, label %426, label %368

368:                                              ; preds = %366, %279, %274
  %369 = phi i64 [ %276, %279 ], [ %276, %274 ], [ %288, %366 ]
  %370 = phi i16* [ %248, %279 ], [ %248, %274 ], [ %289, %366 ]
  %371 = phi i16* [ %275, %279 ], [ %275, %274 ], [ %290, %366 ]
  %372 = add i64 %369, -1
  %373 = and i64 %369, 7
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %386, label %375

375:                                              ; preds = %368, %375
  %376 = phi i64 [ %381, %375 ], [ %369, %368 ]
  %377 = phi i16* [ %383, %375 ], [ %370, %368 ]
  %378 = phi i16* [ %382, %375 ], [ %371, %368 ]
  %379 = phi i64 [ %384, %375 ], [ %373, %368 ]
  %380 = load i16, i16* %377, align 2
  store i16 %380, i16* %378, align 2
  %381 = add i64 %376, -1
  %382 = getelementptr inbounds i16, i16* %378, i64 1
  %383 = getelementptr inbounds i16, i16* %377, i64 1
  %384 = add i64 %379, -1
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %375, !llvm.loop !27

386:                                              ; preds = %375, %368
  %387 = phi i64 [ %369, %368 ], [ %381, %375 ]
  %388 = phi i16* [ %370, %368 ], [ %383, %375 ]
  %389 = phi i16* [ %371, %368 ], [ %382, %375 ]
  %390 = icmp ult i64 %372, 7
  br i1 %390, label %426, label %391

391:                                              ; preds = %386, %391
  %392 = phi i64 [ %417, %391 ], [ %387, %386 ]
  %393 = phi i16* [ %419, %391 ], [ %388, %386 ]
  %394 = phi i16* [ %418, %391 ], [ %389, %386 ]
  %395 = load i16, i16* %393, align 2
  store i16 %395, i16* %394, align 2
  %396 = getelementptr inbounds i16, i16* %394, i64 1
  %397 = getelementptr inbounds i16, i16* %393, i64 1
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = getelementptr inbounds i16, i16* %394, i64 2
  %400 = getelementptr inbounds i16, i16* %393, i64 2
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %394, i64 3
  %403 = getelementptr inbounds i16, i16* %393, i64 3
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %394, i64 4
  %406 = getelementptr inbounds i16, i16* %393, i64 4
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = getelementptr inbounds i16, i16* %394, i64 5
  %409 = getelementptr inbounds i16, i16* %393, i64 5
  %410 = load i16, i16* %409, align 2
  store i16 %410, i16* %408, align 2
  %411 = getelementptr inbounds i16, i16* %394, i64 6
  %412 = getelementptr inbounds i16, i16* %393, i64 6
  %413 = load i16, i16* %412, align 2
  store i16 %413, i16* %411, align 2
  %414 = getelementptr inbounds i16, i16* %394, i64 7
  %415 = getelementptr inbounds i16, i16* %393, i64 7
  %416 = load i16, i16* %415, align 2
  store i16 %416, i16* %414, align 2
  %417 = add i64 %392, -8
  %418 = getelementptr inbounds i16, i16* %394, i64 8
  %419 = getelementptr inbounds i16, i16* %393, i64 8
  %420 = icmp eq i64 %417, 0
  br i1 %420, label %426, label %391, !llvm.loop !28

421:                                              ; preds = %224
  %422 = bitcast %"class.std::__1::basic_string.7"* %6 to i8**
  store i8* null, i8** %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %424 = bitcast i64* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %424, i8* nonnull align 8 %234, i64 15, i1 false)
  %425 = getelementptr inbounds i8, i8* %233, i64 23
  store i8 0, i8* %425, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 15, i1 false), !noalias !17
  br label %426

426:                                              ; preds = %386, %391, %366, %244, %421
  %427 = getelementptr inbounds i8, i8* %17, i64 608
  %428 = getelementptr inbounds i8, i8* %17, i64 631
  %429 = load i8, i8* %428, align 1
  %430 = icmp slt i8 %429, 0
  br i1 %430, label %431, label %434

431:                                              ; preds = %426
  %432 = bitcast i8* %427 to i8**
  %433 = load i8*, i8** %432, align 8
  call void @_ZdlPv(i8* %433) #8
  br label %434

434:                                              ; preds = %426, %431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* nonnull align 8 %233, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %234)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #9
  %435 = bitcast %"class.std::__1::basic_string.7"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %435) #9
  %436 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %436)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %436, i8 0, i64 15, i1 false)
  %437 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %438 = load i8, i8* %437, align 8, !range !2, !noalias !29
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %623, label %440

440:                                              ; preds = %434
  %441 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %442 = bitcast %"class.std::__1::basic_string.7"* %441 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %442, i64 0, i32 1, i32 1
  %444 = load i8, i8* %443, align 1
  %445 = icmp slt i8 %444, 0
  br i1 %445, label %448, label %446

446:                                              ; preds = %440
  %447 = bitcast %"class.std::__1::basic_string.7"* %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %435, i8* align 8 %447, i64 24, i1 false) #9
  br label %628

448:                                              ; preds = %440
  %449 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %441, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load i16*, i16** %449, align 8
  %451 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %452 = load i64, i64* %451, align 8
  %453 = icmp ult i64 %452, 11
  br i1 %453, label %454, label %459

454:                                              ; preds = %448
  %455 = bitcast %"class.std::__1::basic_string.7"* %8 to i16*
  %456 = trunc i64 %452 to i8
  %457 = bitcast %"class.std::__1::basic_string.7"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %458 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %457, i64 0, i32 1, i32 1
  store i8 %456, i8* %458, align 1
  br label %476

459:                                              ; preds = %448
  %460 = icmp ugt i64 %452, 9223372036854775791
  br i1 %460, label %461, label %463

461:                                              ; preds = %459
  %462 = bitcast %"class.std::__1::basic_string.7"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %462) #10
  unreachable

463:                                              ; preds = %459
  %464 = add nuw nsw i64 %452, 8
  %465 = and i64 %464, -8
  %466 = icmp slt i64 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %463
  call void @abort() #10
  unreachable

468:                                              ; preds = %463
  %469 = shl i64 %465, 1
  %470 = call i8* @_Znwm(i64 %469) #8
  %471 = bitcast i8* %470 to i16*
  %472 = bitcast %"class.std::__1::basic_string.7"* %8 to i8**
  store i8* %470, i8** %472, align 8
  %473 = or i64 %465, -9223372036854775808
  %474 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %473, i64* %474, align 8
  %475 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %452, i64* %475, align 8
  br label %476

476:                                              ; preds = %468, %454
  %477 = phi i16* [ %455, %454 ], [ %471, %468 ]
  %478 = add nuw nsw i64 %452, 1
  %479 = add i64 %452, 1
  %480 = icmp ult i64 %479, 16
  br i1 %480, label %570, label %481

481:                                              ; preds = %476
  %482 = add i64 %452, 1
  %483 = getelementptr i16, i16* %477, i64 %482
  %484 = getelementptr i16, i16* %450, i64 %482
  %485 = icmp ult i16* %477, %484
  %486 = icmp ult i16* %450, %483
  %487 = and i1 %485, %486
  br i1 %487, label %570, label %488

488:                                              ; preds = %481
  %489 = and i64 %479, -16
  %490 = sub i64 %478, %489
  %491 = getelementptr i16, i16* %450, i64 %489
  %492 = getelementptr i16, i16* %477, i64 %489
  %493 = add i64 %489, -16
  %494 = lshr exact i64 %493, 4
  %495 = add nuw nsw i64 %494, 1
  %496 = and i64 %495, 3
  %497 = icmp ult i64 %493, 48
  br i1 %497, label %549, label %498

498:                                              ; preds = %488
  %499 = sub nsw i64 %495, %496
  br label %500

500:                                              ; preds = %500, %498
  %501 = phi i64 [ 0, %498 ], [ %546, %500 ]
  %502 = phi i64 [ %499, %498 ], [ %547, %500 ]
  %503 = getelementptr i16, i16* %450, i64 %501
  %504 = getelementptr i16, i16* %477, i64 %501
  %505 = bitcast i16* %503 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !32
  %507 = getelementptr i16, i16* %503, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  %509 = load <8 x i16>, <8 x i16>* %508, align 2, !alias.scope !32
  %510 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %510, align 2, !alias.scope !35, !noalias !32
  %511 = getelementptr i16, i16* %504, i64 8
  %512 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %509, <8 x i16>* %512, align 2, !alias.scope !35, !noalias !32
  %513 = or i64 %501, 16
  %514 = getelementptr i16, i16* %450, i64 %513
  %515 = getelementptr i16, i16* %477, i64 %513
  %516 = bitcast i16* %514 to <8 x i16>*
  %517 = load <8 x i16>, <8 x i16>* %516, align 2, !alias.scope !32
  %518 = getelementptr i16, i16* %514, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  %520 = load <8 x i16>, <8 x i16>* %519, align 2, !alias.scope !32
  %521 = bitcast i16* %515 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %521, align 2, !alias.scope !35, !noalias !32
  %522 = getelementptr i16, i16* %515, i64 8
  %523 = bitcast i16* %522 to <8 x i16>*
  store <8 x i16> %520, <8 x i16>* %523, align 2, !alias.scope !35, !noalias !32
  %524 = or i64 %501, 32
  %525 = getelementptr i16, i16* %450, i64 %524
  %526 = getelementptr i16, i16* %477, i64 %524
  %527 = bitcast i16* %525 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !32
  %529 = getelementptr i16, i16* %525, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  %531 = load <8 x i16>, <8 x i16>* %530, align 2, !alias.scope !32
  %532 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %528, <8 x i16>* %532, align 2, !alias.scope !35, !noalias !32
  %533 = getelementptr i16, i16* %526, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> %531, <8 x i16>* %534, align 2, !alias.scope !35, !noalias !32
  %535 = or i64 %501, 48
  %536 = getelementptr i16, i16* %450, i64 %535
  %537 = getelementptr i16, i16* %477, i64 %535
  %538 = bitcast i16* %536 to <8 x i16>*
  %539 = load <8 x i16>, <8 x i16>* %538, align 2, !alias.scope !32
  %540 = getelementptr i16, i16* %536, i64 8
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !32
  %543 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> %539, <8 x i16>* %543, align 2, !alias.scope !35, !noalias !32
  %544 = getelementptr i16, i16* %537, i64 8
  %545 = bitcast i16* %544 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %545, align 2, !alias.scope !35, !noalias !32
  %546 = add i64 %501, 64
  %547 = add i64 %502, -4
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %500, !llvm.loop !37

549:                                              ; preds = %500, %488
  %550 = phi i64 [ 0, %488 ], [ %546, %500 ]
  %551 = icmp eq i64 %496, 0
  br i1 %551, label %568, label %552

552:                                              ; preds = %549, %552
  %553 = phi i64 [ %565, %552 ], [ %550, %549 ]
  %554 = phi i64 [ %566, %552 ], [ %496, %549 ]
  %555 = getelementptr i16, i16* %450, i64 %553
  %556 = getelementptr i16, i16* %477, i64 %553
  %557 = bitcast i16* %555 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !32
  %559 = getelementptr i16, i16* %555, i64 8
  %560 = bitcast i16* %559 to <8 x i16>*
  %561 = load <8 x i16>, <8 x i16>* %560, align 2, !alias.scope !32
  %562 = bitcast i16* %556 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %562, align 2, !alias.scope !35, !noalias !32
  %563 = getelementptr i16, i16* %556, i64 8
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %561, <8 x i16>* %564, align 2, !alias.scope !35, !noalias !32
  %565 = add i64 %553, 16
  %566 = add i64 %554, -1
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %568, label %552, !llvm.loop !38

568:                                              ; preds = %552, %549
  %569 = icmp eq i64 %479, %489
  br i1 %569, label %628, label %570

570:                                              ; preds = %568, %481, %476
  %571 = phi i64 [ %478, %481 ], [ %478, %476 ], [ %490, %568 ]
  %572 = phi i16* [ %450, %481 ], [ %450, %476 ], [ %491, %568 ]
  %573 = phi i16* [ %477, %481 ], [ %477, %476 ], [ %492, %568 ]
  %574 = add i64 %571, -1
  %575 = and i64 %571, 7
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %588, label %577

577:                                              ; preds = %570, %577
  %578 = phi i64 [ %583, %577 ], [ %571, %570 ]
  %579 = phi i16* [ %585, %577 ], [ %572, %570 ]
  %580 = phi i16* [ %584, %577 ], [ %573, %570 ]
  %581 = phi i64 [ %586, %577 ], [ %575, %570 ]
  %582 = load i16, i16* %579, align 2
  store i16 %582, i16* %580, align 2
  %583 = add i64 %578, -1
  %584 = getelementptr inbounds i16, i16* %580, i64 1
  %585 = getelementptr inbounds i16, i16* %579, i64 1
  %586 = add i64 %581, -1
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %588, label %577, !llvm.loop !39

588:                                              ; preds = %577, %570
  %589 = phi i64 [ %571, %570 ], [ %583, %577 ]
  %590 = phi i16* [ %572, %570 ], [ %585, %577 ]
  %591 = phi i16* [ %573, %570 ], [ %584, %577 ]
  %592 = icmp ult i64 %574, 7
  br i1 %592, label %628, label %593

593:                                              ; preds = %588, %593
  %594 = phi i64 [ %619, %593 ], [ %589, %588 ]
  %595 = phi i16* [ %621, %593 ], [ %590, %588 ]
  %596 = phi i16* [ %620, %593 ], [ %591, %588 ]
  %597 = load i16, i16* %595, align 2
  store i16 %597, i16* %596, align 2
  %598 = getelementptr inbounds i16, i16* %596, i64 1
  %599 = getelementptr inbounds i16, i16* %595, i64 1
  %600 = load i16, i16* %599, align 2
  store i16 %600, i16* %598, align 2
  %601 = getelementptr inbounds i16, i16* %596, i64 2
  %602 = getelementptr inbounds i16, i16* %595, i64 2
  %603 = load i16, i16* %602, align 2
  store i16 %603, i16* %601, align 2
  %604 = getelementptr inbounds i16, i16* %596, i64 3
  %605 = getelementptr inbounds i16, i16* %595, i64 3
  %606 = load i16, i16* %605, align 2
  store i16 %606, i16* %604, align 2
  %607 = getelementptr inbounds i16, i16* %596, i64 4
  %608 = getelementptr inbounds i16, i16* %595, i64 4
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = getelementptr inbounds i16, i16* %596, i64 5
  %611 = getelementptr inbounds i16, i16* %595, i64 5
  %612 = load i16, i16* %611, align 2
  store i16 %612, i16* %610, align 2
  %613 = getelementptr inbounds i16, i16* %596, i64 6
  %614 = getelementptr inbounds i16, i16* %595, i64 6
  %615 = load i16, i16* %614, align 2
  store i16 %615, i16* %613, align 2
  %616 = getelementptr inbounds i16, i16* %596, i64 7
  %617 = getelementptr inbounds i16, i16* %595, i64 7
  %618 = load i16, i16* %617, align 2
  store i16 %618, i16* %616, align 2
  %619 = add i64 %594, -8
  %620 = getelementptr inbounds i16, i16* %596, i64 8
  %621 = getelementptr inbounds i16, i16* %595, i64 8
  %622 = icmp eq i64 %619, 0
  br i1 %622, label %628, label %593, !llvm.loop !40

623:                                              ; preds = %434
  %624 = bitcast %"class.std::__1::basic_string.7"* %8 to i8**
  store i8* null, i8** %624, align 8
  %625 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %626 = bitcast i64* %625 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* nonnull align 8 %436, i64 15, i1 false)
  %627 = getelementptr inbounds i8, i8* %435, i64 23
  store i8 0, i8* %627, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %436, i8 0, i64 15, i1 false), !noalias !29
  br label %628

628:                                              ; preds = %588, %593, %568, %446, %623
  %629 = getelementptr inbounds i8, i8* %17, i64 496
  %630 = getelementptr inbounds i8, i8* %17, i64 519
  %631 = load i8, i8* %630, align 1
  %632 = icmp slt i8 %631, 0
  br i1 %632, label %633, label %636

633:                                              ; preds = %628
  %634 = bitcast i8* %629 to i8**
  %635 = load i8*, i8** %634, align 8
  call void @_ZdlPv(i8* %635) #8
  br label %636

636:                                              ; preds = %628, %633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %629, i8* nonnull align 8 %435, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %436)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %435) #9
  %637 = bitcast i8* %17 to i32*
  store i32 0, i32* %637, align 8
  %638 = getelementptr inbounds i8, i8* %17, i64 772
  %639 = bitcast i8* %638 to i32*
  store i32 2, i32* %639, align 4
  %640 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %640) #9
  %641 = load i32, i32* %13, align 8
  %642 = icmp eq i32 %641, 1
  br i1 %642, label %643, label %689

643:                                              ; preds = %636
  %644 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %231) #9
  %645 = bitcast %"class.std::__1::basic_string"* %644 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %646 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %645, i64 0, i32 1, i32 0
  %647 = load i8, i8* %646, align 1
  %648 = icmp slt i8 %647, 0
  br i1 %648, label %651, label %649

649:                                              ; preds = %643
  %650 = bitcast %"class.std::__1::basic_string"* %644 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %640, i8* align 8 %650, i64 24, i1 false) #9
  br label %656

651:                                              ; preds = %643
  %652 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %644, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load i8*, i8** %652, align 8
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %644, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %655 = load i64, i64* %654, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %653, i64 %655) #9
  br label %656

656:                                              ; preds = %651, %649
  %657 = getelementptr inbounds i8, i8* %17, i64 8
  %658 = bitcast i8* %657 to %"class.std::__1::basic_string"*
  %659 = getelementptr inbounds i8, i8* %17, i64 31
  %660 = load i8, i8* %659, align 1
  %661 = icmp slt i8 %660, 0
  %662 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %663 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %662, i64 0, i32 1, i32 0
  %664 = load i8, i8* %663, align 1
  %665 = icmp slt i8 %664, 0
  br i1 %661, label %674, label %666

666:                                              ; preds = %656
  br i1 %665, label %668, label %667

667:                                              ; preds = %666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %657, i8* nonnull align 8 %640, i64 24, i1 false) #9
  br label %775

668:                                              ; preds = %666
  %669 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %670 = load i8*, i8** %669, align 8
  %671 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %672 = load i64, i64* %671, align 8
  %673 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %658, i8* %670, i64 %672) #9
  br label %683

674:                                              ; preds = %656
  %675 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load i8*, i8** %675, align 8
  %677 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %678 = load i64, i64* %677, align 8
  %679 = zext i8 %664 to i64
  %680 = select i1 %665, i8* %676, i8* %640
  %681 = select i1 %665, i64 %678, i64 %679
  %682 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %658, i8* %680, i64 %681) #9
  br label %683

683:                                              ; preds = %668, %674
  %684 = load i8, i8* %663, align 1
  %685 = icmp slt i8 %684, 0
  br i1 %685, label %686, label %775

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load i8*, i8** %687, align 8
  call void @_ZdlPv(i8* %688) #8
  br label %775

689:                                              ; preds = %636
  %690 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %690) #9
  %691 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %691) #9
  %692 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %693 = load i8, i8* %692, align 8, !range !2
  %694 = icmp eq i8 %693, 0
  br i1 %694, label %695, label %697

695:                                              ; preds = %689
  %696 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %699

697:                                              ; preds = %689
  %698 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #9
  br label %699

699:                                              ; preds = %695, %697
  %700 = phi %"class.std::__1::basic_string"* [ %696, %695 ], [ %698, %697 ]
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %700) #9
  %701 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9, !noalias !41
  %702 = bitcast %"class.std::__1::basic_string"* %701 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %690, i8* align 8 %702, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %702, i8 0, i64 24, i1 false) #9, !noalias !41
  %703 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %704 = load i8, i8* %703, align 8, !range !2
  %705 = icmp eq i8 %704, 0
  br i1 %705, label %706, label %708

706:                                              ; preds = %699
  %707 = getelementptr inbounds %"struct.password_manager::CredentialInfo", %"struct.password_manager::CredentialInfo"* %0, i64 0, i32 5, i32 0, i32 1
  br label %710

708:                                              ; preds = %699
  %709 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #9
  br label %710

710:                                              ; preds = %708, %706
  %711 = phi %"class.std::__1::basic_string"* [ %707, %706 ], [ %709, %708 ]
  %712 = bitcast %"class.std::__1::basic_string"* %711 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %713 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %712, i64 0, i32 1, i32 0
  %714 = load i8, i8* %713, align 1, !noalias !44
  %715 = icmp slt i8 %714, 0
  %716 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %711, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8, !noalias !44
  %718 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %711, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %719 = load i64, i64* %718, align 8, !noalias !44
  %720 = bitcast %"class.std::__1::basic_string"* %711 to i8*
  %721 = zext i8 %714 to i64
  %722 = select i1 %715, i8* %717, i8* %720
  %723 = select i1 %715, i64 %719, i64 %721
  %724 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %722, i64 %723) #9, !noalias !44
  %725 = bitcast %"class.std::__1::basic_string"* %724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %640, i8* align 8 %725, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %725, i8 0, i64 24, i1 false) #9, !noalias !44
  %726 = getelementptr inbounds i8, i8* %17, i64 8
  %727 = bitcast i8* %726 to %"class.std::__1::basic_string"*
  %728 = getelementptr inbounds i8, i8* %17, i64 31
  %729 = load i8, i8* %728, align 1
  %730 = icmp slt i8 %729, 0
  %731 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  %733 = load i8, i8* %732, align 1
  %734 = icmp slt i8 %733, 0
  br i1 %730, label %743, label %735

735:                                              ; preds = %710
  br i1 %734, label %737, label %736

736:                                              ; preds = %735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %726, i8* nonnull align 8 %640, i64 24, i1 false) #9
  br label %758

737:                                              ; preds = %735
  %738 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %739 = load i8*, i8** %738, align 8
  %740 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %741 = load i64, i64* %740, align 8
  %742 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %727, i8* %739, i64 %741) #9
  br label %752

743:                                              ; preds = %710
  %744 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load i8*, i8** %744, align 8
  %746 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %747 = load i64, i64* %746, align 8
  %748 = zext i8 %733 to i64
  %749 = select i1 %734, i8* %745, i8* %640
  %750 = select i1 %734, i64 %747, i64 %748
  %751 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %727, i8* %749, i64 %750) #9
  br label %752

752:                                              ; preds = %737, %743
  %753 = load i8, i8* %732, align 1
  %754 = icmp slt i8 %753, 0
  br i1 %754, label %755, label %758

755:                                              ; preds = %752
  %756 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load i8*, i8** %756, align 8
  call void @_ZdlPv(i8* %757) #8
  br label %758

758:                                              ; preds = %736, %752, %755
  %759 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %759, i64 0, i32 1, i32 0
  %761 = load i8, i8* %760, align 1
  %762 = icmp slt i8 %761, 0
  br i1 %762, label %763, label %766

763:                                              ; preds = %758
  %764 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %765 = load i8*, i8** %764, align 8
  call void @_ZdlPv(i8* %765) #8
  br label %766

766:                                              ; preds = %758, %763
  %767 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %768 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %767, i64 0, i32 1, i32 0
  %769 = load i8, i8* %768, align 1
  %770 = icmp slt i8 %769, 0
  br i1 %770, label %771, label %774

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load i8*, i8** %772, align 8
  call void @_ZdlPv(i8* %773) #8
  br label %774

774:                                              ; preds = %766, %771
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %691) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %690) #9
  br label %775

775:                                              ; preds = %667, %686, %683, %774
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %640) #9
  br label %776

776:                                              ; preds = %775, %2
  %777 = phi %"struct.password_manager::PasswordForm"* [ null, %2 ], [ %18, %775 ]
  ret %"struct.password_manager::PasswordForm"* %777
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager28PasswordFormToCredentialInfoERKNS_12PasswordFormE(%"struct.password_manager::CredentialInfo"* noalias sret, %"struct.password_manager::PasswordForm"* dereferenceable(1744)) local_unnamed_addr #0 {
  %3 = alloca %"class.absl::optional.78", align 8
  %4 = alloca %"class.absl::optional.78", align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.absl::optional.78", align 8
  %7 = alloca %"class.url::Origin", align 8
  %8 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 36
  %9 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 36, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 2, i32 1
  %13 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 12
  %14 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string.7"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string.7"* %15 to i8*
  %22 = bitcast %"class.std::__1::basic_string.7"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #9
  br label %198

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.7"* %15 to i16*
  %31 = trunc i64 %27 to i8
  %32 = bitcast %"class.std::__1::basic_string.7"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1
  br label %51

34:                                               ; preds = %23
  %35 = icmp ugt i64 %27, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::basic_string.7"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %37) #10
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #10
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #8
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.7"* %15 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8
  br label %51

51:                                               ; preds = %43, %29
  %52 = phi i16* [ %30, %29 ], [ %46, %43 ]
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %51
  %57 = add i64 %27, 1
  %58 = getelementptr i16, i16* %52, i64 %57
  %59 = getelementptr i16, i16* %25, i64 %57
  %60 = icmp ult i16* %52, %59
  %61 = icmp ult i16* %25, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %54, -16
  %65 = sub i64 %53, %64
  %66 = getelementptr i16, i16* %25, i64 %64
  %67 = getelementptr i16, i16* %52, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %25, i64 %76
  %79 = getelementptr i16, i16* %52, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !47
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !47
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !50, !noalias !47
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !50, !noalias !47
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %25, i64 %88
  %90 = getelementptr i16, i16* %52, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !47
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !47
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !50, !noalias !47
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !50, !noalias !47
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %25, i64 %99
  %101 = getelementptr i16, i16* %52, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !47
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !47
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !50, !noalias !47
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !50, !noalias !47
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %25, i64 %110
  %112 = getelementptr i16, i16* %52, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !47
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !47
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !50, !noalias !47
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !50, !noalias !47
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !52

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %25, i64 %128
  %131 = getelementptr i16, i16* %52, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !47
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !47
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !50, !noalias !47
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !50, !noalias !47
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !53

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %54, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %51
  %146 = phi i64 [ %53, %56 ], [ %53, %51 ], [ %65, %143 ]
  %147 = phi i16* [ %25, %56 ], [ %25, %51 ], [ %66, %143 ]
  %148 = phi i16* [ %52, %56 ], [ %52, %51 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !54

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !55

198:                                              ; preds = %163, %168, %143, %20
  %199 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 34
  %200 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %200, align 8
  %201 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %202 = bitcast %"class.std::__1::basic_string.7"* %199 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %202, i64 0, i32 1, i32 1
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %209, label %206

206:                                              ; preds = %198
  %207 = bitcast %"class.std::__1::basic_string.7"* %201 to i8*
  %208 = bitcast %"class.std::__1::basic_string.7"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 24, i1 false) #9
  br label %384

209:                                              ; preds = %198
  %210 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp ult i64 %213, 11
  br i1 %214, label %215, label %220

215:                                              ; preds = %209
  %216 = bitcast %"class.std::__1::basic_string.7"* %201 to i16*
  %217 = trunc i64 %213 to i8
  %218 = bitcast %"class.std::__1::basic_string.7"* %201 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %218, i64 0, i32 1, i32 1
  store i8 %217, i8* %219, align 1
  br label %237

220:                                              ; preds = %209
  %221 = icmp ugt i64 %213, 9223372036854775791
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = bitcast %"class.std::__1::basic_string.7"* %201 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %223) #10
  unreachable

224:                                              ; preds = %220
  %225 = add nuw nsw i64 %213, 8
  %226 = and i64 %225, -8
  %227 = icmp slt i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  tail call void @abort() #10
  unreachable

229:                                              ; preds = %224
  %230 = shl i64 %226, 1
  %231 = tail call i8* @_Znwm(i64 %230) #8
  %232 = bitcast i8* %231 to i16*
  %233 = bitcast %"class.std::__1::basic_string.7"* %201 to i8**
  store i8* %231, i8** %233, align 8
  %234 = or i64 %226, -9223372036854775808
  %235 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %213, i64* %236, align 8
  br label %237

237:                                              ; preds = %229, %215
  %238 = phi i16* [ %216, %215 ], [ %232, %229 ]
  %239 = add nuw nsw i64 %213, 1
  %240 = add i64 %213, 1
  %241 = icmp ult i64 %240, 16
  br i1 %241, label %331, label %242

242:                                              ; preds = %237
  %243 = add i64 %213, 1
  %244 = getelementptr i16, i16* %238, i64 %243
  %245 = getelementptr i16, i16* %211, i64 %243
  %246 = icmp ult i16* %238, %245
  %247 = icmp ult i16* %211, %244
  %248 = and i1 %246, %247
  br i1 %248, label %331, label %249

249:                                              ; preds = %242
  %250 = and i64 %240, -16
  %251 = sub i64 %239, %250
  %252 = getelementptr i16, i16* %211, i64 %250
  %253 = getelementptr i16, i16* %238, i64 %250
  %254 = add i64 %250, -16
  %255 = lshr exact i64 %254, 4
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp ult i64 %254, 48
  br i1 %258, label %310, label %259

259:                                              ; preds = %249
  %260 = sub nsw i64 %256, %257
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i64 [ 0, %259 ], [ %307, %261 ]
  %263 = phi i64 [ %260, %259 ], [ %308, %261 ]
  %264 = getelementptr i16, i16* %211, i64 %262
  %265 = getelementptr i16, i16* %238, i64 %262
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !56
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !56
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !59, !noalias !56
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !59, !noalias !56
  %274 = or i64 %262, 16
  %275 = getelementptr i16, i16* %211, i64 %274
  %276 = getelementptr i16, i16* %238, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !56
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !56
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !59, !noalias !56
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !59, !noalias !56
  %285 = or i64 %262, 32
  %286 = getelementptr i16, i16* %211, i64 %285
  %287 = getelementptr i16, i16* %238, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !56
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !56
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !59, !noalias !56
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !59, !noalias !56
  %296 = or i64 %262, 48
  %297 = getelementptr i16, i16* %211, i64 %296
  %298 = getelementptr i16, i16* %238, i64 %296
  %299 = bitcast i16* %297 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !56
  %301 = getelementptr i16, i16* %297, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !56
  %304 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !59, !noalias !56
  %305 = getelementptr i16, i16* %298, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !59, !noalias !56
  %307 = add i64 %262, 64
  %308 = add i64 %263, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %261, !llvm.loop !61

310:                                              ; preds = %261, %249
  %311 = phi i64 [ 0, %249 ], [ %307, %261 ]
  %312 = icmp eq i64 %257, 0
  br i1 %312, label %329, label %313

313:                                              ; preds = %310, %313
  %314 = phi i64 [ %326, %313 ], [ %311, %310 ]
  %315 = phi i64 [ %327, %313 ], [ %257, %310 ]
  %316 = getelementptr i16, i16* %211, i64 %314
  %317 = getelementptr i16, i16* %238, i64 %314
  %318 = bitcast i16* %316 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !56
  %320 = getelementptr i16, i16* %316, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !56
  %323 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %323, align 2, !alias.scope !59, !noalias !56
  %324 = getelementptr i16, i16* %317, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %325, align 2, !alias.scope !59, !noalias !56
  %326 = add i64 %314, 16
  %327 = add i64 %315, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %313, !llvm.loop !62

329:                                              ; preds = %313, %310
  %330 = icmp eq i64 %240, %250
  br i1 %330, label %384, label %331

331:                                              ; preds = %329, %242, %237
  %332 = phi i64 [ %239, %242 ], [ %239, %237 ], [ %251, %329 ]
  %333 = phi i16* [ %211, %242 ], [ %211, %237 ], [ %252, %329 ]
  %334 = phi i16* [ %238, %242 ], [ %238, %237 ], [ %253, %329 ]
  %335 = add i64 %332, -1
  %336 = and i64 %332, 7
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %349, label %338

338:                                              ; preds = %331, %338
  %339 = phi i64 [ %344, %338 ], [ %332, %331 ]
  %340 = phi i16* [ %346, %338 ], [ %333, %331 ]
  %341 = phi i16* [ %345, %338 ], [ %334, %331 ]
  %342 = phi i64 [ %347, %338 ], [ %336, %331 ]
  %343 = load i16, i16* %340, align 2
  store i16 %343, i16* %341, align 2
  %344 = add i64 %339, -1
  %345 = getelementptr inbounds i16, i16* %341, i64 1
  %346 = getelementptr inbounds i16, i16* %340, i64 1
  %347 = add i64 %342, -1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %338, !llvm.loop !63

349:                                              ; preds = %338, %331
  %350 = phi i64 [ %332, %331 ], [ %344, %338 ]
  %351 = phi i16* [ %333, %331 ], [ %346, %338 ]
  %352 = phi i16* [ %334, %331 ], [ %345, %338 ]
  %353 = icmp ult i64 %335, 7
  br i1 %353, label %384, label %354

354:                                              ; preds = %349, %354
  %355 = phi i64 [ %380, %354 ], [ %350, %349 ]
  %356 = phi i16* [ %382, %354 ], [ %351, %349 ]
  %357 = phi i16* [ %381, %354 ], [ %352, %349 ]
  %358 = load i16, i16* %356, align 2
  store i16 %358, i16* %357, align 2
  %359 = getelementptr inbounds i16, i16* %357, i64 1
  %360 = getelementptr inbounds i16, i16* %356, i64 1
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %357, i64 2
  %363 = getelementptr inbounds i16, i16* %356, i64 2
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %357, i64 3
  %366 = getelementptr inbounds i16, i16* %356, i64 3
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %357, i64 4
  %369 = getelementptr inbounds i16, i16* %356, i64 4
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %357, i64 5
  %372 = getelementptr inbounds i16, i16* %356, i64 5
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = getelementptr inbounds i16, i16* %357, i64 6
  %375 = getelementptr inbounds i16, i16* %356, i64 6
  %376 = load i16, i16* %375, align 2
  store i16 %376, i16* %374, align 2
  %377 = getelementptr inbounds i16, i16* %357, i64 7
  %378 = getelementptr inbounds i16, i16* %356, i64 7
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = add i64 %355, -8
  %381 = getelementptr inbounds i16, i16* %357, i64 8
  %382 = getelementptr inbounds i16, i16* %356, i64 8
  %383 = icmp eq i64 %380, 0
  br i1 %383, label %384, label %354, !llvm.loop !64

384:                                              ; preds = %349, %354, %329, %206
  %385 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 35
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %385) #9
  %386 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 18
  %387 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %387, align 8
  %388 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %389 = bitcast %"class.std::__1::basic_string.7"* %386 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %389, i64 0, i32 1, i32 1
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %396, label %393

393:                                              ; preds = %384
  %394 = bitcast %"class.std::__1::basic_string.7"* %388 to i8*
  %395 = bitcast %"class.std::__1::basic_string.7"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* align 8 %395, i64 24, i1 false) #9
  br label %571

396:                                              ; preds = %384
  %397 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %386, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load i16*, i16** %397, align 8
  %399 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %400 = load i64, i64* %399, align 8
  %401 = icmp ult i64 %400, 11
  br i1 %401, label %402, label %407

402:                                              ; preds = %396
  %403 = bitcast %"class.std::__1::basic_string.7"* %388 to i16*
  %404 = trunc i64 %400 to i8
  %405 = bitcast %"class.std::__1::basic_string.7"* %388 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %405, i64 0, i32 1, i32 1
  store i8 %404, i8* %406, align 1
  br label %424

407:                                              ; preds = %396
  %408 = icmp ugt i64 %400, 9223372036854775791
  br i1 %408, label %409, label %411

409:                                              ; preds = %407
  %410 = bitcast %"class.std::__1::basic_string.7"* %388 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %410) #10
  unreachable

411:                                              ; preds = %407
  %412 = add nuw nsw i64 %400, 8
  %413 = and i64 %412, -8
  %414 = icmp slt i64 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %411
  call void @abort() #10
  unreachable

416:                                              ; preds = %411
  %417 = shl i64 %413, 1
  %418 = call i8* @_Znwm(i64 %417) #8
  %419 = bitcast i8* %418 to i16*
  %420 = bitcast %"class.std::__1::basic_string.7"* %388 to i8**
  store i8* %418, i8** %420, align 8
  %421 = or i64 %413, -9223372036854775808
  %422 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %400, i64* %423, align 8
  br label %424

424:                                              ; preds = %416, %402
  %425 = phi i16* [ %403, %402 ], [ %419, %416 ]
  %426 = add nuw nsw i64 %400, 1
  %427 = add i64 %400, 1
  %428 = icmp ult i64 %427, 16
  br i1 %428, label %518, label %429

429:                                              ; preds = %424
  %430 = add i64 %400, 1
  %431 = getelementptr i16, i16* %425, i64 %430
  %432 = getelementptr i16, i16* %398, i64 %430
  %433 = icmp ult i16* %425, %432
  %434 = icmp ult i16* %398, %431
  %435 = and i1 %433, %434
  br i1 %435, label %518, label %436

436:                                              ; preds = %429
  %437 = and i64 %427, -16
  %438 = sub i64 %426, %437
  %439 = getelementptr i16, i16* %398, i64 %437
  %440 = getelementptr i16, i16* %425, i64 %437
  %441 = add i64 %437, -16
  %442 = lshr exact i64 %441, 4
  %443 = add nuw nsw i64 %442, 1
  %444 = and i64 %443, 3
  %445 = icmp ult i64 %441, 48
  br i1 %445, label %497, label %446

446:                                              ; preds = %436
  %447 = sub nsw i64 %443, %444
  br label %448

448:                                              ; preds = %448, %446
  %449 = phi i64 [ 0, %446 ], [ %494, %448 ]
  %450 = phi i64 [ %447, %446 ], [ %495, %448 ]
  %451 = getelementptr i16, i16* %398, i64 %449
  %452 = getelementptr i16, i16* %425, i64 %449
  %453 = bitcast i16* %451 to <8 x i16>*
  %454 = load <8 x i16>, <8 x i16>* %453, align 2, !alias.scope !65
  %455 = getelementptr i16, i16* %451, i64 8
  %456 = bitcast i16* %455 to <8 x i16>*
  %457 = load <8 x i16>, <8 x i16>* %456, align 2, !alias.scope !65
  %458 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %454, <8 x i16>* %458, align 2, !alias.scope !68, !noalias !65
  %459 = getelementptr i16, i16* %452, i64 8
  %460 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %457, <8 x i16>* %460, align 2, !alias.scope !68, !noalias !65
  %461 = or i64 %449, 16
  %462 = getelementptr i16, i16* %398, i64 %461
  %463 = getelementptr i16, i16* %425, i64 %461
  %464 = bitcast i16* %462 to <8 x i16>*
  %465 = load <8 x i16>, <8 x i16>* %464, align 2, !alias.scope !65
  %466 = getelementptr i16, i16* %462, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  %468 = load <8 x i16>, <8 x i16>* %467, align 2, !alias.scope !65
  %469 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %469, align 2, !alias.scope !68, !noalias !65
  %470 = getelementptr i16, i16* %463, i64 8
  %471 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %468, <8 x i16>* %471, align 2, !alias.scope !68, !noalias !65
  %472 = or i64 %449, 32
  %473 = getelementptr i16, i16* %398, i64 %472
  %474 = getelementptr i16, i16* %425, i64 %472
  %475 = bitcast i16* %473 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !65
  %477 = getelementptr i16, i16* %473, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  %479 = load <8 x i16>, <8 x i16>* %478, align 2, !alias.scope !65
  %480 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %480, align 2, !alias.scope !68, !noalias !65
  %481 = getelementptr i16, i16* %474, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %479, <8 x i16>* %482, align 2, !alias.scope !68, !noalias !65
  %483 = or i64 %449, 48
  %484 = getelementptr i16, i16* %398, i64 %483
  %485 = getelementptr i16, i16* %425, i64 %483
  %486 = bitcast i16* %484 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !65
  %488 = getelementptr i16, i16* %484, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !65
  %491 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %491, align 2, !alias.scope !68, !noalias !65
  %492 = getelementptr i16, i16* %485, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %493, align 2, !alias.scope !68, !noalias !65
  %494 = add i64 %449, 64
  %495 = add i64 %450, -4
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %448, !llvm.loop !70

497:                                              ; preds = %448, %436
  %498 = phi i64 [ 0, %436 ], [ %494, %448 ]
  %499 = icmp eq i64 %444, 0
  br i1 %499, label %516, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %513, %500 ], [ %498, %497 ]
  %502 = phi i64 [ %514, %500 ], [ %444, %497 ]
  %503 = getelementptr i16, i16* %398, i64 %501
  %504 = getelementptr i16, i16* %425, i64 %501
  %505 = bitcast i16* %503 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !65
  %507 = getelementptr i16, i16* %503, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  %509 = load <8 x i16>, <8 x i16>* %508, align 2, !alias.scope !65
  %510 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %510, align 2, !alias.scope !68, !noalias !65
  %511 = getelementptr i16, i16* %504, i64 8
  %512 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %509, <8 x i16>* %512, align 2, !alias.scope !68, !noalias !65
  %513 = add i64 %501, 16
  %514 = add i64 %502, -1
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %516, label %500, !llvm.loop !71

516:                                              ; preds = %500, %497
  %517 = icmp eq i64 %427, %437
  br i1 %517, label %571, label %518

518:                                              ; preds = %516, %429, %424
  %519 = phi i64 [ %426, %429 ], [ %426, %424 ], [ %438, %516 ]
  %520 = phi i16* [ %398, %429 ], [ %398, %424 ], [ %439, %516 ]
  %521 = phi i16* [ %425, %429 ], [ %425, %424 ], [ %440, %516 ]
  %522 = add i64 %519, -1
  %523 = and i64 %519, 7
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %536, label %525

525:                                              ; preds = %518, %525
  %526 = phi i64 [ %531, %525 ], [ %519, %518 ]
  %527 = phi i16* [ %533, %525 ], [ %520, %518 ]
  %528 = phi i16* [ %532, %525 ], [ %521, %518 ]
  %529 = phi i64 [ %534, %525 ], [ %523, %518 ]
  %530 = load i16, i16* %527, align 2
  store i16 %530, i16* %528, align 2
  %531 = add i64 %526, -1
  %532 = getelementptr inbounds i16, i16* %528, i64 1
  %533 = getelementptr inbounds i16, i16* %527, i64 1
  %534 = add i64 %529, -1
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %536, label %525, !llvm.loop !72

536:                                              ; preds = %525, %518
  %537 = phi i64 [ %519, %518 ], [ %531, %525 ]
  %538 = phi i16* [ %520, %518 ], [ %533, %525 ]
  %539 = phi i16* [ %521, %518 ], [ %532, %525 ]
  %540 = icmp ult i64 %522, 7
  br i1 %540, label %571, label %541

541:                                              ; preds = %536, %541
  %542 = phi i64 [ %567, %541 ], [ %537, %536 ]
  %543 = phi i16* [ %569, %541 ], [ %538, %536 ]
  %544 = phi i16* [ %568, %541 ], [ %539, %536 ]
  %545 = load i16, i16* %543, align 2
  store i16 %545, i16* %544, align 2
  %546 = getelementptr inbounds i16, i16* %544, i64 1
  %547 = getelementptr inbounds i16, i16* %543, i64 1
  %548 = load i16, i16* %547, align 2
  store i16 %548, i16* %546, align 2
  %549 = getelementptr inbounds i16, i16* %544, i64 2
  %550 = getelementptr inbounds i16, i16* %543, i64 2
  %551 = load i16, i16* %550, align 2
  store i16 %551, i16* %549, align 2
  %552 = getelementptr inbounds i16, i16* %544, i64 3
  %553 = getelementptr inbounds i16, i16* %543, i64 3
  %554 = load i16, i16* %553, align 2
  store i16 %554, i16* %552, align 2
  %555 = getelementptr inbounds i16, i16* %544, i64 4
  %556 = getelementptr inbounds i16, i16* %543, i64 4
  %557 = load i16, i16* %556, align 2
  store i16 %557, i16* %555, align 2
  %558 = getelementptr inbounds i16, i16* %544, i64 5
  %559 = getelementptr inbounds i16, i16* %543, i64 5
  %560 = load i16, i16* %559, align 2
  store i16 %560, i16* %558, align 2
  %561 = getelementptr inbounds i16, i16* %544, i64 6
  %562 = getelementptr inbounds i16, i16* %543, i64 6
  %563 = load i16, i16* %562, align 2
  store i16 %563, i16* %561, align 2
  %564 = getelementptr inbounds i16, i16* %544, i64 7
  %565 = getelementptr inbounds i16, i16* %543, i64 7
  %566 = load i16, i16* %565, align 2
  store i16 %566, i16* %564, align 2
  %567 = add i64 %542, -8
  %568 = getelementptr inbounds i16, i16* %544, i64 8
  %569 = getelementptr inbounds i16, i16* %543, i64 8
  %570 = icmp eq i64 %567, 0
  br i1 %570, label %571, label %541, !llvm.loop !73

571:                                              ; preds = %536, %541, %516, %393
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %8) #9
  call void @_ZN16password_manager14CredentialInfoC1ENS_14CredentialTypeEN4absl8optionalINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEESB_4GURLSB_N3url6OriginE(%"struct.password_manager::CredentialInfo"* %0, i32 %12, %"class.absl::optional.78"* nonnull %3, %"class.absl::optional.78"* nonnull %4, %class.GURL* nonnull %5, %"class.absl::optional.78"* nonnull %6, %"class.url::Origin"* nonnull %7) #9
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #9
  %572 = load i8, i8* %387, align 8, !range !2
  %573 = icmp eq i8 %572, 0
  br i1 %573, label %583, label %574

574:                                              ; preds = %571
  %575 = bitcast %"class.std::__1::basic_string.7"* %388 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %576 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %575, i64 0, i32 1, i32 1
  %577 = load i8, i8* %576, align 1
  %578 = icmp slt i8 %577, 0
  br i1 %578, label %579, label %582

579:                                              ; preds = %574
  %580 = bitcast %"class.std::__1::basic_string.7"* %388 to i8**
  %581 = load i8*, i8** %580, align 8
  call void @_ZdlPv(i8* %581) #8
  br label %582

582:                                              ; preds = %579, %574
  store i8 0, i8* %387, align 8
  br label %583

583:                                              ; preds = %571, %582
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #9
  %584 = load i8, i8* %200, align 8, !range !2
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %595, label %586

586:                                              ; preds = %583
  %587 = bitcast %"class.std::__1::basic_string.7"* %201 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %588 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %587, i64 0, i32 1, i32 1
  %589 = load i8, i8* %588, align 1
  %590 = icmp slt i8 %589, 0
  br i1 %590, label %591, label %594

591:                                              ; preds = %586
  %592 = bitcast %"class.std::__1::basic_string.7"* %201 to i8**
  %593 = load i8*, i8** %592, align 8
  call void @_ZdlPv(i8* %593) #8
  br label %594

594:                                              ; preds = %591, %586
  store i8 0, i8* %200, align 8
  br label %595

595:                                              ; preds = %583, %594
  %596 = load i8, i8* %14, align 8, !range !2
  %597 = icmp eq i8 %596, 0
  br i1 %597, label %607, label %598

598:                                              ; preds = %595
  %599 = bitcast %"class.std::__1::basic_string.7"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %599, i64 0, i32 1, i32 1
  %601 = load i8, i8* %600, align 1
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %606

603:                                              ; preds = %598
  %604 = bitcast %"class.std::__1::basic_string.7"* %15 to i8**
  %605 = load i8*, i8** %604, align 8
  call void @_ZdlPv(i8* %605) #8
  br label %606

606:                                              ; preds = %603, %598
  store i8 0, i8* %14, align 8
  br label %607

607:                                              ; preds = %595, %606
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN16password_manager14CredentialInfoC1ENS_14CredentialTypeEN4absl8optionalINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEESB_4GURLSB_N3url6OriginE(%"struct.password_manager::CredentialInfo"*, i32, %"class.absl::optional.78"*, %"class.absl::optional.78"*, %class.GURL*, %"class.absl::optional.78"*, %"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_: argument 0"}
!19 = distinct !{!19, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14}
!28 = distinct !{!28, !12}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_: argument 0"}
!31 = distinct !{!31, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_"}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !12}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !12}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !12}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14}
!55 = distinct !{!55, !12}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !12}
!62 = distinct !{!62, !14}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !12}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !12}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14}
!73 = distinct !{!73, !12}
