; ModuleID = '../../extensions/renderer/blob_native_handler.cc'
source_filename = "../../extensions/renderer/blob_native_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::BlobNativeHandler" = type { %"class.extensions::ObjectBackedNativeHandler" }
%"class.extensions::ObjectBackedNativeHandler" = type { %"class.extensions::NativeHandler.base", i32, %"class.v8::PersistentValueVector", %"class.extensions::ScriptContext"*, %"class.v8::Global.30" }
%"class.extensions::NativeHandler.base" = type <{ i32 (...)**, i8 }>
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector" }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.v8::Global.30" = type { %"class.v8::PersistentBase.31" }
%"class.v8::PersistentBase.31" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.extensions::ScriptContext" = type <{ i8, [7 x i8], %"class.v8::Global", %"class.blink::WebLocalFrame"*, %class.scoped_refptr, i32, [4 x i8], %class.scoped_refptr, i32, [4 x i8], %"class.base::UnguessableToken", %"class.std::__1::unique_ptr", %"class.extensions::SafeBuiltins", %"class.extensions::APIPermissionSet", %"class.std::__1::vector.12", %"class.v8::Isolate"*, %class.GURL, %class.GURL, i64, %"class.base::ThreadChecker", [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::ModuleSystem" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.extensions::ScriptContext"*, %"class.extensions::SourceMap"*, %"class.std::__1::map.32", i32, %"class.std::__1::unique_ptr.43", %"class.std::__1::set", %"class.std::__1::vector.56", %"class.v8::Eternal", %"class.base::RepeatingCallback", %"class.std::__1::set" }
%"class.extensions::SourceMap" = type opaque
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.extensions::ModuleSystem::ExceptionHandler"* }
%"class.extensions::ModuleSystem::ExceptionHandler" = type { i32 (...)**, %"class.extensions::ScriptContext"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.std::__1::unique_ptr.58"*, %"class.std::__1::unique_ptr.58"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::unique_ptr.58" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::unique_ptr.58"* }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.extensions::SafeBuiltins" = type { %"class.extensions::ScriptContext"* }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::OnceCallback"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::RepeatingCallback.66" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::WebBlob" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.v8::Value" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::String::Utf8Value" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }

$_ZN10extensions17BlobNativeHandlerD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJEEES9_E3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIPFvRKN2v820FunctionCallbackInfoINS2_5ValueEEEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN10extensions17BlobNativeHandlerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::BlobNativeHandler"*)* @_ZN10extensions17BlobNativeHandlerD0Ev to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv to i8*), i8* bitcast (i1 (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv to i8*), i8* bitcast (%"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv to i8*), i8* bitcast (void (%"class.extensions::BlobNativeHandler"*)* @_ZN10extensions17BlobNativeHandler9AddRoutesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [12 x i8] c"GetBlobUuid\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"TakeBrowserProcessBlob\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"3 == args.Length()\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"../../extensions/renderer/blob_native_handler.cc\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"args[0]->IsString()\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"args[1]->IsString()\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"args[2]->IsInt32()\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"1 == args.Length()\00", align 1

@_ZN10extensions17BlobNativeHandlerC1EPNS_13ScriptContextE = hidden unnamed_addr alias void (%"class.extensions::BlobNativeHandler"*, %"class.extensions::ScriptContext"*), void (%"class.extensions::BlobNativeHandler"*, %"class.extensions::ScriptContext"*)* @_ZN10extensions17BlobNativeHandlerC2EPNS_13ScriptContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17BlobNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::BlobNativeHandler"*, %"class.extensions::ScriptContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::BlobNativeHandler", %"class.extensions::BlobNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"* %3, %"class.extensions::ScriptContext"* %1) #9
  %4 = getelementptr inbounds %"class.extensions::BlobNativeHandler", %"class.extensions::BlobNativeHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions17BlobNativeHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.extensions::ScriptContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17BlobNativeHandler9AddRoutesEv(%"class.extensions::BlobNativeHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::RepeatingCallback.66", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::RepeatingCallback.66", align 8
  %6 = getelementptr inbounds %"class.extensions::BlobNativeHandler", %"class.extensions::BlobNativeHandler"* %0, i64 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 11, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11, i1 false) #9
  %10 = getelementptr inbounds i8, i8* %7, i64 11
  store i8 0, i8* %10, align 1
  %11 = tail call i8* @_Znwm(i64 48) #10, !noalias !2
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJEEES9_E3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKN2v820FunctionCallbackInfoINS2_5ValueEEEEJEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN12_GLOBAL__N_111GetBlobUuidERKN2v820FunctionCallbackInfoINS0_5ValueEEE to i64), i64* %14, align 8, !noalias !2
  %15 = bitcast %"class.base::RepeatingCallback.66"* %3 to i8**
  store i8* %11, i8** %15, align 8, !alias.scope !2
  call void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"* %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.base::RepeatingCallback.66"* nonnull %3) #9
  %16 = getelementptr inbounds %"class.base::RepeatingCallback.66", %"class.base::RepeatingCallback.66"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #9
  %17 = load i8, i8* %9, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 22, i8* %25, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22, i1 false) #9
  %26 = getelementptr inbounds i8, i8* %23, i64 22
  store i8 0, i8* %26, align 2
  %27 = ptrtoint %"class.extensions::BlobNativeHandler"* %0 to i64
  %28 = call i8* @_Znwm(i64 56) #10, !noalias !7
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !7
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN10extensions17BlobNativeHandler22TakeBrowserProcessBlobERKN2v820FunctionCallbackInfoINS1_5ValueEEE to i64), i64 0>, <2 x i64>* %31, align 8, !noalias !7
  %32 = getelementptr inbounds i8, i8* %28, i64 48
  %33 = bitcast i8* %32 to i64*
  store i64 %27, i64* %33, align 8, !noalias !7
  %34 = bitcast %"class.base::RepeatingCallback.66"* %5 to i8**
  store i8* %28, i8** %34, align 8, !alias.scope !7
  call void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"* %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::RepeatingCallback.66"* nonnull %5) #9
  %35 = getelementptr inbounds %"class.base::RepeatingCallback.66", %"class.base::RepeatingCallback.66"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #9
  %36 = load i8, i8* %25, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %22, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback.66"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GetBlobUuidERKN2v820FunctionCallbackInfoINS0_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::WebBlob", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = icmp eq i32 %11, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %9, align 8
  br label %24

15:                                               ; preds = %1
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 1) #9
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %11) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %19, i8** %9, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 16, %"class.logging::CheckOpResult"* nonnull %3) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %14, %15, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %25 = bitcast %"class.blink::WebBlob"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.blink::WebBlob", %"class.blink::WebBlob"* %5, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = load i32, i32* %10, align 8
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 160
  %35 = inttoptr i64 %34 to %"class.v8::Value"*
  br label %40

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %38 = bitcast i64** %37 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %29, %36
  %41 = phi %"class.v8::Value"* [ %35, %29 ], [ %39, %36 ]
  call void @_ZN5blink7WebBlob11FromV8ValueEN2v85LocalINS1_5ValueEEE(%"class.blink::WebBlob"* nonnull sret %5, %"class.v8::Value"* %41) #9
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  %46 = bitcast i64* %45 to %"class.v8::Isolate"**
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #9
  %49 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  call void @_ZN5blink7WebBlob4UuidEv(%"class.blink::WebString"* nonnull sret %7, %"class.blink::WebBlob"* nonnull %5) #9
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.blink::WebString"* nonnull %7, i32 0) #9
  %50 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = select i1 %53, i8* %55, i8* %48
  %57 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %47, i8* %56, i32 0, i32 -1) #9
  %58 = icmp eq %"class.v8::String"* %57, null
  br i1 %58, label %59, label %61, !prof !12

59:                                               ; preds = %40
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  %60 = getelementptr inbounds i64, i64* %43, i64 2
  br label %63

61:                                               ; preds = %40
  %62 = bitcast %"class.v8::String"* %57 to i64*
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi i64* [ %62, %61 ], [ %60, %59 ]
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %44, align 8
  %66 = load i8, i8* %51, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %63, %68
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #9
  call void @_ZN5blink7WebBlob5ResetEv(%"class.blink::WebBlob"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17BlobNativeHandler22TakeBrowserProcessBlobERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.extensions::BlobNativeHandler"* nocapture readonly, %"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.v8::String::Utf8Value", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.v8::String::Utf8Value", align 8
  %13 = alloca %"class.blink::WebBlob", align 8
  %14 = alloca %"class.blink::WebString", align 8
  %15 = alloca %"class.blink::WebString", align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp eq i32 %19, 3
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %17, align 8
  br label %32

23:                                               ; preds = %2
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 3) #9
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %19) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* %24, i8* %25) #9
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %17, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 44, %"class.logging::CheckOpResult"* nonnull %4) #9
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %33 = load i32, i32* %18, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 160
  %41 = inttoptr i64 %40 to %"class.v8::Value"*
  br label %46

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %44 = bitcast i64** %43 to %"class.v8::Value"**
  %45 = load %"class.v8::Value"*, %"class.v8::Value"** %44, align 8
  br label %46

46:                                               ; preds = %35, %42
  %47 = phi %"class.v8::Value"* [ %41, %35 ], [ %45, %42 ]
  %48 = bitcast %"class.v8::Value"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 3
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %52, label %63

52:                                               ; preds = %46
  %53 = add i64 %49, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %49, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load i16, i16* %60, align 2
  %62 = icmp ult i16 %61, 64
  br i1 %62, label %67, label %63

63:                                               ; preds = %46, %52
  %64 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #9
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #9
  %66 = load i32, i32* %18, align 8
  br label %67

67:                                               ; preds = %52, %63
  %68 = phi i32 [ %33, %52 ], [ %66, %63 ]
  %69 = icmp sgt i32 %68, 1
  br i1 %69, label %77, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 1
  %81 = bitcast i64* %80 to %"class.v8::Value"*
  br label %82

82:                                               ; preds = %70, %77
  %83 = phi %"class.v8::Value"* [ %76, %70 ], [ %81, %77 ]
  %84 = bitcast %"class.v8::Value"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 3
  %87 = icmp eq i64 %86, 1
  br i1 %87, label %88, label %99

88:                                               ; preds = %82
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i64 %85, -4294967296
  %93 = zext i32 %91 to i64
  %94 = or i64 %92, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load i16, i16* %96, align 2
  %98 = icmp ult i16 %97, 64
  br i1 %98, label %103, label %99

99:                                               ; preds = %82, %88
  %100 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #9
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  %102 = load i32, i32* %18, align 8
  br label %103

103:                                              ; preds = %88, %99
  %104 = phi i32 [ %68, %88 ], [ %102, %99 ]
  %105 = icmp sgt i32 %104, 2
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 1
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 160
  %112 = inttoptr i64 %111 to %"class.v8::Value"*
  br label %118

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %115 = load i64*, i64** %114, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 2
  %117 = bitcast i64* %116 to %"class.v8::Value"*
  br label %118

118:                                              ; preds = %106, %113
  %119 = phi %"class.v8::Value"* [ %112, %106 ], [ %117, %113 ]
  %120 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %119) #9
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #9
  %123 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #9
  br label %124

124:                                              ; preds = %118, %121
  %125 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 1
  %128 = bitcast i64* %127 to %"class.v8::Isolate"**
  %129 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #9
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %134 = bitcast %"class.v8::String::Utf8Value"* %10 to i8*
  %135 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #9
  %136 = load i32, i32* %18, align 8
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %124
  %139 = load i64, i64* %127, align 8
  %140 = add i64 %139, 160
  %141 = inttoptr i64 %140 to %"class.v8::Value"*
  br label %146

142:                                              ; preds = %124
  %143 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %144 = bitcast i64** %143 to %"class.v8::Value"**
  %145 = load %"class.v8::Value"*, %"class.v8::Value"** %144, align 8
  br label %146

146:                                              ; preds = %138, %142
  %147 = phi %"class.v8::Value"* [ %141, %138 ], [ %145, %142 ]
  call void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"* nonnull %10, %"class.v8::Isolate"* %129, %"class.v8::Value"* %147) #9
  %148 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %10, i64 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = call i64 @strlen(i8* %149) #9
  %151 = icmp ugt i64 %150, -17
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %153) #11
  unreachable

154:                                              ; preds = %146
  %155 = icmp ult i64 %150, 23
  br i1 %155, label %161, label %156

156:                                              ; preds = %154
  %157 = add nuw i64 %150, 16
  %158 = and i64 %157, -16
  %159 = call i8* @_Znwm(i64 %158) #10
  store i8* %159, i8** %131, align 8
  %160 = or i64 %158, -9223372036854775808
  store i64 %160, i64* %133, align 8
  store i64 %150, i64* %132, align 8
  br label %166

161:                                              ; preds = %154
  %162 = trunc i64 %150 to i8
  %163 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  store i8 %162, i8* %164, align 1
  %165 = icmp eq i64 %150, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %161, %156
  %167 = phi i8* [ %159, %156 ], [ %130, %161 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %167, i8* align 1 %149, i64 %150, i1 false) #9
  br label %168

168:                                              ; preds = %161, %166
  %169 = phi i8* [ %130, %161 ], [ %167, %166 ]
  %170 = getelementptr inbounds i8, i8* %169, i64 %150
  store i8 0, i8* %170, align 1
  call void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #9
  %171 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #9
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %175 = bitcast %"class.v8::String::Utf8Value"* %12 to i8*
  %176 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #9
  %177 = load i32, i32* %18, align 8
  %178 = icmp sgt i32 %177, 1
  br i1 %178, label %185, label %179

179:                                              ; preds = %168
  %180 = load i64*, i64** %125, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 1
  %182 = load i64, i64* %181, align 8
  %183 = add i64 %182, 160
  %184 = inttoptr i64 %183 to %"class.v8::Value"*
  br label %190

185:                                              ; preds = %168
  %186 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %179, %185
  %191 = phi %"class.v8::Value"* [ %184, %179 ], [ %189, %185 ]
  call void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"* nonnull %12, %"class.v8::Isolate"* %129, %"class.v8::Value"* %191) #9
  %192 = getelementptr inbounds %"class.v8::String::Utf8Value", %"class.v8::String::Utf8Value"* %12, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = call i64 @strlen(i8* %193) #9
  %195 = icmp ugt i64 %194, -17
  br i1 %195, label %196, label %198

196:                                              ; preds = %190
  %197 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %197) #11
  unreachable

198:                                              ; preds = %190
  %199 = icmp ult i64 %194, 23
  br i1 %199, label %206, label %200

200:                                              ; preds = %198
  %201 = add nuw i64 %194, 16
  %202 = and i64 %201, -16
  %203 = call i8* @_Znwm(i64 %202) #10
  store i8* %203, i8** %172, align 8
  %204 = or i64 %202, -9223372036854775808
  store i64 %204, i64* %174, align 8
  store i64 %194, i64* %173, align 8
  %205 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %211

206:                                              ; preds = %198
  %207 = trunc i64 %194 to i8
  %208 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  store i8 %207, i8* %209, align 1
  %210 = icmp eq i64 %194, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %206, %200
  %212 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %208, %206 ], [ %205, %200 ]
  %213 = phi i8* [ %171, %206 ], [ %203, %200 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %213, i8* align 1 %193, i64 %194, i1 false) #9
  br label %214

214:                                              ; preds = %206, %211
  %215 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %208, %206 ], [ %212, %211 ]
  %216 = phi i8* [ %171, %206 ], [ %213, %211 ]
  %217 = getelementptr inbounds i8, i8* %216, i64 %194
  store i8 0, i8* %217, align 1
  call void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #9
  %218 = bitcast %"class.blink::WebBlob"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #9
  %219 = getelementptr inbounds %"class.blink::WebBlob", %"class.blink::WebBlob"* %13, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %219, align 8
  %220 = bitcast %"class.blink::WebString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #9
  %221 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 1, !noalias !13
  %224 = icmp slt i8 %223, 0
  %225 = load i8*, i8** %131, align 8, !noalias !13
  %226 = load i64, i64* %132, align 8, !noalias !13
  %227 = zext i8 %223 to i64
  %228 = select i1 %224, i8* %225, i8* %130
  %229 = select i1 %224, i64 %226, i64 %227
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %14, i8* %228, i64 %229) #9
  %230 = bitcast %"class.blink::WebString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #9
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1, !noalias !16
  %233 = icmp slt i8 %232, 0
  %234 = load i8*, i8** %172, align 8, !noalias !16
  %235 = load i64, i64* %173, align 8, !noalias !16
  %236 = zext i8 %232 to i64
  %237 = select i1 %233, i8* %234, i8* %171
  %238 = select i1 %233, i64 %235, i64 %236
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %15, i8* %237, i64 %238) #9
  %239 = load i32, i32* %18, align 8
  %240 = icmp sgt i32 %239, 2
  br i1 %240, label %247, label %241

241:                                              ; preds = %214
  %242 = load i64*, i64** %125, align 8
  %243 = getelementptr inbounds i64, i64* %242, i64 1
  %244 = load i64, i64* %243, align 8
  %245 = add i64 %244, 160
  %246 = inttoptr i64 %245 to %"class.v8::Value"*
  br label %252

247:                                              ; preds = %214
  %248 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %249 = load i64*, i64** %248, align 8
  %250 = getelementptr inbounds i64, i64* %249, i64 2
  %251 = bitcast i64* %250 to %"class.v8::Value"*
  br label %252

252:                                              ; preds = %241, %247
  %253 = phi %"class.v8::Value"* [ %246, %241 ], [ %251, %247 ]
  %254 = bitcast %"class.v8::Value"* %253 to %"class.v8::Int32"*
  %255 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %254) #9
  %256 = sext i32 %255 to i64
  call void @_ZN5blink7WebBlob14CreateFromUUIDERKNS_9WebStringES3_m(%"class.blink::WebBlob"* nonnull sret %13, %"class.blink::WebString"* nonnull dereferenceable(8) %14, %"class.blink::WebString"* nonnull dereferenceable(8) %15, i64 %256) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #9
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #9
  %257 = load i64*, i64** %125, align 8
  %258 = getelementptr inbounds i64, i64* %257, i64 3
  %259 = getelementptr inbounds %"class.extensions::BlobNativeHandler", %"class.extensions::BlobNativeHandler"* %0, i64 0, i32 0, i32 3
  %260 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %259, align 8
  %261 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %260, i64 0, i32 2, i32 0, i32 0
  %262 = load %"class.v8::Context"*, %"class.v8::Context"** %261, align 8
  %263 = icmp eq %"class.v8::Context"* %262, null
  br i1 %263, label %272, label %264

264:                                              ; preds = %252
  %265 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %260, i64 0, i32 15
  %266 = bitcast %"class.v8::Isolate"** %265 to %"class.v8::internal::Isolate"**
  %267 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %266, align 8
  %268 = bitcast %"class.v8::Context"* %262 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %267, i64 %269) #9
  %271 = bitcast i64* %270 to %"class.v8::Context"*
  br label %272

272:                                              ; preds = %252, %264
  %273 = phi %"class.v8::Context"* [ %271, %264 ], [ null, %252 ]
  %274 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %273) #9
  %275 = call %"class.v8::Value"* @_ZN5blink7WebBlob9ToV8ValueEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::WebBlob"* nonnull %13, %"class.v8::Object"* %274, %"class.v8::Isolate"* %129) #9
  %276 = icmp eq %"class.v8::Value"* %275, null
  %277 = bitcast %"class.v8::Value"* %275 to i64*
  %278 = getelementptr inbounds i64, i64* %257, i64 2
  %279 = select i1 %276, i64* %278, i64* %277, !prof !12
  %280 = load i64, i64* %279, align 8
  store i64 %280, i64* %258, align 8
  call void @_ZN5blink7WebBlob5ResetEv(%"class.blink::WebBlob"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #9
  %281 = load i8, i8* %231, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %272
  %284 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %284) #10
  br label %285

285:                                              ; preds = %272, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #9
  %286 = load i8, i8* %222, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %285
  %289 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %289) #10
  br label %290

290:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #9
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v86String9Utf8ValueC1EPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::String::Utf8Value"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v86String9Utf8ValueD1Ev(%"class.v8::String::Utf8Value"*) unnamed_addr #3

declare void @_ZN5blink7WebBlob14CreateFromUUIDERKNS_9WebStringES3_m(%"class.blink::WebBlob"* sret, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), i64) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare %"class.v8::Value"* @_ZN5blink7WebBlob9ToV8ValueEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::WebBlob"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions17BlobNativeHandlerD0Ev(%"class.extensions::BlobNativeHandler"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::BlobNativeHandler", %"class.extensions::BlobNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"* %2) #9
  %3 = bitcast %"class.extensions::BlobNativeHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare zeroext i1 @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare void @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare void @_ZN5blink7WebBlob11FromV8ValueEN2v85LocalINS1_5ValueEEE(%"class.blink::WebBlob"* sret, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink7WebBlob4UuidEv(%"class.blink::WebString"* sret, %"class.blink::WebBlob"*) local_unnamed_addr #1

declare void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*, i32) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink7WebBlob5ResetEv(%"class.blink::WebBlob"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJEEES9_E3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.v8::FunctionCallbackInfo"*)**
  %5 = load void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)** %4, align 8
  tail call void %5(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKN2v820FunctionCallbackInfoINS2_5ValueEEEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_(%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.extensions::BlobNativeHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)**
  %22 = load void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*, void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.extensions::BlobNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.extensions::BlobNativeHandler"* %13, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIPFvRKN2v820FunctionCallbackInfoINS1_5ValueEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIPFvRKN2v820FunctionCallbackInfoINS1_5ValueEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base13BindRepeatingIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!11 = distinct !{!11, !"_ZN4base13BindRepeatingIMN10extensions17BlobNativeHandlerEFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
