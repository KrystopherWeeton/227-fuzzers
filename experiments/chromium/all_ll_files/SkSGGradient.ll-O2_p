; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGGradient.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGGradient.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sksg::Gradient" = type <{ %"class.sksg::Shader", %"class.std::__1::vector.1", i32, [4 x i8] }>
%"class.sksg::Shader" = type { %"class.sksg::Node.base", %class.sk_sp }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"*, %"class.std::__1::__compressed_pair" }
%"struct.sksg::Gradient::ColorStop" = type { float, %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sksg::Gradient::ColorStop"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %struct.SkRGBA4f*, %struct.SkRGBA4f*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %struct.SkRGBA4f* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { float*, float*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sksg::LinearGradient" = type { %"class.sksg::Gradient.base", %struct.SkPoint, %struct.SkPoint, [4 x i8] }
%"class.sksg::Gradient.base" = type <{ %"class.sksg::Shader", %"class.std::__1::vector.1", i32 }>
%struct.SkPoint = type { float, float }
%class.sk_sp.17 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%"class.sksg::RadialGradient" = type { %"class.sksg::Gradient.base", %struct.SkPoint, %struct.SkPoint, float, float, [4 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.sksg::InvalidationController" = type opaque

$_ZN4sksg8GradientD2Ev = comdat any

$_ZN4sksg14LinearGradientD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg8GradientD0Ev = comdat any

$_ZN4sksg14RadialGradientD0Ev = comdat any

@_ZTVN4sksg14LinearGradientE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Gradient"*)* @_ZN4sksg8GradientD2Ev to i8*), i8* bitcast (void (%"class.sksg::LinearGradient"*)* @_ZN4sksg14LinearGradientD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Shader"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg6Shader12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%class.sk_sp*, %"class.sksg::Gradient"*)* @_ZN4sksg8Gradient18onRevalidateShaderEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.sksg::LinearGradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)* @_ZNK4sksg14LinearGradient12onMakeShaderERKNSt3__16vectorI8SkRGBA4fIL11SkAlphaType3EENS1_9allocatorIS5_EEEERKNS2_IfNS6_IfEEEE to i8*)] }, align 8
@_ZTVN4sksg8GradientE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Gradient"*)* @_ZN4sksg8GradientD2Ev to i8*), i8* bitcast (void (%"class.sksg::Gradient"*)* @_ZN4sksg8GradientD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Shader"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg6Shader12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%class.sk_sp*, %"class.sksg::Gradient"*)* @_ZN4sksg8Gradient18onRevalidateShaderEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4sksg14RadialGradientE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Gradient"*)* @_ZN4sksg8GradientD2Ev to i8*), i8* bitcast (void (%"class.sksg::RadialGradient"*)* @_ZN4sksg14RadialGradientD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Shader"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg6Shader12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%class.sk_sp*, %"class.sksg::Gradient"*)* @_ZN4sksg8Gradient18onRevalidateShaderEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.sksg::RadialGradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)* @_ZNK4sksg14RadialGradient12onMakeShaderERKNSt3__16vectorI8SkRGBA4fIL11SkAlphaType3EENS1_9allocatorIS5_EEEERKNS2_IfNS6_IfEEEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg8Gradient18onRevalidateShaderEv(%class.sk_sp* noalias sret, %"class.sksg::Gradient"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = alloca %"class.std::__1::vector.10", align 8
  %5 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"** %7, align 8
  %9 = icmp eq %"struct.sksg::Gradient::ColorStop"* %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %11, align 8
  br label %210

12:                                               ; preds = %2
  %13 = ptrtoint %"struct.sksg::Gradient::ColorStop"* %6 to i64
  %14 = ptrtoint %"struct.sksg::Gradient::ColorStop"* %8 to i64
  %15 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.std::__1::vector.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10
  %23 = sub i64 %14, %13
  %24 = sdiv exact i64 %23, 20
  %25 = bitcast %struct.SkRGBA4f** %18 to i64*
  %26 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %27 = icmp eq i64 %23, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %12
  %29 = icmp ugt i64 %24, 1152921504606846975
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  tail call void @abort() #11
  unreachable

31:                                               ; preds = %12
  %32 = bitcast float** %22 to i64*
  %33 = bitcast %"class.std::__1::vector.10"* %4 to i64*
  br label %53

34:                                               ; preds = %28
  %35 = bitcast %struct.SkRGBA4f** %17 to i64*
  %36 = shl nsw i64 %24, 4
  %37 = tail call i8* @_Znwm(i64 %36) #12
  %38 = bitcast i8* %37 to %struct.SkRGBA4f*
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %38, i64 %24
  %41 = ptrtoint %struct.SkRGBA4f* %40 to i64
  %42 = ptrtoint i8* %37 to i64
  store i64 %42, i64* %26, align 8
  store i64 %39, i64* %35, align 8
  store i64 %41, i64* %25, align 8
  %43 = bitcast float** %22 to i64*
  %44 = bitcast %"class.std::__1::vector.10"* %4 to i64*
  %45 = bitcast float** %21 to i64*
  %46 = shl nsw i64 %24, 2
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to float*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds float, float* %48, i64 %24
  %51 = ptrtoint float* %50 to i64
  %52 = ptrtoint i8* %47 to i64
  store i64 %52, i64* %44, align 8
  store i64 %49, i64* %45, align 8
  store i64 %51, i64* %43, align 8
  br label %53

53:                                               ; preds = %31, %34
  %54 = phi i64* [ %33, %31 ], [ %44, %34 ]
  %55 = phi i64* [ %32, %31 ], [ %43, %34 ]
  %56 = phi %struct.SkRGBA4f* [ null, %31 ], [ %38, %34 ]
  %57 = phi %struct.SkRGBA4f* [ null, %31 ], [ %40, %34 ]
  %58 = phi i64 [ 0, %31 ], [ %39, %34 ]
  %59 = phi i64 [ 0, %31 ], [ %49, %34 ]
  %60 = phi float* [ null, %31 ], [ %48, %34 ]
  %61 = bitcast %struct.SkRGBA4f** %17 to i64*
  %62 = bitcast float** %21 to i64*
  br label %82

63:                                               ; preds = %201
  %64 = bitcast %"class.sksg::Gradient"* %1 to void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)***
  %65 = load void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)**, void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)*, void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)** %65, i64 5
  %67 = load void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)*, void (%class.sk_sp*, %"class.sksg::Gradient"*, %"class.std::__1::vector.3"*, %"class.std::__1::vector.10"*)** %66, align 8
  call void %67(%class.sk_sp* sret %0, %"class.sksg::Gradient"* %1, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.10"* nonnull dereferenceable(24) %4) #10
  %68 = load float*, float** %20, align 8
  %69 = icmp eq float* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = ptrtoint float* %68 to i64
  %72 = bitcast float** %21 to i64*
  store i64 %71, i64* %72, align 8
  %73 = bitcast float* %68 to i8*
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %63, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  %75 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %16, align 8
  %76 = icmp eq %struct.SkRGBA4f* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = ptrtoint %struct.SkRGBA4f* %75 to i64
  %79 = bitcast %struct.SkRGBA4f** %17 to i64*
  store i64 %78, i64* %79, align 8
  %80 = bitcast %struct.SkRGBA4f* %75 to i8*
  call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br label %210

82:                                               ; preds = %206, %53
  %83 = phi i64 [ %59, %53 ], [ %202, %206 ]
  %84 = phi float* [ %60, %53 ], [ %203, %206 ]
  %85 = phi i64 [ %58, %53 ], [ %209, %206 ]
  %86 = phi %struct.SkRGBA4f* [ %57, %53 ], [ %208, %206 ]
  %87 = phi %struct.SkRGBA4f* [ %56, %53 ], [ %207, %206 ]
  %88 = phi float [ 0.000000e+00, %53 ], [ %150, %206 ]
  %89 = phi %"struct.sksg::Gradient::ColorStop"* [ %6, %53 ], [ %204, %206 ]
  %90 = getelementptr inbounds %"struct.sksg::Gradient::ColorStop", %"struct.sksg::Gradient::ColorStop"* %89, i64 0, i32 1
  %91 = icmp eq %struct.SkRGBA4f* %87, %86
  br i1 %91, label %97, label %92

92:                                               ; preds = %82
  %93 = bitcast %struct.SkRGBA4f* %87 to i8*
  %94 = bitcast %struct.SkRGBA4f* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 16, i1 false) #10
  %95 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %87, i64 1
  %96 = ptrtoint %struct.SkRGBA4f* %95 to i64
  store i64 %96, i64* %61, align 8
  br label %144

97:                                               ; preds = %82
  %98 = ptrtoint %struct.SkRGBA4f* %86 to i64
  %99 = load i64, i64* %26, align 8
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 4
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 1152921504606846975
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %105) #11
  unreachable

106:                                              ; preds = %97
  %107 = icmp ult i64 %101, 576460752303423487
  br i1 %107, label %108, label %116

108:                                              ; preds = %106
  %109 = ashr exact i64 %100, 3
  %110 = icmp ult i64 %109, %102
  %111 = select i1 %110, i64 %102, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = icmp ugt i64 %111, 1152921504606846975
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @abort() #11
  unreachable

116:                                              ; preds = %113, %106
  %117 = phi i64 [ %111, %113 ], [ 1152921504606846975, %106 ]
  %118 = shl i64 %117, 4
  %119 = tail call i8* @_Znwm(i64 %118) #12
  %120 = bitcast i8* %119 to %struct.SkRGBA4f*
  br label %121

121:                                              ; preds = %116, %108
  %122 = phi i64 [ %117, %116 ], [ 0, %108 ]
  %123 = phi %struct.SkRGBA4f* [ %120, %116 ], [ null, %108 ]
  %124 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %123, i64 %101
  %125 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %123, i64 %122
  %126 = ptrtoint %struct.SkRGBA4f* %125 to i64
  %127 = bitcast %struct.SkRGBA4f* %124 to i8*
  %128 = bitcast %struct.SkRGBA4f* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 16, i1 false) #10
  %129 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %124, i64 1
  %130 = ptrtoint %struct.SkRGBA4f* %129 to i64
  %131 = sub i64 %85, %99
  %132 = ashr exact i64 %131, 4
  %133 = sub nsw i64 0, %132
  %134 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %124, i64 %133
  %135 = ptrtoint %struct.SkRGBA4f* %134 to i64
  %136 = icmp sgt i64 %131, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %121
  %138 = bitcast %struct.SkRGBA4f* %134 to i8*
  %139 = inttoptr i64 %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 %131, i1 false) #10
  br label %140

140:                                              ; preds = %137, %121
  store i64 %135, i64* %26, align 8
  store i64 %130, i64* %61, align 8
  store i64 %126, i64* %25, align 8
  %141 = icmp eq i64 %99, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %92, %140, %142
  %145 = getelementptr inbounds %"struct.sksg::Gradient::ColorStop", %"struct.sksg::Gradient::ColorStop"* %89, i64 0, i32 0
  %146 = load float, float* %145, align 4
  %147 = fcmp ogt float %146, 1.000000e+00
  %148 = select i1 %147, float 1.000000e+00, float %146
  %149 = fcmp olt float %88, %148
  %150 = select i1 %149, float %148, float %88
  %151 = load float*, float** %22, align 8
  %152 = icmp eq float* %84, %151
  br i1 %152, label %156, label %153

153:                                              ; preds = %144
  store float %150, float* %84, align 4
  %154 = getelementptr inbounds float, float* %84, i64 1
  %155 = ptrtoint float* %154 to i64
  store i64 %155, i64* %62, align 8
  br label %201

156:                                              ; preds = %144
  %157 = ptrtoint float* %151 to i64
  %158 = load i64, i64* %54, align 8
  %159 = sub i64 %157, %158
  %160 = ashr exact i64 %159, 2
  %161 = add nsw i64 %160, 1
  %162 = icmp ugt i64 %161, 4611686018427387903
  br i1 %162, label %163, label %165

163:                                              ; preds = %156
  %164 = bitcast %"class.std::__1::vector.10"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %164) #11
  unreachable

165:                                              ; preds = %156
  %166 = icmp ult i64 %160, 2305843009213693951
  br i1 %166, label %167, label %175

167:                                              ; preds = %165
  %168 = ashr exact i64 %159, 1
  %169 = icmp ult i64 %168, %161
  %170 = select i1 %169, i64 %161, i64 %168
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %167
  %173 = icmp ugt i64 %170, 4611686018427387903
  br i1 %173, label %174, label %175

174:                                              ; preds = %172
  tail call void @abort() #11
  unreachable

175:                                              ; preds = %172, %165
  %176 = phi i64 [ %170, %172 ], [ 4611686018427387903, %165 ]
  %177 = shl i64 %176, 2
  %178 = tail call i8* @_Znwm(i64 %177) #12
  %179 = bitcast i8* %178 to float*
  br label %180

180:                                              ; preds = %175, %167
  %181 = phi i64 [ %176, %175 ], [ 0, %167 ]
  %182 = phi float* [ %179, %175 ], [ null, %167 ]
  %183 = getelementptr inbounds float, float* %182, i64 %160
  %184 = getelementptr inbounds float, float* %182, i64 %181
  %185 = ptrtoint float* %184 to i64
  store float %150, float* %183, align 4
  %186 = getelementptr inbounds float, float* %183, i64 1
  %187 = ptrtoint float* %186 to i64
  %188 = sub i64 %83, %158
  %189 = ashr exact i64 %188, 2
  %190 = sub nsw i64 0, %189
  %191 = getelementptr inbounds float, float* %183, i64 %190
  %192 = ptrtoint float* %191 to i64
  %193 = icmp sgt i64 %188, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %180
  %195 = bitcast float* %191 to i8*
  %196 = inttoptr i64 %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %195, i8* align 4 %196, i64 %188, i1 false) #10
  br label %197

197:                                              ; preds = %194, %180
  store i64 %192, i64* %54, align 8
  store i64 %187, i64* %62, align 8
  store i64 %185, i64* %55, align 8
  %198 = icmp eq i64 %158, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = inttoptr i64 %158 to i8*
  tail call void @_ZdlPv(i8* %200) #12
  br label %201

201:                                              ; preds = %153, %197, %199
  %202 = phi i64 [ %155, %153 ], [ %187, %197 ], [ %187, %199 ]
  %203 = phi float* [ %154, %153 ], [ %186, %197 ], [ %186, %199 ]
  %204 = getelementptr inbounds %"struct.sksg::Gradient::ColorStop", %"struct.sksg::Gradient::ColorStop"* %89, i64 1
  %205 = icmp eq %"struct.sksg::Gradient::ColorStop"* %204, %8
  br i1 %205, label %63, label %206

206:                                              ; preds = %201
  %207 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %17, align 8
  %208 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %18, align 8
  %209 = ptrtoint %struct.SkRGBA4f* %207 to i64
  br label %82

210:                                              ; preds = %81, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg14LinearGradient12onMakeShaderERKNSt3__16vectorI8SkRGBA4fIL11SkAlphaType3EENS1_9allocatorIS5_EEEERKNS2_IfNS6_IfEEEE(%class.sk_sp* noalias sret, %"class.sksg::LinearGradient"* nocapture readonly, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.10"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.17, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = bitcast <2 x i64>* %6 to %struct.SkPoint*
  %9 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %1, i64 0, i32 1
  %10 = bitcast %struct.SkPoint* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 4
  store <2 x i64> %11, <2 x i64>* %6, align 16
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  %13 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %3, i64 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %17 = bitcast %struct.SkRGBA4f** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %struct.SkRGBA4f* %13 to i64
  %20 = sub i64 %18, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %1, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %class.sk_sp.17* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %class.sk_sp.17* %5 to i64*
  store i64 0, i64* %26, align 8, !noalias !2
  call void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret %0, %struct.SkPoint* nonnull %8, %struct.SkRGBA4f* %13, %class.sk_sp.17* nonnull %5, float* %15, i32 %22, i32 %24, i32 0, %class.SkMatrix* null) #10
  %27 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %5, i64 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8, !noalias !2
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %30, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg14RadialGradient12onMakeShaderERKNSt3__16vectorI8SkRGBA4fIL11SkAlphaType3EENS1_9allocatorIS5_EEEERKNS2_IfNS6_IfEEEE(%class.sk_sp* noalias sret, %"class.sksg::RadialGradient"*, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.10"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.17, align 8
  %6 = alloca %class.sk_sp.17, align 8
  %7 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 3
  %8 = load float, float* %7, align 4
  %9 = fcmp ugt float %8, 0.000000e+00
  br i1 %9, label %50, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %13, %15
  br i1 %16, label %17, label %50

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 2, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %19, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 4
  %25 = load float, float* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  %27 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %3, i64 0, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %31 = bitcast %struct.SkRGBA4f** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = ptrtoint %struct.SkRGBA4f* %27 to i64
  %34 = sub i64 %32, %33
  %35 = lshr exact i64 %34, 4
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %class.sk_sp.17* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %class.sk_sp.17* %5 to i64*
  store i64 0, i64* %40, align 8, !noalias !5
  call void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret %0, %struct.SkPoint* dereferenceable(8) %11, float %25, %struct.SkRGBA4f* %27, %class.sk_sp.17* nonnull %5, float* %29, i32 %36, i32 %38, i32 0, %class.SkMatrix* null) #10
  %41 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %5, i64 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8, !noalias !5
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %79, label %44

44:                                               ; preds = %23
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %79

48:                                               ; preds = %44
  %49 = bitcast %class.SkColorSpace* %42 to i8*
  call void @_ZdlPv(i8* %49) #12
  br label %79

50:                                               ; preds = %10, %4, %17
  %51 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 2
  %53 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 4
  %54 = load float, float* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  %56 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %3, i64 0, i32 0, i32 0
  %58 = load float*, float** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %60 = bitcast %struct.SkRGBA4f** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = ptrtoint %struct.SkRGBA4f* %56 to i64
  %63 = sub i64 %61, %62
  %64 = lshr exact i64 %63, 4
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %1, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = bitcast %class.sk_sp.17* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = bitcast %class.sk_sp.17* %6 to i64*
  store i64 0, i64* %69, align 8, !noalias !8
  call void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret %0, %struct.SkPoint* dereferenceable(8) %51, float %8, %struct.SkPoint* dereferenceable(8) %52, float %54, %struct.SkRGBA4f* %56, %class.sk_sp.17* nonnull %6, float* %58, i32 %65, i32 %67, i32 0, %class.SkMatrix* null) #10
  %70 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %6, i64 0, i32 0
  %71 = load %class.SkColorSpace*, %class.SkColorSpace** %70, align 8, !noalias !8
  %72 = icmp eq %class.SkColorSpace* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %50
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorSpace* %71 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %23, %44, %48, %50, %73, %77
  %80 = phi i8* [ %68, %77 ], [ %68, %73 ], [ %68, %50 ], [ %39, %48 ], [ %39, %44 ], [ %39, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg8GradientD2Ev(%"class.sksg::Gradient"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg8GradientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"** %3, align 8
  %5 = icmp eq %"struct.sksg::Gradient::ColorStop"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.sksg::Gradient::ColorStop"* %4 to i64
  %8 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.sksg::Gradient::ColorStop"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.sksg::Gradient::ColorStop"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sksg::Gradient", %"class.sksg::Gradient"* %0, i64 0, i32 0
  tail call void @_ZN4sksg6ShaderD2Ev(%"class.sksg::Shader"* %12) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg14LinearGradientD0Ev(%"class.sksg::LinearGradient"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg8GradientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"** %3, align 8
  %5 = icmp eq %"struct.sksg::Gradient::ColorStop"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.sksg::Gradient::ColorStop"* %4 to i64
  %8 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.sksg::Gradient::ColorStop"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.sksg::Gradient::ColorStop"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sksg::LinearGradient", %"class.sksg::LinearGradient"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4sksg6ShaderD2Ev(%"class.sksg::Shader"* %12) #10
  %13 = bitcast %"class.sksg::LinearGradient"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN4sksg6Shader12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Shader"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg8GradientD0Ev(%"class.sksg::Gradient"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg14RadialGradientD0Ev(%"class.sksg::RadialGradient"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg8GradientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"struct.sksg::Gradient::ColorStop"*, %"struct.sksg::Gradient::ColorStop"** %3, align 8
  %5 = icmp eq %"struct.sksg::Gradient::ColorStop"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.sksg::Gradient::ColorStop"* %4 to i64
  %8 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.sksg::Gradient::ColorStop"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.sksg::Gradient::ColorStop"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sksg::RadialGradient", %"class.sksg::RadialGradient"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4sksg6ShaderD2Ev(%"class.sksg::Shader"* %12) #10
  %13 = bitcast %"class.sksg::RadialGradient"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  ret void
}

declare void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint*, %struct.SkRGBA4f*, %class.sk_sp.17*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

declare void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint* dereferenceable(8), float, %struct.SkRGBA4f*, %class.sk_sp.17*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

declare void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint* dereferenceable(8), float, %struct.SkPoint* dereferenceable(8), float, %struct.SkRGBA4f*, %class.sk_sp.17*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4sksg6ShaderD2Ev(%"class.sksg::Shader"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16SkGradientShader10MakeLinearEPK7SkPointPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode: argument 0"}
!4 = distinct !{!4, !"_ZN16SkGradientShader10MakeLinearEPK7SkPointPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN16SkGradientShader10MakeRadialERK7SkPointfPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode: argument 0"}
!7 = distinct !{!7, !"_ZN16SkGradientShader10MakeRadialERK7SkPointfPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode: argument 0"}
!10 = distinct !{!10, !"_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileMode"}
