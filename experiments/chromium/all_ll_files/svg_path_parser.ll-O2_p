; ModuleID = '../../third_party/blink/renderer/core/svg/svg_path_parser.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_path_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGPathNormalizer" = type <{ %"class.blink::SVGPathConsumer"*, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i32, [4 x i8] }>
%"class.blink::SVGPathConsumer" = type { i32 (...)** }
%"class.blink::FloatPoint" = type { float, float }
%"struct.blink::PathSegmentData" = type <{ i32, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, i8, [2 x i8] }>
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::SVGPathAbsolutizer" = type { %"class.blink::SVGPathConsumer"*, %"class.blink::FloatPoint", %"class.blink::FloatPoint" }

@switch.table._ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE = private unnamed_addr constant [14 x i32] [i32 6, i32 7, i32 8, i32 9, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 17, i32 18, i32 19], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"*, %"struct.blink::PathSegmentData"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::PathSegmentData", align 4
  %4 = bitcast %"struct.blink::PathSegmentData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 3, i32 1
  %15 = bitcast %"struct.blink::PathSegmentData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %15, i64 32, i1 false)
  %16 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %160 [
    i32 9, label %26
    i32 7, label %36
    i32 17, label %21
    i32 3, label %52
    i32 5, label %52
    i32 13, label %52
    i32 15, label %52
    i32 19, label %52
    i32 11, label %52
    i32 12, label %61
    i32 14, label %66
    i32 1, label %71
    i32 2, label %76
    i32 4, label %163
    i32 16, label %81
    i32 6, label %99
    i32 18, label %104
    i32 8, label %18
    i32 10, label %156
  ]

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  br label %125

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 1
  %25 = load float, float* %24, align 4
  br label %45

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = shufflevector <2 x float> %29, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %31 = bitcast %"class.blink::FloatPoint"* %6 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 4
  %33 = fadd <4 x float> %30, %32
  %34 = bitcast %"class.blink::FloatPoint"* %6 to <4 x float>*
  store <4 x float> %33, <4 x float>* %34, align 4
  %35 = extractelement <2 x float> %29, i32 0
  br label %125

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 1
  %40 = load float, float* %39, align 4
  %41 = load float, float* %10, align 4
  %42 = fadd float %38, %41
  store float %42, float* %10, align 4
  %43 = load float, float* %11, align 4
  %44 = fadd float %40, %43
  store float %44, float* %11, align 4
  br label %45

45:                                               ; preds = %21, %36
  %46 = phi float [ %25, %21 ], [ %40, %36 ]
  %47 = phi float [ %23, %21 ], [ %38, %36 ]
  %48 = load float, float* %13, align 4
  %49 = fadd float %47, %48
  store float %49, float* %13, align 4
  %50 = load float, float* %14, align 4
  %51 = fadd float %46, %50
  store float %51, float* %14, align 4
  br label %52

52:                                               ; preds = %2, %2, %2, %2, %2, %2, %45
  %53 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 1
  %56 = load float, float* %55, align 4
  %57 = load float, float* %7, align 4
  %58 = fadd float %54, %57
  store float %58, float* %7, align 4
  %59 = load float, float* %8, align 4
  %60 = fadd float %56, %59
  store float %60, float* %8, align 4
  switch i32 %17, label %160 [
    i32 3, label %76
    i32 10, label %156
    i32 5, label %163
    i32 4, label %163
    i32 13, label %163
    i32 12, label %163
    i32 15, label %163
    i32 14, label %163
    i32 11, label %156
    i32 17, label %81
    i32 16, label %81
    i32 7, label %99
    i32 6, label %99
    i32 19, label %104
    i32 18, label %104
    i32 9, label %125
    i32 8, label %125
  ]

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 1
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = bitcast float* %8 to i32*
  store i32 %64, i32* %65, align 4
  br label %163

66:                                               ; preds = %2
  %67 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = bitcast %"class.blink::FloatPoint"* %6 to i32*
  store i32 %69, i32* %70, align 4
  br label %163

71:                                               ; preds = %2
  %72 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 3
  %73 = bitcast %"class.blink::FloatPoint"* %72 to i64*
  %74 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 4
  br label %163

76:                                               ; preds = %2, %52
  %77 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 3
  %78 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %79 = bitcast %"class.blink::FloatPoint"* %77 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 8
  br label %163

81:                                               ; preds = %2, %52, %52
  %82 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %84 [
    i32 16, label %89
    i32 7, label %89
    i32 6, label %89
    i32 17, label %89
  ]

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2
  %86 = bitcast %"class.blink::FloatPoint"* %85 to i64*
  %87 = bitcast %"class.blink::FloatPoint"* %9 to i64*
  %88 = load i64, i64* %86, align 4
  store i64 %88, i64* %87, align 4
  br label %99

89:                                               ; preds = %81, %81, %81, %81
  %90 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %91 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 1, i32 0
  %92 = bitcast float* %90 to <2 x float>*
  %93 = load <2 x float>, <2 x float>* %92, align 4
  %94 = fmul <2 x float> %93, <float 2.000000e+00, float 2.000000e+00>
  %95 = bitcast float* %91 to <2 x float>*
  %96 = load <2 x float>, <2 x float>* %95, align 4
  %97 = fsub <2 x float> %94, %96
  %98 = bitcast %"class.blink::FloatPoint"* %9 to <2 x float>*
  store <2 x float> %97, <2 x float>* %98, align 4
  br label %99

99:                                               ; preds = %2, %84, %89, %52, %52
  %100 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 1
  %101 = bitcast %"class.blink::FloatPoint"* %12 to i64*
  %102 = bitcast %"class.blink::FloatPoint"* %100 to i64*
  %103 = load i64, i64* %101, align 4
  store i64 %103, i64* %102, align 8
  br label %163

104:                                              ; preds = %2, %52, %52
  %105 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 4
  %106 = load i32, i32* %105, align 8
  switch i32 %106, label %107 [
    i32 18, label %114
    i32 9, label %114
    i32 8, label %114
    i32 19, label %114
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2
  %109 = bitcast %"class.blink::FloatPoint"* %108 to i64*
  %110 = bitcast %"class.blink::FloatPoint"* %9 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = trunc i64 %111 to i32
  %113 = bitcast i32 %112 to float
  br label %125

114:                                              ; preds = %104, %104, %104, %104
  %115 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 0
  %116 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 1, i32 0
  %117 = bitcast float* %115 to <2 x float>*
  %118 = load <2 x float>, <2 x float>* %117, align 4
  %119 = fmul <2 x float> %118, <float 2.000000e+00, float 2.000000e+00>
  %120 = bitcast float* %116 to <2 x float>*
  %121 = load <2 x float>, <2 x float>* %120, align 4
  %122 = fsub <2 x float> %119, %121
  %123 = bitcast %"class.blink::FloatPoint"* %9 to <2 x float>*
  store <2 x float> %122, <2 x float>* %123, align 4
  %124 = extractelement <2 x float> %118, i32 0
  br label %125

125:                                              ; preds = %18, %26, %107, %114, %52, %52
  %126 = phi float [ %20, %18 ], [ %35, %26 ], [ %113, %107 ], [ %124, %114 ], [ %54, %52 ], [ %54, %52 ]
  %127 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 1
  %128 = bitcast %"class.blink::FloatPoint"* %9 to i64*
  %129 = bitcast %"class.blink::FloatPoint"* %127 to i64*
  %130 = load i64, i64* %128, align 4
  store i64 %130, i64* %129, align 8
  %131 = trunc i64 %130 to i32
  %132 = bitcast i32 %131 to float
  %133 = fmul float %132, 2.000000e+00
  %134 = fadd float %126, %133
  %135 = fmul float %134, 0x3FD5555560000000
  %136 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2, i32 1
  %137 = load float, float* %136, align 4
  %138 = lshr i64 %130, 32
  %139 = trunc i64 %138 to i32
  %140 = bitcast i32 %139 to float
  %141 = fmul float %140, 2.000000e+00
  %142 = fadd float %137, %141
  %143 = fmul float %142, 0x3FD5555560000000
  %144 = insertelement <2 x float> undef, float %135, i32 0
  %145 = insertelement <2 x float> %144, float %143, i32 1
  %146 = bitcast %"class.blink::FloatPoint"* %9 to <2 x float>*
  store <2 x float> %145, <2 x float>* %146, align 4
  %147 = load float, float* %7, align 4
  %148 = fadd float %133, %147
  %149 = fmul float %148, 0x3FD5555560000000
  %150 = load float, float* %8, align 4
  %151 = fadd float %141, %150
  %152 = fmul float %151, 0x3FD5555560000000
  %153 = insertelement <2 x float> undef, float %149, i32 0
  %154 = insertelement <2 x float> %153, float %152, i32 1
  %155 = bitcast %"class.blink::FloatPoint"* %12 to <2 x float>*
  store <2 x float> %154, <2 x float>* %155, align 4
  br label %163

156:                                              ; preds = %52, %52, %2
  %157 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2
  %158 = call zeroext i1 @_ZN5blink17SVGPathNormalizer19DecomposeArcToCubicERKNS_10FloatPointERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* %0, %"class.blink::FloatPoint"* dereferenceable(8) %157, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %3)
  br i1 %158, label %159, label %163

159:                                              ; preds = %156
  store i32 10, i32* %5, align 4
  br label %172

160:                                              ; preds = %2, %52
  %161 = load i32, i32* %5, align 4
  %162 = icmp eq i32 %161, 10
  br i1 %162, label %172, label %165

163:                                              ; preds = %156, %52, %52, %52, %52, %52, %52, %66, %61, %2, %125, %99, %71, %76
  %164 = phi i32 [ 2, %76 ], [ 1, %71 ], [ 6, %99 ], [ 6, %125 ], [ %17, %2 ], [ 4, %61 ], [ 4, %66 ], [ 4, %52 ], [ 4, %52 ], [ 4, %52 ], [ 4, %52 ], [ 4, %52 ], [ 4, %52 ], [ 4, %156 ]
  store i32 %164, i32* %5, align 4
  br label %165

165:                                              ; preds = %163, %160
  %166 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 0
  %167 = load %"class.blink::SVGPathConsumer"*, %"class.blink::SVGPathConsumer"** %166, align 8
  %168 = bitcast %"class.blink::SVGPathConsumer"* %167 to void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)***
  %169 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)**, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %169, i64 2
  %171 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %170, align 8
  call void %171(%"class.blink::SVGPathConsumer"* %167, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %3) #6
  br label %172

172:                                              ; preds = %159, %160, %165
  %173 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 2
  %174 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %175 = bitcast %"class.blink::FloatPoint"* %173 to i64*
  %176 = load i64, i64* %174, align 4
  store i64 %176, i64* %175, align 8
  %177 = load i32, i32* %16, align 4
  %178 = add i32 %177, -6
  %179 = icmp ult i32 %178, 14
  br i1 %179, label %183, label %180

180:                                              ; preds = %183, %172
  %181 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 1
  %182 = bitcast %"class.blink::FloatPoint"* %181 to i64*
  store i64 %176, i64* %182, align 8
  br label %191

183:                                              ; preds = %172
  %184 = trunc i32 %178 to i16
  %185 = lshr i16 15375, %184
  %186 = and i16 %185, 1
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %180, label %188

188:                                              ; preds = %183
  %189 = sext i32 %178 to i64
  %190 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE, i64 0, i64 %189
  br label %191

191:                                              ; preds = %188, %180
  %192 = phi i32* [ %16, %180 ], [ %190, %188 ]
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 4
  store i32 %193, i32* %194, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SVGPathNormalizer19DecomposeArcToCubicERKNS_10FloatPointERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* nocapture readonly, %"class.blink::FloatPoint"* dereferenceable(8), %"struct.blink::PathSegmentData"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca %"class.blink::FloatPoint", align 4
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %10 = alloca %"class.blink::FloatPoint", align 4
  %11 = alloca %"class.blink::FloatPoint", align 4
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::FloatPoint"*
  %14 = alloca %"struct.blink::PathSegmentData", align 4
  %15 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 2, i32 0
  %16 = bitcast float* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %17)
  %19 = extractelement <2 x float> %17, i32 0
  %20 = fcmp une float %19, 0.000000e+00
  %21 = extractelement <2 x float> %17, i32 1
  %22 = fcmp une float %21, 0.000000e+00
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %227

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %25, i64 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %27, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 1, i32 1
  %35 = load float, float* %34, align 4
  br label %42

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %38, %40
  br i1 %41, label %227, label %42

42:                                               ; preds = %31, %36
  %43 = phi float [ %35, %31 ], [ %38, %36 ]
  %44 = phi float [ %33, %31 ], [ %40, %36 ]
  %45 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 3, i32 0
  %46 = load float, float* %45, align 4
  %47 = fsub float %29, %27
  %48 = fsub float %44, %43
  %49 = fmul float %47, 5.000000e-01
  %50 = fmul float %48, 5.000000e-01
  %51 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #6
  %52 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #6
  %53 = fsub float -0.000000e+00, %46
  %54 = fpext float %53 to double
  %55 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* nonnull %4, double %54) #6
  %56 = bitcast %"class.blink::FloatPoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  %57 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 0
  store float %49, float* %57, align 4
  %58 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  store float %50, float* %58, align 4
  %59 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  %60 = fmul <2 x float> %17, %17
  %61 = fmul <2 x float> %59, %59
  %62 = fdiv <2 x float> %61, %60
  %63 = extractelement <2 x float> %62, i32 0
  %64 = extractelement <2 x float> %62, i32 1
  %65 = fadd float %63, %64
  %66 = fcmp ogt float %65, 1.000000e+00
  br i1 %66, label %67, label %73

67:                                               ; preds = %42
  %68 = call float @sqrtf(float %65) #6
  %69 = call float @sqrtf(float %65) #6
  %70 = insertelement <2 x float> undef, float %68, i32 0
  %71 = insertelement <2 x float> %70, float %69, i32 1
  %72 = fmul <2 x float> %18, %71
  br label %73

73:                                               ; preds = %67, %42
  %74 = phi <2 x float> [ %72, %67 ], [ %18, %42 ]
  call void @_ZN5blink15AffineTransform12MakeIdentityEv(%"class.blink::AffineTransform"* nonnull %4) #6
  %75 = extractelement <2 x float> %74, i32 0
  %76 = fdiv float 1.000000e+00, %75
  %77 = fpext float %76 to double
  %78 = extractelement <2 x float> %74, i32 1
  %79 = fdiv float 1.000000e+00, %78
  %80 = fpext float %79 to double
  %81 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"* nonnull %4, double %77, double %80) #6
  %82 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* nonnull %4, double %54) #6
  %83 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #6
  %84 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %85 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %7, i64 0, i32 1
  %86 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* dereferenceable(8) %1) #6
  store <2 x float> %86, <2 x float>* %6, align 8
  %87 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #6
  %88 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %89 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 1
  %90 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* dereferenceable(8) %25) #6
  store <2 x float> %90, <2 x float>* %8, align 8
  %91 = extractelement <2 x float> %90, i32 0
  %92 = extractelement <2 x float> %86, i32 0
  %93 = fsub float %91, %92
  %94 = extractelement <2 x float> %90, i32 1
  %95 = extractelement <2 x float> %86, i32 1
  %96 = fsub float %94, %95
  %97 = fmul float %93, %93
  %98 = fmul float %96, %96
  %99 = fadd float %97, %98
  %100 = fdiv float 1.000000e+00, %99
  %101 = fadd float %100, -2.500000e-01
  %102 = fcmp olt float %101, 0.000000e+00
  %103 = select i1 %102, float 0.000000e+00, float %101
  %104 = call float @sqrtf(float %103) #6
  %105 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 4
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %2, i64 0, i32 5
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = icmp eq i8 %106, %108
  %110 = fsub float -0.000000e+00, %104
  %111 = select i1 %109, float %110, float %104
  %112 = fmul float %93, %111
  %113 = fmul float %96, %111
  %114 = fadd float %92, %91
  %115 = fadd float %95, %94
  %116 = fmul float %114, 5.000000e-01
  %117 = fmul float %115, 5.000000e-01
  %118 = fsub float %116, %113
  %119 = fadd float %112, %117
  %120 = bitcast %"class.blink::FloatPoint"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #6
  %121 = fsub float %92, %118
  %122 = fsub float %95, %119
  %123 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 0
  store float %121, float* %123, align 4
  %124 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 1
  store float %122, float* %124, align 4
  %125 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #6
  %126 = bitcast %"class.blink::FloatPoint"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #6
  %127 = fsub float %91, %118
  %128 = fsub float %94, %119
  %129 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %11, i64 0, i32 0
  store float %127, float* %129, align 4
  %130 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %11, i64 0, i32 1
  store float %128, float* %130, align 4
  %131 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #6
  %132 = fsub float %131, %125
  %133 = fcmp olt float %132, 0.000000e+00
  br i1 %133, label %134, label %139

134:                                              ; preds = %73
  %135 = load i8, i8* %105, align 4, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = fadd float %132, 0x401921FB60000000
  br label %146

139:                                              ; preds = %134, %73
  %140 = fcmp ogt float %132, 0.000000e+00
  br i1 %140, label %141, label %146

141:                                              ; preds = %139
  %142 = load i8, i8* %105, align 4, !range !2
  %143 = icmp eq i8 %142, 0
  %144 = fadd float %132, 0xC01921FB60000000
  %145 = select i1 %143, float %144, float %132
  br label %146

146:                                              ; preds = %141, %139, %137
  %147 = phi float [ %138, %137 ], [ %132, %139 ], [ %145, %141 ]
  call void @_ZN5blink15AffineTransform12MakeIdentityEv(%"class.blink::AffineTransform"* nonnull %4) #6
  %148 = fpext float %46 to double
  %149 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"* nonnull %4, double %148) #6
  %150 = fpext float %75 to double
  %151 = fpext float %78 to double
  %152 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"* nonnull %4, double %150, double %151) #6
  %153 = fdiv float %147, 0x3FF9261400000000
  %154 = call float @llvm.fabs.f32(float %153)
  %155 = call float @llvm.ceil.f32(float %154)
  %156 = fptosi float %155 to i32
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %225

158:                                              ; preds = %146
  %159 = sitofp i32 %156 to float
  %160 = bitcast i64* %12 to i8*
  %161 = bitcast i64* %12 to float*
  %162 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 1
  %163 = bitcast %"struct.blink::PathSegmentData"* %14 to i8*
  %164 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 0
  %165 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 4
  %166 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 2
  %167 = bitcast %"class.blink::FloatPoint"* %166 to <2 x float>*
  %168 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 3
  %169 = bitcast %"class.blink::FloatPoint"* %168 to <2 x float>*
  %170 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 1
  %171 = bitcast %"class.blink::FloatPoint"* %170 to <2 x float>*
  %172 = getelementptr inbounds %"class.blink::SVGPathNormalizer", %"class.blink::SVGPathNormalizer"* %0, i64 0, i32 0
  %173 = bitcast i8* %165 to i32*
  %174 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %14, i64 0, i32 1
  %175 = bitcast %"class.blink::FloatPoint"* %174 to i8*
  br label %176

176:                                              ; preds = %193, %158
  %177 = phi i32 [ 0, %158 ], [ %182, %193 ]
  %178 = sitofp i32 %177 to float
  %179 = fmul float %147, %178
  %180 = fdiv float %179, %159
  %181 = fadd float %125, %180
  %182 = add nuw nsw i32 %177, 1
  %183 = sitofp i32 %182 to float
  %184 = fmul float %147, %183
  %185 = fdiv float %184, %159
  %186 = fadd float %125, %185
  %187 = fsub float %186, %181
  %188 = fmul float %187, 2.500000e-01
  %189 = call float @tanf(float %188) #6
  %190 = fmul float %189, 0x3FF5555560000000
  %191 = call float @llvm.fabs.f32(float %190) #7
  %192 = fcmp ueq float %191, 0x7FF0000000000000
  br i1 %192, label %225, label %193

193:                                              ; preds = %176
  %194 = call float @sinf(float %181) #6
  %195 = call float @cosf(float %181) #6
  %196 = call float @sinf(float %186) #6
  %197 = call float @cosf(float %186) #6
  %198 = fmul float %190, %194
  %199 = fsub float %195, %198
  %200 = fmul float %190, %195
  %201 = fadd float %194, %200
  %202 = fadd float %118, %199
  store float %202, float* %84, align 8
  %203 = fadd float %119, %201
  store float %203, float* %85, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #6
  %204 = fadd float %118, %197
  store float %204, float* %161, align 8
  %205 = fadd float %119, %196
  store float %205, float* %162, align 4
  %206 = load i64, i64* %12, align 8
  %207 = fmul float %190, %196
  %208 = fmul float %190, %197
  %209 = trunc i64 %206 to i32
  %210 = bitcast i32 %209 to float
  %211 = fadd float %207, %210
  store float %211, float* %88, align 8
  %212 = lshr i64 %206, 32
  %213 = trunc i64 %212 to i32
  %214 = bitcast i32 %213 to float
  %215 = fsub float %214, %208
  store float %215, float* %89, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #6
  store i32 -1431655766, i32* %173, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %175, i8 0, i64 26, i1 false) #6
  store i32 6, i32* %164, align 4
  %216 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %7) #6
  store <2 x float> %216, <2 x float>* %167, align 4
  %217 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9) #6
  store <2 x float> %217, <2 x float>* %169, align 4
  %218 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %13) #6
  store <2 x float> %218, <2 x float>* %171, align 4
  %219 = load %"class.blink::SVGPathConsumer"*, %"class.blink::SVGPathConsumer"** %172, align 8
  %220 = bitcast %"class.blink::SVGPathConsumer"* %219 to void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)***
  %221 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)**, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %221, i64 2
  %223 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %222, align 8
  call void %223(%"class.blink::SVGPathConsumer"* %219, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #6
  %224 = icmp eq i32 %182, %156
  br i1 %224, label %225, label %176

225:                                              ; preds = %176, %193, %146
  %226 = phi i1 [ true, %146 ], [ false, %176 ], [ true, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #6
  br label %227

227:                                              ; preds = %36, %3, %225
  %228 = phi i1 [ %226, %225 ], [ false, %3 ], [ false, %36 ]
  ret i1 %228
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #3

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform6RotateEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #4

declare void @_ZN5blink15AffineTransform12MakeIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #3

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #3

declare float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #2

; Function Attrs: nofree nounwind
declare float @tanf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18SVGPathAbsolutizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathAbsolutizer"* nocapture, %"struct.blink::PathSegmentData"* nocapture readonly dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::PathSegmentData", align 4
  %4 = bitcast %"struct.blink::PathSegmentData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %3, i64 0, i32 2, i32 0
  %10 = bitcast %"struct.blink::PathSegmentData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %10, i64 32, i1 false)
  %11 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 2
  %14 = and i32 %12, 1
  %15 = icmp eq i32 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %36, label %17

17:                                               ; preds = %2
  %18 = and i32 %12, -2
  store i32 %18, i32* %5, align 4
  %19 = icmp eq i32 %12, 11
  %20 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 2, i32 0
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  br i1 %19, label %29, label %23

23:                                               ; preds = %17
  %24 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %25 = bitcast float* %9 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4
  %27 = fadd <4 x float> %24, %26
  %28 = bitcast float* %9 to <4 x float>*
  store <4 x float> %27, <4 x float>* %28, align 4
  br label %29

29:                                               ; preds = %17, %23
  %30 = load float, float* %7, align 4
  %31 = extractelement <2 x float> %22, i32 0
  %32 = fadd float %31, %30
  store float %32, float* %7, align 4
  %33 = load float, float* %8, align 4
  %34 = extractelement <2 x float> %22, i32 1
  %35 = fadd float %34, %33
  store float %35, float* %8, align 4
  br label %36

36:                                               ; preds = %29, %2
  %37 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 0
  %38 = load %"class.blink::SVGPathConsumer"*, %"class.blink::SVGPathConsumer"** %37, align 8
  %39 = bitcast %"class.blink::SVGPathConsumer"* %38 to void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)***
  %40 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)**, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %40, i64 2
  %42 = load void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)*, void (%"class.blink::SVGPathConsumer"*, %"struct.blink::PathSegmentData"*)** %41, align 8
  call void %42(%"class.blink::SVGPathConsumer"* %38, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %3) #6
  %43 = load i32, i32* %5, align 4
  switch i32 %43, label %60 [
    i32 1, label %44
    i32 12, label %50
    i32 14, label %55
  ]

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 2
  %47 = bitcast %"class.blink::FloatPoint"* %45 to i64*
  %48 = bitcast %"class.blink::FloatPoint"* %46 to i64*
  %49 = load i64, i64* %47, align 4
  store i64 %49, i64* %48, align 8
  br label %69

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 2
  %52 = bitcast %"class.blink::FloatPoint"* %6 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.blink::FloatPoint"* %51 to i32*
  store i32 %53, i32* %54, align 4
  br label %69

55:                                               ; preds = %36
  %56 = bitcast float* %8 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 2, i32 1
  %59 = bitcast float* %58 to i32*
  store i32 %57, i32* %59, align 4
  br label %69

60:                                               ; preds = %36
  %61 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 2
  %62 = bitcast %"class.blink::FloatPoint"* %6 to i64*
  %63 = bitcast %"class.blink::FloatPoint"* %61 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 8
  %65 = icmp eq i32 %43, 2
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::SVGPathAbsolutizer", %"class.blink::SVGPathAbsolutizer"* %0, i64 0, i32 1
  %68 = bitcast %"class.blink::FloatPoint"* %67 to i64*
  store i64 %64, i64* %68, align 8
  br label %69

69:                                               ; preds = %50, %60, %66, %55, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
