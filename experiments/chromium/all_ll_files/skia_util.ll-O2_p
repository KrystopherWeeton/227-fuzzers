; ModuleID = '../../ui/gfx/skia_util.cc'
source_filename = "../../ui/gfx/skia_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%struct.SkRect = type { float, float, float, float }
%struct.SkSize = type { float, float }
%struct.SkISize = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%struct.SkPoint = type { float, float }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to float
  %5 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to float
  %8 = insertelement <2 x float> undef, float %4, i32 0
  %9 = insertelement <2 x float> %8, float %7, i32 1
  ret <2 x float> %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx15PointToSkIPointERKNS_5PointE(%"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %3 to i64
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx15PointFToSkPointERKNS_6PointFE(%"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = bitcast %"class.gfx::PointF"* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  ret <2 x float> %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to float
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = insertelement <2 x float> undef, float %4, i32 0
  %15 = insertelement <2 x float> %14, float %7, i32 1
  %16 = fadd float %4, %10
  %17 = insertelement <2 x float> undef, float %16, i32 0
  %18 = fadd float %7, %13
  %19 = insertelement <2 x float> %17, float %18, i32 1
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %15, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %19, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %3 to i64
  %11 = sext i32 %7 to i64
  %12 = add nsw i64 %11, %10
  %13 = icmp slt i64 %12, 2147483647
  %14 = select i1 %13, i64 %12, i64 2147483647
  %15 = icmp sgt i64 %14, -2147483647
  %16 = select i1 %15, i64 %14, i64 -2147483647
  %17 = sext i32 %5 to i64
  %18 = sext i32 %9 to i64
  %19 = add nsw i64 %18, %17
  %20 = icmp slt i64 %19, 2147483647
  %21 = select i1 %20, i64 %19, i64 2147483647
  %22 = icmp sgt i64 %21, -2147483647
  %23 = select i1 %22, i64 %21, i64 -2147483647
  %24 = zext i32 %5 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %3 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } undef, i64 %27, 0
  %29 = shl nsw i64 %23, 32
  %30 = and i64 %16, 4294967295
  %31 = or i64 %29, %30
  %32 = insertvalue { i64, i64 } %28, i64 %31, 1
  ret { i64, i64 } %32
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %5 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %3, i32 %7, i32 %9, i32 %11, i32 %13) #9
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %15, 0
  %17 = load i64, i64* %4, align 8
  %18 = insertvalue { i64, i64 } %16, i64 %17, 1
  ret { i64, i64 } %18
}

declare void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %2 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fadd <2 x float> %3, %6
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %3, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %2 = bitcast %struct.SkRect* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fsub <2 x float> %6, %3
  %8 = fcmp ogt <2 x float> %7, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %9 = select <2 x i1> %8, <2 x float> %7, <2 x float> zeroinitializer
  %10 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %3, 0
  %11 = insertvalue { <2 x float>, <2 x float> } %10, <2 x float> %9, 1
  ret { <2 x float>, <2 x float> } %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx13SizeFToSkSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = bitcast %"class.gfx::SizeF"* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  ret <2 x float> %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx13SizeToSkISizeERKNS_4SizeE(%"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %3 to i64
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx13SkSizeToSizeFERK6SkSize(%struct.SkSize* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fcmp ogt float %3, 0x3EB0000000000000
  %7 = select i1 %6, float %3, float 0.000000e+00
  %8 = insertelement <2 x float> undef, float %7, i32 0
  %9 = fcmp ogt float %5, 0x3EB0000000000000
  %10 = select i1 %9, float %5, float 0.000000e+00
  %11 = insertelement <2 x float> %8, float %10, i32 1
  ret <2 x float> %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx13SkISizeToSizeERK7SkISize(%struct.SkISize* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %3, 0
  %7 = select i1 %6, i32 %3, i32 0
  %8 = icmp sgt i32 %5, 0
  %9 = select i1 %8, i32 %5, i32 0
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 32
  %12 = zext i32 %7 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx28TransformToFlattenedSkMatrixERKNS_9TransformEP8SkMatrix(%"class.gfx::Transform"* nocapture readonly dereferenceable(68), %class.SkMatrix* nocapture) local_unnamed_addr #4 {
  %3 = bitcast %"class.gfx::Transform"* %0 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.SkMatrix* %1 to i32*
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  store i32 128, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %11 = bitcast float* %10 to i32*
  store i32 %9, i32* %11, align 4
  store i32 128, i32* %6, align 4
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  store i32 128, i32* %6, align 4
  %17 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %21 = bitcast float* %20 to i32*
  store i32 %19, i32* %21, align 4
  store i32 128, i32* %6, align 4
  %22 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %26 = bitcast float* %25 to i32*
  store i32 %24, i32* %26, align 4
  store i32 128, i32* %6, align 4
  %27 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %31 = bitcast float* %30 to i32*
  store i32 %29, i32* %31, align 4
  store i32 128, i32* %6, align 4
  %32 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %36 = bitcast float* %35 to i32*
  store i32 %34, i32* %36, align 4
  store i32 128, i32* %6, align 4
  %37 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  store i32 128, i32* %6, align 4
  %42 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 3
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %46 = bitcast float* %45 to i32*
  store i32 %44, i32* %46, align 4
  store i32 128, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx15BitmapsAreEqualERK8SkBitmapS2_(%class.SkBitmap* dereferenceable(56), %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPixelRef*, %class.SkPixelRef** %3, align 8
  %5 = icmp eq %class.SkPixelRef* %4, null
  %6 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %7 = load %class.SkPixelRef*, %class.SkPixelRef** %6, align 8
  %8 = icmp eq %class.SkPixelRef* %7, null
  %9 = xor i1 %5, %8
  br i1 %9, label %63, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %18 = bitcast %struct.SkISize* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = lshr i64 %19, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp ne i32 %14, %20
  %24 = icmp ne i32 %16, %22
  %25 = or i1 %23, %24
  br i1 %25, label %63, label %26

26:                                               ; preds = %10
  %27 = tail call i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* %0) #9
  %28 = tail call i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* %1) #9
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %63, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %30, %34
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %63, label %46

46:                                               ; preds = %42, %34
  %47 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %50 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %54 = load i64, i64* %49, align 8
  %55 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %53, i64 %54) #9
  %56 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %57 = load i64, i64* %52, align 8
  %58 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %56, i64 %57) #9
  %59 = icmp eq i64 %55, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %46
  %61 = tail call i32 @bcmp(i8* %48, i8* %51, i64 %55)
  %62 = icmp eq i32 %61, 0
  br label %63

63:                                               ; preds = %10, %38, %2, %46, %60, %26, %42
  %64 = phi i1 [ true, %42 ], [ true, %26 ], [ false, %46 ], [ %62, %60 ], [ false, %2 ], [ false, %10 ], [ true, %38 ]
  ret i1 %64
}

declare i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx17ConvertSkiaToRGBAEPKhiPh(i8* nocapture readonly, i32, i8* nocapture) local_unnamed_addr #2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = shl nsw i32 %1, 2
  %7 = sext i32 %6 to i64
  br label %9

8:                                                ; preds = %18, %3
  ret void

9:                                                ; preds = %5, %18
  %10 = phi i64 [ 0, %5 ], [ %32, %18 ]
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 24
  %15 = trunc i32 %14 to i8
  switch i8 %15, label %16 [
    i8 0, label %18
    i8 -1, label %18
  ]

16:                                               ; preds = %9
  %17 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %13) #9
  br label %18

18:                                               ; preds = %9, %9, %16
  %19 = phi i32 [ %17, %16 ], [ %13, %9 ], [ %13, %9 ]
  %20 = lshr i32 %19, 16
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds i8, i8* %2, i64 %10
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %19, 8
  %24 = trunc i32 %23 to i8
  %25 = or i64 %10, 1
  %26 = getelementptr inbounds i8, i8* %2, i64 %25
  store i8 %24, i8* %26, align 1
  %27 = trunc i32 %19 to i8
  %28 = or i64 %10, 2
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  store i8 %27, i8* %29, align 1
  %30 = or i64 %10, 3
  %31 = getelementptr inbounds i8, i8* %2, i64 %30
  store i8 %15, i8* %31, align 1
  %32 = add nuw nsw i64 %10, 4
  %33 = icmp slt i64 %32, %7
  br i1 %33, label %9, label %8
}

declare i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx15QuadFToSkPointsERKNS_5QuadFEP7SkPoint(%"class.gfx::QuadF"* nocapture readonly dereferenceable(32), %struct.SkPoint* nocapture) local_unnamed_addr #5 {
  %3 = bitcast %"class.gfx::QuadF"* %0 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = bitcast %struct.SkPoint* %1 to i64*
  store i64 %4, i64* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 1, i32 0
  %7 = bitcast float* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %10 = bitcast %struct.SkPoint* %9 to i64*
  store i64 %8, i64* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 2, i32 0
  %12 = bitcast float* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %15 = bitcast %struct.SkPoint* %14 to i64*
  store i64 %13, i64* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %0, i64 0, i32 3, i32 0
  %17 = bitcast float* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  %20 = bitcast %struct.SkPoint* %19 to i64*
  store i64 %18, i64* %20, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3gfx25SkiaScalarToHarfBuzzUnitsEf(float) local_unnamed_addr #6 {
  %2 = fmul float %0, 6.553600e+04
  %3 = fcmp ult float %2, 0xC1E0000000000000
  %4 = fcmp ugt float %2, 0x41DFFFFFE0000000
  %5 = fcmp ogt float %2, 0xC1E0000000000000
  %6 = select i1 %5, float %2, float 0xC1E0000000000000
  %7 = fptosi float %6 to i32
  %8 = select i1 %3, i32 0, i32 2147483647
  %9 = select i1 %4, i32 %8, i32 %7
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN3gfx25HarfBuzzUnitsToSkiaScalarEi(i32) local_unnamed_addr #6 {
  %2 = sitofp i32 %0 to float
  %3 = fmul float %2, 0x3EF0000000000000
  ret float %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN3gfx20HarfBuzzUnitsToFloatEi(i32) local_unnamed_addr #6 {
  %2 = sitofp i32 %0 to float
  %3 = fmul float %2, 0x3EF0000000000000
  ret float %3
}

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
