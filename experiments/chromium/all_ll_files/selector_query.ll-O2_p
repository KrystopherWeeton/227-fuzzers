; ModuleID = '../../third_party/blink/renderer/core/css/selector_query.cc'
source_filename = "../../third_party/blink/renderer/core/css/selector_query.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.125" }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.178", i32, [4 x i8], %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.314", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.348", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.355", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.294", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl.217" }
%"struct.std::__1::__cxx_atomic_impl.217" = type { %"struct.std::__1::__cxx_atomic_base_impl.218" }
%"struct.std::__1::__cxx_atomic_base_impl.218" = type { i64 }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::Worklist.225"* }
%"class.blink::Worklist.225" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::Worklist.232"* }
%"class.blink::Worklist.232" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::Worklist.239"* }
%"class.blink::Worklist.239" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::Worklist.246"* }
%"class.blink::Worklist.246" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::Worklist.253"* }
%"class.blink::Worklist.253" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::Worklist.260"* }
%"class.blink::Worklist.260" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::Worklist.267"* }
%"class.blink::Worklist.267" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.274", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.288", [4 x i8] }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { i64 }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { float }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.297", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.306" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.225"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.232"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.239"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.246"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.253"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.601" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.354 }
%class.scoped_refptr.354 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.165", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.165" = type { %"class.base::RefCounted.166" }
%"class.base::RefCounted.166" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.169" }
%"class.blink::HeapHashMap.169" = type { %"class.WTF::HashMap.172" }
%"class.WTF::HashMap.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"struct.WTF::KeyValuePair.175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.175" = type { %"class.blink::WeakMember.176", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::SelectorQuery" = type <{ %"class.blink::CSSSelectorList", %"class.WTF::Vector.12", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::CSSSelector"**, i32, i32 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.23" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.17", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.19" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.40", %"class.blink::Member.42", %"class.blink::Member.17", %"class.blink::Member.44", %"class.blink::Member.44", %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.72", %"class.blink::HeapVector.74" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.121", %"class.WTF::Vector.121", i8, i32, %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.150", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.156", %"class.blink::Member.158", %"class.blink::Member.80", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.161", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.55", %"class.blink::Member.371", %"class.blink::Member.55", %"class.blink::Member.55", %"class.blink::Member.55", %"class.blink::UserActionElementSet", %"class.blink::Member.380", double, double, i64, i64, %"class.blink::HeapHashSet.382", %"class.blink::HeapHashSet.389", i16, i8, %"class.blink::Member.396", %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::TextLinkColors", %"class.blink::Member.404", i8, [7 x i8], %"class.blink::HeapHashMap.406", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.55", %"class.WTF::Vector.413", %"class.blink::Member.418", %"class.blink::Member.420", i8, %"class.blink::Member.55", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.422", %"class.blink::HeapVector.424", %"class.std::__1::unique_ptr.432", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.438", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.451", %"class.WTF::Vector.453", i8, i8, %"class.std::__1::unique_ptr.458", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.477", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.485", i8, i32, %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.493", %"class.WTF::HashMap.495", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.504", %"class.blink::Member.506", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.508", i8, i32, %"class.blink::Member.515", %"class.blink::Member.517", i32, %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::Member.523", %"class.std::__1::unique_ptr.525", i64, %"class.std::__1::unique_ptr.531", i32, i32, %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::Member.541", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.543", %"class.WTF::Vector.545", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.550", %"class.blink::Member.557", %"class.std::__1::unique_ptr.559", %"class.blink::Member.565", i8, i8, %"class.WTF::String", %"class.blink::Member.567", i8, [7 x i8], %"class.blink::HeapHashMap.569", %"class.blink::HeapObserverSet", %"class.blink::Member.583", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.585", i32, i8, i8, %"class.blink::WeakMember.587", %"class.blink::Member.588" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.125" }
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.606", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.647", i32, i8, [3 x i8], %"class.blink::HeapVector.649", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.668", %"class.blink::Member.674", %"class.blink::Member.676", i8, [7 x i8] }>
%"class.blink::Supplementable.606" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.607" }
%"class.blink::HeapHashMap.607" = type { %"class.WTF::HashMap.610" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.622" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.614" }
%"class.blink::HeapObserverSet.614" = type { i32, [4 x i8], %"class.blink::HeapHashSet.615" }
%"class.blink::HeapHashSet.615" = type { %"class.WTF::HashSet.618" }
%"class.WTF::HashSet.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"class.blink::WeakMember.621"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.621" = type opaque
%"class.blink::Supplementable.622" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.623" }
%"class.blink::HeapHashMap.623" = type { %"class.WTF::HashMap.626" }
%"class.WTF::HashMap.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"struct.WTF::KeyValuePair.629"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.629" = type { i8*, %"class.blink::Member.698" }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.700" }
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.630, %"class.std::__1::unique_ptr.631", %"class.std::__1::unique_ptr.631", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.637", %"class.blink::Member.134", i32, [4 x i8], %"class.WTF::HashSet.643", i32, i32 }
%class.scoped_refptr.630 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.649" = type { %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::Member.655"*, i32, i32 }
%"class.blink::Member.655" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.661", i32, i32 }
%"class.blink::HeapHashMap.661" = type { %"class.WTF::HashMap.664" }
%"class.WTF::HashMap.664" = type { %"class.WTF::HashTable.665" }
%"class.WTF::HashTable.665" = type <{ %"struct.WTF::KeyValuePair.667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.667" = type opaque
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.144" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::KURL"* }
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.82", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.84, %"class.WTF::Vector.85", %"class.WTF::Vector.85", %"class.blink::Member", %"class.blink::Member.90", %"class.blink::HeapHashSet", %"class.blink::Member.42", %"class.WTF::HashSet.98", %"class.WTF::TextPosition", %"class.blink::Member.102", %"class.blink::HeapVector.104", %"class.blink::Member.111" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.84 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.92" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.96" }
%"class.WTF::HashTable.96" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.18" }
%"class.WTF::HashSet.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.104" = type { %"class.WTF::Vector.107" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.161" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163" }
%"class.WTF::VectorBufferBase.163" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.373" }
%"class.blink::HeapHashMap.373" = type { %"class.WTF::HashMap.376" }
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.382" = type { %"class.WTF::HashSet.385" }
%"class.WTF::HashSet.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"class.blink::WeakMember.388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.388" = type opaque
%"class.blink::HeapHashSet.389" = type { %"class.WTF::HashSet.392" }
%"class.WTF::HashSet.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"class.blink::WeakMember.395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.395" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.17", %"class.blink::HeapVector.74" }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.406" = type { %"class.WTF::HashMap.409" }
%"class.WTF::HashMap.409" = type { %"class.WTF::HashTable.410" }
%"class.WTF::HashTable.410" = type <{ %"struct.WTF::KeyValuePair.412"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.412" = type opaque
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.438" = type { %"class.WTF::HashSet.441" }
%"class.WTF::HashSet.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"class.blink::WeakMember.444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.444" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.445", i32, [4 x i8] }>
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"struct.std::__1::pair.448"*, i32, i32 }
%"struct.std::__1::pair.448" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.453" = type { %"class.WTF::VectorBuffer.454" }
%"class.WTF::VectorBuffer.454" = type { %"class.WTF::VectorBufferBase.455" }
%"class.WTF::VectorBufferBase.455" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type { %"class.WTF::HashMap.461" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type { %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.466" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::SelectorQuery"* }
%"class.blink::NthIndexCache" = type { %"class.blink::Document"*, %"class.blink::HeapHashMap.475"*, %"class.blink::HeapHashMap.476"* }
%"class.blink::HeapHashMap.475" = type opaque
%"class.blink::HeapHashMap.476" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.55"*, i32, i32 }
%"class.blink::HeapVector.477" = type { %"class.WTF::Vector.480" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.blink::Member.483"*, i32, i32 }
%"class.blink::Member.483" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.42" }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.499" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.370", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.361, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.361 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.362" }>
%"class.base::RefCountedThreadSafe.362" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.363 }
%class.scoped_refptr.363 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.364", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.364" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.365" }
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i8 }
%"class.blink::WeakMember.370" = type { %"class.blink::MemberBase.43" }
%"class.blink::HeapHashSet.508" = type { %"class.WTF::HashSet.511" }
%"class.WTF::HashSet.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"class.blink::Member.514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.514" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.550" = type { %"class.WTF::HashMap.553" }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.569" = type { %"class.WTF::HashMap.572" }
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.576" }
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::WeakMember.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.582" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.42", %"class.blink::HeapHashSet.592", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.599", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.592" = type { %"class.WTF::HashSet.595" }
%"class.WTF::HashSet.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"class.blink::Member.598"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.598" = type opaque
%"class.blink::HeapTaskRunnerTimer.599" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.600", { i64, i64 } }
%"class.blink::WeakMember.600" = type { %"class.blink::MemberBase.586" }
%"class.blink::WeakMember.587" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.51" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.55", i32, %"class.blink::HeapVector" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.69" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapHashMap.71"* }
%"class.blink::HeapHashMap.71" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.74" = type { %"class.WTF::Vector.77" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::Member.80"*, i32, i32 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.27", %"class.blink::Member.29", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.27" = type { %"class.WTF::SingleThreadedBitField.28" }
%"class.WTF::SingleThreadedBitField.28" = type { i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.34", %"class.WTF::AtomicString", %"class.WTF::Vector.36" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"struct.blink::SelectorChecker::MatchResult" = type { i8 }
%"struct.blink::SelectorChecker::SelectorCheckingContext" = type <{ %"class.blink::CSSSelector"*, %"class.blink::Element"*, %"class.blink::Element"*, %"class.blink::ContainerNode"*, i8, i8, i8, i8, i8, i8, [2 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>
%"class.blink::SelectorChecker" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CustomScrollbar"*, %"class.blink::PartNames"*, %"class.WTF::String", i32, i32, i8, [7 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.685", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.680", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.682", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.55" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.682" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.683", { i64, i64 } }
%"class.blink::WeakMember.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::Scrollbar"* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::HashMap.685" = type { %"class.WTF::HashTable.686" }
%"class.WTF::HashTable.686" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::PartNames" = type opaque
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.3", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.6" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.690" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.690" = type { %"class.v8::TracedReference.691" }
%"class.v8::TracedReference.691" = type { %"class.v8::BasicTracedReference.692" }
%"class.v8::BasicTracedReference.692" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.697", i8* }
%"class.WTF::StringAppend.697" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.164, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.695", i32, [4 x i8] }>
%"class.blink::WeakMember.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::Document"* }
%"class.WTF::StringTypeAdapter.752" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.709 }
%union.anon.709 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.743, %"class.blink::Member.744", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.743 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.746" }
%"class.blink::Persistent.746" = type { %"class.blink::PersistentBase.747" }
%"class.blink::PersistentBase.747" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::StringTypeAdapter.753" = type { %"class.WTF::StringTypeAdapter.754" }
%"class.WTF::StringTypeAdapter.754" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZNK5blink13SelectorQuery7ExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery7ExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZNK5blink13SelectorQuery11ExecuteSlowINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery13ExecuteWithIdINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE = comdat any

$_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_7ElementEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink18StaticNodeTypeListINS_7ElementEED0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink18StaticNodeTypeListINS_7ElementEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink8NodeList18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink18StaticNodeTypeListINS_7ElementEE6lengthEv = comdat any

$_ZNK5blink18StaticNodeTypeListINS_7ElementEE4itemEj = comdat any

$_ZNK5blink8NodeList15IsEmptyNodeListEv = comdat any

$_ZNK5blink8NodeList15IsChildNodeListEv = comdat any

$_ZNK5blink8NodeList16VirtualOwnerNodeEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK5blink13SelectorQuery11ExecuteSlowINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery13ExecuteWithIdINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE = comdat any

$_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSSelectorEEEmm = comdat any

$_ZN3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18StaticNodeTypeListINS_7ElementEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [32 x i8] c"The provided selector is empty.\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"' is not a valid selector.\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18StaticNodeTypeListINS_7ElementEEE = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::StaticNodeTypeList"*)* @_ZN5blink18StaticNodeTypeListINS_7ElementEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::StaticNodeTypeList"*, %"class.blink::Visitor"*)* @_ZNK5blink18StaticNodeTypeListINS_7ElementEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::StaticNodeTypeList"*)* @_ZNK5blink18StaticNodeTypeListINS_7ElementEE6lengthEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::StaticNodeTypeList"*, i32)* @_ZNK5blink18StaticNodeTypeListINS_7ElementEE4itemEj to i8*), i8* bitcast (i1 (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList15IsEmptyNodeListEv to i8*), i8* bitcast (i1 (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList15IsChildNodeListEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList16VirtualOwnerNodeEv to i8*)] }, comdat, align 8
@_ZN5blink8NodeList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSSelectorEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::CSSSelector *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [178 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, std::__1::unique_ptr<blink::SelectorQuery, std::__1::default_delete<blink::SelectorQuery> > >]\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1

@_ZN5blink13SelectorQueryC1ENS_15CSSSelectorListE = hidden unnamed_addr alias void (%"class.blink::SelectorQuery"*, %"class.blink::CSSSelectorList"*), void (%"class.blink::SelectorQuery"*, %"class.blink::CSSSelectorList"*)* @_ZN5blink13SelectorQueryC2ENS_15CSSSelectorListE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SelectorQuery7MatchesERNS_7ElementE(%"class.blink::SelectorQuery"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %3, %"class.blink::Element"* dereferenceable(104) %1)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* nocapture readonly, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %5 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %6 = alloca %"class.blink::SelectorChecker", align 8
  %7 = bitcast %"class.blink::SelectorChecker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %6, i64 0, i32 3
  %9 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %3, %15, %30
  %33 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %6, i64 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %6, i64 0, i32 5
  store i32 3, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %6, i64 0, i32 6
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %37, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %32
  %44 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i8*
  %45 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 6
  %48 = bitcast %"class.blink::Element"** %46 to i8*
  %49 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 7
  %50 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 8
  %51 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 9
  %52 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 11
  %53 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 12
  %54 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 13
  %55 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i64*
  %56 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 3
  %57 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %4, i64 0, i32 0
  br label %60

58:                                               ; preds = %60
  %59 = icmp eq %"class.blink::CSSSelector"** %65, %41
  br i1 %59, label %66, label %60

60:                                               ; preds = %43, %58
  %61 = phi %"class.blink::CSSSelector"** [ %37, %43 ], [ %65, %58 ]
  %62 = bitcast %"class.blink::CSSSelector"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 56, i1 false) #9
  store %"class.blink::Element"* %2, %"class.blink::Element"** %45, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %47, align 2
  store i8 0, i8* %49, align 1
  store i8 0, i8* %50, align 4
  store i8 0, i8* %51, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %52, align 8
  store i8 0, i8* %53, align 8
  store i8 0, i8* %54, align 1
  store i64 %63, i64* %55, align 8
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #9
  store i8 0, i8* %57, align 1
  %64 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %6, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %5, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %44) #9
  %65 = getelementptr inbounds %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %61, i64 1
  br i1 %64, label %66, label %58

66:                                               ; preds = %58, %60, %32
  %67 = phi i1 [ false, %32 ], [ true, %60 ], [ false, %58 ]
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %66, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #9
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink13SelectorQuery7ClosestERNS_7ElementE(%"class.blink::SelectorQuery"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = icmp eq %"class.blink::Element"* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  br label %10

10:                                               ; preds = %17, %8
  %11 = phi %"class.blink::Element"* [ %1, %8 ], [ %22, %17 ]
  %12 = tail call zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %9, %"class.blink::Element"* nonnull dereferenceable(104) %11)
  br i1 %12, label %23, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  %15 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %14) #9
  %16 = icmp eq %"class.blink::ContainerNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::ContainerNode"* %15 to %"class.blink::Element"*
  br i1 %21, label %10, label %23

23:                                               ; preds = %17, %13, %10, %2
  %24 = phi %"class.blink::Element"* [ null, %2 ], [ null, %13 ], [ null, %17 ], [ %11, %10 ]
  ret %"class.blink::Element"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SelectorQuery8QueryAllERNS_13ContainerNodeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NthIndexCache", align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = bitcast %"class.blink::NthIndexCache"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = bitcast %"class.blink::NthIndexCache"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  call void @_ZN5blink13NthIndexCacheC1ERNS_8DocumentE(%"class.blink::NthIndexCache"* nonnull %3, %"class.blink::Document"* dereferenceable(2848) %10) #9
  %11 = bitcast %"class.blink::HeapVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  call void @_ZNK5blink13SelectorQuery7ExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* nonnull dereferenceable(16) %4)
  %12 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #9
  %13 = bitcast i8* %12 to %"class.blink::StaticNodeTypeList"*
  %14 = bitcast i8* %12 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18StaticNodeTypeListINS_7ElementEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  %18 = getelementptr inbounds i8, i8* %12, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = bitcast i8* %17 to %"class.blink::HeapVector"*
  call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_7ElementEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector"* dereferenceable(16) %22, %"class.blink::HeapVector"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  call void @_ZN5blink13NthIndexCacheD1Ev(%"class.blink::NthIndexCache"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret %"class.blink::StaticNodeTypeList"* %13
}

declare void @_ZN5blink13NthIndexCacheC1ERNS_8DocumentE(%"class.blink::NthIndexCache"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery7ExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %219, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_ZNK5blink13SelectorQuery11ExecuteSlowINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %219

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 768
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 33
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %24
  tail call void @_ZNK5blink13SelectorQuery13ExecuteWithIdINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %219

33:                                               ; preds = %19, %15, %24
  %34 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %5, i32 0) #9
  %35 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %34, align 8
  %36 = bitcast %"class.blink::CSSSelector"* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 131072
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %35, i64 1
  %41 = icmp eq %"class.blink::CSSSelector"* %40, null
  %42 = or i1 %41, %39
  br i1 %42, label %43, label %218

43:                                               ; preds = %33
  %44 = lshr i32 %37, 4
  %45 = and i32 %44, 15
  switch i32 %45, label %218 [
    i32 3, label %46
    i32 1, label %58
  ]

46:                                               ; preds = %43
  %47 = and i32 %37, 262144
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %35, i64 0, i32 1
  br i1 %48, label %54, label %50

50:                                               ; preds = %46
  %51 = bitcast %"union.blink::CSSSelector::DataUnion"* %49 to %"struct.blink::CSSSelector::RareData"**
  %52 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %52, i64 0, i32 1
  br label %56

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %49, i64 0, i32 0
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %"class.WTF::AtomicString"* [ %53, %50 ], [ %55, %54 ]
  tail call fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %57, %"class.blink::CSSSelector"* null, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %219

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %35, i64 0, i32 1
  %60 = bitcast %"union.blink::CSSSelector::DataUnion"* %59 to %"class.blink::QualifiedName"*
  %61 = bitcast %"union.blink::CSSSelector::DataUnion"* %59 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %65, %67
  br i1 %68, label %69, label %218

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %71 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %71, label %219, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %219, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 1
  %79 = bitcast %"class.blink::Node"* %78 to %"class.blink::Node"**
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = bitcast %"class.blink::Node"* %80 to %"class.blink::Element"*
  %82 = icmp eq %"class.blink::Node"* %80, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 12
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %100, label %93

88:                                               ; preds = %93
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 12
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %83, %88
  %94 = phi %"class.blink::Node"* [ %96, %88 ], [ %80, %83 ]
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %94, i64 0, i32 5, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %219, label %88

98:                                               ; preds = %88
  %99 = bitcast %"class.blink::Node"* %96 to %"class.blink::Element"*
  br label %100

100:                                              ; preds = %98, %83, %77
  %101 = phi %"class.blink::Element"* [ %81, %77 ], [ %81, %83 ], [ %99, %98 ]
  %102 = icmp eq %"class.blink::Element"* %101, null
  br i1 %102, label %219, label %103

103:                                              ; preds = %100
  %104 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %105 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.blink::Element"** %4 to i8*
  %107 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  br label %111

111:                                              ; preds = %215, %103
  %112 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %62, %103 ], [ %217, %215 ]
  %113 = phi %"class.blink::Element"* [ %101, %103 ], [ %216, %215 ]
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %115 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %112, %114
  br i1 %115, label %162, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %120, %122
  br i1 %123, label %162, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 48
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %182, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %131 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::Document"*, %"class.blink::Document"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %133, i64 0, i32 107
  %135 = load i8, i8* %134, align 8
  %136 = and i8 %135, 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %182, label %138

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 5
  %140 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 2
  %145 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %144) #9
  %146 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  br label %147

147:                                              ; preds = %143, %138
  %148 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %146, %143 ], [ %112, %138 ]
  %149 = phi %"class.WTF::AtomicString"* [ %145, %143 ], [ %139, %138 ]
  %150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 5, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %147
  %154 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %60) #9
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  br label %157

157:                                              ; preds = %153, %147
  %158 = phi %"class.WTF::StringImpl"* [ %156, %153 ], [ %151, %147 ]
  %159 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %149, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, %158
  br i1 %161, label %162, label %182

162:                                              ; preds = %157, %116, %111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #9
  store %"class.blink::Element"* %113, %"class.blink::Element"** %4, align 8
  %163 = load i32, i32* %107, align 4
  %164 = load i32, i32* %108, align 8
  %165 = icmp eq i32 %163, %164
  br i1 %165, label %180, label %166, !prof !2

166:                                              ; preds = %162
  %167 = ptrtoint %"class.blink::Element"* %113 to i64
  %168 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %109, align 8
  %169 = zext i32 %163 to i64
  %170 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %168, i64 %169
  %171 = bitcast %"class.blink::Member.55"* %170 to i64*
  store atomic i64 %167, i64* %171 monotonic, align 8
  %172 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %166
  %175 = bitcast %"class.blink::Element"* %113 to i8*
  %176 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %175) #9
  br label %177

177:                                              ; preds = %174, %166
  %178 = load i32, i32* %107, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %107, align 4
  br label %181

180:                                              ; preds = %162
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %110, %"class.blink::Element"** nonnull dereferenceable(8) %4) #9
  br label %181

181:                                              ; preds = %180, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #9
  br label %182

182:                                              ; preds = %181, %157, %129, %124
  %183 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 1, i32 0, i32 0
  %184 = load %"class.blink::Node"*, %"class.blink::Node"** %183, align 8
  %185 = icmp eq %"class.blink::Node"* %184, null
  br i1 %185, label %186, label %196

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0
  %188 = icmp eq %"class.blink::Node"* %187, %70
  br i1 %188, label %219, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %191 = load %"class.blink::Node"*, %"class.blink::Node"** %190, align 8
  %192 = icmp eq %"class.blink::Node"* %191, null
  br i1 %192, label %193, label %196

193:                                              ; preds = %189
  %194 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %187, %"class.blink::Node"* %70) #9
  %195 = icmp eq %"class.blink::Node"* %194, null
  br i1 %195, label %219, label %196

196:                                              ; preds = %193, %189, %182
  %197 = phi %"class.blink::Node"* [ %184, %182 ], [ %191, %189 ], [ %194, %193 ]
  br label %198

198:                                              ; preds = %196, %212
  %199 = phi %"class.blink::Node"* [ %213, %212 ], [ %197, %196 ]
  %200 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %199, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 12
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %198
  %205 = icmp eq %"class.blink::Node"* %199, %70
  br i1 %205, label %219, label %206

206:                                              ; preds = %204
  %207 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %199, i64 0, i32 5, i32 0, i32 0
  %208 = load %"class.blink::Node"*, %"class.blink::Node"** %207, align 8
  %209 = icmp eq %"class.blink::Node"* %208, null
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %199, %"class.blink::Node"* %70) #9
  br label %212

212:                                              ; preds = %210, %206
  %213 = phi %"class.blink::Node"* [ %211, %210 ], [ %208, %206 ]
  %214 = icmp eq %"class.blink::Node"* %213, null
  br i1 %214, label %219, label %198

215:                                              ; preds = %198
  %216 = bitcast %"class.blink::Node"* %199 to %"class.blink::Element"*
  %217 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  br label %111

218:                                              ; preds = %33, %58, %43
  tail call void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %219

219:                                              ; preds = %93, %193, %186, %212, %204, %100, %72, %69, %56, %218, %3, %14, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13NthIndexCacheD1Ev(%"class.blink::NthIndexCache"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink13SelectorQuery10QueryFirstERNS_13ContainerNodeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NthIndexCache", align 8
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = bitcast %"class.blink::NthIndexCache"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = bitcast %"class.blink::NthIndexCache"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  call void @_ZN5blink13NthIndexCacheC1ERNS_8DocumentE(%"class.blink::NthIndexCache"* nonnull %3, %"class.blink::Document"* dereferenceable(2848) %10) #9
  %11 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store %"class.blink::Element"* null, %"class.blink::Element"** %4, align 8
  call void @_ZNK5blink13SelectorQuery7ExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** nonnull dereferenceable(8) %4)
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN5blink13NthIndexCacheD1Ev(%"class.blink::NthIndexCache"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret %"class.blink::Element"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery7ExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %198, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZNK5blink13SelectorQuery11ExecuteSlowINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %198

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 768
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 33
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %23
  tail call void @_ZNK5blink13SelectorQuery13ExecuteWithIdINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %198

32:                                               ; preds = %18, %14, %23
  %33 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %4, i32 0) #9
  %34 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %33, align 8
  %35 = bitcast %"class.blink::CSSSelector"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 131072
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %34, i64 1
  %40 = icmp eq %"class.blink::CSSSelector"* %39, null
  %41 = or i1 %40, %38
  br i1 %41, label %42, label %197

42:                                               ; preds = %32
  %43 = lshr i32 %36, 4
  %44 = and i32 %43, 15
  switch i32 %44, label %197 [
    i32 3, label %45
    i32 1, label %57
  ]

45:                                               ; preds = %42
  %46 = and i32 %36, 262144
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %34, i64 0, i32 1
  br i1 %47, label %53, label %49

49:                                               ; preds = %45
  %50 = bitcast %"union.blink::CSSSelector::DataUnion"* %48 to %"struct.blink::CSSSelector::RareData"**
  %51 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %51, i64 0, i32 1
  br label %55

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %48, i64 0, i32 0
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi %"class.WTF::AtomicString"* [ %52, %49 ], [ %54, %53 ]
  tail call fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %56, %"class.blink::CSSSelector"* null, %"class.blink::Element"** dereferenceable(8) %2)
  br label %198

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %34, i64 0, i32 1
  %59 = bitcast %"union.blink::CSSSelector::DataUnion"* %58 to %"class.blink::QualifiedName"*
  %60 = bitcast %"union.blink::CSSSelector::DataUnion"* %58 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %68, label %197

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %70 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %70, label %198, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %198, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 1
  %78 = bitcast %"class.blink::Node"* %77 to %"class.blink::Node"**
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8
  %80 = bitcast %"class.blink::Node"* %79 to %"class.blink::Element"*
  %81 = icmp eq %"class.blink::Node"* %79, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 12
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %99, label %92

87:                                               ; preds = %92
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 12
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %82, %87
  %93 = phi %"class.blink::Node"* [ %95, %87 ], [ %79, %82 ]
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %93, i64 0, i32 5, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %198, label %87

97:                                               ; preds = %87
  %98 = bitcast %"class.blink::Node"* %95 to %"class.blink::Element"*
  br label %99

99:                                               ; preds = %97, %82, %76
  %100 = phi %"class.blink::Element"* [ %80, %76 ], [ %80, %82 ], [ %98, %97 ]
  %101 = icmp eq %"class.blink::Element"* %100, null
  br i1 %101, label %198, label %102

102:                                              ; preds = %99
  %103 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %105
  br i1 %106, label %157, label %107

107:                                              ; preds = %102, %192
  %108 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %194, %192 ], [ %61, %102 ]
  %109 = phi %"class.blink::Element"* [ %193, %192 ], [ %100, %102 ]
  %110 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %113, %115
  br i1 %116, label %157, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 48
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %159, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %126, i64 0, i32 107
  %128 = load i8, i8* %127, align 8
  %129 = and i8 %128, 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %159, label %131

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 5
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 2
  %138 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %137) #9
  %139 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  br label %140

140:                                              ; preds = %136, %131
  %141 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %139, %136 ], [ %108, %131 ]
  %142 = phi %"class.WTF::AtomicString"* [ %138, %136 ], [ %132, %131 ]
  %143 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 5, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  %147 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %59) #9
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  br label %150

150:                                              ; preds = %146, %140
  %151 = phi %"class.WTF::StringImpl"* [ %149, %146 ], [ %144, %140 ]
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, %151
  br i1 %154, label %157, label %159

155:                                              ; preds = %192
  %156 = bitcast %"class.blink::Node"* %176 to %"class.blink::Element"*
  br label %157

157:                                              ; preds = %150, %107, %155, %102
  %158 = phi %"class.blink::Element"* [ %100, %102 ], [ %156, %155 ], [ %109, %107 ], [ %109, %150 ]
  store %"class.blink::Element"* %158, %"class.blink::Element"** %2, align 8
  br label %198

159:                                              ; preds = %150, %122, %117
  %160 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %163, label %173

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0
  %165 = icmp eq %"class.blink::Node"* %164, %69
  br i1 %165, label %198, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %170, label %173

170:                                              ; preds = %166
  %171 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %164, %"class.blink::Node"* %69) #9
  %172 = icmp eq %"class.blink::Node"* %171, null
  br i1 %172, label %198, label %173

173:                                              ; preds = %170, %166, %159
  %174 = phi %"class.blink::Node"* [ %161, %159 ], [ %168, %166 ], [ %171, %170 ]
  br label %175

175:                                              ; preds = %173, %189
  %176 = phi %"class.blink::Node"* [ %190, %189 ], [ %174, %173 ]
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 12
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %175
  %182 = icmp eq %"class.blink::Node"* %176, %69
  br i1 %182, label %198, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 0, i32 5, i32 0, i32 0
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %184, align 8
  %186 = icmp eq %"class.blink::Node"* %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %176, %"class.blink::Node"* %69) #9
  br label %189

189:                                              ; preds = %187, %183
  %190 = phi %"class.blink::Node"* [ %188, %187 ], [ %185, %183 ]
  %191 = icmp eq %"class.blink::Node"* %190, null
  br i1 %191, label %198, label %175

192:                                              ; preds = %175
  %193 = bitcast %"class.blink::Node"* %176 to %"class.blink::Element"*
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %196 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %194, %195
  br i1 %196, label %155, label %107

197:                                              ; preds = %32, %57, %42
  tail call void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %198

198:                                              ; preds = %92, %170, %163, %189, %181, %157, %99, %71, %68, %55, %197, %3, %13, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SelectorQuery"* @_ZN5blink13SelectorQuery5AdoptENS_15CSSSelectorListE(%"class.blink::CSSSelectorList"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSSelectorList", align 8
  %3 = tail call noalias i8* @malloc(i64 40) #9
  %4 = bitcast i8* %3 to %"class.blink::SelectorQuery"*
  %5 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %6 = bitcast %"class.blink::CSSSelectorList"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::CSSSelectorList"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %5, align 8
  call void @_ZN5blink13SelectorQueryC2ENS_15CSSSelectorListE(%"class.blink::SelectorQuery"* %4, %"class.blink::CSSSelectorList"* nonnull %2)
  %9 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %2, i64 0, i32 0
  %10 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %9, align 8
  %11 = icmp eq %"class.blink::CSSSelector"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %2) #9
  br label %13

13:                                               ; preds = %1, %12
  ret %"class.blink::SelectorQuery"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SelectorQueryC2ENS_15CSSSelectorListE(%"class.blink::SelectorQuery"*, %"class.blink::CSSSelectorList"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %1, i64 0, i32 0
  %5 = bitcast %"class.blink::CSSSelectorList"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::SelectorQuery"* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %4, align 8
  %8 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %12 = bitcast %"class.WTF::Vector.12"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  %13 = load i8, i8* %11, align 8
  %14 = and i8 %13, -8
  %15 = or i8 %14, 5
  store i8 %15, i8* %11, align 8
  %16 = tail call i32 @_ZNK5blink15CSSSelectorList13ComputeLengthEv(%"class.blink::CSSSelectorList"* %3) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %2
  %19 = zext i32 %16 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSSelectorEEEmm(i64 %19) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSSelectorEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.12"* %8 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %25, i32* %26, align 8
  br label %27

27:                                               ; preds = %2, %18
  %28 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 0, i32 0
  %29 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %28, align 8
  %30 = icmp eq %"class.blink::CSSSelector"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %8, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  br label %38

34:                                               ; preds = %58, %27
  %35 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %63, label %206

38:                                               ; preds = %31, %58
  %39 = phi %"class.blink::CSSSelector"* [ %29, %31 ], [ %57, %58 ]
  %40 = tail call zeroext i1 @_ZNK5blink11CSSSelector20MatchesPseudoElementEv(%"class.blink::CSSSelector"* nonnull %39) #9
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = ptrtoint %"class.blink::CSSSelector"* %39 to i64
  %43 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %32, align 8
  %44 = load i32, i32* %33, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %43, i64 %45
  %47 = bitcast %"class.blink::CSSSelector"** %46 to i64*
  store i64 %42, i64* %47, align 8
  %48 = load i32, i32* %33, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %33, align 4
  br label %50

50:                                               ; preds = %38, %41
  br label %51

51:                                               ; preds = %50, %51
  %52 = phi %"class.blink::CSSSelector"* [ %57, %51 ], [ %39, %50 ]
  %53 = bitcast %"class.blink::CSSSelector"* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 131072
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %52, i64 1
  br i1 %56, label %51, label %58

58:                                               ; preds = %51
  %59 = and i32 %54, 2097152
  %60 = icmp ne i32 %59, 0
  %61 = icmp eq %"class.blink::CSSSelector"* %57, null
  %62 = or i1 %61, %60
  br i1 %62, label %34, label %38

63:                                               ; preds = %34
  %64 = load i8, i8* %11, align 8
  %65 = and i8 %64, -5
  store i8 %65, i8* %11, align 8
  %66 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZN3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %8, i32 0) #9
  %67 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %66, align 8
  %68 = icmp eq %"class.blink::CSSSelector"* %67, null
  br i1 %68, label %206, label %69

69:                                               ; preds = %63
  %70 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %70, i64 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %69, %199
  %73 = phi %"class.blink::CSSSelector"* [ %67, %69 ], [ %203, %199 ]
  %74 = bitcast %"class.blink::CSSSelector"* %73 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = lshr i32 %75, 4
  %77 = and i32 %76, 15
  switch i32 %77, label %184 [
    i32 2, label %78
    i32 7, label %128
  ]

78:                                               ; preds = %72
  %79 = and i32 %75, 262144
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %73, i64 0, i32 1
  br i1 %80, label %86, label %82

82:                                               ; preds = %78
  %83 = bitcast %"union.blink::CSSSelector::DataUnion"* %81 to %"struct.blink::CSSSelector::RareData"**
  %84 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %84, i64 0, i32 1
  br label %88

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %81, i64 0, i32 0
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %"class.WTF::AtomicString"* [ %85, %82 ], [ %87, %86 ]
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %110, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #9
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  tail call void @llvm.trap() #9
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %110

110:                                              ; preds = %108, %93, %88
  %111 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  %112 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %111, i64* %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %206

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %206

128:                                              ; preds = %72
  %129 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %73, i64 0, i32 1
  %130 = bitcast %"union.blink::CSSSelector::DataUnion"* %129 to %"struct.blink::CSSSelector::RareData"**
  %131 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %130, align 8
  %132 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %131, i64 0, i32 4, i32 0, i32 0
  %133 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %132, align 8
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %135 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %133, %134
  br i1 %135, label %136, label %184

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %131, i64 0, i32 3, i32 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %184

140:                                              ; preds = %136
  %141 = and i32 %75, 262144
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %131, i64 0, i32 1
  %144 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %129, i64 0, i32 0
  %145 = select i1 %142, %"class.WTF::AtomicString"* %144, %"class.WTF::AtomicString"* %143
  %146 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %166, label %149

149:                                              ; preds = %140
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %166

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i33
  %158 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %157, i33 1) #9
  %159 = extractvalue { i33, i1 } %158, 1
  %160 = extractvalue { i33, i1 } %158, 0
  %161 = icmp slt i33 %160, 0
  %162 = or i1 %159, %161
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %154
  tail call void @llvm.trap() #9
  unreachable

164:                                              ; preds = %154
  %165 = trunc i33 %160 to i32
  store i32 %165, i32* %155, align 4
  br label %166

166:                                              ; preds = %164, %149, %140
  %167 = ptrtoint %"class.WTF::StringImpl"* %147 to i64
  %168 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %167, i64* %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %206, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %206

183:                                              ; preds = %180
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #9
  br label %206

184:                                              ; preds = %72, %136, %128
  %185 = and i32 %75, 15
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %199, label %187

187:                                              ; preds = %184
  %188 = load i8, i8* %11, align 8
  %189 = and i8 %188, -2
  store i8 %189, i8* %11, align 8
  %190 = load i32, i32* %74, align 8
  %191 = and i32 %190, 15
  %192 = add nsw i32 %191, -3
  %193 = icmp ult i32 %192, 2
  %194 = zext i1 %193 to i8
  %195 = shl nuw nsw i8 %194, 1
  %196 = and i8 %188, -4
  %197 = or i8 %195, %196
  store i8 %197, i8* %11, align 8
  %198 = load i32, i32* %74, align 8
  br label %199

199:                                              ; preds = %184, %187
  %200 = phi i32 [ %75, %184 ], [ %198, %187 ]
  %201 = and i32 %200, 131072
  %202 = icmp ne i32 %201, 0
  %203 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %73, i64 1
  %204 = icmp eq %"class.blink::CSSSelector"* %203, null
  %205 = or i1 %204, %202
  br i1 %205, label %206, label %72

206:                                              ; preds = %199, %63, %183, %180, %166, %127, %124, %110, %34
  ret void
}

declare i32 @_ZNK5blink15CSSSelectorList13ComputeLengthEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11CSSSelector20MatchesPseudoElementEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SelectorQuery"* @_ZN5blink18SelectorQueryCache3AddERKN3WTF12AtomicStringERKNS_8DocumentERNS_14ExceptionStateE(%"class.blink::SelectorQueryCache"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSSelectorList", align 8
  %6 = alloca %"class.blink::CSSSelectorList", align 8
  %7 = alloca %"struct.blink::Referrer", align 8
  %8 = alloca %"class.WTF::TextEncoding", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.std::__1::unique_ptr.466", align 8
  %12 = alloca %"class.blink::CSSSelectorList", align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %4, %16
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0)) #9
  br label %383

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %22, align 8
  %24 = icmp eq %"struct.WTF::KeyValuePair.465"* %23, null
  %25 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %76, label %27

27:                                               ; preds = %21
  %28 = add i32 %26, -1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = lshr i32 %31, 8
  %33 = and i32 %32, %28
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %23, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %76, label %39

39:                                               ; preds = %27
  %40 = xor i32 %32, -1
  %41 = lshr i32 %31, 31
  %42 = add nsw i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %63, %39
  %54 = phi %"struct.WTF::KeyValuePair.465"* [ %35, %39 ], [ %68, %63 ]
  %55 = phi i64 [ %34, %39 ], [ %67, %63 ]
  %56 = phi i64 [ 0, %39 ], [ %65, %63 ]
  %57 = bitcast %"struct.WTF::KeyValuePair.465"* %54 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = icmp ne i8* %58, inttoptr (i64 -1 to i8*)
  %60 = bitcast i8* %58 to %"class.WTF::StringImpl"*
  %61 = icmp eq %"class.WTF::StringImpl"* %14, %60
  %62 = and i1 %59, %61
  br i1 %62, label %72, label %63

63:                                               ; preds = %53
  %64 = icmp eq i64 %56, 0
  %65 = select i1 %64, i64 %52, i64 %56
  %66 = add i64 %65, %55
  %67 = and i64 %66, %29
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %23, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %76, label %53

72:                                               ; preds = %53
  %73 = icmp eq %"struct.WTF::KeyValuePair.465"* %54, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = zext i32 %26 to i64
  br label %79

76:                                               ; preds = %63, %72, %27, %21
  %77 = zext i32 %26 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %23, i64 %77
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = phi %"struct.WTF::KeyValuePair.465"* [ %54, %74 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %23, i64 %80
  %83 = icmp eq %"struct.WTF::KeyValuePair.465"* %81, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.blink::SelectorQuery"*, %"class.blink::SelectorQuery"** %85, align 8
  br label %383

87:                                               ; preds = %79
  %88 = bitcast %"class.blink::CSSSelectorList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #9
  %89 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %6, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %89, align 8
  %90 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %2) #9
  %91 = bitcast %"struct.blink::Referrer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #9
  %92 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %93 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %7, i64 0, i32 1
  store i32 1, i32* %93, align 8
  %94 = bitcast %"class.WTF::TextEncoding"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #9
  %95 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %8, i64 0, i32 0
  store i8* null, i8** %95, align 8
  %96 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %97 = bitcast i8* %96 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"* %97, %"class.blink::Document"* dereferenceable(2848) %2, %"class.blink::KURL"* dereferenceable(112) %90, i1 zeroext true, %"struct.blink::Referrer"* nonnull dereferenceable(16) %7, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %8, i8 zeroext 1, i32 0) #9
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  %102 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZN5blink9CSSParser13ParseSelectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringE(%"class.blink::CSSSelectorList"* nonnull sret %6, %"class.blink::CSSParserContext"* %97, %"class.blink::StyleSheetContents"* null, %"class.WTF::String"* dereferenceable(8) %102) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %87
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %87, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #9
  %119 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %89, align 8
  %120 = icmp eq %"class.blink::CSSSelector"* %119, null
  br i1 %120, label %121, label %270

121:                                              ; preds = %118
  %122 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  %123 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #9
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %201, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %143

133:                                              ; preds = %126
  %134 = zext i32 %132 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #9
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !2

140:                                              ; preds = %133
  call void @llvm.trap() #9
  unreachable

141:                                              ; preds = %133
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %131, align 4
  br label %143

143:                                              ; preds = %141, %126
  %144 = phi i32 [ %142, %141 ], [ %132, %126 ]
  %145 = load atomic i32, i32* %127 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %158

148:                                              ; preds = %143
  %149 = zext i32 %144 to i33
  %150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #9
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !2

155:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

156:                                              ; preds = %148
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %131, align 4
  br label %158

158:                                              ; preds = %156, %143
  %159 = phi i32 [ %157, %156 ], [ %144, %143 ]
  %160 = load atomic i32, i32* %127 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  %164 = add i32 %159, -1
  store i32 %164, i32* %131, align 4
  br label %165

165:                                              ; preds = %163, %158
  %166 = phi i32 [ %164, %163 ], [ %159, %158 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %169

169:                                              ; preds = %165, %168
  %170 = load atomic i32, i32* %127 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %184

173:                                              ; preds = %169
  %174 = load i32, i32* %131, align 4
  %175 = zext i32 %174 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #9
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !2

181:                                              ; preds = %173
  call void @llvm.trap() #9
  unreachable

182:                                              ; preds = %173
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %131, align 4
  br label %184

184:                                              ; preds = %169, %182
  %185 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.1 to i64), i64* %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %186, align 8
  %187 = load atomic i32, i32* %127 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %205

190:                                              ; preds = %184
  %191 = load i32, i32* %131, align 4
  %192 = zext i32 %191 to i33
  %193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #9
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !2

198:                                              ; preds = %190
  call void @llvm.trap() #9
  unreachable

199:                                              ; preds = %190
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %131, align 4
  br label %205

201:                                              ; preds = %121
  %202 = bitcast %"class.WTF::StringAppend"* %10 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.1 to i64), i64* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8** %204, align 8
  br label %217

205:                                              ; preds = %199, %184
  %206 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8** %206, align 8
  %207 = load atomic i32, i32* %127 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = load i32, i32* %131, align 4
  br i1 %209, label %211, label %213

211:                                              ; preds = %205
  %212 = add i32 %210, -1
  store i32 %212, i32* %131, align 4
  br label %213

213:                                              ; preds = %211, %205
  %214 = phi i32 [ %212, %211 ], [ %210, %205 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %217

217:                                              ; preds = %201, %213, %216
  %218 = phi %"class.WTF::StringImpl"** [ %203, %201 ], [ %186, %213 ], [ %186, %216 ]
  %219 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %10)
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %220, align 8
  %221 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %222 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %221, align 8
  %223 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %222, align 8
  call void %223(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #9
  br label %239

239:                                              ; preds = %217, %235, %238
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #9
  br label %255

255:                                              ; preds = %239, %251, %254
  br i1 %125, label %269, label %256

256:                                              ; preds = %255
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %269

269:                                              ; preds = %255, %265, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #9
  br label %376

270:                                              ; preds = %118
  %271 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 2
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 256
  br i1 %273, label %274, label %313

274:                                              ; preds = %270
  %275 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %22, align 8
  %276 = load i32, i32* %25, align 8
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %275, i64 %277
  %279 = icmp eq i32 %276, 0
  br i1 %279, label %287, label %280

280:                                              ; preds = %274, %284
  %281 = phi %"struct.WTF::KeyValuePair.465"* [ %285, %284 ], [ %275, %274 ]
  %282 = bitcast %"struct.WTF::KeyValuePair.465"* %281 to i64*
  %283 = load i64, i64* %282, align 8
  switch i64 %283, label %287 [
    i64 -1, label %284
    i64 0, label %284
  ]

284:                                              ; preds = %280, %280
  %285 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %281, i64 1
  %286 = icmp eq %"struct.WTF::KeyValuePair.465"* %285, %278
  br i1 %286, label %313, label %280

287:                                              ; preds = %280, %274
  %288 = phi %"struct.WTF::KeyValuePair.465"* [ %275, %274 ], [ %281, %280 ]
  %289 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0
  %290 = icmp eq %"struct.WTF::KeyValuePair.465"* %278, %288
  br i1 %290, label %313, label %291

291:                                              ; preds = %287
  call void @_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.465"* %288) #9
  %292 = bitcast %"struct.WTF::KeyValuePair.465"* %288 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %292, align 8
  %293 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 3
  %294 = load i32, i32* %293, align 8
  %295 = add i32 %294, 1
  %296 = and i32 %295, 2147483647
  %297 = and i32 %294, -2147483648
  %298 = or i32 %296, %297
  store i32 %298, i32* %293, align 8
  %299 = load i32, i32* %271, align 4
  %300 = add i32 %299, -1
  store i32 %300, i32* %271, align 4
  %301 = mul i32 %300, 6
  %302 = load i32, i32* %25, align 8
  %303 = icmp ult i32 %301, %302
  %304 = icmp ugt i32 %302, 8
  %305 = and i1 %303, %304
  br i1 %305, label %306, label %313

306:                                              ; preds = %291
  %307 = lshr i32 %302, 1
  %308 = zext i32 %307 to i64
  %309 = shl nuw nsw i64 %308, 4
  %310 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %309, i8* getelementptr inbounds ([178 x i8], [178 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %310, i8 0, i64 %309, i1 false) #9
  %311 = bitcast i8* %310 to %"struct.WTF::KeyValuePair.465"*
  %312 = call %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.462"* %289, %"struct.WTF::KeyValuePair.465"* %311, i32 %307, %"struct.WTF::KeyValuePair.465"* null) #9
  br label %313

313:                                              ; preds = %284, %306, %291, %287, %270
  %314 = bitcast %"class.std::__1::unique_ptr.466"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #9
  %315 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  %316 = load i64, i64* %315, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %89, align 8
  %317 = bitcast %"class.blink::CSSSelectorList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317)
  %318 = call noalias i8* @malloc(i64 40) #9
  %319 = bitcast i8* %318 to %"class.blink::SelectorQuery"*
  %320 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %12, i64 0, i32 0
  %321 = bitcast %"class.blink::CSSSelectorList"* %5 to i64*
  store i64 %316, i64* %321, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %320, align 8
  call void @_ZN5blink13SelectorQueryC2ENS_15CSSSelectorListE(%"class.blink::SelectorQuery"* %319, %"class.blink::CSSSelectorList"* nonnull %5) #9
  %322 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %5, i64 0, i32 0
  %323 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %322, align 8
  %324 = icmp eq %"class.blink::CSSSelector"* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %313
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %5) #9
  br label %326

326:                                              ; preds = %313, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317)
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.466"* %11, i64 0, i32 0, i32 0, i32 0
  %328 = bitcast %"class.std::__1::unique_ptr.466"* %11 to i8**
  store i8* %318, i8** %328, align 8
  %329 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0
  %330 = call { %"struct.WTF::KeyValuePair.465"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.462"* %329, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.std::__1::unique_ptr.466"* nonnull dereferenceable(8) %11) #9
  %331 = extractvalue { %"struct.WTF::KeyValuePair.465"*, i8 } %330, 0
  %332 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %331, i64 0, i32 1, i32 0, i32 0, i32 0
  %333 = load %"class.blink::SelectorQuery"*, %"class.blink::SelectorQuery"** %332, align 8
  %334 = load %"class.blink::SelectorQuery"*, %"class.blink::SelectorQuery"** %327, align 8
  store %"class.blink::SelectorQuery"* null, %"class.blink::SelectorQuery"** %327, align 8
  %335 = icmp eq %"class.blink::SelectorQuery"* %334, null
  br i1 %335, label %372, label %336

336:                                              ; preds = %326
  %337 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %334, i64 0, i32 2, i32 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #9
  br label %353

353:                                              ; preds = %352, %349, %336
  %354 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %334, i64 0, i32 1, i32 0, i32 0, i32 0
  %355 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %354, align 8
  %356 = icmp eq %"class.blink::CSSSelector"** %355, null
  %357 = bitcast %"class.blink::CSSSelector"** %355 to i8*
  br i1 %356, label %364, label %358, !prof !3

358:                                              ; preds = %353
  %359 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %334, i64 0, i32 1, i32 0, i32 0, i32 2
  %360 = load i32, i32* %359, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %363, label %362, !prof !2

362:                                              ; preds = %358
  store i32 0, i32* %359, align 4
  br label %363

363:                                              ; preds = %362, %358
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %357) #9
  store %"class.blink::CSSSelector"** null, %"class.blink::CSSSelector"*** %354, align 8
  br label %364

364:                                              ; preds = %363, %353
  %365 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %334, i64 0, i32 0, i32 0
  %366 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %365, align 8
  %367 = icmp eq %"class.blink::CSSSelector"* %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %334, i64 0, i32 0
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %369) #9
  br label %370

370:                                              ; preds = %364, %368
  %371 = bitcast %"class.blink::SelectorQuery"* %334 to i8*
  call void @free(i8* %371) #9
  br label %372

372:                                              ; preds = %326, %370
  %373 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %320, align 8
  %374 = icmp eq %"class.blink::CSSSelector"* %373, null
  br i1 %374, label %376, label %375

375:                                              ; preds = %372
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %12) #9
  br label %376

376:                                              ; preds = %375, %372, %269
  %377 = phi i8* [ %122, %269 ], [ %314, %372 ], [ %314, %375 ]
  %378 = phi %"class.blink::SelectorQuery"* [ null, %269 ], [ %333, %372 ], [ %333, %375 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #9
  %379 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %89, align 8
  %380 = icmp eq %"class.blink::CSSSelector"* %379, null
  br i1 %380, label %382, label %381

381:                                              ; preds = %376
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %6) #9
  br label %382

382:                                              ; preds = %376, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #9
  br label %383

383:                                              ; preds = %84, %382, %20
  %384 = phi %"class.blink::SelectorQuery"* [ null, %20 ], [ %86, %84 ], [ %378, %382 ]
  ret %"class.blink::SelectorQuery"* %384
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink9CSSParser13ParseSelectorEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringE(%"class.blink::CSSSelectorList"* sret, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.752"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %3, i8* %8) #9
  %9 = bitcast %"class.WTF::StringTypeAdapter.752"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %2, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18SelectorQueryCache10InvalidateEv(%"class.blink::SelectorQueryCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.465"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi i64 [ 0, %9 ], [ %19, %18 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair.465"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %18, label %17

17:                                               ; preds = %11
  tail call void @_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.465"* %13) #9
  br label %18

18:                                               ; preds = %17, %11
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, %10
  br i1 %20, label %21, label %11

21:                                               ; preds = %18, %5
  %22 = bitcast %"struct.WTF::KeyValuePair.465"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #9
  %23 = bitcast %"class.blink::SelectorQueryCache"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %6, align 8
  %24 = getelementptr inbounds %"class.blink::SelectorQueryCache", %"class.blink::SelectorQueryCache"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %24, align 4
  br label %25

25:                                               ; preds = %1, %21
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery11ExecuteSlowINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %6 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %44, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %14 = bitcast %"class.blink::Node"* %13 to %"class.blink::Node"**
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %17 = icmp eq %"class.blink::Node"* %15, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %28

23:                                               ; preds = %28
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %18, %23
  %29 = phi %"class.blink::Node"* [ %31, %23 ], [ %15, %18 ]
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %44, label %23

33:                                               ; preds = %23
  %34 = bitcast %"class.blink::Node"* %31 to %"class.blink::Element"*
  br label %35

35:                                               ; preds = %12, %18, %33
  %36 = phi %"class.blink::Element"* [ %16, %12 ], [ %16, %18 ], [ %34, %33 ]
  %37 = icmp eq %"class.blink::Element"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::Element"** %4 to i8*
  %40 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  br label %45

44:                                               ; preds = %28, %72, %79, %98, %90, %7, %3, %35
  ret void

45:                                               ; preds = %101, %38
  %46 = phi %"class.blink::Element"* [ %36, %38 ], [ %102, %101 ]
  %47 = call zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %1, %"class.blink::Element"* nonnull dereferenceable(104) %46)
  br i1 %47, label %48, label %68

48:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  store %"class.blink::Element"* %46, %"class.blink::Element"** %4, align 8
  %49 = load i32, i32* %40, align 4
  %50 = load i32, i32* %41, align 8
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %66, label %52, !prof !2

52:                                               ; preds = %48
  %53 = ptrtoint %"class.blink::Element"* %46 to i64
  %54 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %42, align 8
  %55 = zext i32 %49 to i64
  %56 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %54, i64 %55
  %57 = bitcast %"class.blink::Member.55"* %56 to i64*
  store atomic i64 %53, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::Element"* %46 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %61) #9
  br label %63

63:                                               ; preds = %60, %52
  %64 = load i32, i32* %40, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %40, align 4
  br label %67

66:                                               ; preds = %48
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %43, %"class.blink::Element"** nonnull dereferenceable(8) %4) #9
  br label %67

67:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %68

68:                                               ; preds = %45, %67
  %69 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %46, i64 0, i32 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %82

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %46, i64 0, i32 0, i32 0
  %74 = icmp eq %"class.blink::Node"* %73, %5
  br i1 %74, label %44, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %46, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %73, %"class.blink::Node"* %5) #9
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %44, label %82

82:                                               ; preds = %79, %75, %68
  %83 = phi %"class.blink::Node"* [ %70, %68 ], [ %77, %75 ], [ %80, %79 ]
  br label %84

84:                                               ; preds = %82, %98
  %85 = phi %"class.blink::Node"* [ %99, %98 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %84
  %91 = icmp eq %"class.blink::Node"* %85, %5
  br i1 %91, label %44, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 5, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %85, %"class.blink::Node"* %5) #9
  br label %98

98:                                               ; preds = %96, %92
  %99 = phi %"class.blink::Node"* [ %97, %96 ], [ %94, %92 ]
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %44, label %84

101:                                              ; preds = %84
  %102 = bitcast %"class.blink::Node"* %85 to %"class.blink::Element"*
  br label %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery13ExecuteWithIdINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %5 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %8 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %9 = alloca %"class.blink::Element"*, align 8
  %10 = alloca %"class.blink::SelectorChecker", align 8
  %11 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %12 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %11, i32 0) #9
  %13 = bitcast %"class.blink::CSSSelector"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = bitcast %"class.blink::SelectorChecker"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %10, i64 0, i32 3
  %20 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #9
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %10, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #9
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #9
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %3, %26, %41
  %44 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %10, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %10, i64 0, i32 5
  store i32 3, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %10, i64 0, i32 6
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 4, i32 0, i32 0
  %49 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %48, align 8
  %50 = icmp eq %"class.blink::TreeOrderedMap"* %49, null
  br i1 %50, label %192, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %52, align 8
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  %55 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  br i1 %54, label %108, label %57

57:                                               ; preds = %51
  %58 = add i32 %56, -1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = lshr i32 %63, 8
  %65 = and i32 %64, %58
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %57
  %72 = xor i32 %64, -1
  %73 = lshr i32 %63, 31
  %74 = add nsw i32 %73, %72
  %75 = shl i32 %74, 12
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 7
  %78 = xor i32 %77, %76
  %79 = shl i32 %78, 2
  %80 = xor i32 %79, %78
  %81 = lshr i32 %80, 20
  %82 = xor i32 %81, %80
  %83 = or i32 %82, 1
  %84 = zext i32 %83 to i64
  br label %85

85:                                               ; preds = %95, %71
  %86 = phi %"struct.WTF::KeyValuePair"* [ %67, %71 ], [ %100, %95 ]
  %87 = phi i64 [ %66, %71 ], [ %99, %95 ]
  %88 = phi i64 [ 0, %71 ], [ %97, %95 ]
  %89 = bitcast %"struct.WTF::KeyValuePair"* %86 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = icmp ne i8* %90, inttoptr (i64 -1 to i8*)
  %92 = bitcast i8* %90 to %"class.WTF::StringImpl"*
  %93 = icmp eq %"class.WTF::StringImpl"* %61, %92
  %94 = and i1 %91, %93
  br i1 %94, label %104, label %95

95:                                               ; preds = %85
  %96 = icmp eq i64 %88, 0
  %97 = select i1 %96, i64 %84, i64 %88
  %98 = add i64 %97, %87
  %99 = and i64 %98, %59
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %99
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %108, label %85

104:                                              ; preds = %85
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %86, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = zext i32 %56 to i64
  br label %111

108:                                              ; preds = %95, %104, %57, %51
  %109 = zext i32 %56 to i64
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %109
  br label %111

111:                                              ; preds = %108, %106
  %112 = phi i64 [ %107, %106 ], [ %109, %108 ]
  %113 = phi %"struct.WTF::KeyValuePair"* [ %86, %106 ], [ %110, %108 ]
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 %112
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %113, %114
  br i1 %115, label %192, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 1, i32 0, i32 0
  %118 = load %"class.blink::TreeOrderedMap::MapEntry"*, %"class.blink::TreeOrderedMap::MapEntry"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::TreeOrderedMap::MapEntry", %"class.blink::TreeOrderedMap::MapEntry"* %118, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp ugt i32 %120, 1
  br i1 %121, label %122, label %192

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %124 = load i8, i8* %123, align 8
  %125 = and i8 %124, 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  tail call void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %257

128:                                              ; preds = %122
  %129 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %47) #9
  %130 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %129, i64 0, i32 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %131, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %257, label %137

137:                                              ; preds = %128
  %138 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i8*
  %139 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 1
  %140 = bitcast %"class.blink::Element"** %139 to i64*
  %141 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 6
  %143 = bitcast %"class.blink::Element"** %141 to i8*
  %144 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 7
  %145 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 8
  %146 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 9
  %147 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 11
  %148 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 12
  %149 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 13
  %150 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i64*
  %151 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 3
  %152 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %4, i64 0, i32 0
  %153 = bitcast %"class.blink::Element"** %6 to i8*
  %154 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  br label %158

158:                                              ; preds = %137, %189
  %159 = phi %"class.blink::Member.55"* [ %131, %137 ], [ %190, %189 ]
  %160 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.blink::Element"*, %"class.blink::Element"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %161, i64 0, i32 0, i32 0
  %163 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %162, %"class.blink::Node"* %15) #9
  br i1 %163, label %164, label %189

164:                                              ; preds = %158
  %165 = bitcast %"class.blink::Member.55"* %159 to i64*
  %166 = load i64, i64* %165, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %138) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 56, i1 false) #9
  store i64 %166, i64* %140, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %142, align 2
  store i8 0, i8* %144, align 1
  store i8 0, i8* %145, align 4
  store i8 0, i8* %146, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %147, align 8
  store i8 0, i8* %148, align 8
  store i8 0, i8* %149, align 1
  store i64 %14, i64* %150, align 8
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %151, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %152) #9
  store i8 0, i8* %152, align 1
  %167 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %10, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %5, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %152) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %138) #9
  br i1 %167, label %168, label %189

168:                                              ; preds = %164
  %169 = load %"class.blink::Element"*, %"class.blink::Element"** %160, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #9
  store %"class.blink::Element"* %169, %"class.blink::Element"** %6, align 8
  %170 = load i32, i32* %154, align 4
  %171 = load i32, i32* %155, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %187, label %173, !prof !2

173:                                              ; preds = %168
  %174 = ptrtoint %"class.blink::Element"* %169 to i64
  %175 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %156, align 8
  %176 = zext i32 %170 to i64
  %177 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %175, i64 %176
  %178 = bitcast %"class.blink::Member.55"* %177 to i64*
  store atomic i64 %174, i64* %178 monotonic, align 8
  %179 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %173
  %182 = bitcast %"class.blink::Element"* %169 to i8*
  %183 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %182) #9
  br label %184

184:                                              ; preds = %181, %173
  %185 = load i32, i32* %154, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %154, align 4
  br label %188

187:                                              ; preds = %168
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %157, %"class.blink::Element"** nonnull dereferenceable(8) %6) #9
  br label %188

188:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #9
  br label %189

189:                                              ; preds = %164, %188, %158
  %190 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %159, i64 1
  %191 = icmp eq %"class.blink::Member.55"* %190, %135
  br i1 %191, label %257, label %158

192:                                              ; preds = %111, %43, %116
  %193 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %47) #9
  %194 = icmp eq %"class.blink::Element"* %193, null
  br i1 %194, label %257, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %197 = load i8, i8* %196, align 8
  %198 = and i8 %197, 1
  %199 = icmp eq i8 %198, 0
  %200 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %193, i64 0, i32 0, i32 0
  %201 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %200, %"class.blink::Node"* %15) #9
  br i1 %199, label %244, label %202

202:                                              ; preds = %195
  br i1 %201, label %203, label %257

203:                                              ; preds = %202
  %204 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %204) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 56, i1 false) #9
  %205 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 1
  store %"class.blink::Element"* %193, %"class.blink::Element"** %205, align 8
  %206 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 2
  %207 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 6
  %208 = bitcast %"class.blink::Element"** %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %207, align 2
  %209 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 7
  store i8 0, i8* %209, align 1
  %210 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 8
  store i8 0, i8* %210, align 4
  %211 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 9
  store i8 0, i8* %211, align 1
  %212 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 11
  store %"class.blink::Element"* null, %"class.blink::Element"** %212, align 8
  %213 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 12
  store i8 0, i8* %213, align 8
  %214 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 13
  store i8 0, i8* %214, align 1
  %215 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8 to i64*
  store i64 %14, i64* %215, align 8
  %216 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %8, i64 0, i32 3
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %216, align 8
  %217 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %217) #9
  store i8 0, i8* %217, align 1
  %218 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %10, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %8, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %217) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %204) #9
  br i1 %218, label %219, label %257

219:                                              ; preds = %203
  %220 = bitcast %"class.blink::Element"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #9
  store %"class.blink::Element"* %193, %"class.blink::Element"** %9, align 8
  %221 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %222, %224
  br i1 %225, label %241, label %226, !prof !2

226:                                              ; preds = %219
  %227 = ptrtoint %"class.blink::Element"* %193 to i64
  %228 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %229 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %228, align 8
  %230 = zext i32 %222 to i64
  %231 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %229, i64 %230
  %232 = bitcast %"class.blink::Member.55"* %231 to i64*
  store atomic i64 %227, i64* %232 monotonic, align 8
  %233 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %226
  %236 = bitcast %"class.blink::Element"* %193 to i8*
  %237 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %236) #9
  br label %238

238:                                              ; preds = %235, %226
  %239 = load i32, i32* %221, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %221, align 4
  br label %243

241:                                              ; preds = %219
  %242 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %242, %"class.blink::Element"** nonnull dereferenceable(8) %9) #9
  br label %243

243:                                              ; preds = %238, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #9
  br label %257

244:                                              ; preds = %195
  %245 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %193, i64 0, i32 0
  %246 = select i1 %201, %"class.blink::ContainerNode"* %245, %"class.blink::ContainerNode"* %1
  %247 = load i8, i8* %196, align 8
  %248 = and i8 %247, 2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %246, i64 0, i32 0
  %252 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %251) #9
  br label %253

253:                                              ; preds = %244, %250
  %254 = phi %"class.blink::ContainerNode"* [ %252, %250 ], [ %246, %244 ]
  %255 = icmp eq %"class.blink::ContainerNode"* %254, null
  br i1 %255, label %257, label %256

256:                                              ; preds = %253
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %254, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %257

257:                                              ; preds = %189, %128, %192, %202, %243, %203, %253, %256, %127
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #9
  br label %273

273:                                              ; preds = %257, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSSelector"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 {
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %7 = alloca %"class.blink::Element"*, align 8
  %8 = alloca %"class.blink::SelectorChecker", align 8
  %9 = bitcast %"class.blink::SelectorChecker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3
  %11 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #9
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %4, %17, %32
  %35 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 4
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 5
  store i32 3, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 6
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %39 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %39, label %93, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %93, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1
  %47 = bitcast %"class.blink::Node"* %46 to %"class.blink::Node"**
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = bitcast %"class.blink::Node"* %48 to %"class.blink::Element"*
  %50 = icmp eq %"class.blink::Node"* %48, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 12
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %68, label %61

56:                                               ; preds = %61
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %51, %56
  %62 = phi %"class.blink::Node"* [ %64, %56 ], [ %48, %51 ]
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 5, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %93, label %56

66:                                               ; preds = %56
  %67 = bitcast %"class.blink::Node"* %64 to %"class.blink::Element"*
  br label %68

68:                                               ; preds = %45, %51, %66
  %69 = phi %"class.blink::Element"* [ %49, %45 ], [ %49, %51 ], [ %67, %66 ]
  %70 = icmp eq %"class.blink::Element"* %69, null
  br i1 %70, label %93, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %73 = icmp eq %"class.blink::CSSSelector"* %2, null
  %74 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i8*
  %75 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 6
  %79 = bitcast %"class.blink::Element"** %77 to i8*
  %80 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 7
  %81 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 8
  %82 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 9
  %83 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 11
  %84 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 12
  %85 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 13
  %86 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 3
  %87 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  %88 = bitcast %"class.blink::Element"** %7 to i8*
  %89 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0
  br label %110

93:                                               ; preds = %61, %171, %178, %197, %189, %40, %34, %68
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #9
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  ret void

110:                                              ; preds = %200, %71
  %111 = phi %"class.blink::Element"* [ %69, %71 ], [ %201, %200 ]
  %112 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %111, i64 0, i32 3, i32 0, i32 0
  %113 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %112, align 8
  %114 = icmp eq %"class.blink::ElementData"* %113, null
  br i1 %114, label %167, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %113, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %116, align 8
  %118 = icmp eq %"class.blink::SpaceSplitString::Data"* %117, null
  br i1 %118, label %167, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %117, i64 0, i32 2, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %117, i64 0, i32 2, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %121, i64 %124
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %167, label %127

127:                                              ; preds = %119
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  br label %129

129:                                              ; preds = %134, %127
  %130 = phi %"class.WTF::AtomicString"* [ %121, %127 ], [ %135, %134 ]
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, %128
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 1
  %136 = icmp ult %"class.WTF::AtomicString"* %135, %125
  br i1 %136, label %129, label %167

137:                                              ; preds = %129
  %138 = ptrtoint %"class.WTF::AtomicString"* %130 to i64
  %139 = ptrtoint %"class.WTF::AtomicString"* %121 to i64
  %140 = sub i64 %138, %139
  %141 = lshr exact i64 %140, 3
  %142 = trunc i64 %141 to i32
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %167, label %144

144:                                              ; preds = %137
  br i1 %73, label %147, label %145

145:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %74) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 56, i1 false) #9
  store %"class.blink::Element"* %111, %"class.blink::Element"** %76, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %78, align 2
  store i8 0, i8* %80, align 1
  store i8 0, i8* %81, align 4
  store i8 0, i8* %82, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %83, align 8
  store i8 0, i8* %84, align 8
  store i8 0, i8* %85, align 1
  store %"class.blink::CSSSelector"* %2, %"class.blink::CSSSelector"** %75, align 8
  store %"class.blink::ContainerNode"* %0, %"class.blink::ContainerNode"** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #9
  store i8 0, i8* %87, align 1
  %146 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %8, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %6, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %74) #9
  br i1 %146, label %147, label %167

147:                                              ; preds = %144, %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #9
  store %"class.blink::Element"* %111, %"class.blink::Element"** %7, align 8
  %148 = load i32, i32* %89, align 4
  %149 = load i32, i32* %90, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %165, label %151, !prof !2

151:                                              ; preds = %147
  %152 = ptrtoint %"class.blink::Element"* %111 to i64
  %153 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %91, align 8
  %154 = zext i32 %148 to i64
  %155 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %153, i64 %154
  %156 = bitcast %"class.blink::Member.55"* %155 to i64*
  store atomic i64 %152, i64* %156 monotonic, align 8
  %157 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %151
  %160 = bitcast %"class.blink::Element"* %111 to i8*
  %161 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %160) #9
  br label %162

162:                                              ; preds = %159, %151
  %163 = load i32, i32* %89, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %89, align 4
  br label %166

165:                                              ; preds = %147
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %92, %"class.blink::Element"** nonnull dereferenceable(8) %7) #9
  br label %166

166:                                              ; preds = %162, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #9
  br label %167

167:                                              ; preds = %134, %137, %110, %119, %115, %145, %166
  %168 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %111, i64 0, i32 0, i32 1, i32 0, i32 0
  %169 = load %"class.blink::Node"*, %"class.blink::Node"** %168, align 8
  %170 = icmp eq %"class.blink::Node"* %169, null
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %111, i64 0, i32 0, i32 0
  %173 = icmp eq %"class.blink::Node"* %172, %38
  br i1 %173, label %93, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %111, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %178, label %181

178:                                              ; preds = %174
  %179 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %172, %"class.blink::Node"* %38) #9
  %180 = icmp eq %"class.blink::Node"* %179, null
  br i1 %180, label %93, label %181

181:                                              ; preds = %178, %174, %167
  %182 = phi %"class.blink::Node"* [ %169, %167 ], [ %176, %174 ], [ %179, %178 ]
  br label %183

183:                                              ; preds = %181, %197
  %184 = phi %"class.blink::Node"* [ %198, %197 ], [ %182, %181 ]
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = and i32 %186, 12
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %183
  %190 = icmp eq %"class.blink::Node"* %184, %38
  br i1 %190, label %93, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 5, i32 0, i32 0
  %193 = load %"class.blink::Node"*, %"class.blink::Node"** %192, align 8
  %194 = icmp eq %"class.blink::Node"* %193, null
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  %196 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %184, %"class.blink::Node"* %38) #9
  br label %197

197:                                              ; preds = %195, %191
  %198 = phi %"class.blink::Node"* [ %196, %195 ], [ %193, %191 ]
  %199 = icmp eq %"class.blink::Node"* %198, null
  br i1 %199, label %93, label %183

200:                                              ; preds = %183
  %201 = bitcast %"class.blink::Node"* %184 to %"class.blink::Element"*
  br label %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %5 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %4, i32 0) #9
  %6 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %5, align 8
  %7 = icmp eq %"class.blink::CSSSelector"* %6, null
  br i1 %7, label %236, label %8

8:                                                ; preds = %3, %228
  %9 = phi %"class.blink::CSSSelector"* [ %233, %228 ], [ %6, %3 ]
  %10 = phi i8 [ %230, %228 ], [ 0, %3 ]
  %11 = phi i8 [ %229, %228 ], [ 1, %3 ]
  %12 = and i8 %10, 1
  %13 = icmp eq i8 %12, 0
  %14 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 240
  %17 = icmp eq i32 %16, 48
  %18 = and i1 %13, %17
  br i1 %18, label %19, label %223

19:                                               ; preds = %8
  %20 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %21 = and i8 %11, 1
  %22 = icmp eq i8 %21, 0
  %23 = and i32 %15, 262144
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  br i1 %24, label %30, label %26

26:                                               ; preds = %19
  %27 = bitcast %"union.blink::CSSSelector::DataUnion"* %25 to %"struct.blink::CSSSelector::RareData"**
  %28 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %28, i64 0, i32 1
  br label %32

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %25, i64 0, i32 0
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.WTF::AtomicString"* [ %29, %26 ], [ %31, %30 ]
  br i1 %22, label %37, label %34

34:                                               ; preds = %32
  %35 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %4, i32 0) #9
  %36 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %35, align 8
  tail call fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %33, %"class.blink::CSSSelector"* %36, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %237

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 12
  %41 = icmp ne i32 %40, 0
  %42 = icmp eq %"class.blink::ContainerNode"* %1, null
  %43 = or i1 %42, %41
  br i1 %43, label %92, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %85, %44
  %47 = phi %"class.blink::ContainerNode"* [ %1, %44 ], [ %83, %85 ]
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 1, i32 0, i32 1
  %49 = bitcast i32* %48 to %"class.blink::ElementData"**
  %50 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %49, align 8
  %51 = icmp eq %"class.blink::ElementData"* %50, null
  br i1 %51, label %81, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %50, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %53, align 8
  %55 = icmp eq %"class.blink::SpaceSplitString::Data"* %54, null
  br i1 %55, label %81, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %54, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %56
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  br label %66

66:                                               ; preds = %71, %64
  %67 = phi %"class.WTF::AtomicString"* [ %58, %64 ], [ %72, %71 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, %65
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 1
  %73 = icmp ult %"class.WTF::AtomicString"* %72, %62
  br i1 %73, label %66, label %81

74:                                               ; preds = %66
  %75 = ptrtoint %"class.WTF::AtomicString"* %67 to i64
  %76 = ptrtoint %"class.WTF::AtomicString"* %58 to i64
  %77 = sub i64 %75, %76
  %78 = lshr exact i64 %77, 3
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %236

81:                                               ; preds = %71, %74, %56, %52, %46
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 0, i32 0
  %83 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %82) #9
  %84 = icmp eq %"class.blink::ContainerNode"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %83, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %46, label %90

90:                                               ; preds = %85, %81
  %91 = load i32, i32* %20, align 8
  br label %92

92:                                               ; preds = %90, %37
  %93 = phi i32 [ %91, %90 ], [ %15, %37 ]
  %94 = and i32 %93, 262144
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = bitcast %"union.blink::CSSSelector::DataUnion"* %25 to %"struct.blink::CSSSelector::RareData"**
  %98 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %98, i64 0, i32 1
  br label %102

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %25, i64 0, i32 0
  br label %102

102:                                              ; preds = %96, %100
  %103 = phi %"class.WTF::AtomicString"* [ %99, %96 ], [ %101, %100 ]
  %104 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %237, label %107

107:                                              ; preds = %102, %113
  %108 = phi %"class.blink::Node"* [ %115, %113 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %108, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 12
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %108, i64 0, i32 5, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %237, label %107

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  br label %122

120:                                              ; preds = %171, %206
  %121 = phi %"class.blink::Node"* [ %207, %206 ], [ %172, %171 ]
  br label %122

122:                                              ; preds = %120, %117
  %123 = phi %"class.blink::Node"* [ %108, %117 ], [ %121, %120 ]
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 1, i32 3
  %125 = bitcast %"class.blink::Member.17"* %124 to %"class.blink::ElementData"**
  %126 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %125, align 8
  %127 = icmp eq %"class.blink::ElementData"* %126, null
  br i1 %127, label %150, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %126, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %129, align 8
  %131 = icmp eq %"class.blink::SpaceSplitString::Data"* %130, null
  br i1 %131, label %150, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %130, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %130, i64 0, i32 2, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %134, i64 %137
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %132
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  br label %142

142:                                              ; preds = %147, %140
  %143 = phi %"class.WTF::AtomicString"* [ %134, %140 ], [ %148, %147 ]
  %144 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, %141
  br i1 %146, label %152, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 1
  %149 = icmp ult %"class.WTF::AtomicString"* %148, %138
  br i1 %149, label %142, label %150

150:                                              ; preds = %147, %128, %132, %122
  %151 = bitcast %"class.blink::Node"* %123 to %"class.blink::ContainerNode"*
  br label %188

152:                                              ; preds = %142
  %153 = ptrtoint %"class.WTF::AtomicString"* %143 to i64
  %154 = ptrtoint %"class.WTF::AtomicString"* %134 to i64
  %155 = sub i64 %153, %154
  %156 = lshr exact i64 %155, 3
  %157 = trunc i64 %156 to i32
  %158 = icmp eq i32 %157, -1
  %159 = bitcast %"class.blink::Node"* %123 to %"class.blink::ContainerNode"*
  br i1 %158, label %188, label %160

160:                                              ; preds = %152
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %159, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  %161 = icmp eq %"class.blink::Node"* %123, %119
  br i1 %161, label %237, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 0, i32 5, i32 0, i32 0
  %164 = load %"class.blink::Node"*, %"class.blink::Node"** %163, align 8
  %165 = icmp eq %"class.blink::Node"* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %162
  %167 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %123, %"class.blink::Node"* %119) #9
  %168 = icmp eq %"class.blink::Node"* %167, null
  br i1 %168, label %237, label %169

169:                                              ; preds = %166, %162
  %170 = phi %"class.blink::Node"* [ %164, %162 ], [ %167, %166 ]
  br label %171

171:                                              ; preds = %169, %185
  %172 = phi %"class.blink::Node"* [ %186, %185 ], [ %170, %169 ]
  %173 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 0, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, 12
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %120, label %177

177:                                              ; preds = %171
  %178 = icmp eq %"class.blink::Node"* %172, %119
  br i1 %178, label %237, label %179

179:                                              ; preds = %177
  %180 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 0, i32 5, i32 0, i32 0
  %181 = load %"class.blink::Node"*, %"class.blink::Node"** %180, align 8
  %182 = icmp eq %"class.blink::Node"* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %172, %"class.blink::Node"* %119) #9
  br label %185

185:                                              ; preds = %183, %179
  %186 = phi %"class.blink::Node"* [ %184, %183 ], [ %181, %179 ]
  %187 = icmp eq %"class.blink::Node"* %186, null
  br i1 %187, label %237, label %171

188:                                              ; preds = %152, %150
  %189 = phi %"class.blink::ContainerNode"* [ %151, %150 ], [ %159, %152 ]
  %190 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 1
  %191 = bitcast %"class.blink::Node"* %190 to %"class.blink::Node"**
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %191, align 8
  %193 = icmp eq %"class.blink::Node"* %192, null
  br i1 %193, label %194, label %204

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %189, i64 0, i32 0
  %196 = icmp eq %"class.blink::ContainerNode"* %189, %1
  br i1 %196, label %237, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %189, i64 0, i32 0, i32 5, i32 0, i32 0
  %199 = load %"class.blink::Node"*, %"class.blink::Node"** %198, align 8
  %200 = icmp eq %"class.blink::Node"* %199, null
  br i1 %200, label %201, label %204

201:                                              ; preds = %197
  %202 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %195, %"class.blink::Node"* %119) #9
  %203 = icmp eq %"class.blink::Node"* %202, null
  br i1 %203, label %237, label %204

204:                                              ; preds = %201, %197, %188
  %205 = phi %"class.blink::Node"* [ %192, %188 ], [ %199, %197 ], [ %202, %201 ]
  br label %206

206:                                              ; preds = %204, %220
  %207 = phi %"class.blink::Node"* [ %221, %220 ], [ %205, %204 ]
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %207, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = and i32 %209, 12
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %120, label %212

212:                                              ; preds = %206
  %213 = icmp eq %"class.blink::Node"* %207, %119
  br i1 %213, label %237, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %207, i64 0, i32 5, i32 0, i32 0
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  %217 = icmp eq %"class.blink::Node"* %216, null
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %207, %"class.blink::Node"* %119) #9
  br label %220

220:                                              ; preds = %218, %214
  %221 = phi %"class.blink::Node"* [ %219, %218 ], [ %216, %214 ]
  %222 = icmp eq %"class.blink::Node"* %221, null
  br i1 %222, label %237, label %206

223:                                              ; preds = %8
  %224 = and i32 %15, 15
  switch i32 %224, label %225 [
    i32 0, label %228
    i32 3, label %226
    i32 4, label %226
  ]

225:                                              ; preds = %223
  br label %226

226:                                              ; preds = %223, %223, %225
  %227 = phi i8 [ 0, %225 ], [ 1, %223 ], [ 1, %223 ]
  br label %228

228:                                              ; preds = %223, %226
  %229 = phi i8 [ %11, %223 ], [ 0, %226 ]
  %230 = phi i8 [ %10, %223 ], [ %227, %226 ]
  %231 = and i32 %15, 131072
  %232 = icmp ne i32 %231, 0
  %233 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 1
  %234 = icmp eq %"class.blink::CSSSelector"* %233, null
  %235 = or i1 %234, %232
  br i1 %235, label %236, label %8

236:                                              ; preds = %228, %74, %3
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::HeapVector"* dereferenceable(16) %2)
  br label %237

237:                                              ; preds = %113, %194, %201, %160, %166, %185, %177, %212, %220, %102, %34, %236
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.59"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.55"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.59"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %8, align 8
  %10 = icmp eq %"class.blink::Member.55"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %8, align 8
  %26 = icmp eq %"class.blink::Member.55"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.55"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.59"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.59"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.55"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.55"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.59"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.59"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.6, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.8, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.55"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.55"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_29AllElementsSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %7 = alloca %"class.blink::Element"*, align 8
  %8 = alloca %"class.blink::SelectorChecker", align 8
  %9 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %10 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %9, i32 0) #9
  %11 = bitcast %"class.blink::CSSSelector"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::SelectorChecker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3
  %15 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %4, %21, %36
  %39 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 5
  store i32 3, i32* %40, align 4
  %41 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 6
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %43 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %43, label %95, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %95, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1
  %51 = bitcast %"class.blink::Node"* %50 to %"class.blink::Node"**
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = bitcast %"class.blink::Node"* %52 to %"class.blink::Element"*
  %54 = icmp eq %"class.blink::Node"* %52, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %72, label %65

60:                                               ; preds = %65
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 12
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %55, %60
  %66 = phi %"class.blink::Node"* [ %68, %60 ], [ %52, %55 ]
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %66, i64 0, i32 5, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %95, label %60

70:                                               ; preds = %60
  %71 = bitcast %"class.blink::Node"* %68 to %"class.blink::Element"*
  br label %72

72:                                               ; preds = %49, %55, %70
  %73 = phi %"class.blink::Element"* [ %53, %49 ], [ %53, %55 ], [ %71, %70 ]
  %74 = icmp eq %"class.blink::Element"* %73, null
  br i1 %74, label %95, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i8*
  %77 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 2
  %79 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 6
  %80 = bitcast %"class.blink::Element"** %78 to i8*
  %81 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 7
  %82 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 8
  %83 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 9
  %84 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 11
  %85 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 12
  %86 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 13
  %87 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i64*
  %88 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 3
  %89 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  %90 = bitcast %"class.blink::Element"** %7 to i8*
  %91 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0
  br label %112

95:                                               ; preds = %65, %139, %146, %165, %157, %44, %38, %72
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #9
  br label %111

111:                                              ; preds = %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #9
  ret void

112:                                              ; preds = %168, %75
  %113 = phi %"class.blink::Element"* [ %73, %75 ], [ %169, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %76) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 56, i1 false) #9
  store %"class.blink::Element"* %113, %"class.blink::Element"** %77, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %79, align 2
  store i8 0, i8* %81, align 1
  store i8 0, i8* %82, align 4
  store i8 0, i8* %83, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %84, align 8
  store i8 0, i8* %85, align 8
  store i8 0, i8* %86, align 1
  store i64 %12, i64* %87, align 8
  store %"class.blink::ContainerNode"* %2, %"class.blink::ContainerNode"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %89) #9
  store i8 0, i8* %89, align 1
  %114 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %8, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %6, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %89) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %76) #9
  br i1 %114, label %115, label %135

115:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  store %"class.blink::Element"* %113, %"class.blink::Element"** %7, align 8
  %116 = load i32, i32* %91, align 4
  %117 = load i32, i32* %92, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %133, label %119, !prof !2

119:                                              ; preds = %115
  %120 = ptrtoint %"class.blink::Element"* %113 to i64
  %121 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %93, align 8
  %122 = zext i32 %116 to i64
  %123 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %121, i64 %122
  %124 = bitcast %"class.blink::Member.55"* %123 to i64*
  store atomic i64 %120, i64* %124 monotonic, align 8
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %119
  %128 = bitcast %"class.blink::Element"* %113 to i8*
  %129 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %128) #9
  br label %130

130:                                              ; preds = %127, %119
  %131 = load i32, i32* %91, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %91, align 4
  br label %134

133:                                              ; preds = %115
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.59"* %94, %"class.blink::Element"** nonnull dereferenceable(8) %7) #9
  br label %134

134:                                              ; preds = %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  br label %135

135:                                              ; preds = %134, %112
  %136 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 1, i32 0, i32 0
  %137 = load %"class.blink::Node"*, %"class.blink::Node"** %136, align 8
  %138 = icmp eq %"class.blink::Node"* %137, null
  br i1 %138, label %139, label %149

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0
  %141 = icmp eq %"class.blink::Node"* %140, %42
  br i1 %141, label %95, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %113, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %144 = load %"class.blink::Node"*, %"class.blink::Node"** %143, align 8
  %145 = icmp eq %"class.blink::Node"* %144, null
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %140, %"class.blink::Node"* %42) #9
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %95, label %149

149:                                              ; preds = %146, %142, %135
  %150 = phi %"class.blink::Node"* [ %137, %135 ], [ %144, %142 ], [ %147, %146 ]
  br label %151

151:                                              ; preds = %149, %165
  %152 = phi %"class.blink::Node"* [ %166, %165 ], [ %150, %149 ]
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 12
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %151
  %158 = icmp eq %"class.blink::Node"* %152, %42
  br i1 %158, label %95, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 5, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %152, %"class.blink::Node"* %42) #9
  br label %165

165:                                              ; preds = %163, %159
  %166 = phi %"class.blink::Node"* [ %164, %163 ], [ %161, %159 ]
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %95, label %151

168:                                              ; preds = %151
  %169 = bitcast %"class.blink::Node"* %152 to %"class.blink::Element"*
  br label %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %24, i64 %25
  ret %"class.blink::CSSSelector"** %26
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_7ElementEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = bitcast %"class.blink::HeapVector"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #9
  br label %14

14:                                               ; preds = %11, %2
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #9
  br label %21

21:                                               ; preds = %14, %17
  %22 = bitcast %"class.blink::HeapVector"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %3, align 8
  store atomic i64 %24, i64* %22 monotonic, align 8
  store atomic i64 %23, i64* %3 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %5, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %7, align 4
  store i32 %29, i32* %28, align 4
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  br label %37

37:                                               ; preds = %33, %21
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = bitcast %"class.blink::HeapVector"* %1 to i8**
  br i1 %39, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %40, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #9
  br label %44

44:                                               ; preds = %37, %41
  %45 = load i8*, i8** %40, align 8
  store atomic i64 %4, i64* %22 monotonic, align 8
  store i32 %6, i32* %25, align 4
  store i32 %8, i32* %28, align 4
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %4 to i8*
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #9
  br label %51

51:                                               ; preds = %48, %44
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #9
  br label %56

56:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StaticNodeTypeListINS_7ElementEED0Ev(%"class.blink::StaticNodeTypeList"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18StaticNodeTypeListINS_7ElementEE5TraceEPNS_7VisitorE(%"class.blink::StaticNodeTypeList"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8NodeList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18StaticNodeTypeListINS_7ElementEE6lengthEv(%"class.blink::StaticNodeTypeList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink18StaticNodeTypeListINS_7ElementEE4itemEj(%"class.blink::StaticNodeTypeList"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member.55"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.59"* %7, i32 %1) #9
  %9 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.blink::Element"* [ %10, %6 ], [ null, %2 ]
  ret %"class.blink::Element"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8NodeList15IsEmptyNodeListEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8NodeList15IsChildNodeListEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK5blink8NodeList16VirtualOwnerNodeEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Node"* null
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.55"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.59"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %24, i64 %25
  ret %"class.blink::Member.55"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery11ExecuteSlowINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %5 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %5, label %80, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %80, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %13 = bitcast %"class.blink::Node"* %12 to %"class.blink::Node"**
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %16 = icmp eq %"class.blink::Node"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %27

22:                                               ; preds = %27
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %17, %22
  %28 = phi %"class.blink::Node"* [ %30, %22 ], [ %14, %17 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %80, label %22

32:                                               ; preds = %22
  %33 = bitcast %"class.blink::Node"* %30 to %"class.blink::Element"*
  br label %34

34:                                               ; preds = %11, %17, %32
  %35 = phi %"class.blink::Element"* [ %15, %11 ], [ %15, %17 ], [ %33, %32 ]
  %36 = icmp eq %"class.blink::Element"* %35, null
  br i1 %36, label %80, label %37

37:                                               ; preds = %34
  %38 = tail call zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %1, %"class.blink::Element"* nonnull dereferenceable(104) %35)
  br i1 %38, label %41, label %43

39:                                               ; preds = %77
  %40 = bitcast %"class.blink::Node"* %61 to %"class.blink::Element"*
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi %"class.blink::Element"* [ %35, %37 ], [ %40, %39 ]
  store %"class.blink::Element"* %42, %"class.blink::Element"** %2, align 8
  br label %80

43:                                               ; preds = %37, %77
  %44 = phi %"class.blink::Element"* [ %78, %77 ], [ %35, %37 ]
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %48, label %58

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 0
  %50 = icmp eq %"class.blink::Node"* %49, %4
  br i1 %50, label %80, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %49, %"class.blink::Node"* %4) #9
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %55, %51, %43
  %59 = phi %"class.blink::Node"* [ %46, %43 ], [ %53, %51 ], [ %56, %55 ]
  br label %60

60:                                               ; preds = %58, %74
  %61 = phi %"class.blink::Node"* [ %75, %74 ], [ %59, %58 ]
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 12
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %60
  %67 = icmp eq %"class.blink::Node"* %61, %4
  br i1 %67, label %80, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %61, %"class.blink::Node"* %4) #9
  br label %74

74:                                               ; preds = %72, %68
  %75 = phi %"class.blink::Node"* [ %73, %72 ], [ %70, %68 ]
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %80, label %60

77:                                               ; preds = %60
  %78 = bitcast %"class.blink::Node"* %61 to %"class.blink::Element"*
  %79 = tail call zeroext i1 @_ZNK5blink13SelectorQuery19SelectorListMatchesERNS_13ContainerNodeERNS_7ElementE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %1, %"class.blink::Element"* nonnull dereferenceable(104) %78)
  br i1 %79, label %39, label %43

80:                                               ; preds = %27, %48, %55, %74, %66, %6, %3, %34, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery13ExecuteWithIdINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %5 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %6 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %7 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %8 = alloca %"class.blink::SelectorChecker", align 8
  %9 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %10 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %9, i32 0) #9
  %11 = bitcast %"class.blink::CSSSelector"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = bitcast %"class.blink::SelectorChecker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3
  %18 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %3, %24, %39
  %42 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 4
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 5
  store i32 3, i32* %43, align 4
  %44 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %8, i64 0, i32 6
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 4, i32 0, i32 0
  %47 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %46, align 8
  %48 = icmp eq %"class.blink::TreeOrderedMap"* %47, null
  br i1 %48, label %168, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %51, null
  %53 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %47, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %106, label %55

55:                                               ; preds = %49
  %56 = add i32 %54, -1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = lshr i32 %61, 8
  %63 = and i32 %62, %56
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %106, label %69

69:                                               ; preds = %55
  %70 = xor i32 %62, -1
  %71 = lshr i32 %61, 31
  %72 = add nsw i32 %71, %70
  %73 = shl i32 %72, 12
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 7
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 2
  %78 = xor i32 %77, %76
  %79 = lshr i32 %78, 20
  %80 = xor i32 %79, %78
  %81 = or i32 %80, 1
  %82 = zext i32 %81 to i64
  br label %83

83:                                               ; preds = %93, %69
  %84 = phi %"struct.WTF::KeyValuePair"* [ %65, %69 ], [ %98, %93 ]
  %85 = phi i64 [ %64, %69 ], [ %97, %93 ]
  %86 = phi i64 [ 0, %69 ], [ %95, %93 ]
  %87 = bitcast %"struct.WTF::KeyValuePair"* %84 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = icmp ne i8* %88, inttoptr (i64 -1 to i8*)
  %90 = bitcast i8* %88 to %"class.WTF::StringImpl"*
  %91 = icmp eq %"class.WTF::StringImpl"* %59, %90
  %92 = and i1 %89, %91
  br i1 %92, label %102, label %93

93:                                               ; preds = %83
  %94 = icmp eq i64 %86, 0
  %95 = select i1 %94, i64 %82, i64 %86
  %96 = add i64 %95, %85
  %97 = and i64 %96, %57
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %97
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %106, label %83

102:                                              ; preds = %83
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %84, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = zext i32 %54 to i64
  br label %109

106:                                              ; preds = %93, %102, %55, %49
  %107 = zext i32 %54 to i64
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %107
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %107, %106 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %84, %104 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %110
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %111, %112
  br i1 %113, label %168, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %111, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.blink::TreeOrderedMap::MapEntry"*, %"class.blink::TreeOrderedMap::MapEntry"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::TreeOrderedMap::MapEntry", %"class.blink::TreeOrderedMap::MapEntry"* %116, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp ugt i32 %118, 1
  br i1 %119, label %120, label %168

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %122 = load i8, i8* %121, align 8
  %123 = and i8 %122, 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %120
  tail call void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %209

126:                                              ; preds = %120
  %127 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %45) #9
  %128 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %127, i64 0, i32 0, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %129, i64 %132
  %134 = icmp eq i32 %131, 0
  br i1 %134, label %209, label %135

135:                                              ; preds = %126
  %136 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i8*
  %137 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 1
  %138 = bitcast %"class.blink::Element"** %137 to i64*
  %139 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 6
  %141 = bitcast %"class.blink::Element"** %139 to i8*
  %142 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 7
  %143 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 8
  %144 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 9
  %145 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 11
  %146 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 12
  %147 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 13
  %148 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5 to i64*
  %149 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %5, i64 0, i32 3
  %150 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %4, i64 0, i32 0
  br label %151

151:                                              ; preds = %135, %165
  %152 = phi %"class.blink::Member.55"* [ %129, %135 ], [ %166, %165 ]
  %153 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.blink::Element"*, %"class.blink::Element"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %154, i64 0, i32 0, i32 0
  %156 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %155, %"class.blink::Node"* %13) #9
  br i1 %156, label %157, label %165

157:                                              ; preds = %151
  %158 = bitcast %"class.blink::Member.55"* %152 to i64*
  %159 = load i64, i64* %158, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %136) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 56, i1 false) #9
  store i64 %159, i64* %138, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %140, align 2
  store i8 0, i8* %142, align 1
  store i8 0, i8* %143, align 4
  store i8 0, i8* %144, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %145, align 8
  store i8 0, i8* %146, align 8
  store i8 0, i8* %147, align 1
  store i64 %12, i64* %148, align 8
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %149, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #9
  store i8 0, i8* %150, align 1
  %160 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %8, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %5, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %136) #9
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = bitcast %"class.blink::Member.55"* %152 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.blink::Element"** %2 to i64*
  store i64 %163, i64* %164, align 8
  br label %209

165:                                              ; preds = %151, %157
  %166 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %152, i64 1
  %167 = icmp eq %"class.blink::Member.55"* %166, %133
  br i1 %167, label %209, label %151

168:                                              ; preds = %109, %41, %114
  %169 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %15, %"class.WTF::AtomicString"* dereferenceable(8) %45) #9
  %170 = icmp eq %"class.blink::Element"* %169, null
  br i1 %170, label %209, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 3
  %173 = load i8, i8* %172, align 8
  %174 = and i8 %173, 1
  %175 = icmp eq i8 %174, 0
  %176 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %169, i64 0, i32 0, i32 0
  %177 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %176, %"class.blink::Node"* %13) #9
  br i1 %175, label %196, label %178

178:                                              ; preds = %171
  br i1 %177, label %179, label %209

179:                                              ; preds = %178
  %180 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %180) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 56, i1 false) #9
  %181 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 1
  store %"class.blink::Element"* %169, %"class.blink::Element"** %181, align 8
  %182 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 2
  %183 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 6
  %184 = bitcast %"class.blink::Element"** %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %183, align 2
  %185 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 7
  store i8 0, i8* %185, align 1
  %186 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 8
  store i8 0, i8* %186, align 4
  %187 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 9
  store i8 0, i8* %187, align 1
  %188 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 11
  store %"class.blink::Element"* null, %"class.blink::Element"** %188, align 8
  %189 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 12
  store i8 0, i8* %189, align 8
  %190 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 13
  store i8 0, i8* %190, align 1
  %191 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7 to i64*
  store i64 %12, i64* %191, align 8
  %192 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 3
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %192, align 8
  %193 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %193) #9
  store i8 0, i8* %193, align 1
  %194 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %8, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %7, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %193) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %180) #9
  br i1 %194, label %195, label %209

195:                                              ; preds = %179
  store %"class.blink::Element"* %169, %"class.blink::Element"** %2, align 8
  br label %209

196:                                              ; preds = %171
  %197 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %169, i64 0, i32 0
  %198 = select i1 %177, %"class.blink::ContainerNode"* %197, %"class.blink::ContainerNode"* %1
  %199 = load i8, i8* %172, align 8
  %200 = and i8 %199, 2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %198, i64 0, i32 0
  %204 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %203) #9
  br label %205

205:                                              ; preds = %196, %202
  %206 = phi %"class.blink::ContainerNode"* [ %204, %202 ], [ %198, %196 ]
  %207 = icmp eq %"class.blink::ContainerNode"* %206, null
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %206, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %209

209:                                              ; preds = %165, %126, %161, %168, %178, %195, %179, %205, %208, %125
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %209, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSSelector"*, %"class.blink::Element"** nocapture dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %7 = alloca %"class.blink::SelectorChecker", align 8
  %8 = bitcast %"class.blink::SelectorChecker"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 3
  %10 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #9
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %4, %16, %31
  %34 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 4
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 5
  store i32 3, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 6
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %38 = icmp eq %"class.blink::ContainerNode"* %0, null
  br i1 %38, label %160, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %160, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 1
  %46 = bitcast %"class.blink::Node"* %45 to %"class.blink::Node"**
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = bitcast %"class.blink::Node"* %47 to %"class.blink::Element"*
  %49 = icmp eq %"class.blink::Node"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %67, label %60

55:                                               ; preds = %60
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %50, %55
  %61 = phi %"class.blink::Node"* [ %63, %55 ], [ %47, %50 ]
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %160, label %55

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::Node"* %63 to %"class.blink::Element"*
  br label %67

67:                                               ; preds = %44, %50, %65
  %68 = phi %"class.blink::Element"* [ %48, %44 ], [ %48, %50 ], [ %66, %65 ]
  %69 = icmp eq %"class.blink::Element"* %68, null
  br i1 %69, label %160, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %72 = icmp eq %"class.blink::CSSSelector"* %2, null
  %73 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i8*
  %74 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 0
  %75 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 6
  %78 = bitcast %"class.blink::Element"** %76 to i8*
  %79 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 7
  %80 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 8
  %81 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 9
  %82 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 11
  %83 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 12
  %84 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 13
  %85 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 3
  %86 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  br label %87

87:                                               ; preds = %158, %70
  %88 = phi %"class.blink::Element"* [ %68, %70 ], [ %159, %158 ]
  %89 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %88, i64 0, i32 3, i32 0, i32 0
  %90 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %89, align 8
  %91 = icmp eq %"class.blink::ElementData"* %90, null
  br i1 %91, label %125, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %90, i64 0, i32 2, i32 0, i32 0
  %94 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %93, align 8
  %95 = icmp eq %"class.blink::SpaceSplitString::Data"* %94, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %94, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %94, i64 0, i32 2, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 %101
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %125, label %104

104:                                              ; preds = %96
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  br label %106

106:                                              ; preds = %111, %104
  %107 = phi %"class.WTF::AtomicString"* [ %98, %104 ], [ %112, %111 ]
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, %105
  br i1 %110, label %114, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %107, i64 1
  %113 = icmp ult %"class.WTF::AtomicString"* %112, %102
  br i1 %113, label %106, label %125

114:                                              ; preds = %106
  %115 = ptrtoint %"class.WTF::AtomicString"* %107 to i64
  %116 = ptrtoint %"class.WTF::AtomicString"* %98 to i64
  %117 = sub i64 %115, %116
  %118 = lshr exact i64 %117, 3
  %119 = trunc i64 %118 to i32
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %125, label %121

121:                                              ; preds = %114
  br i1 %72, label %124, label %122

122:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 56, i1 false) #9
  store %"class.blink::Element"* %88, %"class.blink::Element"** %75, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %77, align 2
  store i8 0, i8* %79, align 1
  store i8 0, i8* %80, align 4
  store i8 0, i8* %81, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %82, align 8
  store i8 0, i8* %83, align 8
  store i8 0, i8* %84, align 1
  store %"class.blink::CSSSelector"* %2, %"class.blink::CSSSelector"** %74, align 8
  store %"class.blink::ContainerNode"* %0, %"class.blink::ContainerNode"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #9
  store i8 0, i8* %86, align 1
  %123 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %7, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %6, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #9
  br i1 %123, label %124, label %125

124:                                              ; preds = %122, %121
  store %"class.blink::Element"* %88, %"class.blink::Element"** %3, align 8
  br label %160

125:                                              ; preds = %111, %114, %87, %96, %92, %122
  %126 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %88, i64 0, i32 0, i32 1, i32 0, i32 0
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %126, align 8
  %128 = icmp eq %"class.blink::Node"* %127, null
  br i1 %128, label %129, label %139

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %88, i64 0, i32 0, i32 0
  %131 = icmp eq %"class.blink::Node"* %130, %37
  br i1 %131, label %160, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %88, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8
  %135 = icmp eq %"class.blink::Node"* %134, null
  br i1 %135, label %136, label %139

136:                                              ; preds = %132
  %137 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %130, %"class.blink::Node"* %37) #9
  %138 = icmp eq %"class.blink::Node"* %137, null
  br i1 %138, label %160, label %139

139:                                              ; preds = %136, %132, %125
  %140 = phi %"class.blink::Node"* [ %127, %125 ], [ %134, %132 ], [ %137, %136 ]
  br label %141

141:                                              ; preds = %139, %155
  %142 = phi %"class.blink::Node"* [ %156, %155 ], [ %140, %139 ]
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 12
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %141
  %148 = icmp eq %"class.blink::Node"* %142, %37
  br i1 %148, label %160, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 5, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %142, %"class.blink::Node"* %37) #9
  br label %155

155:                                              ; preds = %153, %149
  %156 = phi %"class.blink::Node"* [ %154, %153 ], [ %151, %149 ]
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %160, label %141

158:                                              ; preds = %141
  %159 = bitcast %"class.blink::Node"* %142 to %"class.blink::Element"*
  br label %87

160:                                              ; preds = %60, %129, %136, %155, %147, %39, %33, %67, %124
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #9
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery27FindTraverseRootsAndExecuteINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %5 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %4, i32 0) #9
  %6 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %5, align 8
  %7 = icmp eq %"class.blink::CSSSelector"* %6, null
  br i1 %7, label %239, label %8

8:                                                ; preds = %3, %231
  %9 = phi %"class.blink::CSSSelector"* [ %236, %231 ], [ %6, %3 ]
  %10 = phi i8 [ %233, %231 ], [ 0, %3 ]
  %11 = phi i8 [ %232, %231 ], [ 1, %3 ]
  %12 = and i8 %10, 1
  %13 = icmp eq i8 %12, 0
  %14 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 240
  %17 = icmp eq i32 %16, 48
  %18 = and i1 %13, %17
  br i1 %18, label %19, label %226

19:                                               ; preds = %8
  %20 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %21 = and i8 %11, 1
  %22 = icmp eq i8 %21, 0
  %23 = and i32 %15, 262144
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  br i1 %24, label %30, label %26

26:                                               ; preds = %19
  %27 = bitcast %"union.blink::CSSSelector::DataUnion"* %25 to %"struct.blink::CSSSelector::RareData"**
  %28 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %28, i64 0, i32 1
  br label %32

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %25, i64 0, i32 0
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.WTF::AtomicString"* [ %29, %26 ], [ %31, %30 ]
  br i1 %22, label %37, label %34

34:                                               ; preds = %32
  %35 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %4, i32 0) #9
  %36 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %35, align 8
  tail call fastcc void @_ZN5blinkL26CollectElementsByClassNameINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeERKN3WTF12AtomicStringEPKNS_11CSSSelectorERNT_10OutputTypeE(%"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %33, %"class.blink::CSSSelector"* %36, %"class.blink::Element"** dereferenceable(8) %2)
  br label %240

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 12
  %41 = icmp ne i32 %40, 0
  %42 = icmp eq %"class.blink::ContainerNode"* %1, null
  %43 = or i1 %42, %41
  br i1 %43, label %92, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %85, %44
  %47 = phi %"class.blink::ContainerNode"* [ %1, %44 ], [ %83, %85 ]
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 1, i32 0, i32 1
  %49 = bitcast i32* %48 to %"class.blink::ElementData"**
  %50 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %49, align 8
  %51 = icmp eq %"class.blink::ElementData"* %50, null
  br i1 %51, label %81, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %50, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %53, align 8
  %55 = icmp eq %"class.blink::SpaceSplitString::Data"* %54, null
  br i1 %55, label %81, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %54, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %56
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  br label %66

66:                                               ; preds = %71, %64
  %67 = phi %"class.WTF::AtomicString"* [ %58, %64 ], [ %72, %71 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, %65
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 1
  %73 = icmp ult %"class.WTF::AtomicString"* %72, %62
  br i1 %73, label %66, label %81

74:                                               ; preds = %66
  %75 = ptrtoint %"class.WTF::AtomicString"* %67 to i64
  %76 = ptrtoint %"class.WTF::AtomicString"* %58 to i64
  %77 = sub i64 %75, %76
  %78 = lshr exact i64 %77, 3
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %239

81:                                               ; preds = %71, %74, %56, %52, %46
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 0, i32 0
  %83 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %82) #9
  %84 = icmp eq %"class.blink::ContainerNode"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %83, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %46, label %90

90:                                               ; preds = %85, %81
  %91 = load i32, i32* %20, align 8
  br label %92

92:                                               ; preds = %90, %37
  %93 = phi i32 [ %91, %90 ], [ %15, %37 ]
  %94 = and i32 %93, 262144
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = bitcast %"union.blink::CSSSelector::DataUnion"* %25 to %"struct.blink::CSSSelector::RareData"**
  %98 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %98, i64 0, i32 1
  br label %102

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %25, i64 0, i32 0
  br label %102

102:                                              ; preds = %96, %100
  %103 = phi %"class.WTF::AtomicString"* [ %99, %96 ], [ %101, %100 ]
  %104 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %240, label %107

107:                                              ; preds = %102, %113
  %108 = phi %"class.blink::Node"* [ %115, %113 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %108, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 12
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %108, i64 0, i32 5, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %240, label %107

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  br label %122

120:                                              ; preds = %174, %209
  %121 = phi %"class.blink::Node"* [ %210, %209 ], [ %175, %174 ]
  br label %122

122:                                              ; preds = %120, %117
  %123 = phi %"class.blink::Node"* [ %108, %117 ], [ %121, %120 ]
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 1, i32 3
  %125 = bitcast %"class.blink::Member.17"* %124 to %"class.blink::ElementData"**
  %126 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %125, align 8
  %127 = icmp eq %"class.blink::ElementData"* %126, null
  br i1 %127, label %150, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %126, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %129, align 8
  %131 = icmp eq %"class.blink::SpaceSplitString::Data"* %130, null
  br i1 %131, label %150, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %130, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %130, i64 0, i32 2, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %134, i64 %137
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %132
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  br label %142

142:                                              ; preds = %147, %140
  %143 = phi %"class.WTF::AtomicString"* [ %134, %140 ], [ %148, %147 ]
  %144 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, %141
  br i1 %146, label %152, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %143, i64 1
  %149 = icmp ult %"class.WTF::AtomicString"* %148, %138
  br i1 %149, label %142, label %150

150:                                              ; preds = %147, %128, %132, %122
  %151 = bitcast %"class.blink::Node"* %123 to %"class.blink::ContainerNode"*
  br label %191

152:                                              ; preds = %142
  %153 = ptrtoint %"class.WTF::AtomicString"* %143 to i64
  %154 = ptrtoint %"class.WTF::AtomicString"* %134 to i64
  %155 = sub i64 %153, %154
  %156 = lshr exact i64 %155, 3
  %157 = trunc i64 %156 to i32
  %158 = icmp eq i32 %157, -1
  %159 = bitcast %"class.blink::Node"* %123 to %"class.blink::ContainerNode"*
  br i1 %158, label %191, label %160

160:                                              ; preds = %152
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %159, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  %161 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %162 = icmp ne %"class.blink::Element"* %161, null
  %163 = icmp eq %"class.blink::Node"* %123, %119
  %164 = or i1 %162, %163
  br i1 %164, label %240, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 0, i32 5, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8
  %168 = icmp eq %"class.blink::Node"* %167, null
  br i1 %168, label %169, label %172

169:                                              ; preds = %165
  %170 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %123, %"class.blink::Node"* %119) #9
  %171 = icmp eq %"class.blink::Node"* %170, null
  br i1 %171, label %240, label %172

172:                                              ; preds = %169, %165
  %173 = phi %"class.blink::Node"* [ %167, %165 ], [ %170, %169 ]
  br label %174

174:                                              ; preds = %172, %188
  %175 = phi %"class.blink::Node"* [ %189, %188 ], [ %173, %172 ]
  %176 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %175, i64 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = and i32 %177, 12
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %120, label %180

180:                                              ; preds = %174
  %181 = icmp eq %"class.blink::Node"* %175, %119
  br i1 %181, label %240, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %175, i64 0, i32 5, i32 0, i32 0
  %184 = load %"class.blink::Node"*, %"class.blink::Node"** %183, align 8
  %185 = icmp eq %"class.blink::Node"* %184, null
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %175, %"class.blink::Node"* %119) #9
  br label %188

188:                                              ; preds = %186, %182
  %189 = phi %"class.blink::Node"* [ %187, %186 ], [ %184, %182 ]
  %190 = icmp eq %"class.blink::Node"* %189, null
  br i1 %190, label %240, label %174

191:                                              ; preds = %152, %150
  %192 = phi %"class.blink::ContainerNode"* [ %151, %150 ], [ %159, %152 ]
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 1
  %194 = bitcast %"class.blink::Node"* %193 to %"class.blink::Node"**
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %194, align 8
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %197, label %207

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %192, i64 0, i32 0
  %199 = icmp eq %"class.blink::ContainerNode"* %192, %1
  br i1 %199, label %240, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %192, i64 0, i32 0, i32 5, i32 0, i32 0
  %202 = load %"class.blink::Node"*, %"class.blink::Node"** %201, align 8
  %203 = icmp eq %"class.blink::Node"* %202, null
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  %205 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %198, %"class.blink::Node"* %119) #9
  %206 = icmp eq %"class.blink::Node"* %205, null
  br i1 %206, label %240, label %207

207:                                              ; preds = %204, %200, %191
  %208 = phi %"class.blink::Node"* [ %195, %191 ], [ %202, %200 ], [ %205, %204 ]
  br label %209

209:                                              ; preds = %207, %223
  %210 = phi %"class.blink::Node"* [ %224, %223 ], [ %208, %207 ]
  %211 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %210, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, 12
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %120, label %215

215:                                              ; preds = %209
  %216 = icmp eq %"class.blink::Node"* %210, %119
  br i1 %216, label %240, label %217

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %210, i64 0, i32 5, i32 0, i32 0
  %219 = load %"class.blink::Node"*, %"class.blink::Node"** %218, align 8
  %220 = icmp eq %"class.blink::Node"* %219, null
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %210, %"class.blink::Node"* %119) #9
  br label %223

223:                                              ; preds = %221, %217
  %224 = phi %"class.blink::Node"* [ %222, %221 ], [ %219, %217 ]
  %225 = icmp eq %"class.blink::Node"* %224, null
  br i1 %225, label %240, label %209

226:                                              ; preds = %8
  %227 = and i32 %15, 15
  switch i32 %227, label %228 [
    i32 0, label %231
    i32 3, label %229
    i32 4, label %229
  ]

228:                                              ; preds = %226
  br label %229

229:                                              ; preds = %226, %226, %228
  %230 = phi i8 [ 0, %228 ], [ 1, %226 ], [ 1, %226 ]
  br label %231

231:                                              ; preds = %226, %229
  %232 = phi i8 [ %11, %226 ], [ 0, %229 ]
  %233 = phi i8 [ %10, %226 ], [ %230, %229 ]
  %234 = and i32 %15, 131072
  %235 = icmp ne i32 %234, 0
  %236 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 1
  %237 = icmp eq %"class.blink::CSSSelector"* %236, null
  %238 = or i1 %237, %235
  br i1 %238, label %239, label %8

239:                                              ; preds = %231, %74, %3
  tail call void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.blink::Element"** dereferenceable(8) %2)
  br label %240

240:                                              ; preds = %113, %197, %204, %169, %160, %188, %180, %215, %223, %102, %34, %239
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13SelectorQuery22ExecuteForTraverseRootINS_31SingleElementSelectorQueryTraitEEEvRNS_13ContainerNodeES4_RNT_10OutputTypeE(%"class.blink::SelectorQuery"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %7 = alloca %"class.blink::SelectorChecker", align 8
  %8 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %0, i64 0, i32 1
  %9 = tail call dereferenceable(8) %"class.blink::CSSSelector"** @_ZNK3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %8, i32 0) #9
  %10 = bitcast %"class.blink::CSSSelector"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::SelectorChecker"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 3
  %14 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #9
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %25
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %4, %20, %35
  %38 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 5
  store i32 3, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %7, i64 0, i32 6
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %42 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %42, label %128, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %128, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1
  %50 = bitcast %"class.blink::Node"* %49 to %"class.blink::Node"**
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = bitcast %"class.blink::Node"* %51 to %"class.blink::Element"*
  %53 = icmp eq %"class.blink::Node"* %51, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %71, label %64

59:                                               ; preds = %64
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %54, %59
  %65 = phi %"class.blink::Node"* [ %67, %59 ], [ %51, %54 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %128, label %59

69:                                               ; preds = %59
  %70 = bitcast %"class.blink::Node"* %67 to %"class.blink::Element"*
  br label %71

71:                                               ; preds = %48, %54, %69
  %72 = phi %"class.blink::Element"* [ %52, %48 ], [ %52, %54 ], [ %70, %69 ]
  %73 = icmp eq %"class.blink::Element"* %72, null
  br i1 %73, label %128, label %74

74:                                               ; preds = %71
  %75 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i8*
  %76 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 6
  %79 = bitcast %"class.blink::Element"** %77 to i8*
  %80 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 7
  %81 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 8
  %82 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 9
  %83 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 11
  %84 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 12
  %85 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 13
  %86 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i64*
  %87 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 3
  %88 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  br label %89

89:                                               ; preds = %126, %74
  %90 = phi %"class.blink::Element"* [ %72, %74 ], [ %127, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %75) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 56, i1 false) #9
  store %"class.blink::Element"* %90, %"class.blink::Element"** %76, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 18, i1 false) #9
  store i8 1, i8* %78, align 2
  store i8 0, i8* %80, align 1
  store i8 0, i8* %81, align 4
  store i8 0, i8* %82, align 1
  store %"class.blink::Element"* null, %"class.blink::Element"** %83, align 8
  store i8 0, i8* %84, align 8
  store i8 0, i8* %85, align 1
  store i64 %11, i64* %86, align 8
  store %"class.blink::ContainerNode"* %2, %"class.blink::ContainerNode"** %87, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #9
  store i8 0, i8* %88, align 1
  %91 = call zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* nonnull %7, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %6, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %75) #9
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  store %"class.blink::Element"* %90, %"class.blink::Element"** %3, align 8
  br label %128

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 1, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %97, label %107

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 0
  %99 = icmp eq %"class.blink::Node"* %98, %41
  br i1 %99, label %128, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %104, label %107

104:                                              ; preds = %100
  %105 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %98, %"class.blink::Node"* %41) #9
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %128, label %107

107:                                              ; preds = %104, %100, %93
  %108 = phi %"class.blink::Node"* [ %95, %93 ], [ %102, %100 ], [ %105, %104 ]
  br label %109

109:                                              ; preds = %107, %123
  %110 = phi %"class.blink::Node"* [ %124, %123 ], [ %108, %107 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 12
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %109
  %116 = icmp eq %"class.blink::Node"* %110, %41
  br i1 %116, label %128, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 5, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %110, %"class.blink::Node"* %41) #9
  br label %123

123:                                              ; preds = %121, %117
  %124 = phi %"class.blink::Node"* [ %122, %121 ], [ %119, %117 ]
  %125 = icmp eq %"class.blink::Node"* %124, null
  br i1 %125, label %128, label %109

126:                                              ; preds = %109
  %127 = bitcast %"class.blink::Node"* %110 to %"class.blink::Element"*
  br label %89

128:                                              ; preds = %64, %97, %104, %123, %115, %43, %37, %71, %92
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #9
  br label %144

144:                                              ; preds = %128, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11CSSSelectorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSSelector"** @_ZN3WTF6VectorIPKN5blink11CSSSelectorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %24, i64 %25
  ret %"class.blink::CSSSelector"** %26
}

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"struct.blink::Referrer"* dereferenceable(16), %"class.WTF::TextEncoding"* dereferenceable(8), i8 zeroext, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #9
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.752"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.752", %"class.WTF::StringTypeAdapter.752"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.752"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.697"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.697"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.753", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.752"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.752"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.752"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.752", %"class.WTF::StringTypeAdapter.752"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.753"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.753"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.752"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.754"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.697"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.752"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.753", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.752"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.752"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.752"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.752", %"class.WTF::StringTypeAdapter.752"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.753"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.753"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.752"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.753", %"class.WTF::StringTypeAdapter.753"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.754"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.697"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.752"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.697"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.752", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.752"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.752", %"class.WTF::StringTypeAdapter.752"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.697", %"class.WTF::StringAppend.697"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.752"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.752"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.697", %"class.WTF::StringAppend.697"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.752"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.754"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.752"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.754"*, i16*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.465"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::SelectorQuery"*, %"class.blink::SelectorQuery"** %2, align 8
  store %"class.blink::SelectorQuery"* null, %"class.blink::SelectorQuery"** %2, align 8
  %4 = icmp eq %"class.blink::SelectorQuery"* %3, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #9
  br label %22

22:                                               ; preds = %21, %18, %5
  %23 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %23, align 8
  %25 = icmp eq %"class.blink::CSSSelector"** %24, null
  %26 = bitcast %"class.blink::CSSSelector"** %24 to i8*
  br i1 %25, label %33, label %27, !prof !3

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  store %"class.blink::CSSSelector"** null, %"class.blink::CSSSelector"*** %23, align 8
  br label %33

33:                                               ; preds = %32, %22
  %34 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %34, align 8
  %36 = icmp eq %"class.blink::CSSSelector"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %3, i64 0, i32 0
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %38) #9
  br label %39

39:                                               ; preds = %33, %37
  %40 = bitcast %"class.blink::SelectorQuery"* %3 to i8*
  tail call void @free(i8* %40) #9
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %41, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.462"*, %"struct.WTF::KeyValuePair.465"*, i32, %"struct.WTF::KeyValuePair.465"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.465"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.462"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.465"* %16 to i64
  br label %47

18:                                               ; preds = %132
  %19 = bitcast %"class.WTF::HashTable.462"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %133, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.465"* [ null, %10 ], [ %136, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %134, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.465"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %38, %29
  %32 = phi i64 [ 0, %29 ], [ %39, %38 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.465"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  tail call void @_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.465"* %33) #9
  br label %38

38:                                               ; preds = %37, %31
  %39 = add nuw nsw i64 %32, 1
  %40 = icmp eq i64 %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38, %27
  %42 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #9
  br label %43

43:                                               ; preds = %20, %41
  %44 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, -2147483648
  store i32 %46, i32* %44, align 8
  ret %"struct.WTF::KeyValuePair.465"* %23

47:                                               ; preds = %13, %132
  %48 = phi i64 [ %17, %13 ], [ %133, %132 ]
  %49 = phi i32 [ %7, %13 ], [ %134, %132 ]
  %50 = phi %"struct.WTF::KeyValuePair.465"* [ %16, %13 ], [ %135, %132 ]
  %51 = phi %"struct.WTF::KeyValuePair.465"* [ null, %13 ], [ %136, %132 ]
  %52 = phi i32 [ 0, %13 ], [ %137, %132 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %50, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  switch i64 %57, label %58 [
    i64 -1, label %132
    i64 0, label %132
  ]

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = lshr i32 %60, 8
  %62 = and i32 %61, %14
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %1, i64 %63
  %65 = ptrtoint %"struct.WTF::KeyValuePair.465"* %64 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %85, label %69

69:                                               ; preds = %58
  %70 = xor i32 %61, -1
  %71 = lshr i32 %60, 31
  %72 = add nsw i32 %71, %70
  %73 = shl i32 %72, 12
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 7
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 2
  %78 = xor i32 %77, %76
  %79 = lshr i32 %78, 20
  %80 = xor i32 %79, %78
  %81 = or i32 %80, 1
  %82 = zext i32 %81 to i64
  br label %91

83:                                               ; preds = %103
  %84 = ptrtoint %"struct.WTF::KeyValuePair.465"* %109 to i64
  br label %85

85:                                               ; preds = %83, %58
  %86 = phi i64 [ %65, %58 ], [ %84, %83 ]
  %87 = phi %"struct.WTF::KeyValuePair.465"* [ null, %58 ], [ %104, %83 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.465"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair.465"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %114

91:                                               ; preds = %103, %69
  %92 = phi %"struct.WTF::KeyValuePair.465"* [ null, %69 ], [ %104, %103 ]
  %93 = phi i64 [ %65, %69 ], [ %110, %103 ]
  %94 = phi %"struct.WTF::KeyValuePair.465"* [ %64, %69 ], [ %109, %103 ]
  %95 = phi i64 [ %63, %69 ], [ %108, %103 ]
  %96 = phi i64 [ 0, %69 ], [ %106, %103 ]
  %97 = bitcast %"struct.WTF::KeyValuePair.465"* %94 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, inttoptr (i64 -1 to i8*)
  br i1 %99, label %103, label %100

100:                                              ; preds = %91
  %101 = bitcast i8* %98 to %"class.WTF::StringImpl"*
  %102 = icmp eq %"class.WTF::StringImpl"* %56, %101
  br i1 %102, label %114, label %103

103:                                              ; preds = %100, %91
  %104 = phi %"struct.WTF::KeyValuePair.465"* [ %92, %100 ], [ %94, %91 ]
  %105 = icmp eq i64 %96, 0
  %106 = select i1 %105, i64 %82, i64 %96
  %107 = add i64 %106, %95
  %108 = and i64 %107, %15
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %1, i64 %108
  %110 = ptrtoint %"struct.WTF::KeyValuePair.465"* %109 to i64
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %83, label %91

114:                                              ; preds = %100, %85
  %115 = phi i64 [ %90, %85 ], [ %93, %100 ]
  %116 = inttoptr i64 %115 to %"struct.WTF::KeyValuePair.465"*
  tail call void @_ZN3WTF12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS2_14default_deleteIS5_EEEEED2Ev(%"struct.WTF::KeyValuePair.465"* %116) #9
  %117 = bitcast %"struct.WTF::KeyValuePair.465"* %54 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = inttoptr i64 %115 to i64*
  store i64 %118, i64* %119, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %116, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %50, i64 %53, i32 1
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.466"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.466"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.blink::SelectorQuery"* null, %"class.blink::SelectorQuery"** %122, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.466"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %9, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %126, i64 %53
  %128 = icmp eq %"struct.WTF::KeyValuePair.465"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.465"* %116, %"struct.WTF::KeyValuePair.465"* %51
  %130 = load i32, i32* %6, align 8
  %131 = ptrtoint %"struct.WTF::KeyValuePair.465"* %126 to i64
  br label %132

132:                                              ; preds = %47, %47, %114
  %133 = phi i64 [ %48, %47 ], [ %131, %114 ], [ %48, %47 ]
  %134 = phi i32 [ %49, %47 ], [ %130, %114 ], [ %49, %47 ]
  %135 = phi %"struct.WTF::KeyValuePair.465"* [ %50, %47 ], [ %126, %114 ], [ %50, %47 ]
  %136 = phi %"struct.WTF::KeyValuePair.465"* [ %51, %47 ], [ %129, %114 ], [ %51, %47 ]
  %137 = add i32 %52, 1
  %138 = icmp eq i32 %137, %134
  br i1 %138, label %18, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.465"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.462"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.std::__1::unique_ptr.466"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.465"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.465"* null)
  %9 = load %"struct.WTF::KeyValuePair.465"*, %"struct.WTF::KeyValuePair.465"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.465"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.465"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.465"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.465"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %170, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.465"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.465"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.465"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #9
  %66 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.465"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #9
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #9
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.465"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.465", %"struct.WTF::KeyValuePair.465"* %75, i64 0, i32 1
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.466"* %2, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.466"* %2 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.blink::SelectorQuery"* null, %"class.blink::SelectorQuery"** %115, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.466"* %114, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::SelectorQuery"*, %"class.blink::SelectorQuery"** %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.466"* %114 to i64*
  store i64 %117, i64* %120, align 8
  %121 = icmp eq %"class.blink::SelectorQuery"* %119, null
  br i1 %121, label %158, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %119, i64 0, i32 2, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %138, %135, %122
  %140 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %119, i64 0, i32 1, i32 0, i32 0, i32 0
  %141 = load %"class.blink::CSSSelector"**, %"class.blink::CSSSelector"*** %140, align 8
  %142 = icmp eq %"class.blink::CSSSelector"** %141, null
  %143 = bitcast %"class.blink::CSSSelector"** %141 to i8*
  br i1 %142, label %150, label %144, !prof !3

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %119, i64 0, i32 1, i32 0, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %149, label %148, !prof !2

148:                                              ; preds = %144
  store i32 0, i32* %145, align 4
  br label %149

149:                                              ; preds = %148, %144
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %143) #9
  store %"class.blink::CSSSelector"** null, %"class.blink::CSSSelector"*** %140, align 8
  br label %150

150:                                              ; preds = %149, %139
  %151 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %119, i64 0, i32 0, i32 0
  %152 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %151, align 8
  %153 = icmp eq %"class.blink::CSSSelector"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::SelectorQuery", %"class.blink::SelectorQuery"* %119, i64 0, i32 0
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %155) #9
  br label %156

156:                                              ; preds = %150, %154
  %157 = bitcast %"class.blink::SelectorQuery"* %119 to i8*
  tail call void @free(i8* %157) #9
  br label %158

158:                                              ; preds = %113, %156
  %159 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %159, align 4
  %162 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, %161
  %165 = shl i32 %164, 1
  %166 = load i32, i32* %12, align 8
  %167 = icmp ult i32 %165, %166
  br i1 %167, label %170, label %168

168:                                              ; preds = %158
  %169 = tail call %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.465"* %75)
  br label %170

170:                                              ; preds = %49, %158, %168
  %171 = phi i8 [ 1, %158 ], [ 1, %168 ], [ 0, %49 ]
  %172 = phi %"struct.WTF::KeyValuePair.465"* [ %75, %158 ], [ %169, %168 ], [ %42, %49 ]
  %173 = insertvalue { %"struct.WTF::KeyValuePair.465"*, i8 } undef, %"struct.WTF::KeyValuePair.465"* %172, 0
  %174 = insertvalue { %"struct.WTF::KeyValuePair.465"*, i8 } %173, i8 %171, 1
  ret { %"struct.WTF::KeyValuePair.465"*, i8 } %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.462"*, %"struct.WTF::KeyValuePair.465"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([178 x i8], [178 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.465"*
  %37 = call %"struct.WTF::KeyValuePair.465"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink13SelectorQueryENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.465"* %36, i32 %32, %"struct.WTF::KeyValuePair.465"* %1) #9
  ret %"struct.WTF::KeyValuePair.465"* %37
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
