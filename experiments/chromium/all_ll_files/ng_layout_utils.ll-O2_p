; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_layout_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_layout_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1900 }
%class.scoped_refptr.1900 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1901", %"class.WTF::Vector.630", %"class.WTF::Vector.1903", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1901" = type { %"class.base::RefCounted.1902" }
%"class.base::RefCounted.1902" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1903" = type { %"class.WTF::VectorBuffer.1904" }
%"class.WTF::VectorBuffer.1904" = type { %"class.WTF::VectorBufferBase.1905" }
%"class.WTF::VectorBufferBase.1905" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1906 }
%union.anon.1906 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1891" }
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1893" }
%"class.blink::Member.1893" = type { %"class.blink::MemberBase.1894" }
%"class.blink::MemberBase.1894" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1914 }
%class.scoped_refptr.1914 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1924" }
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1915", %"class.WTF::Vector.1915" }
%"class.WTF::Vector.1915" = type { %"class.WTF::VectorBuffer.1916" }
%"class.WTF::VectorBuffer.1916" = type { %"class.WTF::VectorBufferBase.1917" }
%"class.WTF::VectorBufferBase.1917" = type { %class.scoped_refptr.1914*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1895" }
%"class.WTF::Vector.1895" = type { %"class.WTF::VectorBuffer.1896" }
%"class.WTF::VectorBuffer.1896" = type { %"class.WTF::VectorBufferBase.1897" }
%"class.WTF::VectorBufferBase.1897" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911", [32 x i8] }
%"class.WTF::VectorBufferBase.1911" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.1926" }
%"class.std::__1::unique_ptr.1926" = type { %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.1928" }
%"struct.std::__1::__compressed_pair_elem.1928" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1841, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1842, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1843", %"class.absl::optional.1859" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1841 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1864", [4 x i8], %union.anon.1866, %class.scoped_refptr.1841, i32, [4 x i8] }>
%"class.WTF::RefCounted.1864" = type { %"class.base::RefCounted.1865" }
%"class.base::RefCounted.1865" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1866 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.1842 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1846", %"class.WTF::Vector.1851", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848" }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.absl::optional.1867" = type { %"class.absl::optional_internal::optional_data.1868" }
%"class.absl::optional_internal::optional_data.1868" = type { %"class.absl::optional_internal::optional_data_base.1869" }
%"class.absl::optional_internal::optional_data_base.1869" = type { %"class.absl::optional_internal::optional_data_dtor_base.1870" }
%"class.absl::optional_internal::optional_data_dtor_base.1870" = type { i8, %union.anon.1871 }
%union.anon.1871 = type { %"struct.blink::NGFragmentGeometry" }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.1872 }
%union.anon.1872 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"struct.blink::NGConstraintSpace::RareData::TableCellData" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.absl::optional.1636", i8, i8, [2 x i8] }>
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.blink::NGConstraintSpace::RareData::TableSectionData" = type <{ %class.scoped_refptr.1646, i32, [4 x i8] }>
%class.scoped_refptr.1646 = type { %"class.blink::NGTableConstraintSpaceData"* }
%"struct.blink::NGConstraintSpace::RareData::StretchData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink17NGConstraintSpace8RareData13MaySkipLayoutERKS1_ = comdat any

$_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv = comdat any

$_ZNK5blink17NGConstraintSpace8RareData16TableSectionData13MaySkipLayoutERKS2_ = comdat any

$_ZNK5blink26NGTableConstraintSpaceData16MaySkipRowLayoutERKS0_jj = comdat any

$_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData3RowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData4CellELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData7SectionELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink35CalculateSizeBasedLayoutCacheStatusERKNS_11NGBlockNodeERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_18NGFragmentGeometryEEE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGLayoutResult"* readonly dereferenceable(64), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.absl::optional.1867"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %8 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = xor i32 %12, %10
  %14 = and i32 %13, 65534
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %854

16:                                               ; preds = %4
  %17 = and i32 %10, 1
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %12, 1
  %20 = icmp ne i32 %19, 0
  br i1 %18, label %21, label %22

21:                                               ; preds = %16
  br i1 %20, label %31, label %35

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %24 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %23, align 8
  br i1 %20, label %25, label %29

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %27 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData13MaySkipLayoutERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %24, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %27) #7
  br i1 %28, label %35, label %854

29:                                               ; preds = %22
  %30 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv(%"struct.blink::NGConstraintSpace::RareData"* %24) #7
  br i1 %30, label %35, label %854

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %33 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %32, align 8
  %34 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv(%"struct.blink::NGConstraintSpace::RareData"* %33) #7
  br i1 %34, label %35, label %854

35:                                               ; preds = %21, %29, %25, %31
  %36 = load i32, i32* %9, align 4
  %37 = load i32, i32* %11, align 4
  %38 = xor i32 %37, %36
  %39 = and i32 %38, 66977792
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %220

41:                                               ; preds = %35
  %42 = and i32 %36, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = and i32 %37, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %94, label %61

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %49 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %48, align 8
  %50 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %49, i64 0, i32 6
  %51 = load i16, i16* %50, align 8
  %52 = and i16 %51, 7
  %53 = icmp eq i16 %52, 2
  br i1 %53, label %54, label %61

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %49, i64 0, i32 7, i32 1, i64 20
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = and i64 %57, 255
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  br label %61

61:                                               ; preds = %54, %47, %44
  %62 = phi i32 [ %60, %54 ], [ 0, %47 ], [ 0, %44 ]
  %63 = phi i64 [ %58, %54 ], [ 0, %47 ], [ 0, %44 ]
  %64 = and i32 %37, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %68 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %68, i64 0, i32 6
  %70 = load i16, i16* %69, align 8
  %71 = and i16 %70, 7
  %72 = icmp eq i16 %71, 2
  br i1 %72, label %73, label %80

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %68, i64 0, i32 7, i32 1, i64 20
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 4
  %77 = trunc i64 %76 to i8
  %78 = lshr i64 %76, 32
  %79 = trunc i64 %78 to i32
  br label %80

80:                                               ; preds = %73, %66, %61
  %81 = phi i32 [ 0, %61 ], [ %79, %73 ], [ 0, %66 ]
  %82 = phi i8 [ 0, %61 ], [ %77, %73 ], [ 0, %66 ]
  %83 = icmp ne i64 %63, 0
  %84 = icmp ne i8 %82, 0
  %85 = xor i1 %83, %84
  %86 = xor i1 %83, true
  %87 = or i1 %85, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %80
  %89 = icmp eq i8 %82, 0
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %88
  tail call void @llvm.trap() #7
  unreachable

91:                                               ; preds = %88
  %92 = icmp eq i32 %62, %81
  br i1 %92, label %94, label %220

93:                                               ; preds = %80
  br i1 %85, label %220, label %94

94:                                               ; preds = %93, %44, %91
  %95 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %96 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 5, i32 0
  %98 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %97, align 8
  %99 = and i32 %36, 393216
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %126, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %98, i64 0, i32 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8
  %105 = and i160 %104, 15211807202738752817960438464512
  %106 = icmp eq i160 %105, 0
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %98, i64 0, i32 0, i32 5, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 3
  %111 = select i1 %106, %"class.blink::Length"* %109, %"class.blink::Length"* %110
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %111, i64 0, i32 2
  %113 = load i8, i8* %112, align 1
  switch i8 %113, label %114 [
    i8 3, label %126
    i8 4, label %126
    i8 7, label %126
    i8 5, label %126
  ]

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 7
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 6
  %117 = select i1 %106, %"class.blink::Length"* %115, %"class.blink::Length"* %116
  %118 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 0, i32 2
  %119 = load i8, i8* %118, align 1
  switch i8 %119, label %120 [
    i8 3, label %126
    i8 4, label %126
    i8 7, label %126
    i8 5, label %126
  ]

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 5
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 4
  %123 = select i1 %106, %"class.blink::Length"* %121, %"class.blink::Length"* %122
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %123, i64 0, i32 2
  %125 = load i8, i8* %124, align 1
  switch i8 %125, label %156 [
    i8 3, label %126
    i8 4, label %126
    i8 7, label %126
    i8 5, label %126
  ]

126:                                              ; preds = %120, %120, %120, %120, %114, %114, %114, %114, %101, %101, %101, %101, %94
  %127 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 4, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %141

130:                                              ; preds = %126
  %131 = bitcast %"struct.blink::NGFragmentGeometry"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %131) #7
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGBlockNode"* dereferenceable(16) %0, i1 zeroext false) #7
  %132 = load i8, i8* %127, align 4, !range !3
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = bitcast %"struct.blink::NGFragmentGeometry"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* nonnull align 4 %131, i64 56, i1 false) #7
  br label %140

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %union.anon.1871* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* nonnull align 4 %131, i64 56, i1 false) #7
  store i8 1, i8* %127, align 4
  br label %140

140:                                              ; preds = %137, %134
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %131) #7
  br label %141

141:                                              ; preds = %126, %140
  %142 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %143 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %98, i64 0, i32 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 15211807202738752817960438464512
  %148 = icmp eq i160 %147, 0
  %149 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %143, i64 0, i32 2, i32 0, i32 0
  %150 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %143, i64 0, i32 2, i32 1, i32 0
  %151 = select i1 %148, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %152
  br i1 %155, label %156, label %854

156:                                              ; preds = %141, %120
  %157 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 0, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %162, label %218

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %164, %166
  br i1 %167, label %168, label %218

168:                                              ; preds = %162
  %169 = load i32, i32* %9, align 8
  %170 = load i32, i32* %11, align 8
  %171 = xor i32 %170, %169
  %172 = icmp ugt i32 %171, 67108863
  br i1 %172, label %218, label %173

173:                                              ; preds = %168
  %174 = or i32 %170, %169
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %854, label %177

177:                                              ; preds = %173
  %178 = and i32 %170, %169
  %179 = and i32 %178, 201326592
  %180 = icmp eq i32 %179, 201326592
  br i1 %180, label %181, label %191

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %183 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %185 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %184, align 8
  %186 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %183, i64 0, i32 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %185, i64 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %191, label %218

191:                                              ; preds = %181, %177
  %192 = and i32 %178, 805306368
  %193 = icmp eq i32 %192, 805306368
  br i1 %193, label %194, label %204

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %196 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %198 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %197, align 8
  %199 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %196, i64 0, i32 0, i32 1, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %198, i64 0, i32 0, i32 1, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %200, %202
  br i1 %203, label %204, label %218

204:                                              ; preds = %194, %191
  %205 = icmp ugt i32 %169, -1073741825
  %206 = icmp ugt i32 %170, -1073741825
  %207 = and i1 %205, %206
  br i1 %207, label %208, label %854

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %210 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %212 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %211, align 8
  %213 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %210, i64 0, i32 1, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %212, i64 0, i32 1, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %214, %216
  br i1 %217, label %854, label %218

218:                                              ; preds = %162, %168, %181, %194, %208, %156
  %219 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113SizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %8, %"class.blink::NGLayoutResult"* dereferenceable(64) %1)
  br i1 %219, label %220, label %854

220:                                              ; preds = %93, %91, %218, %35
  %221 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8, i8* %221, align 4, !range !3
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %235

224:                                              ; preds = %220
  %225 = bitcast %"struct.blink::NGFragmentGeometry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %225) #7
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %7, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGBlockNode"* dereferenceable(16) %0, i1 zeroext false) #7
  %226 = load i8, i8* %221, align 4, !range !3
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %230 = bitcast %union.anon.1871* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* nonnull align 4 %225, i64 56, i1 false) #7
  store i8 1, i8* %221, align 4
  br label %234

231:                                              ; preds = %224
  %232 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %233 = bitcast %"struct.blink::NGFragmentGeometry"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %233, i8* nonnull align 4 %225, i64 56, i1 false) #7
  br label %234

234:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %225) #7
  br label %235

235:                                              ; preds = %234, %220
  %236 = bitcast { i64, i64 }* %6 to %"struct.blink::NGBoxStrut"*
  %237 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %238 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %238, i64 0, i32 5, i32 0
  %240 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %242 = bitcast %"class.blink::NGPhysicalFragment"** %241 to %"class.blink::NGPhysicalBoxFragment"**
  %243 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %240, i64 0, i32 0, i32 9
  %245 = bitcast [20 x i8]* %244 to i160*
  %246 = load i160, i160* %245, align 8
  %247 = lshr i160 %246, 102
  %248 = trunc i160 %247 to i16
  %249 = and i16 %248, 3
  %250 = icmp eq i16 %249, 0
  %251 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 2, i32 0, i32 0
  %252 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 2, i32 1, i32 0
  %253 = select i1 %250, i32* %251, i32* %252
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, %254
  br i1 %257, label %258, label %854

258:                                              ; preds = %235
  %259 = and i160 %246, 89202980794122492566142873090593446023921664
  %260 = icmp eq i160 %259, 0
  br i1 %260, label %348, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 1
  %263 = bitcast i24* %262 to i32*
  %264 = load i32, i32* %263, align 8
  %265 = and i32 %264, 2048
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %301, label %267

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 6, i64 %270
  %272 = and i32 %264, 2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %267
  %275 = bitcast %"struct.blink::NGLink"* %271 to %"struct.blink::PhysicalRect"*
  br label %286

276:                                              ; preds = %267
  %277 = bitcast %"struct.blink::NGLink"* %271 to i8*
  %278 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %271, i64 1
  %279 = bitcast %"struct.blink::NGLink"* %278 to i32*
  %280 = load i32, i32* %279, align 8
  %281 = shl i32 %280, 6
  %282 = or i32 %281, 24
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %277, i64 %283
  %285 = bitcast i8* %284 to %"struct.blink::PhysicalRect"*
  br label %286

286:                                              ; preds = %276, %274
  %287 = phi %"struct.blink::PhysicalRect"* [ %285, %276 ], [ %275, %274 ]
  %288 = and i32 %264, 64
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %287, i64 1
  %291 = select i1 %289, %"struct.blink::PhysicalRect"* %287, %"struct.blink::PhysicalRect"* %290
  %292 = and i32 %264, 1024
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %291, i64 1
  %295 = select i1 %293, %"struct.blink::PhysicalRect"* %291, %"struct.blink::PhysicalRect"* %294
  %296 = bitcast %"struct.blink::PhysicalRect"* %295 to i64*
  %297 = load i64, i64* %296, align 4
  %298 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %295, i64 0, i32 1
  %299 = bitcast %"struct.blink::PhysicalSize"* %298 to i64*
  %300 = load i64, i64* %299, align 4
  br label %301

301:                                              ; preds = %286, %261
  %302 = phi i64 [ %297, %286 ], [ 0, %261 ]
  %303 = phi i64 [ %300, %286 ], [ 0, %261 ]
  %304 = trunc i64 %302 to i32
  %305 = lshr i64 %302, 32
  %306 = trunc i16 %249 to i8
  switch i8 %306, label %320 [
    i8 0, label %307
    i8 1, label %313
    i8 3, label %313
    i8 2, label %316
  ]

307:                                              ; preds = %301
  %308 = lshr i64 %303, 32
  %309 = trunc i64 %308 to i32
  %310 = and i64 %302, 4294967295
  %311 = shl i64 %303, 32
  %312 = or i64 %311, %310
  br label %321

313:                                              ; preds = %301, %301
  %314 = and i64 %303, -4294967296
  %315 = or i64 %314, %305
  br label %321

316:                                              ; preds = %301
  %317 = lshr i64 %303, 32
  %318 = and i64 %302, -4294967296
  %319 = or i64 %317, %318
  br label %321

320:                                              ; preds = %301
  unreachable

321:                                              ; preds = %316, %313, %307
  %322 = phi i64 [ %319, %316 ], [ %315, %313 ], [ %312, %307 ]
  %323 = phi i64 [ %303, %316 ], [ %303, %313 ], [ %305, %307 ]
  %324 = phi i32 [ %304, %316 ], [ %304, %313 ], [ %309, %307 ]
  %325 = trunc i64 %323 to i32
  %326 = and i160 %246, 41538374868278621028243970633760768
  %327 = icmp ne i160 %326, 0
  %328 = select i1 %327, i32 %325, i32 %324
  %329 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %328, %330
  br i1 %331, label %332, label %854

332:                                              ; preds = %321
  %333 = select i1 %327, i32 %324, i32 %325
  %334 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %333, %335
  br i1 %336, label %337, label %854

337:                                              ; preds = %332
  %338 = trunc i64 %322 to i32
  %339 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, %338
  br i1 %341, label %342, label %854

342:                                              ; preds = %337
  %343 = lshr i64 %322, 32
  %344 = trunc i64 %343 to i32
  %345 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 3, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %346, %344
  br i1 %347, label %348, label %854

348:                                              ; preds = %342, %258
  %349 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %350 = load i8, i8* %349, align 8
  %351 = and i8 %350, 1
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %421

353:                                              ; preds = %348
  %354 = bitcast %"class.blink::LayoutObject"* %238 to i1 (%"class.blink::LayoutObject"*, i32)***
  %355 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %354, align 8
  %356 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %355, i64 92
  %357 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %356, align 8
  %358 = call zeroext i1 %357(%"class.blink::LayoutObject"* %238, i32 44) #7
  br i1 %358, label %359, label %421

359:                                              ; preds = %353
  %360 = load i32, i32* %9, align 4
  %361 = load i32, i32* %11, align 4
  %362 = xor i32 %361, %360
  %363 = and i32 %362, 64487424
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %854

365:                                              ; preds = %359
  %366 = and i32 %360, 1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %365
  %369 = and i32 %361, 1
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %418, label %385

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %373 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %372, align 8
  %374 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %373, i64 0, i32 6
  %375 = load i16, i16* %374, align 8
  %376 = and i16 %375, 7
  %377 = icmp eq i16 %376, 2
  br i1 %377, label %378, label %385

378:                                              ; preds = %371
  %379 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %373, i64 0, i32 7, i32 1, i64 20
  %380 = bitcast i8* %379 to i64*
  %381 = load i64, i64* %380, align 4
  %382 = and i64 %381, 255
  %383 = lshr i64 %381, 32
  %384 = trunc i64 %383 to i32
  br label %385

385:                                              ; preds = %378, %371, %368
  %386 = phi i32 [ %384, %378 ], [ 0, %371 ], [ 0, %368 ]
  %387 = phi i64 [ %382, %378 ], [ 0, %371 ], [ 0, %368 ]
  %388 = and i32 %361, 1
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %404, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %392 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %391, align 8
  %393 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %392, i64 0, i32 6
  %394 = load i16, i16* %393, align 8
  %395 = and i16 %394, 7
  %396 = icmp eq i16 %395, 2
  br i1 %396, label %397, label %404

397:                                              ; preds = %390
  %398 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %392, i64 0, i32 7, i32 1, i64 20
  %399 = bitcast i8* %398 to i64*
  %400 = load i64, i64* %399, align 4
  %401 = trunc i64 %400 to i8
  %402 = lshr i64 %400, 32
  %403 = trunc i64 %402 to i32
  br label %404

404:                                              ; preds = %397, %390, %385
  %405 = phi i32 [ 0, %385 ], [ %403, %397 ], [ 0, %390 ]
  %406 = phi i8 [ 0, %385 ], [ %401, %397 ], [ 0, %390 ]
  %407 = icmp ne i64 %387, 0
  %408 = icmp ne i8 %406, 0
  %409 = xor i1 %407, %408
  %410 = xor i1 %407, true
  %411 = or i1 %409, %410
  br i1 %411, label %417, label %412

412:                                              ; preds = %404
  %413 = icmp eq i8 %406, 0
  br i1 %413, label %414, label %415, !prof !2

414:                                              ; preds = %412
  call void @llvm.trap() #7
  unreachable

415:                                              ; preds = %412
  %416 = icmp eq i32 %386, %405
  br i1 %416, label %418, label %854

417:                                              ; preds = %404
  br i1 %409, label %854, label %418

418:                                              ; preds = %417, %415, %368
  %419 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118BlockSizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %8, %"class.blink::NGLayoutResult"* dereferenceable(64) %1) #7
  %420 = zext i1 %419 to i32
  br label %854

421:                                              ; preds = %353, %348
  %422 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, -64
  br i1 %424, label %425, label %608

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 5, i32 0
  %427 = load i32, i32* %426, align 8
  %428 = load i32, i32* %11, align 8
  %429 = and i32 %428, 4194304
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %446

431:                                              ; preds = %425
  %432 = and i32 %428, 1572864
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %476, label %434

434:                                              ; preds = %431
  %435 = load i160, i160* %245, align 8
  %436 = and i160 %435, 15211807202738752817960438464512
  %437 = icmp eq i160 %436, 0
  %438 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %240, i64 0, i32 0, i32 5, i32 0, i32 0
  %439 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %438, align 8
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %439, i64 0, i32 3
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %439, i64 0, i32 8
  %442 = select i1 %437, %"class.blink::Length"* %440, %"class.blink::Length"* %441
  %443 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %442, i64 0, i32 2
  %444 = load i8, i8* %443, align 1
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %446, label %476

446:                                              ; preds = %434, %425
  %447 = load i8, i8* %349, align 8
  %448 = and i8 %447, 1
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %450, label %459

450:                                              ; preds = %446
  %451 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %452 = bitcast %"class.blink::LayoutObject"* %451 to i1 (%"class.blink::LayoutObject"*)***
  %453 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %452, align 8
  %454 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %453, i64 80
  %455 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %454, align 8
  %456 = call zeroext i1 %455(%"class.blink::LayoutObject"* %451) #7
  br i1 %456, label %475, label %457

457:                                              ; preds = %450
  %458 = load i8, i8* %349, align 8
  br label %459

459:                                              ; preds = %457, %446
  %460 = phi i8 [ %458, %457 ], [ %447, %446 ]
  %461 = and i8 %460, 1
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %463, label %476

463:                                              ; preds = %459
  %464 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %465 = bitcast %"class.blink::LayoutObject"* %464 to i1 (%"class.blink::LayoutObject"*, i32)***
  %466 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %465, align 8
  %467 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %466, i64 92
  %468 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %467, align 8
  %469 = call zeroext i1 %468(%"class.blink::LayoutObject"* %464, i32 10) #7
  br i1 %469, label %475, label %470

470:                                              ; preds = %463
  %471 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %465, align 8
  %472 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %471, i64 92
  %473 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %472, align 8
  %474 = call zeroext i1 %473(%"class.blink::LayoutObject"* %464, i32 27) #7
  br i1 %474, label %475, label %476

475:                                              ; preds = %470, %463, %450
  br label %476

476:                                              ; preds = %475, %470, %459, %434, %431
  %477 = phi i32 [ -64, %475 ], [ %427, %470 ], [ %427, %434 ], [ %427, %431 ], [ %427, %459 ]
  %478 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 3
  %479 = bitcast i24* %478 to i32*
  %480 = load i32, i32* %479, align 8
  %481 = and i32 %480, 4
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %545, label %483

483:                                              ; preds = %476
  %484 = load i32, i32* %9, align 8
  %485 = lshr i32 %484, 28
  %486 = and i32 %485, 3
  switch i32 %486, label %487 [
    i32 0, label %488
    i32 1, label %497
    i32 2, label %491
    i32 3, label %492
  ]

487:                                              ; preds = %483
  unreachable

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %490 = load i32, i32* %489, align 4
  br label %497

491:                                              ; preds = %483
  br label %497

492:                                              ; preds = %483
  %493 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %494 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %493, align 8
  %495 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %494, i64 0, i32 0, i32 1, i32 0
  %496 = load i32, i32* %495, align 4
  br label %497

497:                                              ; preds = %492, %491, %488, %483
  %498 = phi i32 [ %496, %492 ], [ -64, %491 ], [ %490, %488 ], [ 0, %483 ]
  %499 = load i32, i32* %11, align 8
  %500 = lshr i32 %499, 28
  %501 = and i32 %500, 3
  switch i32 %501, label %502 [
    i32 0, label %503
    i32 1, label %512
    i32 2, label %506
    i32 3, label %507
  ]

502:                                              ; preds = %497
  unreachable

503:                                              ; preds = %497
  %504 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %505 = load i32, i32* %504, align 4
  br label %512

506:                                              ; preds = %497
  br label %512

507:                                              ; preds = %497
  %508 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %509 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %508, align 8
  %510 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %509, i64 0, i32 0, i32 1, i32 0
  %511 = load i32, i32* %510, align 4
  br label %512

512:                                              ; preds = %507, %506, %503, %497
  %513 = phi i32 [ %511, %507 ], [ -64, %506 ], [ %505, %503 ], [ 0, %497 ]
  %514 = icmp eq i32 %498, %513
  br i1 %514, label %545, label %515

515:                                              ; preds = %512
  %516 = load i8, i8* %349, align 8
  %517 = and i8 %516, 1
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %519, label %528

519:                                              ; preds = %515
  %520 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %521 = bitcast %"class.blink::LayoutObject"* %520 to i1 (%"class.blink::LayoutObject"*)***
  %522 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %521, align 8
  %523 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %522, i64 80
  %524 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %523, align 8
  %525 = call zeroext i1 %524(%"class.blink::LayoutObject"* %520) #7
  br i1 %525, label %544, label %526

526:                                              ; preds = %519
  %527 = load i8, i8* %349, align 8
  br label %528

528:                                              ; preds = %526, %515
  %529 = phi i8 [ %527, %526 ], [ %516, %515 ]
  %530 = and i8 %529, 1
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %532, label %545

532:                                              ; preds = %528
  %533 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %534 = bitcast %"class.blink::LayoutObject"* %533 to i1 (%"class.blink::LayoutObject"*, i32)***
  %535 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %534, align 8
  %536 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %535, i64 92
  %537 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %536, align 8
  %538 = call zeroext i1 %537(%"class.blink::LayoutObject"* %533, i32 10) #7
  br i1 %538, label %544, label %539

539:                                              ; preds = %532
  %540 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %534, align 8
  %541 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %540, i64 92
  %542 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %541, align 8
  %543 = call zeroext i1 %542(%"class.blink::LayoutObject"* %533, i32 27) #7
  br i1 %543, label %544, label %545

544:                                              ; preds = %539, %532, %519
  br label %545

545:                                              ; preds = %544, %539, %528, %512, %476
  %546 = phi i32 [ -64, %544 ], [ %477, %539 ], [ %477, %512 ], [ %477, %476 ], [ %477, %528 ]
  %547 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %547) #7
  %548 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %549 = bitcast %"struct.blink::NGBoxStrut"* %548 to i64*
  %550 = load i64, i64* %549, align 4
  %551 = trunc i64 %550 to i32
  %552 = lshr i64 %550, 32
  %553 = trunc i64 %552 to i32
  %554 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %555 = bitcast %"class.blink::LayoutUnit"* %554 to i64*
  %556 = load i64, i64* %555, align 4
  %557 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %558 = load i32, i32* %557, align 4
  %559 = icmp slt i32 %558, 0
  %560 = select i1 %559, i32 -2147483648, i32 2147483647
  %561 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %551, i32 %558) #7
  %562 = extractvalue { i32, i1 } %561, 1
  %563 = extractvalue { i32, i1 } %561, 0
  %564 = select i1 %562, i32 %560, i32 %563, !prof !2
  %565 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 1, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = icmp slt i32 %566, 0
  %568 = select i1 %567, i32 -2147483648, i32 2147483647
  %569 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %553, i32 %566) #7
  %570 = extractvalue { i32, i1 } %569, 1
  %571 = extractvalue { i32, i1 } %569, 0
  %572 = select i1 %570, i32 %568, i32 %571, !prof !2
  %573 = trunc i64 %556 to i32
  %574 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2, i32 0
  %575 = load i32, i32* %574, align 4
  %576 = icmp slt i32 %575, 0
  %577 = select i1 %576, i32 -2147483648, i32 2147483647
  %578 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %573, i32 %575) #7
  %579 = extractvalue { i32, i1 } %578, 1
  %580 = extractvalue { i32, i1 } %578, 0
  %581 = select i1 %579, i32 %577, i32 %580, !prof !2
  %582 = zext i32 %581 to i64
  %583 = lshr i64 %556, 32
  %584 = trunc i64 %583 to i32
  %585 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 3, i32 0
  %586 = load i32, i32* %585, align 4
  %587 = icmp slt i32 %586, 0
  %588 = select i1 %587, i32 -2147483648, i32 2147483647
  %589 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %584, i32 %586) #7
  %590 = extractvalue { i32, i1 } %589, 1
  %591 = extractvalue { i32, i1 } %589, 0
  %592 = select i1 %590, i32 %588, i32 %591, !prof !2
  %593 = zext i32 %592 to i64
  %594 = shl nuw i64 %593, 32
  %595 = or i64 %594, %582
  %596 = zext i32 %572 to i64
  %597 = shl nuw i64 %596, 32
  %598 = zext i32 %564 to i64
  %599 = or i64 %597, %598
  %600 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %599, i64* %600, align 8
  %601 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %595, i64* %601, align 8
  %602 = load i32, i32* %255, align 4
  %603 = zext i32 %602 to i64
  %604 = shl nuw i64 %603, 32
  %605 = or i64 %604, 1
  %606 = call i32 @_ZN5blink27ComputeBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %240, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %236, i32 %546, i64 %605, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %547) #7
  %607 = icmp eq i32 %606, -64
  br i1 %607, label %854, label %608

608:                                              ; preds = %545, %421
  %609 = phi i32 [ %606, %545 ], [ %423, %421 ]
  %610 = select i1 %250, i32* %252, i32* %251
  %611 = load i32, i32* %610, align 4
  %612 = icmp eq i32 %609, %611
  br i1 %612, label %679, label %613

613:                                              ; preds = %608
  %614 = load i8, i8* %349, align 8
  %615 = and i8 %614, 1
  %616 = icmp eq i8 %615, 0
  br i1 %616, label %617, label %854

617:                                              ; preds = %613
  %618 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %619 = bitcast %"class.blink::LayoutObject"* %618 to i1 (%"class.blink::LayoutObject"*)***
  %620 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %619, align 8
  %621 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %620, i64 24
  %622 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %621, align 8
  %623 = call zeroext i1 %622(%"class.blink::LayoutObject"* %618) #7
  br i1 %623, label %624, label %854

624:                                              ; preds = %617
  %625 = load i8, i8* %349, align 8
  %626 = and i8 %625, 1
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %628, label %637

628:                                              ; preds = %624
  %629 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %630 = bitcast %"class.blink::LayoutObject"* %629 to i1 (%"class.blink::LayoutObject"*, i32)***
  %631 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %630, align 8
  %632 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %631, i64 92
  %633 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %632, align 8
  %634 = call zeroext i1 %633(%"class.blink::LayoutObject"* %629, i32 24) #7
  br i1 %634, label %854, label %635

635:                                              ; preds = %628
  %636 = load i8, i8* %349, align 8
  br label %637

637:                                              ; preds = %635, %624
  %638 = phi i8 [ %636, %635 ], [ %625, %624 ]
  %639 = and i8 %638, 1
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %641, label %648

641:                                              ; preds = %637
  %642 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %643 = bitcast %"class.blink::LayoutObject"* %642 to i1 (%"class.blink::LayoutObject"*, i32)***
  %644 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %643, align 8
  %645 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %644, i64 92
  %646 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %645, align 8
  %647 = call zeroext i1 %646(%"class.blink::LayoutObject"* %642, i32 25) #7
  br i1 %647, label %854, label %648

648:                                              ; preds = %641, %637
  %649 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %650 = bitcast %"class.blink::LayoutObject"* %649 to i1 (%"class.blink::LayoutObject"*, i32)***
  %651 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %650, align 8
  %652 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %651, i64 92
  %653 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %652, align 8
  %654 = call zeroext i1 %653(%"class.blink::LayoutObject"* %649, i32 53) #7
  br i1 %654, label %854, label %655

655:                                              ; preds = %648
  %656 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %650, align 8
  %657 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %656, i64 92
  %658 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %657, align 8
  %659 = call zeroext i1 %658(%"class.blink::LayoutObject"* %649, i32 35) #7
  br i1 %659, label %854, label %660

660:                                              ; preds = %655
  %661 = call zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"* %0) #7
  br i1 %661, label %854, label %662

662:                                              ; preds = %660
  %663 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 3
  %664 = bitcast i24* %663 to i32*
  %665 = load i32, i32* %664, align 8
  %666 = and i32 %665, 64
  %667 = icmp eq i32 %666, 0
  %668 = and i32 %665, 896
  %669 = icmp ugt i32 %668, 256
  %670 = and i1 %667, %669
  %671 = and i32 %665, 524288
  %672 = icmp ne i32 %671, 0
  %673 = or i1 %672, %670
  br i1 %673, label %679, label %674

674:                                              ; preds = %662
  %675 = icmp ne i32 %609, 0
  %676 = load i32, i32* %610, align 4
  %677 = icmp ne i32 %676, 0
  %678 = xor i1 %675, %677
  br i1 %678, label %854, label %679

679:                                              ; preds = %674, %662, %608
  %680 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 6, i32 0
  %681 = load i32, i32* %680, align 4
  %682 = and i32 %681, 4096
  %683 = icmp ne i32 %682, 0
  %684 = and i32 %681, 2048
  %685 = icmp ne i32 %684, 0
  %686 = xor i1 %424, %685
  br i1 %686, label %687, label %706

687:                                              ; preds = %679
  %688 = load i8, i8* %349, align 8
  %689 = and i8 %688, 1
  %690 = icmp eq i8 %689, 0
  br i1 %690, label %691, label %703

691:                                              ; preds = %687
  %692 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %237, align 8
  %693 = bitcast %"class.blink::LayoutObject"* %692 to i1 (%"class.blink::LayoutObject"*, i32)***
  %694 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %693, align 8
  %695 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %694, i64 92
  %696 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %695, align 8
  %697 = call zeroext i1 %696(%"class.blink::LayoutObject"* %692, i32 10) #7
  br i1 %697, label %854, label %698

698:                                              ; preds = %691
  %699 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %693, align 8
  %700 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %699, i64 92
  %701 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %700, align 8
  %702 = call zeroext i1 %701(%"class.blink::LayoutObject"* %692, i32 27) #7
  br label %703

703:                                              ; preds = %698, %687
  %704 = phi i1 [ false, %687 ], [ %702, %698 ]
  %705 = or i1 %683, %704
  br i1 %705, label %854, label %706

706:                                              ; preds = %703, %679
  %707 = load i32, i32* %9, align 8
  %708 = and i32 %707, 256
  br i1 %683, label %709, label %788

709:                                              ; preds = %706
  %710 = icmp eq i32 %708, 0
  br i1 %710, label %720, label %711

711:                                              ; preds = %709
  %712 = and i32 %707, 4194304
  %713 = icmp eq i32 %712, 0
  %714 = load i32, i32* %11, align 8
  %715 = and i32 %714, 4194304
  %716 = icmp ne i32 %715, 0
  %717 = xor i1 %713, %716
  %718 = or i1 %424, %612
  %719 = and i1 %718, %717
  br i1 %719, label %722, label %854

720:                                              ; preds = %709
  %721 = or i1 %424, %612
  br i1 %721, label %722, label %854

722:                                              ; preds = %720, %711
  br i1 %424, label %723, label %788

723:                                              ; preds = %722
  %724 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 3
  %725 = bitcast i24* %724 to i32*
  %726 = load i32, i32* %725, align 8
  %727 = and i32 %726, 4
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %788, label %729

729:                                              ; preds = %723
  %730 = lshr i32 %707, 28
  %731 = and i32 %730, 3
  switch i32 %731, label %732 [
    i32 0, label %733
    i32 1, label %742
    i32 2, label %736
    i32 3, label %737
  ]

732:                                              ; preds = %729
  unreachable

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %735 = load i32, i32* %734, align 4
  br label %742

736:                                              ; preds = %729
  br label %742

737:                                              ; preds = %729
  %738 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %739 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %738, align 8
  %740 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %739, i64 0, i32 0, i32 1, i32 0
  %741 = load i32, i32* %740, align 4
  br label %742

742:                                              ; preds = %737, %736, %733, %729
  %743 = phi i32 [ %741, %737 ], [ -64, %736 ], [ %735, %733 ], [ 0, %729 ]
  %744 = load i32, i32* %11, align 8
  %745 = lshr i32 %744, 28
  %746 = and i32 %745, 3
  switch i32 %746, label %747 [
    i32 0, label %748
    i32 1, label %757
    i32 2, label %751
    i32 3, label %752
  ]

747:                                              ; preds = %742
  unreachable

748:                                              ; preds = %742
  %749 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %750 = load i32, i32* %749, align 4
  br label %757

751:                                              ; preds = %742
  br label %757

752:                                              ; preds = %742
  %753 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %754 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %753, align 8
  %755 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %754, i64 0, i32 0, i32 1, i32 0
  %756 = load i32, i32* %755, align 4
  br label %757

757:                                              ; preds = %752, %751, %748, %742
  %758 = phi i32 [ %756, %752 ], [ -64, %751 ], [ %750, %748 ], [ 0, %742 ]
  %759 = icmp eq i32 %743, %758
  br i1 %759, label %760, label %854

760:                                              ; preds = %757
  %761 = lshr i32 %707, 30
  switch i32 %761, label %771 [
    i32 0, label %762
    i32 1, label %772
    i32 2, label %765
    i32 3, label %766
  ]

762:                                              ; preds = %760
  %763 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %764 = load i32, i32* %763, align 4
  br label %772

765:                                              ; preds = %760
  br label %772

766:                                              ; preds = %760
  %767 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %768 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %767, align 8
  %769 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %768, i64 0, i32 1, i32 0
  %770 = load i32, i32* %769, align 8
  br label %772

771:                                              ; preds = %760
  unreachable

772:                                              ; preds = %766, %765, %762, %760
  %773 = phi i32 [ %770, %766 ], [ -64, %765 ], [ %764, %762 ], [ 0, %760 ]
  %774 = lshr i32 %744, 30
  switch i32 %774, label %784 [
    i32 0, label %775
    i32 1, label %785
    i32 2, label %778
    i32 3, label %779
  ]

775:                                              ; preds = %772
  %776 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %777 = load i32, i32* %776, align 4
  br label %785

778:                                              ; preds = %772
  br label %785

779:                                              ; preds = %772
  %780 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %781 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %780, align 8
  %782 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %781, i64 0, i32 1, i32 0
  %783 = load i32, i32* %782, align 8
  br label %785

784:                                              ; preds = %772
  unreachable

785:                                              ; preds = %779, %778, %775, %772
  %786 = phi i32 [ %783, %779 ], [ -64, %778 ], [ %777, %775 ], [ 0, %772 ]
  %787 = icmp eq i32 %773, %786
  br i1 %787, label %788, label %854

788:                                              ; preds = %785, %723, %722, %706
  %789 = icmp eq i32 %708, 0
  br i1 %789, label %852, label %790

790:                                              ; preds = %788
  %791 = load i160, i160* %245, align 8
  %792 = lshr i160 %791, 64
  %793 = trunc i160 %792 to i32
  %794 = and i32 %793, 15
  switch i32 %794, label %852 [
    i32 7, label %851
    i32 8, label %795
    i32 2, label %795
    i32 3, label %795
    i32 4, label %795
    i32 5, label %795
    i32 9, label %795
    i32 0, label %795
    i32 1, label %851
  ]

795:                                              ; preds = %790, %790, %790, %790, %790, %790, %790
  %796 = and i32 %707, 1
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %812, label %798

798:                                              ; preds = %795
  %799 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %800 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %799, align 8
  %801 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %800, i64 0, i32 6
  %802 = load i16, i16* %801, align 8
  %803 = and i16 %802, 7
  %804 = icmp eq i16 %803, 2
  br i1 %804, label %805, label %812

805:                                              ; preds = %798
  %806 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %800, i64 0, i32 7, i32 1, i64 20
  %807 = bitcast i8* %806 to i64*
  %808 = load i64, i64* %807, align 4
  %809 = and i64 %808, 255
  %810 = lshr i64 %808, 32
  %811 = trunc i64 %810 to i32
  br label %812

812:                                              ; preds = %805, %798, %795
  %813 = phi i32 [ 0, %795 ], [ %811, %805 ], [ 0, %798 ]
  %814 = phi i64 [ 0, %795 ], [ %809, %805 ], [ 0, %798 ]
  %815 = load i32, i32* %11, align 8
  %816 = and i32 %815, 1
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %833, label %818

818:                                              ; preds = %812
  %819 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %820 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %819, align 8
  %821 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %820, i64 0, i32 6
  %822 = load i16, i16* %821, align 8
  %823 = and i16 %822, 7
  %824 = icmp eq i16 %823, 2
  br i1 %824, label %825, label %833

825:                                              ; preds = %818
  %826 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %820, i64 0, i32 7, i32 1, i64 20
  %827 = bitcast i8* %826 to i64*
  %828 = load i64, i64* %827, align 4
  %829 = and i64 %828, 255
  %830 = icmp ne i64 %829, 0
  %831 = lshr i64 %828, 32
  %832 = trunc i64 %831 to i32
  br label %833

833:                                              ; preds = %825, %818, %812
  %834 = phi i32 [ 0, %812 ], [ %832, %825 ], [ 0, %818 ]
  %835 = phi i1 [ false, %812 ], [ %830, %825 ], [ false, %818 ]
  %836 = icmp eq i64 %814, 0
  br i1 %836, label %837, label %838

837:                                              ; preds = %833
  br i1 %835, label %854, label %852

838:                                              ; preds = %833
  br i1 %835, label %849, label %839

839:                                              ; preds = %838
  %840 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 0, i32 3
  %841 = bitcast i24* %840 to i32*
  %842 = load i32, i32* %841, align 8
  %843 = and i32 %842, 4194304
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %854, label %845

845:                                              ; preds = %839
  %846 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %243, i64 0, i32 3, i32 0
  %847 = load i32, i32* %846, align 4
  %848 = icmp eq i32 %813, %847
  br i1 %848, label %852, label %854

849:                                              ; preds = %838
  %850 = icmp eq i32 %813, %834
  br i1 %850, label %852, label %854

851:                                              ; preds = %790, %790
  br i1 %612, label %852, label %854

852:                                              ; preds = %851, %849, %845, %837, %790, %788
  %853 = select i1 %612, i32 0, i32 2
  br label %854

854:                                              ; preds = %141, %204, %208, %4, %852, %851, %849, %845, %839, %837, %785, %757, %720, %711, %703, %691, %674, %660, %655, %648, %641, %628, %617, %613, %545, %418, %417, %415, %359, %342, %337, %332, %321, %235, %173, %29, %25, %218, %31
  %855 = phi i32 [ 1, %31 ], [ 1, %141 ], [ 0, %218 ], [ 1, %25 ], [ 1, %29 ], [ 0, %173 ], [ 1, %235 ], [ 1, %342 ], [ 1, %417 ], [ %420, %418 ], [ 1, %415 ], [ 1, %545 ], [ 1, %628 ], [ 1, %617 ], [ 1, %641 ], [ 1, %655 ], [ 1, %660 ], [ 1, %674 ], [ %853, %852 ], [ 1, %849 ], [ 1, %703 ], [ 1, %711 ], [ 1, %720 ], [ 1, %757 ], [ 1, %785 ], [ 1, %851 ], [ 1, %837 ], [ 1, %337 ], [ 1, %332 ], [ 1, %321 ], [ 1, %359 ], [ 1, %613 ], [ 1, %648 ], [ 1, %691 ], [ 1, %845 ], [ 1, %839 ], [ 1, %4 ], [ 0, %208 ], [ 0, %204 ]
  ret i32 %855
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113SizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64)) unnamed_addr #0 {
  %5 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2097152
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %16, %19
  br i1 %20, label %21, label %99

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  br label %47

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 15211807202738752817960438464512
  %30 = icmp eq i160 %29, 0
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 3
  %35 = select i1 %30, %"class.blink::Length"* %33, %"class.blink::Length"* %34
  %36 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121InlineLengthMayChangeERKNS_13ComputedStyleERKNS_6LengthENS0_17LengthResolveTypeERKNS_17NGConstraintSpaceESA_RKNS_14NGLayoutResultE(%"class.blink::ComputedStyle"* dereferenceable(104) %8, %"class.blink::Length"* dereferenceable(8) %35, i32 2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2)
  br i1 %36, label %99, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 7
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 6
  %40 = select i1 %30, %"class.blink::Length"* %38, %"class.blink::Length"* %39
  %41 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121InlineLengthMayChangeERKNS_13ComputedStyleERKNS_6LengthENS0_17LengthResolveTypeERKNS_17NGConstraintSpaceESA_RKNS_14NGLayoutResultE(%"class.blink::ComputedStyle"* dereferenceable(104) %8, %"class.blink::Length"* dereferenceable(8) %40, i32 0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2)
  br i1 %41, label %99, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 5
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 4
  %45 = select i1 %30, %"class.blink::Length"* %43, %"class.blink::Length"* %44
  %46 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121InlineLengthMayChangeERKNS_13ComputedStyleERKNS_6LengthENS0_17LengthResolveTypeERKNS_17NGConstraintSpaceESA_RKNS_14NGLayoutResultE(%"class.blink::ComputedStyle"* dereferenceable(104) %8, %"class.blink::Length"* dereferenceable(8) %45, i32 1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2)
  br i1 %46, label %99, label %47

47:                                               ; preds = %21, %42
  %48 = phi i160 [ %24, %21 ], [ %28, %42 ]
  %49 = and i160 %48, 89202980794122492566142873090593446023921664
  %50 = icmp eq i160 %49, 0
  br i1 %50, label %97, label %51

51:                                               ; preds = %47
  %52 = lshr i32 %10, 26
  %53 = and i32 %52, 3
  switch i32 %53, label %54 [
    i32 0, label %55
    i32 1, label %64
    i32 2, label %58
    i32 3, label %59
  ]

54:                                               ; preds = %51
  unreachable

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  br label %64

58:                                               ; preds = %51
  br label %64

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %61 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %60 to i32**
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %62, align 8
  br label %64

64:                                               ; preds = %51, %55, %58, %59
  %65 = phi i32 [ %63, %59 ], [ -64, %58 ], [ %57, %55 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = lshr i32 %67, 26
  %69 = and i32 %68, 3
  switch i32 %69, label %70 [
    i32 0, label %71
    i32 1, label %80
    i32 2, label %74
    i32 3, label %75
  ]

70:                                               ; preds = %64
  unreachable

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  br label %80

74:                                               ; preds = %64
  br label %80

75:                                               ; preds = %64
  %76 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %77 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %76 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %78, align 8
  br label %80

80:                                               ; preds = %64, %71, %74, %75
  %81 = phi i32 [ %79, %75 ], [ -64, %74 ], [ %73, %71 ], [ 0, %64 ]
  %82 = icmp eq i32 %65, %81
  br i1 %82, label %97, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 7, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %85, i64 0, i32 16, i32 2
  %87 = load i8, i8* %86, align 1
  switch i8 %87, label %88 [
    i8 8, label %99
    i8 1, label %99
  ]

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %85, i64 0, i32 15, i32 2
  %90 = load i8, i8* %89, align 1
  switch i8 %90, label %91 [
    i8 8, label %99
    i8 1, label %99
  ]

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %85, i64 0, i32 13, i32 2
  %93 = load i8, i8* %92, align 1
  switch i8 %93, label %94 [
    i8 8, label %99
    i8 1, label %99
  ]

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %85, i64 0, i32 14, i32 2
  %96 = load i8, i8* %95, align 1
  switch i8 %96, label %97 [
    i8 8, label %99
    i8 1, label %99
  ]

97:                                               ; preds = %80, %47, %94
  %98 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118BlockSizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGLayoutResult"* dereferenceable(64) %3)
  br label %99

99:                                               ; preds = %13, %94, %94, %91, %91, %88, %88, %83, %83, %25, %37, %42, %97
  %100 = phi i1 [ %98, %97 ], [ true, %13 ], [ true, %42 ], [ true, %37 ], [ true, %25 ], [ true, %94 ], [ true, %91 ], [ true, %88 ], [ true, %83 ], [ true, %83 ], [ true, %88 ], [ true, %91 ], [ true, %94 ]
  ret i1 %100
}

declare void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19MaySkipLegacyLayoutERKNS_11NGBlockNodeERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 3, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = xor i32 %8, %6
  %10 = and i32 %9, 65534
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %152

12:                                               ; preds = %3
  %13 = and i32 %6, 1
  %14 = icmp eq i32 %13, 0
  %15 = and i32 %8, 1
  %16 = icmp ne i32 %15, 0
  br i1 %14, label %17, label %18

17:                                               ; preds = %12
  br i1 %16, label %27, label %31

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %20 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %19, align 8
  br i1 %16, label %21, label %25

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %23 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData13MaySkipLayoutERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %20, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %23) #7
  br i1 %24, label %31, label %152

25:                                               ; preds = %18
  %26 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv(%"struct.blink::NGConstraintSpace::RareData"* %20) #7
  br i1 %26, label %31, label %152

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %29 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %28, align 8
  %30 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv(%"struct.blink::NGConstraintSpace::RareData"* %29) #7
  br i1 %30, label %31, label %152

31:                                               ; preds = %17, %25, %21, %27
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* %7, align 4
  %34 = xor i32 %33, %32
  %35 = and i32 %34, 66977792
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %152

37:                                               ; preds = %31
  %38 = and i32 %32, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = and i32 %33, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %90, label %57

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %45 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %45, i64 0, i32 6
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 7
  %49 = icmp eq i16 %48, 2
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %45, i64 0, i32 7, i32 1, i64 20
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = and i64 %53, 255
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  br label %57

57:                                               ; preds = %50, %43, %40
  %58 = phi i32 [ %56, %50 ], [ 0, %43 ], [ 0, %40 ]
  %59 = phi i64 [ %54, %50 ], [ 0, %43 ], [ 0, %40 ]
  %60 = and i32 %33, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %64 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %63, align 8
  %65 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %64, i64 0, i32 6
  %66 = load i16, i16* %65, align 8
  %67 = and i16 %66, 7
  %68 = icmp eq i16 %67, 2
  br i1 %68, label %69, label %76

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %64, i64 0, i32 7, i32 1, i64 20
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 4
  %73 = trunc i64 %72 to i8
  %74 = lshr i64 %72, 32
  %75 = trunc i64 %74 to i32
  br label %76

76:                                               ; preds = %69, %62, %57
  %77 = phi i32 [ 0, %57 ], [ %75, %69 ], [ 0, %62 ]
  %78 = phi i8 [ 0, %57 ], [ %73, %69 ], [ 0, %62 ]
  %79 = icmp ne i64 %59, 0
  %80 = icmp ne i8 %78, 0
  %81 = xor i1 %79, %80
  %82 = xor i1 %79, true
  %83 = or i1 %81, %82
  br i1 %83, label %89, label %84

84:                                               ; preds = %76
  %85 = icmp eq i8 %78, 0
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %84
  tail call void @llvm.trap() #7
  unreachable

87:                                               ; preds = %84
  %88 = icmp eq i32 %58, %77
  br i1 %88, label %90, label %152

89:                                               ; preds = %76
  br i1 %81, label %152, label %90

90:                                               ; preds = %89, %40, %87
  %91 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %96, label %149

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp ne i32 %98, %100
  %102 = icmp ugt i32 %34, 67108863
  %103 = or i1 %102, %101
  br i1 %103, label %149, label %104

104:                                              ; preds = %96
  %105 = or i32 %33, %32
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %152, label %108

108:                                              ; preds = %104
  %109 = and i32 %33, %32
  %110 = and i32 %109, 201326592
  %111 = icmp eq i32 %110, 201326592
  br i1 %111, label %112, label %122

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %114 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %116 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %115, align 8
  %117 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %114, i64 0, i32 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %116, i64 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %149

122:                                              ; preds = %112, %108
  %123 = and i32 %109, 805306368
  %124 = icmp eq i32 %123, 805306368
  br i1 %124, label %125, label %135

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %127 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %129 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %128, align 8
  %130 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %127, i64 0, i32 0, i32 1, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %129, i64 0, i32 0, i32 1, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %149

135:                                              ; preds = %125, %122
  %136 = icmp ugt i32 %32, -1073741825
  %137 = icmp ugt i32 %33, -1073741825
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %152

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %141 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 1, i32 0
  %143 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %142, align 8
  %144 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %141, i64 0, i32 1, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %143, i64 0, i32 1, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %145, %147
  br i1 %148, label %152, label %149

149:                                              ; preds = %96, %112, %125, %139, %90
  %150 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_113SizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %4, %"class.blink::NGLayoutResult"* dereferenceable(64) %1)
  %151 = xor i1 %150, true
  br label %152

152:                                              ; preds = %89, %135, %139, %3, %104, %87, %25, %21, %149, %31, %27
  %153 = phi i1 [ false, %27 ], [ false, %31 ], [ false, %89 ], [ %151, %149 ], [ false, %21 ], [ false, %25 ], [ false, %87 ], [ true, %104 ], [ false, %3 ], [ true, %139 ], [ true, %135 ]
  ret i1 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink41MaySkipLayoutWithinBlockFormattingContextERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_10LayoutUnitEEEPS8_PNS_13NGMarginStrutE(%"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64), %"class.blink::NGConstraintSpace"* readonly dereferenceable(32), %"class.absl::optional.1636"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"struct.blink::NGMarginStrut"* nocapture) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.blink::NGMarginStrut"*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.blink::NGMarginStrut"*
  %14 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 3, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1, i32 0
  %21 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %21, i64 0, i32 6
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 7
  %25 = icmp eq i16 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %21, i64 0, i32 7
  %28 = bitcast %union.anon.1635* %27 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  br label %30

30:                                               ; preds = %5, %19, %26
  %31 = phi <2 x i64> [ zeroinitializer, %5 ], [ %29, %26 ], [ zeroinitializer, %19 ]
  store <2 x i64> %31, <2 x i64>* %10, align 16
  %32 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %39 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %39, i64 0, i32 6
  %41 = load i16, i16* %40, align 8
  %42 = and i16 %41, 7
  %43 = icmp eq i16 %42, 1
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %39, i64 0, i32 7
  %46 = bitcast %union.anon.1635* %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  br label %48

48:                                               ; preds = %30, %37, %44
  %49 = phi <2 x i64> [ zeroinitializer, %30 ], [ %47, %44 ], [ zeroinitializer, %37 ]
  store <2 x i64> %49, <2 x i64>* %12, align 16
  %50 = call zeroext i1 @_ZNK5blink13NGMarginStruteqERKS0_(%"struct.blink::NGMarginStrut"* nonnull %11, %"struct.blink::NGMarginStrut"* nonnull dereferenceable(16) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  %51 = load i32, i32* %15, align 8
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1, i32 0
  %56 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %55, align 8
  %57 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %56, i64 0, i32 6
  %58 = load i16, i16* %57, align 8
  %59 = and i16 %58, 7
  %60 = icmp eq i16 %59, 1
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %56, i64 0, i32 7, i32 1, i64 24
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 8
  br label %65

65:                                               ; preds = %48, %54, %61
  %66 = phi i32 [ %64, %61 ], [ -2147483648, %54 ], [ -2147483648, %48 ]
  %67 = load i32, i32* %33, align 8
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %72 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %72, i64 0, i32 6
  %74 = load i16, i16* %73, align 8
  %75 = and i16 %74, 7
  %76 = icmp eq i16 %75, 1
  br i1 %76, label %77, label %81

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %72, i64 0, i32 7, i32 1, i64 24
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %65, %70, %77
  %82 = phi i32 [ %80, %77 ], [ -2147483648, %70 ], [ -2147483648, %65 ]
  %83 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 6, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = trunc i32 %84 to i8
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %185

87:                                               ; preds = %81
  br i1 %50, label %88, label %635

88:                                               ; preds = %87
  %89 = and i32 %84, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 4, i32 0
  %93 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %92, align 8
  %94 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %93, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 4
  %97 = and i64 %96, 255
  br label %106

98:                                               ; preds = %88
  %99 = and i32 %84, 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %110

101:                                              ; preds = %98
  %102 = lshr i32 %84, 4
  %103 = and i32 %102, 1
  %104 = xor i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %106

106:                                              ; preds = %101, %91
  %107 = phi i64 [ %97, %91 ], [ %105, %101 ]
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %635, label %109

109:                                              ; preds = %106
  br i1 %90, label %110, label %121

110:                                              ; preds = %98, %109
  %111 = and i32 %84, 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %132

113:                                              ; preds = %110
  %114 = and i32 %84, 16
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 4
  %118 = bitcast %union.anon.1797* %117 to %"struct.blink::NGBfcOffset"*
  %119 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %118, i64 0, i32 1, i32 0
  %120 = load i32, i32* %119, align 4
  br label %132

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 4, i32 0
  %123 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %122, align 8
  %124 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %123, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 4
  %127 = lshr i64 %126, 32
  %128 = trunc i64 %127 to i32
  %129 = and i64 %126, 255
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %113, %121
  call void @llvm.trap() #7
  unreachable

132:                                              ; preds = %110, %116, %121
  %133 = phi i32 [ %128, %121 ], [ 0, %110 ], [ %120, %116 ]
  br i1 %53, label %145, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1, i32 0
  %136 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %135, align 8
  %137 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %136, i64 0, i32 6
  %138 = load i16, i16* %137, align 8
  %139 = and i16 %138, 7
  %140 = icmp eq i16 %139, 1
  br i1 %140, label %141, label %145

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %136, i64 0, i32 7, i32 1, i64 24
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 8
  br label %145

145:                                              ; preds = %132, %134, %141
  %146 = phi i32 [ %144, %141 ], [ -2147483648, %134 ], [ -2147483648, %132 ]
  %147 = icmp eq i32 %133, %146
  br i1 %147, label %148, label %635

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1
  %150 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %149, i64 0, i32 0
  %151 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %150, align 8
  %152 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %151, i64 0, i32 3
  %153 = bitcast %union.anon.1634* %149 to %"struct.blink::NGBfcOffset"*
  %154 = select i1 %53, %"struct.blink::NGBfcOffset"* %153, %"struct.blink::NGBfcOffset"* %152
  %155 = bitcast %"struct.blink::NGBfcOffset"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = lshr i64 %156, 32
  %158 = trunc i64 %157 to i32
  %159 = icmp sgt i32 %158, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %158) #7
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  br i1 %69, label %170, label %166

166:                                              ; preds = %148
  %167 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %165, i64 0, i32 0
  %168 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %168, i64 0, i32 3
  br label %172

170:                                              ; preds = %148
  %171 = bitcast %union.anon.1634* %165 to %"struct.blink::NGBfcOffset"*
  br label %172

172:                                              ; preds = %166, %170
  %173 = phi %"struct.blink::NGBfcOffset"* [ %169, %166 ], [ %171, %170 ]
  %174 = bitcast %"struct.blink::NGBfcOffset"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = lshr i64 %175, 32
  %177 = trunc i64 %176 to i32
  %178 = icmp sgt i32 %177, -1
  %179 = select i1 %178, i32 -2147483648, i32 2147483647
  %180 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %177) #7
  %181 = extractvalue { i32, i1 } %180, 1
  %182 = extractvalue { i32, i1 } %180, 0
  %183 = select i1 %181, i32 %179, i32 %182, !prof !2
  %184 = icmp sgt i32 %164, %183
  br i1 %184, label %635, label %189

185:                                              ; preds = %81
  %186 = and i32 %84, 8192
  %187 = icmp eq i32 %186, 0
  %188 = or i1 %50, %187
  br i1 %188, label %189, label %635

189:                                              ; preds = %172, %185
  %190 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 3, i32 0
  %191 = bitcast %"class.blink::NGPhysicalFragment"** %190 to %"class.blink::NGPhysicalBoxFragment"**
  %192 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %192, i64 0, i32 0, i32 3
  %194 = bitcast i24* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 65536
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %199, align 8
  %201 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %200, null
  br i1 %201, label %206, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %200, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %635

206:                                              ; preds = %202, %198
  %207 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %207, align 8
  %209 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %635

214:                                              ; preds = %210, %189, %206
  %215 = and i32 %84, 64
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %401, label %217

217:                                              ; preds = %214
  br i1 %53, label %218, label %223

218:                                              ; preds = %217
  %219 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1
  %220 = bitcast %union.anon.1634* %219 to %"struct.blink::NGBfcOffset"*
  %221 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %220, i64 0, i32 1, i32 0
  %222 = load i32, i32* %221, align 4
  br label %260

223:                                              ; preds = %217
  %224 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1, i32 0
  %225 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %224, align 8
  %226 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %225, i64 0, i32 6
  %227 = load i16, i16* %226, align 8
  %228 = and i16 %227, 7
  %229 = icmp eq i16 %228, 1
  br i1 %229, label %232, label %230

230:                                              ; preds = %223
  %231 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #7
  br label %249

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %225, i64 0, i32 7, i32 1, i64 16
  %234 = bitcast i8* %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = and i64 %235, 255
  %237 = lshr i64 %235, 32
  %238 = trunc i64 %237 to i32
  %239 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #7
  %240 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %225, i64 0, i32 7, i32 1, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 255
  %244 = icmp eq i64 %243, 0
  %245 = select i1 %244, i32* %7, i32* %6
  %246 = lshr i64 %242, 32
  %247 = trunc i64 %246 to i32
  %248 = icmp eq i64 %236, 0
  br label %249

249:                                              ; preds = %232, %230
  %250 = phi i8* [ %239, %232 ], [ %231, %230 ]
  %251 = phi i1 [ %248, %232 ], [ true, %230 ]
  %252 = phi i32 [ %238, %232 ], [ 0, %230 ]
  %253 = phi i32 [ %247, %232 ], [ 0, %230 ]
  %254 = phi i32* [ %245, %232 ], [ %7, %230 ]
  store i32 %253, i32* %6, align 4
  %255 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255)
  %256 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %225, i64 0, i32 3, i32 1, i32 0
  %257 = load i32, i32* %256, align 4
  store i32 %257, i32* %7, align 4
  %258 = load i32, i32* %254, align 4
  %259 = select i1 %251, i32 %258, i32 %252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #7
  br label %260

260:                                              ; preds = %218, %249
  %261 = phi i32 [ %259, %249 ], [ %222, %218 ]
  br i1 %69, label %262, label %267

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  %264 = bitcast %union.anon.1634* %263 to %"struct.blink::NGBfcOffset"*
  %265 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %264, i64 0, i32 1, i32 0
  %266 = load i32, i32* %265, align 4
  br label %304

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %269 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %268, align 8
  %270 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %269, i64 0, i32 6
  %271 = load i16, i16* %270, align 8
  %272 = and i16 %271, 7
  %273 = icmp eq i16 %272, 1
  br i1 %273, label %276, label %274

274:                                              ; preds = %267
  %275 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %275) #7
  br label %293

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %269, i64 0, i32 7, i32 1, i64 16
  %278 = bitcast i8* %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 255
  %281 = lshr i64 %279, 32
  %282 = trunc i64 %281 to i32
  %283 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %283) #7
  %284 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %269, i64 0, i32 7, i32 1, i64 8
  %285 = bitcast i8* %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = and i64 %286, 255
  %288 = icmp eq i64 %287, 0
  %289 = select i1 %288, i32* %9, i32* %8
  %290 = lshr i64 %286, 32
  %291 = trunc i64 %290 to i32
  %292 = icmp eq i64 %280, 0
  br label %293

293:                                              ; preds = %276, %274
  %294 = phi i8* [ %283, %276 ], [ %275, %274 ]
  %295 = phi i1 [ %292, %276 ], [ true, %274 ]
  %296 = phi i32 [ %282, %276 ], [ 0, %274 ]
  %297 = phi i32 [ %291, %276 ], [ 0, %274 ]
  %298 = phi i32* [ %289, %276 ], [ %9, %274 ]
  store i32 %297, i32* %8, align 4
  %299 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %299)
  %300 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %269, i64 0, i32 3, i32 1, i32 0
  %301 = load i32, i32* %300, align 4
  store i32 %301, i32* %9, align 4
  %302 = load i32, i32* %298, align 4
  %303 = select i1 %295, i32 %302, i32 %296
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %299)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %294) #7
  br label %304

304:                                              ; preds = %262, %293
  %305 = phi i32 [ %303, %293 ], [ %266, %262 ]
  %306 = and i32 %195, 2
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %344, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %310 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %309, align 8
  %311 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %310, null
  br i1 %311, label %323, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %310, i64 0, i32 2
  %314 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %310, i64 0, i32 3
  %315 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %313, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  %317 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %314, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp slt i32 %316, %318
  %320 = select i1 %319, %"class.blink::LayoutUnit"* %314, %"class.blink::LayoutUnit"* %313
  %321 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br label %323

323:                                              ; preds = %308, %312
  %324 = phi i32 [ -2147483648, %308 ], [ %322, %312 ]
  %325 = icmp slt i32 %261, %324
  br i1 %325, label %635, label %326

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %328 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %327, align 8
  %329 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %328, null
  br i1 %329, label %341, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %328, i64 0, i32 2
  %332 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %328, i64 0, i32 3
  %333 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %331, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  %335 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %332, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = icmp slt i32 %334, %336
  %338 = select i1 %337, %"class.blink::LayoutUnit"* %332, %"class.blink::LayoutUnit"* %331
  %339 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %338, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br label %341

341:                                              ; preds = %326, %330
  %342 = phi i32 [ -2147483648, %326 ], [ %340, %330 ]
  %343 = icmp slt i32 %305, %342
  br i1 %343, label %635, label %344

344:                                              ; preds = %304, %341
  %345 = icmp sgt i32 %261, -1
  %346 = select i1 %345, i32 -2147483648, i32 2147483647
  %347 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %305, i32 %261) #7
  %348 = extractvalue { i32, i1 } %347, 1
  %349 = extractvalue { i32, i1 } %347, 0
  %350 = select i1 %348, i32 %346, i32 %349, !prof !2
  %351 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %350, i32* %351, align 4
  %352 = load i32, i32* %33, align 8
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %368, label %355

355:                                              ; preds = %344
  %356 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %357 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %356, align 8
  %358 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %357, i64 0, i32 6
  %359 = load i16, i16* %358, align 8
  %360 = and i16 %359, 7
  %361 = icmp eq i16 %360, 1
  br i1 %361, label %362, label %368

362:                                              ; preds = %355
  %363 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %357, i64 0, i32 7, i32 1, i64 16
  %364 = bitcast i8* %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = and i64 %365, -256
  %367 = and i64 %365, 255
  br label %368

368:                                              ; preds = %344, %355, %362
  %369 = phi i64 [ 0, %344 ], [ %366, %362 ], [ 0, %355 ]
  %370 = phi i64 [ 0, %344 ], [ %367, %362 ], [ 0, %355 ]
  %371 = or i64 %370, %369
  %372 = bitcast %"class.absl::optional.1636"* %2 to i64*
  store i64 %371, i64* %372, align 4
  %373 = load i32, i32* %83, align 4
  %374 = and i32 %373, 8192
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %635

376:                                              ; preds = %368
  %377 = load i32, i32* %33, align 8
  %378 = and i32 %377, 1
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %395, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %382 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %381, align 8
  %383 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %382, i64 0, i32 6
  %384 = load i16, i16* %383, align 8
  %385 = and i16 %384, 7
  %386 = icmp eq i16 %385, 1
  br i1 %386, label %387, label %395

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %382, i64 0, i32 7
  %389 = bitcast %union.anon.1635* %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %382, i64 0, i32 7, i32 1
  %392 = bitcast [40 x i8]* %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = trunc i64 %393 to i48
  br label %395

395:                                              ; preds = %376, %380, %387
  %396 = phi i64 [ 0, %376 ], [ %390, %387 ], [ 0, %380 ]
  %397 = phi i48 [ 0, %376 ], [ %394, %387 ], [ 0, %380 ]
  %398 = bitcast %"struct.blink::NGMarginStrut"* %4 to i64*
  store i64 %396, i64* %398, align 4
  %399 = getelementptr inbounds %"struct.blink::NGMarginStrut", %"struct.blink::NGMarginStrut"* %4, i64 0, i32 2
  %400 = bitcast %"class.blink::LayoutUnit"* %399 to i48*
  store i48 %397, i48* %400, align 4
  br label %635

401:                                              ; preds = %214
  %402 = and i32 %67, 16384
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %453, label %404

404:                                              ; preds = %401
  br i1 %53, label %418, label %405

405:                                              ; preds = %404
  %406 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1, i32 0
  %407 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %406, align 8
  %408 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %407, i64 0, i32 6
  %409 = load i16, i16* %408, align 8
  %410 = and i16 %409, 7
  %411 = icmp eq i16 %410, 1
  br i1 %411, label %412, label %418

412:                                              ; preds = %405
  %413 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %407, i64 0, i32 7, i32 1, i64 16
  %414 = bitcast i8* %413 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = and i64 %415, -256
  %417 = and i64 %415, 255
  br label %418

418:                                              ; preds = %404, %405, %412
  %419 = phi i64 [ 0, %404 ], [ %416, %412 ], [ 0, %405 ]
  %420 = phi i64 [ 0, %404 ], [ %417, %412 ], [ 0, %405 ]
  %421 = lshr i64 %419, 32
  %422 = trunc i64 %421 to i32
  br i1 %69, label %436, label %423

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %425 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %424, align 8
  %426 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %425, i64 0, i32 6
  %427 = load i16, i16* %426, align 8
  %428 = and i16 %427, 7
  %429 = icmp eq i16 %428, 1
  br i1 %429, label %430, label %436

430:                                              ; preds = %423
  %431 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %425, i64 0, i32 7, i32 1, i64 16
  %432 = bitcast i8* %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = and i64 %433, -256
  %435 = and i64 %433, 255
  br label %436

436:                                              ; preds = %418, %423, %430
  %437 = phi i64 [ 0, %418 ], [ %434, %430 ], [ 0, %423 ]
  %438 = phi i64 [ 0, %418 ], [ %435, %430 ], [ 0, %423 ]
  %439 = trunc i64 %438 to i8
  %440 = lshr i64 %437, 32
  %441 = trunc i64 %440 to i32
  %442 = icmp ne i64 %420, 0
  %443 = icmp ne i8 %439, 0
  %444 = xor i1 %442, %443
  %445 = xor i1 %442, true
  %446 = or i1 %444, %445
  br i1 %446, label %452, label %447

447:                                              ; preds = %436
  %448 = icmp eq i8 %439, 0
  br i1 %448, label %449, label %450, !prof !2

449:                                              ; preds = %447
  call void @llvm.trap() #7
  unreachable

450:                                              ; preds = %447
  %451 = icmp eq i32 %422, %441
  br i1 %451, label %453, label %635

452:                                              ; preds = %436
  br i1 %444, label %635, label %453

453:                                              ; preds = %450, %452, %401
  %454 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load i8, i8* %454, align 4, !range !3
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %457, label %458, !prof !2

457:                                              ; preds = %453
  call void @llvm.trap() #7
  unreachable

458:                                              ; preds = %453
  %459 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %460 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %461 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %460, align 8
  %462 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %461, null
  br i1 %462, label %463, label %466

463:                                              ; preds = %458
  %464 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %459, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br label %480

466:                                              ; preds = %458
  %467 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %461, i64 0, i32 2
  %468 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %461, i64 0, i32 3
  %469 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %467, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  %471 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %468, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  %473 = icmp slt i32 %470, %472
  %474 = select i1 %473, %"class.blink::LayoutUnit"* %468, %"class.blink::LayoutUnit"* %467
  %475 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %474, i64 0, i32 0
  %476 = load i32, i32* %475, align 4
  %477 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %459, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = icmp slt i32 %478, %476
  br i1 %479, label %635, label %480

480:                                              ; preds = %463, %466
  %481 = phi i32 [ %465, %463 ], [ %478, %466 ]
  %482 = phi i32* [ %464, %463 ], [ %477, %466 ]
  %483 = or i1 %403, %86
  br i1 %483, label %484, label %496

484:                                              ; preds = %480
  %485 = icmp sgt i32 %66, -1
  %486 = select i1 %485, i32 -2147483648, i32 2147483647
  %487 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %66) #7
  %488 = extractvalue { i32, i1 } %487, 1
  %489 = extractvalue { i32, i1 } %487, 0
  %490 = select i1 %488, i32 %486, i32 %489, !prof !2
  %491 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %490, i32* %491, align 4
  %492 = load i8, i8* %454, align 4, !range !3
  %493 = icmp eq i8 %492, 0
  %494 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %82, i32* %494, align 4
  br i1 %493, label %495, label %616

495:                                              ; preds = %484
  store i8 1, i8* %454, align 4
  br label %616

496:                                              ; preds = %480
  %497 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  br i1 %50, label %498, label %540

498:                                              ; preds = %496
  br i1 %69, label %503, label %499

499:                                              ; preds = %498
  %500 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %497, i64 0, i32 0
  %501 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %500, align 8
  %502 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %501, i64 0, i32 3
  br label %505

503:                                              ; preds = %498
  %504 = bitcast %union.anon.1634* %497 to %"struct.blink::NGBfcOffset"*
  br label %505

505:                                              ; preds = %499, %503
  %506 = phi %"struct.blink::NGBfcOffset"* [ %502, %499 ], [ %504, %503 ]
  %507 = bitcast %"struct.blink::NGBfcOffset"* %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = lshr i64 %508, 32
  %510 = trunc i64 %509 to i32
  %511 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %0, i64 0, i32 2, i32 1
  %512 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %511, i64 0, i32 0
  %513 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %512, align 8
  %514 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %513, i64 0, i32 3
  %515 = bitcast %union.anon.1634* %511 to %"struct.blink::NGBfcOffset"*
  %516 = select i1 %53, %"struct.blink::NGBfcOffset"* %515, %"struct.blink::NGBfcOffset"* %514
  %517 = bitcast %"struct.blink::NGBfcOffset"* %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = lshr i64 %518, 32
  %520 = trunc i64 %519 to i32
  %521 = icmp sgt i32 %520, -1
  %522 = select i1 %521, i32 -2147483648, i32 2147483647
  %523 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %510, i32 %520) #7
  %524 = extractvalue { i32, i1 } %523, 1
  %525 = extractvalue { i32, i1 } %523, 0
  %526 = select i1 %524, i32 %522, i32 %525, !prof !2
  %527 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %526, i32* %527, align 4
  %528 = load i8, i8* %454, align 4, !range !3
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %530, label %531, !prof !2

530:                                              ; preds = %505
  call void @llvm.trap() #7
  unreachable

531:                                              ; preds = %505
  %532 = load i32, i32* %482, align 4
  %533 = icmp slt i32 %526, 0
  %534 = select i1 %533, i32 -2147483648, i32 2147483647
  %535 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %532, i32 %526) #7
  %536 = extractvalue { i32, i1 } %535, 1
  %537 = extractvalue { i32, i1 } %535, 0
  %538 = select i1 %536, i32 %534, i32 %537, !prof !2
  %539 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %538, i32* %539, align 4
  br label %616

540:                                              ; preds = %496
  br i1 %69, label %541, label %546

541:                                              ; preds = %540
  %542 = bitcast %union.anon.1634* %497 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = lshr i64 %543, 32
  %545 = trunc i64 %544 to i32
  br label %578

546:                                              ; preds = %540
  %547 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %497, i64 0, i32 0
  %548 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %547, align 8
  %549 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %548, i64 0, i32 3
  %550 = bitcast %"struct.blink::NGBfcOffset"* %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = lshr i64 %551, 32
  %553 = trunc i64 %552 to i32
  %554 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %555 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %554, align 8
  %556 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %555, i64 0, i32 6
  %557 = load i16, i16* %556, align 8
  %558 = and i16 %557, 7
  %559 = icmp eq i16 %558, 1
  br i1 %559, label %560, label %578

560:                                              ; preds = %546
  %561 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %555, i64 0, i32 7
  %562 = bitcast %union.anon.1635* %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %555, i64 0, i32 7, i32 1
  %565 = bitcast [40 x i8]* %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = trunc i64 %563 to i32
  %568 = lshr i64 %563, 32
  %569 = trunc i64 %568 to i32
  %570 = trunc i64 %566 to i32
  %571 = and i64 %566, 280375465082880
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %589

573:                                              ; preds = %560
  %574 = icmp slt i32 %570, %567
  %575 = select i1 %574, i32 %567, i32 %570
  %576 = icmp slt i32 %569, 0
  %577 = select i1 %576, i32 -2147483648, i32 2147483647
  br label %578

578:                                              ; preds = %573, %546, %541
  %579 = phi i32 [ 0, %541 ], [ 0, %546 ], [ %575, %573 ]
  %580 = phi i32 [ %545, %541 ], [ %553, %546 ], [ %553, %573 ]
  %581 = phi i32 [ 0, %541 ], [ 0, %546 ], [ %569, %573 ]
  %582 = phi i32 [ 2147483647, %541 ], [ 2147483647, %546 ], [ %577, %573 ]
  %583 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %579, i32 %581) #7
  %584 = extractvalue { i32, i1 } %583, 1
  %585 = extractvalue { i32, i1 } %583, 0
  %586 = select i1 %584, i32 %582, i32 %585, !prof !2
  %587 = icmp slt i32 %586, 0
  %588 = select i1 %587, i32 -2147483648, i32 2147483647
  br label %589

589:                                              ; preds = %578, %560
  %590 = phi i32 [ %553, %560 ], [ %580, %578 ]
  %591 = phi i32 [ 0, %560 ], [ %586, %578 ]
  %592 = phi i32 [ 2147483647, %560 ], [ %588, %578 ]
  %593 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %590, i32 %591) #7
  %594 = extractvalue { i32, i1 } %593, 1
  %595 = extractvalue { i32, i1 } %593, 0
  %596 = select i1 %594, i32 %592, i32 %595, !prof !2
  %597 = icmp sgt i32 %481, -1
  %598 = select i1 %597, i32 -2147483648, i32 2147483647
  %599 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %596, i32 %481) #7
  %600 = extractvalue { i32, i1 } %599, 1
  %601 = extractvalue { i32, i1 } %599, 0
  %602 = select i1 %600, i32 %598, i32 %601, !prof !2
  %603 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %602, i32* %603, align 4
  %604 = load i8, i8* %454, align 4, !range !3
  %605 = icmp eq i8 %604, 0
  br i1 %605, label %606, label %607, !prof !2

606:                                              ; preds = %589
  call void @llvm.trap() #7
  unreachable

607:                                              ; preds = %589
  %608 = load i32, i32* %482, align 4
  %609 = icmp slt i32 %602, 0
  %610 = select i1 %609, i32 -2147483648, i32 2147483647
  %611 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %608, i32 %602) #7
  %612 = extractvalue { i32, i1 } %611, 1
  %613 = extractvalue { i32, i1 } %611, 0
  %614 = select i1 %612, i32 %610, i32 %613, !prof !2
  %615 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %614, i32* %615, align 4
  br label %616

616:                                              ; preds = %607, %531, %484, %495
  %617 = phi i32 [ %82, %484 ], [ %82, %495 ], [ %538, %531 ], [ %614, %607 ]
  %618 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %619 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %618, align 8
  %620 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %619, null
  br i1 %620, label %632, label %621

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %619, i64 0, i32 2
  %623 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %619, i64 0, i32 3
  %624 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %622, i64 0, i32 0
  %625 = load i32, i32* %624, align 4
  %626 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %623, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  %628 = icmp slt i32 %625, %627
  %629 = select i1 %628, %"class.blink::LayoutUnit"* %623, %"class.blink::LayoutUnit"* %622
  %630 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %629, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  br label %632

632:                                              ; preds = %616, %621
  %633 = phi i32 [ -2147483648, %616 ], [ %631, %621 ]
  %634 = icmp sge i32 %617, %633
  br label %635

635:                                              ; preds = %145, %106, %210, %202, %368, %450, %323, %341, %395, %632, %466, %452, %185, %172, %87
  %636 = phi i1 [ false, %87 ], [ false, %145 ], [ false, %172 ], [ false, %185 ], [ false, %210 ], [ false, %202 ], [ false, %452 ], [ false, %466 ], [ %634, %632 ], [ false, %106 ], [ false, %323 ], [ false, %341 ], [ true, %368 ], [ true, %395 ], [ false, %450 ]
  ret i1 %636
}

declare zeroext i1 @_ZNK5blink13NGMarginStruteqERKS0_(%"struct.blink::NGMarginStrut"*, %"struct.blink::NGMarginStrut"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData13MaySkipLayoutERKS1_(%"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %250

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 5, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 5, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %250

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 7
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 6
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 7
  %22 = icmp eq i16 %17, %21
  br i1 %22, label %23, label %250

23:                                               ; preds = %14
  %24 = xor i16 %20, %16
  %25 = and i16 %24, 2040
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %250

27:                                               ; preds = %23
  switch i32 %18, label %249 [
    i32 0, label %250
    i32 1, label %28
    i32 2, label %50
    i32 3, label %118
    i32 4, label %213
    i32 5, label %219
    i32 6, label %225
  ]

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 28
  %30 = load i8, i8* %29, align 4, !range !3
  %31 = icmp ne i8 %30, 0
  %32 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 28
  %33 = load i8, i8* %32, align 4, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = xor i1 %31, %34
  %36 = xor i1 %31, true
  %37 = or i1 %35, %36
  %38 = xor i1 %35, true
  br i1 %37, label %250, label %39

39:                                               ; preds = %28
  %40 = icmp eq i8 %33, 0
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %39
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 32
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 32
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %45, %48
  br label %250

50:                                               ; preds = %27
  %51 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %53 = bitcast %union.anon.1635* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = bitcast %union.anon.1635* %51 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %250

58:                                               ; preds = %50
  %59 = bitcast %union.anon.1635* %52 to %"struct.blink::NGConstraintSpace::RareData::TableCellData"*
  %60 = bitcast %union.anon.1635* %51 to %"struct.blink::NGConstraintSpace::RareData::TableCellData"*
  %61 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableCellData", %"struct.blink::NGConstraintSpace::RareData::TableCellData"* %59, i64 0, i32 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableCellData", %"struct.blink::NGConstraintSpace::RareData::TableCellData"* %60, i64 0, i32 0, i32 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %250

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %68 = bitcast [40 x i8]* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %71 = bitcast [40 x i8]* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %69, %72
  br i1 %73, label %74, label %250

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 4
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 4
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %77, %80
  br i1 %81, label %82, label %250

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 8
  %84 = bitcast i8* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 8
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %85, %88
  br i1 %89, label %90, label %250

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 12
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 12
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %93, %96
  br i1 %97, label %98, label %250

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 16
  %100 = bitcast i8* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 16
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %101, %104
  br i1 %105, label %106, label %250

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 28
  %108 = load i8, i8* %107, align 4, !range !3
  %109 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 28
  %110 = load i8, i8* %109, align 4, !range !3
  %111 = icmp eq i8 %108, %110
  br i1 %111, label %112, label %250

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 29
  %114 = load i8, i8* %113, align 1, !range !3
  %115 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1, i64 29
  %116 = load i8, i8* %115, align 1, !range !3
  %117 = icmp eq i8 %114, %116
  br label %250

118:                                              ; preds = %27
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %120 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %121 = bitcast %union.anon.1635* %119 to %"class.blink::NGTableConstraintSpaceData"**
  %122 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %121, align 8
  %123 = bitcast %union.anon.1635* %120 to %"class.blink::NGTableConstraintSpaceData"**
  %124 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 6, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 6, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %250

130:                                              ; preds = %118
  %131 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 7, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 7, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %132, %134
  br i1 %135, label %136, label %250

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 7, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 7, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %138, %140
  br i1 %141, label %142, label %250

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 9, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 9, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %144, %146
  br i1 %147, label %148, label %250

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 9, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 9, i32 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %150, %152
  br i1 %153, label %154, label %250

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 10
  %156 = load i8, i8* %155, align 8, !range !3
  %157 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 10
  %158 = load i8, i8* %157, align 8, !range !3
  %159 = icmp eq i8 %156, %158
  br i1 %159, label %160, label %250

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 11
  %162 = load i8, i8* %161, align 1, !range !3
  %163 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 11
  %164 = load i8, i8* %163, align 1, !range !3
  %165 = icmp eq i8 %162, %164
  br i1 %165, label %166, label %250

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 2, i32 0, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 2, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %168, %170
  br i1 %171, label %172, label %250

172:                                              ; preds = %166
  %173 = icmp eq i32 %168, 0
  br i1 %173, label %205, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %122, i64 0, i32 2, i32 0, i32 0, i32 0
  %176 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %124, i64 0, i32 2, i32 0, i32 0, i32 0
  %178 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %177, align 8
  %179 = zext i32 %168 to i64
  %180 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %176, i64 %179
  br label %181

181:                                              ; preds = %201, %174
  %182 = phi %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* [ %203, %201 ], [ %178, %174 ]
  %183 = phi %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* [ %202, %201 ], [ %176, %174 ]
  %184 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %183, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %182, i64 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %189, label %250

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %183, i64 0, i32 1, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %182, i64 0, i32 1, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %191, %193
  br i1 %194, label %195, label %250

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %183, i64 0, i32 2
  %197 = load i8, i8* %196, align 4, !range !3
  %198 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %182, i64 0, i32 2
  %199 = load i8, i8* %198, align 4, !range !3
  %200 = icmp eq i8 %197, %199
  br i1 %200, label %201, label %250

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %183, i64 1
  %203 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %182, i64 1
  %204 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %202, %180
  br i1 %204, label %205, label %181

205:                                              ; preds = %201, %172
  %206 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %207 = bitcast [40 x i8]* %206 to i32*
  %208 = load i32, i32* %207, align 8
  %209 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %210 = bitcast [40 x i8]* %209 to i32*
  %211 = load i32, i32* %210, align 8
  %212 = tail call zeroext i1 @_ZNK5blink26NGTableConstraintSpaceData16MaySkipRowLayoutERKS0_jj(%"class.blink::NGTableConstraintSpaceData"* %122, %"class.blink::NGTableConstraintSpaceData"* dereferenceable(96) %124, i32 %208, i32 %211) #7
  br label %250

213:                                              ; preds = %27
  %214 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %215 = bitcast %union.anon.1635* %214 to %"struct.blink::NGConstraintSpace::RareData::TableSectionData"*
  %216 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %217 = bitcast %union.anon.1635* %216 to %"struct.blink::NGConstraintSpace::RareData::TableSectionData"*
  %218 = tail call zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData16TableSectionData13MaySkipLayoutERKS2_(%"struct.blink::NGConstraintSpace::RareData::TableSectionData"* %215, %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* dereferenceable(16) %217)
  br label %250

219:                                              ; preds = %27
  %220 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %221 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %220, align 8
  %222 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %223 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %222, align 8
  %224 = icmp eq %"class.blink::SerializedScriptValue"* %221, %223
  br label %250

225:                                              ; preds = %27
  %226 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %227 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %228 = bitcast %union.anon.1635* %226 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = bitcast %union.anon.1635* %227 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %233, label %250

233:                                              ; preds = %225
  %234 = bitcast %union.anon.1635* %227 to %"struct.blink::NGConstraintSpace::RareData::StretchData"*
  %235 = bitcast %union.anon.1635* %226 to %"struct.blink::NGConstraintSpace::RareData::StretchData"*
  %236 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::StretchData", %"struct.blink::NGConstraintSpace::RareData::StretchData"* %235, i64 0, i32 1, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::StretchData", %"struct.blink::NGConstraintSpace::RareData::StretchData"* %234, i64 0, i32 1, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %237, %239
  br i1 %240, label %241, label %250

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %243 = bitcast [40 x i8]* %242 to i32*
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %246 = bitcast [40 x i8]* %245 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %244, %247
  br label %250

249:                                              ; preds = %27
  br label %250

250:                                              ; preds = %181, %189, %195, %8, %2, %142, %130, %166, %118, %136, %148, %154, %160, %241, %233, %225, %205, %112, %106, %98, %90, %82, %74, %66, %58, %50, %42, %28, %27, %14, %23, %249, %219, %213
  %251 = phi i1 [ false, %249 ], [ %224, %219 ], [ %218, %213 ], [ false, %23 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ true, %27 ], [ %38, %28 ], [ %49, %42 ], [ false, %106 ], [ false, %98 ], [ false, %90 ], [ false, %82 ], [ false, %74 ], [ %117, %112 ], [ false, %66 ], [ false, %58 ], [ false, %50 ], [ %212, %205 ], [ false, %233 ], [ false, %225 ], [ %248, %241 ], [ false, %160 ], [ false, %154 ], [ false, %148 ], [ false, %136 ], [ false, %118 ], [ false, %166 ], [ false, %130 ], [ false, %142 ], [ false, %195 ], [ false, %189 ], [ false, %181 ]
  ret i1 %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData25IsInitialForMaySkipLayoutEv(%"struct.blink::NGConstraintSpace::RareData"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %5, label %104

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %104

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, 2040
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %104

14:                                               ; preds = %9
  %15 = and i16 %11, 7
  %16 = zext i16 %15 to i32
  switch i32 %16, label %103 [
    i32 0, label %104
    i32 1, label %17
    i32 2, label %21
    i32 3, label %64
    i32 4, label %74
    i32 5, label %84
    i32 6, label %88
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 28
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  br label %104

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %23 = bitcast %union.anon.1635* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %104

26:                                               ; preds = %21
  %27 = bitcast %union.anon.1635* %22 to %"struct.blink::NGConstraintSpace::RareData::TableCellData"*
  %28 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableCellData", %"struct.blink::NGConstraintSpace::RareData::TableCellData"* %27, i64 0, i32 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %104

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %33 = bitcast [40 x i8]* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %104

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %104

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 8
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %104

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 12
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %104

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 16
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %104

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 28
  %58 = load i8, i8* %57, align 4, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %104

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1, i64 29
  %62 = load i8, i8* %61, align 1, !range !3
  %63 = icmp eq i8 %62, 0
  br label %104

64:                                               ; preds = %14
  %65 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %66 = bitcast %union.anon.1635* %65 to %"class.blink::NGTableConstraintSpaceData"**
  %67 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %66, align 8
  %68 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %67, null
  br i1 %68, label %69, label %104

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %71 = bitcast [40 x i8]* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, -1
  br label %104

74:                                               ; preds = %14
  %75 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %76 = bitcast %union.anon.1635* %75 to %"class.blink::NGTableConstraintSpaceData"**
  %77 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %76, align 8
  %78 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %77, null
  br i1 %78, label %79, label %104

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %81 = bitcast [40 x i8]* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, -1
  br label %104

84:                                               ; preds = %14
  %85 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %86 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %85, align 8
  %87 = icmp eq %"class.blink::SerializedScriptValue"* %86, null
  br label %104

88:                                               ; preds = %14
  %89 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %90 = bitcast %union.anon.1635* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -64
  br i1 %92, label %93, label %104

93:                                               ; preds = %88
  %94 = bitcast %union.anon.1635* %89 to %"struct.blink::NGConstraintSpace::RareData::StretchData"*
  %95 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::StretchData", %"struct.blink::NGConstraintSpace::RareData::StretchData"* %94, i64 0, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, -64
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %100 = bitcast [40 x i8]* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, -64
  br label %104

103:                                              ; preds = %14
  br label %104

104:                                              ; preds = %5, %1, %98, %93, %88, %79, %74, %69, %64, %60, %56, %51, %46, %41, %36, %31, %26, %21, %9, %14, %103, %84, %17
  %105 = phi i1 [ false, %103 ], [ %87, %84 ], [ %20, %17 ], [ true, %14 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ false, %56 ], [ false, %51 ], [ false, %46 ], [ false, %41 ], [ false, %36 ], [ %63, %60 ], [ false, %31 ], [ false, %26 ], [ false, %21 ], [ false, %64 ], [ %73, %69 ], [ false, %74 ], [ %83, %79 ], [ false, %93 ], [ false, %88 ], [ %102, %98 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17NGConstraintSpace8RareData16TableSectionData13MaySkipLayoutERKS2_(%"struct.blink::NGConstraintSpace::RareData::TableSectionData"*, %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableSectionData", %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableSectionData", %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 6, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 6, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %121

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 7, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 7, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %121

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 7, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 7, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %20, %22
  br i1 %23, label %24, label %121

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 9, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 9, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %121

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 9, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 9, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %121

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 10
  %38 = load i8, i8* %37, align 8, !range !3
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 10
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp eq i8 %38, %40
  br i1 %41, label %42, label %121

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 11
  %44 = load i8, i8* %43, align 1, !range !3
  %45 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 11
  %46 = load i8, i8* %45, align 1, !range !3
  %47 = icmp eq i8 %44, %46
  br i1 %47, label %48, label %121

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %121

54:                                               ; preds = %48
  %55 = icmp eq i32 %50, 0
  br i1 %55, label %87, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %59, align 8
  %61 = zext i32 %50 to i64
  %62 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %58, i64 %61
  br label %63

63:                                               ; preds = %83, %56
  %64 = phi %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* [ %85, %83 ], [ %60, %56 ]
  %65 = phi %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* [ %84, %83 ], [ %58, %56 ]
  %66 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %65, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %64, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %121

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %65, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %64, i64 0, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %121

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %65, i64 0, i32 2
  %79 = load i8, i8* %78, align 4, !range !3
  %80 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %64, i64 0, i32 2
  %81 = load i8, i8* %80, align 4, !range !3
  %82 = icmp eq i8 %79, %81
  br i1 %82, label %83, label %121

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %65, i64 1
  %85 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::ColumnLocation", %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %64, i64 1
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %84, %62
  br i1 %86, label %87, label %63

87:                                               ; preds = %83, %54
  %88 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableSectionData", %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* %0, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData::TableSectionData", %"struct.blink::NGConstraintSpace::RareData::TableSectionData"* %1, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %4, i64 0, i32 3
  %93 = tail call dereferenceable(8) %"struct.blink::NGTableConstraintSpaceData::Section"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData7SectionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1654"* %92, i32 %89) #7
  %94 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %6, i64 0, i32 3
  %95 = tail call dereferenceable(8) %"struct.blink::NGTableConstraintSpaceData::Section"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData7SectionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1654"* %94, i32 %91) #7
  %96 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Section", %"struct.blink::NGTableConstraintSpaceData::Section"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Section", %"struct.blink::NGTableConstraintSpaceData::Section"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %121

101:                                              ; preds = %87
  %102 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Section", %"struct.blink::NGTableConstraintSpaceData::Section"* %93, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Section", %"struct.blink::NGTableConstraintSpaceData::Section"* %95, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %103, %97
  %107 = add i32 %105, %97
  %108 = icmp ult i32 %103, %106
  %109 = icmp ult i32 %105, %107
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %121

111:                                              ; preds = %101, %115
  %112 = phi i32 [ %117, %115 ], [ %105, %101 ]
  %113 = phi i32 [ %116, %115 ], [ %103, %101 ]
  %114 = tail call zeroext i1 @_ZNK5blink26NGTableConstraintSpaceData16MaySkipRowLayoutERKS0_jj(%"class.blink::NGTableConstraintSpaceData"* %4, %"class.blink::NGTableConstraintSpaceData"* dereferenceable(96) %6, i32 %113, i32 %112) #7
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = add nuw i32 %113, 1
  %117 = add nuw i32 %112, 1
  %118 = icmp ult i32 %116, %106
  %119 = icmp ult i32 %117, %107
  %120 = and i1 %119, %118
  br i1 %120, label %111, label %121

121:                                              ; preds = %63, %71, %77, %115, %111, %24, %12, %48, %2, %18, %30, %36, %42, %101, %87
  %122 = phi i1 [ false, %87 ], [ true, %101 ], [ false, %42 ], [ false, %36 ], [ false, %30 ], [ false, %18 ], [ false, %2 ], [ false, %48 ], [ false, %12 ], [ false, %24 ], [ false, %111 ], [ true, %115 ], [ false, %77 ], [ false, %71 ], [ false, %63 ]
  ret i1 %122
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26NGTableConstraintSpaceData16MaySkipRowLayoutERKS0_jj(%"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"* dereferenceable(96), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %0, i64 0, i32 4
  %6 = tail call dereferenceable(20) %"struct.blink::NGTableConstraintSpaceData::Row"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData3RowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"* %5, i32 %2) #7
  %7 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %1, i64 0, i32 4
  %8 = tail call dereferenceable(20) %"struct.blink::NGTableConstraintSpaceData::Row"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData3RowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"* %7, i32 %3) #7
  %9 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %103

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %103

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %103

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 4
  %28 = load i8, i8* %27, align 4, !range !3
  %29 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 4
  %30 = load i8, i8* %29, align 4, !range !3
  %31 = icmp eq i8 %28, %30
  br i1 %31, label %32, label %103

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !3
  %35 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 5
  %36 = load i8, i8* %35, align 1, !range !3
  %37 = icmp eq i8 %34, %36
  br i1 %37, label %38, label %103

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %6, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %8, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %22, %40
  %44 = add i32 %22, %42
  %45 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %0, i64 0, i32 5
  %46 = icmp ult i32 %40, %43
  %47 = icmp ult i32 %42, %44
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %103

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %1, i64 0, i32 5
  br label %51

51:                                               ; preds = %49, %97
  %52 = phi i32 [ %42, %49 ], [ %99, %97 ]
  %53 = phi i32 [ %40, %49 ], [ %98, %97 ]
  %54 = tail call dereferenceable(28) %"struct.blink::NGTableConstraintSpaceData::Cell"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1664"* %45, i32 %53) #7
  %55 = tail call dereferenceable(28) %"struct.blink::NGTableConstraintSpaceData::Cell"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1664"* %50, i32 %52) #7
  %56 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %103

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %103

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 0, i32 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 0, i32 2, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %103

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 0, i32 3, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %103

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %85, label %103

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %91, label %103

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %54, i64 0, i32 3
  %93 = load i8, i8* %92, align 4, !range !3
  %94 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %55, i64 0, i32 3
  %95 = load i8, i8* %94, align 4, !range !3
  %96 = icmp eq i8 %93, %95
  br i1 %96, label %97, label %103

97:                                               ; preds = %91
  %98 = add nuw i32 %53, 1
  %99 = add nuw i32 %52, 1
  %100 = icmp ult i32 %98, %43
  %101 = icmp ult i32 %99, %44
  %102 = and i1 %100, %101
  br i1 %102, label %51, label %103

103:                                              ; preds = %97, %85, %79, %73, %67, %61, %51, %91, %38, %4, %14, %20, %26, %32
  %104 = phi i1 [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %4 ], [ true, %38 ], [ true, %97 ], [ false, %85 ], [ false, %79 ], [ false, %73 ], [ false, %67 ], [ false, %61 ], [ false, %51 ], [ false, %91 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(20) %"struct.blink::NGTableConstraintSpaceData::Row"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData3RowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Row", %"struct.blink::NGTableConstraintSpaceData::Row"* %24, i64 %25
  ret %"struct.blink::NGTableConstraintSpaceData::Row"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(28) %"struct.blink::NGTableConstraintSpaceData::Cell"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData4CellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1664"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1664", %"class.WTF::Vector.1664"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1664", %"class.WTF::Vector.1664"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Cell", %"struct.blink::NGTableConstraintSpaceData::Cell"* %24, i64 %25
  ret %"struct.blink::NGTableConstraintSpaceData::Cell"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.blink::NGTableConstraintSpaceData::Section"* @_ZNK3WTF6VectorIN5blink26NGTableConstraintSpaceData7SectionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1654"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1654", %"class.WTF::Vector.1654"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1654", %"class.WTF::Vector.1654"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGTableConstraintSpaceData::Section", %"struct.blink::NGTableConstraintSpaceData::Section"* %24, i64 %25
  ret %"struct.blink::NGTableConstraintSpaceData::Section"* %26
}

; Function Attrs: inlinehint nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121InlineLengthMayChangeERKNS_13ComputedStyleERKNS_6LengthENS0_17LengthResolveTypeERKNS_17NGConstraintSpaceESA_RKNS_14NGLayoutResultE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::Length"* nocapture readonly dereferenceable(8), i32, %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32)) unnamed_addr #5 {
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  %17 = icmp ne i32 %2, 0
  %18 = and i1 %17, %16
  br i1 %18, label %20, label %19

19:                                               ; preds = %5
  switch i8 %15, label %136 [
    i8 7, label %20
    i8 6, label %20
    i8 8, label %102
    i8 1, label %102
  ]

20:                                               ; preds = %19, %19, %5
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 44601490397061246283071436545296723011960832
  %25 = icmp eq i160 %24, 0
  br i1 %25, label %92, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8, !noalias !4
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 12
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 11
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 9
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 10
  store %"class.blink::Length"* %33, %"class.blink::Length"** %6, align 8, !alias.scope !4
  store %"class.blink::Length"* %34, %"class.blink::Length"** %7, align 8, !alias.scope !4
  store %"class.blink::Length"* %35, %"class.blink::Length"** %8, align 8, !alias.scope !4
  store %"class.blink::Length"* %36, %"class.blink::Length"** %9, align 8, !alias.scope !4
  %37 = and i160 %23, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 0
  %39 = and i160 %23, 41538374868278621028243970633760768
  %40 = icmp eq i160 %39, 0
  %41 = select i1 %40, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %42 = select i1 %40, %"class.blink::Length"** %6, %"class.blink::Length"** %8
  %43 = select i1 %38, %"class.blink::Length"** %41, %"class.blink::Length"** %42
  %44 = load %"class.blink::Length"*, %"class.blink::Length"** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 2
  %46 = load i8, i8* %45, align 1
  switch i8 %46, label %47 [
    i8 8, label %58
    i8 1, label %58
  ]

47:                                               ; preds = %26
  %48 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  store %"class.blink::Length"* %33, %"class.blink::Length"** %10, align 8, !alias.scope !7
  store %"class.blink::Length"* %34, %"class.blink::Length"** %11, align 8, !alias.scope !7
  store %"class.blink::Length"* %35, %"class.blink::Length"** %12, align 8, !alias.scope !7
  store %"class.blink::Length"* %36, %"class.blink::Length"** %13, align 8, !alias.scope !7
  %52 = select i1 %40, %"class.blink::Length"** %11, %"class.blink::Length"** %13
  %53 = select i1 %40, %"class.blink::Length"** %12, %"class.blink::Length"** %10
  %54 = select i1 %38, %"class.blink::Length"** %52, %"class.blink::Length"** %53
  %55 = load %"class.blink::Length"*, %"class.blink::Length"** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %55, i64 0, i32 2
  %57 = load i8, i8* %56, align 1
  switch i8 %57, label %92 [
    i8 8, label %58
    i8 1, label %58
  ]

58:                                               ; preds = %47, %47, %26, %26
  %59 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 3, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 26
  %62 = and i32 %61, 3
  switch i32 %62, label %63 [
    i32 0, label %64
    i32 1, label %73
    i32 2, label %67
    i32 3, label %68
  ]

63:                                               ; preds = %58
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  br label %73

67:                                               ; preds = %58
  br label %73

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1, i32 0
  %70 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %69 to i32**
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %71, align 8
  br label %73

73:                                               ; preds = %58, %64, %67, %68
  %74 = phi i32 [ %72, %68 ], [ -64, %67 ], [ %66, %64 ], [ 0, %58 ]
  %75 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = lshr i32 %76, 26
  %78 = and i32 %77, 3
  switch i32 %78, label %79 [
    i32 0, label %80
    i32 1, label %89
    i32 2, label %83
    i32 3, label %84
  ]

79:                                               ; preds = %73
  unreachable

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  br label %89

83:                                               ; preds = %73
  br label %89

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 1, i32 0
  %86 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %85 to i32**
  %87 = load i32*, i32** %86, align 8
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %73, %80, %83, %84
  %90 = phi i32 [ %88, %84 ], [ -64, %83 ], [ %82, %80 ], [ 0, %73 ]
  %91 = icmp eq i32 %74, %90
  br i1 %91, label %92, label %137

92:                                               ; preds = %89, %20, %47
  %93 = bitcast %"class.blink::NGConstraintSpace"* %3 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = bitcast %"class.blink::NGConstraintSpace"* %4 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %95, %98
  br i1 %99, label %100, label %137

100:                                              ; preds = %92
  %101 = icmp eq i8 %15, 1
  br i1 %101, label %102, label %136

102:                                              ; preds = %100, %19, %19
  %103 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = lshr i32 %104, 26
  %106 = and i32 %105, 3
  switch i32 %106, label %107 [
    i32 0, label %108
    i32 1, label %117
    i32 2, label %111
    i32 3, label %112
  ]

107:                                              ; preds = %102
  unreachable

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  br label %117

111:                                              ; preds = %102
  br label %117

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1, i32 0
  %114 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %113 to i32**
  %115 = load i32*, i32** %114, align 8
  %116 = load i32, i32* %115, align 8
  br label %117

117:                                              ; preds = %102, %108, %111, %112
  %118 = phi i32 [ %116, %112 ], [ -64, %111 ], [ %110, %108 ], [ 0, %102 ]
  %119 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 3, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = lshr i32 %120, 26
  %122 = and i32 %121, 3
  switch i32 %122, label %123 [
    i32 0, label %124
    i32 1, label %133
    i32 2, label %127
    i32 3, label %128
  ]

123:                                              ; preds = %117
  unreachable

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  br label %133

127:                                              ; preds = %117
  br label %133

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 1, i32 0
  %130 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %129 to i32**
  %131 = load i32*, i32** %130, align 8
  %132 = load i32, i32* %131, align 8
  br label %133

133:                                              ; preds = %117, %124, %127, %128
  %134 = phi i32 [ %132, %128 ], [ -64, %127 ], [ %126, %124 ], [ 0, %117 ]
  %135 = icmp eq i32 %118, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %100, %133, %19
  br label %137

137:                                              ; preds = %89, %92, %133, %136
  %138 = phi i1 [ false, %136 ], [ true, %89 ], [ true, %92 ], [ true, %133 ]
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_118BlockSizeMayChangeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceES6_RKNS_14NGLayoutResultE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64)) unnamed_addr #0 {
  %5 = tail call zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"* %0)
  br i1 %5, label %158, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 4194304
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 32
  %15 = trunc i64 %14 to i32
  %16 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %15, %19
  br i1 %20, label %157, label %158

21:                                               ; preds = %6
  %22 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 15211807202738752817960438464512
  %30 = icmp eq i160 %29, 0
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 3
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 8
  %35 = select i1 %30, %"class.blink::Length"* %33, %"class.blink::Length"* %34
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 1
  switch i8 %37, label %51 [
    i8 6, label %41
    i8 0, label %38
  ]

38:                                               ; preds = %21
  %39 = and i32 %8, 1572864
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %38, %21
  %42 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %43, 32
  %45 = trunc i64 %44 to i32
  %46 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %47, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %45, %49
  br i1 %50, label %51, label %158

51:                                               ; preds = %41, %38, %21
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 6
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 7
  %54 = select i1 %30, %"class.blink::Length"* %52, %"class.blink::Length"* %53
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %70 [
    i8 6, label %60
    i8 0, label %57
  ]

57:                                               ; preds = %51
  %58 = and i32 %8, 1572864
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %57, %51
  %61 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = lshr i64 %62, 32
  %64 = trunc i64 %63 to i32
  %65 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = lshr i64 %66, 32
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %64, %68
  br i1 %69, label %70, label %158

70:                                               ; preds = %60, %57, %51
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 4
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 5
  %73 = select i1 %30, %"class.blink::Length"* %71, %"class.blink::Length"* %72
  %74 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %73, i64 0, i32 2
  %75 = load i8, i8* %74, align 1
  switch i8 %75, label %89 [
    i8 6, label %79
    i8 0, label %76
  ]

76:                                               ; preds = %70
  %77 = and i32 %8, 1572864
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76, %70
  %80 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = lshr i64 %81, 32
  %83 = trunc i64 %82 to i32
  %84 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = lshr i64 %85, 32
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %83, %87
  br i1 %88, label %89, label %158

89:                                               ; preds = %79, %76, %70
  %90 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %3, i64 0, i32 3, i32 0
  %91 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %91, i64 0, i32 3
  %93 = bitcast i24* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %157, label %97

97:                                               ; preds = %89
  %98 = lshr i32 %8, 28
  %99 = and i32 %98, 3
  switch i32 %99, label %100 [
    i32 0, label %101
    i32 1, label %110
    i32 2, label %104
    i32 3, label %105
  ]

100:                                              ; preds = %97
  unreachable

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  br label %110

104:                                              ; preds = %97
  br label %110

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %107 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %106, align 8
  %108 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %107, i64 0, i32 0, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %97, %101, %104, %105
  %111 = phi i32 [ %109, %105 ], [ -64, %104 ], [ %103, %101 ], [ 0, %97 ]
  %112 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = lshr i32 %113, 28
  %115 = and i32 %114, 3
  switch i32 %115, label %116 [
    i32 0, label %117
    i32 1, label %126
    i32 2, label %120
    i32 3, label %121
  ]

116:                                              ; preds = %110
  unreachable

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %119 = load i32, i32* %118, align 4
  br label %126

120:                                              ; preds = %110
  br label %126

121:                                              ; preds = %110
  %122 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %123 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %122, align 8
  %124 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %123, i64 0, i32 0, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  br label %126

126:                                              ; preds = %110, %117, %120, %121
  %127 = phi i32 [ %125, %121 ], [ -64, %120 ], [ %119, %117 ], [ 0, %110 ]
  %128 = icmp eq i32 %111, %127
  br i1 %128, label %129, label %158

129:                                              ; preds = %126
  %130 = lshr i32 %8, 30
  switch i32 %130, label %140 [
    i32 0, label %131
    i32 1, label %141
    i32 2, label %134
    i32 3, label %135
  ]

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %133 = load i32, i32* %132, align 4
  br label %141

134:                                              ; preds = %129
  br label %141

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %137 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %136, align 8
  %138 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %137, i64 0, i32 1, i32 0
  %139 = load i32, i32* %138, align 8
  br label %141

140:                                              ; preds = %129
  unreachable

141:                                              ; preds = %129, %131, %134, %135
  %142 = phi i32 [ %139, %135 ], [ -64, %134 ], [ %133, %131 ], [ 0, %129 ]
  %143 = lshr i32 %113, 30
  switch i32 %143, label %153 [
    i32 0, label %144
    i32 1, label %154
    i32 2, label %147
    i32 3, label %148
  ]

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %146 = load i32, i32* %145, align 4
  br label %154

147:                                              ; preds = %141
  br label %154

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %150 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %149, align 8
  %151 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %150, i64 0, i32 1, i32 0
  %152 = load i32, i32* %151, align 8
  br label %154

153:                                              ; preds = %141
  unreachable

154:                                              ; preds = %141, %144, %147, %148
  %155 = phi i32 [ %152, %148 ], [ -64, %147 ], [ %146, %144 ], [ 0, %141 ]
  %156 = icmp eq i32 %142, %155
  br i1 %156, label %157, label %158

157:                                              ; preds = %11, %154, %89
  br label %158

158:                                              ; preds = %11, %154, %126, %79, %60, %41, %4, %157
  %159 = phi i1 [ false, %157 ], [ true, %4 ], [ true, %11 ], [ true, %154 ], [ true, %126 ], [ true, %41 ], [ true, %60 ], [ true, %79 ]
  ret i1 %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %5, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 33
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %89

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 113336795588871485128704
  %33 = icmp ne i96 %32, 75557863725914323419136
  %34 = and i96 %31, 8388608
  %35 = icmp eq i96 %34, 0
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %89

37:                                               ; preds = %28, %23
  %38 = tail call zeroext i1 @_ZNK5blink11NGBlockNode19IsAtomicInlineLevelEv(%"class.blink::NGBlockNode"* %0) #7
  br i1 %38, label %89, label %39

39:                                               ; preds = %37
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %39, %44
  %45 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %40, %39 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %39
  %52 = phi %"class.blink::Node"* [ %42, %39 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %56, i64 0, i32 47, i32 0, i32 0
  %58 = load %"class.blink::Element"*, %"class.blink::Element"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %58, i64 0, i32 0, i32 0
  %60 = icmp eq %"class.blink::Node"* %59, %42
  br i1 %60, label %89, label %61

61:                                               ; preds = %51
  %62 = load i8, i8* %24, align 8
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %89

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 4
  %67 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %66 to i96*
  %68 = load i96, i96* %67, align 4
  %69 = and i96 %68, 16777216
  %70 = icmp ne i96 %69, 0
  %71 = or i1 %43, %70
  br i1 %71, label %89, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 48
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 2
  %82 = bitcast %"class.blink::Member.318"* %81 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %85, %87
  br label %89

89:                                               ; preds = %28, %65, %77, %72, %61, %51, %37, %14
  %90 = phi i1 [ false, %14 ], [ false, %28 ], [ false, %37 ], [ true, %51 ], [ false, %61 ], [ %88, %77 ], [ false, %72 ], [ false, %65 ]
  ret i1 %90
}

declare zeroext i1 @_ZNK5blink11NGBlockNode19IsAtomicInlineLevelEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

declare i32 @_ZN5blink27ComputeBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
