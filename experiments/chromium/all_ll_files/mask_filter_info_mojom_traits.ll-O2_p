; ModuleID = '../../ui/gfx/mojom/mask_filter_info_mojom_traits.cc'
source_filename = "../../ui/gfx/mojom/mask_filter_info_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::mojom::internal::MaskFilterInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.gfx::mojom::internal::RRectF_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer.20", %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21" }
%"struct.mojo::internal::Pointer.20" = type { i64 }
%"struct.mojo::internal::Pointer.21" = type { i64 }
%"class.gfx::RRectFBuilder" = type { float, float, float, float, float, float, float, float, float, float, float, float }

$_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom22MaskFilterInfoDataViewENS1_14MaskFilterInfoEE4ReadES3_PS4_(%"class.gfx::mojom::internal::MaskFilterInfo_Data"*, %"class.mojo::Message"*, %"class.gfx::MaskFilterInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::RRectF", align 4
  %5 = bitcast %"class.gfx::RRectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %5) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 52, i1 false) #3
  %6 = getelementptr inbounds %"class.gfx::mojom::internal::MaskFilterInfo_Data", %"class.gfx::mojom::internal::MaskFilterInfo_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.mojo::internal::Pointer"* %6 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %8
  %13 = bitcast i8* %12 to %"class.gfx::mojom::internal::RRectF_Data"*
  %14 = call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_(%"class.gfx::mojom::internal::RRectF_Data"* nonnull %13, %"class.mojo::Message"* %1, %"class.gfx::RRectF"* nonnull %4) #3
  br i1 %14, label %15, label %17

15:                                               ; preds = %3, %10
  %16 = bitcast %"class.gfx::MaskFilterInfo"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %5, i64 52, i1 false)
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i1 [ true, %15 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %5) #3
  ret i1 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom14RRectFDataViewENS1_6RRectFEE4ReadES3_PS4_(%"class.gfx::mojom::internal::RRectF_Data"*, %"class.mojo::Message"*, %"class.gfx::RRectF"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.gfx::RRectF", align 4
  %5 = alloca %"class.gfx::RRectFBuilder", align 4
  %6 = alloca %"class.gfx::RRectF", align 4
  %7 = alloca %"class.gfx::RRectFBuilder", align 4
  %8 = alloca %"class.gfx::RRectF", align 4
  %9 = alloca %"class.gfx::RRectFBuilder", align 4
  %10 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 1
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 5
  %14 = select i1 %13, i32 %11, i32 0
  %15 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.mojo::internal::Pointer.20", %"struct.mojo::internal::Pointer.20"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = bitcast %"struct.mojo::internal::Pointer.20"* %15 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  br i1 %18, label %44, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to float*
  %24 = load float, float* %23, align 1
  %25 = fcmp olt float %24, 0.000000e+00
  br i1 %25, label %164, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, i8* %20, i64 20
  %28 = bitcast i8* %27 to float*
  %29 = load float, float* %28, align 1
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %164, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %20, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds i8, i8* %20, i64 12
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = fcmp ogt float %24, 0x3EB0000000000000
  %39 = select i1 %38, float %24, float 0.000000e+00
  %40 = bitcast float %39 to i32
  %41 = fcmp ogt float %29, 0x3EB0000000000000
  %42 = select i1 %41, float %29, float 0.000000e+00
  %43 = bitcast float %42 to i32
  br label %44

44:                                               ; preds = %3, %31
  %45 = phi i32 [ %34, %31 ], [ 0, %3 ]
  %46 = phi i32 [ %37, %31 ], [ 0, %3 ]
  %47 = phi i32 [ %40, %31 ], [ 0, %3 ]
  %48 = phi i32 [ %43, %31 ], [ 0, %3 ]
  %49 = icmp ult i32 %14, 2
  br i1 %49, label %50, label %61

50:                                               ; preds = %44
  %51 = bitcast %"class.gfx::RRectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %51) #3
  %52 = bitcast %"class.gfx::RRectFBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #3
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %5) #3
  %53 = bitcast %"class.gfx::RRectFBuilder"* %5 to i32*
  store i32 %45, i32* %53, align 4
  %54 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 1
  %55 = bitcast float* %54 to i32*
  store i32 %46, i32* %55, align 4
  %56 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 2
  %57 = bitcast float* %56 to i32*
  store i32 %47, i32* %57, align 4
  %58 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %5, i64 0, i32 3
  %59 = bitcast float* %58 to i32*
  store i32 %48, i32* %59, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %4, %"class.gfx::RRectFBuilder"* nonnull %5) #3
  %60 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %51, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #3
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %51) #3
  br label %164

61:                                               ; preds = %44
  %62 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %62, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = bitcast %"struct.mojo::internal::Pointer.21"* %62 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %64
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = bitcast i8* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 1
  br label %72

72:                                               ; preds = %66, %61
  %73 = phi <2 x float> [ zeroinitializer, %61 ], [ %71, %66 ]
  %74 = icmp ult i32 %14, 4
  br i1 %74, label %75, label %95

75:                                               ; preds = %72
  %76 = shufflevector <2 x float> %73, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %77 = bitcast %"class.gfx::RRectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %77) #3
  %78 = bitcast %"class.gfx::RRectFBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #3
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %7) #3
  %79 = bitcast %"class.gfx::RRectFBuilder"* %7 to i32*
  store i32 %45, i32* %79, align 4
  %80 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 1
  %81 = bitcast float* %80 to i32*
  store i32 %46, i32* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 2
  %83 = bitcast float* %82 to i32*
  store i32 %47, i32* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 3
  %85 = bitcast float* %84 to i32*
  store i32 %48, i32* %85, align 4
  %86 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 4
  %87 = bitcast float* %86 to <4 x float>*
  store <4 x float> %76, <4 x float>* %87, align 4
  %88 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 8
  %89 = extractelement <2 x float> %73, i32 0
  store float %89, float* %88, align 4
  %90 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 9
  %91 = extractelement <2 x float> %73, i32 1
  store float %91, float* %90, align 4
  %92 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 10
  store float %89, float* %92, align 4
  %93 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %7, i64 0, i32 11
  store float %91, float* %93, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %6, %"class.gfx::RRectFBuilder"* nonnull %7) #3
  %94 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* nonnull align 4 %77, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #3
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %77) #3
  br label %164

95:                                               ; preds = %72
  %96 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 5
  %97 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %96, i64 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  %100 = bitcast %"struct.mojo::internal::Pointer.21"* %96 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 %98
  br i1 %99, label %109, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = bitcast i8* %103 to float*
  %105 = load float, float* %104, align 1
  %106 = getelementptr inbounds i8, i8* %101, i64 12
  %107 = bitcast i8* %106 to float*
  %108 = load float, float* %107, align 1
  br label %109

109:                                              ; preds = %102, %95
  %110 = phi float [ 0.000000e+00, %95 ], [ %108, %102 ]
  %111 = phi float [ 0.000000e+00, %95 ], [ %105, %102 ]
  %112 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 6
  %113 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %112, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.mojo::internal::Pointer.21"* %112 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %114
  br i1 %115, label %125, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %117, i64 8
  %120 = bitcast i8* %119 to float*
  %121 = load float, float* %120, align 1
  %122 = getelementptr inbounds i8, i8* %117, i64 12
  %123 = bitcast i8* %122 to float*
  %124 = load float, float* %123, align 1
  br label %125

125:                                              ; preds = %118, %109
  %126 = phi float [ 0.000000e+00, %109 ], [ %124, %118 ]
  %127 = phi float [ 0.000000e+00, %109 ], [ %121, %118 ]
  %128 = getelementptr inbounds %"class.gfx::mojom::internal::RRectF_Data", %"class.gfx::mojom::internal::RRectF_Data"* %0, i64 0, i32 7
  %129 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %128, i64 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  %132 = bitcast %"struct.mojo::internal::Pointer.21"* %128 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 %130
  br i1 %131, label %141, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = bitcast i8* %135 to float*
  %137 = load float, float* %136, align 1
  %138 = getelementptr inbounds i8, i8* %133, i64 12
  %139 = bitcast i8* %138 to float*
  %140 = load float, float* %139, align 1
  br label %141

141:                                              ; preds = %125, %134
  %142 = phi float [ 0.000000e+00, %125 ], [ %140, %134 ]
  %143 = phi float [ 0.000000e+00, %125 ], [ %137, %134 ]
  %144 = bitcast %"class.gfx::RRectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %144) #3
  %145 = bitcast %"class.gfx::RRectFBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %145) #3
  call void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"* nonnull %9) #3
  %146 = bitcast %"class.gfx::RRectFBuilder"* %9 to i32*
  store i32 %45, i32* %146, align 4
  %147 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 1
  %148 = bitcast float* %147 to i32*
  store i32 %46, i32* %148, align 4
  %149 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 2
  %150 = bitcast float* %149 to i32*
  store i32 %47, i32* %150, align 4
  %151 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 3
  %152 = bitcast float* %151 to i32*
  store i32 %48, i32* %152, align 4
  %153 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 4
  %154 = extractelement <2 x float> %73, i32 0
  store float %154, float* %153, align 4
  %155 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 5
  %156 = extractelement <2 x float> %73, i32 1
  store float %156, float* %155, align 4
  %157 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 6
  store float %111, float* %157, align 4
  %158 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 7
  store float %110, float* %158, align 4
  %159 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 8
  store float %127, float* %159, align 4
  %160 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 9
  store float %126, float* %160, align 4
  %161 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 10
  store float %143, float* %161, align 4
  %162 = getelementptr inbounds %"class.gfx::RRectFBuilder", %"class.gfx::RRectFBuilder"* %9, i64 0, i32 11
  store float %142, float* %162, align 4
  call void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* nonnull sret %8, %"class.gfx::RRectFBuilder"* nonnull %9) #3
  %163 = bitcast %"class.gfx::RRectF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* nonnull align 4 %144, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %145) #3
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %144) #3
  br label %164

164:                                              ; preds = %75, %141, %26, %21, %50
  %165 = phi i1 [ true, %50 ], [ false, %21 ], [ false, %26 ], [ true, %75 ], [ true, %141 ]
  ret i1 %165
}

declare void @_ZN3gfx13RRectFBuilderC1Ev(%"class.gfx::RRectFBuilder"*) unnamed_addr #2

declare void @_ZN3gfx13RRectFBuilder5BuildEv(%"class.gfx::RRectF"* sret, %"class.gfx::RRectFBuilder"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
