; ModuleID = '../../third_party/skia/src/core/SkSurfaceCharacterization.cpp'
source_filename = "../../third_party/skia/src/core/SkSurfaceCharacterization.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSurfaceCharacterization = type { %class.sk_sp, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.1, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.24", %class.sk_sp.30, %"struct.std::__1::atomic.3", [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type { %class.SkSpinlock, %class.SkTInternalLList, %class.SkTHashMap, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" }
%class.SkSpinlock = type { %"struct.std::__1::atomic.3" }
%class.SkTInternalLList = type { %class.GrTextBlob*, %class.GrTextBlob* }
%class.GrTextBlob = type <{ %class.SkGlyphRunPainterInterface, %class.SkNVRefCnt.7, [4 x i8], %class.GrTextBlob*, %class.GrTextBlob*, %class.GrSubRunAllocator, %struct.GrSubRunList, i32, %class.SkMatrix, i32, %"struct.GrTextBlob::Key", float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes }
%class.SkFibBlockSizes = type { i32 }
%struct.GrSubRunList = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8"* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GrSubRun* }
%class.GrSubRun = type { i32 (...)**, %"class.std::__1::unique_ptr.8" }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.GrTextBlob::Key" = type { i32, i32, float, float, i32, %"struct.SkMaskFilterBase::BlurRec", i32, %class.SkMatrix, i8, i8, i8, i8 }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot" = type opaque
%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.GrTextBlobCache::PurgeBlobMessage"*, i64 }
%"struct.GrTextBlobCache::PurgeBlobMessage" = type { i32, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.30 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.31, i32, i32 }
%class.sk_sp.31 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.32, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.32 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSurfaceProps = type { i32, i32 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.34, %class.sk_sp.36 }
%union.anon.34 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.35, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.35 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.36 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK25SkSurfaceCharacterizationeqERKS_(%class.SkSurfaceCharacterization*, %class.SkSurfaceCharacterization* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %116, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 0, i32 0
  %12 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %11, align 8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %14 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %13, align 8
  %15 = icmp eq %class.GrContextThreadSafeProxy* %12, %14
  br i1 %15, label %16, label %116

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %22, label %116

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %116

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %116

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  %40 = icmp eq i32 %4, %8
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %116

42:                                               ; preds = %34
  %43 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %116

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %51 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  %53 = tail call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %50, %class.SkColorSpace* %52) #4
  br i1 %53, label %54, label %116

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  %56 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %57 = tail call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* %55, %class.GrBackendFormat* dereferenceable(72) %56) #4
  br i1 %57, label %58, label %116

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %116

64:                                               ; preds = %58
  %65 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp ne i8 %69, 0
  %71 = xor i1 %67, %70
  br i1 %71, label %72, label %116

72:                                               ; preds = %64
  %73 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp ne i8 %77, 0
  %79 = xor i1 %75, %78
  br i1 %79, label %80, label %116

80:                                               ; preds = %72
  %81 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  %82 = load i8, i8* %81, align 2, !range !2
  %83 = icmp eq i8 %82, 0
  %84 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %85 = load i8, i8* %84, align 2, !range !2
  %86 = icmp ne i8 %85, 0
  %87 = xor i1 %83, %86
  br i1 %87, label %88, label %116

88:                                               ; preds = %80
  %89 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = icmp eq i8 %90, 0
  %92 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp ne i8 %93, 0
  %95 = xor i1 %91, %94
  br i1 %95, label %96, label %116

96:                                               ; preds = %88
  %97 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %101 = load i8, i8* %100, align 1, !range !2
  %102 = icmp ne i8 %101, 0
  %103 = xor i1 %99, %102
  br i1 %103, label %104, label %116

104:                                              ; preds = %96
  %105 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %112, %114
  br label %116

116:                                              ; preds = %10, %6, %2, %28, %42, %34, %110, %104, %16, %22, %48, %54, %58, %64, %72, %80, %88, %96
  %117 = phi i1 [ false, %6 ], [ false, %2 ], [ false, %10 ], [ false, %96 ], [ false, %88 ], [ false, %80 ], [ false, %72 ], [ false, %64 ], [ false, %58 ], [ false, %54 ], [ false, %48 ], [ false, %22 ], [ false, %16 ], [ false, %104 ], [ %115, %110 ], [ false, %34 ], [ false, %42 ], [ false, %28 ]
  ret i1 %117
}

declare zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkSurfaceCharacterization13createResizedEii(%class.SkSurfaceCharacterization* noalias sret, %class.SkSurfaceCharacterization*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %6 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %5, align 8
  %7 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %6, i64 0, i32 5, i32 0
  %8 = load %class.GrCaps*, %class.GrCaps** %7, align 8
  %9 = icmp eq %class.GrCaps* %8, null
  br i1 %9, label %10, label %23

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %12 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %11, align 8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %22, i32 0, i32 0) #4
  br label %114

23:                                               ; preds = %4
  %24 = icmp slt i32 %2, 1
  %25 = icmp slt i32 %3, 1
  %26 = or i1 %24, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %8, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, %2
  %31 = icmp slt i32 %29, %3
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %46

33:                                               ; preds = %27, %23
  %34 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %35 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %34, align 8
  %36 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %41, align 1
  %42 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %42, align 2
  %43 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %45, i32 0, i32 0) #4
  br label %114

46:                                               ; preds = %27
  %47 = icmp eq %class.GrContextThreadSafeProxy* %6, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %46, %48
  %52 = ptrtoint %class.GrContextThreadSafeProxy* %6 to i64
  %53 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i32 %3 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %2 to i64
  %58 = or i64 %56, %57
  %59 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %59, align 8, !noalias !3
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic, !noalias !3
  br label %65

65:                                               ; preds = %51, %62
  %66 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  %68 = load i64, i64* %67, align 8, !noalias !3
  %69 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %70 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 9
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12
  %87 = bitcast %class.SkSurfaceCharacterization* %0 to i64*
  store i64 %52, i64* %87, align 8
  %88 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %54, i64* %88, align 8
  %89 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br i1 %61, label %93, label %90

90:                                               ; preds = %65
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 1 monotonic
  br label %93

93:                                               ; preds = %65, %90
  store %class.SkColorSpace* %60, %class.SkColorSpace** %89, align 8
  %94 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %95 = bitcast i32* %94 to i64*
  store i64 %68, i64* %95, align 8
  %96 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1
  %97 = bitcast %struct.SkISize* %96 to i64*
  store i64 %58, i64* %97, align 8
  %98 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %98, %class.GrBackendFormat* dereferenceable(72) %69) #4
  %99 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %71, i32* %99, align 8
  %100 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %73, i32* %100, align 4
  %101 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %75, i8* %101, align 8
  %102 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %77, i8* %102, align 1
  %103 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %79, i8* %103, align 2
  %104 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %81, i8* %104, align 1
  %105 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %83, i8* %105, align 4
  %106 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %85, i8* %106, align 1
  %107 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %107, %class.SkSurfaceProps* dereferenceable(8) %86) #4
  br i1 %61, label %114, label %108

108:                                              ; preds = %93
  %109 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = bitcast %class.SkColorSpace* %60 to i8*
  tail call void @_ZdlPv(i8* %113) #5
  br label %114

114:                                              ; preds = %93, %108, %112, %33, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkSurfaceCharacterization16createColorSpaceE5sk_spI12SkColorSpaceE(%class.SkSurfaceCharacterization* noalias sret, %class.SkSurfaceCharacterization*, %class.sk_sp.31* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %9 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %19, i32 0, i32 0) #4
  br label %89

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %22 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %21, align 8
  %23 = icmp eq %class.GrContextThreadSafeProxy* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %20, %24
  %28 = ptrtoint %class.GrContextThreadSafeProxy* %22 to i64
  %29 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %2, i64 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %33 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1
  %34 = bitcast %struct.SkISize* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !8
  %36 = load i32, i32* %4, align 8, !noalias !11
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 2
  %38 = load i32, i32* %37, align 4, !noalias !11
  %39 = zext i32 %36 to i64
  %40 = zext i32 %38 to i64
  %41 = shl nuw i64 %40, 32
  %42 = or i64 %41, %39
  %43 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %44 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %53 = load i8, i8* %52, align 2, !range !2
  %54 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 9
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12
  %61 = bitcast %class.SkSurfaceCharacterization* %0 to i64*
  store i64 %28, i64* %61, align 8
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %30, i64* %62, align 8
  %63 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = icmp eq %class.SkColorSpace* %32, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %27
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic
  br label %68

68:                                               ; preds = %27, %65
  store %class.SkColorSpace* %32, %class.SkColorSpace** %63, align 8
  %69 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %70 = bitcast i32* %69 to i64*
  store i64 %42, i64* %70, align 8
  %71 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1
  %72 = bitcast %struct.SkISize* %71 to i64*
  store i64 %35, i64* %72, align 8
  %73 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %73, %class.GrBackendFormat* dereferenceable(72) %43) #4
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %45, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %47, i32* %75, align 4
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %49, i8* %76, align 8
  %77 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %51, i8* %77, align 1
  %78 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %53, i8* %78, align 2
  %79 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %55, i8* %79, align 1
  %80 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %57, i8* %80, align 4
  %81 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %59, i8* %81, align 1
  %82 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %82, %class.SkSurfaceProps* dereferenceable(8) %60) #4
  br i1 %64, label %89, label %83

83:                                               ; preds = %68
  %84 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkColorSpace* %32 to i8*
  tail call void @_ZdlPv(i8* %88) #5
  br label %89

89:                                               ; preds = %87, %83, %68, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkSurfaceCharacterization19createBackendFormatE11SkColorTypeRK15GrBackendFormat(%class.SkSurfaceCharacterization* noalias sret, %class.SkSurfaceCharacterization*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %10 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %9, align 8
  %11 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %16, align 1
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %20, i32 0, i32 0) #4
  br label %92

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !14
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 2
  %26 = load i32, i32* %25, align 4, !noalias !17
  %27 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8, !noalias !20
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !20
  br label %33

33:                                               ; preds = %21, %30
  %34 = zext i32 %26 to i64
  %35 = shl nuw i64 %34, 32
  %36 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %37 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %36, align 8
  %38 = icmp eq %class.GrContextThreadSafeProxy* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %33, %39
  %43 = ptrtoint %class.GrContextThreadSafeProxy* %37 to i64
  %44 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %55 = load i8, i8* %54, align 2, !range !2
  %56 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 9
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12
  %63 = bitcast %class.SkSurfaceCharacterization* %0 to i64*
  store i64 %43, i64* %63, align 8
  %64 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %45, i64* %64, align 8
  %65 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br i1 %29, label %69, label %66

66:                                               ; preds = %42
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic
  br label %69

69:                                               ; preds = %66, %42
  store %class.SkColorSpace* %28, %class.SkColorSpace** %65, align 8
  %70 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %71 = bitcast i32* %70 to i64*
  %72 = zext i32 %2 to i64
  %73 = or i64 %35, %72
  store i64 %73, i64* %71, align 8
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1
  %75 = bitcast %struct.SkISize* %74 to i64*
  store i64 %24, i64* %75, align 8
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %76, %class.GrBackendFormat* dereferenceable(72) %3) #4
  %77 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %47, i32* %77, align 8
  %78 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %49, i32* %78, align 4
  %79 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %51, i8* %79, align 8
  %80 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %53, i8* %80, align 1
  %81 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %55, i8* %81, align 2
  %82 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %57, i8* %82, align 1
  %83 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %59, i8* %83, align 4
  %84 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %61, i8* %84, align 1
  %85 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %85, %class.SkSurfaceProps* dereferenceable(8) %62) #4
  br i1 %29, label %92, label %86

86:                                               ; preds = %69
  %87 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = bitcast %class.SkColorSpace* %28 to i8*
  tail call void @_ZdlPv(i8* %91) #5
  br label %92

92:                                               ; preds = %90, %86, %69, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkSurfaceCharacterization10createFBO0Eb(%class.SkSurfaceCharacterization* noalias sret, %class.SkSurfaceCharacterization*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %9 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %19, i32 0, i32 0) #4
  br label %97

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %28, %24, %20
  %33 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 0
  %34 = bitcast %class.SkSurfaceCharacterization* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 40, i1 false) #4
  store i32 5, i32* %33, align 8
  %35 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 1, i32* %37, align 8
  %38 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %44, i32 0, i32 0) #4
  br label %97

45:                                               ; preds = %28
  %46 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %47 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %46, align 8
  %48 = icmp eq %class.GrContextThreadSafeProxy* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  %52 = load i8, i8* %21, align 8, !range !2
  %53 = load i8, i8* %25, align 1, !range !2
  %54 = load i8, i8* %29, align 4, !range !2
  br label %55

55:                                               ; preds = %45, %49
  %56 = phi i8 [ 0, %45 ], [ %54, %49 ]
  %57 = phi i8 [ 0, %45 ], [ %53, %49 ]
  %58 = phi i8 [ 0, %45 ], [ %52, %49 ]
  %59 = ptrtoint %class.GrContextThreadSafeProxy* %47 to i64
  %60 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %63 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12
  %72 = zext i1 %2 to i8
  %73 = bitcast %class.SkSurfaceCharacterization* %0 to i64*
  store i64 %59, i64* %73, align 8
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %61, i64* %74, align 8
  %75 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %55
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 1 monotonic
  br label %82

82:                                               ; preds = %79, %55
  store %class.SkColorSpace* %77, %class.SkColorSpace** %75, align 8
  %83 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %84 = bitcast i32* %4 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast i32* %83 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %86, align 8
  %87 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %87, %class.GrBackendFormat* dereferenceable(72) %62) #4
  %88 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %64, i32* %88, align 8
  %89 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %66, i32* %89, align 4
  %90 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %58, i8* %90, align 8
  %91 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %68, i8* %91, align 1
  %92 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %72, i8* %92, align 2
  %93 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %57, i8* %93, align 1
  %94 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %56, i8* %94, align 4
  %95 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %70, i8* %95, align 1
  %96 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %96, %class.SkSurfaceProps* dereferenceable(8) %71) #4
  br label %97

97:                                               ; preds = %82, %32, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK25SkSurfaceCharacterization12isCompatibleERK16GrBackendTexture(%class.SkSurfaceCharacterization*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = alloca %struct.GrVkImageInfo, align 8
  %5 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %79, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  %14 = bitcast %class.GrBackendFormat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #4
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %3, %class.GrBackendTexture* %1) #4
  %15 = call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* %13, %class.GrBackendFormat* nonnull dereferenceable(72) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #4
  br i1 %15, label %16, label %79

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %79

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %79

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %79

32:                                               ; preds = %28
  %33 = bitcast %struct.GrVkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %33) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 144, i1 false)
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 5
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 6
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 2
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 36, i1 false) #4
  %38 = bitcast i32* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #4
  store i32 1, i32* %37, align 8
  %39 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 7
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 8
  store i32 -1, i32* %40, align 8
  %41 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 0
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 2
  %44 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 36, i1 false) #4
  %45 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 12
  store i32 0, i32* %45, align 8
  %46 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %1, %struct.GrVkImageInfo* nonnull %4) #4
  br i1 %46, label %47, label %78

47:                                               ; preds = %32
  %48 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = trunc i32 %49 to i8
  %51 = icmp slt i8 %50, 0
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %33) #4
  br i1 %51, label %52, label %79

52:                                               ; preds = %24, %47
  %53 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %56, %52
  %61 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %79

66:                                               ; preds = %60
  %67 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = call zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture* %1) #4
  %77 = xor i1 %76, %75
  br label %79

78:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %33) #4
  br label %79

79:                                               ; preds = %56, %20, %16, %12, %8, %2, %72, %60, %66, %78, %28, %47
  %80 = phi i1 [ false, %47 ], [ false, %8 ], [ false, %2 ], [ false, %12 ], [ false, %16 ], [ false, %20 ], [ false, %28 ], [ false, %78 ], [ false, %56 ], [ false, %66 ], [ false, %60 ], [ %77, %72 ]
  ret i1 %80
}

declare void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* sret, %class.GrBackendTexture*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture*, %struct.GrVkImageInfo*) local_unnamed_addr #1

declare zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture*) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #1

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!6 = distinct !{!6, !7, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkImageInfo6makeWHEii"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!19 = distinct !{!19, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!20 = !{!21, !18, !15}
!21 = distinct !{!21, !22, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!22 = distinct !{!22, !"_ZNK11SkColorInfo13refColorSpaceEv"}
