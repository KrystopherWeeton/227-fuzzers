; ModuleID = '../../third_party/swiftshader/third_party/astc-encoder/Source/astc_image_load_store.cpp'
source_filename = "../../third_party/swiftshader/third_party/astc-encoder/Source/astc_image_load_store.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.imageblock = type { [864 x float], [216 x float], [216 x float], [216 x float], [216 x float], [216 x i8], [216 x i8], [216 x i8], float, float, float, float, float, float, float, float, i32, i32, i32, i32 }

; Function Attrs: nounwind optsize ssp uwtable
define hidden float @_Z12float_to_lnsf(float) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = fcmp uno float %0, 0.000000e+00
  %4 = fcmp ole float %0, 0x3E50000000000000
  %5 = or i1 %3, %4
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = tail call float @llvm.fabs.f32(float %0)
  %8 = fcmp ult float %7, 6.553600e+04
  br i1 %8, label %9, label %39

9:                                                ; preds = %6
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  store i32 -1431655766, i32* %2, align 4
  %11 = call float @frexpf(float %0, i32* nonnull %2) #8
  %12 = load i32, i32* %2, align 4
  %13 = icmp slt i32 %12, -13
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = fmul float %0, 0x4180000000000000
  store i32 0, i32* %2, align 4
  br label %22

16:                                               ; preds = %9
  %17 = add nsw i32 %12, 14
  store i32 %17, i32* %2, align 4
  %18 = fadd float %11, -5.000000e-01
  %19 = fmul float %18, 4.096000e+03
  %20 = sitofp i32 %17 to float
  %21 = fmul float %20, 2.048000e+03
  br label %22

22:                                               ; preds = %16, %14
  %23 = phi float [ 0.000000e+00, %14 ], [ %21, %16 ]
  %24 = phi float [ %15, %14 ], [ %19, %16 ]
  %25 = fcmp olt float %24, 3.840000e+02
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = fmul float %24, 0x3FF5555560000000
  br label %35

28:                                               ; preds = %22
  %29 = fcmp ugt float %24, 1.408000e+03
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = fadd float %24, 1.280000e+02
  br label %35

32:                                               ; preds = %28
  %33 = fadd float %24, 5.120000e+02
  %34 = fmul float %33, 0x3FE99999A0000000
  br label %35

35:                                               ; preds = %30, %32, %26
  %36 = phi float [ %27, %26 ], [ %31, %30 ], [ %34, %32 ]
  %37 = fadd float %36, %23
  %38 = fadd float %37, 1.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  br label %39

39:                                               ; preds = %6, %1, %35
  %40 = phi float [ %38, %35 ], [ 0.000000e+00, %1 ], [ 6.553500e+04, %6 ]
  ret float %40
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind optsize
declare float @frexpf(float, i32* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i16 @_Z11lns_to_sf16t(i16 zeroext) local_unnamed_addr #4 {
  %2 = and i16 %0, 2047
  %3 = lshr i16 %0, 11
  %4 = icmp ult i16 %2, 512
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = mul nuw nsw i16 %2, 3
  br label %15

7:                                                ; preds = %1
  %8 = icmp ult i16 %2, 1536
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = shl nuw nsw i16 %2, 2
  %11 = add nsw i16 %10, -512
  br label %15

12:                                               ; preds = %7
  %13 = mul nuw nsw i16 %2, 5
  %14 = add nsw i16 %13, -2048
  br label %15

15:                                               ; preds = %9, %12, %5
  %16 = phi i16 [ %6, %5 ], [ %11, %9 ], [ %14, %12 ]
  %17 = shl nuw nsw i16 %3, 10
  %18 = lshr i16 %16, 3
  %19 = or i16 %18, %17
  %20 = icmp ult i16 %19, 31743
  %21 = select i1 %20, i16 %19, i16 31743
  ret i16 %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i16 @_Z15unorm16_to_sf16t(i16 zeroext) local_unnamed_addr #0 {
  %2 = zext i16 %0 to i32
  %3 = icmp eq i16 %0, -1
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = icmp ult i16 %0, 4
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = shl i16 %0, 8
  br label %18

8:                                                ; preds = %4
  %9 = tail call i32 @_Z5clz32j(i32 %2) #8
  %10 = add i32 %9, -15
  %11 = shl i32 %2, %10
  %12 = lshr i32 %11, 6
  %13 = and i32 %12, 1023
  %14 = shl i32 %9, 10
  %15 = sub i32 30720, %14
  %16 = or i32 %13, %15
  %17 = trunc i32 %16 to i16
  br label %18

18:                                               ; preds = %1, %8, %6
  %19 = phi i16 [ %7, %6 ], [ %17, %8 ], [ 15360, %1 ]
  ret i16 %19
}

; Function Attrs: optsize
declare i32 @_Z5clz32j(i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z36imageblock_initialize_work_from_origP10imageblocki(%struct.imageblock* nocapture, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 0, i64 0
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %47, %2
  ret void

8:                                                ; preds = %47, %4
  %9 = phi i64 [ 0, %4 ], [ %51, %47 ]
  %10 = phi float* [ %5, %4 ], [ %50, %47 ]
  %11 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 5, i64 %9
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  %14 = load float, float* %10, align 4
  br i1 %13, label %25, label %15

15:                                               ; preds = %8
  %16 = tail call float @_Z12float_to_lnsf(float %14) #9
  %17 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 1, i64 %9
  store float %16, float* %17, align 4
  %18 = getelementptr inbounds float, float* %10, i64 1
  %19 = load float, float* %18, align 4
  %20 = tail call float @_Z12float_to_lnsf(float %19) #9
  %21 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 2, i64 %9
  store float %20, float* %21, align 4
  %22 = getelementptr inbounds float, float* %10, i64 2
  %23 = load float, float* %22, align 4
  %24 = tail call float @_Z12float_to_lnsf(float %23) #9
  br label %35

25:                                               ; preds = %8
  %26 = fmul float %14, 6.553500e+04
  %27 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 1, i64 %9
  store float %26, float* %27, align 4
  %28 = getelementptr inbounds float, float* %10, i64 1
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, 6.553500e+04
  %31 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 2, i64 %9
  store float %30, float* %31, align 4
  %32 = getelementptr inbounds float, float* %10, i64 2
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, 6.553500e+04
  br label %35

35:                                               ; preds = %25, %15
  %36 = phi float [ %34, %25 ], [ %24, %15 ]
  %37 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 3, i64 %9
  store float %36, float* %37, align 4
  %38 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 6, i64 %9
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds float, float* %10, i64 3
  %42 = load float, float* %41, align 4
  br i1 %40, label %45, label %43

43:                                               ; preds = %35
  %44 = tail call float @_Z12float_to_lnsf(float %42) #9
  br label %47

45:                                               ; preds = %35
  %46 = fmul float %42, 6.553500e+04
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi float [ %46, %45 ], [ %44, %43 ]
  %49 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 4, i64 %9
  store float %48, float* %49, align 4
  %50 = getelementptr inbounds float, float* %10, i64 4
  %51 = add nuw nsw i64 %9, 1
  %52 = icmp eq i64 %51, %6
  br i1 %52, label %7, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z36imageblock_initialize_orig_from_workP10imageblocki(%struct.imageblock* nocapture, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 0, i64 0
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %133, %2
  ret void

8:                                                ; preds = %133, %4
  %9 = phi i64 [ 0, %4 ], [ %138, %133 ]
  %10 = phi float* [ %5, %4 ], [ %137, %133 ]
  %11 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 5, i64 %9
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 1, i64 %9
  %15 = load float, float* %14, align 4
  %16 = fptoui float %15 to i16
  br i1 %13, label %87, label %17

17:                                               ; preds = %8
  %18 = and i16 %16, 2047
  %19 = lshr i16 %16, 11
  %20 = icmp ult i16 %18, 512
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = mul nuw nsw i16 %18, 3
  br label %31

23:                                               ; preds = %17
  %24 = icmp ult i16 %18, 1536
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = shl nuw nsw i16 %18, 2
  %27 = add nsw i16 %26, -512
  br label %31

28:                                               ; preds = %23
  %29 = mul nuw nsw i16 %18, 5
  %30 = add nsw i16 %29, -2048
  br label %31

31:                                               ; preds = %21, %25, %28
  %32 = phi i16 [ %22, %21 ], [ %27, %25 ], [ %30, %28 ]
  %33 = shl nuw nsw i16 %19, 10
  %34 = lshr i16 %32, 3
  %35 = or i16 %34, %33
  %36 = icmp ult i16 %35, 31743
  %37 = select i1 %36, i16 %35, i16 31743
  %38 = tail call float @_Z13sf16_to_floatt(i16 zeroext %37) #8
  store float %38, float* %10, align 4
  %39 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 2, i64 %9
  %40 = load float, float* %39, align 4
  %41 = fptoui float %40 to i16
  %42 = and i16 %41, 2047
  %43 = lshr i16 %41, 11
  %44 = icmp ult i16 %42, 512
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = mul nuw nsw i16 %42, 3
  br label %55

47:                                               ; preds = %31
  %48 = icmp ult i16 %42, 1536
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = shl nuw nsw i16 %42, 2
  %51 = add nsw i16 %50, -512
  br label %55

52:                                               ; preds = %47
  %53 = mul nuw nsw i16 %42, 5
  %54 = add nsw i16 %53, -2048
  br label %55

55:                                               ; preds = %45, %49, %52
  %56 = phi i16 [ %46, %45 ], [ %51, %49 ], [ %54, %52 ]
  %57 = shl nuw nsw i16 %43, 10
  %58 = lshr i16 %56, 3
  %59 = or i16 %58, %57
  %60 = icmp ult i16 %59, 31743
  %61 = select i1 %60, i16 %59, i16 31743
  %62 = tail call float @_Z13sf16_to_floatt(i16 zeroext %61) #8
  %63 = getelementptr inbounds float, float* %10, i64 1
  store float %62, float* %63, align 4
  %64 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 3, i64 %9
  %65 = load float, float* %64, align 4
  %66 = fptoui float %65 to i16
  %67 = and i16 %66, 2047
  %68 = lshr i16 %66, 11
  %69 = icmp ult i16 %67, 512
  br i1 %69, label %70, label %72

70:                                               ; preds = %55
  %71 = mul nuw nsw i16 %67, 3
  br label %80

72:                                               ; preds = %55
  %73 = icmp ult i16 %67, 1536
  br i1 %73, label %74, label %77

74:                                               ; preds = %72
  %75 = shl nuw nsw i16 %67, 2
  %76 = add nsw i16 %75, -512
  br label %80

77:                                               ; preds = %72
  %78 = mul nuw nsw i16 %67, 5
  %79 = add nsw i16 %78, -2048
  br label %80

80:                                               ; preds = %70, %74, %77
  %81 = phi i16 [ %71, %70 ], [ %76, %74 ], [ %79, %77 ]
  %82 = shl nuw nsw i16 %68, 10
  %83 = lshr i16 %81, 3
  %84 = or i16 %83, %82
  %85 = icmp ult i16 %84, 31743
  %86 = select i1 %85, i16 %84, i16 31743
  br label %100

87:                                               ; preds = %8
  %88 = tail call zeroext i16 @_Z15unorm16_to_sf16t(i16 zeroext %16) #9
  %89 = tail call float @_Z13sf16_to_floatt(i16 zeroext %88) #8
  store float %89, float* %10, align 4
  %90 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 2, i64 %9
  %91 = load float, float* %90, align 4
  %92 = fptoui float %91 to i16
  %93 = tail call zeroext i16 @_Z15unorm16_to_sf16t(i16 zeroext %92) #9
  %94 = tail call float @_Z13sf16_to_floatt(i16 zeroext %93) #8
  %95 = getelementptr inbounds float, float* %10, i64 1
  store float %94, float* %95, align 4
  %96 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 3, i64 %9
  %97 = load float, float* %96, align 4
  %98 = fptoui float %97 to i16
  %99 = tail call zeroext i16 @_Z15unorm16_to_sf16t(i16 zeroext %98) #9
  br label %100

100:                                              ; preds = %87, %80
  %101 = phi i16 [ %99, %87 ], [ %86, %80 ]
  %102 = tail call float @_Z13sf16_to_floatt(i16 zeroext %101) #8
  %103 = getelementptr inbounds float, float* %10, i64 2
  store float %102, float* %103, align 4
  %104 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 6, i64 %9
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 4, i64 %9
  %108 = load float, float* %107, align 4
  %109 = fptoui float %108 to i16
  br i1 %106, label %131, label %110

110:                                              ; preds = %100
  %111 = and i16 %109, 2047
  %112 = lshr i16 %109, 11
  %113 = icmp ult i16 %111, 512
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = mul nuw nsw i16 %111, 3
  br label %124

116:                                              ; preds = %110
  %117 = icmp ult i16 %111, 1536
  br i1 %117, label %118, label %121

118:                                              ; preds = %116
  %119 = shl nuw nsw i16 %111, 2
  %120 = add nsw i16 %119, -512
  br label %124

121:                                              ; preds = %116
  %122 = mul nuw nsw i16 %111, 5
  %123 = add nsw i16 %122, -2048
  br label %124

124:                                              ; preds = %114, %118, %121
  %125 = phi i16 [ %115, %114 ], [ %120, %118 ], [ %123, %121 ]
  %126 = shl nuw nsw i16 %112, 10
  %127 = lshr i16 %125, 3
  %128 = or i16 %127, %126
  %129 = icmp ult i16 %128, 31743
  %130 = select i1 %129, i16 %128, i16 31743
  br label %133

131:                                              ; preds = %100
  %132 = tail call zeroext i16 @_Z15unorm16_to_sf16t(i16 zeroext %109) #9
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i16 [ %132, %131 ], [ %130, %124 ]
  %135 = tail call float @_Z13sf16_to_floatt(i16 zeroext %134) #8
  %136 = getelementptr inbounds float, float* %10, i64 3
  store float %135, float* %136, align 4
  %137 = getelementptr inbounds float, float* %10, i64 4
  %138 = add nuw nsw i64 %9, 1
  %139 = icmp eq i64 %138, %6
  br i1 %139, label %7, label %8
}

; Function Attrs: optsize
declare float @_Z13sf16_to_floatt(i16 zeroext) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_Z23update_imageblock_flagsP10imageblockiii(%struct.imageblock* nocapture, i32, i32, i32) local_unnamed_addr #6 {
  %5 = mul nsw i32 %2, %1
  %6 = mul nsw i32 %5, %3
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %57

8:                                                ; preds = %4
  %9 = mul i32 %3, %2
  %10 = mul i32 %9, %1
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %53, %8
  %13 = phi i64 [ 0, %8 ], [ %55, %53 ]
  %14 = phi i32 [ 1, %8 ], [ %54, %53 ]
  %15 = phi float [ 0xC7D2CED320000000, %8 ], [ %46, %53 ]
  %16 = phi float [ 0x47D2CED320000000, %8 ], [ %44, %53 ]
  %17 = phi float [ 0xC7D2CED320000000, %8 ], [ %42, %53 ]
  %18 = phi float [ 0x47D2CED320000000, %8 ], [ %40, %53 ]
  %19 = phi float [ 0xC7D2CED320000000, %8 ], [ %38, %53 ]
  %20 = phi float [ 0x47D2CED320000000, %8 ], [ %36, %53 ]
  %21 = phi float [ 0xC7D2CED320000000, %8 ], [ %34, %53 ]
  %22 = phi float [ 0x47D2CED320000000, %8 ], [ %32, %53 ]
  %23 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 1, i64 %13
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 2, i64 %13
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 3, i64 %13
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 4, i64 %13
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %24, %22
  %32 = select i1 %31, float %24, float %22
  %33 = fcmp ogt float %24, %21
  %34 = select i1 %33, float %24, float %21
  %35 = fcmp olt float %26, %20
  %36 = select i1 %35, float %26, float %20
  %37 = fcmp ogt float %26, %19
  %38 = select i1 %37, float %26, float %19
  %39 = fcmp olt float %28, %18
  %40 = select i1 %39, float %28, float %18
  %41 = fcmp ogt float %28, %17
  %42 = select i1 %41, float %28, float %17
  %43 = fcmp olt float %30, %16
  %44 = select i1 %43, float %30, float %16
  %45 = fcmp ogt float %30, %15
  %46 = select i1 %45, float %30, float %15
  %47 = icmp eq i32 %14, 1
  br i1 %47, label %48, label %53

48:                                               ; preds = %12
  %49 = fcmp oeq float %24, %26
  %50 = fcmp oeq float %24, %28
  %51 = and i1 %49, %50
  %52 = zext i1 %51 to i32
  br label %53

53:                                               ; preds = %48, %12
  %54 = phi i32 [ %14, %12 ], [ %52, %48 ]
  %55 = add nuw nsw i64 %13, 1
  %56 = icmp eq i64 %55, %11
  br i1 %56, label %57, label %12

57:                                               ; preds = %53, %4
  %58 = phi float [ 0x47D2CED320000000, %4 ], [ %32, %53 ]
  %59 = phi float [ 0xC7D2CED320000000, %4 ], [ %34, %53 ]
  %60 = phi float [ 0x47D2CED320000000, %4 ], [ %36, %53 ]
  %61 = phi float [ 0xC7D2CED320000000, %4 ], [ %38, %53 ]
  %62 = phi float [ 0x47D2CED320000000, %4 ], [ %40, %53 ]
  %63 = phi float [ 0xC7D2CED320000000, %4 ], [ %42, %53 ]
  %64 = phi float [ 0x47D2CED320000000, %4 ], [ %44, %53 ]
  %65 = phi float [ 0xC7D2CED320000000, %4 ], [ %46, %53 ]
  %66 = phi i32 [ 1, %4 ], [ %54, %53 ]
  %67 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 8
  store float %58, float* %67, align 4
  %68 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 9
  store float %59, float* %68, align 4
  %69 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 10
  store float %60, float* %69, align 4
  %70 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 11
  store float %61, float* %70, align 4
  %71 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 12
  store float %62, float* %71, align 4
  %72 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 13
  store float %63, float* %72, align 4
  %73 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 14
  store float %64, float* %73, align 4
  %74 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 15
  store float %65, float* %74, align 4
  %75 = getelementptr inbounds %struct.imageblock, %struct.imageblock* %0, i64 0, i32 16
  store i32 %66, i32* %75, align 4
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind optsize }
attributes #9 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
