; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_sender.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_sender.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::AbsoluteCaptureTimeSender" = type { %"class.webrtc::Clock"*, %"class.webrtc::Mutex", %"class.webrtc::Timestamp", i32, i32, i32, i64, %"class.absl::optional" }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase.0" }
%"class.webrtc::rtc_units_impl::UnitBase.0" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.webrtc::Clock" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional" }

@_ZN6webrtc25AbsoluteCaptureTimeSender25kInterpolationMaxIntervalE = hidden local_unnamed_addr constant { i64 } { i64 1000000 }, align 8
@_ZN6webrtc25AbsoluteCaptureTimeSender22kInterpolationMaxErrorE = hidden local_unnamed_addr constant { i64 } { i64 1000 }, align 8

@_ZN6webrtc25AbsoluteCaptureTimeSenderC1EPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::AbsoluteCaptureTimeSender"*, %"class.webrtc::Clock"*), void (%"class.webrtc::AbsoluteCaptureTimeSender"*, %"class.webrtc::Clock"*)* @_ZN6webrtc25AbsoluteCaptureTimeSenderC2EPNS_5ClockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25AbsoluteCaptureTimeSenderC2EPNS_5ClockE(%"class.webrtc::AbsoluteCaptureTimeSender"*, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 0
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %4, align 8
  %5 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  %6 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %6, align 4
  %7 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #6
  %8 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %8, %union.pthread_mutexattr_t* nonnull %3) #6
  %10 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  %11 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 -9223372036854775808, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc25AbsoluteCaptureTimeSender9GetSourceEjN3rtc9ArrayViewIKjLln4711EEE(i32, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  %5 = select i1 %4, i32* null, i32* %1
  %6 = tail call i32 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator9GetSourceEjN3rtc9ArrayViewIKjLln4711EEE(i32 %0, i32* %5, i64 %2) #6
  ret i32 %6
}

declare i32 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator9GetSourceEjN3rtc9ArrayViewIKjLln4711EEE(i32, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25AbsoluteCaptureTimeSender12OnSendPacketEjjjmN4absl8optionalIlEE(%"class.absl::optional.1"* noalias nocapture sret, %"class.webrtc::AbsoluteCaptureTimeSender"*, i32, i32, i32, i64, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 0
  %9 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %8, align 8
  %10 = bitcast %"class.webrtc::Clock"* %9 to i64 (%"class.webrtc::Clock"*)***
  %11 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %11, i64 2
  %13 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::Clock"* %9) #6
  %15 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 1, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #6
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, -9223372036854775808
  %25 = icmp eq i64 %14, 9223372036854775807
  %26 = or i1 %25, %24
  br i1 %26, label %79, label %27

27:                                               ; preds = %7
  %28 = icmp ne i64 %14, -9223372036854775808
  %29 = icmp ne i64 %23, 9223372036854775807
  %30 = sub nsw i64 %14, %23
  %31 = and i1 %28, %29
  %32 = icmp sgt i64 %30, 1000000
  %33 = and i1 %31, %32
  br i1 %33, label %79, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, %2
  br i1 %37, label %38, label %79

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 5
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %40, %4
  %42 = icmp eq i32 %4, 0
  %43 = or i1 %42, %41
  br i1 %43, label %79, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = icmp ne i8 %18, 0
  %49 = xor i1 %48, %47
  %50 = xor i1 %47, true
  %51 = or i1 %49, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %44
  %53 = icmp eq i8 %18, 0
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %52
  tail call void @llvm.trap() #6
  unreachable

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %21
  br i1 %58, label %60, label %79

59:                                               ; preds = %44
  br i1 %49, label %79, label %60

60:                                               ; preds = %55, %59
  %61 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 6
  %64 = load i64, i64* %63, align 8
  %65 = tail call i64 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator35InterpolateAbsoluteCaptureTimestampEjjjm(i32 %3, i32 %4, i32 %62, i64 %64) #6
  %66 = sub i64 %65, %5
  %67 = sub i64 %5, %65
  %68 = icmp ult i64 %67, %66
  %69 = select i1 %68, i64 %67, i64 %66
  %70 = uitofp i64 %69 to double
  %71 = fmul double %70, 0x3E8F400000000000
  %72 = tail call double @llvm.round.f64(double %71) #6
  %73 = fptosi double %72 to i64
  %74 = icmp sgt i64 %73, 1
  br i1 %74, label %79, label %75

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %76, align 8
  %77 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast %union.anon.5* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #6
  br label %89

79:                                               ; preds = %27, %55, %59, %38, %34, %7, %60
  %80 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 3
  store i32 %2, i32* %80, align 8
  %81 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 4
  store i32 %3, i32* %81, align 4
  %82 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 5
  store i32 %4, i32* %82, align 8
  %83 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 6
  store i64 %5, i64* %83, align 8
  %84 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %17, i64 16, i1 false)
  store i64 %14, i64* %22, align 8
  %85 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %85, align 8
  %86 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %5, i64* %86, align 8
  %87 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %18, i8* %87, align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %19, i64 15, i1 false)
  br label %89

89:                                               ; preds = %79, %75
  %90 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc25AbsoluteCaptureTimeSender19ShouldSendExtensionENS_9TimestampEjjjmN4absl8optionalIlEE(%"class.webrtc::AbsoluteCaptureTimeSender"* nocapture readonly, i64, i32, i32, i32, i64, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -9223372036854775808
  %11 = icmp eq i64 %1, 9223372036854775807
  %12 = or i1 %10, %11
  br i1 %12, label %65, label %13

13:                                               ; preds = %7
  %14 = icmp ne i64 %1, -9223372036854775808
  %15 = icmp ne i64 %9, 9223372036854775807
  %16 = sub nsw i64 %1, %9
  %17 = and i1 %14, %15
  %18 = icmp sgt i64 %16, 1000000
  %19 = and i1 %17, %18
  br i1 %19, label %65, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %2
  br i1 %23, label %24, label %65

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, %4
  %28 = icmp eq i32 %4, 0
  %29 = or i1 %28, %27
  br i1 %29, label %65, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp ne i8 %32, 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = xor i1 %33, %36
  %38 = xor i1 %33, true
  %39 = or i1 %37, %38
  br i1 %39, label %49, label %40

40:                                               ; preds = %30
  %41 = icmp eq i8 %35, 0
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %40
  tail call void @llvm.trap() #6
  unreachable

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  br i1 %48, label %50, label %65

49:                                               ; preds = %30
  br i1 %37, label %65, label %50

50:                                               ; preds = %43, %49
  %51 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeSender", %"class.webrtc::AbsoluteCaptureTimeSender"* %0, i64 0, i32 6
  %54 = load i64, i64* %53, align 8
  %55 = tail call i64 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator35InterpolateAbsoluteCaptureTimestampEjjjm(i32 %3, i32 %4, i32 %52, i64 %54) #6
  %56 = sub i64 %55, %5
  %57 = sub i64 %5, %55
  %58 = icmp ult i64 %57, %56
  %59 = select i1 %58, i64 %57, i64 %56
  %60 = uitofp i64 %59 to double
  %61 = fmul double %60, 0x3E8F400000000000
  %62 = tail call double @llvm.round.f64(double %61) #6
  %63 = fptosi double %62 to i64
  %64 = icmp sgt i64 %63, 1
  br label %65

65:                                               ; preds = %43, %13, %24, %49, %20, %7, %50
  %66 = phi i1 [ %64, %50 ], [ true, %7 ], [ true, %20 ], [ true, %24 ], [ true, %49 ], [ true, %43 ], [ true, %13 ]
  ret i1 %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator35InterpolateAbsoluteCaptureTimestampEjjjm(i32, i32, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
