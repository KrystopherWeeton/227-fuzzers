; ModuleID = '../../third_party/pdfium/core/fxge/cfx_fontmapper.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_fontmapper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::AltFontName" = type { i8*, i8 }
%"struct.(anonymous namespace)::FX_FontStyle" = type { i8*, i64, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.(anonymous namespace)::AltFontFamily" = type { i8*, i8* }
%class.CFX_FontMapper = type { i8, %"class.fxcrt::ByteString", %"class.std::__1::vector", %"class.std::__1::unique_ptr.4", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.26", %"class.std::__1::vector.33", [2 x %"class.fxcrt::RetainPtr.40"], [14 x %"class.fxcrt::RetainPtr.40"] }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"*, %"class.std::__1::__compressed_pair.1" }
%"struct.CFX_FontMapper::FaceData" = type <{ %"class.fxcrt::ByteString", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.CFX_FontMapper::FaceData"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.SystemFontInfoIface* }
%class.SystemFontInfoIface = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_FontMgr* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.fxcrt::ByteString"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type { %"class.fxcrt::ByteString", %"class.fxcrt::ByteString" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.fxcrt::RetainPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.53", %"class.fxcrt::RetainPtr.57" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.fxcrt::Retainable"* }
%class.CFX_FontMgr = type <{ %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::map", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.FT_LibraryRec_* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_FontMapper* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.65", i64 }
%"class.fxcrt::UnownedPtr.65" = type { i8* }
%"class.pdfium::span.73" = type { %"class.fxcrt::UnownedPtr.74", i64 }
%"class.fxcrt::UnownedPtr.74" = type { i8* }
%class.CFX_SubstFont = type <{ %"class.fxcrt::ByteString", i32, i32, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.pdfium::span.73" }
%"class.fxcrt::RetainPtr.75" = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.CFX_FontMgr::FontDesc"* }
%"class.CFX_FontMgr::FontDesc" = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", i64, %"class.std::__1::unique_ptr.79", [16 x %"class.fxcrt::ObservedPtr"] }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { i8* }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %class.CFX_Face* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.73" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.124 }
%union.anon.124 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6pdfium8ContainsIA14_PKcN5fxcrt10ByteStringELPv0EEEbRKT_RKT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN14CFX_FontMapper8FaceDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN5fxcrt10ByteStringES3_EENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [12 x i8] c"Chrome Sans\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"Chrome Symbol\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"ZapfDingbats\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"Chrome Dingbats\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN12_GLOBAL__N_116kBase14FontNamesE = internal constant [14 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [7 x i8] c"Narrow\00", align 1
@_ZN12_GLOBAL__N_113kNarrowFamilyE = internal constant [21 x i8] c"LiberationSansNarrow\00", align 16
@.str.9 = private unnamed_addr constant [10 x i8] c"Condensed\00", align 1
@_ZN12_GLOBAL__N_114g_AltFontNamesE = internal constant [89 x %"struct.(anonymous namespace)::AltFontName"] [%"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i8 4 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i8 4 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8 0 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i32 0, i32 0), i8 0 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i8 0 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i8 0 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i32 0), i8 1 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), i8 2 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85, i32 0, i32 0), i8 3 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8 4 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.89, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.91, i32 0, i32 0), i8 5 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i32 0, i32 0), i8 6 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i32 0, i32 0), i8 7 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8 12 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i8 12 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 8 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8 8 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.99, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.101, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.102, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.104, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.105, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.106, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.107, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i32 0, i32 0), i8 8 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.112, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.113, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i32 0, i32 0), i8 8 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i32 0, i32 0), i8 9 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8 10 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.118, i32 0, i32 0), i8 11 }, %"struct.(anonymous namespace)::AltFontName" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8 13 }], align 16
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"Courier\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"Courier-Bold\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"Courier-BoldOblique\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"Courier-Oblique\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"Helvetica\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"Helvetica-Bold\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Helvetica-BoldOblique\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"Helvetica-Oblique\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"Times-Roman\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"Times-Bold\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"Times-BoldItalic\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"Times-Italic\00", align 1
@_ZN12_GLOBAL__N_112g_FontStylesE = internal constant [5 x %"struct.(anonymous namespace)::FX_FontStyle"] [%"struct.(anonymous namespace)::FX_FontStyle" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i64 4, i32 262144 }, %"struct.(anonymous namespace)::FX_FontStyle" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i64 6, i32 64 }, %"struct.(anonymous namespace)::FX_FontStyle" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i64 10, i32 262208 }, %"struct.(anonymous namespace)::FX_FontStyle" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i64 3, i32 0 }, %"struct.(anonymous namespace)::FX_FontStyle" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i64 7, i32 0 }], align 16
@.str.23 = private unnamed_addr constant [5 x i8] c"Bold\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Italic\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"BoldItalic\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"Reg\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"Regular\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.29 = private unnamed_addr constant [7 x i8] c"Script\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"ScriptMTBold\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"Palace\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"PalaceScriptMT\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"French\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"FrenchScriptMT\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"FreeStyle\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"FreeStyleScript\00", align 1
@_ZN12_GLOBAL__N_117g_AltFontFamiliesE = internal unnamed_addr constant [3 x %"struct.(anonymous namespace)::AltFontFamily"] [%"struct.(anonymous namespace)::AltFontFamily" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i32 0, i32 0) }, %"struct.(anonymous namespace)::AltFontFamily" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i32 0, i32 0) }, %"struct.(anonymous namespace)::AltFontFamily" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0) }], align 16
@.str.37 = private unnamed_addr constant [13 x i8] c"AGaramondPro\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"Adobe Garamond Pro\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"BankGothicBT-Medium\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"BankGothic Md BT\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"ForteMT\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"Forte\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"MyriadPro\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"Arial,Bold\00", align 1
@.str.46 = private unnamed_addr constant [17 x i8] c"Arial,BoldItalic\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"Arial,Italic\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"Arial-Bold\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"Arial-BoldItalic\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"Arial-BoldItalicMT\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"Arial-BoldMT\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"Arial-Italic\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"Arial-ItalicMT\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"ArialBold\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"ArialBoldItalic\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"ArialItalic\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"ArialMT\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"ArialMT,Bold\00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"ArialMT,BoldItalic\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"ArialMT,Italic\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"ArialRoundedMTBold\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"Courier,Bold\00", align 1
@.str.63 = private unnamed_addr constant [19 x i8] c"Courier,BoldItalic\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"Courier,Italic\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"CourierBold\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"CourierBoldItalic\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"CourierItalic\00", align 1
@.str.68 = private unnamed_addr constant [11 x i8] c"CourierNew\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"CourierNew,Bold\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"CourierNew,BoldItalic\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"CourierNew,Italic\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"CourierNew-Bold\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"CourierNew-BoldItalic\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"CourierNew-Italic\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"CourierNewBold\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c"CourierNewBoldItalic\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"CourierNewItalic\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"CourierNewPS-BoldItalicMT\00", align 1
@.str.79 = private unnamed_addr constant [20 x i8] c"CourierNewPS-BoldMT\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c"CourierNewPS-ItalicMT\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"CourierNewPSMT\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"CourierStd\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"CourierStd-Bold\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c"CourierStd-BoldOblique\00", align 1
@.str.85 = private unnamed_addr constant [19 x i8] c"CourierStd-Oblique\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"Helvetica,Bold\00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"Helvetica,BoldItalic\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"Helvetica,Italic\00", align 1
@.str.89 = private unnamed_addr constant [21 x i8] c"Helvetica-BoldItalic\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"Helvetica-Italic\00", align 1
@.str.91 = private unnamed_addr constant [14 x i8] c"HelveticaBold\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"HelveticaBoldItalic\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"HelveticaItalic\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"SymbolMT\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"TimesBold\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"TimesBoldItalic\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"TimesItalic\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"TimesNewRoman\00", align 1
@.str.99 = private unnamed_addr constant [19 x i8] c"TimesNewRoman,Bold\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"TimesNewRoman,BoldItalic\00", align 1
@.str.101 = private unnamed_addr constant [21 x i8] c"TimesNewRoman,Italic\00", align 1
@.str.102 = private unnamed_addr constant [19 x i8] c"TimesNewRoman-Bold\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"TimesNewRoman-BoldItalic\00", align 1
@.str.104 = private unnamed_addr constant [21 x i8] c"TimesNewRoman-Italic\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"TimesNewRomanBold\00", align 1
@.str.106 = private unnamed_addr constant [24 x i8] c"TimesNewRomanBoldItalic\00", align 1
@.str.107 = private unnamed_addr constant [20 x i8] c"TimesNewRomanItalic\00", align 1
@.str.108 = private unnamed_addr constant [16 x i8] c"TimesNewRomanPS\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c"TimesNewRomanPS-Bold\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"TimesNewRomanPS-BoldItalic\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"TimesNewRomanPS-BoldItalicMT\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"TimesNewRomanPS-BoldMT\00", align 1
@.str.113 = private unnamed_addr constant [23 x i8] c"TimesNewRomanPS-Italic\00", align 1
@.str.114 = private unnamed_addr constant [25 x i8] c"TimesNewRomanPS-ItalicMT\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"TimesNewRomanPSMT\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"TimesNewRomanPSMT,Bold\00", align 1
@.str.117 = private unnamed_addr constant [29 x i8] c"TimesNewRomanPSMT,BoldItalic\00", align 1
@.str.118 = private unnamed_addr constant [25 x i8] c"TimesNewRomanPSMT,Italic\00", align 1

@_ZN14CFX_FontMapperC1EP11CFX_FontMgr = hidden unnamed_addr alias void (%class.CFX_FontMapper*, %class.CFX_FontMgr*), void (%class.CFX_FontMapper*, %class.CFX_FontMgr*)* @_ZN14CFX_FontMapperC2EP11CFX_FontMgr
@_ZN14CFX_FontMapperD1Ev = hidden unnamed_addr alias void (%class.CFX_FontMapper*), void (%class.CFX_FontMapper*)* @_ZN14CFX_FontMapperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapperC2EP11CFX_FontMgr(%class.CFX_FontMapper*, %class.CFX_FontMgr*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %4) #12
  %5 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 4, i32 0
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  store %class.CFX_FontMgr* %1, %class.CFX_FontMgr** %6, align 8
  %8 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::vector.26"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 176, i1 false)
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapperD2Ev(%class.CFX_FontMapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 0
  %3 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 14
  br label %4

4:                                                ; preds = %21, %1
  %5 = phi %"class.fxcrt::RetainPtr.40"* [ %3, %1 ], [ %6, %21 ]
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %5, i64 -1
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_Face*, %class.CFX_Face** %7, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %7, align 8
  %9 = icmp eq %class.CFX_Face* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %8, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %8, i64 0, i32 0
  %17 = bitcast %class.CFX_Face* %8 to void (%"class.fxcrt::Retainable"*)***
  %18 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %18, i64 1
  %20 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, align 8
  tail call void %20(%"class.fxcrt::Retainable"* nonnull %16) #12
  br label %21

21:                                               ; preds = %4, %10, %15
  %22 = icmp eq %"class.fxcrt::RetainPtr.40"* %6, %2
  br i1 %22, label %23, label %4

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 7, i64 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CFX_Face*, %class.CFX_Face** %24, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %24, align 8
  %26 = icmp eq %class.CFX_Face* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %25, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %25, i64 0, i32 0
  %34 = bitcast %class.CFX_Face* %25 to void (%"class.fxcrt::Retainable"*)***
  %35 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, i64 1
  %37 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, align 8
  tail call void %37(%"class.fxcrt::Retainable"* nonnull %33) #12
  br label %38

38:                                               ; preds = %23, %27, %32
  %39 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 7, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CFX_Face*, %class.CFX_Face** %39, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %39, align 8
  %41 = icmp eq %class.CFX_Face* %40, null
  br i1 %41, label %119, label %108

42:                                               ; preds = %119
  %43 = bitcast %"struct.std::__1::pair"* %122 to i8*
  %44 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6, i32 0, i32 1
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %46 = icmp eq %"struct.std::__1::pair"* %45, %122
  br i1 %46, label %56, label %47

47:                                               ; preds = %42, %47
  %48 = phi %"struct.std::__1::pair"* [ %49, %47 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 -1, i32 1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %50) #12
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %51) #12
  %52 = icmp eq %"struct.std::__1::pair"* %49, %122
  br i1 %52, label %53, label %47

53:                                               ; preds = %47
  %54 = bitcast %"class.std::__1::vector.33"* %120 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %42
  %57 = phi i8* [ %55, %53 ], [ %43, %42 ]
  store %"struct.std::__1::pair"* %122, %"struct.std::__1::pair"** %44, align 8
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %119, %56
  %59 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5
  %60 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %60, align 8
  %62 = icmp eq %"class.fxcrt::ByteString"* %61, null
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.fxcrt::ByteString"* %61 to i8*
  %65 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5, i32 0, i32 1
  %66 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %65, align 8
  %67 = icmp eq %"class.fxcrt::ByteString"* %66, %61
  br i1 %67, label %75, label %68

68:                                               ; preds = %63, %68
  %69 = phi %"class.fxcrt::ByteString"* [ %70, %68 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %69, i64 -1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %70) #12
  %71 = icmp eq %"class.fxcrt::ByteString"* %70, %61
  br i1 %71, label %72, label %68

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::vector.26"* %59 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi i8* [ %74, %72 ], [ %64, %63 ]
  store %"class.fxcrt::ByteString"* %61, %"class.fxcrt::ByteString"** %65, align 8
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %58, %75
  %78 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %78, align 8
  store %class.SystemFontInfoIface* null, %class.SystemFontInfoIface** %78, align 8
  %80 = icmp eq %class.SystemFontInfoIface* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %class.SystemFontInfoIface* %79 to void (%class.SystemFontInfoIface*)***
  %83 = load void (%class.SystemFontInfoIface*)**, void (%class.SystemFontInfoIface*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %83, i64 1
  %85 = load void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %84, align 8
  tail call void %85(%class.SystemFontInfoIface* nonnull %79) #12
  br label %86

86:                                               ; preds = %77, %81
  %87 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %87, i64 0, i32 0, i32 0
  %89 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %88, align 8
  %90 = icmp eq %"struct.CFX_FontMapper::FaceData"* %89, null
  br i1 %90, label %106, label %91

91:                                               ; preds = %86
  %92 = bitcast %"struct.CFX_FontMapper::FaceData"* %89 to i8*
  %93 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2, i32 0, i32 1
  %94 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %93, align 8
  %95 = icmp eq %"struct.CFX_FontMapper::FaceData"* %94, %89
  br i1 %95, label %104, label %96

96:                                               ; preds = %91, %96
  %97 = phi %"struct.CFX_FontMapper::FaceData"* [ %98, %96 ], [ %94, %91 ]
  %98 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %97, i64 -1
  %99 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %98, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %99) #12
  %100 = icmp eq %"struct.CFX_FontMapper::FaceData"* %98, %89
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = bitcast %"class.std::__1::vector"* %87 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %91
  %105 = phi i8* [ %103, %101 ], [ %92, %91 ]
  store %"struct.CFX_FontMapper::FaceData"* %89, %"struct.CFX_FontMapper::FaceData"** %93, align 8
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %86, %104
  %107 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %107) #12
  ret void

108:                                              ; preds = %38
  %109 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %40, i64 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = add nsw i64 %110, -1
  store i64 %111, i64* %109, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %40, i64 0, i32 0
  %115 = bitcast %class.CFX_Face* %40 to void (%"class.fxcrt::Retainable"*)***
  %116 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %116, i64 1
  %118 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %117, align 8
  tail call void %118(%"class.fxcrt::Retainable"* nonnull %114) #12
  br label %119

119:                                              ; preds = %113, %108, %38
  %120 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6
  %121 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %120, i64 0, i32 0, i32 0
  %122 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %121, align 8
  %123 = icmp eq %"struct.std::__1::pair"* %122, null
  br i1 %123, label %58, label %42
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper17SetSystemFontInfoENSt3__110unique_ptrI19SystemFontInfoIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_FontMapper* nocapture, %class.SystemFontInfoIface*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SystemFontInfoIface* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = ptrtoint %class.SystemFontInfoIface* %1 to i64
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.4"* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %class.SystemFontInfoIface* %8, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = bitcast %class.SystemFontInfoIface* %8 to void (%class.SystemFontInfoIface*)***
  %13 = load void (%class.SystemFontInfoIface*)**, void (%class.SystemFontInfoIface*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %13, i64 1
  %15 = load void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %14, align 8
  tail call void %15(%class.SystemFontInfoIface* nonnull %8) #12
  br label %16

16:                                               ; preds = %2, %11, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CFX_FontMapper17GetChecksumFromTTEPv(%class.CFX_FontMapper* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca [256 x i32], align 16
  %4 = alloca %"class.pdfium::span", align 8
  %5 = bitcast [256 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %6, align 8
  %8 = ptrtoint [256 x i32]* %3 to i64
  %9 = bitcast %"class.pdfium::span"* %4 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !2
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 1
  store i64 1024, i64* %10, align 8, !alias.scope !2
  %11 = bitcast %class.SystemFontInfoIface* %7 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %12 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %12, i64 5
  %14 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %13, align 8
  %15 = call i32 %14(%class.SystemFontInfoIface* %7, i8* %1, i32 1953784678, %"class.pdfium::span"* nonnull %4) #12
  br label %16

16:                                               ; preds = %16, %2
  %17 = phi i64 [ 0, %2 ], [ %55, %16 ]
  %18 = phi <4 x i32> [ zeroinitializer, %2 ], [ %53, %16 ]
  %19 = phi <4 x i32> [ zeroinitializer, %2 ], [ %54, %16 ]
  %20 = getelementptr [256 x i32], [256 x i32]* %3, i64 0, i64 %17
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 16
  %23 = getelementptr i32, i32* %20, i64 4
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 16
  %26 = add <4 x i32> %22, %18
  %27 = add <4 x i32> %25, %19
  %28 = or i64 %17, 8
  %29 = getelementptr [256 x i32], [256 x i32]* %3, i64 0, i64 %28
  %30 = bitcast i32* %29 to <4 x i32>*
  %31 = load <4 x i32>, <4 x i32>* %30, align 16
  %32 = getelementptr i32, i32* %29, i64 4
  %33 = bitcast i32* %32 to <4 x i32>*
  %34 = load <4 x i32>, <4 x i32>* %33, align 16
  %35 = add <4 x i32> %31, %26
  %36 = add <4 x i32> %34, %27
  %37 = or i64 %17, 16
  %38 = getelementptr [256 x i32], [256 x i32]* %3, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 16
  %41 = getelementptr i32, i32* %38, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 16
  %44 = add <4 x i32> %40, %35
  %45 = add <4 x i32> %43, %36
  %46 = or i64 %17, 24
  %47 = getelementptr [256 x i32], [256 x i32]* %3, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 16
  %50 = getelementptr i32, i32* %47, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  %52 = load <4 x i32>, <4 x i32>* %51, align 16
  %53 = add <4 x i32> %49, %44
  %54 = add <4 x i32> %52, %45
  %55 = add nuw nsw i64 %17, 32
  %56 = icmp eq i64 %55, 256
  br i1 %56, label %57, label %16, !llvm.loop !5

57:                                               ; preds = %16
  %58 = add <4 x i32> %54, %53
  %59 = shufflevector <4 x i32> %58, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %60 = add <4 x i32> %58, %59
  %61 = shufflevector <4 x i32> %60, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %62 = add <4 x i32> %60, %61
  %63 = extractelement <4 x i32> %62, i32 0
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #12
  ret i32 %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper15GetPSNameFromTTEPv(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_FontMapper* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::span", align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.pdfium::span.73", align 8
  %7 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %9 = bitcast %"class.pdfium::span"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = bitcast %class.SystemFontInfoIface* %8 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %11 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %11, i64 5
  %13 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %12, align 8
  %14 = call i32 %13(%class.SystemFontInfoIface* %8, i8* %2, i32 1851878757, %"class.pdfium::span"* nonnull %4) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #12
  br label %40

17:                                               ; preds = %3
  %18 = zext i32 %14 to i64
  %19 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %18, i64 1) #12
  %20 = ptrtoint i8* %19 to i64
  %21 = sub i64 %18, %20
  %22 = getelementptr i8, i8* %19, i64 %21
  %23 = ptrtoint i8* %22 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %23, i1 false) #12
  %24 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %25 = bitcast %"class.pdfium::span"* %5 to i64*
  store i64 %20, i64* %25, align 8
  %26 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 %18, i64* %26, align 8
  %27 = bitcast %class.SystemFontInfoIface* %24 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %28 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %28, i64 5
  %30 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %29, align 8
  %31 = call i32 %30(%class.SystemFontInfoIface* %24, i8* %2, i32 1851878757, %"class.pdfium::span"* nonnull %5) #12
  %32 = icmp eq i32 %31, %14
  br i1 %32, label %33, label %36

33:                                               ; preds = %17
  %34 = bitcast %"class.pdfium::span.73"* %6 to i64*
  store i64 %20, i64* %34, align 8
  %35 = getelementptr inbounds %"class.pdfium::span.73", %"class.pdfium::span.73"* %6, i64 0, i32 1
  store i64 %18, i64* %35, align 8
  call void @_Z13GetNameFromTTN6pdfium4spanIKhEEj(%"class.fxcrt::ByteString"* sret %0, %"class.pdfium::span.73"* nonnull %6, i32 6) #12
  br label %37

36:                                               ; preds = %17
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #12
  br label %37

37:                                               ; preds = %36, %33
  %38 = icmp eq i8* %19, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  call void @_Z7FX_FreePv(i8* nonnull %19) #12
  br label %40

40:                                               ; preds = %39, %37, %16
  ret void
}

declare void @_Z13GetNameFromTTN6pdfium4spanIKhEEj(%"class.fxcrt::ByteString"* sret, %"class.pdfium::span.73"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper16AddInstalledFontERKN5fxcrt10ByteStringEi(%class.CFX_FontMapper*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.CFX_FontMapper::FaceData", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"struct.std::__1::pair", align 8
  %7 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %9 = icmp eq %class.SystemFontInfoIface* %8, null
  br i1 %9, label %123, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.CFX_FontMapper::FaceData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %4, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %12, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  %13 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %4, i64 0, i32 1
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2, i32 0, i32 1
  %15 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %14, align 8
  %16 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %16, align 8
  %18 = icmp ult %"struct.CFX_FontMapper::FaceData"* %15, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %15, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %20, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #12
  %21 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %15, i64 0, i32 1
  %22 = load i32, i32* %13, align 8
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %15, i64 1
  %24 = ptrtoint %"struct.CFX_FontMapper::FaceData"* %23 to i64
  %25 = bitcast %"struct.CFX_FontMapper::FaceData"** %14 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %10
  %27 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorIN14CFX_FontMapper8FaceDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %27, %"struct.CFX_FontMapper::FaceData"* nonnull dereferenceable(16) %4) #12
  br label %28

28:                                               ; preds = %19, %26
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %29 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 1
  %30 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* %1, %"class.fxcrt::ByteString"* dereferenceable(8) %29) #12
  br i1 %30, label %123, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %34 = icmp eq %"class.fxcrt::StringDataTemplate"* %33, null
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 0
  %36 = select i1 %34, i8* null, i8* %35
  br i1 %34, label %41, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 %39
  br label %41

41:                                               ; preds = %31, %37
  %42 = phi i8* [ %40, %37 ], [ null, %31 ]
  %43 = icmp eq i8* %36, %42
  br i1 %43, label %109, label %46

44:                                               ; preds = %46
  %45 = icmp eq i8* %50, %42
  br i1 %45, label %109, label %46

46:                                               ; preds = %41, %44
  %47 = phi i8* [ %50, %44 ], [ %36, %41 ]
  %48 = load i8, i8* %47, align 1
  %49 = icmp ugt i8 %48, -128
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  br i1 %49, label %51, label %44

51:                                               ; preds = %46
  %52 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %53 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3
  %54 = select i1 %34, [1 x i8]* @.str.10, [1 x i8]* %53
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %54, i64 0, i64 0
  %56 = bitcast %class.SystemFontInfoIface* %52 to i8* (%class.SystemFontInfoIface*, i8*)***
  %57 = load i8* (%class.SystemFontInfoIface*, i8*)**, i8* (%class.SystemFontInfoIface*, i8*)*** %56, align 8
  %58 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %57, i64 4
  %59 = load i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %58, align 8
  %60 = call i8* %59(%class.SystemFontInfoIface* %52, i8* %55) #12
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %75

62:                                               ; preds = %51
  %63 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %64 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %65 = icmp eq %"class.fxcrt::StringDataTemplate"* %64, null
  %66 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %64, i64 0, i32 3
  %67 = select i1 %65, [1 x i8]* @.str.10, [1 x i8]* %66
  %68 = getelementptr inbounds [1 x i8], [1 x i8]* %67, i64 0, i64 0
  %69 = bitcast %class.SystemFontInfoIface* %63 to i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)***
  %70 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)**, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*** %69, align 8
  %71 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %70, i64 3
  %72 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %71, align 8
  %73 = call i8* %72(%class.SystemFontInfoIface* %63, i32 0, i1 zeroext false, i32 1, i32 0, i8* %68) #12
  %74 = icmp eq i8* %73, null
  br i1 %74, label %123, label %75

75:                                               ; preds = %62, %51
  %76 = phi i8* [ %60, %51 ], [ %73, %62 ]
  %77 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  %78 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %78, align 8
  call void @_ZN14CFX_FontMapper15GetPSNameFromTTEPv(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CFX_FontMapper* %0, i8* nonnull %76)
  %79 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %78, align 8
  %80 = icmp eq %"class.fxcrt::StringDataTemplate"* %79, null
  br i1 %80, label %103, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %79, i64 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::pair"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #12
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %87, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %88, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  %89 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6, i32 0, i32 1
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %91, align 8
  %93 = icmp ult %"struct.std::__1::pair"* %90, %92
  br i1 %93, label %94, label %100

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %95, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %87) #12
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %96, %"class.fxcrt::ByteString"* dereferenceable(8) %88) #12
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 1
  %98 = ptrtoint %"struct.std::__1::pair"* %97 to i64
  %99 = bitcast %"struct.std::__1::pair"** %89 to i64*
  store i64 %98, i64* %99, align 8
  br label %102

100:                                              ; preds = %85
  %101 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6
  call void @_ZNSt3__16vectorINS_4pairIN5fxcrt10ByteStringES3_EENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.33"* %101, %"struct.std::__1::pair"* nonnull dereferenceable(16) %6) #12
  br label %102

102:                                              ; preds = %94, %100
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %88) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #12
  br label %103

103:                                              ; preds = %75, %102, %81
  %104 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %105 = bitcast %class.SystemFontInfoIface* %104 to void (%class.SystemFontInfoIface*, i8*)***
  %106 = load void (%class.SystemFontInfoIface*, i8*)**, void (%class.SystemFontInfoIface*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %106, i64 8
  %108 = load void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %107, align 8
  call void %108(%class.SystemFontInfoIface* %104, i8* nonnull %76) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  br label %109

109:                                              ; preds = %44, %41, %103
  %110 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5, i32 0, i32 1
  %111 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %110, align 8
  %112 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %113 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %112, align 8
  %114 = icmp eq %"class.fxcrt::ByteString"* %111, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %109
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %111, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  %116 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %111, i64 1
  %117 = ptrtoint %"class.fxcrt::ByteString"* %116 to i64
  %118 = bitcast %"class.fxcrt::ByteString"** %110 to i64*
  store i64 %117, i64* %118, align 8
  br label %121

119:                                              ; preds = %109
  %120 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.26"* %120, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  br label %121

121:                                              ; preds = %115, %119
  %122 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* %29, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  br label %123

123:                                              ; preds = %3, %121, %62, %28
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper18LoadInstalledFontsEv(%class.CFX_FontMapper*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %2, align 8
  %4 = icmp eq %class.SystemFontInfoIface* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SystemFontInfoIface* %3 to i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)***
  %11 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)**, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %11, i64 2
  %13 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.SystemFontInfoIface* nonnull %3, %class.CFX_FontMapper* %0) #12
  store i8 1, i8* %6, align 8
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper19MatchInstalledFontsERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_FontMapper*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %6, align 8
  %8 = icmp eq %class.SystemFontInfoIface* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = bitcast %class.SystemFontInfoIface* %7 to i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)***
  %15 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)**, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %15, i64 2
  %17 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.SystemFontInfoIface* nonnull %7, %class.CFX_FontMapper* %1) #12
  store i8 1, i8* %10, align 8
  br label %19

19:                                               ; preds = %3, %9, %13
  %20 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 5
  %21 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast %"class.fxcrt::ByteString"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.26"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ult i64 %27, 2147483648
  %29 = inttoptr i64 %25 to %"class.fxcrt::ByteString"*
  br i1 %28, label %31, label %30, !prof !8

30:                                               ; preds = %19
  tail call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %19
  %32 = trunc i64 %27 to i32
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %65

34:                                               ; preds = %31
  %35 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  %36 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %20, i64 0, i32 0, i32 0
  %38 = shl i64 %26, 29
  %39 = ashr exact i64 %38, 32
  %40 = add nsw i64 %39, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %36, align 8
  %41 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %29, i64 %40, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %41, align 8
  %43 = icmp eq %"class.fxcrt::StringDataTemplate"* %42, null
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 3
  %45 = select i1 %43, [1 x i8]* @.str.10, [1 x i8]* %44
  %46 = getelementptr inbounds [1 x i8], [1 x i8]* %45, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %4, i8* %46)
  %47 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #12
  br i1 %47, label %48, label %52

48:                                               ; preds = %55, %34
  %49 = phi i64 [ %40, %34 ], [ %57, %55 ]
  %50 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %37, align 8
  %51 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %50, i64 %49
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %51) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %112

52:                                               ; preds = %34, %55
  %53 = phi i64 [ %57, %55 ], [ %40, %34 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %52
  %56 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %37, align 8
  %57 = add nsw i64 %53, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %36, align 8
  %58 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %56, i64 %57, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %58, align 8
  %60 = icmp eq %"class.fxcrt::StringDataTemplate"* %59, null
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3
  %62 = select i1 %60, [1 x i8]* @.str.10, [1 x i8]* %61
  %63 = getelementptr inbounds [1 x i8], [1 x i8]* %62, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %4, i8* %63)
  %64 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #12
  br i1 %64, label %48, label %52

65:                                               ; preds = %52, %31
  %66 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 6
  %67 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 6, i32 0, i32 1
  %68 = bitcast %"struct.std::__1::pair"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector.33"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 4
  %74 = icmp ult i64 %73, 2147483648
  %75 = inttoptr i64 %71 to %"struct.std::__1::pair"*
  br i1 %74, label %77, label %76, !prof !8

76:                                               ; preds = %65
  call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %65
  %78 = trunc i64 %73 to i32
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %111

80:                                               ; preds = %77
  %81 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  %82 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %66, i64 0, i32 0, i32 0
  %84 = shl i64 %72, 28
  %85 = ashr exact i64 %84, 32
  %86 = add nsw i64 %85, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %82, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 %86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %87, align 8
  %89 = icmp eq %"class.fxcrt::StringDataTemplate"* %88, null
  %90 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %88, i64 0, i32 3
  %91 = select i1 %89, [1 x i8]* @.str.10, [1 x i8]* %90
  %92 = getelementptr inbounds [1 x i8], [1 x i8]* %91, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %5, i8* %92)
  %93 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #12
  br i1 %93, label %94, label %98

94:                                               ; preds = %101, %80
  %95 = phi i64 [ %86, %80 ], [ %103, %101 ]
  %96 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %83, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 %95, i32 1
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %97) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  br label %112

98:                                               ; preds = %80, %101
  %99 = phi i64 [ %103, %101 ], [ %86, %80 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %83, align 8
  %103 = add nsw i64 %99, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %82, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 %103, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %104, align 8
  %106 = icmp eq %"class.fxcrt::StringDataTemplate"* %105, null
  %107 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %105, i64 0, i32 3
  %108 = select i1 %106, [1 x i8]* @.str.10, [1 x i8]* %107
  %109 = getelementptr inbounds [1 x i8], [1 x i8]* %108, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %5, i8* %109)
  %110 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #12
  br i1 %110, label %94, label %98

111:                                              ; preds = %98, %77
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #12
  br label %112

112:                                              ; preds = %94, %48, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* noalias sret, i8*) unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %4, align 8
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* %1) #12
  %5 = tail call i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"* %0, i8 signext 32) #12
  %6 = tail call i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"* %0, i8 signext 45) #12
  %7 = tail call i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"* %0, i8 signext 44) #12
  %8 = tail call { i8, i64 } @_ZNK5fxcrt10ByteString4FindEcm(%"class.fxcrt::ByteString"* %0, i8 signext 43, i64 0) #12
  %9 = extractvalue { i8, i64 } %8, 0
  %10 = extractvalue { i8, i64 } %8, 1
  switch i8 %9, label %11 [
    i8 0, label %17
    i8 1, label %12
  ], !prof !9

11:                                               ; preds = %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !10
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !11
  unreachable

12:                                               ; preds = %2
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %3, %"class.fxcrt::ByteString"* %0, i64 %10) #12
  %16 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %17

17:                                               ; preds = %2, %12, %14
  call void @_ZN5fxcrt10ByteString9MakeLowerEv(%"class.fxcrt::ByteString"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* noalias nocapture sret, %class.CFX_FontMapper* nocapture, %class.CFX_SubstFont*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.pdfium::Optional", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %11 = alloca %"class.pdfium::span.73", align 8
  %12 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %13 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %14 = alloca %"class.pdfium::span.73", align 8
  %15 = alloca %"class.pdfium::Optional", align 8
  %16 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %17 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %18 = alloca %"class.pdfium::span.73", align 8
  %19 = alloca %"class.pdfium::Optional", align 8
  %20 = icmp slt i32 %3, 14
  br i1 %20, label %21, label %104

21:                                               ; preds = %7
  %22 = sext i32 %3 to i64
  %23 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 8, i64 %22
  %24 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CFX_Face*, %class.CFX_Face** %24, align 8
  %26 = icmp eq %class.CFX_Face* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = ptrtoint %class.CFX_Face* %25 to i64
  %29 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %25, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %30, align 8
  br label %273

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZN11CFX_FontMgr14GetBuiltinFontEm(%"class.pdfium::Optional"* nonnull sret %8, i64 %22) #12
  %35 = load i8, i8* %34, align 8, !range !7
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %103, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 4, i32 0
  %39 = bitcast %"class.fxcrt::RetainPtr.40"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %38, align 8
  %41 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.pdfium::span.73"* %11 to i8*
  %45 = bitcast %"class.pdfium::span.73"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %45, i64 16, i1 false)
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* nonnull sret %9, %class.CFX_FontMgr* %40, %"class.fxcrt::RetainPtr.75"* nonnull dereferenceable(8) %10, %"class.pdfium::span.73"* nonnull %11, i32 0) #12
  %46 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.fxcrt::RetainPtr.40"* %9 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %46, align 8
  %49 = load %class.CFX_Face*, %class.CFX_Face** %24, align 8
  %50 = bitcast %"class.fxcrt::RetainPtr.40"* %23 to i64*
  store i64 %48, i64* %50, align 8
  %51 = icmp eq %class.CFX_Face* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %37
  store %class.CFX_Face* null, %class.CFX_Face** %46, align 8
  br label %78

53:                                               ; preds = %37
  %54 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %49, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store %class.CFX_Face* null, %class.CFX_Face** %46, align 8
  br label %78

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %49, i64 0, i32 0
  %61 = bitcast %class.CFX_Face* %49 to void (%"class.fxcrt::Retainable"*)***
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  call void %64(%"class.fxcrt::Retainable"* nonnull %60) #12
  %65 = load %class.CFX_Face*, %class.CFX_Face** %46, align 8
  %66 = bitcast %class.CFX_Face* %65 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %46, align 8
  %67 = icmp eq %class.CFX_Face* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %65, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add nsw i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %65, i64 0, i32 0
  %75 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %76 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, i64 1
  %77 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, align 8
  call void %77(%"class.fxcrt::Retainable"* nonnull %74) #12
  br label %78

78:                                               ; preds = %58, %52, %59, %68, %73
  %79 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %79, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %79, align 8
  %81 = icmp eq %"class.CFX_FontMgr::FontDesc"* %80, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %80, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i64 %84, -1
  store i64 %85, i64* %83, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %80, i64 0, i32 0
  %89 = bitcast %"class.CFX_FontMgr::FontDesc"* %80 to void (%"class.fxcrt::Retainable"*)***
  %90 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %90, i64 1
  %92 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %91, align 8
  call void %92(%"class.fxcrt::Retainable"* nonnull %88) #12
  br label %93

93:                                               ; preds = %78, %82, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  %94 = load %class.CFX_Face*, %class.CFX_Face** %24, align 8
  %95 = ptrtoint %class.CFX_Face* %94 to i64
  %96 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %95, i64* %96, align 8
  %97 = icmp eq %class.CFX_Face* %94, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %94, i64 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = add nsw i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  br label %273

103:                                              ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  br label %104

104:                                              ; preds = %103, %7
  %105 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %2, i64 0, i32 7
  store i8 1, i8* %105, align 2
  %106 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %2, i64 0, i32 3
  store i32 %4, i32* %106, align 8
  %107 = icmp eq i32 %5, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %2, i64 0, i32 2
  store i32 %5, i32* %109, align 4
  br label %110

110:                                              ; preds = %104, %108
  %111 = and i32 %6, 16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %192, label %113

113:                                              ; preds = %110
  call void @_ZN13CFX_SubstFont14UseChromeSerifEv(%class.CFX_SubstFont* %2) #12
  %114 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 7, i64 1
  %115 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %class.CFX_Face*, %class.CFX_Face** %115, align 8
  %117 = icmp eq %class.CFX_Face* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %113
  %119 = ptrtoint %class.CFX_Face* %116 to i64
  %120 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %119, i64* %120, align 8
  br label %187

121:                                              ; preds = %113
  %122 = bitcast %"class.fxcrt::RetainPtr.40"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 4, i32 0
  %124 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %123, align 8
  %125 = bitcast %"class.fxcrt::RetainPtr.75"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  %126 = bitcast %"class.fxcrt::RetainPtr.75"* %13 to i64*
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #12
  call void @_ZN11CFX_FontMgr14GetBuiltinFontEm(%"class.pdfium::Optional"* nonnull sret %15, i64 14) #12
  %128 = load i8, i8* %127, align 8, !range !7
  %129 = icmp eq i8 %128, 1
  br i1 %129, label %131, label %130, !prof !8

130:                                              ; preds = %121
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !12
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  unreachable

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.pdfium::span.73"* %14 to i8*
  %134 = bitcast %"class.pdfium::span.73"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* align 8 %134, i64 16, i1 false)
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* nonnull sret %12, %class.CFX_FontMgr* %124, %"class.fxcrt::RetainPtr.75"* nonnull dereferenceable(8) %13, %"class.pdfium::span.73"* nonnull %14, i32 0) #12
  %135 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.fxcrt::RetainPtr.40"* %12 to i64*
  %137 = load i64, i64* %136, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %135, align 8
  %138 = load %class.CFX_Face*, %class.CFX_Face** %115, align 8
  %139 = bitcast %"class.fxcrt::RetainPtr.40"* %114 to i64*
  store i64 %137, i64* %139, align 8
  %140 = icmp eq %class.CFX_Face* %138, null
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  store %class.CFX_Face* null, %class.CFX_Face** %135, align 8
  br label %167

142:                                              ; preds = %131
  %143 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %138, i64 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = add nsw i64 %144, -1
  store i64 %145, i64* %143, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %142
  store %class.CFX_Face* null, %class.CFX_Face** %135, align 8
  br label %167

148:                                              ; preds = %142
  %149 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %138, i64 0, i32 0
  %150 = bitcast %class.CFX_Face* %138 to void (%"class.fxcrt::Retainable"*)***
  %151 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %151, i64 1
  %153 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %152, align 8
  call void %153(%"class.fxcrt::Retainable"* nonnull %149) #12
  %154 = load %class.CFX_Face*, %class.CFX_Face** %135, align 8
  %155 = bitcast %class.CFX_Face* %154 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %135, align 8
  %156 = icmp eq %class.CFX_Face* %154, null
  br i1 %156, label %167, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %154, i64 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = add nsw i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %157
  %163 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %154, i64 0, i32 0
  %164 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %155, align 8
  %165 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %164, i64 1
  %166 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %165, align 8
  call void %166(%"class.fxcrt::Retainable"* nonnull %163) #12
  br label %167

167:                                              ; preds = %147, %141, %148, %157, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #12
  %168 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %168, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %168, align 8
  %170 = icmp eq %"class.CFX_FontMgr::FontDesc"* %169, null
  br i1 %170, label %182, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %169, i64 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = add nsw i64 %173, -1
  store i64 %174, i64* %172, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %169, i64 0, i32 0
  %178 = bitcast %"class.CFX_FontMgr::FontDesc"* %169 to void (%"class.fxcrt::Retainable"*)***
  %179 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, i64 1
  %181 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %180, align 8
  call void %181(%"class.fxcrt::Retainable"* nonnull %177) #12
  br label %182

182:                                              ; preds = %176, %171, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %183 = load %class.CFX_Face*, %class.CFX_Face** %115, align 8
  %184 = ptrtoint %class.CFX_Face* %183 to i64
  %185 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %184, i64* %185, align 8
  %186 = icmp eq %class.CFX_Face* %183, null
  br i1 %186, label %273, label %187

187:                                              ; preds = %118, %182
  %188 = phi %class.CFX_Face* [ %116, %118 ], [ %183, %182 ]
  %189 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %188, i64 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = add nsw i64 %190, 1
  store i64 %191, i64* %189, align 8
  br label %273

192:                                              ; preds = %110
  %193 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %2, i64 0, i32 0
  %194 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* %193, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #12
  %195 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 7, i64 0
  %196 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %195, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %class.CFX_Face*, %class.CFX_Face** %196, align 8
  %198 = icmp eq %class.CFX_Face* %197, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %192
  %200 = ptrtoint %class.CFX_Face* %197 to i64
  %201 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %200, i64* %201, align 8
  br label %268

202:                                              ; preds = %192
  %203 = bitcast %"class.fxcrt::RetainPtr.40"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #12
  %204 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 4, i32 0
  %205 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %204, align 8
  %206 = bitcast %"class.fxcrt::RetainPtr.75"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #12
  %207 = bitcast %"class.fxcrt::RetainPtr.75"* %17 to i64*
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #12
  call void @_ZN11CFX_FontMgr14GetBuiltinFontEm(%"class.pdfium::Optional"* nonnull sret %19, i64 15) #12
  %209 = load i8, i8* %208, align 8, !range !7
  %210 = icmp eq i8 %209, 1
  br i1 %210, label %212, label %211, !prof !8

211:                                              ; preds = %202
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !12
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  unreachable

212:                                              ; preds = %202
  %213 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %214 = bitcast %"class.pdfium::span.73"* %18 to i8*
  %215 = bitcast %"class.pdfium::span.73"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 8 %215, i64 16, i1 false)
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* nonnull sret %16, %class.CFX_FontMgr* %205, %"class.fxcrt::RetainPtr.75"* nonnull dereferenceable(8) %17, %"class.pdfium::span.73"* nonnull %18, i32 0) #12
  %216 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = bitcast %"class.fxcrt::RetainPtr.40"* %16 to i64*
  %218 = load i64, i64* %217, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %216, align 8
  %219 = load %class.CFX_Face*, %class.CFX_Face** %196, align 8
  %220 = bitcast %"class.fxcrt::RetainPtr.40"* %195 to i64*
  store i64 %218, i64* %220, align 8
  %221 = icmp eq %class.CFX_Face* %219, null
  br i1 %221, label %222, label %223

222:                                              ; preds = %212
  store %class.CFX_Face* null, %class.CFX_Face** %216, align 8
  br label %248

223:                                              ; preds = %212
  %224 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %219, i64 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = add nsw i64 %225, -1
  store i64 %226, i64* %224, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %229, label %228

228:                                              ; preds = %223
  store %class.CFX_Face* null, %class.CFX_Face** %216, align 8
  br label %248

229:                                              ; preds = %223
  %230 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %219, i64 0, i32 0
  %231 = bitcast %class.CFX_Face* %219 to void (%"class.fxcrt::Retainable"*)***
  %232 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %232, i64 1
  %234 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %233, align 8
  call void %234(%"class.fxcrt::Retainable"* nonnull %230) #12
  %235 = load %class.CFX_Face*, %class.CFX_Face** %216, align 8
  %236 = bitcast %class.CFX_Face* %235 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %216, align 8
  %237 = icmp eq %class.CFX_Face* %235, null
  br i1 %237, label %248, label %238

238:                                              ; preds = %229
  %239 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %235, i64 0, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  %241 = add nsw i64 %240, -1
  store i64 %241, i64* %239, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %238
  %244 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %235, i64 0, i32 0
  %245 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %236, align 8
  %246 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %245, i64 1
  %247 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %246, align 8
  call void %247(%"class.fxcrt::Retainable"* nonnull %244) #12
  br label %248

248:                                              ; preds = %228, %222, %229, %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #12
  %249 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %250 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %249, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %249, align 8
  %251 = icmp eq %"class.CFX_FontMgr::FontDesc"* %250, null
  br i1 %251, label %263, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %250, i64 0, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = add nsw i64 %254, -1
  store i64 %255, i64* %253, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %263

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %250, i64 0, i32 0
  %259 = bitcast %"class.CFX_FontMgr::FontDesc"* %250 to void (%"class.fxcrt::Retainable"*)***
  %260 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %260, i64 1
  %262 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %261, align 8
  call void %262(%"class.fxcrt::Retainable"* nonnull %258) #12
  br label %263

263:                                              ; preds = %257, %252, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #12
  %264 = load %class.CFX_Face*, %class.CFX_Face** %196, align 8
  %265 = ptrtoint %class.CFX_Face* %264 to i64
  %266 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %265, i64* %266, align 8
  %267 = icmp eq %class.CFX_Face* %264, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %199, %263
  %269 = phi %class.CFX_Face* [ %197, %199 ], [ %264, %263 ]
  %270 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %269, i64 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8
  %272 = add nsw i64 %271, 1
  store i64 %272, i64* %270, align 8
  br label %273

273:                                              ; preds = %268, %263, %187, %182, %102, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN11CFX_FontMgr14GetBuiltinFontEm(%"class.pdfium::Optional"* sret, i64) local_unnamed_addr #1

declare void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* sret, %class.CFX_FontMgr*, %"class.fxcrt::RetainPtr.75"* dereferenceable(8), %"class.pdfium::span.73"*, i32) local_unnamed_addr #1

declare void @_ZN13CFX_SubstFont14UseChromeSerifEv(%class.CFX_SubstFont*) local_unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper13FindSubstFontERKN5fxcrt10ByteStringEbjiiiP13CFX_SubstFont(%"class.fxcrt::RetainPtr.40"* noalias nocapture sret, %class.CFX_FontMapper*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, %class.CFX_SubstFont*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %14 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.std::__1::basic_ostringstream", align 8
  %17 = alloca %"class.fxcrt::ByteString", align 8
  %18 = alloca %"class.fxcrt::ByteString", align 8
  %19 = alloca %"class.fxcrt::ByteString", align 8
  %20 = alloca %"class.fxcrt::ByteString", align 8
  %21 = alloca %"class.fxcrt::ByteString", align 8
  %22 = alloca %"class.fxcrt::ByteString", align 8
  %23 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %24 = alloca %"class.fxcrt::ByteString", align 8
  %25 = alloca %"class.fxcrt::ByteString", align 8
  %26 = alloca %"class.fxcrt::ByteString", align 8
  %27 = alloca %"class.fxcrt::ByteString", align 8
  %28 = alloca %"class.fxcrt::ByteString", align 8
  %29 = alloca %"class.fxcrt::ByteString", align 8
  %30 = alloca %"class.fxcrt::ByteString", align 8
  %31 = alloca i32, align 4
  %32 = alloca %"class.fxcrt::ByteString", align 8
  %33 = alloca %"class.fxcrt::ByteString", align 8
  %34 = alloca %"class.fxcrt::ByteString", align 8
  %35 = alloca %"class.fxcrt::ByteString", align 8
  %36 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %37 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %38 = alloca %"class.pdfium::span", align 8
  %39 = alloca %"class.pdfium::span", align 8
  %40 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %41 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %42 = alloca %"class.fxcrt::ByteString", align 8
  %43 = icmp eq i32 %5, 0
  %44 = and i32 %4, 524288
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, i32 0, i32 %6
  %47 = or i1 %45, %43
  %48 = select i1 %47, i32 400, i32 %5
  %49 = bitcast %"class.fxcrt::ByteString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #12
  %51 = call i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"* nonnull %19, i8 signext 32) #12
  br i1 %3, label %52, label %68

52:                                               ; preds = %9
  %53 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %53, align 8
  %55 = icmp eq %"class.fxcrt::StringDataTemplate"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %54, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %54, i64 0, i32 3, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 64
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = bitcast %"class.fxcrt::ByteString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  %66 = add i64 %58, -1
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %20, %"class.fxcrt::ByteString"* %2, i64 %66) #12
  %67 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %20) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  br label %68

68:                                               ; preds = %52, %56, %64, %60, %9
  %69 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %70 = icmp eq %"class.fxcrt::StringDataTemplate"* %69, null
  br i1 %70, label %116, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %69, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %73, 6
  br i1 %74, label %75, label %116

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %69, i64 0, i32 3, i64 6
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 43
  br i1 %78, label %79, label %116

79:                                               ; preds = %75
  %80 = bitcast %"class.fxcrt::ByteString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %17, %"class.fxcrt::ByteString"* nonnull %19, i64 6) #12
  %81 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %81, align 8
  %83 = icmp eq %"class.fxcrt::StringDataTemplate"* %82, null
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %82, i64 0, i32 1
  br label %85

85:                                               ; preds = %97, %79
  %86 = phi i64 [ 0, %79 ], [ %103, %97 ]
  br i1 %83, label %89, label %87

87:                                               ; preds = %85
  %88 = load i64, i64* %84, align 8
  br label %89

89:                                               ; preds = %87, %85
  %90 = phi i64 [ %88, %87 ], [ 0, %85 ]
  %91 = icmp ult i64 %86, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %89
  br i1 %83, label %96, label %93

93:                                               ; preds = %92
  %94 = load i64, i64* %84, align 8
  %95 = icmp ugt i64 %94, %86
  br i1 %95, label %97, label %96, !prof !8

96:                                               ; preds = %93, %92
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !14
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !15
  unreachable

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %82, i64 0, i32 3, i64 %86
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = add nsw i32 %100, -65
  %102 = icmp ult i32 %101, 26
  %103 = add nuw i64 %86, 1
  br i1 %102, label %85, label %104

104:                                              ; preds = %97
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  br label %116

105:                                              ; preds = %89
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  %106 = bitcast %"class.fxcrt::ByteString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #12
  %107 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %108 = icmp eq %"class.fxcrt::StringDataTemplate"* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %107, i64 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, -7
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i64 [ %112, %109 ], [ -7, %105 ]
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %18, %"class.fxcrt::ByteString"* nonnull %19, i64 %114) #12
  %115 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %18) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #12
  br label %116

116:                                              ; preds = %68, %71, %75, %104, %113
  %117 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %118 = icmp eq %"class.fxcrt::StringDataTemplate"* %117, null
  %119 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %117, i64 0, i32 3
  %120 = select i1 %118, [1 x i8]* @.str.10, [1 x i8]* %119
  %121 = getelementptr inbounds [1 x i8], [1 x i8]* %120, i64 0, i64 0
  br label %122

122:                                              ; preds = %122, %116
  %123 = phi i64 [ 89, %116 ], [ %135, %122 ]
  %124 = phi %"struct.(anonymous namespace)::AltFontName"* [ getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 0, i64 0), %116 ], [ %134, %122 ]
  %125 = lshr i64 %123, 1
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %124, i64 %125
  %127 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @FXSYS_stricmp(i8* %128, i8* %121) #12
  %130 = icmp slt i32 %129, 0
  %131 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %126, i64 1
  %132 = xor i64 %125, -1
  %133 = add i64 %123, %132
  %134 = select i1 %130, %"struct.(anonymous namespace)::AltFontName"* %131, %"struct.(anonymous namespace)::AltFontName"* %124
  %135 = select i1 %130, i64 %133, i64 %125
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %122

137:                                              ; preds = %122
  %138 = icmp eq %"struct.(anonymous namespace)::AltFontName"* %134, getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 1, i64 0)
  br i1 %138, label %156, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %134, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %143 = icmp eq %"class.fxcrt::StringDataTemplate"* %142, null
  %144 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %142, i64 0, i32 3
  %145 = select i1 %143, [1 x i8]* @.str.10, [1 x i8]* %144
  %146 = getelementptr inbounds [1 x i8], [1 x i8]* %145, i64 0, i64 0
  %147 = call i32 @FXSYS_stricmp(i8* %141, i8* %146) #12
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %139
  %150 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %134, i64 0, i32 1
  %151 = load i8, i8* %150, align 8
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [14 x i8*], [14 x i8*]* @_ZN12_GLOBAL__N_116kBase14FontNamesE, i64 0, i64 %152
  %154 = load i8*, i8** %153, align 8
  %155 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %19, i8* %154) #12
  br label %156

156:                                              ; preds = %137, %139, %149
  %157 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  %158 = xor i1 %157, true
  %159 = or i1 %158, %3
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 0
  %162 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* %161, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #12
  %163 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 1
  store i32 2, i32* %163, align 8
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 12, i32 %46, i32 %48, i32 0)
  br label %870

164:                                              ; preds = %156
  %165 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %165, label %166, label %170

166:                                              ; preds = %164
  %167 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 0
  %168 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* %167, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #12
  %169 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 1
  store i32 2, i32* %169, align 8
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 13, i32 %46, i32 %48, i32 0)
  br label %870

170:                                              ; preds = %164
  %171 = bitcast %"class.fxcrt::ByteString"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  %172 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %172, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %21) #12
  %173 = bitcast %"class.fxcrt::ByteString"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #12
  %174 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %174, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %22) #12
  %175 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %23, i64 0, i32 0, i32 1
  store i64 1, i64* %176, align 8
  %177 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::StringViewTemplate"* nonnull %23, i64 0) #12
  %178 = extractvalue { i8, i64 } %177, 0
  %179 = extractvalue { i8, i64 } %177, 1
  %180 = icmp eq i8 %178, 0
  br i1 %180, label %238, label %181

181:                                              ; preds = %170
  %182 = bitcast %"class.fxcrt::ByteString"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #12
  %183 = icmp eq i8 %178, 1
  br i1 %183, label %185, label %184, !prof !8

184:                                              ; preds = %181
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !10
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !11
  unreachable

185:                                              ; preds = %181
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %24, %"class.fxcrt::ByteString"* nonnull %19, i64 %179) #12
  %186 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %24) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #12
  %187 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %188 = icmp eq %"class.fxcrt::StringDataTemplate"* %187, null
  %189 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %187, i64 0, i32 3
  %190 = select i1 %188, [1 x i8]* @.str.10, [1 x i8]* %189
  %191 = getelementptr inbounds [1 x i8], [1 x i8]* %190, i64 0, i64 0
  br label %192

192:                                              ; preds = %192, %185
  %193 = phi i64 [ 89, %185 ], [ %205, %192 ]
  %194 = phi %"struct.(anonymous namespace)::AltFontName"* [ getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 0, i64 0), %185 ], [ %204, %192 ]
  %195 = lshr i64 %193, 1
  %196 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %194, i64 %195
  %197 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %196, i64 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = call i32 @FXSYS_stricmp(i8* %198, i8* %191) #12
  %200 = icmp slt i32 %199, 0
  %201 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %196, i64 1
  %202 = xor i64 %195, -1
  %203 = add i64 %193, %202
  %204 = select i1 %200, %"struct.(anonymous namespace)::AltFontName"* %201, %"struct.(anonymous namespace)::AltFontName"* %194
  %205 = select i1 %200, i64 %203, i64 %195
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %192

207:                                              ; preds = %192
  %208 = icmp eq %"struct.(anonymous namespace)::AltFontName"* %204, getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 1, i64 0)
  br i1 %208, label %226, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %204, i64 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %213 = icmp eq %"class.fxcrt::StringDataTemplate"* %212, null
  %214 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %212, i64 0, i32 3
  %215 = select i1 %213, [1 x i8]* @.str.10, [1 x i8]* %214
  %216 = getelementptr inbounds [1 x i8], [1 x i8]* %215, i64 0, i64 0
  %217 = call i32 @FXSYS_stricmp(i8* %211, i8* %216) #12
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %226

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %204, i64 0, i32 1
  %221 = load i8, i8* %220, align 8
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [14 x i8*], [14 x i8*]* @_ZN12_GLOBAL__N_116kBase14FontNamesE, i64 0, i64 %222
  %224 = load i8*, i8** %223, align 8
  %225 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* %224) #12
  br label %226

226:                                              ; preds = %207, %209, %219
  %227 = bitcast %"class.fxcrt::ByteString"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #12
  %228 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %229 = icmp eq %"class.fxcrt::StringDataTemplate"* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  br label %233

233:                                              ; preds = %230, %226
  %234 = phi i64 [ %232, %230 ], [ 0, %226 ]
  %235 = xor i64 %179, -1
  %236 = add i64 %234, %235
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %25, %"class.fxcrt::ByteString"* nonnull %19, i64 %236) #12
  %237 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %22, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %25) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #12
  br label %240

238:                                              ; preds = %170
  %239 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  br label %240

240:                                              ; preds = %238, %233
  %241 = phi i1 [ true, %233 ], [ false, %238 ]
  %242 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #12
  br i1 %242, label %245, label %243

243:                                              ; preds = %240
  %244 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #12
  br i1 %244, label %245, label %871

245:                                              ; preds = %889, %887, %885, %883, %881, %879, %877, %875, %873, %871, %243, %240
  %246 = phi i32 [ 0, %240 ], [ 1, %243 ], [ 2, %871 ], [ 3, %873 ], [ 4, %875 ], [ 5, %877 ], [ 6, %879 ], [ 7, %881 ], [ 8, %883 ], [ 9, %885 ], [ 10, %887 ], [ 11, %889 ]
  %247 = and i32 %246, 3
  %248 = add nsw i32 %247, -1
  %249 = icmp ult i32 %248, 2
  %250 = select i1 %249, i32 262144, i32 0
  %251 = shl nuw nsw i32 %246, 5
  %252 = and i32 %251, 64
  %253 = or i32 %250, %252
  %254 = icmp ult i32 %246, 4
  br i1 %254, label %314, label %255

255:                                              ; preds = %245
  %256 = icmp ugt i32 %246, 7
  %257 = select i1 %256, i32 16, i32 0
  br label %314

258:                                              ; preds = %891
  %259 = call { i8, i64 } @_ZNK5fxcrt10ByteString11ReverseFindEc(%"class.fxcrt::ByteString"* nonnull %21, i8 signext 45) #12
  %260 = extractvalue { i8, i64 } %259, 0
  %261 = extractvalue { i8, i64 } %259, 1
  %262 = icmp eq i8 %260, 0
  br i1 %262, label %279, label %263

263:                                              ; preds = %258
  %264 = bitcast %"class.fxcrt::ByteString"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #12
  %265 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %266 = icmp eq %"class.fxcrt::StringDataTemplate"* %265, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %265, i64 0, i32 1
  %269 = load i64, i64* %268, align 8
  br label %270

270:                                              ; preds = %263, %267
  %271 = phi i64 [ %269, %267 ], [ 0, %263 ]
  %272 = icmp eq i8 %260, 1
  br i1 %272, label %274, label %273, !prof !8

273:                                              ; preds = %270
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !10
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !11
  unreachable

274:                                              ; preds = %270
  %275 = xor i64 %261, -1
  %276 = add i64 %271, %275
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %26, %"class.fxcrt::ByteString"* nonnull %21, i64 %276) #12
  %277 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %22, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %26) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #12
  %278 = bitcast %"class.fxcrt::ByteString"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #12
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %27, %"class.fxcrt::ByteString"* nonnull %21, i64 %261) #12
  br label %299

279:                                              ; preds = %258, %891
  %280 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %281 = icmp eq %"class.fxcrt::StringDataTemplate"* %280, null
  br i1 %281, label %285, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %280, i64 0, i32 1
  %284 = load i64, i64* %283, align 8
  br label %285

285:                                              ; preds = %279, %282
  %286 = phi i64 [ %284, %282 ], [ 0, %279 ]
  %287 = call fastcc { i64, i64 } @_ZN12_GLOBAL__N_112GetStyleTypeERKN5fxcrt10ByteStringEb(%"class.fxcrt::ByteString"* nonnull dereferenceable(8) %21, i1 zeroext true)
  %288 = extractvalue { i64, i64 } %287, 0
  %289 = trunc i64 %288 to i8
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %305, label %291

291:                                              ; preds = %285
  %292 = extractvalue { i64, i64 } %287, 1
  %293 = lshr i64 %288, 32
  %294 = trunc i64 %293 to i32
  %295 = bitcast %"class.fxcrt::ByteString"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #12
  %296 = shl i64 %286, 32
  %297 = ashr exact i64 %296, 32
  %298 = sub i64 %297, %292
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %28, %"class.fxcrt::ByteString"* nonnull %21, i64 %298) #12
  br label %299

299:                                              ; preds = %274, %291
  %300 = phi %"class.fxcrt::ByteString"* [ %28, %291 ], [ %27, %274 ]
  %301 = phi i8* [ %295, %291 ], [ %278, %274 ]
  %302 = phi i8 [ 0, %291 ], [ 1, %274 ]
  %303 = phi i32 [ %294, %291 ], [ 0, %274 ]
  %304 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %300) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %300) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #12
  br label %305

305:                                              ; preds = %299, %285
  %306 = phi i8 [ 0, %285 ], [ %302, %299 ]
  %307 = phi i32 [ 0, %285 ], [ %303, %299 ]
  %308 = shl i32 %4, 3
  %309 = and i32 %308, 16
  %310 = and i32 %308, 64
  %311 = and i32 %4, 1
  %312 = or i32 %309, %311
  %313 = or i32 %312, %310
  br label %314

314:                                              ; preds = %305, %255, %245
  %315 = phi i32 [ 1, %245 ], [ %257, %255 ], [ %313, %305 ]
  %316 = phi i8 [ 0, %245 ], [ 0, %255 ], [ %306, %305 ]
  %317 = phi i32 [ %246, %245 ], [ %246, %255 ], [ 14, %305 ]
  %318 = phi i32 [ %253, %245 ], [ %253, %255 ], [ %307, %305 ]
  %319 = and i32 %318, 262144
  %320 = icmp eq i32 %319, 0
  %321 = select i1 %320, i32 %48, i32 700
  %322 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %174, align 8
  %323 = icmp eq %"class.fxcrt::StringDataTemplate"* %322, null
  br i1 %323, label %461, label %324

324:                                              ; preds = %314
  %325 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %322, i64 0, i32 1
  %326 = load i64, i64* %325, align 8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %461, label %328

328:                                              ; preds = %324
  %329 = trunc i64 %326 to i32
  %330 = bitcast %"class.fxcrt::ByteString"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330) #12
  %331 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %331, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %29) #12
  %332 = icmp sgt i32 %329, 0
  br i1 %332, label %333, label %456

333:                                              ; preds = %328
  %334 = bitcast %"class.fxcrt::ByteString"* %30 to i8*
  %335 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8*
  %336 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1
  %337 = bitcast %"class.std::__1::basic_stringbuf"* %336 to i8*
  %338 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 2, i32 0, i32 0
  %339 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %336, i64 0, i32 0
  %341 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8, !noalias !16
  %342 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i64*
  %343 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8, !noalias !16
  %344 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8**
  %345 = inttoptr i64 %341 to i8*
  %346 = getelementptr i8, i8* %345, i64 -24
  %347 = bitcast i8* %346 to i64*
  %348 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %336, i64 0, i32 0, i32 0
  %349 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1, i32 1
  %350 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1, i32 3
  %351 = bitcast %"class.std::__1::basic_string"* %349 to i8*
  %352 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %353 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %354 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %355 = inttoptr i64 %353 to i8*
  %356 = getelementptr i8, i8* %355, i64 -24
  %357 = bitcast i8* %356 to i64*
  %358 = bitcast %"class.std::__1::basic_string"* %349 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %359 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %358, i64 0, i32 1, i32 0
  %360 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 2
  %362 = bitcast %"class.std::__1::basic_ios.base"* %361 to %"class.std::__1::basic_ios"*
  br label %363

363:                                              ; preds = %450, %333
  %364 = phi i32 [ %321, %333 ], [ %430, %450 ]
  %365 = phi i8 [ 1, %333 ], [ %429, %450 ]
  %366 = phi i32 [ 0, %333 ], [ %454, %450 ]
  %367 = phi i8 [ 0, %333 ], [ %419, %450 ]
  %368 = phi i32 [ %318, %333 ], [ %444, %450 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #12
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %335) #12, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 -86, i64 256, i1 false) #12, !noalias !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %338, align 8, !noalias !16
  store i64 %341, i64* %342, align 8, !noalias !16
  %369 = load i64, i64* %347, align 8, !noalias !16
  %370 = getelementptr inbounds i8, i8* %335, i64 %369
  %371 = bitcast i8* %370 to i64*
  store i64 %343, i64* %371, align 8, !noalias !16
  %372 = load i8*, i8** %344, align 8, !noalias !16
  %373 = getelementptr i8, i8* %372, i64 -24
  %374 = bitcast i8* %373 to i64*
  %375 = load i64, i64* %374, align 8, !noalias !16
  %376 = getelementptr inbounds i8, i8* %335, i64 %375
  %377 = bitcast i8* %376 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %377, i8* %337) #12, !noalias !16
  %378 = getelementptr inbounds i8, i8* %376, i64 136
  %379 = bitcast i8* %378 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %379, align 8, !noalias !16
  %380 = getelementptr inbounds i8, i8* %376, i64 144
  %381 = bitcast i8* %380 to i32*
  store i32 -1, i32* %381, align 8, !noalias !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %339, align 8, !noalias !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %338, align 8, !noalias !16
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %340) #12, !noalias !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %348, align 8, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 32, i1 false) #12, !noalias !16
  store i32 16, i32* %350, align 8, !noalias !16
  %382 = sext i32 %366 to i64
  br label %383

383:                                              ; preds = %388, %363
  %384 = phi i64 [ %382, %363 ], [ %390, %388 ]
  %385 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %322, i64 0, i32 3, i64 %384
  %386 = load i8, i8* %385, align 1, !noalias !16
  %387 = icmp eq i8 %386, 44
  br i1 %387, label %393, label %388

388:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12, !noalias !16
  store i8 %386, i8* %15, align 1, !noalias !16
  %389 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %352, i8* nonnull %15, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12, !noalias !16
  %390 = add nsw i64 %384, 1
  %391 = trunc i64 %390 to i32
  %392 = icmp eq i32 %391, %329
  br i1 %392, label %393, label %383

393:                                              ; preds = %383, %388
  call void @_ZN5fxcrt10ByteStringC1ERKNSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.fxcrt::ByteString"* nonnull %30, %"class.std::__1::basic_ostringstream"* nonnull dereferenceable(264) %16) #12
  store i64 %353, i64* %342, align 8, !noalias !16
  %394 = load i64, i64* %357, align 8
  %395 = getelementptr inbounds i8, i8* %335, i64 %394
  %396 = bitcast i8* %395 to i64*
  store i64 %354, i64* %396, align 8, !noalias !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %348, align 8, !noalias !16
  %397 = load i8, i8* %359, align 1, !noalias !16
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %393
  %400 = load i8*, i8** %360, align 8, !noalias !16
  call void @_ZdlPv(i8* %400) #13
  br label %401

401:                                              ; preds = %393, %399
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %340) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %352, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %362) #12
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %335) #12, !noalias !16
  %402 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %29, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %30) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #12
  %403 = call fastcc { i64, i64 } @_ZN12_GLOBAL__N_112GetStyleTypeERKN5fxcrt10ByteStringEb(%"class.fxcrt::ByteString"* nonnull dereferenceable(8) %29, i1 zeroext false)
  %404 = extractvalue { i64, i64 } %403, 0
  %405 = lshr i64 %404, 32
  %406 = trunc i64 %405 to i32
  %407 = icmp ne i32 %366, 0
  %408 = and i8 %367, 1
  %409 = icmp eq i8 %408, 0
  %410 = and i1 %407, %409
  br i1 %410, label %416, label %411

411:                                              ; preds = %401
  %412 = trunc i64 %404 to i8
  %413 = xor i1 %407, true
  %414 = icmp eq i8 %412, 0
  %415 = and i1 %414, %413
  br i1 %415, label %416, label %418

416:                                              ; preds = %411, %401
  %417 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  br label %456

418:                                              ; preds = %411
  %419 = select i1 %414, i8 %367, i8 1
  %420 = and i32 %406, 262144
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %427

422:                                              ; preds = %418
  %423 = and i32 %368, 262144
  %424 = icmp eq i32 %423, 0
  %425 = or i32 %368, 262144
  %426 = select i1 %424, i32 700, i32 900
  br label %427

427:                                              ; preds = %422, %418
  %428 = phi i32 [ %368, %418 ], [ %425, %422 ]
  %429 = phi i8 [ %365, %418 ], [ 0, %422 ]
  %430 = phi i32 [ %364, %418 ], [ %426, %422 ]
  %431 = and i32 %406, 64
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %443, label %433

433:                                              ; preds = %427
  br i1 %421, label %434, label %436

434:                                              ; preds = %433
  %435 = or i32 %428, 64
  br label %443

436:                                              ; preds = %433
  %437 = and i8 %429, 1
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %436
  %440 = or i32 %428, 64
  br label %456

441:                                              ; preds = %436
  %442 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  br label %456

443:                                              ; preds = %427, %434
  %444 = phi i32 [ %435, %434 ], [ %428, %427 ]
  %445 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %331, align 8
  %446 = icmp eq %"class.fxcrt::StringDataTemplate"* %445, null
  br i1 %446, label %450, label %447

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %445, i64 0, i32 1
  %449 = load i64, i64* %448, align 8
  br label %450

450:                                              ; preds = %447, %443
  %451 = phi i64 [ %449, %447 ], [ 0, %443 ]
  %452 = trunc i64 %451 to i32
  %453 = add i32 %366, 1
  %454 = add i32 %453, %452
  %455 = icmp slt i32 %454, %329
  br i1 %455, label %363, label %456

456:                                              ; preds = %450, %328, %439, %441, %416
  %457 = phi i32 [ 14, %441 ], [ %317, %439 ], [ 14, %416 ], [ %317, %328 ], [ %317, %450 ]
  %458 = phi i32 [ %428, %441 ], [ %440, %439 ], [ %368, %416 ], [ %318, %328 ], [ %444, %450 ]
  %459 = phi i8 [ %419, %441 ], [ %419, %439 ], [ %367, %416 ], [ 0, %328 ], [ %419, %450 ]
  %460 = phi i32 [ %430, %441 ], [ %430, %439 ], [ %364, %416 ], [ %321, %328 ], [ %430, %450 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #12
  br label %461

461:                                              ; preds = %314, %456, %324
  %462 = phi i32 [ %317, %324 ], [ %457, %456 ], [ %317, %314 ]
  %463 = phi i32 [ %318, %324 ], [ %458, %456 ], [ %318, %314 ]
  %464 = phi i8 [ 0, %324 ], [ %459, %456 ], [ 0, %314 ]
  %465 = phi i32 [ %321, %324 ], [ %460, %456 ], [ %321, %314 ]
  %466 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %467 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %468 = icmp eq %class.SystemFontInfoIface* %467, null
  br i1 %468, label %469, label %470

469:                                              ; preds = %461
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 %462, i32 %46, i32 %48, i32 %315)
  br label %869

470:                                              ; preds = %461
  %471 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %471) #12
  store i32 0, i32* %31, align 4
  %472 = icmp eq i32 %7, 0
  br i1 %472, label %477, label %473

473:                                              ; preds = %470
  %474 = trunc i32 %7 to i16
  %475 = call zeroext i8 @_Z25FX_GetCharsetFromCodePaget(i16 zeroext %474) #12
  %476 = zext i8 %475 to i32
  store i32 %476, i32* %31, align 4
  br label %483

477:                                              ; preds = %470
  %478 = icmp eq i32 %462, 14
  %479 = and i32 %4, 4
  %480 = icmp ne i32 %479, 0
  %481 = and i1 %480, %478
  br i1 %481, label %482, label %483

482:                                              ; preds = %477
  store i32 2, i32* %31, align 4
  br label %483

483:                                              ; preds = %477, %482, %473
  %484 = phi i8 [ 0, %477 ], [ 2, %482 ], [ %475, %473 ]
  %485 = call zeroext i1 @_Z15FX_CharSetIsCJKh(i8 zeroext %484) #12
  %486 = and i32 %463, 64
  %487 = icmp ne i32 %486, 0
  %488 = lshr exact i32 %486, 6
  %489 = trunc i32 %488 to i8
  %490 = bitcast %"class.fxcrt::StringViewTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %490) #12
  %491 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8** %491, align 8
  %492 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 1
  store i64 6, i64* %492, align 8
  %493 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %14, i64 0) #12
  %494 = extractvalue { i8, i64 } %493, 0
  %495 = icmp eq i8 %494, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %490) #12
  br i1 %495, label %528, label %496

496:                                              ; preds = %483
  %497 = and i32 %463, 262144
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %501, label %499

499:                                              ; preds = %496
  %500 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #12
  br label %548

501:                                              ; preds = %496
  %502 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %502) #12
  %503 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8** %503, align 8
  %504 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  store i64 6, i64* %504, align 8
  %505 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %12, i64 0) #12
  %506 = extractvalue { i8, i64 } %505, 0
  %507 = icmp eq i8 %506, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %502) #12
  br i1 %507, label %510, label %508

508:                                              ; preds = %501
  %509 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0)) #12
  br label %548

510:                                              ; preds = %501
  %511 = bitcast %"class.fxcrt::StringViewTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %511) #12
  %512 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8** %512, align 8
  %513 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  store i64 6, i64* %513, align 8
  %514 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %10, i64 0) #12
  %515 = extractvalue { i8, i64 } %514, 0
  %516 = icmp eq i8 %515, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %511) #12
  br i1 %516, label %519, label %517

517:                                              ; preds = %510
  %518 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)) #12
  br label %548

519:                                              ; preds = %510
  %520 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %520) #12
  %521 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i8** %521, align 8
  %522 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  store i64 9, i64* %522, align 8
  %523 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %11, i64 0) #12
  %524 = extractvalue { i8, i64 } %523, 0
  %525 = icmp eq i8 %524, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %520) #12
  br i1 %525, label %548, label %526

526:                                              ; preds = %519
  %527 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #12
  br label %548

528:                                              ; preds = %483
  %529 = bitcast %"class.fxcrt::StringViewTemplate"* %13 to i8*
  %530 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  %531 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %13, i64 0, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %529) #12
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), i8** %530, align 8
  store i64 12, i64* %531, align 8
  %532 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %13, i64 0) #12
  %533 = extractvalue { i8, i64 } %532, 0
  %534 = icmp eq i8 %533, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #12
  br i1 %534, label %540, label %535

535:                                              ; preds = %544, %540, %528
  %536 = phi %"struct.(anonymous namespace)::AltFontFamily"* [ getelementptr inbounds ([3 x %"struct.(anonymous namespace)::AltFontFamily"], [3 x %"struct.(anonymous namespace)::AltFontFamily"]* @_ZN12_GLOBAL__N_117g_AltFontFamiliesE, i64 0, i64 0), %528 ], [ getelementptr inbounds ([3 x %"struct.(anonymous namespace)::AltFontFamily"], [3 x %"struct.(anonymous namespace)::AltFontFamily"]* @_ZN12_GLOBAL__N_117g_AltFontFamiliesE, i64 0, i64 1), %540 ], [ getelementptr inbounds ([3 x %"struct.(anonymous namespace)::AltFontFamily"], [3 x %"struct.(anonymous namespace)::AltFontFamily"]* @_ZN12_GLOBAL__N_117g_AltFontFamiliesE, i64 0, i64 2), %544 ]
  %537 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontFamily", %"struct.(anonymous namespace)::AltFontFamily"* %536, i64 0, i32 1
  %538 = load i8*, i8** %537, align 8
  %539 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* %538) #12
  br label %548

540:                                              ; preds = %528
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %529) #12
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0), i8** %530, align 8
  store i64 19, i64* %531, align 8
  %541 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %13, i64 0) #12
  %542 = extractvalue { i8, i64 } %541, 0
  %543 = icmp eq i8 %542, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #12
  br i1 %543, label %544, label %535

544:                                              ; preds = %540
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %529) #12
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i8** %530, align 8
  store i64 7, i64* %531, align 8
  %545 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::StringViewTemplate"* nonnull %13, i64 0) #12
  %546 = extractvalue { i8, i64 } %545, 0
  %547 = icmp eq i8 %546, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #12
  br i1 %547, label %548, label %535

548:                                              ; preds = %499, %508, %517, %519, %526, %535, %544
  %549 = bitcast %"class.fxcrt::ByteString"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #12
  %550 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %550, align 8
  %551 = bitcast %"class.fxcrt::ByteString"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %551) #12
  %552 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %553 = icmp eq %"class.fxcrt::StringDataTemplate"* %552, null
  %554 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %552, i64 0, i32 3
  %555 = select i1 %553, [1 x i8]* @.str.10, [1 x i8]* %554
  %556 = getelementptr inbounds [1 x i8], [1 x i8]* %555, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %33, i8* %556)
  call void @_ZN14CFX_FontMapper19MatchInstalledFontsERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %32, %class.CFX_FontMapper* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %33)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551) #12
  %557 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %550, align 8
  %558 = icmp eq %"class.fxcrt::StringDataTemplate"* %557, null
  br i1 %558, label %563, label %559

559:                                              ; preds = %548
  %560 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %557, i64 0, i32 1
  %561 = load i64, i64* %560, align 8
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %563, label %579

563:                                              ; preds = %548, %559
  %564 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  %565 = or i1 %241, %564
  br i1 %565, label %579, label %566

566:                                              ; preds = %563
  %567 = and i8 %316, 1
  %568 = and i8 %567, %464
  %569 = icmp eq i8 %568, 0
  br i1 %569, label %570, label %579

570:                                              ; preds = %566
  %571 = bitcast %"class.fxcrt::ByteString"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %571) #12
  %572 = bitcast %"class.fxcrt::ByteString"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %572) #12
  %573 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %50, align 8
  %574 = icmp eq %"class.fxcrt::StringDataTemplate"* %573, null
  %575 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %573, i64 0, i32 3
  %576 = select i1 %574, [1 x i8]* @.str.10, [1 x i8]* %575
  %577 = getelementptr inbounds [1 x i8], [1 x i8]* %576, i64 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_116TT_NormalizeNameEPKc(%"class.fxcrt::ByteString"* nonnull sret %35, i8* %577)
  call void @_ZN14CFX_FontMapper19MatchInstalledFontsERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %34, %class.CFX_FontMapper* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %35)
  %578 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %32, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %34) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %34) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %571) #12
  br label %579

579:                                              ; preds = %566, %563, %570, %559
  %580 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %550, align 8
  %581 = icmp eq %"class.fxcrt::StringDataTemplate"* %580, null
  br i1 %581, label %586, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %580, i64 0, i32 1
  %584 = load i64, i64* %583, align 8
  %585 = icmp eq i64 %584, 0
  br label %586

586:                                              ; preds = %579, %582
  %587 = phi i1 [ %585, %582 ], [ true, %579 ]
  %588 = icmp sgt i32 %462, 13
  %589 = and i1 %588, %587
  br i1 %589, label %590, label %628

590:                                              ; preds = %586
  br i1 %485, label %620, label %591

591:                                              ; preds = %590
  %592 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0)) #12
  %593 = and i32 %315, -17
  %594 = icmp ne i32 %46, 0
  %595 = zext i1 %594 to i8
  %596 = select i1 %592, i8 %489, i8 %595
  %597 = select i1 %592, i32 %593, i32 %315
  %598 = select i1 %592, i32 %465, i32 %48
  %599 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %36, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8** %599, align 8
  %600 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %36, i64 0, i32 0, i32 1
  store i64 6, i64* %600, align 8
  %601 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::StringViewTemplate"* nonnull %36, i64 0) #12
  %602 = extractvalue { i8, i64 } %601, 0
  switch i8 %602, label %603 [
    i8 0, label %609
    i8 1, label %604
  ], !prof !9

603:                                              ; preds = %591
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !10
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !11
  unreachable

604:                                              ; preds = %591
  %605 = extractvalue { i8, i64 } %601, 1
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %609, label %607

607:                                              ; preds = %604
  %608 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN12_GLOBAL__N_113kNarrowFamilyE, i64 0, i64 0)) #12
  br label %609

609:                                              ; preds = %591, %604, %607
  %610 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %37, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8** %610, align 8
  %611 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %37, i64 0, i32 0, i32 1
  store i64 9, i64* %611, align 8
  %612 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %19, %"class.fxcrt::StringViewTemplate"* nonnull %37, i64 0) #12
  %613 = extractvalue { i8, i64 } %612, 0
  %614 = icmp eq i8 %613, 0
  %615 = extractvalue { i8, i64 } %612, 1
  %616 = icmp eq i64 %615, 0
  %617 = or i1 %614, %616
  br i1 %617, label %631, label %618

618:                                              ; preds = %609
  %619 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN12_GLOBAL__N_113kNarrowFamilyE, i64 0, i64 0)) #12
  br label %631

620:                                              ; preds = %590
  %621 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 5
  store i8 1, i8* %621, align 8
  %622 = icmp eq i32 %463, 0
  br i1 %622, label %625, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 4
  store i32 %465, i32* %624, align 4
  br label %625

625:                                              ; preds = %620, %623
  br i1 %487, label %626, label %631

626:                                              ; preds = %625
  %627 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 6
  store i8 1, i8* %627, align 1
  br label %631

628:                                              ; preds = %586
  %629 = icmp eq i32 %463, 0
  %630 = select i1 %629, i32 400, i32 %465
  br label %631

631:                                              ; preds = %618, %609, %628, %626, %625
  %632 = phi i32 [ %315, %626 ], [ %315, %625 ], [ %315, %628 ], [ %597, %609 ], [ %597, %618 ]
  %633 = phi i8 [ 1, %626 ], [ 0, %625 ], [ %489, %628 ], [ %596, %609 ], [ %596, %618 ]
  %634 = phi i32 [ %46, %626 ], [ %46, %625 ], [ 0, %628 ], [ %46, %609 ], [ %46, %618 ]
  %635 = phi i32 [ %465, %626 ], [ %465, %625 ], [ %630, %628 ], [ %598, %609 ], [ %598, %618 ]
  %636 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %550, align 8
  %637 = icmp eq %"class.fxcrt::StringDataTemplate"* %636, null
  br i1 %637, label %642, label %638

638:                                              ; preds = %631
  %639 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %636, i64 0, i32 1
  %640 = load i64, i64* %639, align 8
  %641 = icmp eq i64 %640, 0
  br label %642

642:                                              ; preds = %631, %638
  %643 = phi i1 [ %641, %638 ], [ true, %631 ]
  %644 = xor i1 %643, true
  %645 = icmp slt i32 %462, 14
  %646 = or i1 %645, %644
  br i1 %646, label %647, label %677

647:                                              ; preds = %642
  br i1 %637, label %654, label %648

648:                                              ; preds = %647
  %649 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %636, i64 0, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %654, label %652

652:                                              ; preds = %648
  %653 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %21, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %32) #12
  br label %654

654:                                              ; preds = %647, %652, %648
  br i1 %645, label %655, label %681

655:                                              ; preds = %654
  %656 = icmp ne i32 %463, 0
  %657 = and i32 %462, 3
  %658 = icmp eq i32 %657, 0
  %659 = and i1 %656, %658
  br i1 %659, label %660, label %671

660:                                              ; preds = %655
  %661 = and i32 %463, 262144
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %668, label %663

663:                                              ; preds = %660
  br i1 %487, label %664, label %666

664:                                              ; preds = %663
  %665 = add nsw i32 %462, 2
  br label %671

666:                                              ; preds = %663
  %667 = add nsw i32 %462, 1
  br label %671

668:                                              ; preds = %660
  %669 = add nsw i32 %462, 3
  %670 = select i1 %487, i32 %669, i32 %462
  br label %671

671:                                              ; preds = %668, %655, %664, %666
  %672 = phi i32 [ %665, %664 ], [ %667, %666 ], [ %462, %655 ], [ %670, %668 ]
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds [14 x i8*], [14 x i8*]* @_ZN12_GLOBAL__N_116kBase14FontNamesE, i64 0, i64 %673
  %675 = load i8*, i8** %674, align 8
  %676 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* %675) #12
  br label %681

677:                                              ; preds = %642
  %678 = and i32 %4, 64
  %679 = icmp eq i32 %678, 0
  %680 = select i1 %679, i8 %633, i8 1
  br label %681

681:                                              ; preds = %677, %654, %671
  %682 = phi i32 [ %672, %671 ], [ %462, %654 ], [ %462, %677 ]
  %683 = phi i8 [ %633, %671 ], [ %633, %654 ], [ %680, %677 ]
  %684 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %685 = and i8 %683, 1
  %686 = icmp ne i8 %685, 0
  %687 = load i32, i32* %31, align 4
  %688 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %172, align 8
  %689 = icmp eq %"class.fxcrt::StringDataTemplate"* %688, null
  %690 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %688, i64 0, i32 3
  %691 = select i1 %689, [1 x i8]* @.str.10, [1 x i8]* %690
  %692 = getelementptr inbounds [1 x i8], [1 x i8]* %691, i64 0, i64 0
  %693 = bitcast %class.SystemFontInfoIface* %684 to i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)***
  %694 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)**, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*** %693, align 8
  %695 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %694, i64 3
  %696 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %695, align 8
  %697 = call i8* %696(%class.SystemFontInfoIface* %684, i32 %635, i1 zeroext %686, i32 %687, i32 %632, i8* %692) #12
  %698 = icmp eq i8* %697, null
  br i1 %698, label %699, label %758

699:                                              ; preds = %681
  %700 = icmp ne i32 %634, 0
  %701 = zext i1 %700 to i8
  %702 = select i1 %485, i8 %701, i8 %683
  %703 = select i1 %485, i32 %48, i32 %635
  %704 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %550, align 8
  %705 = icmp eq %"class.fxcrt::StringDataTemplate"* %704, null
  br i1 %705, label %720, label %706

706:                                              ; preds = %699
  %707 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %704, i64 0, i32 1
  %708 = load i64, i64* %707, align 8
  %709 = icmp eq i64 %708, 0
  br i1 %709, label %720, label %710

710:                                              ; preds = %706
  %711 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %712 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %704, i64 0, i32 3, i64 0
  %713 = bitcast %class.SystemFontInfoIface* %711 to i8* (%class.SystemFontInfoIface*, i8*)***
  %714 = load i8* (%class.SystemFontInfoIface*, i8*)**, i8* (%class.SystemFontInfoIface*, i8*)*** %713, align 8
  %715 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %714, i64 4
  %716 = load i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %715, align 8
  %717 = call i8* %716(%class.SystemFontInfoIface* %711, i8* %712) #12
  %718 = icmp eq i8* %717, null
  br i1 %718, label %719, label %758

719:                                              ; preds = %710
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 %682, i32 %634, i32 %48, i32 %632)
  br label %868

720:                                              ; preds = %699, %706
  switch i32 %687, label %724 [
    i32 2, label %721
    i32 0, label %723
  ]

721:                                              ; preds = %720
  %722 = and i32 %4, -5
  call void @_ZN14CFX_FontMapper13FindSubstFontERKN5fxcrt10ByteStringEbjiiiP13CFX_SubstFont(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %21, i1 zeroext %3, i32 %722, i32 %703, i32 %634, i32 0, %class.CFX_SubstFont* %8)
  br label %868

723:                                              ; preds = %720
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 %682, i32 %634, i32 %48, i32 %632)
  br label %868

724:                                              ; preds = %720
  %725 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 2, i32 0, i32 0
  %726 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %725, align 8
  %727 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 2, i32 0, i32 1
  %728 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %727, align 8
  %729 = icmp eq %"struct.CFX_FontMapper::FaceData"* %726, %728
  br i1 %729, label %738, label %730

730:                                              ; preds = %724, %735
  %731 = phi %"struct.CFX_FontMapper::FaceData"* [ %736, %735 ], [ %726, %724 ]
  %732 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %731, i64 0, i32 1
  %733 = load i32, i32* %732, align 8
  %734 = icmp eq i32 %733, %687
  br i1 %734, label %738, label %735

735:                                              ; preds = %730
  %736 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %731, i64 1
  %737 = icmp eq %"struct.CFX_FontMapper::FaceData"* %736, %728
  br i1 %737, label %741, label %730

738:                                              ; preds = %730, %724
  %739 = phi %"struct.CFX_FontMapper::FaceData"* [ %726, %724 ], [ %731, %730 ]
  %740 = icmp eq %"struct.CFX_FontMapper::FaceData"* %739, %728
  br i1 %740, label %741, label %742

741:                                              ; preds = %735, %738
  call void @_ZN14CFX_FontMapper16UseInternalSubstEP13CFX_SubstFontiiii(%"class.fxcrt::RetainPtr.40"* sret %0, %class.CFX_FontMapper* %1, %class.CFX_SubstFont* %8, i32 %682, i32 %634, i32 %48, i32 %632)
  br label %868

742:                                              ; preds = %738
  %743 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %744 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %739, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %744, align 8
  %746 = icmp eq %"class.fxcrt::StringDataTemplate"* %745, null
  %747 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %745, i64 0, i32 3
  %748 = select i1 %746, [1 x i8]* @.str.10, [1 x i8]* %747
  %749 = getelementptr inbounds [1 x i8], [1 x i8]* %748, i64 0, i64 0
  %750 = bitcast %class.SystemFontInfoIface* %743 to i8* (%class.SystemFontInfoIface*, i8*)***
  %751 = load i8* (%class.SystemFontInfoIface*, i8*)**, i8* (%class.SystemFontInfoIface*, i8*)*** %750, align 8
  %752 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %751, i64 4
  %753 = load i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %752, align 8
  %754 = call i8* %753(%class.SystemFontInfoIface* %743, i8* %749) #12
  %755 = icmp eq i8* %754, null
  br i1 %755, label %756, label %758

756:                                              ; preds = %742
  %757 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 0, i64* %757, align 8
  br label %868

758:                                              ; preds = %710, %681, %742
  %759 = phi i32 [ %703, %742 ], [ %703, %710 ], [ %635, %681 ]
  %760 = phi i8* [ %754, %742 ], [ %717, %710 ], [ %697, %681 ]
  %761 = phi i8 [ %702, %742 ], [ %702, %710 ], [ %683, %681 ]
  %762 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %763 = bitcast %class.SystemFontInfoIface* %762 to i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)***
  %764 = load i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)**, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*** %763, align 8
  %765 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)** %764, i64 6
  %766 = load i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)** %765, align 8
  %767 = call zeroext i1 %766(%class.SystemFontInfoIface* %762, i8* nonnull %760, %"class.fxcrt::ByteString"* nonnull %19) #12
  %768 = load i32, i32* %31, align 4
  %769 = icmp eq i32 %768, 1
  br i1 %769, label %770, label %777

770:                                              ; preds = %758
  %771 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %772 = bitcast %class.SystemFontInfoIface* %771 to i1 (%class.SystemFontInfoIface*, i8*, i32*)***
  %773 = load i1 (%class.SystemFontInfoIface*, i8*, i32*)**, i1 (%class.SystemFontInfoIface*, i8*, i32*)*** %772, align 8
  %774 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, i8*, i32*)*, i1 (%class.SystemFontInfoIface*, i8*, i32*)** %773, i64 7
  %775 = load i1 (%class.SystemFontInfoIface*, i8*, i32*)*, i1 (%class.SystemFontInfoIface*, i8*, i32*)** %774, align 8
  %776 = call zeroext i1 %775(%class.SystemFontInfoIface* %771, i8* nonnull %760, i32* nonnull %31) #12
  br label %777

777:                                              ; preds = %770, %758
  %778 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %779 = bitcast %"class.pdfium::span"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %779, i8 0, i64 16, i1 false) #12
  %780 = bitcast %class.SystemFontInfoIface* %778 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %781 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %780, align 8
  %782 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %781, i64 5
  %783 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %782, align 8
  %784 = call i32 %783(%class.SystemFontInfoIface* %778, i8* nonnull %760, i32 1953784678, %"class.pdfium::span"* nonnull %38) #12
  %785 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %786 = bitcast %"class.pdfium::span"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %786, i8 0, i64 16, i1 false) #12
  %787 = bitcast %class.SystemFontInfoIface* %785 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %788 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %787, align 8
  %789 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %788, i64 5
  %790 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %789, align 8
  %791 = call i32 %790(%class.SystemFontInfoIface* %785, i8* nonnull %760, i32 0, %"class.pdfium::span"* nonnull %39) #12
  %792 = or i32 %791, %784
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %794, label %801

794:                                              ; preds = %777
  %795 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %796 = bitcast %class.SystemFontInfoIface* %795 to void (%class.SystemFontInfoIface*, i8*)***
  %797 = load void (%class.SystemFontInfoIface*, i8*)**, void (%class.SystemFontInfoIface*, i8*)*** %796, align 8
  %798 = getelementptr inbounds void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %797, i64 8
  %799 = load void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %798, align 8
  call void %799(%class.SystemFontInfoIface* %795, i8* nonnull %760) #12
  %800 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 0, i64* %800, align 8
  br label %868

801:                                              ; preds = %777
  %802 = icmp eq i32 %784, 0
  br i1 %802, label %807, label %803

803:                                              ; preds = %801
  %804 = bitcast %"class.fxcrt::RetainPtr.40"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %804) #12
  call void @_ZN14CFX_FontMapper16GetCachedTTCFaceEPvjj(%"class.fxcrt::RetainPtr.40"* nonnull sret %40, %class.CFX_FontMapper* %1, i8* nonnull %760, i32 %784, i32 %791)
  %805 = bitcast %"class.fxcrt::RetainPtr.40"* %40 to i64*
  %806 = load i64, i64* %805, align 8
  br label %813

807:                                              ; preds = %801
  %808 = bitcast %"class.fxcrt::RetainPtr.40"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %808) #12
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %42, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  %809 = and i8 %761, 1
  %810 = icmp ne i8 %809, 0
  call void @_ZN14CFX_FontMapper13GetCachedFaceEPvN5fxcrt10ByteStringEibj(%"class.fxcrt::RetainPtr.40"* nonnull sret %41, %class.CFX_FontMapper* %1, i8* nonnull %760, %"class.fxcrt::ByteString"* nonnull %42, i32 %759, i1 zeroext %810, i32 %791)
  %811 = bitcast %"class.fxcrt::RetainPtr.40"* %41 to i64*
  %812 = load i64, i64* %811, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %42) #12
  br label %813

813:                                              ; preds = %807, %803
  %814 = phi i8* [ %808, %807 ], [ %804, %803 ]
  %815 = phi i64 [ %812, %807 ], [ %806, %803 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %814) #12
  %816 = icmp eq i64 %815, 0
  br i1 %816, label %861, label %817

817:                                              ; preds = %813
  %818 = inttoptr i64 %815 to %class.CFX_Face*
  %819 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 0
  %820 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* %819, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %19) #12
  %821 = load i32, i32* %31, align 4
  %822 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 1
  store i32 %821, i32* %822, align 8
  %823 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %818, i64 0, i32 2, i32 0, i32 0, i32 0
  %824 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %823, align 8
  %825 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %824, i64 0, i32 3
  %826 = load i64, i64* %825, align 8
  %827 = and i64 %826, 2
  %828 = icmp eq i64 %827, 0
  %829 = icmp ne i32 %759, 700
  %830 = icmp ne i32 %759, 400
  %831 = select i1 %828, i1 %830, i1 %829
  br i1 %831, label %832, label %834

832:                                              ; preds = %817
  %833 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 2
  store i32 %759, i32* %833, align 4
  br label %834

834:                                              ; preds = %832, %817
  %835 = and i8 %761, 1
  %836 = icmp eq i8 %835, 0
  br i1 %836, label %854, label %837

837:                                              ; preds = %834
  %838 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %823, align 8
  %839 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %838, i64 0, i32 3
  %840 = load i64, i64* %839, align 8
  %841 = and i64 %840, 1
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %843, label %854

843:                                              ; preds = %837
  %844 = icmp eq i32 %634, 0
  br i1 %844, label %851, label %845

845:                                              ; preds = %843
  %846 = icmp slt i32 %634, 0
  %847 = sub nsw i32 0, %634
  %848 = select i1 %846, i32 %847, i32 %634
  %849 = icmp slt i32 %848, 5
  %850 = select i1 %849, i32 0, i32 %634
  br label %851

851:                                              ; preds = %845, %843
  %852 = phi i32 [ -12, %843 ], [ %850, %845 ]
  %853 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 3
  store i32 %852, i32* %853, align 8
  br label %854

854:                                              ; preds = %851, %834, %837
  %855 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %856 = bitcast %class.SystemFontInfoIface* %855 to void (%class.SystemFontInfoIface*, i8*)***
  %857 = load void (%class.SystemFontInfoIface*, i8*)**, void (%class.SystemFontInfoIface*, i8*)*** %856, align 8
  %858 = getelementptr inbounds void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %857, i64 8
  %859 = load void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %858, align 8
  call void %859(%class.SystemFontInfoIface* %855, i8* nonnull %760) #12
  %860 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %815, i64* %860, align 8
  br label %868

861:                                              ; preds = %813
  %862 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %466, align 8
  %863 = bitcast %class.SystemFontInfoIface* %862 to void (%class.SystemFontInfoIface*, i8*)***
  %864 = load void (%class.SystemFontInfoIface*, i8*)**, void (%class.SystemFontInfoIface*, i8*)*** %863, align 8
  %865 = getelementptr inbounds void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %864, i64 8
  %866 = load void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %865, align 8
  call void %866(%class.SystemFontInfoIface* %862, i8* nonnull %760) #12
  %867 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 0, i64* %867, align 8
  br label %868

868:                                              ; preds = %861, %854, %741, %794, %756, %723, %721, %719
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %471) #12
  br label %869

869:                                              ; preds = %868, %469
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  br label %870

870:                                              ; preds = %869, %166, %160
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  ret void

871:                                              ; preds = %243
  %872 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #12
  br i1 %872, label %245, label %873

873:                                              ; preds = %871
  %874 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)) #12
  br i1 %874, label %245, label %875

875:                                              ; preds = %873
  %876 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #12
  br i1 %876, label %245, label %877

877:                                              ; preds = %875
  %878 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)) #12
  br i1 %878, label %245, label %879

879:                                              ; preds = %877
  %880 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #12
  br i1 %880, label %245, label %881

881:                                              ; preds = %879
  %882 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0)) #12
  br i1 %882, label %245, label %883

883:                                              ; preds = %881
  %884 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0)) #12
  br i1 %884, label %245, label %885

885:                                              ; preds = %883
  %886 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0)) #12
  br i1 %886, label %245, label %887

887:                                              ; preds = %885
  %888 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0)) #12
  br i1 %888, label %245, label %889

889:                                              ; preds = %887
  %890 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)) #12
  br i1 %890, label %245, label %891

891:                                              ; preds = %889
  br i1 %241, label %279, label %258
}

declare i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"*, i8 signext) local_unnamed_addr #1

declare void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN14CFX_FontMapper19GetStandardFontNameEPN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3
  %6 = select i1 %4, [1 x i8]* @.str.10, [1 x i8]* %5
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i64 [ 89, %1 ], [ %21, %8 ]
  %10 = phi %"struct.(anonymous namespace)::AltFontName"* [ getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 0, i64 0), %1 ], [ %20, %8 ]
  %11 = lshr i64 %9, 1
  %12 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %10, i64 %11
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i32 @FXSYS_stricmp(i8* %14, i8* %7) #12
  %16 = icmp slt i32 %15, 0
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %12, i64 1
  %18 = xor i64 %11, -1
  %19 = add i64 %9, %18
  %20 = select i1 %16, %"struct.(anonymous namespace)::AltFontName"* %17, %"struct.(anonymous namespace)::AltFontName"* %10
  %21 = select i1 %16, i64 %19, i64 %11
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %8

23:                                               ; preds = %8
  %24 = icmp eq %"struct.(anonymous namespace)::AltFontName"* %20, getelementptr inbounds ([89 x %"struct.(anonymous namespace)::AltFontName"], [89 x %"struct.(anonymous namespace)::AltFontName"]* @_ZN12_GLOBAL__N_114g_AltFontNamesE, i64 1, i64 0)
  br i1 %24, label %45, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %20, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %29 = icmp eq %"class.fxcrt::StringDataTemplate"* %28, null
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %28, i64 0, i32 3
  %31 = select i1 %29, [1 x i8]* @.str.10, [1 x i8]* %30
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %31, i64 0, i64 0
  %33 = tail call i32 @FXSYS_stricmp(i8* %27, i8* %32) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::AltFontName", %"struct.(anonymous namespace)::AltFontName"* %20, i64 0, i32 1
  %37 = load i8, i8* %36, align 8
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [14 x i8*], [14 x i8*]* @_ZN12_GLOBAL__N_116kBase14FontNamesE, i64 0, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = tail call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* %0, i8* %40) #12
  %42 = load i8, i8* %36, align 1
  %43 = zext i8 %42 to i16
  %44 = shl nuw i16 %43, 8
  br label %45

45:                                               ; preds = %23, %25, %35
  %46 = phi i16 [ 1, %35 ], [ 0, %25 ], [ 0, %23 ]
  %47 = phi i16 [ %44, %35 ], [ 0, %25 ], [ 0, %23 ]
  %48 = or i16 %47, %46
  ret i16 %48
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*, i64) local_unnamed_addr #1

declare void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64) local_unnamed_addr #1

declare { i8, i64 } @_ZNK5fxcrt10ByteString11ReverseFindEc(%"class.fxcrt::ByteString"*, i8 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN12_GLOBAL__N_112GetStyleTypeERKN5fxcrt10ByteStringEb(%"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %7 = icmp eq %"class.fxcrt::StringDataTemplate"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %48, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  %14 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  br label %15

15:                                               ; preds = %45, %12
  %16 = phi i64 [ 4, %12 ], [ %46, %45 ]
  %17 = getelementptr inbounds [5 x %"struct.(anonymous namespace)::FX_FontStyle"], [5 x %"struct.(anonymous namespace)::FX_FontStyle"]* @_ZN12_GLOBAL__N_112g_FontStylesE, i64 0, i64 %16
  %18 = icmp eq %"struct.(anonymous namespace)::FX_FontStyle"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds [5 x %"struct.(anonymous namespace)::FX_FontStyle"], [5 x %"struct.(anonymous namespace)::FX_FontStyle"]* @_ZN12_GLOBAL__N_112g_FontStylesE, i64 0, i64 %16, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %23 = icmp eq %"class.fxcrt::StringDataTemplate"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %22, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %19 ]
  %29 = icmp ugt i64 %21, %28
  br i1 %29, label %45, label %30

30:                                               ; preds = %27
  br i1 %1, label %31, label %38

31:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %3, %"class.fxcrt::ByteString"* %0, i64 %21) #12
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::FX_FontStyle", %"struct.(anonymous namespace)::FX_FontStyle"* %17, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* %33) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = getelementptr inbounds [5 x %"struct.(anonymous namespace)::FX_FontStyle"], [5 x %"struct.(anonymous namespace)::FX_FontStyle"]* @_ZN12_GLOBAL__N_112g_FontStylesE, i64 0, i64 %16, i32 2
  %37 = load i32, i32* %36, align 8
  br label %48

38:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %4, %"class.fxcrt::ByteString"* %0, i64 %21) #12
  %39 = getelementptr inbounds %"struct.(anonymous namespace)::FX_FontStyle", %"struct.(anonymous namespace)::FX_FontStyle"* %17, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* %40) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = getelementptr inbounds [5 x %"struct.(anonymous namespace)::FX_FontStyle"], [5 x %"struct.(anonymous namespace)::FX_FontStyle"]* @_ZN12_GLOBAL__N_112g_FontStylesE, i64 0, i64 %16, i32 2
  %44 = load i32, i32* %43, align 8
  br label %48

45:                                               ; preds = %15, %27, %38, %31
  %46 = add nsw i64 %16, -1
  %47 = icmp eq i64 %16, 0
  br i1 %47, label %48, label %15

48:                                               ; preds = %45, %35, %42, %2, %8
  %49 = phi i64 [ 0, %8 ], [ 0, %2 ], [ 1, %42 ], [ 1, %35 ], [ 0, %45 ]
  %50 = phi i32 [ 0, %8 ], [ 0, %2 ], [ %44, %42 ], [ %37, %35 ], [ 0, %45 ]
  %51 = phi i64 [ 0, %8 ], [ 0, %2 ], [ %21, %42 ], [ %21, %35 ], [ 0, %45 ]
  %52 = zext i32 %50 to i64
  %53 = shl nuw i64 %52, 32
  %54 = or i64 %53, %49
  %55 = insertvalue { i64, i64 } undef, i64 %54, 0
  %56 = insertvalue { i64, i64 } %55, i64 %51, 1
  ret { i64, i64 } %56
}

declare zeroext i8 @_Z25FX_GetCharsetFromCodePaget(i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_Z15FX_CharSetIsCJKh(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper16GetCachedTTCFaceEPvjj(%"class.fxcrt::RetainPtr.40"* noalias nocapture sret, %class.CFX_FontMapper* nocapture readonly, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca [256 x i32], align 16
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %11 = alloca %"class.pdfium::span.73", align 8
  %12 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %13 = alloca %"class.pdfium::span.73", align 8
  %14 = bitcast %"class.pdfium::span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 1024, i1 false) #12
  %16 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %16, align 8
  %18 = ptrtoint [256 x i32]* %6 to i64
  %19 = bitcast %"class.pdfium::span"* %7 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !19
  %20 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  store i64 1024, i64* %20, align 8, !alias.scope !19
  %21 = bitcast %class.SystemFontInfoIface* %17 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %22 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %22, i64 5
  %24 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %23, align 8
  %25 = call i32 %24(%class.SystemFontInfoIface* %17, i8* %2, i32 1953784678, %"class.pdfium::span"* nonnull %7) #12
  br label %26

26:                                               ; preds = %26, %5
  %27 = phi i64 [ 0, %5 ], [ %65, %26 ]
  %28 = phi <4 x i32> [ zeroinitializer, %5 ], [ %63, %26 ]
  %29 = phi <4 x i32> [ zeroinitializer, %5 ], [ %64, %26 ]
  %30 = getelementptr [256 x i32], [256 x i32]* %6, i64 0, i64 %27
  %31 = bitcast i32* %30 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 16
  %33 = getelementptr i32, i32* %30, i64 4
  %34 = bitcast i32* %33 to <4 x i32>*
  %35 = load <4 x i32>, <4 x i32>* %34, align 16
  %36 = add <4 x i32> %32, %28
  %37 = add <4 x i32> %35, %29
  %38 = or i64 %27, 8
  %39 = getelementptr [256 x i32], [256 x i32]* %6, i64 0, i64 %38
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 16
  %42 = getelementptr i32, i32* %39, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 16
  %45 = add <4 x i32> %41, %36
  %46 = add <4 x i32> %44, %37
  %47 = or i64 %27, 16
  %48 = getelementptr [256 x i32], [256 x i32]* %6, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 16
  %51 = getelementptr i32, i32* %48, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 16
  %54 = add <4 x i32> %50, %45
  %55 = add <4 x i32> %53, %46
  %56 = or i64 %27, 24
  %57 = getelementptr [256 x i32], [256 x i32]* %6, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 16
  %60 = getelementptr i32, i32* %57, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 16
  %63 = add <4 x i32> %59, %54
  %64 = add <4 x i32> %62, %55
  %65 = add nuw nsw i64 %27, 32
  %66 = icmp eq i64 %65, 256
  br i1 %66, label %67, label %26, !llvm.loop !22

67:                                               ; preds = %26
  %68 = add <4 x i32> %64, %63
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %70 = add <4 x i32> %68, %69
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %72 = add <4 x i32> %70, %71
  %73 = extractelement <4 x i32> %72, i32 0
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %74 = bitcast %"class.fxcrt::RetainPtr.75"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.CFX_FontMgr::FontDesc"* inttoptr (i64 -6148914691236517206 to %"class.CFX_FontMgr::FontDesc"*), %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %76 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 4, i32 0
  %77 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %76, align 8
  call void @_ZN11CFX_FontMgr20GetCachedTTCFontDescEij(%"class.fxcrt::RetainPtr.75"* nonnull sret %8, %class.CFX_FontMgr* %77, i32 %3, i32 %73) #12
  %78 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %79 = icmp eq %"class.CFX_FontMgr::FontDesc"* %78, null
  %80 = zext i32 %3 to i64
  br i1 %79, label %81, label %127

81:                                               ; preds = %67
  %82 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %80, i64 1) #12
  %83 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %16, align 8
  %84 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 0, i32 0
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 %80, i64* %85, align 8
  %86 = bitcast %class.SystemFontInfoIface* %83 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %87 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %87, i64 5
  %89 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %88, align 8
  %90 = call i32 %89(%class.SystemFontInfoIface* %83, i8* %2, i32 1953784678, %"class.pdfium::span"* nonnull %9) #12
  %91 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %76, align 8
  call void @_ZN11CFX_FontMgr20AddCachedTTCFontDescEijNSt3__110unique_ptrIh13FxFreeDeleterEEj(%"class.fxcrt::RetainPtr.75"* nonnull sret %10, %class.CFX_FontMgr* %92, i32 %3, i32 %73, i8* %82, i32 %3) #12
  %93 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %93, align 8
  %96 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %97 = bitcast %"class.fxcrt::RetainPtr.75"* %8 to i64*
  store i64 %95, i64* %97, align 8
  %98 = icmp eq %"class.CFX_FontMgr::FontDesc"* %96, null
  br i1 %98, label %99, label %100

99:                                               ; preds = %81
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %93, align 8
  br label %125

100:                                              ; preds = %81
  %101 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %96, i64 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = add nsw i64 %102, -1
  store i64 %103, i64* %101, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %100
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %93, align 8
  br label %125

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %96, i64 0, i32 0
  %108 = bitcast %"class.CFX_FontMgr::FontDesc"* %96 to void (%"class.fxcrt::Retainable"*)***
  %109 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %109, i64 1
  %111 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, align 8
  call void %111(%"class.fxcrt::Retainable"* nonnull %107) #12
  %112 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %93, align 8
  %113 = bitcast %"class.CFX_FontMgr::FontDesc"* %112 to void (%"class.fxcrt::Retainable"*)***
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %93, align 8
  %114 = icmp eq %"class.CFX_FontMgr::FontDesc"* %112, null
  br i1 %114, label %125, label %115

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %112, i64 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = add nsw i64 %117, -1
  store i64 %118, i64* %116, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %112, i64 0, i32 0
  %122 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %113, align 8
  %123 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %122, i64 1
  %124 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %123, align 8
  call void %124(%"class.fxcrt::Retainable"* nonnull %121) #12
  br label %125

125:                                              ; preds = %105, %120, %115, %106, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  %126 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  br label %127

127:                                              ; preds = %67, %125
  %128 = phi %"class.CFX_FontMgr::FontDesc"* [ %126, %125 ], [ %78, %67 ]
  %129 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %128, i64 0, i32 2
  %130 = load i64, i64* %129, align 8, !noalias !23
  %131 = icmp ult i64 %130, %80
  br i1 %131, label %132, label %133, !prof !26

132:                                              ; preds = %127
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !27, !srcloc !30
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !27, !srcloc !31
  unreachable

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8, !noalias !23
  %137 = sub i32 %3, %4
  %138 = bitcast %"class.pdfium::span.73"* %11 to i64*
  store i64 %136, i64* %138, align 8
  %139 = getelementptr inbounds %"class.pdfium::span.73", %"class.pdfium::span.73"* %11, i64 0, i32 1
  store i64 %80, i64* %139, align 8
  %140 = call i32 @_Z11GetTTCIndexN6pdfium4spanIKhEEj(%"class.pdfium::span.73"* nonnull %11, i32 %137) #12
  %141 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %142 = sext i32 %140 to i64
  %143 = call %class.CFX_Face* @_ZNK11CFX_FontMgr8FontDesc7GetFaceEm(%"class.CFX_FontMgr::FontDesc"* %141, i64 %142) #12
  %144 = icmp eq %class.CFX_Face* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %133
  %146 = ptrtoint %class.CFX_Face* %143 to i64
  %147 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %143, i64 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %148, 1
  store i64 %149, i64* %147, align 8
  br label %170

150:                                              ; preds = %133
  %151 = bitcast %"class.fxcrt::RetainPtr.40"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #12
  %152 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %153 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %152, i64 0, i32 2
  %154 = load i64, i64* %153, align 8, !noalias !32
  %155 = icmp ult i64 %154, %80
  br i1 %155, label %156, label %157, !prof !26

156:                                              ; preds = %150
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !35, !srcloc !30
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !35, !srcloc !31
  unreachable

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = bitcast i8** %158 to i64*
  %160 = load i64, i64* %159, align 8, !noalias !32
  %161 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %76, align 8
  %162 = bitcast %"class.pdfium::span.73"* %13 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.pdfium::span.73", %"class.pdfium::span.73"* %13, i64 0, i32 1
  store i64 %80, i64* %163, align 8
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* nonnull sret %12, %class.CFX_FontMgr* %161, %"class.fxcrt::RetainPtr.75"* nonnull dereferenceable(8) %8, %"class.pdfium::span.73"* nonnull %13, i32 %140) #12
  %164 = bitcast %"class.fxcrt::RetainPtr.40"* %12 to i64*
  %165 = load i64, i64* %164, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #12
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %157
  %168 = inttoptr i64 %165 to %class.CFX_Face*
  %169 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  call void @_ZN11CFX_FontMgr8FontDesc7SetFaceEmP8CFX_Face(%"class.CFX_FontMgr::FontDesc"* %169, i64 %142, %class.CFX_Face* nonnull %168) #12
  br label %170

170:                                              ; preds = %157, %167, %145
  %171 = phi i64 [ %165, %167 ], [ %146, %145 ], [ 0, %157 ]
  %172 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %171, i64* %172, align 8
  %173 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %75, align 8
  %174 = icmp eq %"class.CFX_FontMgr::FontDesc"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %173, i64 0, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = add nsw i64 %177, -1
  store i64 %178, i64* %176, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %173, i64 0, i32 0
  %182 = bitcast %"class.CFX_FontMgr::FontDesc"* %173 to void (%"class.fxcrt::Retainable"*)***
  %183 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %183, i64 1
  %185 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, align 8
  call void %185(%"class.fxcrt::Retainable"* nonnull %181) #12
  br label %186

186:                                              ; preds = %170, %175, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_FontMapper13GetCachedFaceEPvN5fxcrt10ByteStringEibj(%"class.fxcrt::RetainPtr.40"* noalias nocapture sret, %class.CFX_FontMapper* nocapture readonly, i8*, %"class.fxcrt::ByteString"*, i32, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.75", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %12 = alloca %"class.pdfium::span.73", align 8
  %13 = bitcast %"class.fxcrt::RetainPtr.75"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.CFX_FontMgr::FontDesc"* inttoptr (i64 -6148914691236517206 to %"class.CFX_FontMgr::FontDesc"*), %"class.CFX_FontMgr::FontDesc"** %14, align 8
  %15 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 4, i32 0
  %16 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %15, align 8
  call void @_ZN11CFX_FontMgr17GetCachedFontDescERKN5fxcrt10ByteStringEib(%"class.fxcrt::RetainPtr.75"* nonnull sret %8, %class.CFX_FontMgr* %16, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i32 %4, i1 zeroext %5) #12
  %17 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  %18 = icmp eq %"class.CFX_FontMgr::FontDesc"* %17, null
  br i1 %18, label %19, label %67

19:                                               ; preds = %7
  %20 = zext i32 %6 to i64
  %21 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %20, i64 1) #12
  %22 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %22, align 8
  %24 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 0, i32 0
  store i8* %21, i8** %24, align 8
  %25 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 %20, i64* %25, align 8
  %26 = bitcast %class.SystemFontInfoIface* %23 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %27 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %27, i64 5
  %29 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %28, align 8
  %30 = call i32 %29(%class.SystemFontInfoIface* %23, i8* %2, i32 0, %"class.pdfium::span"* nonnull %9) #12
  %31 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %15, align 8
  call void @_ZN11CFX_FontMgr17AddCachedFontDescERKN5fxcrt10ByteStringEibNSt3__110unique_ptrIh13FxFreeDeleterEEj(%"class.fxcrt::RetainPtr.75"* nonnull sret %10, %class.CFX_FontMgr* %32, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i32 %4, i1 zeroext %5, i8* %21, i32 %6) #12
  %33 = getelementptr inbounds %"class.fxcrt::RetainPtr.75", %"class.fxcrt::RetainPtr.75"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.fxcrt::RetainPtr.75"* %10 to i64*
  %35 = load i64, i64* %34, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %33, align 8
  %36 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  %37 = bitcast %"class.fxcrt::RetainPtr.75"* %8 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %"class.CFX_FontMgr::FontDesc"* %36, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %19
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %33, align 8
  br label %65

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %36, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %33, align 8
  br label %65

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %36, i64 0, i32 0
  %48 = bitcast %"class.CFX_FontMgr::FontDesc"* %36 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %47) #12
  %52 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %33, align 8
  %53 = bitcast %"class.CFX_FontMgr::FontDesc"* %52 to void (%"class.fxcrt::Retainable"*)***
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %33, align 8
  %54 = icmp eq %"class.CFX_FontMgr::FontDesc"* %52, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %52, i64 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %57, -1
  store i64 %58, i64* %56, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %52, i64 0, i32 0
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  call void %64(%"class.fxcrt::Retainable"* nonnull %61) #12
  br label %65

65:                                               ; preds = %45, %60, %55, %46, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %66 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  br label %67

67:                                               ; preds = %7, %65
  %68 = phi %"class.CFX_FontMgr::FontDesc"* [ %17, %7 ], [ %66, %65 ]
  %69 = call %class.CFX_Face* @_ZNK11CFX_FontMgr8FontDesc7GetFaceEm(%"class.CFX_FontMgr::FontDesc"* %68, i64 0) #12
  %70 = icmp eq %class.CFX_Face* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %class.CFX_Face* %69 to i64
  %73 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %69, i64 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add nsw i64 %74, 1
  store i64 %75, i64* %73, align 8
  br label %97

76:                                               ; preds = %67
  %77 = bitcast %"class.fxcrt::RetainPtr.40"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  %78 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  %79 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %78, i64 0, i32 2
  %80 = load i64, i64* %79, align 8, !noalias !38
  %81 = zext i32 %6 to i64
  %82 = icmp ult i64 %80, %81
  br i1 %82, label %83, label %84, !prof !26

83:                                               ; preds = %76
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !41, !srcloc !30
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !41, !srcloc !31
  unreachable

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !38
  %88 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %15, align 8
  %89 = bitcast %"class.pdfium::span.73"* %12 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.pdfium::span.73", %"class.pdfium::span.73"* %12, i64 0, i32 1
  store i64 %81, i64* %90, align 8
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.40"* nonnull sret %11, %class.CFX_FontMgr* %88, %"class.fxcrt::RetainPtr.75"* nonnull dereferenceable(8) %8, %"class.pdfium::span.73"* nonnull %12, i32 0) #12
  %91 = bitcast %"class.fxcrt::RetainPtr.40"* %11 to i64*
  %92 = load i64, i64* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = inttoptr i64 %92 to %class.CFX_Face*
  %96 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  call void @_ZN11CFX_FontMgr8FontDesc7SetFaceEmP8CFX_Face(%"class.CFX_FontMgr::FontDesc"* %96, i64 0, %class.CFX_Face* nonnull %95) #12
  br label %97

97:                                               ; preds = %84, %94, %71
  %98 = phi i64 [ %92, %94 ], [ %72, %71 ], [ 0, %84 ]
  %99 = bitcast %"class.fxcrt::RetainPtr.40"* %0 to i64*
  store i64 %98, i64* %99, align 8
  %100 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %14, align 8
  %101 = icmp eq %"class.CFX_FontMgr::FontDesc"* %100, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %100, i64 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, -1
  store i64 %105, i64* %103, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %100, i64 0, i32 0
  %109 = bitcast %"class.CFX_FontMgr::FontDesc"* %100 to void (%"class.fxcrt::Retainable"*)***
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  call void %112(%"class.fxcrt::Retainable"* nonnull %108) #12
  br label %113

113:                                              ; preds = %97, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK14CFX_FontMapper11GetFaceSizeEv(%class.CFX_FontMapper* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %"struct.CFX_FontMapper::FaceData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = icmp ult i64 %9, 2147483648
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %1
  tail call void @llvm.trap() #12
  unreachable

12:                                               ; preds = %1
  %13 = trunc i64 %9 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14CFX_FontMapper16HasInstalledFontEN5fxcrt18StringViewTemplateIcEE(%class.CFX_FontMapper* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %4, align 8
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 5, i32 0, i32 1
  %7 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %6, align 8
  %8 = icmp eq %"class.fxcrt::ByteString"* %5, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.fxcrt::ByteString"* %17, %7
  br i1 %13, label %18, label %14

14:                                               ; preds = %9, %12
  %15 = phi %"class.fxcrt::ByteString"* [ %5, %9 ], [ %17, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %16 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %15, %"class.fxcrt::StringViewTemplate"* nonnull %3) #12
  %17 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %15, i64 1
  br i1 %16, label %18, label %12

18:                                               ; preds = %12, %14, %2
  %19 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14CFX_FontMapper16HasLocalizedFontEN5fxcrt18StringViewTemplateIcEE(%class.CFX_FontMapper* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"struct.std::__1::pair"* %18, %7
  br i1 %13, label %19, label %14

14:                                               ; preds = %9, %12
  %15 = phi %"struct.std::__1::pair"* [ %5, %9 ], [ %18, %12 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %17 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %16, %"class.fxcrt::StringViewTemplate"* nonnull %3) #12
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  br i1 %17, label %19, label %12

19:                                               ; preds = %12, %14, %2
  %20 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN14CFX_FontMapper16RawBytesForIndexEjPm(%class.CFX_FontMapper* nocapture readonly, i32, i64* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.pdfium::span", align 8
  %7 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %9 = icmp eq %class.SystemFontInfoIface* %8, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %13, align 8, !noalias !44
  %15 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %14, i64 %12, i32 0
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %15) #12
  %16 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8
  %18 = icmp eq %"class.fxcrt::StringDataTemplate"* %17, null
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 3
  %20 = select i1 %18, [1 x i8]* @.str.10, [1 x i8]* %19
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %20, i64 0, i64 0
  %22 = bitcast %class.SystemFontInfoIface* %8 to i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)***
  %23 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)**, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %23, i64 3
  %25 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %24, align 8
  %26 = call i8* %25(%class.SystemFontInfoIface* nonnull %8, i32 0, i1 zeroext false, i32 1, i32 0, i8* %21) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %51, label %28

28:                                               ; preds = %10
  %29 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %30 = bitcast %"class.pdfium::span"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #12
  %31 = bitcast %class.SystemFontInfoIface* %29 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %32 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %32, i64 5
  %34 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %33, align 8
  %35 = call i32 %34(%class.SystemFontInfoIface* %29, i8* nonnull %26, i32 0, %"class.pdfium::span"* nonnull %5) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %51, label %37

37:                                               ; preds = %28
  %38 = add i32 %35, 1
  %39 = zext i32 %38 to i64
  %40 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %39, i64 1) #12
  %41 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %7, align 8
  %42 = zext i32 %35 to i64
  %43 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 0, i32 0
  store i8* %40, i8** %43, align 8
  %44 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 1
  store i64 %42, i64* %44, align 8
  %45 = bitcast %class.SystemFontInfoIface* %41 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %46 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %46, i64 5
  %48 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %47, align 8
  %49 = call i32 %48(%class.SystemFontInfoIface* %41, i8* nonnull %26, i32 0, %"class.pdfium::span"* nonnull %6) #12
  %50 = zext i32 %49 to i64
  store i64 %50, i64* %2, align 8
  br label %51

51:                                               ; preds = %3, %28, %10, %37
  %52 = phi i8* [ %40, %37 ], [ null, %3 ], [ null, %10 ], [ null, %28 ]
  ret i8* %52
}

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14CFX_FontMapper13IsBuiltinFaceERKN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_FontMapper* nocapture readonly, %"class.fxcrt::RetainPtr.40"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %5 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 7, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %7 = icmp eq %class.CFX_Face* %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 7, i64 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %11 = icmp eq %class.CFX_Face* %10, %4
  br i1 %11, label %16, label %65

12:                                               ; preds = %65
  %13 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 1, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_Face*, %class.CFX_Face** %13, align 8
  %15 = icmp eq %class.CFX_Face* %14, %4
  br i1 %15, label %16, label %17

16:                                               ; preds = %2, %8, %65, %12, %17, %21, %25, %29, %33, %37, %41, %45, %49, %53, %57
  ret i1 true

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CFX_Face*, %class.CFX_Face** %18, align 8
  %20 = icmp eq %class.CFX_Face* %19, %4
  br i1 %20, label %16, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CFX_Face*, %class.CFX_Face** %22, align 8
  %24 = icmp eq %class.CFX_Face* %23, %4
  br i1 %24, label %16, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 4, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CFX_Face*, %class.CFX_Face** %26, align 8
  %28 = icmp eq %class.CFX_Face* %27, %4
  br i1 %28, label %16, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 5, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_Face*, %class.CFX_Face** %30, align 8
  %32 = icmp eq %class.CFX_Face* %31, %4
  br i1 %32, label %16, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 6, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.CFX_Face*, %class.CFX_Face** %34, align 8
  %36 = icmp eq %class.CFX_Face* %35, %4
  br i1 %36, label %16, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 7, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CFX_Face*, %class.CFX_Face** %38, align 8
  %40 = icmp eq %class.CFX_Face* %39, %4
  br i1 %40, label %16, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 8, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.CFX_Face*, %class.CFX_Face** %42, align 8
  %44 = icmp eq %class.CFX_Face* %43, %4
  br i1 %44, label %16, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 9, i32 0, i32 0, i32 0, i32 0
  %47 = load %class.CFX_Face*, %class.CFX_Face** %46, align 8
  %48 = icmp eq %class.CFX_Face* %47, %4
  br i1 %48, label %16, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 10, i32 0, i32 0, i32 0, i32 0
  %51 = load %class.CFX_Face*, %class.CFX_Face** %50, align 8
  %52 = icmp eq %class.CFX_Face* %51, %4
  br i1 %52, label %16, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 11, i32 0, i32 0, i32 0, i32 0
  %55 = load %class.CFX_Face*, %class.CFX_Face** %54, align 8
  %56 = icmp eq %class.CFX_Face* %55, %4
  br i1 %56, label %16, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 12, i32 0, i32 0, i32 0, i32 0
  %59 = load %class.CFX_Face*, %class.CFX_Face** %58, align 8
  %60 = icmp eq %class.CFX_Face* %59, %4
  br i1 %60, label %16, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 13, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CFX_Face*, %class.CFX_Face** %62, align 8
  %64 = icmp eq %class.CFX_Face* %63, %4
  ret i1 %64

65:                                               ; preds = %8
  %66 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %0, i64 0, i32 8, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %class.CFX_Face*, %class.CFX_Face** %66, align 8
  %68 = icmp eq %class.CFX_Face* %67, %4
  br i1 %68, label %16, label %12
}

declare void @_ZN11CFX_FontMgr20GetCachedTTCFontDescEij(%"class.fxcrt::RetainPtr.75"* sret, %class.CFX_FontMgr*, i32, i32) local_unnamed_addr #1

declare void @_ZN11CFX_FontMgr20AddCachedTTCFontDescEijNSt3__110unique_ptrIh13FxFreeDeleterEEj(%"class.fxcrt::RetainPtr.75"* sret, %class.CFX_FontMgr*, i32, i32, i8*, i32) local_unnamed_addr #1

declare i32 @_Z11GetTTCIndexN6pdfium4spanIKhEEj(%"class.pdfium::span.73"*, i32) local_unnamed_addr #1

declare %class.CFX_Face* @_ZNK11CFX_FontMgr8FontDesc7GetFaceEm(%"class.CFX_FontMgr::FontDesc"*, i64) local_unnamed_addr #1

declare void @_ZN11CFX_FontMgr8FontDesc7SetFaceEmP8CFX_Face(%"class.CFX_FontMgr::FontDesc"*, i64, %class.CFX_Face*) local_unnamed_addr #1

declare void @_ZN11CFX_FontMgr17GetCachedFontDescERKN5fxcrt10ByteStringEib(%"class.fxcrt::RetainPtr.75"* sret, %class.CFX_FontMgr*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN11CFX_FontMgr17AddCachedFontDescERKN5fxcrt10ByteStringEibNSt3__110unique_ptrIh13FxFreeDeleterEEj(%"class.fxcrt::RetainPtr.75"* sret, %class.CFX_FontMgr*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i1 zeroext, i8*, i32) local_unnamed_addr #1

declare i32 @FXSYS_stricmp(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CFX_FontMapper18IsStandardFontNameERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN6pdfium8ContainsIA14_PKcN5fxcrt10ByteStringELPv0EEEbRKT_RKT0_([14 x i8*]* nonnull dereferenceable(112) @_ZN12_GLOBAL__N_116kBase14FontNamesE, %"class.fxcrt::ByteString"* dereferenceable(8) %0)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6pdfium8ContainsIA14_PKcN5fxcrt10ByteStringELPv0EEEbRKT_RKT0_([14 x i8*]* dereferenceable(112), %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 0
  %4 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 14
  %5 = load i8*, i8** %3, align 8
  %6 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %5) #12
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %9) #12
  br i1 %10, label %11, label %14

11:                                               ; preds = %58, %54, %50, %46, %42, %38, %34, %30, %26, %22, %18, %14, %7, %2
  %12 = phi i8** [ %3, %2 ], [ %8, %7 ], [ %15, %14 ], [ %19, %18 ], [ %23, %22 ], [ %27, %26 ], [ %31, %30 ], [ %35, %34 ], [ %39, %38 ], [ %43, %42 ], [ %47, %46 ], [ %51, %50 ], [ %55, %54 ], [ %62, %58 ]
  %13 = icmp ne i8** %12, %4
  ret i1 %13

14:                                               ; preds = %7
  %15 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 2
  %16 = load i8*, i8** %15, align 8
  %17 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %16) #12
  br i1 %17, label %11, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 3
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %20) #12
  br i1 %21, label %11, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 4
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %24) #12
  br i1 %25, label %11, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 5
  %28 = load i8*, i8** %27, align 8
  %29 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %28) #12
  br i1 %29, label %11, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 6
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %32) #12
  br i1 %33, label %11, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 7
  %36 = load i8*, i8** %35, align 8
  %37 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %36) #12
  br i1 %37, label %11, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 8
  %40 = load i8*, i8** %39, align 8
  %41 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %40) #12
  br i1 %41, label %11, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 9
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %44) #12
  br i1 %45, label %11, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 10
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %48) #12
  br i1 %49, label %11, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 11
  %52 = load i8*, i8** %51, align 8
  %53 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %52) #12
  br i1 %53, label %11, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 12
  %56 = load i8*, i8** %55, align 8
  %57 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %56) #12
  br i1 %57, label %11, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds [14 x i8*], [14 x i8*]* %0, i64 0, i64 13
  %60 = load i8*, i8** %59, align 8
  %61 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* %60) #12
  %62 = select i1 %61, i8** %59, i8** %4
  br label %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN14CFX_FontMapper14IsSymbolicFontENS_12StandardFontE(i8 zeroext) local_unnamed_addr #5 align 2 {
  %2 = or i8 %0, 1
  %3 = icmp eq i8 %2, 13
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN14CFX_FontMapper11IsFixedFontENS_12StandardFontE(i8 zeroext) local_unnamed_addr #5 align 2 {
  %2 = icmp ult i8 %0, 4
  ret i1 %2
}

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

declare { i8, i64 } @_ZNK5fxcrt10ByteString4FindEcm(%"class.fxcrt::ByteString"*, i8 signext, i64) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteString9MakeLowerEv(%"class.fxcrt::ByteString"*) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1ERKNSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.fxcrt::ByteString"*, %"class.std::__1::basic_ostringstream"* dereferenceable(264)) unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN14CFX_FontMapper8FaceDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.CFX_FontMapper::FaceData"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.CFX_FontMapper::FaceData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.CFX_FontMapper::FaceData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.CFX_FontMapper::FaceData"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.CFX_FontMapper::FaceData"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %36, i64 %35
  %39 = ptrtoint %"struct.CFX_FontMapper::FaceData"* %38 to i64
  %40 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %1, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %40, %"class.fxcrt::ByteString"* dereferenceable(8) %41) #12
  %42 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %37, i64 1
  %46 = ptrtoint %"struct.CFX_FontMapper::FaceData"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %47, align 8
  %49 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %3, align 8
  %50 = icmp eq %"struct.CFX_FontMapper::FaceData"* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %34
  %52 = ptrtoint %"struct.CFX_FontMapper::FaceData"* %48 to i64
  br label %67

53:                                               ; preds = %34, %53
  %54 = phi %"struct.CFX_FontMapper::FaceData"* [ %62, %53 ], [ %37, %34 ]
  %55 = phi %"struct.CFX_FontMapper::FaceData"* [ %56, %53 ], [ %49, %34 ]
  %56 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %55, i64 -1
  %57 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %54, i64 -1, i32 0
  %58 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %56, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %57, %"class.fxcrt::ByteString"* dereferenceable(8) %58) #12
  %59 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %54, i64 -1, i32 1
  %60 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %55, i64 -1, i32 1
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %54, i64 -1
  %63 = icmp eq %"struct.CFX_FontMapper::FaceData"* %56, %48
  br i1 %63, label %64, label %53

64:                                               ; preds = %53
  %65 = load i64, i64* %6, align 8
  %66 = load %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"** %3, align 8
  br label %67

67:                                               ; preds = %51, %64
  %68 = phi %"struct.CFX_FontMapper::FaceData"* [ %48, %51 ], [ %66, %64 ]
  %69 = phi %"struct.CFX_FontMapper::FaceData"* [ %37, %51 ], [ %62, %64 ]
  %70 = phi i64 [ %52, %51 ], [ %65, %64 ]
  %71 = ptrtoint %"struct.CFX_FontMapper::FaceData"* %69 to i64
  store i64 %71, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %72 = inttoptr i64 %70 to %"struct.CFX_FontMapper::FaceData"*
  %73 = icmp eq %"struct.CFX_FontMapper::FaceData"* %68, %72
  br i1 %73, label %79, label %74

74:                                               ; preds = %67, %74
  %75 = phi %"struct.CFX_FontMapper::FaceData"* [ %76, %74 ], [ %68, %67 ]
  %76 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %75, i64 -1
  %77 = getelementptr inbounds %"struct.CFX_FontMapper::FaceData", %"struct.CFX_FontMapper::FaceData"* %76, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %77) #12
  %78 = icmp eq %"struct.CFX_FontMapper::FaceData"* %76, %72
  br i1 %78, label %79, label %74

79:                                               ; preds = %74, %67
  %80 = icmp eq i64 %70, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %79, %81
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN5fxcrt10ByteStringES3_EENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.33"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.std::__1::pair"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.std::__1::pair"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %35
  %39 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %40, %"class.fxcrt::ByteString"* dereferenceable(8) %41) #12
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %42, %"class.fxcrt::ByteString"* dereferenceable(8) %43) #12
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %45 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %49 = icmp eq %"struct.std::__1::pair"* %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %34
  %51 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  br label %65

52:                                               ; preds = %34, %52
  %53 = phi %"struct.std::__1::pair"* [ %60, %52 ], [ %37, %34 ]
  %54 = phi %"struct.std::__1::pair"* [ %55, %52 ], [ %48, %34 ]
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 -1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %56, %"class.fxcrt::ByteString"* dereferenceable(8) %57) #12
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 -1, i32 1
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %58, %"class.fxcrt::ByteString"* dereferenceable(8) %59) #12
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %61 = icmp eq %"struct.std::__1::pair"* %55, %47
  br i1 %61, label %62, label %52

62:                                               ; preds = %52
  %63 = load i64, i64* %6, align 8
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  br label %65

65:                                               ; preds = %50, %62
  %66 = phi %"struct.std::__1::pair"* [ %47, %50 ], [ %64, %62 ]
  %67 = phi %"struct.std::__1::pair"* [ %37, %50 ], [ %60, %62 ]
  %68 = phi i64 [ %51, %50 ], [ %63, %62 ]
  %69 = ptrtoint %"struct.std::__1::pair"* %67 to i64
  store i64 %69, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %70 = inttoptr i64 %68 to %"struct.std::__1::pair"*
  %71 = icmp eq %"struct.std::__1::pair"* %66, %70
  br i1 %71, label %78, label %72

72:                                               ; preds = %65, %72
  %73 = phi %"struct.std::__1::pair"* [ %74, %72 ], [ %66, %65 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 -1, i32 1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %75) #12
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %76) #12
  %77 = icmp eq %"struct.std::__1::pair"* %74, %70
  br i1 %77, label %78, label %72

78:                                               ; preds = %72, %65
  %79 = icmp eq i64 %68, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %68 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %78, %80
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.26"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.fxcrt::ByteString"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.fxcrt::ByteString"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.fxcrt::ByteString"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.fxcrt::ByteString"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %36, i64 %9
  %38 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %36, i64 %35
  %39 = ptrtoint %"class.fxcrt::ByteString"* %38 to i64
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %37, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #12
  %40 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %37, i64 1
  %41 = ptrtoint %"class.fxcrt::ByteString"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %42, align 8
  %44 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %3, align 8
  %45 = icmp eq %"class.fxcrt::ByteString"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.fxcrt::ByteString"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.fxcrt::ByteString"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.fxcrt::ByteString"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %49, i64 -1
  %52 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %50, i64 -1
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %51, %"class.fxcrt::ByteString"* dereferenceable(8) %52) #12
  %53 = icmp eq %"class.fxcrt::ByteString"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.fxcrt::ByteString"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.fxcrt::ByteString"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.fxcrt::ByteString"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.fxcrt::ByteString"*
  %63 = icmp eq %"class.fxcrt::ByteString"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.fxcrt::ByteString"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %65, i64 -1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %66) #12
  %67 = icmp eq %"class.fxcrt::ByteString"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium17as_writable_bytesIjvEENS_4spanIhEENS1_IT_EE: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium17as_writable_bytesIjvEENS_4spanIhEENS1_IT_EE"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!10 = !{i32 -2143863201}
!11 = !{i32 -2143863180}
!12 = !{i32 -2143862087}
!13 = !{i32 -2143862066}
!14 = !{i32 -2143810117}
!15 = !{i32 -2143810096}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN12_GLOBAL__N_110ParseStyleEPKcii: argument 0"}
!18 = distinct !{!18, !"_ZN12_GLOBAL__N_110ParseStyleEPKcii"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6pdfium17as_writable_bytesIjvEENS_4spanIhEENS1_IT_EE: argument 0"}
!21 = distinct !{!21, !"_ZN6pdfium17as_writable_bytesIjvEENS_4spanIhEENS1_IT_EE"}
!22 = distinct !{!22, !6}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv: argument 0"}
!25 = distinct !{!25, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv"}
!26 = !{!"branch_weights", i32 1, i32 2000}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK6pdfium4spanIhE5firstEm: argument 0"}
!29 = distinct !{!29, !"_ZNK6pdfium4spanIhE5firstEm"}
!30 = !{i32 -2143814080}
!31 = !{i32 -2143814059}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv: argument 0"}
!34 = distinct !{!34, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK6pdfium4spanIhE5firstEm: argument 0"}
!37 = distinct !{!37, !"_ZNK6pdfium4spanIhE5firstEm"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv: argument 0"}
!40 = distinct !{!40, !"_ZNK11CFX_FontMgr8FontDesc8FontDataEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK6pdfium4spanIhE5firstEm: argument 0"}
!43 = distinct !{!43, !"_ZNK6pdfium4spanIhE5firstEm"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK14CFX_FontMapper11GetFaceNameEi: argument 0"}
!46 = distinct !{!46, !"_ZNK14CFX_FontMapper11GetFaceNameEi"}
