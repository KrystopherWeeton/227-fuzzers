; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLSwitchStatement.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLSwitchStatement.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::SwitchStatement" = type { %"class.SkSL::Statement", i8, %"class.std::__1::unique_ptr.1", %class.SkSTArray, %"class.std::__1::shared_ptr" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.12", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.14" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.SkSL::Type::Field"* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Statement"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.22", i8, %"class.std::__1::vector.30", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr.24"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::unique_ptr.32"*, %"class.std::__1::unique_ptr.32"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.32"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr" }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray, %"class.std::__1::shared_ptr", i8, [7 x i8] }>
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.68", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i64 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.87"* }
%"class.std::__1::vector.87" = type opaque
%class.SkSTArray.88 = type { %class.SkAlignedSTStorage.89, %class.SkTArray.90 }
%class.SkAlignedSTStorage.89 = type { [16 x i8] }
%class.SkTArray.90 = type { %"class.std::__1::unique_ptr.1"*, i64 }
%class.SkTHashSet = type { %class.SkTHashTable.123 }
%class.SkTHashTable.123 = type { i32, i32, %class.SkAutoTArray.124 }
%class.SkAutoTArray.124 = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot" = type <{ i64, i32, [4 x i8] }>
%"struct.std::__1::__forward_list_node.102" = type { %"struct.std::__1::__forward_begin_node.101", %"class.SkSL::SwitchCase"* }
%"struct.std::__1::__forward_begin_node.101" = type { %"struct.std::__1::__forward_list_node.102"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.SkSL::Nop" = type { %"class.SkSL::Statement" }

$_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZN4SkSL15SwitchStatementD2Ev = comdat any

$_ZN4SkSL15SwitchStatementD0Ev = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZN12SkTHashTableIllN10SkTHashSetIl10SkGoodHashE6TraitsEE6resizeEi = comdat any

$_ZN4SkSL3NopD0Ev = comdat any

$_ZNK4SkSL3Nop11descriptionEv = comdat any

$_ZNK4SkSL3Nop7isEmptyEv = comdat any

$_ZNK4SkSL3Nop5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN4SkSL10SwitchCaseD2Ev = comdat any

$_ZN4SkSL10SwitchCaseD0Ev = comdat any

$_ZNK4SkSL10SwitchCase11descriptionEv = comdat any

$_ZNK4SkSL10SwitchCase5cloneEv = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVN4SkSL3NopE = comdat any

$_ZTVN4SkSL10SwitchCaseE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"switch (%s) {\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"switch statements are not supported\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"case value must be a constant integer\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"duplicate case value '\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"duplicate default case\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"static switch contains non-static conditional exit\00", align 1
@_ZTVN4SkSL15SwitchStatementE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SwitchStatement"*)* @_ZN4SkSL15SwitchStatementD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SwitchStatement"*)* @_ZN4SkSL15SwitchStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SwitchStatement"*)* @_ZNK4SkSL15SwitchStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::SwitchStatement"*)* @_ZNK4SkSL15SwitchStatement5cloneEv to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZTVN4SkSL3NopE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Nop"*)* @_ZN4SkSL3NopD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::Nop"*)* @_ZNK4SkSL3Nop5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL10SwitchCaseE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase5cloneEv to i8*)] }, comdat, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"case %s:\0A%s\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"default:\0A%s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZNK4SkSL15SwitchStatement5cloneEv(%"class.SkSL::SwitchStatement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkSTArray, align 8
  %3 = alloca %class.SkSTArray, align 8
  %4 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  %5 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %5 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  store i8* %4, i8** %8, align 8
  store i64 17179869184, i64* %7, align 8
  %9 = bitcast i8* %5 to %class.SkTArray*
  %10 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %9, i32 %16, i32 0) #10
  %19 = load i64, i64* %7, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %1, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %1 ]
  store i64 %25, i64* %7, align 8
  %26 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %5 to %"class.std::__1::unique_ptr"**
  br label %150

37:                                               ; preds = %150, %24, %29
  %38 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %41, align 8
  %43 = bitcast %"class.SkSL::Expression"* %42 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %44 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %44, i64 10
  %46 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %45, align 8
  %47 = call %"class.SkSL::Expression"* %46(%"class.SkSL::Expression"* %42) #10
  %48 = ptrtoint %"class.SkSL::Expression"* %47 to i64
  %49 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 4, i32 0
  %50 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %49, align 8
  %51 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 4, i32 1
  %52 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %51, align 8
  %53 = icmp eq %"class.std::__1::__shared_weak_count"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %37
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %52, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 1 monotonic
  br label %57

57:                                               ; preds = %37, %54
  %58 = call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %50, %"class.std::__1::__shared_weak_count"* %52)
  %59 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %58, 0
  %60 = ptrtoint %"class.SkSL::SymbolTable"* %59 to i64
  %61 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %58, 1
  %62 = ptrtoint %"class.std::__1::__shared_weak_count"* %61 to i64
  %63 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63)
  %64 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 80) #10
  %65 = load i32, i32* %38, align 4
  %66 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %67 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %68 = bitcast i8* %67 to i64*
  %69 = bitcast i8* %66 to i8**
  store i8* %63, i8** %69, align 8
  store i64 17179869184, i64* %68, align 8
  %70 = bitcast i8* %66 to %class.SkTArray*
  %71 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %70, %class.SkTArray* dereferenceable(16) %9) #10
  %72 = getelementptr inbounds i8, i8* %64, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 %65, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %64, i64 12
  %75 = bitcast i8* %74 to i32*
  store i32 27, i32* %75, align 4
  %76 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15SwitchStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %64, i64 16
  store i8 %40, i8* %77, align 8
  %78 = getelementptr inbounds i8, i8* %64, i64 24
  %79 = bitcast i8* %78 to i64*
  store i64 %48, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %64, i64 48
  %81 = getelementptr inbounds i8, i8* %64, i64 32
  %82 = getelementptr inbounds i8, i8* %64, i64 56
  %83 = bitcast i8* %82 to i64*
  %84 = bitcast i8* %80 to i8**
  store i8* %81, i8** %84, align 8
  store i64 17179869184, i64* %83, align 8
  %85 = bitcast i8* %80 to %class.SkTArray*
  %86 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %85, %class.SkTArray* dereferenceable(16) %70) #10
  %87 = getelementptr inbounds i8, i8* %64, i64 64
  %88 = bitcast i8* %87 to i64*
  store i64 %60, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %64, i64 72
  %90 = bitcast i8* %89 to i64*
  store i64 %62, i64* %90, align 8
  %91 = load i64, i64* %68, align 8
  %92 = and i64 %91, 4294967294
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %57
  %95 = bitcast i8* %66 to %"class.std::__1::unique_ptr"**
  br label %100

96:                                               ; preds = %111, %57
  %97 = phi i64 [ %91, %57 ], [ %113, %111 ]
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %119, label %117

100:                                              ; preds = %111, %94
  %101 = phi i64 [ 0, %94 ], [ %112, %111 ]
  %102 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %95, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 %101, i32 0, i32 0, i32 0
  %104 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %103, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %103, align 8
  %105 = icmp eq %"class.SkSL::Statement"* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %100
  %107 = bitcast %"class.SkSL::Statement"* %104 to void (%"class.SkSL::Statement"*)***
  %108 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %108, i64 1
  %110 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %109, align 8
  call void %110(%"class.SkSL::Statement"* nonnull %104) #10
  br label %111

111:                                              ; preds = %106, %100
  %112 = add nuw nsw i64 %101, 1
  %113 = load i64, i64* %68, align 8
  %114 = lshr i64 %113, 1
  %115 = and i64 %114, 2147483647
  %116 = icmp ult i64 %112, %115
  br i1 %116, label %100, label %96

117:                                              ; preds = %96
  %118 = load i8*, i8** %69, align 8
  call void @_Z7sk_freePv(i8* %118) #10
  br label %119

119:                                              ; preds = %117, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63)
  %120 = load i64, i64* %7, align 8
  %121 = and i64 %120, 4294967294
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast i8* %5 to %"class.std::__1::unique_ptr"**
  br label %129

125:                                              ; preds = %140, %119
  %126 = phi i64 [ %120, %119 ], [ %142, %140 ]
  %127 = and i64 %126, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %148, label %146

129:                                              ; preds = %140, %123
  %130 = phi i64 [ 0, %123 ], [ %141, %140 ]
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %124, align 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %130, i32 0, i32 0, i32 0
  %133 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %132, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %132, align 8
  %134 = icmp eq %"class.SkSL::Statement"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.SkSL::Statement"* %133 to void (%"class.SkSL::Statement"*)***
  %137 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %137, i64 1
  %139 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %138, align 8
  call void %139(%"class.SkSL::Statement"* nonnull %133) #10
  br label %140

140:                                              ; preds = %135, %129
  %141 = add nuw nsw i64 %130, 1
  %142 = load i64, i64* %7, align 8
  %143 = lshr i64 %142, 1
  %144 = and i64 %143, 2147483647
  %145 = icmp ult i64 %141, %144
  br i1 %145, label %129, label %125

146:                                              ; preds = %125
  %147 = load i8*, i8** %8, align 8
  call void @_Z7sk_freePv(i8* %147) #10
  br label %148

148:                                              ; preds = %125, %146
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  %149 = bitcast i8* %64 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %149

150:                                              ; preds = %35, %150
  %151 = phi %"class.std::__1::unique_ptr"* [ %27, %35 ], [ %170, %150 ]
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %152, align 8
  %154 = bitcast %"class.SkSL::Statement"* %153 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %155 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %154, align 8
  %156 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %155, i64 4
  %157 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %156, align 8
  %158 = call %"class.SkSL::Statement"* %157(%"class.SkSL::Statement"* %153) #10
  %159 = ptrtoint %"class.SkSL::Statement"* %158 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %9, i32 1, i32 1) #10
  %160 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %161 = load i64, i64* %7, align 8
  %162 = lshr i64 %161, 1
  %163 = and i64 %162, 2147483647
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 %163
  %165 = add i64 %161, 2
  %166 = and i64 %165, 4294967294
  %167 = and i64 %161, -4294967295
  %168 = or i64 %166, %167
  store i64 %168, i64* %7, align 8
  %169 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %159, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 1
  %171 = icmp eq %"class.std::__1::unique_ptr"* %170, %33
  br i1 %171, label %37, label %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.SkSL::SymbolTable"* %0 to i64
  %4 = icmp eq %"class.SkSL::SymbolTable"* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %1 to i64
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 128) #11
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i1 [ %18, %19 ], [ true, %10 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 72
  %26 = getelementptr inbounds i8, i8* %11, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false)
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %23, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #10
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %14 to i64
  %43 = ptrtoint i8* %11 to i64
  br label %56

44:                                               ; preds = %2
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #10
  br label %56

56:                                               ; preds = %5, %41, %44, %46, %50
  %57 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %3, %5 ], [ %42, %41 ]
  %58 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %6, %5 ], [ %43, %41 ]
  %59 = inttoptr i64 %57 to %"class.SkSL::SymbolTable"*
  %60 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %59, 0
  %61 = inttoptr i64 %58 to %"class.std::__1::__shared_weak_count"*
  %62 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %60, %"class.std::__1::__shared_weak_count"* %61, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4SkSL15SwitchStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SwitchStatement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #10
  br label %12

12:                                               ; preds = %2, %10
  %13 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %16, i64 0, i32 0
  %18 = bitcast %"class.SkSL::Expression"* %16 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %19 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %19, i64 2
  %21 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %20, align 8
  call void %21(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %17) #10
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* %14
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* %28) #10
  %29 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #10
  %30 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %12, %34
  %38 = load i8, i8* %23, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %43 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 16
  %44 = bitcast i8* %43 to %"class.std::__1::unique_ptr"**
  %45 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %50, 1
  %52 = and i64 %51, 2147483647
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 %52
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %47
  %56 = bitcast %"class.SkSL::String"* %5 to i8*
  %57 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %62

60:                                               ; preds = %76, %42, %47
  %61 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #10
  ret void

62:                                               ; preds = %55, %76
  %63 = phi %"class.std::__1::unique_ptr"* [ %45, %55 ], [ %77, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #10
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %64, align 8
  %66 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %65, i64 0, i32 0
  %67 = bitcast %"class.SkSL::Statement"* %65 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %68 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %68, i64 2
  %70 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %69, align 8
  call void %70(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %66) #10
  %71 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #10
  %72 = load i8, i8* %58, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %62
  %75 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %62, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #10
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr"* %77, %53
  br i1 %78, label %60, label %62
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement12BlockForCaseEP9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EEPNS_10SwitchCaseENS2_10shared_ptrINS_11SymbolTableEEE(%class.SkSTArray* nocapture readonly, %"class.SkSL::SwitchCase"* readonly, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray, align 8
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 16
  %8 = bitcast i8* %7 to %"class.std::__1::unique_ptr"**
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, null
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  br label %13

13:                                               ; preds = %28, %4
  %14 = phi %"class.std::__1::unique_ptr"* [ %9, %4 ], [ %29, %28 ]
  br i1 %10, label %20, label %15

15:                                               ; preds = %13
  %16 = load i64, i64* %12, align 8
  %17 = lshr i64 %16, 1
  %18 = and i64 %17, 2147483647
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 %18
  br label %20

20:                                               ; preds = %13, %15
  %21 = phi %"class.std::__1::unique_ptr"* [ %19, %15 ], [ null, %13 ]
  %22 = icmp eq %"class.std::__1::unique_ptr"* %14, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %24, %20
  br label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::unique_ptr"* %14 to %"class.SkSL::SwitchCase"**
  %26 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %25, align 8
  %27 = icmp eq %"class.SkSL::SwitchCase"* %26, %1
  br i1 %27, label %23, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br label %13

30:                                               ; preds = %23, %53
  %31 = phi %"class.std::__1::unique_ptr"* [ %55, %53 ], [ %9, %23 ]
  %32 = phi %"class.std::__1::unique_ptr"* [ %54, %53 ], [ %14, %23 ]
  %33 = icmp eq %"class.std::__1::unique_ptr"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = load i64, i64* %12, align 8
  %36 = lshr i64 %35, 1
  %37 = and i64 %36, 2147483647
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 %37
  br label %39

39:                                               ; preds = %30, %34
  %40 = phi %"class.std::__1::unique_ptr"* [ %38, %34 ], [ null, %30 ]
  %41 = icmp eq %"class.std::__1::unique_ptr"* %32, %40
  br i1 %41, label %56, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.std::__1::unique_ptr"* %32 to %"class.SkSL::SwitchCase"**
  %44 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %45, align 8
  %47 = tail call zeroext i1 @_ZN4SkSL8Analysis33SwitchCaseContainsConditionalExitERNS_9StatementE(%"class.SkSL::Statement"* dereferenceable(16) %46) #10
  br i1 %47, label %179, label %48

48:                                               ; preds = %42
  %49 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %45, align 8
  %50 = tail call zeroext i1 @_ZN4SkSL8Analysis35SwitchCaseContainsUnconditionalExitERNS_9StatementE(%"class.SkSL::Statement"* dereferenceable(16) %49) #10
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %45, align 8
  br label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 1
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  br label %30

56:                                               ; preds = %39, %51
  %57 = phi %"class.SkSL::Statement"* [ %52, %51 ], [ null, %39 ]
  %58 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #10
  %59 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %60 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %61 = bitcast i8* %60 to i64*
  %62 = bitcast i8* %59 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  store i8* %58, i8** %62, align 8
  store i64 17179869184, i64* %61, align 8
  %63 = bitcast i8* %59 to %class.SkTArray*
  %64 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %66 = sub i64 %64, %65
  %67 = lshr exact i64 %66, 3
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %56
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %63, i32 %69, i32 0) #10
  %72 = load i64, i64* %61, align 8
  %73 = shl i64 %72, 32
  %74 = and i64 %73, 4294967296
  %75 = and i64 %72, -4294967297
  %76 = or i64 %74, %75
  br label %77

77:                                               ; preds = %56, %71
  %78 = phi i64 [ %76, %71 ], [ 17179869184, %56 ]
  store i64 %78, i64* %61, align 8
  %79 = icmp eq %"class.std::__1::unique_ptr"* %14, %32
  br i1 %79, label %102, label %80

80:                                               ; preds = %77
  %81 = bitcast i8* %59 to %"class.std::__1::unique_ptr"**
  br label %82

82:                                               ; preds = %80, %82
  %83 = phi %"class.std::__1::unique_ptr"* [ %14, %80 ], [ %100, %82 ]
  %84 = bitcast %"class.std::__1::unique_ptr"* %83 to %"class.SkSL::SwitchCase"**
  %85 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %85, i64 0, i32 2
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %63, i32 1, i32 1) #10
  %87 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %81, align 8
  %88 = load i64, i64* %61, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 %90
  %92 = add i64 %88, 2
  %93 = and i64 %92, 4294967294
  %94 = and i64 %88, -4294967295
  %95 = or i64 %93, %94
  store i64 %95, i64* %61, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %101 = icmp eq %"class.std::__1::unique_ptr"* %100, %32
  br i1 %101, label %102, label %82

102:                                              ; preds = %82, %77
  %103 = phi %"class.std::__1::unique_ptr"* [ %14, %77 ], [ %32, %82 ]
  %104 = icmp eq %"class.SkSL::Statement"* %57, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.std::__1::unique_ptr"* %103 to %"class.SkSL::SwitchCase"**
  %107 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %106, align 8
  %108 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %107, i64 0, i32 2
  call fastcc void @_ZN4SkSLL18move_all_but_breakERNSt3__110unique_ptrINS_9StatementENS0_14default_deleteIS2_EEEEP9SkSTArrayILi2ES5_Lb0EE(%"class.std::__1::unique_ptr"* dereferenceable(8) %108, %class.SkSTArray* nonnull %5)
  br label %109

109:                                              ; preds = %105, %102
  %110 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 16
  %113 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 0
  %114 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 24
  %115 = bitcast i8* %114 to i64*
  %116 = bitcast i8* %112 to i8**
  store i8* %113, i8** %116, align 8
  store i64 17179869184, i64* %115, align 8
  %117 = bitcast i8* %112 to %class.SkTArray*
  %118 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %117, %class.SkTArray* dereferenceable(16) %63) #10
  %119 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %111, %class.SkSTArray* nonnull %6, %"class.SkSL::SymbolTable"* %2, %"class.std::__1::__shared_weak_count"* %3, i1 zeroext true) #10
  %120 = load i64, i64* %115, align 8
  %121 = and i64 %120, 4294967294
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %109
  %124 = bitcast i8* %112 to %"class.std::__1::unique_ptr"**
  br label %129

125:                                              ; preds = %140, %109
  %126 = phi i64 [ %120, %109 ], [ %142, %140 ]
  %127 = and i64 %126, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %148, label %146

129:                                              ; preds = %140, %123
  %130 = phi i64 [ 0, %123 ], [ %141, %140 ]
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %124, align 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 %130, i32 0, i32 0, i32 0
  %133 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %132, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %132, align 8
  %134 = icmp eq %"class.SkSL::Statement"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.SkSL::Statement"* %133 to void (%"class.SkSL::Statement"*)***
  %137 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %137, i64 1
  %139 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %138, align 8
  call void %139(%"class.SkSL::Statement"* nonnull %133) #10
  br label %140

140:                                              ; preds = %135, %129
  %141 = add nuw nsw i64 %130, 1
  %142 = load i64, i64* %115, align 8
  %143 = lshr i64 %142, 1
  %144 = and i64 %143, 2147483647
  %145 = icmp ult i64 %141, %144
  br i1 %145, label %129, label %125

146:                                              ; preds = %125
  %147 = load i8*, i8** %116, align 8
  call void @_Z7sk_freePv(i8* %147) #10
  br label %148

148:                                              ; preds = %125, %146
  %149 = load i64, i64* %61, align 8
  %150 = and i64 %149, 4294967294
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = bitcast i8* %59 to %"class.std::__1::unique_ptr"**
  br label %158

154:                                              ; preds = %169, %148
  %155 = phi i64 [ %149, %148 ], [ %171, %169 ]
  %156 = and i64 %155, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %177, label %175

158:                                              ; preds = %169, %152
  %159 = phi i64 [ 0, %152 ], [ %170, %169 ]
  %160 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 %159, i32 0, i32 0, i32 0
  %162 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %161, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %161, align 8
  %163 = icmp eq %"class.SkSL::Statement"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.SkSL::Statement"* %162 to void (%"class.SkSL::Statement"*)***
  %166 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %166, i64 1
  %168 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %167, align 8
  call void %168(%"class.SkSL::Statement"* nonnull %162) #10
  br label %169

169:                                              ; preds = %164, %158
  %170 = add nuw nsw i64 %159, 1
  %171 = load i64, i64* %61, align 8
  %172 = lshr i64 %171, 1
  %173 = and i64 %172, 2147483647
  %174 = icmp ult i64 %170, %173
  br i1 %174, label %158, label %154

175:                                              ; preds = %154
  %176 = load i8*, i8** %62, align 8
  call void @_Z7sk_freePv(i8* %176) #10
  br label %177

177:                                              ; preds = %175, %154
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #10
  %178 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %119, i64 0, i32 0
  br label %191

179:                                              ; preds = %42
  %180 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %180, label %191, label %181

181:                                              ; preds = %179
  %182 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %183 = atomicrmw add i64* %182, i64 -1 acq_rel
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %187 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %188 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %188, i64 2
  %190 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %189, align 8
  tail call void %190(%"class.std::__1::__shared_count"* %186) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #10
  br label %191

191:                                              ; preds = %177, %179, %181, %185
  %192 = phi %"class.SkSL::Statement"* [ %178, %177 ], [ null, %179 ], [ null, %181 ], [ null, %185 ]
  ret %"class.SkSL::Statement"* %192
}

declare zeroext i1 @_ZN4SkSL8Analysis33SwitchCaseContainsConditionalExitERNS_9StatementE(%"class.SkSL::Statement"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN4SkSL8Analysis35SwitchCaseContainsUnconditionalExitERNS_9StatementE(%"class.SkSL::Statement"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4SkSLL18move_all_but_breakERNSt3__110unique_ptrINS_9StatementENS0_14default_deleteIS2_EEEEP9SkSTArrayILi2ES5_Lb0EE(%"class.std::__1::unique_ptr"* nocapture dereferenceable(8), %class.SkSTArray*) unnamed_addr #0 {
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %145 [
    i32 16, label %9
    i32 17, label %163
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %12 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %11 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store i8* %10, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = bitcast i8* %11 to %class.SkTArray*
  %16 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2
  %17 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 2, i32 0, i32 1
  %18 = bitcast i32* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 2147483647
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %9
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %15, i32 %22, i32 0) #10
  %25 = load i64, i64* %13, align 8
  %26 = shl i64 %25, 32
  %27 = and i64 %26, 4294967296
  %28 = and i64 %25, -4294967297
  %29 = or i64 %27, %28
  br label %30

30:                                               ; preds = %9, %24
  %31 = phi i64 [ %29, %24 ], [ 17179869184, %9 ]
  store i64 %31, i64* %13, align 8
  %32 = bitcast %"class.SkSL::Statement"* %16 to %"class.std::__1::unique_ptr"**
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load i64, i64* %18, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %38
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %141

41:                                               ; preds = %141, %30, %35
  %42 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 16
  %43 = bitcast i8* %42 to %class.SkTArray*
  %44 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %47 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  %48 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %49 = bitcast i8* %48 to i64*
  %50 = bitcast i8* %46 to i8**
  store i8* %47, i8** %50, align 8
  store i64 17179869184, i64* %49, align 8
  %51 = bitcast i8* %46 to %class.SkTArray*
  %52 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %51, %class.SkTArray* dereferenceable(16) %15) #10
  %53 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3
  %54 = bitcast %"class.SkSL::Statement"* %53 to %"class.SkSL::SymbolTable"**
  %55 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 3, i32 0, i32 1
  %57 = bitcast i32* %56 to %"class.std::__1::__shared_weak_count"**
  %58 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %57, align 8
  %59 = icmp eq %"class.std::__1::__shared_weak_count"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %41
  %61 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %58, i64 0, i32 0, i32 1
  %62 = atomicrmw add i64* %61, i64 1 monotonic
  br label %63

63:                                               ; preds = %41, %60
  %64 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %6, i64 4
  %65 = bitcast %"class.SkSL::Statement"* %64 to i8*
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %45, %class.SkSTArray* nonnull %4, %"class.SkSL::SymbolTable"* %55, %"class.std::__1::__shared_weak_count"* %58, i1 zeroext %67) #10
  %69 = ptrtoint %"class.SkSL::Block"* %68 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %43, i32 1, i32 1) #10
  %70 = bitcast i8* %42 to %"class.std::__1::unique_ptr"**
  %71 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %70, align 8
  %72 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 %76
  %78 = add i64 %74, 2
  %79 = and i64 %78, 4294967294
  %80 = and i64 %74, -4294967295
  %81 = or i64 %79, %80
  store i64 %81, i64* %73, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %77 to i64*
  store i64 %69, i64* %82, align 8
  %83 = load i64, i64* %49, align 8
  %84 = and i64 %83, 4294967294
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %63
  %87 = bitcast i8* %46 to %"class.std::__1::unique_ptr"**
  br label %92

88:                                               ; preds = %103, %63
  %89 = phi i64 [ %83, %63 ], [ %105, %103 ]
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %111, label %109

92:                                               ; preds = %103, %86
  %93 = phi i64 [ 0, %86 ], [ %104, %103 ]
  %94 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %87, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 %93, i32 0, i32 0, i32 0
  %96 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %95, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %95, align 8
  %97 = icmp eq %"class.SkSL::Statement"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.SkSL::Statement"* %96 to void (%"class.SkSL::Statement"*)***
  %100 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %100, i64 1
  %102 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %101, align 8
  call void %102(%"class.SkSL::Statement"* nonnull %96) #10
  br label %103

103:                                              ; preds = %98, %92
  %104 = add nuw nsw i64 %93, 1
  %105 = load i64, i64* %49, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %92, label %88

109:                                              ; preds = %88
  %110 = load i8*, i8** %50, align 8
  call void @_Z7sk_freePv(i8* %110) #10
  br label %111

111:                                              ; preds = %88, %109
  %112 = load i64, i64* %13, align 8
  %113 = and i64 %112, 4294967294
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = bitcast i8* %11 to %"class.std::__1::unique_ptr"**
  br label %121

117:                                              ; preds = %132, %111
  %118 = phi i64 [ %112, %111 ], [ %134, %132 ]
  %119 = and i64 %118, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %140, label %138

121:                                              ; preds = %132, %115
  %122 = phi i64 [ 0, %115 ], [ %133, %132 ]
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %116, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %123, i64 %122, i32 0, i32 0, i32 0
  %125 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %124, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %124, align 8
  %126 = icmp eq %"class.SkSL::Statement"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %121
  %128 = bitcast %"class.SkSL::Statement"* %125 to void (%"class.SkSL::Statement"*)***
  %129 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %129, i64 1
  %131 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %130, align 8
  call void %131(%"class.SkSL::Statement"* nonnull %125) #10
  br label %132

132:                                              ; preds = %127, %121
  %133 = add nuw nsw i64 %122, 1
  %134 = load i64, i64* %13, align 8
  %135 = lshr i64 %134, 1
  %136 = and i64 %135, 2147483647
  %137 = icmp ult i64 %133, %136
  br i1 %137, label %121, label %117

138:                                              ; preds = %117
  %139 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %139) #10
  br label %140

140:                                              ; preds = %117, %138
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  br label %163

141:                                              ; preds = %35, %141
  %142 = phi %"class.std::__1::unique_ptr"* [ %143, %141 ], [ %33, %35 ]
  call fastcc void @_ZN4SkSLL18move_all_but_breakERNSt3__110unique_ptrINS_9StatementENS0_14default_deleteIS2_EEEEP9SkSTArrayILi2ES5_Lb0EE(%"class.std::__1::unique_ptr"* dereferenceable(8) %142, %class.SkSTArray* nonnull %3)
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %142, i64 1
  %144 = icmp eq %"class.std::__1::unique_ptr"* %143, %39
  br i1 %144, label %41, label %141

145:                                              ; preds = %2
  %146 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 16
  %147 = bitcast i8* %146 to %class.SkTArray*
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %147, i32 1, i32 1) #10
  %148 = bitcast i8* %146 to %"class.std::__1::unique_ptr"**
  %149 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %148, align 8
  %150 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 24
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = lshr i64 %152, 1
  %154 = and i64 %153, 2147483647
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %149, i64 %154
  %156 = add i64 %152, 2
  %157 = and i64 %156, 4294967294
  %158 = and i64 %152, -4294967295
  %159 = or i64 %157, %158
  store i64 %159, i64* %151, align 8
  %160 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %161 = load i64, i64* %160, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %5, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %155 to i64*
  store i64 %161, i64* %162, align 8
  br label %163

163:                                              ; preds = %145, %2, %140
  ret void
}

declare %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32, %class.SkSTArray*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ES9_Lb0EESA_ILi2ENS5_INS_9StatementENS7_ISC_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray.88* nocapture readonly, %class.SkSTArray* nocapture readonly, %"class.std::__1::shared_ptr"* nocapture byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %class.SkTHashSet, align 8
  %10 = alloca i64, align 8
  %11 = alloca %class.SkSTArray, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %class.SkSTArray, align 8
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"class.std::__1::shared_ptr"*
  %19 = ptrtoint %"class.SkSL::Expression"* %3 to i64
  %20 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %21 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %21, i64 0, i32 1, i32 19
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %21, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = add i8 %27, -4
  %29 = icmp ult i8 %28, 3
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %32 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %31, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %32, i32 %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0))
  br label %444

33:                                               ; preds = %7, %25
  %34 = bitcast %"class.SkSL::Expression"* %3 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %35 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %35, i64 3
  %37 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %36, align 8
  %38 = tail call dereferenceable(184) %"class.SkSL::Type"* %37(%"class.SkSL::Expression"* %3) #10
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %48, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %43, align 8
  %45 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %44, %"class.SkSL::Expression"* %3, %"class.SkSL::Context"* dereferenceable(744) %0) #10
  %46 = ptrtoint %"class.SkSL::Expression"* %45 to i64
  %47 = icmp eq %"class.SkSL::Expression"* %45, null
  br i1 %47, label %444, label %48

48:                                               ; preds = %42, %33
  %49 = phi i64 [ %19, %33 ], [ %46, %42 ]
  %50 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #10
  %51 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 16
  %52 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %11, i64 0, i32 0, i32 0, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = bitcast i8* %51 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  store i8* %50, i8** %54, align 8
  store i64 17179869184, i64* %53, align 8
  %55 = getelementptr inbounds %class.SkSTArray.88, %class.SkSTArray.88* %4, i64 0, i32 0, i32 0, i64 24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 4294967294
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %48
  %61 = bitcast %class.SkSTArray* %11 to %"class.std::__1::unique_ptr"*
  br label %139

62:                                               ; preds = %48
  %63 = getelementptr inbounds %class.SkSTArray.88, %class.SkSTArray.88* %4, i64 0, i32 0, i32 0, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::unique_ptr.1"**
  %65 = inttoptr i64 %49 to %"class.SkSL::Expression"*
  %66 = inttoptr i64 %49 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %67 = bitcast i64* %12 to i8*
  %68 = bitcast i8* %51 to %class.SkTArray*
  %69 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::unique_ptr"**
  %71 = bitcast i8* %51 to %"class.std::__1::unique_ptr"**
  br label %72

72:                                               ; preds = %62, %103
  %73 = phi i64 [ 0, %62 ], [ %132, %103 ]
  %74 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %64, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %74, i64 %73, i32 0, i32 0, i32 0
  %76 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %75, align 8
  %77 = icmp eq %"class.SkSL::Expression"* %76, null
  br i1 %77, label %103, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %76, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %66, align 8
  %82 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %81, i64 3
  %83 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %82, align 8
  %84 = call dereferenceable(184) %"class.SkSL::Type"* %83(%"class.SkSL::Expression"* %65) #10
  %85 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %64, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %85, i64 %73, i32 0, i32 0, i32 0
  %87 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %86, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %86, align 8
  %88 = call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %84, %"class.SkSL::Expression"* %87, %"class.SkSL::Context"* dereferenceable(744) %0) #10
  %89 = ptrtoint %"class.SkSL::Expression"* %88 to i64
  %90 = icmp eq %"class.SkSL::Expression"* %88, null
  br i1 %90, label %412, label %91

91:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  store i64 -6148914691236517206, i64* %12, align 8
  %92 = call zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* nonnull dereferenceable(24) %88, i64* nonnull %12) #10
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  br label %103

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %96 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %95, align 8
  %97 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %88, i64 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %96, i32 %98, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  %99 = bitcast %"class.SkSL::Expression"* %88 to void (%"class.SkSL::Expression"*)***
  %100 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %100, i64 1
  %102 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %101, align 8
  call void %102(%"class.SkSL::Expression"* nonnull %88) #10
  br label %412

103:                                              ; preds = %72, %93
  %104 = phi i32 [ %80, %93 ], [ %1, %72 ]
  %105 = phi i64 [ %89, %93 ], [ 0, %72 ]
  %106 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %70, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 %73
  %108 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #10
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %109, align 8
  %112 = getelementptr inbounds i8, i8* %108, i64 8
  %113 = bitcast i8* %112 to i32*
  store i32 %104, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %108, i64 12
  %115 = bitcast i8* %114 to i32*
  store i32 28, i32* %115, align 4
  %116 = bitcast i8* %108 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %108, i64 16
  %118 = bitcast i8* %117 to i64*
  store i64 %105, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %108, i64 24
  %120 = bitcast i8* %119 to i64*
  store i64 %111, i64* %120, align 8
  %121 = ptrtoint i8* %108 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %68, i32 1, i32 1) #10
  %122 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %71, align 8
  %123 = load i64, i64* %53, align 8
  %124 = lshr i64 %123, 1
  %125 = and i64 %124, 2147483647
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 %125
  %127 = add i64 %123, 2
  %128 = and i64 %127, 4294967294
  %129 = and i64 %123, -4294967295
  %130 = or i64 %128, %129
  store i64 %130, i64* %53, align 8
  %131 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  store i64 %121, i64* %131, align 8
  %132 = add nuw nsw i64 %73, 1
  %133 = load i64, i64* %56, align 8
  %134 = lshr i64 %133, 1
  %135 = and i64 %134, 2147483647
  %136 = icmp ult i64 %132, %135
  br i1 %136, label %72, label %137

137:                                              ; preds = %103
  %138 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %71, align 8, !noalias !3
  br label %139

139:                                              ; preds = %60, %137
  %140 = phi %"class.std::__1::unique_ptr"* [ %138, %137 ], [ %61, %60 ]
  %141 = bitcast %class.SkTHashSet* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #10, !noalias !3
  %142 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %9, i64 0, i32 0, i32 0
  %143 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %9, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %9, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 16, i1 false) #10, !noalias !3
  %145 = icmp eq %"class.std::__1::unique_ptr"* %140, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %139
  %147 = load i64, i64* %53, align 8, !noalias !3
  %148 = lshr i64 %147, 1
  %149 = and i64 %148, 2147483647
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 %149
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %156, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %10 to i8*
  %154 = bitcast i64* %8 to i8*
  %155 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %9, i64 0, i32 0
  br label %162

156:                                              ; preds = %139, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #10, !noalias !3
  br label %358

157:                                              ; preds = %279
  %158 = load %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %144, align 8, !noalias !3
  %159 = icmp eq %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %158, null
  store %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %144, align 8, !noalias !3
  br i1 %159, label %286, label %160

160:                                              ; preds = %157
  %161 = bitcast %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %158 to i8*
  call void @_ZdaPv(i8* %161) #11, !noalias !3
  br label %286

162:                                              ; preds = %279, %152
  %163 = phi i64 [ 0, %152 ], [ %280, %279 ]
  %164 = phi i64 [ 0, %152 ], [ %281, %279 ]
  %165 = phi i64 [ 0, %152 ], [ %282, %279 ]
  %166 = phi %"class.std::__1::unique_ptr"* [ %140, %152 ], [ %284, %279 ]
  %167 = phi i8 [ 0, %152 ], [ %283, %279 ]
  %168 = bitcast %"class.std::__1::unique_ptr"* %166 to %"class.SkSL::SwitchCase"**
  %169 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %168, align 8, !noalias !3
  %170 = ptrtoint %"class.SkSL::SwitchCase"* %169 to i64
  %171 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %169, i64 0, i32 1, i32 0, i32 0, i32 0
  %172 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %171, align 8, !noalias !3
  %173 = icmp eq %"class.SkSL::Expression"* %172, null
  br i1 %173, label %174, label %183

174:                                              ; preds = %162
  %175 = and i8 %167, 1
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %279, label %177

177:                                              ; preds = %174
  %178 = call i8* @_Znwm(i64 16) #11, !noalias !3
  %179 = getelementptr inbounds i8, i8* %178, i64 8
  %180 = bitcast i8* %179 to i64*
  store i64 %170, i64* %180, align 8, !noalias !3
  %181 = bitcast i8* %178 to i64*
  store i64 %164, i64* %181, align 8, !noalias !3
  %182 = ptrtoint i8* %178 to i64
  br label %279

183:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #10, !noalias !3
  store i64 0, i64* %10, align 8, !noalias !3
  %184 = call zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* nonnull dereferenceable(24) %172, i64* nonnull %10) #10, !noalias !3
  %185 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !3
  %186 = call i32 %185(i8* nonnull %153, i64 8, i32 0) #10, !noalias !3
  %187 = icmp eq i32 %186, 0
  %188 = select i1 %187, i32 1, i32 %186
  %189 = load i32, i32* %143, align 4, !noalias !3
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %183
  %192 = load i64, i64* %10, align 8, !noalias !3
  br label %226

193:                                              ; preds = %183
  %194 = add nsw i32 %189, -1
  %195 = and i32 %188, %194
  %196 = load %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %144, align 8, !noalias !3
  %197 = load i64, i64* %10, align 8, !noalias !3
  br label %198

198:                                              ; preds = %211, %193
  %199 = phi i32 [ 0, %193 ], [ %216, %211 ]
  %200 = phi i32 [ %195, %193 ], [ %215, %211 ]
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %196, i64 %201, i32 1
  %203 = load i32, i32* %202, align 8, !noalias !3
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %226, label %205

205:                                              ; preds = %198
  %206 = icmp eq i32 %188, %203
  br i1 %206, label %207, label %211

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %196, i64 %201, i32 0
  %209 = load i64, i64* %208, align 8, !noalias !3
  %210 = icmp eq i64 %197, %209
  br i1 %210, label %218, label %211

211:                                              ; preds = %207, %205
  %212 = add nsw i32 %200, -1
  %213 = icmp slt i32 %200, 1
  %214 = select i1 %213, i32 %189, i32 0
  %215 = add nsw i32 %212, %214
  %216 = add nuw nsw i32 %199, 1
  %217 = icmp eq i32 %216, %189
  br i1 %217, label %226, label %198

218:                                              ; preds = %207
  %219 = icmp eq i64* %208, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %218
  %221 = call i8* @_Znwm(i64 16) #11, !noalias !3
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  %223 = bitcast i8* %222 to i64*
  store i64 %170, i64* %223, align 8, !noalias !3
  %224 = bitcast i8* %221 to i64*
  store i64 %165, i64* %224, align 8, !noalias !3
  %225 = ptrtoint i8* %221 to i64
  br label %275

226:                                              ; preds = %211, %198, %218, %191
  %227 = phi i64 [ %192, %191 ], [ %197, %218 ], [ %197, %198 ], [ %197, %211 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #10, !noalias !3
  store i64 %227, i64* %8, align 8, !noalias !3
  %228 = load i32, i32* %142, align 8, !noalias !3
  %229 = shl nsw i32 %228, 2
  %230 = mul nsw i32 %189, 3
  %231 = icmp slt i32 %229, %230
  br i1 %231, label %235, label %232

232:                                              ; preds = %226
  %233 = shl nsw i32 %189, 1
  %234 = select i1 %190, i32 %233, i32 4
  call void @_ZN12SkTHashTableIllN10SkTHashSetIl10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.123* nonnull %155, i32 %234) #10, !noalias !3
  br label %235

235:                                              ; preds = %232, %226
  %236 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !3
  %237 = call i32 %236(i8* nonnull %154, i64 8, i32 0) #10, !noalias !3
  %238 = icmp eq i32 %237, 0
  %239 = select i1 %238, i32 1, i32 %237
  %240 = load i32, i32* %143, align 4, !noalias !3
  %241 = icmp sgt i32 %240, 0
  br i1 %241, label %242, label %274

242:                                              ; preds = %235
  %243 = add nsw i32 %240, -1
  %244 = and i32 %239, %243
  %245 = load %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %144, align 8, !noalias !3
  %246 = load i64, i64* %8, align 8, !noalias !3
  br label %247

247:                                              ; preds = %267, %242
  %248 = phi i32 [ 0, %242 ], [ %272, %267 ]
  %249 = phi i32 [ %244, %242 ], [ %271, %267 ]
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %245, i64 %250
  %252 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %245, i64 %250, i32 1
  %253 = load i32, i32* %252, align 8, !noalias !3
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %247
  %256 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %251, i64 0, i32 0
  store i64 %246, i64* %256, align 8, !noalias !3
  store i32 %239, i32* %252, align 8, !noalias !3
  %257 = load i32, i32* %142, align 8, !noalias !3
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %142, align 8, !noalias !3
  br label %274

259:                                              ; preds = %247
  %260 = icmp eq i32 %239, %253
  br i1 %260, label %261, label %267

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %251, i64 0, i32 0
  %263 = load i64, i64* %262, align 8, !noalias !3
  %264 = icmp eq i64 %246, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %251, i64 0, i32 0
  store i64 %246, i64* %266, align 8, !noalias !3
  br label %274

267:                                              ; preds = %261, %259
  %268 = add nsw i32 %249, -1
  %269 = icmp slt i32 %249, 1
  %270 = select i1 %269, i32 %240, i32 0
  %271 = add nsw i32 %268, %270
  %272 = add nuw nsw i32 %248, 1
  %273 = icmp eq i32 %272, %240
  br i1 %273, label %274, label %247

274:                                              ; preds = %267, %265, %255, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #10, !noalias !3
  br label %275

275:                                              ; preds = %274, %220
  %276 = phi i64 [ %163, %274 ], [ %225, %220 ]
  %277 = phi i64 [ %164, %274 ], [ %225, %220 ]
  %278 = phi i64 [ %165, %274 ], [ %225, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #10, !noalias !3
  br label %279

279:                                              ; preds = %275, %177, %174
  %280 = phi i64 [ %163, %174 ], [ %182, %177 ], [ %276, %275 ]
  %281 = phi i64 [ %164, %174 ], [ %182, %177 ], [ %277, %275 ]
  %282 = phi i64 [ %165, %174 ], [ %182, %177 ], [ %278, %275 ]
  %283 = phi i8 [ 1, %174 ], [ %167, %177 ], [ %167, %275 ]
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %166, i64 1
  %285 = icmp eq %"class.std::__1::unique_ptr"* %284, %150
  br i1 %285, label %157, label %162

286:                                              ; preds = %157, %160
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #10, !noalias !3
  %287 = inttoptr i64 %280 to %"struct.std::__1::__forward_list_node.102"*
  %288 = icmp eq i64 %280, 0
  br i1 %288, label %358, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"struct.std::__1::__forward_list_node.102", %"struct.std::__1::__forward_list_node.102"* %287, i64 0, i32 0, i32 0
  %291 = load %"struct.std::__1::__forward_list_node.102"*, %"struct.std::__1::__forward_list_node.102"** %290, align 8
  store %"struct.std::__1::__forward_list_node.102"* null, %"struct.std::__1::__forward_list_node.102"** %290, align 8
  %292 = icmp eq %"struct.std::__1::__forward_list_node.102"* %291, null
  br i1 %292, label %301, label %293

293:                                              ; preds = %289, %293
  %294 = phi %"struct.std::__1::__forward_list_node.102"* [ %295, %293 ], [ %287, %289 ]
  %295 = phi %"struct.std::__1::__forward_list_node.102"* [ %297, %293 ], [ %291, %289 ]
  %296 = getelementptr inbounds %"struct.std::__1::__forward_list_node.102", %"struct.std::__1::__forward_list_node.102"* %295, i64 0, i32 0, i32 0
  %297 = load %"struct.std::__1::__forward_list_node.102"*, %"struct.std::__1::__forward_list_node.102"** %296, align 8
  store %"struct.std::__1::__forward_list_node.102"* %294, %"struct.std::__1::__forward_list_node.102"** %296, align 8
  %298 = icmp eq %"struct.std::__1::__forward_list_node.102"* %297, null
  br i1 %298, label %299, label %293

299:                                              ; preds = %293
  %300 = ptrtoint %"struct.std::__1::__forward_list_node.102"* %295 to i64
  br label %303

301:                                              ; preds = %289
  %302 = icmp eq i64 %280, 0
  br i1 %302, label %401, label %303

303:                                              ; preds = %299, %301
  %304 = phi i64 [ %300, %299 ], [ %280, %301 ]
  %305 = phi %"struct.std::__1::__forward_list_node.102"* [ %295, %299 ], [ %287, %301 ]
  %306 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %307 = bitcast %"class.SkSL::String"* %14 to i8*
  %308 = bitcast %"class.SkSL::String"* %15 to i8*
  %309 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  %314 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %318

318:                                              ; preds = %303, %354
  %319 = phi %"struct.std::__1::__forward_list_node.102"* [ %305, %303 ], [ %356, %354 ]
  %320 = getelementptr inbounds %"struct.std::__1::__forward_list_node.102", %"struct.std::__1::__forward_list_node.102"* %319, i64 0, i32 1
  %321 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %320, align 8
  %322 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %321, i64 0, i32 1, i32 0, i32 0, i32 0
  %323 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %322, align 8
  %324 = icmp eq %"class.SkSL::Expression"* %323, null
  %325 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %306, align 8
  %326 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %321, i64 0, i32 0, i32 0, i32 1
  %327 = load i32, i32* %326, align 8
  br i1 %324, label %353, label %328

328:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %307) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #10
  %329 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %323, i64 0, i32 0
  %330 = bitcast %"class.SkSL::Expression"* %323 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %331 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %331, i64 2
  %333 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %332, align 8
  call void %333(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::IRNode"* %329) #10
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %15) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #10
  %334 = bitcast %"class.SkSL::ErrorReporter"* %325 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %335 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %335, i64 2
  %337 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %336, align 8
  call void %337(%"class.SkSL::ErrorReporter"* %325, i32 %327, %"class.SkSL::String"* nonnull %13) #10
  %338 = load i8, i8* %310, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %342

340:                                              ; preds = %328
  %341 = load i8*, i8** %311, align 8
  call void @_ZdlPv(i8* %341) #11
  br label %342

342:                                              ; preds = %328, %340
  %343 = load i8, i8* %313, align 1
  %344 = icmp slt i8 %343, 0
  br i1 %344, label %345, label %347

345:                                              ; preds = %342
  %346 = load i8*, i8** %314, align 8
  call void @_ZdlPv(i8* %346) #11
  br label %347

347:                                              ; preds = %342, %345
  %348 = load i8, i8* %316, align 1
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %347
  %351 = load i8*, i8** %317, align 8
  call void @_ZdlPv(i8* %351) #11
  br label %352

352:                                              ; preds = %347, %350
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %307) #10
  br label %354

353:                                              ; preds = %318
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %325, i32 %327, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0))
  br label %354

354:                                              ; preds = %353, %352
  %355 = getelementptr inbounds %"struct.std::__1::__forward_list_node.102", %"struct.std::__1::__forward_list_node.102"* %319, i64 0, i32 0, i32 0
  %356 = load %"struct.std::__1::__forward_list_node.102"*, %"struct.std::__1::__forward_list_node.102"** %355, align 8
  %357 = icmp eq %"struct.std::__1::__forward_list_node.102"* %356, null
  br i1 %357, label %401, label %318

358:                                              ; preds = %156, %286
  %359 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %16, i64 0, i32 0, i32 0, i64 16
  %360 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %16, i64 0, i32 0, i32 0, i64 0
  %361 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %16, i64 0, i32 0, i32 0, i64 24
  %362 = bitcast i8* %361 to i64*
  %363 = bitcast i8* %359 to i8**
  store i8* %360, i8** %363, align 8
  store i64 17179869184, i64* %362, align 8
  %364 = bitcast i8* %359 to %class.SkTArray*
  %365 = bitcast i8* %51 to %class.SkTArray*
  %366 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %364, %class.SkTArray* dereferenceable(16) %365) #10
  %367 = bitcast %"class.std::__1::shared_ptr"* %6 to <2 x i64>*
  %368 = load <2 x i64>, <2 x i64>* %367, align 8
  store <2 x i64> %368, <2 x i64>* %17, align 16
  %369 = bitcast %"class.std::__1::shared_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 0, i64 16, i1 false) #10
  %370 = inttoptr i64 %49 to %"class.SkSL::Expression"*
  %371 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %1, i1 zeroext %2, %"class.SkSL::Expression"* %370, %class.SkSTArray* nonnull %16, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %18)
  %372 = ptrtoint %"class.SkSL::Statement"* %371 to i64
  %373 = load i64, i64* %362, align 8
  %374 = and i64 %373, 4294967294
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %378, label %376

376:                                              ; preds = %358
  %377 = bitcast i8* %359 to %"class.std::__1::unique_ptr"**
  br label %382

378:                                              ; preds = %393, %358
  %379 = phi i64 [ %373, %358 ], [ %395, %393 ]
  %380 = and i64 %379, 1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %412, label %399

382:                                              ; preds = %393, %376
  %383 = phi i64 [ 0, %376 ], [ %394, %393 ]
  %384 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %377, align 8
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %384, i64 %383, i32 0, i32 0, i32 0
  %386 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %385, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %385, align 8
  %387 = icmp eq %"class.SkSL::Statement"* %386, null
  br i1 %387, label %393, label %388

388:                                              ; preds = %382
  %389 = bitcast %"class.SkSL::Statement"* %386 to void (%"class.SkSL::Statement"*)***
  %390 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %390, i64 1
  %392 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %391, align 8
  call void %392(%"class.SkSL::Statement"* nonnull %386) #10
  br label %393

393:                                              ; preds = %388, %382
  %394 = add nuw nsw i64 %383, 1
  %395 = load i64, i64* %362, align 8
  %396 = lshr i64 %395, 1
  %397 = and i64 %396, 2147483647
  %398 = icmp ult i64 %394, %397
  br i1 %398, label %382, label %378

399:                                              ; preds = %378
  %400 = load i8*, i8** %363, align 8
  call void @_Z7sk_freePv(i8* %400) #10
  br label %412

401:                                              ; preds = %354, %301
  %402 = phi i64 [ %280, %301 ], [ %304, %354 ]
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %412, label %404

404:                                              ; preds = %401
  %405 = inttoptr i64 %402 to %"struct.std::__1::__forward_list_node.102"*
  br label %406

406:                                              ; preds = %404, %406
  %407 = phi %"struct.std::__1::__forward_list_node.102"* [ %410, %406 ], [ %405, %404 ]
  %408 = bitcast %"struct.std::__1::__forward_list_node.102"* %407 to i8*
  %409 = getelementptr inbounds %"struct.std::__1::__forward_list_node.102", %"struct.std::__1::__forward_list_node.102"* %407, i64 0, i32 0, i32 0
  %410 = load %"struct.std::__1::__forward_list_node.102"*, %"struct.std::__1::__forward_list_node.102"** %409, align 8
  call void @_ZdlPv(i8* %408) #11
  %411 = icmp eq %"struct.std::__1::__forward_list_node.102"* %410, null
  br i1 %411, label %412, label %406

412:                                              ; preds = %78, %406, %399, %378, %401, %94
  %413 = phi i64 [ %49, %94 ], [ %49, %401 ], [ 0, %378 ], [ 0, %399 ], [ %49, %406 ], [ %49, %78 ]
  %414 = phi i64 [ 0, %94 ], [ 0, %401 ], [ %372, %378 ], [ %372, %399 ], [ 0, %406 ], [ 0, %78 ]
  %415 = load i64, i64* %53, align 8
  %416 = and i64 %415, 4294967294
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %420, label %418

418:                                              ; preds = %412
  %419 = bitcast i8* %51 to %"class.std::__1::unique_ptr"**
  br label %424

420:                                              ; preds = %435, %412
  %421 = phi i64 [ %415, %412 ], [ %437, %435 ]
  %422 = and i64 %421, 1
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %443, label %441

424:                                              ; preds = %435, %418
  %425 = phi i64 [ 0, %418 ], [ %436, %435 ]
  %426 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %419, align 8
  %427 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %426, i64 %425, i32 0, i32 0, i32 0
  %428 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %427, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %427, align 8
  %429 = icmp eq %"class.SkSL::Statement"* %428, null
  br i1 %429, label %435, label %430

430:                                              ; preds = %424
  %431 = bitcast %"class.SkSL::Statement"* %428 to void (%"class.SkSL::Statement"*)***
  %432 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %431, align 8
  %433 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %432, i64 1
  %434 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %433, align 8
  call void %434(%"class.SkSL::Statement"* nonnull %428) #10
  br label %435

435:                                              ; preds = %430, %424
  %436 = add nuw nsw i64 %425, 1
  %437 = load i64, i64* %53, align 8
  %438 = lshr i64 %437, 1
  %439 = and i64 %438, 2147483647
  %440 = icmp ult i64 %436, %439
  br i1 %440, label %424, label %420

441:                                              ; preds = %420
  %442 = load i8*, i8** %54, align 8
  call void @_Z7sk_freePv(i8* %442) #10
  br label %443

443:                                              ; preds = %420, %441
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #10
  br label %444

444:                                              ; preds = %42, %443, %30
  %445 = phi i64 [ %19, %30 ], [ %413, %443 ], [ %46, %42 ]
  %446 = phi i64 [ 0, %30 ], [ %414, %443 ], [ 0, %42 ]
  %447 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %6, i64 0, i32 1
  %448 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %447, align 8
  %449 = icmp eq %"class.std::__1::__shared_weak_count"* %448, null
  br i1 %449, label %460, label %450

450:                                              ; preds = %444
  %451 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %448, i64 0, i32 0, i32 1
  %452 = atomicrmw add i64* %451, i64 -1 acq_rel
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %460

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %448, i64 0, i32 0
  %456 = bitcast %"class.std::__1::__shared_weak_count"* %448 to void (%"class.std::__1::__shared_count"*)***
  %457 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %456, align 8
  %458 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %457, i64 2
  %459 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %458, align 8
  call void %459(%"class.std::__1::__shared_count"* %455) #10
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %448) #10
  br label %460

460:                                              ; preds = %444, %450, %454
  %461 = icmp eq i64 %445, 0
  br i1 %461, label %468, label %462

462:                                              ; preds = %460
  %463 = inttoptr i64 %445 to %"class.SkSL::Expression"*
  %464 = inttoptr i64 %445 to void (%"class.SkSL::Expression"*)***
  %465 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %464, align 8
  %466 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %465, i64 1
  %467 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %466, align 8
  call void %467(%"class.SkSL::Expression"* nonnull %463) #10
  br label %468

468:                                              ; preds = %460, %462
  %469 = inttoptr i64 %446 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %469
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #10
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #12
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #11
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #10
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #10
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"*, %"class.SkSL::Expression"*, %"class.SkSL::Context"* dereferenceable(744)) local_unnamed_addr #2

declare zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* dereferenceable(24), i64*) local_unnamed_addr #2

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* nocapture readonly dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray*, %"class.std::__1::shared_ptr"* nocapture byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkSTArray, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = ptrtoint %"class.SkSL::Expression"* %3 to i64
  %11 = zext i1 %2 to i8
  br i1 %2, label %18, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %14 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %14, i64 0, i32 1, i32 10
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %94, label %18

18:                                               ; preds = %12, %6
  %19 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i64 -6148914691236517206, i64* %8, align 8
  %20 = call zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* dereferenceable(24) %3, i64* nonnull %8) #10
  br i1 %20, label %21, label %93

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr"**
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %31
  %33 = bitcast i64* %9 to i8*
  %34 = icmp eq i64 %31, 0
  br i1 %34, label %57, label %35

35:                                               ; preds = %26, %48
  %36 = phi %"class.SkSL::SwitchCase"* [ %49, %48 ], [ null, %26 ]
  %37 = phi %"class.std::__1::unique_ptr"* [ %50, %48 ], [ %24, %26 ]
  %38 = bitcast %"class.std::__1::unique_ptr"* %37 to %"class.SkSL::SwitchCase"**
  %39 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %39, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %40, align 8
  %42 = icmp eq %"class.SkSL::Expression"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  store i64 -6148914691236517206, i64* %9, align 8
  %44 = call zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* nonnull dereferenceable(24) %41, i64* nonnull %9) #10
  %45 = load i64, i64* %9, align 8
  %46 = load i64, i64* %8, align 8
  %47 = icmp eq i64 %45, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  br i1 %47, label %52, label %48

48:                                               ; preds = %35, %43
  %49 = phi %"class.SkSL::SwitchCase"* [ %39, %35 ], [ %36, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %32
  br i1 %51, label %54, label %35

52:                                               ; preds = %43
  %53 = icmp eq %"class.SkSL::SwitchCase"* %39, null
  br i1 %53, label %54, label %67

54:                                               ; preds = %48, %52
  %55 = phi %"class.SkSL::SwitchCase"* [ %36, %52 ], [ %49, %48 ]
  %56 = icmp eq %"class.SkSL::SwitchCase"* %55, null
  br i1 %56, label %57, label %67

57:                                               ; preds = %21, %26, %54
  %58 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 -1, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %58, i64 12
  %62 = bitcast i8* %61 to i32*
  store i32 25, i32* %62, align 4
  %63 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = ptrtoint i8* %58 to i64
  %65 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 1
  %66 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %65, align 8
  br label %155

67:                                               ; preds = %54, %52
  %68 = phi %"class.SkSL::SwitchCase"* [ %39, %52 ], [ %55, %54 ]
  %69 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 0
  %70 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 1
  %72 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %71, align 8
  %73 = icmp eq %"class.std::__1::__shared_weak_count"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %72, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 1 monotonic
  br label %77

77:                                               ; preds = %67, %74
  %78 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement12BlockForCaseEP9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EEPNS_10SwitchCaseENS2_10shared_ptrINS_11SymbolTableEEE(%class.SkSTArray* %4, %"class.SkSL::SwitchCase"* nonnull %68, %"class.SkSL::SymbolTable"* %70, %"class.std::__1::__shared_weak_count"* %72)
  %79 = ptrtoint %"class.SkSL::Statement"* %78 to i64
  %80 = icmp eq %"class.SkSL::Statement"* %78, null
  br i1 %80, label %81, label %155

81:                                               ; preds = %77
  br i1 %2, label %82, label %93

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %84 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %83, align 8
  %85 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %84, i64 0, i32 1, i32 18
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %90 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %3, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %90, i32 %92, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0))
  br label %155

93:                                               ; preds = %81, %82, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %94

94:                                               ; preds = %93, %12
  %95 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95)
  %96 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 80) #10
  %97 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 16
  %98 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 24
  %99 = bitcast i8* %98 to i64*
  %100 = bitcast i8* %97 to i8**
  store i8* %95, i8** %100, align 8
  store i64 17179869184, i64* %99, align 8
  %101 = bitcast i8* %97 to %class.SkTArray*
  %102 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %103 = bitcast i8* %102 to %class.SkTArray*
  %104 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %101, %class.SkTArray* dereferenceable(16) %103) #10
  %105 = bitcast %"class.std::__1::shared_ptr"* %5 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8
  %107 = bitcast %"class.std::__1::shared_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 16, i1 false) #10
  %108 = getelementptr inbounds i8, i8* %96, i64 8
  %109 = bitcast i8* %108 to i32*
  store i32 %1, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %96, i64 12
  %111 = bitcast i8* %110 to i32*
  store i32 27, i32* %111, align 4
  %112 = bitcast i8* %96 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15SwitchStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %96, i64 16
  store i8 %11, i8* %113, align 8
  %114 = getelementptr inbounds i8, i8* %96, i64 24
  %115 = bitcast i8* %114 to i64*
  store i64 %10, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %96, i64 48
  %117 = getelementptr inbounds i8, i8* %96, i64 32
  %118 = getelementptr inbounds i8, i8* %96, i64 56
  %119 = bitcast i8* %118 to i64*
  %120 = bitcast i8* %116 to i8**
  store i8* %117, i8** %120, align 8
  store i64 17179869184, i64* %119, align 8
  %121 = bitcast i8* %116 to %class.SkTArray*
  %122 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %121, %class.SkTArray* dereferenceable(16) %101) #10
  %123 = getelementptr inbounds i8, i8* %96, i64 64
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %124, align 8
  %125 = load i64, i64* %99, align 8
  %126 = and i64 %125, 4294967294
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %94
  %129 = bitcast i8* %97 to %"class.std::__1::unique_ptr"**
  br label %134

130:                                              ; preds = %145, %94
  %131 = phi i64 [ %125, %94 ], [ %147, %145 ]
  %132 = and i64 %131, 1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %153, label %151

134:                                              ; preds = %145, %128
  %135 = phi i64 [ 0, %128 ], [ %146, %145 ]
  %136 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %129, align 8
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 %135, i32 0, i32 0, i32 0
  %138 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %137, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %137, align 8
  %139 = icmp eq %"class.SkSL::Statement"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %134
  %141 = bitcast %"class.SkSL::Statement"* %138 to void (%"class.SkSL::Statement"*)***
  %142 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %142, i64 1
  %144 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %143, align 8
  call void %144(%"class.SkSL::Statement"* nonnull %138) #10
  br label %145

145:                                              ; preds = %140, %134
  %146 = add nuw nsw i64 %135, 1
  %147 = load i64, i64* %99, align 8
  %148 = lshr i64 %147, 1
  %149 = and i64 %148, 2147483647
  %150 = icmp ult i64 %146, %149
  br i1 %150, label %134, label %130

151:                                              ; preds = %130
  %152 = load i8*, i8** %100, align 8
  call void @_Z7sk_freePv(i8* %152) #10
  br label %153

153:                                              ; preds = %151, %130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95)
  %154 = ptrtoint i8* %96 to i64
  br label %176

155:                                              ; preds = %57, %77, %88
  %156 = phi %"class.std::__1::__shared_weak_count"* [ %72, %88 ], [ %66, %57 ], [ %72, %77 ]
  %157 = phi i64 [ 0, %88 ], [ %64, %57 ], [ %79, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %158 = icmp eq %"class.std::__1::__shared_weak_count"* %156, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0, i32 1
  %161 = atomicrmw add i64* %160, i64 -1 acq_rel
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %156, i64 0, i32 0
  %165 = bitcast %"class.std::__1::__shared_weak_count"* %156 to void (%"class.std::__1::__shared_count"*)***
  %166 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %166, i64 2
  %168 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %167, align 8
  call void %168(%"class.std::__1::__shared_count"* %164) #10
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %156) #10
  br label %169

169:                                              ; preds = %155, %159, %163
  %170 = icmp eq %"class.SkSL::Expression"* %3, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %169
  %172 = bitcast %"class.SkSL::Expression"* %3 to void (%"class.SkSL::Expression"*)***
  %173 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %173, i64 1
  %175 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %174, align 8
  call void %175(%"class.SkSL::Expression"* nonnull %3) #10
  br label %176

176:                                              ; preds = %153, %169, %171
  %177 = phi i64 [ %154, %153 ], [ %157, %169 ], [ %157, %171 ]
  %178 = inttoptr i64 %177 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %178
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15SwitchStatementD2Ev(%"class.SkSL::SwitchStatement"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15SwitchStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #10
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %18 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4294967294
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %17 to %"class.std::__1::unique_ptr"**
  br label %29

25:                                               ; preds = %40, %16
  %26 = phi i64 [ %20, %16 ], [ %42, %40 ]
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %49, label %46

29:                                               ; preds = %40, %23
  %30 = phi i64 [ 0, %23 ], [ %41, %40 ]
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 %30, i32 0, i32 0, i32 0
  %33 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %32, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %32, align 8
  %34 = icmp eq %"class.SkSL::Statement"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.SkSL::Statement"* %33 to void (%"class.SkSL::Statement"*)***
  %37 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %37, i64 1
  %39 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %38, align 8
  tail call void %39(%"class.SkSL::Statement"* nonnull %33) #10
  br label %40

40:                                               ; preds = %35, %29
  %41 = add nuw nsw i64 %30, 1
  %42 = load i64, i64* %19, align 8
  %43 = lshr i64 %42, 1
  %44 = and i64 %43, 2147483647
  %45 = icmp ult i64 %41, %44
  br i1 %45, label %29, label %25

46:                                               ; preds = %25
  %47 = bitcast i8* %17 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_Z7sk_freePv(i8* %48) #10
  br label %49

49:                                               ; preds = %25, %46
  %50 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %50, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %50, align 8
  %52 = icmp eq %"class.SkSL::Expression"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.SkSL::Expression"* %51 to void (%"class.SkSL::Expression"*)***
  %55 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %55, i64 1
  %57 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %56, align 8
  tail call void %57(%"class.SkSL::Expression"* nonnull %51) #10
  br label %58

58:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15SwitchStatementD0Ev(%"class.SkSL::SwitchStatement"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15SwitchStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #10
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %18 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 3, i32 0, i32 0, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 4294967294
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %17 to %"class.std::__1::unique_ptr"**
  br label %29

25:                                               ; preds = %40, %16
  %26 = phi i64 [ %20, %16 ], [ %42, %40 ]
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %49, label %46

29:                                               ; preds = %40, %23
  %30 = phi i64 [ 0, %23 ], [ %41, %40 ]
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 %30, i32 0, i32 0, i32 0
  %33 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %32, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %32, align 8
  %34 = icmp eq %"class.SkSL::Statement"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.SkSL::Statement"* %33 to void (%"class.SkSL::Statement"*)***
  %37 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %37, i64 1
  %39 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %38, align 8
  tail call void %39(%"class.SkSL::Statement"* nonnull %33) #10
  br label %40

40:                                               ; preds = %35, %29
  %41 = add nuw nsw i64 %30, 1
  %42 = load i64, i64* %19, align 8
  %43 = lshr i64 %42, 1
  %44 = and i64 %43, 2147483647
  %45 = icmp ult i64 %41, %44
  br i1 %45, label %29, label %25

46:                                               ; preds = %25
  %47 = bitcast i8* %17 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_Z7sk_freePv(i8* %48) #10
  br label %49

49:                                               ; preds = %46, %25
  %50 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %50, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %50, align 8
  %52 = icmp eq %"class.SkSL::Expression"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.SkSL::Expression"* %51 to void (%"class.SkSL::Expression"*)***
  %55 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %55, i64 1
  %57 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %56, align 8
  tail call void %57(%"class.SkSL::Expression"* nonnull %51) #10
  br label %58

58:                                               ; preds = %49, %53
  %59 = bitcast %"class.SkSL::SwitchStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %59) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #10
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #10
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #11
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.32"*, %"class.std::__1::unique_ptr.32"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.32"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.32"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.32"*, %"class.std::__1::unique_ptr.32"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.32"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.32"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #10
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.32"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.30"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.32"* %29, %"class.std::__1::unique_ptr.32"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.24"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.24"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.24"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.24"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #10
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.24"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.22"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.24"* %57, %"class.std::__1::unique_ptr.24"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #10
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIllN10SkTHashSetIl10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.123*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.123, %class.SkTHashTable.123* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.123, %class.SkTHashTable.123* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.123, %class.SkTHashTable.123* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.124, %class.SkAutoTArray.124* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.124* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #10
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #11
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 0
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !6

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 0
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 0
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 0
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 0
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 0
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #11
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*
  %68 = getelementptr inbounds %class.SkTHashTable.123, %class.SkTHashTable.123* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = zext i32 %4 to i64
  br label %75

70:                                               ; preds = %121, %64
  %71 = icmp eq i64 %9, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %73) #11
  br label %74

74:                                               ; preds = %70, %72
  ret void

75:                                               ; preds = %121, %66
  %76 = phi i64 [ 0, %66 ], [ %122, %121 ]
  %77 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %121, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 0
  %82 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %83 = bitcast i64* %81 to i8*
  %84 = tail call i32 %82(i8* %83, i64 8, i32 0) #10
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 1, i32 %84
  %87 = load i32, i32* %3, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %121

89:                                               ; preds = %80
  %90 = add nsw i32 %87, -1
  %91 = and i32 %86, %90
  %92 = load %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"** %68, align 8
  %93 = load i64, i64* %81, align 8
  br label %94

94:                                               ; preds = %114, %89
  %95 = phi i32 [ 0, %89 ], [ %119, %114 ]
  %96 = phi i32 [ %91, %89 ], [ %118, %114 ]
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %92, i64 %97
  %99 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %92, i64 %97, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %98, i64 0, i32 0
  store i64 %93, i64* %103, align 8
  store i32 %86, i32* %99, align 8
  %104 = load i32, i32* %5, align 8
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %5, align 8
  br label %121

106:                                              ; preds = %94
  %107 = icmp eq i32 %86, %100
  br i1 %107, label %108, label %114

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %98, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %93, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<long, long, SkTHashSet<long, SkGoodHash>::Traits>::Slot"* %98, i64 0, i32 0
  store i64 %93, i64* %113, align 8
  br label %121

114:                                              ; preds = %108, %106
  %115 = add nsw i32 %96, -1
  %116 = icmp slt i32 %96, 1
  %117 = select i1 %116, i32 %87, i32 0
  %118 = add nsw i32 %115, %117
  %119 = add nuw nsw i32 %95, 1
  %120 = icmp eq i32 %119, %87
  br i1 %120, label %121, label %94

121:                                              ; preds = %114, %112, %102, %80, %75
  %122 = add nuw nsw i64 %76, 1
  %123 = icmp eq i64 %122, %69
  br i1 %123, label %70, label %75
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3NopD0Ev(%"class.SkSL::Nop"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.SkSL::Nop"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL3Nop11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 1, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  store i8 59, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL3Nop7isEmptyEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL3Nop5cloneEv(%"class.SkSL::Nop"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 25, i32* %6, align 4
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL3NopE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #10
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #10
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #10
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #10
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD2Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD0Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.SkSL::SwitchCase"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL10SwitchCase11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = icmp eq %"class.SkSL::Expression"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %7 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %11) #10
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %10
  %23 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %25, i64 0, i32 0
  %27 = bitcast %"class.SkSL::Statement"* %25 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %28 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %28, i64 2
  %30 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %29, align 8
  call void %30(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %26) #10
  %31 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %23
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %37) #10
  %38 = load i8, i8* %32, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %9
  %41 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %9, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %43 = load i8, i8* %17, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %46) #11
  br label %67

47:                                               ; preds = %2
  %48 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  %49 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %49, align 8
  %51 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %50, i64 0, i32 0
  %52 = bitcast %"class.SkSL::Statement"* %50 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %53 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %53, i64 2
  %55 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %54, align 8
  call void %55(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %51) #10
  %56 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = select i1 %59, i8* %61, i8* %48
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* %62) #10
  %63 = load i8, i8* %57, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %47
  %66 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %65, %47, %45, %42
  %68 = phi i8* [ %10, %42 ], [ %10, %45 ], [ %48, %47 ], [ %48, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL10SwitchCase5cloneEv(%"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %8, i64 10
  %10 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %9, align 8
  %11 = tail call %"class.SkSL::Expression"* %10(%"class.SkSL::Expression"* nonnull %4) #10
  %12 = ptrtoint %"class.SkSL::Expression"* %11 to i64
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i64 [ %12, %6 ], [ 0, %1 ]
  %15 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %15, align 8
  %17 = bitcast %"class.SkSL::Statement"* %16 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %18 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %18, i64 4
  %20 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %19, align 8
  %21 = tail call %"class.SkSL::Statement"* %20(%"class.SkSL::Statement"* %16) #10
  %22 = ptrtoint %"class.SkSL::Statement"* %21 to i64
  %23 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #10
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 28, i32* %28, align 4
  %29 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %14, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = bitcast i8* %23 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4SkSLL26find_duplicate_case_valuesERK9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEELb0EE: argument 0"}
!5 = distinct !{!5, !"_ZN4SkSLL26find_duplicate_case_valuesERK9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEELb0EE"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
