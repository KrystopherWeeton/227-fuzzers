; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_devicebuffer.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_devicebuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_DeviceBuffer = type { %"class.fxcrt::UnownedPtr.12", %"class.fxcrt::UnownedPtr.13", %"class.fxcrt::UnownedPtr.28", %"class.fxcrt::RetainPtr", %struct.FX_RECT, %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.12" = type { %class.CFX_RenderDevice* }
%"class.fxcrt::UnownedPtr.13" = type { %class.CPDF_RenderContext* }
%"class.fxcrt::UnownedPtr.28" = type { %class.CPDF_PageObject* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.8", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr.14", %"class.fxcrt::RetainPtr.15", %"class.fxcrt::UnownedPtr.21", %"class.std::__1::vector.22" }
%"class.fxcrt::UnownedPtr.14" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.fxcrt::UnownedPtr.21" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.25" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.24", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.24" = type { %class.CPDF_PageObjectHolder* }
%class.CPDF_PageObjectHolder = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.CPDF_RenderContext::Layer"* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.29" }
%"class.fxcrt::RetainPtr.29" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.33", %"class.std::__1::vector.40" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.std::__1::unique_ptr.42"*, %"class.std::__1::unique_ptr.42"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::unique_ptr.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::unique_ptr.42"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.50" }
%"class.fxcrt::SharedCopyOnWrite.50" = type { %"class.fxcrt::RetainPtr.51" }
%"class.fxcrt::RetainPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { float*, float*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.64" }
%"class.fxcrt::SharedCopyOnWrite.64" = type { %"class.fxcrt::RetainPtr.65" }
%"class.fxcrt::RetainPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.55", %"class.std::__1::unique_ptr.69", %"class.fxcrt::RetainPtr.75" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.75" = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.83" }
%"class.fxcrt::SharedCopyOnWrite.83" = type { %"class.fxcrt::RetainPtr.84" }
%"class.fxcrt::RetainPtr.84" = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.88", %"class.fxcrt::UnownedPtr.94", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::UnownedPtr.94" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.97" }
%"class.fxcrt::SharedCopyOnWrite.97" = type { %"class.fxcrt::RetainPtr.98" }
%"class.fxcrt::RetainPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.108", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.114", %"class.fxcrt::RetainPtr.120", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.114", %"class.fxcrt::RetainPtr.114", %"class.fxcrt::RetainPtr.114", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.102" }
%"class.fxcrt::RetainPtr.102" = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.108" = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.CPDF_Object* }
%class.CPDF_Object = type opaque
%"class.fxcrt::RetainPtr.120" = type { %"class.std::__1::unique_ptr.121" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.114" = type { %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.128" }
%"class.fxcrt::RetainPtr.128" = type { %"class.std::__1::unique_ptr.129" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.132" }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"class.fxcrt::RetainPtr.134"*, %"class.fxcrt::RetainPtr.134"*, %"class.std::__1::__compressed_pair.135" }
%"class.fxcrt::RetainPtr.134" = type opaque
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.fxcrt::RetainPtr.134"* }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.fxcrt::RetainPtr.142" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.CFX_DIBBase* }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.148" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.148" = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.14", i32, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { i64 }
%class.CFX_ClipRgn = type opaque

@_ZN17CPDF_DeviceBufferC1EP18CPDF_RenderContextP16CFX_RenderDeviceRK7FX_RECTPK15CPDF_PageObjecti = hidden unnamed_addr alias void (%class.CPDF_DeviceBuffer*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %struct.FX_RECT*, %class.CPDF_PageObject*, i32), void (%class.CPDF_DeviceBuffer*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %struct.FX_RECT*, %class.CPDF_PageObject*, i32)* @_ZN17CPDF_DeviceBufferC2EP18CPDF_RenderContextP16CFX_RenderDeviceRK7FX_RECTPK15CPDF_PageObjecti
@_ZN17CPDF_DeviceBufferD1Ev = hidden unnamed_addr alias void (%class.CPDF_DeviceBuffer*), void (%class.CPDF_DeviceBuffer*)* @_ZN17CPDF_DeviceBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_DeviceBuffer15CalculateMatrixEP16CFX_RenderDeviceRK7FX_RECTib(%class.CFX_Matrix* noalias sret, %class.CFX_RenderDevice*, %struct.FX_RECT* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  %7 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  %8 = bitcast %class.CFX_Matrix* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %8, align 4
  store float 0.000000e+00, float* %6, align 4
  store float 0.000000e+00, float* %7, align 4
  %9 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 0, %10
  %12 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 0, %13
  %15 = sitofp i32 %11 to float
  %16 = sitofp i32 %14 to float
  tail call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* %0, float %15, float %16) #4
  br i1 %4, label %17, label %45

17:                                               ; preds = %5
  %18 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %1, i32 5) #4
  %19 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %1, i32 6) #4
  %20 = icmp ne i32 %18, 0
  %21 = icmp ne i32 %19, 0
  %22 = and i1 %20, %21
  %23 = icmp ne i32 %3, 0
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %45

25:                                               ; preds = %17
  %26 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %1, i32 2) #4
  %27 = mul nsw i32 %26, 254
  %28 = mul nsw i32 %18, 10
  %29 = sdiv i32 %27, %28
  %30 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %1, i32 3) #4
  %31 = mul nsw i32 %30, 254
  %32 = mul nsw i32 %19, 10
  %33 = sdiv i32 %31, %32
  %34 = icmp sgt i32 %29, %3
  br i1 %34, label %35, label %39

35:                                               ; preds = %25
  %36 = sitofp i32 %3 to float
  %37 = sitofp i32 %29 to float
  %38 = fdiv float %36, %37
  tail call void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix* %0, float %38, float 1.000000e+00) #4
  br label %39

39:                                               ; preds = %35, %25
  %40 = icmp sgt i32 %33, %3
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = sitofp i32 %3 to float
  %43 = sitofp i32 %33 to float
  %44 = fdiv float %42, %43
  tail call void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix* %0, float 1.000000e+00, float %44) #4
  br label %45

45:                                               ; preds = %17, %41, %39, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice*, i32) local_unnamed_addr #2

declare void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_DeviceBufferC2EP18CPDF_RenderContextP16CFX_RenderDeviceRK7FX_RECTPK15CPDF_PageObjecti(%class.CPDF_DeviceBuffer*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %struct.FX_RECT* nocapture readonly dereferenceable(16), %class.CPDF_PageObject*, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* %2, %class.CFX_RenderDevice** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 1, i32 0
  store %class.CPDF_RenderContext* %1, %class.CPDF_RenderContext** %8, align 8
  %9 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 2, i32 0
  store %class.CPDF_PageObject* %4, %class.CPDF_PageObject** %9, align 8
  %10 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3
  %11 = tail call i8* @_Znwm(i64 80) #5, !noalias !2
  %12 = bitcast i8* %11 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %12) #4, !noalias !2
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 %13, i64* %14, align 8, !alias.scope !2
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !2
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8, !noalias !2
  %19 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4
  %20 = bitcast %struct.FX_RECT* %19 to i8*
  %21 = bitcast %struct.FX_RECT* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 5
  tail call void @_ZN17CPDF_DeviceBuffer15CalculateMatrixEP16CFX_RenderDeviceRK7FX_RECTib(%class.CFX_Matrix* sret %22, %class.CFX_RenderDevice* %2, %struct.FX_RECT* dereferenceable(16) %3, i32 %5, i1 zeroext true)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_DeviceBufferD2Ev(%class.CPDF_DeviceBuffer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %2, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %2, align 8
  %4 = icmp eq %class.CFX_DIBitmap* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CFX_DIBitmap* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #4
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPDF_DeviceBuffer10InitializeEv(%class.CPDF_DeviceBuffer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = alloca %class.CFX_FloatRect, align 4
  %5 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4
  %6 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 5
  %7 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4
  call void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect* nonnull %4, %struct.FX_RECT* dereferenceable(16) %8) #4
  %9 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %6, %class.CFX_FloatRect* nonnull dereferenceable(16) %4) #4
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %3) #4
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = extractvalue { i64, i64 } %14, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4
  %20 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %20, align 8
  %22 = trunc i64 %19 to i32
  %23 = sub nsw i32 %22, %16
  %24 = lshr i64 %19, 32
  %25 = trunc i64 %24 to i32
  %26 = sub nsw i32 %25, %18
  %27 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* %21, i32 %23, i32 %26, i16 zeroext 544) #4
  ret i1 %27
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #2

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_DeviceBuffer14OutputToDeviceEv(%class.CPDF_DeviceBuffer*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.FXDIB_ResampleOptions, align 1
  %3 = alloca %struct.FXDIB_ResampleOptions, align 1
  %4 = alloca %"class.fxcrt::RetainPtr.142", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.142", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.142", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.142", align 8
  %9 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 0, i32 0
  %10 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %11 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %10, i32 7) #4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %93, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 5, i32 0
  %16 = load float, float* %15, align 8
  %17 = fcmp oeq float %16, 1.000000e+00
  br i1 %17, label %18, label %54

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 5, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 1.000000e+00
  br i1 %21, label %22, label %54

22:                                               ; preds = %18
  %23 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %24 = bitcast %"class.fxcrt::RetainPtr.142"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  %25 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  %27 = ptrtoint %class.CFX_DIBitmap* %26 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr.142"* %4 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq %class.CFX_DIBitmap* %26, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %22, %30
  %35 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %23, %"class.fxcrt::RetainPtr.142"* nonnull dereferenceable(8) %4, i32 %36, i32 %38, i32 0) #4
  %40 = getelementptr inbounds %"class.fxcrt::RetainPtr.142", %"class.fxcrt::RetainPtr.142"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %40, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %40, align 8
  %42 = icmp eq %class.CFX_DIBBase* %41, null
  br i1 %42, label %199, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %41, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %199

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %41, i64 0, i32 0
  %50 = bitcast %class.CFX_DIBBase* %41 to void (%"class.fxcrt::Retainable"*)***
  %51 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, i64 1
  %53 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, align 8
  call void %53(%"class.fxcrt::Retainable"* nonnull %49) #4
  br label %199

54:                                               ; preds = %18, %14
  %55 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %56 = bitcast %"class.fxcrt::RetainPtr.142"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #4
  %57 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %58 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %57, align 8
  %59 = ptrtoint %class.CFX_DIBitmap* %58 to i64
  %60 = bitcast %"class.fxcrt::RetainPtr.142"* %5 to i64*
  store i64 %59, i64* %60, align 8
  %61 = icmp eq %class.CFX_DIBitmap* %58, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %58, i64 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, 1
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %54, %62
  %67 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %72, %68
  %74 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = sub nsw i32 %75, %70
  %77 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #4
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %2) #4
  %78 = call zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* %55, %"class.fxcrt::RetainPtr.142"* nonnull dereferenceable(8) %5, i32 %68, i32 %70, i32 %73, i32 %76, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %2, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #4
  %79 = getelementptr inbounds %"class.fxcrt::RetainPtr.142", %"class.fxcrt::RetainPtr.142"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %79, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %79, align 8
  %81 = icmp eq %class.CFX_DIBBase* %80, null
  br i1 %81, label %199, label %82

82:                                               ; preds = %66
  %83 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %80, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i64 %84, -1
  store i64 %85, i64* %83, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %199

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %80, i64 0, i32 0
  %89 = bitcast %class.CFX_DIBBase* %80 to void (%"class.fxcrt::Retainable"*)***
  %90 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %90, i64 1
  %92 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %91, align 8
  call void %92(%"class.fxcrt::Retainable"* nonnull %88) #4
  br label %199

93:                                               ; preds = %1
  %94 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #4
  %95 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = tail call i8* @_Znwm(i64 80) #5, !noalias !5
  %97 = bitcast i8* %96 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %97) #4, !noalias !5
  %98 = ptrtoint i8* %96 to i64
  %99 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %98, i64* %99, align 8, !alias.scope !5
  %100 = getelementptr inbounds i8, i8* %96, i64 8
  %101 = bitcast i8* %100 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !5
  %103 = add nsw i64 %102, 1
  store i64 %103, i64* %101, align 8, !noalias !5
  %104 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %105 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %106 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %105, align 8
  %107 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %106, i64 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %106, i64 0, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = call zeroext i1 @_ZNK16CFX_RenderDevice22CreateCompatibleBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice* %104, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, i32 %108, i32 %110) #4
  %112 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 1, i32 0
  %113 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %112, align 8
  %114 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 2, i32 0
  %115 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %114, align 8
  %116 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 5
  call void @_ZN18CPDF_RenderContext13GetBackgroundERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK15CPDF_PageObjectPK18CPDF_RenderOptionsRK10CFX_Matrix(%class.CPDF_RenderContext* %113, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6, %class.CPDF_PageObject* %115, %class.CPDF_RenderOptions* null, %class.CFX_Matrix* dereferenceable(24) %116) #4
  %117 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %95, align 8
  %118 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %117, i64 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %117, i64 0, i32 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = bitcast %"class.fxcrt::RetainPtr.142"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #4
  %123 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %105, align 8
  %124 = ptrtoint %class.CFX_DIBitmap* %123 to i64
  %125 = bitcast %"class.fxcrt::RetainPtr.142"* %7 to i64*
  store i64 %124, i64* %125, align 8
  %126 = icmp eq %class.CFX_DIBitmap* %123, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %93
  %128 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %123, i64 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = add nsw i64 %129, 1
  store i64 %130, i64* %128, align 8
  br label %131

131:                                              ; preds = %93, %127
  %132 = call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %117, i32 0, i32 0, i32 %119, i32 %121, %"class.fxcrt::RetainPtr.142"* nonnull dereferenceable(8) %7, i32 0, i32 0, i32 0, %class.CFX_ClipRgn* null, i1 zeroext false) #4
  %133 = getelementptr inbounds %"class.fxcrt::RetainPtr.142", %"class.fxcrt::RetainPtr.142"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %133, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %133, align 8
  %135 = icmp eq %class.CFX_DIBBase* %134, null
  br i1 %135, label %147, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %134, i64 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %138, -1
  store i64 %139, i64* %137, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %147

141:                                              ; preds = %136
  %142 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %134, i64 0, i32 0
  %143 = bitcast %class.CFX_DIBBase* %134 to void (%"class.fxcrt::Retainable"*)***
  %144 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %144, i64 1
  %146 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %145, align 8
  call void %146(%"class.fxcrt::Retainable"* nonnull %142) #4
  br label %147

147:                                              ; preds = %131, %136, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #4
  %148 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %149 = bitcast %"class.fxcrt::RetainPtr.142"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #4
  %150 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %95, align 8
  %151 = ptrtoint %class.CFX_DIBitmap* %150 to i64
  %152 = bitcast %"class.fxcrt::RetainPtr.142"* %8 to i64*
  store i64 %151, i64* %152, align 8
  %153 = icmp eq %class.CFX_DIBitmap* %150, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %150, i64 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, 1
  store i64 %157, i64* %155, align 8
  br label %158

158:                                              ; preds = %147, %154
  %159 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = sub nsw i32 %164, %160
  %166 = getelementptr inbounds %class.CPDF_DeviceBuffer, %class.CPDF_DeviceBuffer* %0, i64 0, i32 4, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = sub nsw i32 %167, %162
  %169 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #4
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %3) #4
  %170 = call zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* %148, %"class.fxcrt::RetainPtr.142"* nonnull dereferenceable(8) %8, i32 %160, i32 %162, i32 %165, i32 %168, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #4
  %171 = getelementptr inbounds %"class.fxcrt::RetainPtr.142", %"class.fxcrt::RetainPtr.142"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %171, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %171, align 8
  %173 = icmp eq %class.CFX_DIBBase* %172, null
  br i1 %173, label %185, label %174

174:                                              ; preds = %158
  %175 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %172, i64 0, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = add nsw i64 %176, -1
  store i64 %177, i64* %175, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %174
  %180 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %172, i64 0, i32 0
  %181 = bitcast %class.CFX_DIBBase* %172 to void (%"class.fxcrt::Retainable"*)***
  %182 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %182, i64 1
  %184 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %183, align 8
  call void %184(%"class.fxcrt::Retainable"* nonnull %180) #4
  br label %185

185:                                              ; preds = %158, %174, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #4
  %186 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %95, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %95, align 8
  %187 = icmp eq %class.CFX_DIBitmap* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %186, i64 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = add nsw i64 %190, -1
  store i64 %191, i64* %189, align 8
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %199

193:                                              ; preds = %188
  %194 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %186, i64 0, i32 0, i32 0
  %195 = bitcast %class.CFX_DIBitmap* %186 to void (%"class.fxcrt::Retainable"*)***
  %196 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %196, i64 1
  %198 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, align 8
  call void %198(%"class.fxcrt::Retainable"* nonnull %194) #4
  br label %199

199:                                              ; preds = %193, %188, %185, %87, %82, %66, %48, %43, %34
  %200 = phi i8* [ %24, %34 ], [ %24, %43 ], [ %24, %48 ], [ %56, %66 ], [ %56, %82 ], [ %56, %87 ], [ %94, %185 ], [ %94, %188 ], [ %94, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #4
  ret void
}

declare zeroext i1 @_ZNK16CFX_RenderDevice22CreateCompatibleBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i32, i32) local_unnamed_addr #2

declare void @_ZN18CPDF_RenderContext13GetBackgroundERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK15CPDF_PageObjectPK18CPDF_RenderOptionsRK10CFX_Matrix(%class.CPDF_RenderContext*, %"class.fxcrt::RetainPtr"* dereferenceable(8), %class.CPDF_PageObject*, %class.CPDF_RenderOptions*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.142"* dereferenceable(8), i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.142"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.142"* dereferenceable(8), i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) local_unnamed_addr #2

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
