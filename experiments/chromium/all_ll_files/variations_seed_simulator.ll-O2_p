; ModuleID = '../../components/variations/variations_seed_simulator.cc'
source_filename = "../../components/variations/variations_seed_simulator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.variations::VariationsSeedSimulator::Result" = type { i32, i32, i32 }
%"class.variations::VariationsSeedSimulator" = type { i32 (...)**, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FieldTrial::EntropyProvider"* }
%"class.base::FieldTrial::EntropyProvider" = type { i32 (...)** }
%"class.variations::VariationsSeed" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.10", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.5", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.10" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.variations::ClientFilterableState" = type <{ %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Version", %"class.base::Version", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.base::OnceCallback", %"class.absl::optional", [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Version" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { i8 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.variations::ProcessedStudy"*, %"class.variations::ProcessedStudy"*, %"class.std::__1::__compressed_pair.29" }
%"class.variations::ProcessedStudy" = type { %"class.variations::Study"*, i32, i8, i8, %"class.std::__1::vector.22" }
%"class.variations::Study" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.20", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.variations::Study_Filter"*, %"class.variations::LayerMemberReference"*, i64, i32, i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.20" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.variations::Study_Filter" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i64, i8, i8, i32 }
%"class.google::protobuf::RepeatedPtrField.21" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.variations::LayerMemberReference" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i32 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.variations::ProcessedStudy"* }
%"class.variations::VariationsLayers" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.63" = type { i8 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"*, %"class.std::__1::__compressed_pair.57" }
%"struct.base::FieldTrial::ActiveGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.base::FieldTrial::ActiveGroup"* }
%"class.std::__1::map.42" = type { %"class.std::__1::__tree.43" }
%"class.std::__1::__tree.43" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::FieldTrial" = type { i32 (...)**, %"class.base::RefCounted", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.variations::Study_Experiment" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.53", %"class.google::protobuf::RepeatedPtrField.54", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.variations::Study_Experiment_FeatureAssociation"*, i64, i32, i32, i64, i64, i32, i64 }
%"class.google::protobuf::RepeatedPtrField.53" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.54" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.variations::Study_Experiment_FeatureAssociation" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.21", %"class.google::protobuf::RepeatedPtrField.21", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.variations::Study_Experiment_Param" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

@_ZTVN10variations23VariationsSeedSimulatorE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::VariationsSeedSimulator"*)* @_ZN10variations23VariationsSeedSimulatorD2Ev to i8*), i8* bitcast (void (%"class.variations::VariationsSeedSimulator"*)* @_ZN10variations23VariationsSeedSimulatorD0Ev to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 3], align 4

@_ZN10variations23VariationsSeedSimulator6ResultC1Ev = hidden unnamed_addr alias void (%"struct.variations::VariationsSeedSimulator::Result"*), void (%"struct.variations::VariationsSeedSimulator::Result"*)* @_ZN10variations23VariationsSeedSimulator6ResultC2Ev
@_ZN10variations23VariationsSeedSimulator6ResultD1Ev = hidden unnamed_addr alias void (%"struct.variations::VariationsSeedSimulator::Result"*), void (%"struct.variations::VariationsSeedSimulator::Result"*)* @_ZN10variations23VariationsSeedSimulator6ResultD2Ev
@_ZN10variations23VariationsSeedSimulatorC1ERKN4base10FieldTrial15EntropyProviderES5_ = hidden unnamed_addr alias void (%"class.variations::VariationsSeedSimulator"*, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FieldTrial::EntropyProvider"*), void (%"class.variations::VariationsSeedSimulator"*, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FieldTrial::EntropyProvider"*)* @_ZN10variations23VariationsSeedSimulatorC2ERKN4base10FieldTrial15EntropyProviderES5_
@_ZN10variations23VariationsSeedSimulatorD1Ev = hidden unnamed_addr alias void (%"class.variations::VariationsSeedSimulator"*), void (%"class.variations::VariationsSeedSimulator"*)* @_ZN10variations23VariationsSeedSimulatorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations23VariationsSeedSimulator6ResultC2Ev(%"struct.variations::VariationsSeedSimulator::Result"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10variations23VariationsSeedSimulator6ResultD2Ev(%"struct.variations::VariationsSeedSimulator::Result"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations23VariationsSeedSimulatorC2ERKN4base10FieldTrial15EntropyProviderES5_(%"class.variations::VariationsSeedSimulator"* nocapture, %"class.base::FieldTrial::EntropyProvider"* dereferenceable(8), %"class.base::FieldTrial::EntropyProvider"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10variations23VariationsSeedSimulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %0, i64 0, i32 1
  store %"class.base::FieldTrial::EntropyProvider"* %1, %"class.base::FieldTrial::EntropyProvider"** %5, align 8
  %6 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %0, i64 0, i32 2
  store %"class.base::FieldTrial::EntropyProvider"* %2, %"class.base::FieldTrial::EntropyProvider"** %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10variations23VariationsSeedSimulatorD2Ev(%"class.variations::VariationsSeedSimulator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations23VariationsSeedSimulatorD0Ev(%"class.variations::VariationsSeedSimulator"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.variations::VariationsSeedSimulator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations23VariationsSeedSimulator19SimulateSeedStudiesERKNS_14VariationsSeedERKNS_21ClientFilterableStateE(%"struct.variations::VariationsSeedSimulator::Result"* noalias nocapture sret, %"class.variations::VariationsSeedSimulator"* nocapture readonly, %"class.variations::VariationsSeed"* dereferenceable(96), %"struct.variations::ClientFilterableState"* dereferenceable(200)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::vector.18", align 8
  %6 = alloca %"class.variations::VariationsLayers", align 8
  %7 = bitcast %"class.std::__1::vector.18"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %10 = bitcast %"class.variations::VariationsLayers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %1, i64 0, i32 2
  %12 = bitcast %"class.variations::VariationsLayers"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FieldTrial::EntropyProvider"** %11, align 8
  call void @_ZN10variations16VariationsLayersC1ERKNS_14VariationsSeedEPKN4base10FieldTrial15EntropyProviderE(%"class.variations::VariationsLayers"* nonnull %6, %"class.variations::VariationsSeed"* dereferenceable(96) %2, %"class.base::FieldTrial::EntropyProvider"* %13) #12
  call void @_ZN10variations24FilterAndValidateStudiesERKNS_14VariationsSeedERKNS_21ClientFilterableStateERKNS_16VariationsLayersEPNSt3__16vectorINS_14ProcessedStudyENS9_9allocatorISB_EEEE(%"class.variations::VariationsSeed"* dereferenceable(96) %2, %"struct.variations::ClientFilterableState"* dereferenceable(200) %3, %"class.variations::VariationsLayers"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.18"* nonnull %5) #12
  call void @_ZN10variations23VariationsSeedSimulator18ComputeDifferencesERKNSt3__16vectorINS_14ProcessedStudyENS1_9allocatorIS3_EEEE(%"struct.variations::VariationsSeedSimulator::Result"* sret %0, %"class.variations::VariationsSeedSimulator"* %1, %"class.std::__1::vector.18"* nonnull dereferenceable(24) %5)
  call void @_ZN10variations16VariationsLayersD1Ev(%"class.variations::VariationsLayers"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %14 = load %"class.variations::ProcessedStudy"*, %"class.variations::ProcessedStudy"** %8, align 8
  %15 = icmp eq %"class.variations::ProcessedStudy"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.variations::ProcessedStudy"* %14 to i8*
  %18 = load %"class.variations::ProcessedStudy"*, %"class.variations::ProcessedStudy"** %9, align 8
  %19 = icmp eq %"class.variations::ProcessedStudy"* %18, %14
  br i1 %19, label %27, label %20

20:                                               ; preds = %16, %20
  %21 = phi %"class.variations::ProcessedStudy"* [ %22, %20 ], [ %18, %16 ]
  %22 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %21, i64 -1
  call void @_ZN10variations14ProcessedStudyD1Ev(%"class.variations::ProcessedStudy"* %22) #12
  %23 = icmp eq %"class.variations::ProcessedStudy"* %22, %14
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::vector.18"* %5 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %16
  %28 = phi i8* [ %26, %24 ], [ %17, %16 ]
  store %"class.variations::ProcessedStudy"* %14, %"class.variations::ProcessedStudy"** %9, align 8
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %4, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN10variations16VariationsLayersC1ERKNS_14VariationsSeedEPKN4base10FieldTrial15EntropyProviderE(%"class.variations::VariationsLayers"*, %"class.variations::VariationsSeed"* dereferenceable(96), %"class.base::FieldTrial::EntropyProvider"*) unnamed_addr #5

declare void @_ZN10variations24FilterAndValidateStudiesERKNS_14VariationsSeedERKNS_21ClientFilterableStateERKNS_16VariationsLayersEPNSt3__16vectorINS_14ProcessedStudyENS9_9allocatorISB_EEEE(%"class.variations::VariationsSeed"* dereferenceable(96), %"struct.variations::ClientFilterableState"* dereferenceable(200), %"class.variations::VariationsLayers"* dereferenceable(24), %"class.std::__1::vector.18"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations23VariationsSeedSimulator18ComputeDifferencesERKNSt3__16vectorINS_14ProcessedStudyENS1_9allocatorIS3_EEEE(%"struct.variations::VariationsSeedSimulator::Result"* noalias nocapture sret, %"class.variations::VariationsSeedSimulator"* nocapture readonly, %"class.std::__1::vector.18"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.63", align 1
  %6 = alloca %"class.std::__1::vector.55", align 8
  %7 = alloca %"class.std::__1::map.42", align 8
  %8 = bitcast %"class.std::__1::map.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %9, align 8
  %13 = bitcast %"class.std::__1::vector.55"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  call void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.55"* nonnull %6) #12
  %15 = bitcast %"struct.base::FieldTrial::ActiveGroup"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.55"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = inttoptr i64 %18 to %"struct.base::FieldTrial::ActiveGroup"*
  br i1 %19, label %28, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0
  %23 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.63", %"class.std::__1::tuple.63"* %5, i64 0, i32 0
  br label %63

26:                                               ; preds = %102
  %27 = inttoptr i64 %105 to %"struct.base::FieldTrial::ActiveGroup"*
  br label %28

28:                                               ; preds = %26, %3
  %29 = phi i64 [ %16, %3 ], [ %104, %26 ]
  %30 = phi i64 [ %16, %3 ], [ %105, %26 ]
  %31 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %20, %3 ], [ %27, %26 ]
  %32 = inttoptr i64 %29 to %"struct.base::FieldTrial::ActiveGroup"*
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %110, label %34

34:                                               ; preds = %28
  %35 = inttoptr i64 %30 to i8*
  %36 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %31, %32
  br i1 %36, label %61, label %37

37:                                               ; preds = %34, %56
  %38 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %39, %56 ], [ %32, %34 ]
  %39 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %38, i64 -1, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %45, %37
  %49 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %53, %48
  %57 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %39, %31
  br i1 %57, label %58, label %37

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.55"* %6 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %34
  %62 = phi i8* [ %60, %58 ], [ %35, %34 ]
  store %"struct.base::FieldTrial::ActiveGroup"* %31, %"struct.base::FieldTrial::ActiveGroup"** %14, align 8
  call void @_ZdlPv(i8* %62) #11
  br label %110

63:                                               ; preds = %102, %21
  %64 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %20, %21 ], [ %109, %102 ]
  %65 = phi i64 [ 0, %21 ], [ %103, %102 ]
  %66 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %64, i64 %65, i32 1
  %67 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %64, i64 %65, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  store %"class.std::__1::basic_string"* %67, %"class.std::__1::basic_string"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #12
  %68 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"* nonnull %22, %"class.std::__1::basic_string"* dereferenceable(24) %67, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.63"* nonnull dereferenceable(1) %5) #12
  %69 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %68, 0
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 7
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %72 = icmp eq %"class.std::__1::basic_string"* %66, %71
  br i1 %72, label %102, label %73

73:                                               ; preds = %63
  %74 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %77, label %92, label %82

82:                                               ; preds = %73
  br i1 %81, label %86, label %83

83:                                               ; preds = %82
  %84 = bitcast %"class.std::__1::__tree_end_node"* %70 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #12
  br label %102

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %64, i64 %65, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %71, i8* %88, i64 %90) #12
  br label %102

92:                                               ; preds = %73
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %64, i64 %65, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %98 = zext i8 %80 to i64
  %99 = select i1 %81, i8* %94, i8* %97
  %100 = select i1 %81, i64 %96, i64 %98
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %71, i8* %99, i64 %100) #12
  br label %102

102:                                              ; preds = %92, %86, %83, %63
  %103 = add nuw i64 %65, 1
  %104 = load i64, i64* %15, align 8
  %105 = load i64, i64* %17, align 8
  %106 = sub i64 %104, %105
  %107 = sdiv exact i64 %106, 48
  %108 = icmp ult i64 %103, %107
  %109 = inttoptr i64 %105 to %"struct.base::FieldTrial::ActiveGroup"*
  br i1 %108, label %63, label %26

110:                                              ; preds = %28, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %111 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 0
  %112 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.variations::VariationsSeedSimulator::Result", %"struct.variations::VariationsSeedSimulator::Result"* %0, i64 0, i32 2
  store i32 0, i32* %111, align 4
  store i32 0, i32* %112, align 4
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %2, i64 0, i32 0, i32 1
  %115 = bitcast %"class.variations::ProcessedStudy"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::vector.18"* %2 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %167, label %120

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %2, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0
  br label %123

123:                                              ; preds = %120, %157
  %124 = phi i32 [ 0, %120 ], [ %158, %157 ]
  %125 = phi i32 [ 0, %120 ], [ %159, %157 ]
  %126 = phi i32 [ 0, %120 ], [ %160, %157 ]
  %127 = phi i64 [ %118, %120 ], [ %163, %157 ]
  %128 = phi i64 [ 0, %120 ], [ %161, %157 ]
  %129 = inttoptr i64 %127 to %"class.variations::ProcessedStudy"*
  %130 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %129, i64 %128, i32 0
  %131 = load %"class.variations::Study"*, %"class.variations::Study"** %130, align 8
  %132 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %131, i64 0, i32 4, i32 0
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %134 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.43"* nonnull %122, %"class.std::__1::basic_string"* dereferenceable(24) %133) #12
  %135 = icmp eq %"class.std::__1::__tree_end_node"* %134, %11
  br i1 %135, label %157, label %136

136:                                              ; preds = %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 7
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::basic_string"*
  %139 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %131, i64 0, i32 9
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %157 [
    i32 1, label %141
    i32 0, label %145
  ]

141:                                              ; preds = %136
  %142 = load %"class.variations::ProcessedStudy"*, %"class.variations::ProcessedStudy"** %121, align 8
  %143 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %142, i64 %128
  %144 = call i32 @_ZN10variations23VariationsSeedSimulator26PermanentStudyGroupChangedERKNS_14ProcessedStudyERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::VariationsSeedSimulator"* %1, %"class.variations::ProcessedStudy"* dereferenceable(40) %143, %"class.std::__1::basic_string"* dereferenceable(24) %138)
  br label %149

145:                                              ; preds = %136
  %146 = load %"class.variations::ProcessedStudy"*, %"class.variations::ProcessedStudy"** %121, align 8
  %147 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %146, i64 %128
  %148 = call i32 @_ZN10variations23VariationsSeedSimulator24SessionStudyGroupChangedERKNS_14ProcessedStudyERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::VariationsSeedSimulator"* %1, %"class.variations::ProcessedStudy"* dereferenceable(40) %147, %"class.std::__1::basic_string"* dereferenceable(24) %138)
  br label %149

149:                                              ; preds = %145, %141
  %150 = phi i32 [ %144, %141 ], [ %148, %145 ]
  switch i32 %150, label %157 [
    i32 3, label %155
    i32 1, label %151
    i32 2, label %153
  ]

151:                                              ; preds = %149
  %152 = add nsw i32 %125, 1
  store i32 %152, i32* %111, align 4
  br label %157

153:                                              ; preds = %149
  %154 = add nsw i32 %126, 1
  store i32 %154, i32* %112, align 4
  br label %157

155:                                              ; preds = %149
  %156 = add nsw i32 %124, 1
  store i32 %156, i32* %113, align 4
  br label %157

157:                                              ; preds = %136, %151, %153, %155, %149, %123
  %158 = phi i32 [ %124, %136 ], [ %124, %151 ], [ %124, %153 ], [ %156, %155 ], [ %124, %149 ], [ %124, %123 ]
  %159 = phi i32 [ %125, %136 ], [ %152, %151 ], [ %125, %153 ], [ %125, %155 ], [ %125, %149 ], [ %125, %123 ]
  %160 = phi i32 [ %126, %136 ], [ %126, %151 ], [ %154, %153 ], [ %126, %155 ], [ %126, %149 ], [ %126, %123 ]
  %161 = add nuw i64 %128, 1
  %162 = load i64, i64* %115, align 8
  %163 = load i64, i64* %117, align 8
  %164 = sub i64 %162, %163
  %165 = sdiv exact i64 %164, 40
  %166 = icmp ult i64 %161, %165
  br i1 %166, label %123, label %167

167:                                              ; preds = %157, %110
  %168 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %7, i64 0, i32 0
  %169 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %170 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %169, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.43"* nonnull %168, %"class.std::__1::__tree_node"* %170) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10variations16VariationsLayersD1Ev(%"class.variations::VariationsLayers"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10variations23VariationsSeedSimulator26PermanentStudyGroupChangedERKNS_14ProcessedStudyERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::VariationsSeedSimulator"* nocapture readonly, %"class.variations::ProcessedStudy"* dereferenceable(40), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %1, i64 0, i32 0
  %7 = load %"class.variations::Study"*, %"class.variations::Study"** %6, align 8
  %8 = tail call zeroext i1 @_ZN10variations23VariationsSeedProcessor24ShouldStudyUseLowEntropyERKNS_5StudyE(%"class.variations::Study"* dereferenceable(104) %7) #12
  %9 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.variations::VariationsSeedSimulator", %"class.variations::VariationsSeedSimulator"* %0, i64 0, i32 1
  %11 = select i1 %8, %"class.base::FieldTrial::EntropyProvider"** %9, %"class.base::FieldTrial::EntropyProvider"** %10
  %12 = load %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FieldTrial::EntropyProvider"** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %"class.variations::Study"*, %"class.variations::Study"** %6, align 8, !noalias !2
  %18 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %17, i64 0, i32 4, i32 0
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8, !noalias !2
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !2
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !2
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !2
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %17, i64 0, i32 10
  %33 = load i32, i32* %32, align 4, !noalias !2
  %34 = bitcast %"class.base::FieldTrial::EntropyProvider"* %12 to double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)***
  %35 = load double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)**, double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)*** %34, align 8, !noalias !2
  %36 = getelementptr inbounds double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)*, double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)** %35, i64 2
  %37 = load double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)*, double (%"class.base::FieldTrial::EntropyProvider"*, i8*, i64, i32)** %36, align 8, !noalias !2
  %38 = tail call double %37(%"class.base::FieldTrial::EntropyProvider"* %12, i8* %27, i64 %31, i32 %33) #12, !noalias !2
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8, !noalias !2
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1, !noalias !2
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8, !noalias !2
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %47 = select i1 %43, i8* %45, i8* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8, !noalias !2
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  %52 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 8, !noalias !2
  %54 = tail call i8* @_ZNK10variations14ProcessedStudy24GetDefaultExperimentNameEv(%"class.variations::ProcessedStudy"* %1) #12, !noalias !2
  %55 = icmp eq i8* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %3
  %57 = tail call i64 @strlen(i8* nonnull %54) #12
  br label %61

58:                                               ; preds = %3
  %59 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12, !noalias !2
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #12
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12, !noalias !2
  br label %61

61:                                               ; preds = %58, %56
  %62 = phi i64 [ 0, %58 ], [ %57, %56 ]
  %63 = call %"class.base::FieldTrial"* @_ZN4base10FieldTrial25CreateSimulatedFieldTrialENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEiS5_d(i8* %47, i64 %51, i32 %53, i8* %54, i64 %62, double %38) #12, !noalias !2
  %64 = icmp eq %"class.base::FieldTrial"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.base::FieldTrial", %"class.base::FieldTrial"* %63, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %17, i64 0, i32 3, i32 0, i32 1
  %69 = load i32, i32* %68, align 8, !noalias !2
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %17, i64 0, i32 3, i32 0, i32 3
  %73 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %17, i64 0, i32 5, i32 0
  br label %78

74:                                               ; preds = %147, %67
  %75 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %1, i64 0, i32 3
  %76 = load i8, i8* %75, align 1, !range !5, !noalias !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %153, label %152

78:                                               ; preds = %147, %71
  %79 = phi i32 [ %69, %71 ], [ %148, %147 ]
  %80 = phi i64 [ 0, %71 ], [ %149, %147 ]
  %81 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %72, align 8
  %82 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %81, i64 0, i32 1, i64 %80
  %83 = bitcast i8** %82 to %"class.variations::Study_Experiment"**
  %84 = load %"class.variations::Study_Experiment"*, %"class.variations::Study_Experiment"** %83, align 8
  %85 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %84, i64 0, i32 1, i32 0, i64 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %147

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %84, i64 0, i32 5, i32 0
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %73, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i64 %98, i64 %99
  %101 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = icmp eq i64 %100, %108
  br i1 %109, label %110, label %142

110:                                              ; preds = %89
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %114 = select i1 %96, i8* %112, i8* %113
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %118 = select i1 %104, i8* %116, i8* %117
  %119 = icmp eq i64 %100, 0
  br i1 %96, label %126, label %120

120:                                              ; preds = %110
  br i1 %119, label %147, label %121

121:                                              ; preds = %120
  %122 = ptrtoint i8* %112 to i64
  %123 = trunc i64 %122 to i8
  %124 = load i8, i8* %118, align 1
  %125 = icmp eq i8 %124, %123
  br i1 %125, label %127, label %142

126:                                              ; preds = %110
  br i1 %119, label %147, label %139

127:                                              ; preds = %121, %134
  %128 = phi i64 [ %131, %134 ], [ %99, %121 ]
  %129 = phi i8* [ %132, %134 ], [ %113, %121 ]
  %130 = phi i8* [ %135, %134 ], [ %118, %121 ]
  %131 = add i64 %128, -1
  %132 = getelementptr inbounds i8, i8* %129, i64 1
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %147, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds i8, i8* %130, i64 1
  %136 = load i8, i8* %132, align 1
  %137 = load i8, i8* %135, align 1
  %138 = icmp eq i8 %136, %137
  br i1 %138, label %127, label %142

139:                                              ; preds = %126
  %140 = call i32 @bcmp(i8* %114, i8* %118, i64 %100) #12
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %134, %139, %121, %89
  %143 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %84, i64 0, i32 9
  %144 = load i32, i32* %143, align 8
  %145 = call i32 @_ZN4base10FieldTrial11AppendGroupERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.base::FieldTrial"* %63, %"class.std::__1::basic_string"* dereferenceable(24) %91, i32 %144) #12
  %146 = load i32, i32* %68, align 8
  br label %147

147:                                              ; preds = %127, %142, %139, %126, %120, %78
  %148 = phi i32 [ %79, %139 ], [ %79, %78 ], [ %79, %120 ], [ %79, %126 ], [ %146, %142 ], [ %79, %127 ]
  %149 = add nuw nsw i64 %80, 1
  %150 = sext i32 %148 to i64
  %151 = icmp slt i64 %149, %150
  br i1 %151, label %78, label %74

152:                                              ; preds = %74
  call void @_ZN4base10FieldTrial7DisableEv(%"class.base::FieldTrial"* %63) #12
  br label %153

153:                                              ; preds = %152, %74
  %154 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base10FieldTrial10group_nameEv(%"class.base::FieldTrial"* %63) #12, !noalias !2
  %155 = bitcast %"class.std::__1::basic_string"* %154 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1, !noalias !2
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %153
  %160 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %160, i64 24, i1 false) #12
  br label %166

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8, !noalias !2
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %165 = load i64, i64* %164, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %163, i64 %165) #12
  br label %166

166:                                              ; preds = %161, %159
  br i1 %64, label %180, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds %"class.base::FieldTrial", %"class.base::FieldTrial"* %63, i64 0, i32 1
  %169 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %168, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %169) #12
  %170 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %168, i64 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %168, i64 -2
  %175 = bitcast %"class.base::RefCounted"* %174 to %"class.base::FieldTrial"*
  %176 = bitcast %"class.base::RefCounted"* %174 to void (%"class.base::FieldTrial"*)***
  %177 = load void (%"class.base::FieldTrial"*)**, void (%"class.base::FieldTrial"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.base::FieldTrial"*)*, void (%"class.base::FieldTrial"*)** %177, i64 1
  %179 = load void (%"class.base::FieldTrial"*)*, void (%"class.base::FieldTrial"*)** %178, align 8
  call void %179(%"class.base::FieldTrial"* nonnull %175) #12
  br label %180

180:                                              ; preds = %166, %167, %173
  %181 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %7, i64 0, i32 3, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %191, label %184

184:                                              ; preds = %180
  %185 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %187 to i64
  br label %254

191:                                              ; preds = %180
  %192 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %7, i64 0, i32 3, i32 0, i32 3
  %193 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %192, align 8
  %194 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = zext i8 %196 to i64
  %201 = select i1 %197, i64 %199, i64 %200
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %205 = select i1 %197, i8* %203, i8* %204
  %206 = icmp eq i64 %201, 0
  %207 = sext i32 %182 to i64
  br label %208

208:                                              ; preds = %251, %191
  %209 = phi i64 [ 0, %191 ], [ %252, %251 ]
  %210 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %193, i64 0, i32 1, i64 %209
  %211 = bitcast i8** %210 to %"class.variations::Study_Experiment"**
  %212 = load %"class.variations::Study_Experiment"*, %"class.variations::Study_Experiment"** %211, align 8
  %213 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %212, i64 0, i32 5, i32 0
  %214 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %213, align 8
  %215 = bitcast %"class.std::__1::basic_string"* %214 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  %221 = zext i8 %217 to i64
  %222 = select i1 %218, i64 %220, i64 %221
  %223 = icmp eq i64 %222, %201
  br i1 %223, label %224, label %251

224:                                              ; preds = %208
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = bitcast %"class.std::__1::basic_string"* %214 to i8*
  %228 = select i1 %218, i8* %226, i8* %227
  br i1 %218, label %235, label %229

229:                                              ; preds = %224
  br i1 %206, label %254, label %230

230:                                              ; preds = %229
  %231 = ptrtoint i8* %226 to i64
  %232 = trunc i64 %231 to i8
  %233 = load i8, i8* %205, align 1
  %234 = icmp eq i8 %233, %232
  br i1 %234, label %236, label %251

235:                                              ; preds = %224
  br i1 %206, label %254, label %248

236:                                              ; preds = %230, %243
  %237 = phi i64 [ %240, %243 ], [ %221, %230 ]
  %238 = phi i8* [ %241, %243 ], [ %227, %230 ]
  %239 = phi i8* [ %244, %243 ], [ %205, %230 ]
  %240 = add i64 %237, -1
  %241 = getelementptr inbounds i8, i8* %238, i64 1
  %242 = icmp eq i64 %240, 0
  br i1 %242, label %254, label %243

243:                                              ; preds = %236
  %244 = getelementptr inbounds i8, i8* %239, i64 1
  %245 = load i8, i8* %241, align 1
  %246 = load i8, i8* %244, align 1
  %247 = icmp eq i8 %245, %246
  br i1 %247, label %236, label %251

248:                                              ; preds = %235
  %249 = call i32 @bcmp(i8* %228, i8* %205, i64 %201) #12
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %254, label %251

251:                                              ; preds = %243, %230, %248, %208
  %252 = add nuw nsw i64 %209, 1
  %253 = icmp eq i64 %252, %207
  br i1 %253, label %254, label %208

254:                                              ; preds = %229, %235, %248, %251, %236, %184
  %255 = phi i64 [ %190, %184 ], [ %200, %236 ], [ %200, %251 ], [ %200, %248 ], [ %200, %235 ], [ %200, %229 ]
  %256 = phi i64 [ %189, %184 ], [ %199, %236 ], [ %199, %251 ], [ %199, %248 ], [ %199, %235 ], [ %199, %229 ]
  %257 = phi i8 [ %187, %184 ], [ %196, %236 ], [ %196, %251 ], [ %196, %248 ], [ %196, %235 ], [ %196, %229 ]
  %258 = phi %"class.variations::Study_Experiment"* [ null, %184 ], [ %212, %236 ], [ %212, %229 ], [ %212, %235 ], [ %212, %248 ], [ null, %251 ]
  %259 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  %263 = load i64, i64* %15, align 8
  %264 = zext i8 %261 to i64
  %265 = select i1 %262, i64 %263, i64 %264
  %266 = icmp slt i8 %257, 0
  %267 = select i1 %266, i64 %256, i64 %255
  %268 = icmp eq i64 %265, %267
  br i1 %268, label %269, label %298

269:                                              ; preds = %254
  %270 = load i8*, i8** %14, align 8
  %271 = select i1 %262, i8* %270, i8* %13
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %275 = select i1 %266, i8* %273, i8* %274
  %276 = icmp eq i64 %265, 0
  br i1 %262, label %283, label %277

277:                                              ; preds = %269
  br i1 %276, label %296, label %278

278:                                              ; preds = %277
  %279 = ptrtoint i8* %270 to i64
  %280 = trunc i64 %279 to i8
  %281 = load i8, i8* %275, align 1
  %282 = icmp eq i8 %281, %280
  br i1 %282, label %284, label %298

283:                                              ; preds = %269
  br i1 %276, label %296, label %300

284:                                              ; preds = %278, %291
  %285 = phi i64 [ %288, %291 ], [ %264, %278 ]
  %286 = phi i8* [ %289, %291 ], [ %13, %278 ]
  %287 = phi i8* [ %292, %291 ], [ %275, %278 ]
  %288 = add i64 %285, -1
  %289 = getelementptr inbounds i8, i8* %286, i64 1
  %290 = icmp eq i64 %288, 0
  br i1 %290, label %296, label %291

291:                                              ; preds = %284
  %292 = getelementptr inbounds i8, i8* %287, i64 1
  %293 = load i8, i8* %289, align 1
  %294 = load i8, i8* %292, align 1
  %295 = icmp eq i8 %293, %294
  br i1 %295, label %284, label %298

296:                                              ; preds = %284, %283, %277
  %297 = icmp eq %"class.variations::Study_Experiment"* %258, null
  br i1 %297, label %326, label %311

298:                                              ; preds = %291, %278, %254
  %299 = icmp eq %"class.variations::Study_Experiment"* %258, null
  br i1 %299, label %326, label %305

300:                                              ; preds = %283
  %301 = call i32 @bcmp(i8* %271, i8* %275, i64 %265) #12
  %302 = icmp eq i32 %301, 0
  %303 = icmp ne %"class.variations::Study_Experiment"* %258, null
  br i1 %302, label %310, label %304

304:                                              ; preds = %300
  br i1 %303, label %305, label %326

305:                                              ; preds = %298, %304
  %306 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %258, i64 0, i32 10
  %307 = load i32, i32* %306, align 4
  %308 = add i32 %307, -1
  %309 = icmp ult i32 %308, 3
  br i1 %309, label %318, label %326

310:                                              ; preds = %300
  br i1 %303, label %311, label %326

311:                                              ; preds = %296, %310
  %312 = call fastcc zeroext i1 @_ZN10variations12_GLOBAL__N_123VariationParamsAreEqualERKNS_5StudyERKNS_16Study_ExperimentE(%"class.variations::Study"* dereferenceable(104) %7, %"class.variations::Study_Experiment"* nonnull dereferenceable(144) %258)
  br i1 %312, label %326, label %313

313:                                              ; preds = %311
  %314 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %258, i64 0, i32 10
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %315, -1
  %317 = icmp ult i32 %316, 3
  br i1 %317, label %322, label %326

318:                                              ; preds = %305
  %319 = sext i32 %308 to i64
  %320 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %319
  %321 = load i32, i32* %320, align 4
  br label %326

322:                                              ; preds = %313
  %323 = sext i32 %316 to i64
  %324 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  br label %326

326:                                              ; preds = %322, %313, %318, %305, %296, %298, %310, %311, %304
  %327 = phi i32 [ 1, %304 ], [ 0, %311 ], [ 0, %310 ], [ 1, %298 ], [ 1, %305 ], [ 0, %296 ], [ 1, %313 ], [ %321, %318 ], [ %325, %322 ]
  %328 = load i8, i8* %260, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %326
  %331 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %331) #11
  br label %332

332:                                              ; preds = %326, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret i32 %327
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10variations23VariationsSeedSimulator24SessionStudyGroupChangedERKNS_14ProcessedStudyERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::VariationsSeedSimulator"* nocapture readnone, %"class.variations::ProcessedStudy"* nocapture readonly dereferenceable(40), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %1, i64 0, i32 0
  %5 = load %"class.variations::Study"*, %"class.variations::Study"** %4, align 8
  %6 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %5, i64 0, i32 3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %72

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %5, i64 0, i32 3, i32 0, i32 3
  %11 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %23 = select i1 %15, i8* %21, i8* %22
  %24 = icmp eq i64 %19, 0
  %25 = sext i32 %7 to i64
  br label %26

26:                                               ; preds = %69, %9
  %27 = phi i64 [ 0, %9 ], [ %70, %69 ]
  %28 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %11, i64 0, i32 1, i64 %27
  %29 = bitcast i8** %28 to %"class.variations::Study_Experiment"**
  %30 = load %"class.variations::Study_Experiment"*, %"class.variations::Study_Experiment"** %29, align 8
  %31 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %30, i64 0, i32 5, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = icmp eq i64 %40, %19
  br i1 %41, label %42, label %69

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %46 = select i1 %36, i8* %44, i8* %45
  br i1 %36, label %53, label %47

47:                                               ; preds = %42
  br i1 %24, label %72, label %48

48:                                               ; preds = %47
  %49 = ptrtoint i8* %44 to i64
  %50 = trunc i64 %49 to i8
  %51 = load i8, i8* %23, align 1
  %52 = icmp eq i8 %51, %50
  br i1 %52, label %54, label %69

53:                                               ; preds = %42
  br i1 %24, label %72, label %66

54:                                               ; preds = %48, %61
  %55 = phi i64 [ %58, %61 ], [ %39, %48 ]
  %56 = phi i8* [ %59, %61 ], [ %45, %48 ]
  %57 = phi i8* [ %62, %61 ], [ %23, %48 ]
  %58 = add i64 %55, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %59, align 1
  %64 = load i8, i8* %62, align 1
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %54, label %69

66:                                               ; preds = %53
  %67 = tail call i32 @bcmp(i8* %46, i8* %23, i64 %19) #12
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %61, %48, %66, %26
  %70 = add nuw nsw i64 %27, 1
  %71 = icmp eq i64 %70, %25
  br i1 %71, label %72, label %26

72:                                               ; preds = %47, %53, %66, %69, %54, %3
  %73 = phi %"class.variations::Study_Experiment"* [ null, %3 ], [ %30, %54 ], [ %30, %47 ], [ %30, %53 ], [ %30, %66 ], [ null, %69 ]
  %74 = getelementptr inbounds %"class.variations::ProcessedStudy", %"class.variations::ProcessedStudy"* %1, i64 0, i32 3
  %75 = load i8, i8* %74, align 1, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %136, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %5, i64 0, i32 5, i32 0
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %78, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %82 to i64
  %87 = select i1 %83, i64 %85, i64 %86
  %88 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = zext i8 %90 to i64
  %95 = select i1 %91, i64 %93, i64 %94
  %96 = icmp eq i64 %87, %95
  br i1 %96, label %97, label %129

97:                                               ; preds = %77
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %101 = select i1 %83, i8* %99, i8* %100
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %105 = select i1 %91, i8* %103, i8* %104
  %106 = icmp eq i64 %87, 0
  br i1 %83, label %113, label %107

107:                                              ; preds = %97
  br i1 %106, label %136, label %108

108:                                              ; preds = %107
  %109 = ptrtoint i8* %99 to i64
  %110 = trunc i64 %109 to i8
  %111 = load i8, i8* %105, align 1
  %112 = icmp eq i8 %111, %110
  br i1 %112, label %114, label %129

113:                                              ; preds = %97
  br i1 %106, label %136, label %126

114:                                              ; preds = %108, %121
  %115 = phi i64 [ %118, %121 ], [ %86, %108 ]
  %116 = phi i8* [ %119, %121 ], [ %100, %108 ]
  %117 = phi i8* [ %122, %121 ], [ %105, %108 ]
  %118 = add i64 %115, -1
  %119 = getelementptr inbounds i8, i8* %116, i64 1
  %120 = icmp eq i64 %118, 0
  br i1 %120, label %136, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds i8, i8* %117, i64 1
  %123 = load i8, i8* %119, align 1
  %124 = load i8, i8* %122, align 1
  %125 = icmp eq i8 %123, %124
  br i1 %125, label %114, label %129

126:                                              ; preds = %113
  %127 = tail call i32 @bcmp(i8* %101, i8* %105, i64 %87) #12
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %121, %108, %126, %77
  %130 = icmp eq %"class.variations::Study_Experiment"* %73, null
  br i1 %130, label %171, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %73, i64 0, i32 10
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, -1
  %135 = icmp ult i32 %134, 3
  br i1 %135, label %159, label %171

136:                                              ; preds = %114, %126, %72, %107, %113
  %137 = icmp eq %"class.variations::Study_Experiment"* %73, null
  br i1 %137, label %171, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %73, i64 0, i32 9
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %152

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %73, i64 0, i32 1, i32 0, i64 0
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %152

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %73, i64 0, i32 10
  %149 = load i32, i32* %148, align 4
  %150 = add i32 %149, -1
  %151 = icmp ult i32 %150, 3
  br i1 %151, label %163, label %171

152:                                              ; preds = %142, %138
  %153 = tail call fastcc zeroext i1 @_ZN10variations12_GLOBAL__N_123VariationParamsAreEqualERKNS_5StudyERKNS_16Study_ExperimentE(%"class.variations::Study"* dereferenceable(104) %5, %"class.variations::Study_Experiment"* nonnull dereferenceable(144) %73)
  br i1 %153, label %171, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %73, i64 0, i32 10
  %156 = load i32, i32* %155, align 4
  %157 = add i32 %156, -1
  %158 = icmp ult i32 %157, 3
  br i1 %158, label %167, label %171

159:                                              ; preds = %131
  %160 = sext i32 %134 to i64
  %161 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  ret i32 %162

163:                                              ; preds = %147
  %164 = sext i32 %150 to i64
  %165 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %164
  %166 = load i32, i32* %165, align 4
  ret i32 %166

167:                                              ; preds = %154
  %168 = sext i32 %157 to i64
  %169 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %168
  %170 = load i32, i32* %169, align 4
  ret i32 %170

171:                                              ; preds = %154, %147, %131, %152, %136, %129
  %172 = phi i32 [ 1, %129 ], [ 1, %136 ], [ 0, %152 ], [ 1, %131 ], [ 1, %147 ], [ 1, %154 ]
  ret i32 %172
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE(%"class.variations::VariationsSeedSimulator"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10variations23VariationsSeedSimulator33ConvertExperimentTypeToChangeTypeENS_21Study_Experiment_TypeE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8

9:                                                ; preds = %2
  ret i32 1
}

declare zeroext i1 @_ZN10variations23VariationsSeedProcessor24ShouldStudyUseLowEntropyERKNS_5StudyE(%"class.variations::Study"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN10variations12_GLOBAL__N_123VariationParamsAreEqualERKNS_5StudyERKNS_16Study_ExperimentE(%"class.variations::Study"* nocapture readonly dereferenceable(104), %"class.variations::Study_Experiment"* nocapture readonly dereferenceable(144)) unnamed_addr #2 {
  %3 = alloca %"class.std::__1::map.42", align 8
  %4 = bitcast %"class.std::__1::map.42"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %5, align 8
  %10 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 4, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = call zeroext i1 @_ZN10variations18GetVariationParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %11, %"class.std::__1::map.42"* nonnull %3) #12
  %13 = load i64, i64* %7, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %1, i64 0, i32 3, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %14
  br i1 %17, label %18, label %97

18:                                               ; preds = %2
  %19 = icmp sgt i32 %14, 0
  br i1 %19, label %20, label %97

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.variations::Study_Experiment", %"class.variations::Study_Experiment"* %1, i64 0, i32 3, i32 0, i32 3
  %22 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0
  %23 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %21, align 8
  br label %24

24:                                               ; preds = %20, %92
  %25 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %23, %20 ], [ %36, %92 ]
  %26 = phi i64 [ 0, %20 ], [ %93, %92 ]
  %27 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %25, i64 0, i32 1, i64 %26
  %28 = bitcast i8** %27 to %"class.variations::Study_Experiment_Param"**
  %29 = load %"class.variations::Study_Experiment_Param"*, %"class.variations::Study_Experiment_Param"** %28, align 8
  %30 = getelementptr inbounds %"class.variations::Study_Experiment_Param", %"class.variations::Study_Experiment_Param"* %29, i64 0, i32 3, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.43"* nonnull %22, %"class.std::__1::basic_string"* dereferenceable(24) %31) #12
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %32, %8
  br i1 %33, label %97, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 7
  %36 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %21, align 8
  %37 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %36, i64 0, i32 1, i64 %26
  %38 = bitcast i8** %37 to %"class.variations::Study_Experiment_Param"**
  %39 = load %"class.variations::Study_Experiment_Param"*, %"class.variations::Study_Experiment_Param"** %38, align 8
  %40 = getelementptr inbounds %"class.variations::Study_Experiment_Param", %"class.variations::Study_Experiment_Param"* %39, i64 0, i32 4, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  %51 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp eq i64 %50, %58
  br i1 %59, label %60, label %97

60:                                               ; preds = %34
  %61 = bitcast %"class.std::__1::__tree_end_node"* %35 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %35 to i8*
  %64 = select i1 %45, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %68 = select i1 %54, i8* %66, i8* %67
  %69 = icmp eq i64 %50, 0
  br i1 %45, label %76, label %70

70:                                               ; preds = %60
  br i1 %69, label %92, label %71

71:                                               ; preds = %70
  %72 = ptrtoint i8* %62 to i64
  %73 = trunc i64 %72 to i8
  %74 = load i8, i8* %68, align 1
  %75 = icmp eq i8 %74, %73
  br i1 %75, label %77, label %97

76:                                               ; preds = %60
  br i1 %69, label %92, label %89

77:                                               ; preds = %71, %84
  %78 = phi i64 [ %81, %84 ], [ %49, %71 ]
  %79 = phi i8* [ %82, %84 ], [ %63, %71 ]
  %80 = phi i8* [ %85, %84 ], [ %68, %71 ]
  %81 = add i64 %78, -1
  %82 = getelementptr inbounds i8, i8* %79, i64 1
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds i8, i8* %80, i64 1
  %86 = load i8, i8* %82, align 1
  %87 = load i8, i8* %85, align 1
  %88 = icmp eq i8 %86, %87
  br i1 %88, label %77, label %97

89:                                               ; preds = %76
  %90 = call i32 @bcmp(i8* %64, i8* %68, i64 %50) #12
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %77, %89, %70, %76
  %93 = add nuw nsw i64 %26, 1
  %94 = load i32, i32* %15, align 8
  %95 = sext i32 %94 to i64
  %96 = icmp slt i64 %93, %95
  br i1 %96, label %24, label %97

97:                                               ; preds = %92, %24, %34, %89, %71, %84, %18, %2
  %98 = phi i1 [ false, %2 ], [ true, %18 ], [ false, %84 ], [ false, %71 ], [ true, %92 ], [ false, %24 ], [ false, %34 ], [ false, %89 ]
  %99 = getelementptr inbounds %"class.std::__1::map.42", %"class.std::__1::map.42"* %3, i64 0, i32 0
  %100 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %101 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %100, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.43"* nonnull %99, %"class.std::__1::__tree_node"* %101) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret i1 %98
}

declare void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.55"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.63"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.43"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %54

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 80) #11, !noalias !6
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !6
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !6
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #12, !noalias !6
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !6
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #12, !noalias !6
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12, !noalias !6
  %31 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %13 to %"class.std::__1::__tree_node"*
  %34 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %35 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #12
  %36 = bitcast i8* %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %29
  %44 = ptrtoint %"class.std::__1::__tree_node_base"* %41 to i64
  %45 = bitcast %"class.std::__1::__tree.43"* %0 to i64*
  store i64 %44, i64* %45, align 8
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %47

47:                                               ; preds = %43, %29
  %48 = phi %"class.std::__1::__tree_node_base"* [ %34, %29 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %50, %"class.std::__1::__tree_node_base"* %48) #12
  %51 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  br label %54

54:                                               ; preds = %47, %5
  %55 = phi i8 [ 1, %47 ], [ 0, %5 ]
  %56 = phi %"class.std::__1::__tree_node"* [ %33, %47 ], [ %10, %5 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %58 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %57, 0
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %58, i8 %55, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.43"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare %"class.base::FieldTrial"* @_ZN4base10FieldTrial25CreateSimulatedFieldTrialENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEiS5_d(i8*, i64, i32, i8*, i64, double) local_unnamed_addr #5

declare i8* @_ZNK10variations14ProcessedStudy24GetDefaultExperimentNameEv(%"class.variations::ProcessedStudy"*) local_unnamed_addr #5

declare i32 @_ZN4base10FieldTrial11AppendGroupERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.base::FieldTrial"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #5

declare void @_ZN4base10FieldTrial7DisableEv(%"class.base::FieldTrial"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base10FieldTrial10group_nameEv(%"class.base::FieldTrial"*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

declare zeroext i1 @_ZN10variations18GetVariationParamsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_3mapIS6_S6_NS0_4lessIS6_EENS4_INS0_4pairIS7_S6_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::map.42"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.43"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.43"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.43"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.43"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #12
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind
declare void @_ZN10variations14ProcessedStudyD1Ev(%"class.variations::ProcessedStudy"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10variations12_GLOBAL__N_123SimulateGroupAssignmentERKN4base10FieldTrial15EntropyProviderERKNS_14ProcessedStudyE: argument 0"}
!4 = distinct !{!4, !"_ZN10variations12_GLOBAL__N_123SimulateGroupAssignmentERKN4base10FieldTrial15EntropyProviderERKNS_14ProcessedStudyE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISR_EEEEEEDpOT_"}
