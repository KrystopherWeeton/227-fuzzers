; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_GrdProc.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_GrdProc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.CJBig2_GRDProc::ProgressiveArithDecodeState" = type { %"class.std::__1::unique_ptr"*, %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.2", %"class.fxcrt::UnownedPtr.3" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CJBig2_Image* }
%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.5", %"class.fxcrt::UnownedPtr.7" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.fxcrt::UnownedPtr.7" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { %class.CJBig2_ArithDecoder* }
%class.CJBig2_ArithDecoder = type { i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.0" }
%"class.fxcrt::UnownedPtr.0" = type { %class.CJBig2_BitStream* }
%class.CJBig2_BitStream = type <{ %"class.pdfium::span", i32, i32, i32, [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.1", i64 }
%"class.fxcrt::UnownedPtr.1" = type { i8* }
%"class.fxcrt::UnownedPtr.2" = type { %class.JBig2ArithCtx* }
%class.JBig2ArithCtx = type { i8, i32 }
%"class.fxcrt::UnownedPtr.3" = type { %class.PauseIndicatorIface* }
%class.PauseIndicatorIface = type { i32 (...)** }
%class.CJBig2_GRDProc = type <{ i8, i8, i8, i8, i32, i32, [4 x i8], %"class.fxcrt::UnownedPtr.4", [8 x i8], i32, [4 x i8], i8*, i32, i16, [2 x i8], i32, %struct.FX_RECT, [4 x i8] }>
%"class.fxcrt::UnownedPtr.4" = type { %class.CJBig2_Image* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* }

$_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZN12_GLOBAL__N_113kOptConstant1E = internal unnamed_addr constant [3 x i16] [i16 -25819, i16 1941, i16 229], align 2
@_ZN12_GLOBAL__N_113kOptConstant2E = internal unnamed_addr constant [3 x i16] [i16 6, i16 4, i16 1], align 2
@_ZN12_GLOBAL__N_113kOptConstant3E = internal unnamed_addr constant [3 x i16] [i16 -2048, i16 7680, i16 896], align 2
@_ZN12_GLOBAL__N_113kOptConstant4E = internal unnamed_addr constant [3 x i16] [i16 0, i16 1, i16 3], align 2
@_ZN12_GLOBAL__N_113kOptConstant5E = internal unnamed_addr constant [3 x i16] [i16 2032, i16 504, i16 124], align 2
@_ZN12_GLOBAL__N_113kOptConstant6E = internal unnamed_addr constant [3 x i16] [i16 31735, i16 3835, i16 445], align 2
@_ZN12_GLOBAL__N_113kOptConstant7E = internal unnamed_addr constant [3 x i16] [i16 2048, i16 512, i16 128], align 2
@_ZN12_GLOBAL__N_113kOptConstant8E = internal unnamed_addr constant [3 x i16] [i16 16, i16 8, i16 4], align 2
@_ZN12_GLOBAL__N_113kOptConstant9E = internal unnamed_addr constant [3 x i16] [i16 12, i16 9, i16 7], align 2
@_ZN12_GLOBAL__N_114kOptConstant10E = internal unnamed_addr constant [3 x i16] [i16 7, i16 15, i16 7], align 2
@_ZN12_GLOBAL__N_114kOptConstant11E = internal unnamed_addr constant [3 x i16] [i16 31, i16 31, i16 15], align 2
@_ZN12_GLOBAL__N_114kOptConstant12E = internal unnamed_addr constant [3 x i16] [i16 15, i16 7, i16 3], align 2
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

@_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC1Ev = hidden unnamed_addr alias void (%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*), void (%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC2Ev
@_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD1Ev = hidden unnamed_addr alias void (%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*), void (%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD2Ev
@_ZN14CJBig2_GRDProcC1Ev = hidden unnamed_addr alias void (%class.CJBig2_GRDProc*), void (%class.CJBig2_GRDProc*)* @_ZN14CJBig2_GRDProcC2Ev
@_ZN14CJBig2_GRDProcD1Ev = hidden unnamed_addr alias void (%class.CJBig2_GRDProc*), void (%class.CJBig2_GRDProc*)* @_ZN14CJBig2_GRDProcD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateC2Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %class.CJBig2_ArithDecoder** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CJBig2_GRDProc27ProgressiveArithDecodeStateD2Ev(%"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CJBig2_GRDProcC2Ev(%class.CJBig2_GRDProc* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %2, align 8
  %3 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 13
  store i16 0, i16* %5, align 4
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %7 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CJBig2_GRDProcD2Ev(%class.CJBig2_GRDProc* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14CJBig2_GRDProc16UseTemplate0Opt3Ev(%class.CJBig2_GRDProc* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 3
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, -1
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 2
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, -3
  br i1 %12, label %13, label %33

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 3
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, -1
  br i1 %16, label %17, label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 4
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 5
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -2
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 6
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, -2
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 7
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, -2
  br label %33

33:                                               ; preds = %29, %25, %21, %17, %13, %9, %5, %1
  %34 = phi i1 [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %32, %29 ]
  ret i1 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14CJBig2_GRDProc16UseTemplate1Opt3Ev(%class.CJBig2_GRDProc* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, -1
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14CJBig2_GRDProc17UseTemplate23Opt3Ev(%class.CJBig2_GRDProc* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, -1
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN14CJBig2_GRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = tail call zeroext i1 @_ZN12CJBig2_Image16IsValidImageSizeEii(i32 %5, i32 %7) #11
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #12
  %11 = bitcast i8* %10 to %class.CJBig2_Image*
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %6, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %11, i32 %12, i32 %13) #11
  br label %89

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 1
  switch i8 %16, label %77 [
    i8 0, label %17
    i8 1, label %53
    i8 2, label %65
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 3
  br i1 %20, label %21, label %51

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -1
  br i1 %24, label %25, label %51

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 2
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, -3
  br i1 %28, label %29, label %51

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, -1
  br i1 %32, label %33, label %51

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 4
  %35 = load i8, i8* %34, align 4
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %37, label %51

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 5
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, -2
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 6
  %43 = load i8, i8* %42, align 2
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 7
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, -2
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc15DecodeArithOpt3EP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 0)
  br label %89

51:                                               ; preds = %17, %21, %25, %29, %33, %37, %41, %45
  %52 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplateUnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 0)
  br label %89

53:                                               ; preds = %14
  %54 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 3
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, -1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc15DecodeArithOpt3EP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 1)
  br label %89

63:                                               ; preds = %53, %57
  %64 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplateUnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 1)
  br label %89

65:                                               ; preds = %14
  %66 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %67 = load i8, i8* %66, align 8
  %68 = icmp eq i8 %67, 2
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, -1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc15DecodeArithOpt3EP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 2)
  br label %89

75:                                               ; preds = %65, %69
  %76 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplateUnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2, i32 2)
  br label %89

77:                                               ; preds = %14
  %78 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %79 = load i8, i8* %78, align 8
  %80 = icmp eq i8 %79, 2
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, -1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplate3Opt3EP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2)
  br label %89

87:                                               ; preds = %77, %81
  %88 = tail call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc25DecodeArithTemplate3UnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* %0, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %2)
  br label %89

89:                                               ; preds = %85, %87, %73, %75, %61, %63, %49, %51, %9
  %90 = phi %class.CJBig2_Image* [ %86, %85 ], [ %88, %87 ], [ %74, %73 ], [ %76, %75 ], [ %62, %61 ], [ %64, %63 ], [ %50, %49 ], [ %52, %51 ], [ %11, %9 ]
  ret %class.CJBig2_Image* %90
}

declare zeroext i1 @_ZN12CJBig2_Image16IsValidImageSizeEii(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN14CJBig2_GRDProc15DecodeArithOpt3EP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %7 = tail call i8* @_Znwm(i64 32) #12
  %8 = bitcast i8* %7 to %class.CJBig2_Image*
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %8, i32 %9, i32 %10) #11
  %11 = ptrtoint i8* %7 to i64
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %288, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds i8, i8* %7, i64 24
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %5, align 4
  %21 = add i32 %20, 7
  %22 = lshr i32 %21, 3
  %23 = add nsw i32 %22, -1
  %24 = shl i32 %23, 3
  %25 = sub i32 %20, %24
  %26 = icmp eq i32 %3, 0
  %27 = load i32, i32* %6, align 8
  %28 = and i32 %27, 2147483647
  %29 = select i1 %26, i32 %28, i32 %27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %289, label %31

31:                                               ; preds = %16
  %32 = shl i32 %19, 1
  %33 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %34 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %1, i64 0, i32 0
  %35 = sext i32 %3 to i64
  %36 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant1E, i64 0, i64 %35
  %37 = sext i32 %19 to i64
  %38 = sub nsw i64 0, %37
  %39 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant4E, i64 0, i64 %35
  %40 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant5E, i64 0, i64 %35
  %41 = icmp sgt i32 %23, 0
  %42 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant6E, i64 0, i64 %35
  %43 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant8E, i64 0, i64 %35
  %44 = icmp sgt i32 %25, 0
  %45 = sext i32 %23 to i64
  %46 = sext i32 %32 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant2E, i64 0, i64 %35
  %49 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant3E, i64 0, i64 %35
  %50 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant7E, i64 0, i64 %35
  %51 = zext i32 %23 to i64
  %52 = zext i32 %23 to i64
  br label %53

53:                                               ; preds = %284, %31
  %54 = phi i32 [ 0, %31 ], [ %69, %284 ]
  %55 = phi i8* [ %14, %31 ], [ %285, %284 ]
  %56 = phi i32 [ 0, %31 ], [ %286, %284 ]
  %57 = load i8, i8* %33, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = load i8, i8* %34, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %288

62:                                               ; preds = %59
  %63 = load i16, i16* %36, align 2
  %64 = zext i16 %63 to i64
  %65 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %64
  %66 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %65) #11
  %67 = xor i32 %66, %54
  br label %68

68:                                               ; preds = %53, %62
  %69 = phi i32 [ %67, %62 ], [ %54, %53 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = add i32 %56, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* nonnull %8, i32 %56, i32 %72) #11
  br label %284

73:                                               ; preds = %68
  %74 = icmp ugt i32 %56, 1
  br i1 %74, label %75, label %191

75:                                               ; preds = %73
  %76 = getelementptr inbounds i8, i8* %55, i64 %47
  %77 = getelementptr inbounds i8, i8* %55, i64 %38
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i32
  %80 = load i16, i16* %48, align 2
  %81 = zext i16 %80 to i32
  %82 = shl i32 %79, %81
  %83 = load i8, i8* %77, align 1
  %84 = zext i8 %83 to i32
  %85 = load i16, i16* %49, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %82, %86
  %88 = load i16, i16* %39, align 2
  %89 = zext i16 %88 to i32
  %90 = lshr i32 %84, %89
  %91 = load i16, i16* %40, align 2
  %92 = zext i16 %91 to i32
  %93 = and i32 %90, %92
  %94 = or i32 %93, %87
  %95 = shl i32 %82, 8
  br i1 %41, label %96, label %149

96:                                               ; preds = %75, %144
  %97 = phi i64 [ %146, %144 ], [ 0, %75 ]
  %98 = phi i32 [ %147, %144 ], [ %95, %75 ]
  %99 = phi i8* [ %104, %144 ], [ %76, %75 ]
  %100 = phi i8* [ %103, %144 ], [ %77, %75 ]
  %101 = phi i32 [ %141, %144 ], [ %94, %75 ]
  %102 = phi i32 [ %112, %144 ], [ %84, %75 ]
  %103 = getelementptr inbounds i8, i8* %100, i64 1
  %104 = getelementptr inbounds i8, i8* %99, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl i32 %106, %81
  %108 = or i32 %107, %98
  %109 = shl i32 %102, 8
  %110 = load i8, i8* %103, align 1
  %111 = zext i8 %110 to i32
  %112 = or i32 %109, %111
  br label %113

113:                                              ; preds = %119, %96
  %114 = phi i32 [ 7, %96 ], [ %142, %119 ]
  %115 = phi i8 [ 0, %96 ], [ %125, %119 ]
  %116 = phi i32 [ %101, %96 ], [ %141, %119 ]
  %117 = load i8, i8* %34, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %288

119:                                              ; preds = %113
  %120 = zext i32 %116 to i64
  %121 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %120
  %122 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %121) #11
  %123 = shl i32 %122, %114
  %124 = trunc i32 %123 to i8
  %125 = or i8 %115, %124
  %126 = load i16, i16* %42, align 2
  %127 = zext i16 %126 to i32
  %128 = and i32 %116, %127
  %129 = shl nuw nsw i32 %128, 1
  %130 = or i32 %129, %122
  %131 = lshr i32 %108, %114
  %132 = load i16, i16* %50, align 2
  %133 = zext i16 %132 to i32
  %134 = and i32 %131, %133
  %135 = or i32 %130, %134
  %136 = add nuw nsw i32 %114, %89
  %137 = lshr i32 %112, %136
  %138 = load i16, i16* %43, align 2
  %139 = zext i16 %138 to i32
  %140 = and i32 %137, %139
  %141 = or i32 %135, %140
  %142 = add nsw i32 %114, -1
  %143 = icmp eq i32 %114, 0
  br i1 %143, label %144, label %113

144:                                              ; preds = %119
  %145 = getelementptr inbounds i8, i8* %55, i64 %97
  store i8 %125, i8* %145, align 1
  %146 = add nuw nsw i64 %97, 1
  %147 = shl i32 %108, 8
  %148 = icmp eq i64 %146, %52
  br i1 %148, label %149, label %96

149:                                              ; preds = %144, %75
  %150 = phi i32 [ %84, %75 ], [ %112, %144 ]
  %151 = phi i32 [ %94, %75 ], [ %141, %144 ]
  %152 = phi i32 [ %95, %75 ], [ %147, %144 ]
  %153 = shl i32 %150, 8
  br i1 %44, label %154, label %188

154:                                              ; preds = %149
  %155 = add nuw nsw i32 %89, 7
  br label %156

156:                                              ; preds = %162, %154
  %157 = phi i32 [ 0, %154 ], [ %186, %162 ]
  %158 = phi i8 [ 0, %154 ], [ %169, %162 ]
  %159 = phi i32 [ %151, %154 ], [ %185, %162 ]
  %160 = load i8, i8* %34, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %288

162:                                              ; preds = %156
  %163 = zext i32 %159 to i64
  %164 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %163
  %165 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %164) #11
  %166 = sub nsw i32 7, %157
  %167 = shl i32 %165, %166
  %168 = trunc i32 %167 to i8
  %169 = or i8 %158, %168
  %170 = load i16, i16* %42, align 2
  %171 = zext i16 %170 to i32
  %172 = and i32 %159, %171
  %173 = shl nuw nsw i32 %172, 1
  %174 = or i32 %173, %165
  %175 = lshr i32 %152, %166
  %176 = load i16, i16* %50, align 2
  %177 = zext i16 %176 to i32
  %178 = and i32 %175, %177
  %179 = or i32 %174, %178
  %180 = sub nsw i32 %155, %157
  %181 = lshr i32 %153, %180
  %182 = load i16, i16* %43, align 2
  %183 = zext i16 %182 to i32
  %184 = and i32 %181, %183
  %185 = or i32 %179, %184
  %186 = add nuw nsw i32 %157, 1
  %187 = icmp eq i32 %186, %25
  br i1 %187, label %188, label %156

188:                                              ; preds = %162, %149
  %189 = phi i8 [ 0, %149 ], [ %169, %162 ]
  %190 = getelementptr inbounds i8, i8* %55, i64 %45
  store i8 %189, i8* %190, align 1
  br label %284

191:                                              ; preds = %73
  %192 = getelementptr inbounds i8, i8* %55, i64 %38
  %193 = and i32 %56, 1
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = getelementptr inbounds i8, i8* %192, i64 1
  %197 = load i8, i8* %192, align 1
  %198 = zext i8 %197 to i32
  br label %199

199:                                              ; preds = %191, %195
  %200 = phi i8* [ %196, %195 ], [ %192, %191 ]
  %201 = phi i32 [ %198, %195 ], [ 0, %191 ]
  %202 = load i16, i16* %39, align 2
  %203 = zext i16 %202 to i32
  %204 = lshr i32 %201, %203
  %205 = load i16, i16* %40, align 2
  %206 = zext i16 %205 to i32
  %207 = and i32 %204, %206
  br i1 %41, label %208, label %248

208:                                              ; preds = %199
  %209 = add nuw nsw i32 %203, 7
  %210 = add nuw nsw i32 %203, 6
  %211 = add nuw nsw i32 %203, 5
  %212 = add nuw nsw i32 %203, 4
  %213 = add nuw nsw i32 %203, 3
  %214 = add nuw nsw i32 %203, 2
  %215 = add nuw nsw i32 %203, 1
  br label %216

216:                                              ; preds = %364, %208
  %217 = phi i64 [ 0, %208 ], [ %397, %364 ]
  %218 = phi i32 [ %207, %208 ], [ %395, %364 ]
  %219 = phi i32 [ %201, %208 ], [ %229, %364 ]
  %220 = phi i8* [ %200, %208 ], [ %228, %364 ]
  br i1 %194, label %221, label %227

221:                                              ; preds = %216
  %222 = shl i32 %219, 8
  %223 = getelementptr inbounds i8, i8* %220, i64 1
  %224 = load i8, i8* %220, align 1
  %225 = zext i8 %224 to i32
  %226 = or i32 %222, %225
  br label %227

227:                                              ; preds = %221, %216
  %228 = phi i8* [ %223, %221 ], [ %220, %216 ]
  %229 = phi i32 [ %226, %221 ], [ %219, %216 ]
  %230 = load i8, i8* %34, align 8, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %288

232:                                              ; preds = %227
  %233 = zext i32 %218 to i64
  %234 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %233
  %235 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %234) #11
  %236 = load i16, i16* %42, align 2
  %237 = zext i16 %236 to i32
  %238 = and i32 %218, %237
  %239 = shl nuw nsw i32 %238, 1
  %240 = or i32 %239, %235
  %241 = lshr i32 %229, %209
  %242 = load i16, i16* %43, align 2
  %243 = zext i16 %242 to i32
  %244 = and i32 %241, %243
  %245 = or i32 %240, %244
  %246 = load i8, i8* %34, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %292, label %288

248:                                              ; preds = %364, %199
  %249 = phi i32 [ %201, %199 ], [ %229, %364 ]
  %250 = phi i32 [ %207, %199 ], [ %395, %364 ]
  %251 = shl i32 %249, 8
  br i1 %44, label %252, label %281

252:                                              ; preds = %248
  %253 = add nuw nsw i32 %203, 7
  br label %254

254:                                              ; preds = %260, %252
  %255 = phi i32 [ 0, %252 ], [ %279, %260 ]
  %256 = phi i8 [ 0, %252 ], [ %267, %260 ]
  %257 = phi i32 [ %250, %252 ], [ %278, %260 ]
  %258 = load i8, i8* %34, align 8, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %288

260:                                              ; preds = %254
  %261 = zext i32 %257 to i64
  %262 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %261
  %263 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %262) #11
  %264 = sub nsw i32 7, %255
  %265 = shl i32 %263, %264
  %266 = trunc i32 %265 to i8
  %267 = or i8 %256, %266
  %268 = load i16, i16* %42, align 2
  %269 = zext i16 %268 to i32
  %270 = and i32 %257, %269
  %271 = shl nuw nsw i32 %270, 1
  %272 = or i32 %271, %263
  %273 = sub nsw i32 %253, %255
  %274 = lshr i32 %251, %273
  %275 = load i16, i16* %43, align 2
  %276 = zext i16 %275 to i32
  %277 = and i32 %274, %276
  %278 = or i32 %272, %277
  %279 = add nuw nsw i32 %255, 1
  %280 = icmp eq i32 %279, %25
  br i1 %280, label %281, label %254

281:                                              ; preds = %260, %248
  %282 = phi i8 [ 0, %248 ], [ %267, %260 ]
  %283 = getelementptr inbounds i8, i8* %55, i64 %45
  store i8 %282, i8* %283, align 1
  br label %284

284:                                              ; preds = %281, %188, %71
  %285 = getelementptr inbounds i8, i8* %55, i64 %37
  %286 = add nuw i32 %56, 1
  %287 = icmp eq i32 %286, %29
  br i1 %287, label %289, label %53

288:                                              ; preds = %59, %227, %232, %292, %304, %316, %328, %340, %352, %254, %156, %113, %4
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %8) #11
  tail call void @_ZdlPv(i8* nonnull %7) #12
  br label %289

289:                                              ; preds = %284, %16, %288
  %290 = phi i64 [ 0, %288 ], [ %11, %16 ], [ %11, %284 ]
  %291 = inttoptr i64 %290 to %class.CJBig2_Image*
  ret %class.CJBig2_Image* %291

292:                                              ; preds = %232
  %293 = zext i32 %245 to i64
  %294 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %293
  %295 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %294) #11
  %296 = and i32 %245, %237
  %297 = shl nuw nsw i32 %296, 1
  %298 = or i32 %297, %295
  %299 = lshr i32 %229, %210
  %300 = and i32 %299, %243
  %301 = or i32 %298, %300
  %302 = load i8, i8* %34, align 8, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %288

304:                                              ; preds = %292
  %305 = zext i32 %301 to i64
  %306 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %305
  %307 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %306) #11
  %308 = and i32 %301, %237
  %309 = shl nuw nsw i32 %308, 1
  %310 = or i32 %309, %307
  %311 = lshr i32 %229, %211
  %312 = and i32 %311, %243
  %313 = or i32 %310, %312
  %314 = load i8, i8* %34, align 8, !range !2
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %288

316:                                              ; preds = %304
  %317 = zext i32 %313 to i64
  %318 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %317
  %319 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %318) #11
  %320 = and i32 %313, %237
  %321 = shl nuw nsw i32 %320, 1
  %322 = or i32 %321, %319
  %323 = lshr i32 %229, %212
  %324 = and i32 %323, %243
  %325 = or i32 %322, %324
  %326 = load i8, i8* %34, align 8, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %288

328:                                              ; preds = %316
  %329 = zext i32 %325 to i64
  %330 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %329
  %331 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %330) #11
  %332 = and i32 %325, %237
  %333 = shl nuw nsw i32 %332, 1
  %334 = or i32 %333, %331
  %335 = lshr i32 %229, %213
  %336 = and i32 %335, %243
  %337 = or i32 %334, %336
  %338 = load i8, i8* %34, align 8, !range !2
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %288

340:                                              ; preds = %328
  %341 = zext i32 %337 to i64
  %342 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %341
  %343 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %342) #11
  %344 = and i32 %337, %237
  %345 = shl nuw nsw i32 %344, 1
  %346 = or i32 %345, %343
  %347 = lshr i32 %229, %214
  %348 = and i32 %347, %243
  %349 = or i32 %346, %348
  %350 = load i8, i8* %34, align 8, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %288

352:                                              ; preds = %340
  %353 = zext i32 %349 to i64
  %354 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %353
  %355 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %354) #11
  %356 = and i32 %349, %237
  %357 = shl nuw nsw i32 %356, 1
  %358 = or i32 %357, %355
  %359 = lshr i32 %229, %215
  %360 = and i32 %359, %243
  %361 = or i32 %358, %360
  %362 = load i8, i8* %34, align 8, !range !2
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %288

364:                                              ; preds = %352
  %365 = trunc i32 %235 to i8
  %366 = shl i8 %365, 7
  %367 = trunc i32 %295 to i8
  %368 = shl i8 %367, 6
  %369 = or i8 %366, %368
  %370 = trunc i32 %307 to i8
  %371 = shl i8 %370, 5
  %372 = or i8 %369, %371
  %373 = trunc i32 %319 to i8
  %374 = shl i8 %373, 4
  %375 = or i8 %372, %374
  %376 = trunc i32 %331 to i8
  %377 = shl i8 %376, 3
  %378 = or i8 %375, %377
  %379 = trunc i32 %343 to i8
  %380 = shl i8 %379, 2
  %381 = or i8 %378, %380
  %382 = trunc i32 %355 to i8
  %383 = shl i8 %382, 1
  %384 = or i8 %381, %383
  %385 = zext i32 %361 to i64
  %386 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %385
  %387 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %386) #11
  %388 = trunc i32 %387 to i8
  %389 = or i8 %384, %388
  %390 = and i32 %361, %237
  %391 = shl nuw nsw i32 %390, 1
  %392 = or i32 %391, %387
  %393 = lshr i32 %229, %203
  %394 = and i32 %393, %243
  %395 = or i32 %392, %394
  %396 = getelementptr inbounds i8, i8* %55, i64 %217
  store i8 %389, i8* %396, align 1
  %397 = add nuw nsw i64 %217, 1
  %398 = icmp eq i64 %397, %51
  br i1 %398, label %248, label %216
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplateUnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtxi(%class.CJBig2_GRDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %7 = tail call i8* @_Znwm(i64 32) #12
  %8 = bitcast i8* %7 to %class.CJBig2_Image*
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %8, i32 %9, i32 %10) #11
  %11 = ptrtoint i8* %7 to i64
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %190, label %16

16:                                               ; preds = %4
  tail call void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image* nonnull %8, i1 zeroext false) #11
  %17 = load i32, i32* %6, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %191, label %19

19:                                               ; preds = %16
  %20 = sub i32 4, %3
  %21 = sdiv i32 %3, 2
  %22 = srem i32 %3, 2
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %24 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %1, i64 0, i32 0
  %25 = sext i32 %3 to i64
  %26 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant1E, i64 0, i64 %25
  %27 = and i32 %22, 255
  %28 = add nuw nsw i32 %27, 1
  %29 = icmp eq i32 %3, 1
  %30 = and i32 %21, 255
  %31 = sub nsw i32 2, %30
  %32 = sub nsw i32 1, %30
  %33 = icmp slt i32 %3, 2
  %34 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %35 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %36 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %37 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %38 = and i32 %20, 255
  %39 = add nuw nsw i32 %38, 1
  %40 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_113kOptConstant9E, i64 0, i64 %25
  %41 = icmp eq i32 %3, 0
  %42 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 2
  %43 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 3
  %44 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 4
  %45 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 5
  %46 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 6
  %47 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 7
  %48 = add nuw nsw i32 %27, 2
  %49 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_114kOptConstant10E, i64 0, i64 %25
  %50 = sub nsw i32 3, %30
  %51 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_114kOptConstant11E, i64 0, i64 %25
  %52 = getelementptr inbounds [3 x i16], [3 x i16]* @_ZN12_GLOBAL__N_114kOptConstant12E, i64 0, i64 %25
  br label %53

53:                                               ; preds = %19, %186
  %54 = phi i32 [ 0, %19 ], [ %187, %186 ]
  %55 = phi i32 [ 0, %19 ], [ %68, %186 ]
  %56 = load i8, i8* %23, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %53
  %59 = load i8, i8* %24, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %190

61:                                               ; preds = %58
  %62 = load i16, i16* %26, align 2
  %63 = zext i16 %62 to i64
  %64 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %63
  %65 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %64) #11
  %66 = xor i32 %65, %55
  br label %67

67:                                               ; preds = %53, %61
  %68 = phi i32 [ %66, %61 ], [ %55, %53 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = add i32 %54, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* nonnull %8, i32 %54, i32 %71) #11
  br label %186

72:                                               ; preds = %67
  %73 = add i32 %54, -2
  %74 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %28, i32 %73) #11
  %75 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %27, i32 %73) #11
  %76 = shl i32 %75, 1
  %77 = or i32 %76, %74
  br i1 %29, label %78, label %82

78:                                               ; preds = %72
  %79 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 0, i32 %73) #11
  %80 = shl i32 %79, 2
  %81 = or i32 %80, %77
  br label %82

82:                                               ; preds = %78, %72
  %83 = phi i32 [ %81, %78 ], [ %77, %72 ]
  %84 = add i32 %54, -1
  %85 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %31, i32 %84) #11
  %86 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %32, i32 %84) #11
  %87 = shl i32 %86, 1
  %88 = or i32 %87, %85
  br i1 %33, label %89, label %93

89:                                               ; preds = %82
  %90 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 0, i32 %84) #11
  %91 = shl i32 %90, 2
  %92 = or i32 %91, %88
  br label %93

93:                                               ; preds = %89, %82
  %94 = phi i32 [ %92, %89 ], [ %88, %82 ]
  %95 = load i32, i32* %5, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %186, label %97

97:                                               ; preds = %93, %162
  %98 = phi i32 [ %183, %162 ], [ 0, %93 ]
  %99 = phi i32 [ %182, %162 ], [ 0, %93 ]
  %100 = phi i32 [ %177, %162 ], [ %94, %93 ]
  %101 = phi i32 [ %170, %162 ], [ %83, %93 ]
  %102 = load i8, i8* %34, align 2, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %97
  %105 = load %class.CJBig2_Image*, %class.CJBig2_Image** %35, align 8
  %106 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %105, i32 %98, i32 %54) #11
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %162

108:                                              ; preds = %104, %97
  %109 = load i8, i8* %24, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %190

111:                                              ; preds = %108
  %112 = load i8, i8* %36, align 8
  %113 = sext i8 %112 to i32
  %114 = add i32 %98, %113
  %115 = load i8, i8* %37, align 1
  %116 = sext i8 %115 to i32
  %117 = add i32 %54, %116
  %118 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %114, i32 %117) #11
  %119 = shl i32 %118, %38
  %120 = shl i32 %100, %39
  %121 = load i16, i16* %40, align 2
  %122 = zext i16 %121 to i32
  %123 = shl i32 %101, %122
  %124 = or i32 %120, %99
  %125 = or i32 %124, %119
  %126 = or i32 %125, %123
  br i1 %41, label %127, label %155

127:                                              ; preds = %111
  %128 = load i8, i8* %42, align 2
  %129 = sext i8 %128 to i32
  %130 = add i32 %98, %129
  %131 = load i8, i8* %43, align 1
  %132 = sext i8 %131 to i32
  %133 = add i32 %54, %132
  %134 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %130, i32 %133) #11
  %135 = shl i32 %134, 10
  %136 = or i32 %135, %126
  %137 = load i8, i8* %44, align 4
  %138 = sext i8 %137 to i32
  %139 = add i32 %98, %138
  %140 = load i8, i8* %45, align 1
  %141 = sext i8 %140 to i32
  %142 = add i32 %54, %141
  %143 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %139, i32 %142) #11
  %144 = shl i32 %143, 11
  %145 = or i32 %136, %144
  %146 = load i8, i8* %46, align 2
  %147 = sext i8 %146 to i32
  %148 = add i32 %98, %147
  %149 = load i8, i8* %47, align 1
  %150 = sext i8 %149 to i32
  %151 = add i32 %54, %150
  %152 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %148, i32 %151) #11
  %153 = shl i32 %152, 15
  %154 = or i32 %145, %153
  br label %155

155:                                              ; preds = %127, %111
  %156 = phi i32 [ %154, %127 ], [ %126, %111 ]
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %157
  %159 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %158) #11
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %155
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* nonnull %8, i32 %98, i32 %54, i32 %159) #11
  br label %162

162:                                              ; preds = %104, %155, %161
  %163 = phi i32 [ 0, %104 ], [ 0, %155 ], [ %159, %161 ]
  %164 = shl i32 %101, 1
  %165 = add i32 %48, %98
  %166 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %165, i32 %73) #11
  %167 = or i32 %166, %164
  %168 = load i16, i16* %49, align 2
  %169 = zext i16 %168 to i32
  %170 = and i32 %167, %169
  %171 = shl i32 %100, 1
  %172 = add i32 %50, %98
  %173 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %8, i32 %172, i32 %84) #11
  %174 = or i32 %173, %171
  %175 = load i16, i16* %51, align 2
  %176 = zext i16 %175 to i32
  %177 = and i32 %174, %176
  %178 = shl nsw i32 %99, 1
  %179 = or i32 %163, %178
  %180 = load i16, i16* %52, align 2
  %181 = zext i16 %180 to i32
  %182 = and i32 %179, %181
  %183 = add nuw i32 %98, 1
  %184 = load i32, i32* %5, align 4
  %185 = icmp ult i32 %183, %184
  br i1 %185, label %97, label %186

186:                                              ; preds = %162, %93, %70
  %187 = add nuw i32 %54, 1
  %188 = load i32, i32* %6, align 8
  %189 = icmp ult i32 %187, %188
  br i1 %189, label %53, label %191

190:                                              ; preds = %58, %108, %4
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %8) #11
  tail call void @_ZdlPv(i8* nonnull %7) #12
  br label %191

191:                                              ; preds = %186, %16, %190
  %192 = phi i64 [ 0, %190 ], [ %11, %16 ], [ %11, %186 ]
  %193 = inttoptr i64 %192 to %class.CJBig2_Image*
  ret %class.CJBig2_Image* %193
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN14CJBig2_GRDProc24DecodeArithTemplate3Opt3EP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %6 = tail call i8* @_Znwm(i64 32) #12
  %7 = bitcast i8* %6 to %class.CJBig2_Image*
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %5, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %7, i32 %8, i32 %9) #11
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %160, label %15

15:                                               ; preds = %3
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, 7
  %18 = lshr i32 %17, 3
  %19 = add nsw i32 %18, -1
  %20 = shl i32 %19, 3
  %21 = sub i32 %16, %20
  %22 = load i32, i32* %5, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %161, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %6, i64 24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %29 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %1, i64 0, i32 0
  %30 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 405
  %31 = sext i32 %27 to i64
  %32 = sub nsw i64 0, %31
  %33 = icmp sgt i32 %19, 0
  %34 = icmp sgt i32 %21, 0
  %35 = sext i32 %19 to i64
  %36 = zext i32 %19 to i64
  %37 = zext i32 %19 to i64
  br label %38

38:                                               ; preds = %24, %155
  %39 = phi i32 [ 0, %24 ], [ %51, %155 ]
  %40 = phi i8* [ %13, %24 ], [ %156, %155 ]
  %41 = phi i32 [ 0, %24 ], [ %157, %155 ]
  %42 = load i8, i8* %28, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = load i8, i8* %29, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %160

47:                                               ; preds = %44
  %48 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %30) #11
  %49 = xor i32 %48, %39
  br label %50

50:                                               ; preds = %38, %47
  %51 = phi i32 [ %49, %47 ], [ %39, %38 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = add i32 %41, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* nonnull %7, i32 %41, i32 %54) #11
  br label %155

55:                                               ; preds = %50
  %56 = icmp eq i32 %41, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  br i1 %33, label %119, label %117

58:                                               ; preds = %55
  %59 = getelementptr inbounds i8, i8* %40, i64 %32
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = lshr i32 %61, 1
  %63 = and i32 %62, 112
  %64 = shl nuw nsw i32 %61, 8
  br i1 %33, label %68, label %65

65:                                               ; preds = %236, %58
  %66 = phi i32 [ %63, %58 ], [ %267, %236 ]
  %67 = phi i32 [ %64, %58 ], [ %270, %236 ]
  br i1 %34, label %91, label %114

68:                                               ; preds = %58, %236
  %69 = phi i64 [ %269, %236 ], [ 0, %58 ]
  %70 = phi i32 [ %270, %236 ], [ %64, %58 ]
  %71 = phi i8* [ %73, %236 ], [ %59, %58 ]
  %72 = phi i32 [ %267, %236 ], [ %63, %58 ]
  %73 = getelementptr inbounds i8, i8* %71, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %70, %75
  %77 = load i8, i8* %29, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %160

79:                                               ; preds = %68
  %80 = zext i32 %72 to i64
  %81 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %80
  %82 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %81) #11
  %83 = shl i32 %72, 1
  %84 = and i32 %83, 1006
  %85 = lshr exact i32 %70, 8
  %86 = and i32 %85, 16
  %87 = or i32 %86, %84
  %88 = or i32 %87, %82
  %89 = load i8, i8* %29, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %164, label %160

91:                                               ; preds = %65, %97
  %92 = phi i32 [ %112, %97 ], [ 0, %65 ]
  %93 = phi i8 [ %104, %97 ], [ 0, %65 ]
  %94 = phi i32 [ %111, %97 ], [ %66, %65 ]
  %95 = load i8, i8* %29, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %160

97:                                               ; preds = %91
  %98 = zext i32 %94 to i64
  %99 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %98
  %100 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %99) #11
  %101 = sub nsw i32 7, %92
  %102 = shl i32 %100, %101
  %103 = trunc i32 %102 to i8
  %104 = or i8 %93, %103
  %105 = shl i32 %94, 1
  %106 = and i32 %105, 1006
  %107 = sub nsw i32 8, %92
  %108 = lshr i32 %67, %107
  %109 = and i32 %108, 16
  %110 = or i32 %109, %106
  %111 = or i32 %110, %100
  %112 = add nuw nsw i32 %92, 1
  %113 = icmp eq i32 %112, %21
  br i1 %113, label %114, label %91

114:                                              ; preds = %97, %65
  %115 = phi i8 [ 0, %65 ], [ %104, %97 ]
  %116 = getelementptr inbounds i8, i8* %40, i64 %35
  store i8 %115, i8* %116, align 1
  br label %155

117:                                              ; preds = %326, %57
  %118 = phi i32 [ 0, %57 ], [ %354, %326 ]
  br i1 %34, label %133, label %152

119:                                              ; preds = %57, %326
  %120 = phi i64 [ %356, %326 ], [ 0, %57 ]
  %121 = phi i32 [ %354, %326 ], [ 0, %57 ]
  %122 = load i8, i8* %29, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %160

124:                                              ; preds = %119
  %125 = zext i32 %121 to i64
  %126 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %125
  %127 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %126) #11
  %128 = shl i32 %121, 1
  %129 = and i32 %128, 1006
  %130 = or i32 %127, %129
  %131 = load i8, i8* %29, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %272, label %160

133:                                              ; preds = %117, %139
  %134 = phi i32 [ %150, %139 ], [ 0, %117 ]
  %135 = phi i8 [ %146, %139 ], [ 0, %117 ]
  %136 = phi i32 [ %149, %139 ], [ %118, %117 ]
  %137 = load i8, i8* %29, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %160

139:                                              ; preds = %133
  %140 = zext i32 %136 to i64
  %141 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %140
  %142 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %141) #11
  %143 = sub nsw i32 7, %134
  %144 = shl i32 %142, %143
  %145 = trunc i32 %144 to i8
  %146 = or i8 %135, %145
  %147 = shl i32 %136, 1
  %148 = and i32 %147, 1006
  %149 = or i32 %142, %148
  %150 = add nuw nsw i32 %134, 1
  %151 = icmp eq i32 %150, %21
  br i1 %151, label %152, label %133

152:                                              ; preds = %139, %117
  %153 = phi i8 [ 0, %117 ], [ %146, %139 ]
  %154 = getelementptr inbounds i8, i8* %40, i64 %35
  store i8 %153, i8* %154, align 1
  br label %155

155:                                              ; preds = %152, %114, %53
  %156 = getelementptr inbounds i8, i8* %40, i64 %31
  %157 = add nuw i32 %41, 1
  %158 = load i32, i32* %5, align 8
  %159 = icmp ult i32 %157, %158
  br i1 %159, label %38, label %161

160:                                              ; preds = %44, %68, %79, %164, %176, %188, %200, %212, %224, %91, %119, %124, %272, %281, %290, %299, %308, %317, %133, %3
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %7) #11
  tail call void @_ZdlPv(i8* nonnull %6) #12
  br label %161

161:                                              ; preds = %155, %15, %160
  %162 = phi i64 [ 0, %160 ], [ %10, %15 ], [ %10, %155 ]
  %163 = inttoptr i64 %162 to %class.CJBig2_Image*
  ret %class.CJBig2_Image* %163

164:                                              ; preds = %79
  %165 = zext i32 %88 to i64
  %166 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %165
  %167 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %166) #11
  %168 = shl i32 %88, 1
  %169 = and i32 %168, 1006
  %170 = lshr exact i32 %70, 7
  %171 = and i32 %170, 16
  %172 = or i32 %171, %169
  %173 = or i32 %172, %167
  %174 = load i8, i8* %29, align 8, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %160

176:                                              ; preds = %164
  %177 = zext i32 %173 to i64
  %178 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %177
  %179 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %178) #11
  %180 = shl i32 %173, 1
  %181 = and i32 %180, 1006
  %182 = lshr exact i32 %70, 6
  %183 = and i32 %182, 16
  %184 = or i32 %183, %181
  %185 = or i32 %184, %179
  %186 = load i8, i8* %29, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %160

188:                                              ; preds = %176
  %189 = zext i32 %185 to i64
  %190 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %189
  %191 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %190) #11
  %192 = shl i32 %185, 1
  %193 = and i32 %192, 1006
  %194 = lshr exact i32 %70, 5
  %195 = and i32 %194, 16
  %196 = or i32 %195, %193
  %197 = or i32 %196, %191
  %198 = load i8, i8* %29, align 8, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %160

200:                                              ; preds = %188
  %201 = zext i32 %197 to i64
  %202 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %201
  %203 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %202) #11
  %204 = shl i32 %197, 1
  %205 = and i32 %204, 1006
  %206 = lshr exact i32 %70, 4
  %207 = and i32 %206, 16
  %208 = or i32 %207, %205
  %209 = or i32 %208, %203
  %210 = load i8, i8* %29, align 8, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %160

212:                                              ; preds = %200
  %213 = zext i32 %209 to i64
  %214 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %213
  %215 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %214) #11
  %216 = shl i32 %209, 1
  %217 = and i32 %216, 1006
  %218 = lshr i32 %75, 3
  %219 = and i32 %218, 16
  %220 = or i32 %219, %217
  %221 = or i32 %220, %215
  %222 = load i8, i8* %29, align 8, !range !2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %160

224:                                              ; preds = %212
  %225 = zext i32 %221 to i64
  %226 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %225
  %227 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %226) #11
  %228 = shl i32 %221, 1
  %229 = and i32 %228, 1006
  %230 = lshr i32 %75, 2
  %231 = and i32 %230, 16
  %232 = or i32 %231, %229
  %233 = or i32 %232, %227
  %234 = load i8, i8* %29, align 8, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %160

236:                                              ; preds = %224
  %237 = trunc i32 %82 to i8
  %238 = shl i8 %237, 7
  %239 = trunc i32 %167 to i8
  %240 = shl i8 %239, 6
  %241 = or i8 %238, %240
  %242 = trunc i32 %179 to i8
  %243 = shl i8 %242, 5
  %244 = or i8 %241, %243
  %245 = trunc i32 %191 to i8
  %246 = shl i8 %245, 4
  %247 = or i8 %244, %246
  %248 = trunc i32 %203 to i8
  %249 = shl i8 %248, 3
  %250 = or i8 %247, %249
  %251 = trunc i32 %215 to i8
  %252 = shl i8 %251, 2
  %253 = or i8 %250, %252
  %254 = trunc i32 %227 to i8
  %255 = shl i8 %254, 1
  %256 = or i8 %253, %255
  %257 = zext i32 %233 to i64
  %258 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %257
  %259 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %258) #11
  %260 = trunc i32 %259 to i8
  %261 = or i8 %256, %260
  %262 = shl i32 %233, 1
  %263 = and i32 %262, 1006
  %264 = lshr i32 %75, 1
  %265 = and i32 %264, 16
  %266 = or i32 %265, %263
  %267 = or i32 %266, %259
  %268 = getelementptr inbounds i8, i8* %40, i64 %69
  store i8 %261, i8* %268, align 1
  %269 = add nuw nsw i64 %69, 1
  %270 = shl i32 %76, 8
  %271 = icmp eq i64 %269, %36
  br i1 %271, label %65, label %68

272:                                              ; preds = %124
  %273 = zext i32 %130 to i64
  %274 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %273
  %275 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %274) #11
  %276 = shl i32 %130, 1
  %277 = and i32 %276, 1006
  %278 = or i32 %275, %277
  %279 = load i8, i8* %29, align 8, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %160

281:                                              ; preds = %272
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %282
  %284 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %283) #11
  %285 = shl i32 %278, 1
  %286 = and i32 %285, 1006
  %287 = or i32 %284, %286
  %288 = load i8, i8* %29, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %290, label %160

290:                                              ; preds = %281
  %291 = zext i32 %287 to i64
  %292 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %291
  %293 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %292) #11
  %294 = shl i32 %287, 1
  %295 = and i32 %294, 1006
  %296 = or i32 %293, %295
  %297 = load i8, i8* %29, align 8, !range !2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %160

299:                                              ; preds = %290
  %300 = zext i32 %296 to i64
  %301 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %300
  %302 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %301) #11
  %303 = shl i32 %296, 1
  %304 = and i32 %303, 1006
  %305 = or i32 %302, %304
  %306 = load i8, i8* %29, align 8, !range !2
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %308, label %160

308:                                              ; preds = %299
  %309 = zext i32 %305 to i64
  %310 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %309
  %311 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %310) #11
  %312 = shl i32 %305, 1
  %313 = and i32 %312, 1006
  %314 = or i32 %311, %313
  %315 = load i8, i8* %29, align 8, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %160

317:                                              ; preds = %308
  %318 = zext i32 %314 to i64
  %319 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %318
  %320 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %319) #11
  %321 = shl i32 %314, 1
  %322 = and i32 %321, 1006
  %323 = or i32 %320, %322
  %324 = load i8, i8* %29, align 8, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %326, label %160

326:                                              ; preds = %317
  %327 = trunc i32 %127 to i8
  %328 = shl i8 %327, 7
  %329 = trunc i32 %275 to i8
  %330 = shl i8 %329, 6
  %331 = or i8 %328, %330
  %332 = trunc i32 %284 to i8
  %333 = shl i8 %332, 5
  %334 = or i8 %331, %333
  %335 = trunc i32 %293 to i8
  %336 = shl i8 %335, 4
  %337 = or i8 %334, %336
  %338 = trunc i32 %302 to i8
  %339 = shl i8 %338, 3
  %340 = or i8 %337, %339
  %341 = trunc i32 %311 to i8
  %342 = shl i8 %341, 2
  %343 = or i8 %340, %342
  %344 = trunc i32 %320 to i8
  %345 = shl i8 %344, 1
  %346 = or i8 %343, %345
  %347 = zext i32 %323 to i64
  %348 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %347
  %349 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %348) #11
  %350 = trunc i32 %349 to i8
  %351 = or i8 %346, %350
  %352 = shl i32 %323, 1
  %353 = and i32 %352, 1006
  %354 = or i32 %349, %353
  %355 = getelementptr inbounds i8, i8* %40, i64 %120
  store i8 %351, i8* %355, align 1
  %356 = add nuw nsw i64 %120, 1
  %357 = icmp eq i64 %356, %37
  br i1 %357, label %117, label %119
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_Image* @_ZN14CJBig2_GRDProc25DecodeArithTemplate3UnoptEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* nocapture readonly, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %6 = tail call i8* @_Znwm(i64 32) #12
  %7 = bitcast i8* %6 to %class.CJBig2_Image*
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %5, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %7, i32 %8, i32 %9) #11
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %97, label %15

15:                                               ; preds = %3
  tail call void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image* nonnull %7, i1 zeroext false) #11
  %16 = load i32, i32* %5, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %1, i64 0, i32 0
  %21 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 405
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %25 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  br label %26

26:                                               ; preds = %18, %93
  %27 = phi i32 [ 0, %18 ], [ %94, %93 ]
  %28 = phi i32 [ 0, %18 ], [ %38, %93 ]
  %29 = load i8, i8* %19, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = load i8, i8* %20, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %97

34:                                               ; preds = %31
  %35 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %21) #11
  %36 = xor i32 %35, %28
  br label %37

37:                                               ; preds = %26, %34
  %38 = phi i32 [ %36, %34 ], [ %28, %26 ]
  %39 = icmp eq i32 %38, 1
  %40 = add i32 %27, -1
  br i1 %39, label %41, label %42

41:                                               ; preds = %37
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* nonnull %7, i32 %27, i32 %40) #11
  br label %93

42:                                               ; preds = %37
  %43 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %7, i32 1, i32 %40) #11
  %44 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %7, i32 0, i32 %40) #11
  %45 = load i32, i32* %4, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %93, label %47

47:                                               ; preds = %42
  %48 = shl i32 %44, 1
  %49 = or i32 %48, %43
  br label %50

50:                                               ; preds = %47, %80
  %51 = phi i32 [ %90, %80 ], [ 0, %47 ]
  %52 = phi i32 [ %89, %80 ], [ 0, %47 ]
  %53 = phi i32 [ %86, %80 ], [ %49, %47 ]
  %54 = load i8, i8* %22, align 2, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %50
  %57 = load %class.CJBig2_Image*, %class.CJBig2_Image** %23, align 8
  %58 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %57, i32 %51, i32 %27) #11
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %80

60:                                               ; preds = %56, %50
  %61 = load i8, i8* %24, align 8
  %62 = sext i8 %61 to i32
  %63 = add i32 %51, %62
  %64 = load i8, i8* %25, align 1
  %65 = sext i8 %64 to i32
  %66 = add i32 %27, %65
  %67 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %7, i32 %63, i32 %66) #11
  %68 = load i8, i8* %20, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %97

70:                                               ; preds = %60
  %71 = shl i32 %67, 4
  %72 = shl i32 %53, 5
  %73 = or i32 %72, %52
  %74 = or i32 %73, %71
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %2, i64 %75
  %77 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %76) #11
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %70
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* nonnull %7, i32 %51, i32 %27, i32 %77) #11
  br label %80

80:                                               ; preds = %56, %79, %70
  %81 = phi i32 [ 0, %70 ], [ %77, %79 ], [ 0, %56 ]
  %82 = shl i32 %53, 1
  %83 = add i32 %51, 2
  %84 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* nonnull %7, i32 %83, i32 %40) #11
  %85 = or i32 %84, %82
  %86 = and i32 %85, 31
  %87 = shl nuw nsw i32 %52, 1
  %88 = or i32 %81, %87
  %89 = and i32 %88, 15
  %90 = add nuw i32 %51, 1
  %91 = load i32, i32* %4, align 4
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %50, label %93

93:                                               ; preds = %80, %42, %41
  %94 = add nuw i32 %27, 1
  %95 = load i32, i32* %5, align 8
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %26, label %98

97:                                               ; preds = %31, %60, %3
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %7) #11
  tail call void @_ZdlPv(i8* nonnull %6) #12
  br label %98

98:                                               ; preds = %93, %15, %97
  %99 = phi i64 [ 0, %97 ], [ %10, %15 ], [ %10, %93 ]
  %100 = inttoptr i64 %99 to %class.CJBig2_Image*
  ret %class.CJBig2_Image* %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #4

declare void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image*, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image*, i1 zeroext) local_unnamed_addr #4

declare i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image*, i32, i32) local_unnamed_addr #4

declare void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc16StartDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 @_ZN12CJBig2_Image16IsValidImageSizeEii(i32 %4, i32 %6) #11
  %8 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  br i1 %7, label %10, label %9

9:                                                ; preds = %2
  store i32 4, i32* %8, align 8
  br label %44

10:                                               ; preds = %2
  store i32 2, i32* %8, align 8
  %11 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.CJBig2_Image*, %class.CJBig2_Image** %13, align 8
  %15 = icmp eq %class.CJBig2_Image* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = tail call i8* @_Znwm(i64 32) #12
  %18 = bitcast i8* %17 to %class.CJBig2_Image*
  %19 = load i32, i32* %3, align 4
  %20 = load i32, i32* %5, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %18, i32 %19, i32 %20) #11
  %21 = ptrtoint i8* %17 to i64
  %22 = load %class.CJBig2_Image*, %class.CJBig2_Image** %13, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %class.CJBig2_Image* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %22) #11
  %26 = bitcast %class.CJBig2_Image* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  %27 = load %class.CJBig2_Image*, %class.CJBig2_Image** %13, align 8
  br label %28

28:                                               ; preds = %10, %16, %25
  %29 = phi %class.CJBig2_Image* [ %18, %16 ], [ %27, %25 ], [ %14, %10 ]
  %30 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %29, i64 0, i32 0, i32 1, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %13, align 8
  %34 = icmp eq %class.CJBig2_Image* %29, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %29) #11
  %36 = bitcast %class.CJBig2_Image* %29 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %33, %35
  store i32 -1, i32* %8, align 8
  br label %44

38:                                               ; preds = %28
  tail call void @_ZN12CJBig2_Image4FillEb(%class.CJBig2_Image* %29, i1 zeroext false) #11
  %39 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 13
  store i16 1, i16* %39, align 4
  %40 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  store i8* null, i8** %41, align 8
  %42 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  store i32 0, i32* %42, align 8
  %43 = tail call i32 @_ZN14CJBig2_GRDProc22ProgressiveDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* %0, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1)
  br label %44

44:                                               ; preds = %37, %38, %9
  %45 = phi i32 [ 4, %9 ], [ %43, %38 ], [ -1, %37 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc22ProgressiveDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.std::__1::function"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 1
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 2
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 3
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 4
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 5
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 6
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1, i64 7
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::function"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  store i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_, i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)** %16, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %17, align 8
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 1
  switch i8 %20, label %135 [
    i8 0, label %21
    i8 1, label %75
    i8 2, label %105
  ]

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 3
  br i1 %24, label %25, label %54

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -1
  br i1 %28, label %29, label %54

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 2
  %31 = load i8, i8* %30, align 2
  %32 = icmp eq i8 %31, -3
  br i1 %32, label %33, label %54

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, -1
  br i1 %36, label %37, label %54

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 4
  %39 = load i8, i8* %38, align 4
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %54

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 5
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 6
  %47 = load i8, i8* %46, align 2
  %48 = icmp eq i8 %47, -2
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 7
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, -2
  %53 = select i1 %52, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate0Opt3EPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }
  br label %54

54:                                               ; preds = %49, %21, %25, %29, %33, %37, %41, %45
  %55 = phi { i64, i64 } [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %45 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %41 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %37 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %33 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %29 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %25 ], [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %21 ], [ %53, %49 ]
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = extractvalue { i64, i64 } %55, 1
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %165, label %59

59:                                               ; preds = %54
  %60 = trunc i64 %57 to i8
  %61 = lshr i64 %57, 8
  %62 = trunc i64 %61 to i8
  %63 = lshr i64 %57, 16
  %64 = trunc i64 %63 to i8
  %65 = lshr i64 %57, 24
  %66 = trunc i64 %65 to i8
  %67 = lshr i64 %57, 32
  %68 = trunc i64 %67 to i8
  %69 = lshr i64 %57, 40
  %70 = trunc i64 %69 to i8
  %71 = lshr i64 %57, 48
  %72 = trunc i64 %71 to i8
  %73 = lshr i64 %57, 56
  %74 = trunc i64 %73 to i8
  br label %165

75:                                               ; preds = %2
  %76 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 3
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, -1
  %83 = select i1 %82, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate1Opt3EPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate1UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi { i64, i64 } [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate1UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %75 ], [ %83, %79 ]
  %86 = extractvalue { i64, i64 } %85, 0
  %87 = extractvalue { i64, i64 } %85, 1
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %165, label %89

89:                                               ; preds = %84
  %90 = trunc i64 %87 to i8
  %91 = lshr i64 %87, 8
  %92 = trunc i64 %91 to i8
  %93 = lshr i64 %87, 16
  %94 = trunc i64 %93 to i8
  %95 = lshr i64 %87, 24
  %96 = trunc i64 %95 to i8
  %97 = lshr i64 %87, 32
  %98 = trunc i64 %97 to i8
  %99 = lshr i64 %87, 40
  %100 = trunc i64 %99 to i8
  %101 = lshr i64 %87, 48
  %102 = trunc i64 %101 to i8
  %103 = lshr i64 %87, 56
  %104 = trunc i64 %103 to i8
  br label %165

105:                                              ; preds = %2
  %106 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %107 = load i8, i8* %106, align 8
  %108 = icmp eq i8 %107, 2
  br i1 %108, label %109, label %114

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, -1
  %113 = select i1 %112, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate2Opt3EPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate2UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }
  br label %114

114:                                              ; preds = %109, %105
  %115 = phi { i64, i64 } [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate2UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %105 ], [ %113, %109 ]
  %116 = extractvalue { i64, i64 } %115, 0
  %117 = extractvalue { i64, i64 } %115, 1
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %165, label %119

119:                                              ; preds = %114
  %120 = trunc i64 %117 to i8
  %121 = lshr i64 %117, 8
  %122 = trunc i64 %121 to i8
  %123 = lshr i64 %117, 16
  %124 = trunc i64 %123 to i8
  %125 = lshr i64 %117, 24
  %126 = trunc i64 %125 to i8
  %127 = lshr i64 %117, 32
  %128 = trunc i64 %127 to i8
  %129 = lshr i64 %117, 40
  %130 = trunc i64 %129 to i8
  %131 = lshr i64 %117, 48
  %132 = trunc i64 %131 to i8
  %133 = lshr i64 %117, 56
  %134 = trunc i64 %133 to i8
  br label %165

135:                                              ; preds = %2
  %136 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %137 = load i8, i8* %136, align 8
  %138 = icmp eq i8 %137, 2
  br i1 %138, label %139, label %144

139:                                              ; preds = %135
  %140 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %141, -1
  %143 = select i1 %142, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate3Opt3EPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate3UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }
  br label %144

144:                                              ; preds = %139, %135
  %145 = phi { i64, i64 } [ { i64 ptrtoint (i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate3UnoptEPNS_27ProgressiveArithDecodeStateE to i64), i64 0 }, %135 ], [ %143, %139 ]
  %146 = extractvalue { i64, i64 } %145, 0
  %147 = extractvalue { i64, i64 } %145, 1
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %165, label %149

149:                                              ; preds = %144
  %150 = trunc i64 %147 to i8
  %151 = lshr i64 %147, 8
  %152 = trunc i64 %151 to i8
  %153 = lshr i64 %147, 16
  %154 = trunc i64 %153 to i8
  %155 = lshr i64 %147, 24
  %156 = trunc i64 %155 to i8
  %157 = lshr i64 %147, 32
  %158 = trunc i64 %157 to i8
  %159 = lshr i64 %147, 40
  %160 = trunc i64 %159 to i8
  %161 = lshr i64 %147, 48
  %162 = trunc i64 %161 to i8
  %163 = lshr i64 %147, 56
  %164 = trunc i64 %163 to i8
  br label %165

165:                                              ; preds = %149, %144, %119, %114, %89, %84, %59, %54
  %166 = phi i64 [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_ to i64), %54 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_ to i64), %59 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_ to i64), %84 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_ to i64), %89 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_ to i64), %114 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_ to i64), %119 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_ to i64), %144 ], [ ptrtoint (i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_ to i64), %149 ]
  %167 = phi i64 [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ to i64), %54 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %59 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ to i64), %84 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %89 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ to i64), %114 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %119 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ to i64), %144 ], [ ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIM14CJBig2_GRDProcF14FXCODEC_STATUSPNS4_27ProgressiveArithDecodeStateEEFS5_RS4_S7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ to i64), %149 ]
  %168 = phi i64 [ %56, %54 ], [ %56, %59 ], [ %86, %84 ], [ %86, %89 ], [ %116, %114 ], [ %116, %119 ], [ %146, %144 ], [ %146, %149 ]
  %169 = phi i8 [ undef, %54 ], [ %60, %59 ], [ undef, %84 ], [ %90, %89 ], [ undef, %114 ], [ %120, %119 ], [ undef, %144 ], [ %150, %149 ]
  %170 = phi i8 [ undef, %54 ], [ %62, %59 ], [ undef, %84 ], [ %92, %89 ], [ undef, %114 ], [ %122, %119 ], [ undef, %144 ], [ %152, %149 ]
  %171 = phi i8 [ undef, %54 ], [ %64, %59 ], [ undef, %84 ], [ %94, %89 ], [ undef, %114 ], [ %124, %119 ], [ undef, %144 ], [ %154, %149 ]
  %172 = phi i8 [ undef, %54 ], [ %66, %59 ], [ undef, %84 ], [ %96, %89 ], [ undef, %114 ], [ %126, %119 ], [ undef, %144 ], [ %156, %149 ]
  %173 = phi i8 [ undef, %54 ], [ %68, %59 ], [ undef, %84 ], [ %98, %89 ], [ undef, %114 ], [ %128, %119 ], [ undef, %144 ], [ %158, %149 ]
  %174 = phi i8 [ undef, %54 ], [ %70, %59 ], [ undef, %84 ], [ %100, %89 ], [ undef, %114 ], [ %130, %119 ], [ undef, %144 ], [ %160, %149 ]
  %175 = phi i8 [ undef, %54 ], [ %72, %59 ], [ undef, %84 ], [ %102, %89 ], [ undef, %114 ], [ %132, %119 ], [ undef, %144 ], [ %162, %149 ]
  %176 = phi i8 [ undef, %54 ], [ %74, %59 ], [ undef, %84 ], [ %104, %89 ], [ undef, %114 ], [ %134, %119 ], [ undef, %144 ], [ %164, %149 ]
  %177 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1
  %178 = bitcast %"struct.std::__1::__function::__policy_invoker"* %177 to i64*
  store i64 %166, i64* %178, align 8
  %179 = bitcast %"struct.std::__1::__function::__policy"** %17 to i64*
  store i64 %167, i64* %179, align 8
  %180 = bitcast %"class.std::__1::function"* %3 to i64*
  store i64 %168, i64* %180, align 8
  store i8 %169, i8* %8, align 8
  store i8 %170, i8* %9, align 1
  store i8 %171, i8* %10, align 2
  store i8 %172, i8* %11, align 1
  store i8 %173, i8* %12, align 4
  store i8 %174, i8* %13, align 1
  store i8 %175, i8* %14, align 2
  store i8 %176, i8* %15, align 1
  %181 = inttoptr i64 %166 to i32 (%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)*
  %182 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %183 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %class.CJBig2_Image*, %class.CJBig2_Image** %184, align 8
  %186 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0
  %187 = call i32 %181(%"union.std::__1::__function::__policy_storage"* nonnull %186, %class.CJBig2_GRDProc* dereferenceable(80) %0, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1) #11
  %188 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 %187, i32* %188, align 8
  %189 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 16, i32 0
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %185, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 16, i32 2
  store i32 %191, i32* %192, align 4
  %193 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 16, i32 1
  store i32 %5, i32* %193, align 4
  %194 = load i32, i32* %4, align 8
  %195 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 16, i32 3
  store i32 %194, i32* %195, align 4
  %196 = icmp eq i32 %187, 4
  br i1 %196, label %197, label %198

197:                                              ; preds = %165
  store i32 0, i32* %4, align 8
  br label %198

198:                                              ; preds = %197, %165
  %199 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %200 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %199, i64 0, i32 1
  %201 = load void (i8*)*, void (i8*)** %200, align 8
  %202 = icmp eq void (i8*)* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = load i8*, i8** %7, align 8
  call void %201(i8* %204) #11
  br label %205

205:                                              ; preds = %198, %203
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret i32 %187
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate0Opt3EPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %11 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 7
  %25 = lshr i32 %24, 3
  %26 = add nsw i32 %25, -1
  %27 = shl i32 %26, 3
  %28 = sub i32 %23, %27
  %29 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 2147483647
  %32 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %33, %31
  br i1 %34, label %35, label %246

35:                                               ; preds = %19
  %36 = shl i32 %21, 1
  %37 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %38 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %39 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %40 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 39717
  %41 = sext i32 %21 to i64
  %42 = sub nsw i64 0, %41
  %43 = icmp sgt i32 %26, 0
  %44 = icmp sgt i32 %28, 0
  %45 = sext i32 %26 to i64
  %46 = sext i32 %36 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  %49 = zext i32 %26 to i64
  %50 = zext i32 %26 to i64
  br label %51

51:                                               ; preds = %35, %242
  %52 = phi i32 [ %33, %35 ], [ %244, %242 ]
  %53 = load i8, i8* %37, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i32, i32* %39, align 8
  br label %65

57:                                               ; preds = %51
  %58 = load i8, i8* %38, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %248

60:                                               ; preds = %57
  %61 = load i32, i32* %39, align 8
  %62 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %40) #11
  %63 = xor i32 %62, %61
  store i32 %63, i32* %39, align 8
  %64 = load i32, i32* %32, align 8
  br label %65

65:                                               ; preds = %55, %60
  %66 = phi i32 [ %52, %55 ], [ %64, %60 ]
  %67 = phi i32 [ %56, %55 ], [ %63, %60 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = add i32 %66, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %66, i32 %70) #11
  br label %227

71:                                               ; preds = %65
  %72 = icmp ugt i32 %66, 1
  %73 = load i8*, i8** %11, align 8
  br i1 %72, label %74, label %154

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %73, i64 %47
  %76 = getelementptr inbounds i8, i8* %73, i64 %42
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 6
  %80 = load i8, i8* %76, align 1
  %81 = zext i8 %80 to i32
  %82 = and i32 %79, 14336
  %83 = and i32 %81, 240
  %84 = or i32 %82, %83
  %85 = shl nuw nsw i32 %78, 14
  br i1 %43, label %86, label %120

86:                                               ; preds = %74, %449
  %87 = phi i64 [ %484, %449 ], [ 0, %74 ]
  %88 = phi i32 [ %485, %449 ], [ %85, %74 ]
  %89 = phi i8* [ %94, %449 ], [ %75, %74 ]
  %90 = phi i8* [ %93, %449 ], [ %76, %74 ]
  %91 = phi i32 [ %481, %449 ], [ %84, %74 ]
  %92 = phi i32 [ %102, %449 ], [ %81, %74 ]
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  %94 = getelementptr inbounds i8, i8* %89, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 6
  %98 = or i32 %97, %88
  %99 = shl i32 %92, 8
  %100 = load i8, i8* %93, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %99, %101
  %103 = load i8, i8* %38, align 8, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %248

105:                                              ; preds = %86
  %106 = zext i32 %91 to i64
  %107 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %106
  %108 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %107) #11
  %109 = shl i32 %91, 1
  %110 = and i32 %109, 63470
  %111 = lshr exact i32 %88, 7
  %112 = and i32 %111, 2048
  %113 = shl i32 %92, 1
  %114 = and i32 %113, 16
  %115 = or i32 %112, %110
  %116 = or i32 %115, %114
  %117 = or i32 %116, %108
  %118 = load i8, i8* %38, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %359, label %248

120:                                              ; preds = %449, %74
  %121 = phi i32 [ %81, %74 ], [ %102, %449 ]
  %122 = phi i32 [ %84, %74 ], [ %481, %449 ]
  %123 = phi i32 [ %85, %74 ], [ %485, %449 ]
  %124 = shl i32 %121, 8
  br i1 %44, label %125, label %150

125:                                              ; preds = %120, %131
  %126 = phi i32 [ %148, %131 ], [ 0, %120 ]
  %127 = phi i8 [ %138, %131 ], [ 0, %120 ]
  %128 = phi i32 [ %147, %131 ], [ %122, %120 ]
  %129 = load i8, i8* %38, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %248

131:                                              ; preds = %125
  %132 = zext i32 %128 to i64
  %133 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %132
  %134 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %133) #11
  %135 = sub nsw i32 7, %126
  %136 = shl i32 %134, %135
  %137 = trunc i32 %136 to i8
  %138 = or i8 %127, %137
  %139 = shl i32 %128, 1
  %140 = and i32 %139, 63470
  %141 = lshr i32 %123, %135
  %142 = and i32 %141, 2048
  %143 = lshr i32 %124, %135
  %144 = and i32 %143, 16
  %145 = or i32 %142, %140
  %146 = or i32 %145, %144
  %147 = or i32 %146, %134
  %148 = add nuw nsw i32 %126, 1
  %149 = icmp eq i32 %148, %28
  br i1 %149, label %150, label %125

150:                                              ; preds = %131, %120
  %151 = phi i8 [ 0, %120 ], [ %138, %131 ]
  %152 = load i8*, i8** %11, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 %45
  store i8 %151, i8* %153, align 1
  br label %227

154:                                              ; preds = %71
  %155 = getelementptr inbounds i8, i8* %73, i64 %42
  %156 = and i32 %66, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds i8, i8* %155, i64 1
  %160 = load i8, i8* %155, align 1
  %161 = zext i8 %160 to i32
  br label %162

162:                                              ; preds = %154, %158
  %163 = phi i8* [ %159, %158 ], [ %155, %154 ]
  %164 = phi i32 [ %161, %158 ], [ 0, %154 ]
  %165 = and i32 %164, 240
  br i1 %43, label %166, label %197

166:                                              ; preds = %162, %357
  %167 = phi i32 [ %358, %357 ], [ %66, %162 ]
  %168 = phi i64 [ %355, %357 ], [ 0, %162 ]
  %169 = phi i32 [ %352, %357 ], [ %165, %162 ]
  %170 = phi i32 [ %182, %357 ], [ %164, %162 ]
  %171 = phi i8* [ %181, %357 ], [ %163, %162 ]
  %172 = and i32 %167, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %166
  %175 = shl i32 %170, 8
  %176 = getelementptr inbounds i8, i8* %171, i64 1
  %177 = load i8, i8* %171, align 1
  %178 = zext i8 %177 to i32
  %179 = or i32 %175, %178
  br label %180

180:                                              ; preds = %166, %174
  %181 = phi i8* [ %176, %174 ], [ %171, %166 ]
  %182 = phi i32 [ %179, %174 ], [ %170, %166 ]
  %183 = load i8, i8* %38, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %248

185:                                              ; preds = %180
  %186 = zext i32 %169 to i64
  %187 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %186
  %188 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %187) #11
  %189 = shl i32 %169, 1
  %190 = and i32 %189, 63470
  %191 = lshr i32 %182, 7
  %192 = and i32 %191, 16
  %193 = or i32 %192, %190
  %194 = or i32 %193, %188
  %195 = load i8, i8* %38, align 8, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %250, label %248

197:                                              ; preds = %322, %162
  %198 = phi i32 [ %164, %162 ], [ %182, %322 ]
  %199 = phi i32 [ %165, %162 ], [ %352, %322 ]
  %200 = shl i32 %198, 8
  br i1 %44, label %201, label %223

201:                                              ; preds = %197, %207
  %202 = phi i32 [ %221, %207 ], [ 0, %197 ]
  %203 = phi i8 [ %214, %207 ], [ 0, %197 ]
  %204 = phi i32 [ %220, %207 ], [ %199, %197 ]
  %205 = load i8, i8* %38, align 8, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %248

207:                                              ; preds = %201
  %208 = zext i32 %204 to i64
  %209 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %208
  %210 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %209) #11
  %211 = sub nsw i32 7, %202
  %212 = shl i32 %210, %211
  %213 = trunc i32 %212 to i8
  %214 = or i8 %203, %213
  %215 = shl i32 %204, 1
  %216 = and i32 %215, 63470
  %217 = lshr i32 %200, %211
  %218 = and i32 %217, 16
  %219 = or i32 %218, %216
  %220 = or i32 %219, %210
  %221 = add nuw nsw i32 %202, 1
  %222 = icmp eq i32 %221, %28
  br i1 %222, label %223, label %201

223:                                              ; preds = %207, %197
  %224 = phi i8 [ 0, %197 ], [ %214, %207 ]
  %225 = load i8*, i8** %11, align 8
  %226 = getelementptr inbounds i8, i8* %225, i64 %45
  store i8 %224, i8* %226, align 1
  br label %227

227:                                              ; preds = %223, %150, %69
  %228 = load i8*, i8** %11, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %41
  store i8* %229, i8** %11, align 8
  %230 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %48, align 8
  %231 = icmp eq %class.PauseIndicatorIface* %230, null
  br i1 %231, label %242, label %232

232:                                              ; preds = %227
  %233 = bitcast %class.PauseIndicatorIface* %230 to i1 (%class.PauseIndicatorIface*)***
  %234 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %233, align 8
  %235 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %234, i64 2
  %236 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %235, align 8
  %237 = tail call zeroext i1 %236(%class.PauseIndicatorIface* nonnull %230) #11
  br i1 %237, label %238, label %242

238:                                              ; preds = %232
  %239 = load i32, i32* %32, align 8
  %240 = add i32 %239, 1
  store i32 %240, i32* %32, align 8
  %241 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %241, align 8
  br label %248

242:                                              ; preds = %227, %232
  %243 = load i32, i32* %32, align 8
  %244 = add i32 %243, 1
  store i32 %244, i32* %32, align 8
  %245 = icmp ult i32 %244, %31
  br i1 %245, label %51, label %246

246:                                              ; preds = %242, %19
  %247 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %247, align 8
  br label %248

248:                                              ; preds = %57, %180, %185, %250, %262, %274, %286, %298, %310, %201, %86, %105, %359, %374, %389, %404, %419, %434, %125, %246, %238
  %249 = phi i32 [ 3, %238 ], [ 4, %246 ], [ -1, %125 ], [ -1, %434 ], [ -1, %419 ], [ -1, %404 ], [ -1, %389 ], [ -1, %374 ], [ -1, %359 ], [ -1, %105 ], [ -1, %86 ], [ -1, %201 ], [ -1, %310 ], [ -1, %298 ], [ -1, %286 ], [ -1, %274 ], [ -1, %262 ], [ -1, %250 ], [ -1, %185 ], [ -1, %180 ], [ -1, %57 ]
  ret i32 %249

250:                                              ; preds = %185
  %251 = zext i32 %194 to i64
  %252 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %251
  %253 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %252) #11
  %254 = shl i32 %194, 1
  %255 = and i32 %254, 63470
  %256 = lshr i32 %182, 6
  %257 = and i32 %256, 16
  %258 = or i32 %257, %255
  %259 = or i32 %258, %253
  %260 = load i8, i8* %38, align 8, !range !2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %262, label %248

262:                                              ; preds = %250
  %263 = zext i32 %259 to i64
  %264 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %263
  %265 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %264) #11
  %266 = shl i32 %259, 1
  %267 = and i32 %266, 63470
  %268 = lshr i32 %182, 5
  %269 = and i32 %268, 16
  %270 = or i32 %269, %267
  %271 = or i32 %270, %265
  %272 = load i8, i8* %38, align 8, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %248

274:                                              ; preds = %262
  %275 = zext i32 %271 to i64
  %276 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %275
  %277 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %276) #11
  %278 = shl i32 %271, 1
  %279 = and i32 %278, 63470
  %280 = lshr i32 %182, 4
  %281 = and i32 %280, 16
  %282 = or i32 %281, %279
  %283 = or i32 %282, %277
  %284 = load i8, i8* %38, align 8, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %248

286:                                              ; preds = %274
  %287 = zext i32 %283 to i64
  %288 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %287
  %289 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %288) #11
  %290 = shl i32 %283, 1
  %291 = and i32 %290, 63470
  %292 = lshr i32 %182, 3
  %293 = and i32 %292, 16
  %294 = or i32 %293, %291
  %295 = or i32 %294, %289
  %296 = load i8, i8* %38, align 8, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %248

298:                                              ; preds = %286
  %299 = zext i32 %295 to i64
  %300 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %299
  %301 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %300) #11
  %302 = shl i32 %295, 1
  %303 = and i32 %302, 63470
  %304 = lshr i32 %182, 2
  %305 = and i32 %304, 16
  %306 = or i32 %305, %303
  %307 = or i32 %306, %301
  %308 = load i8, i8* %38, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %310, label %248

310:                                              ; preds = %298
  %311 = zext i32 %307 to i64
  %312 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %311
  %313 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %312) #11
  %314 = shl i32 %307, 1
  %315 = and i32 %314, 63470
  %316 = lshr i32 %182, 1
  %317 = and i32 %316, 16
  %318 = or i32 %317, %315
  %319 = or i32 %318, %313
  %320 = load i8, i8* %38, align 8, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %248

322:                                              ; preds = %310
  %323 = trunc i32 %188 to i8
  %324 = shl i8 %323, 7
  %325 = trunc i32 %253 to i8
  %326 = shl i8 %325, 6
  %327 = or i8 %324, %326
  %328 = trunc i32 %265 to i8
  %329 = shl i8 %328, 5
  %330 = or i8 %327, %329
  %331 = trunc i32 %277 to i8
  %332 = shl i8 %331, 4
  %333 = or i8 %330, %332
  %334 = trunc i32 %289 to i8
  %335 = shl i8 %334, 3
  %336 = or i8 %333, %335
  %337 = trunc i32 %301 to i8
  %338 = shl i8 %337, 2
  %339 = or i8 %336, %338
  %340 = trunc i32 %313 to i8
  %341 = shl i8 %340, 1
  %342 = or i8 %339, %341
  %343 = zext i32 %319 to i64
  %344 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %343
  %345 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %344) #11
  %346 = trunc i32 %345 to i8
  %347 = or i8 %342, %346
  %348 = shl i32 %319, 1
  %349 = and i32 %348, 63470
  %350 = and i32 %182, 16
  %351 = or i32 %350, %349
  %352 = or i32 %351, %345
  %353 = load i8*, i8** %11, align 8
  %354 = getelementptr inbounds i8, i8* %353, i64 %168
  store i8 %347, i8* %354, align 1
  %355 = add nuw nsw i64 %168, 1
  %356 = icmp eq i64 %355, %49
  br i1 %356, label %197, label %357

357:                                              ; preds = %322
  %358 = load i32, i32* %32, align 8
  br label %166

359:                                              ; preds = %105
  %360 = zext i32 %117 to i64
  %361 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %360
  %362 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %361) #11
  %363 = shl i32 %117, 1
  %364 = and i32 %363, 63470
  %365 = lshr exact i32 %88, 6
  %366 = and i32 %365, 2048
  %367 = shl i32 %92, 2
  %368 = and i32 %367, 16
  %369 = or i32 %366, %364
  %370 = or i32 %369, %368
  %371 = or i32 %370, %362
  %372 = load i8, i8* %38, align 8, !range !2
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %248

374:                                              ; preds = %359
  %375 = zext i32 %371 to i64
  %376 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %375
  %377 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %376) #11
  %378 = shl i32 %371, 1
  %379 = and i32 %378, 63470
  %380 = lshr exact i32 %88, 5
  %381 = and i32 %380, 2048
  %382 = shl i32 %92, 3
  %383 = and i32 %382, 16
  %384 = or i32 %381, %379
  %385 = or i32 %384, %383
  %386 = or i32 %385, %377
  %387 = load i8, i8* %38, align 8, !range !2
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %389, label %248

389:                                              ; preds = %374
  %390 = zext i32 %386 to i64
  %391 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %390
  %392 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %391) #11
  %393 = shl i32 %386, 1
  %394 = and i32 %393, 63470
  %395 = lshr exact i32 %88, 4
  %396 = and i32 %395, 2048
  %397 = shl i32 %92, 4
  %398 = and i32 %397, 16
  %399 = or i32 %396, %394
  %400 = or i32 %399, %398
  %401 = or i32 %400, %392
  %402 = load i8, i8* %38, align 8, !range !2
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %404, label %248

404:                                              ; preds = %389
  %405 = zext i32 %401 to i64
  %406 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %405
  %407 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %406) #11
  %408 = shl i32 %401, 1
  %409 = and i32 %408, 63470
  %410 = lshr exact i32 %88, 3
  %411 = and i32 %410, 2048
  %412 = lshr i32 %101, 3
  %413 = and i32 %412, 16
  %414 = or i32 %411, %409
  %415 = or i32 %414, %413
  %416 = or i32 %415, %407
  %417 = load i8, i8* %38, align 8, !range !2
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %419, label %248

419:                                              ; preds = %404
  %420 = zext i32 %416 to i64
  %421 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %420
  %422 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %421) #11
  %423 = shl i32 %416, 1
  %424 = and i32 %423, 63470
  %425 = lshr exact i32 %98, 2
  %426 = and i32 %425, 2048
  %427 = lshr i32 %101, 2
  %428 = and i32 %427, 16
  %429 = or i32 %426, %424
  %430 = or i32 %429, %428
  %431 = or i32 %430, %422
  %432 = load i8, i8* %38, align 8, !range !2
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %248

434:                                              ; preds = %419
  %435 = zext i32 %431 to i64
  %436 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %435
  %437 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %436) #11
  %438 = shl i32 %431, 1
  %439 = and i32 %438, 63470
  %440 = lshr exact i32 %98, 1
  %441 = and i32 %440, 2048
  %442 = lshr i32 %101, 1
  %443 = and i32 %442, 16
  %444 = or i32 %441, %439
  %445 = or i32 %444, %443
  %446 = or i32 %445, %437
  %447 = load i8, i8* %38, align 8, !range !2
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %248

449:                                              ; preds = %434
  %450 = trunc i32 %108 to i8
  %451 = shl i8 %450, 7
  %452 = trunc i32 %362 to i8
  %453 = shl i8 %452, 6
  %454 = or i8 %451, %453
  %455 = trunc i32 %377 to i8
  %456 = shl i8 %455, 5
  %457 = or i8 %454, %456
  %458 = trunc i32 %392 to i8
  %459 = shl i8 %458, 4
  %460 = or i8 %457, %459
  %461 = trunc i32 %407 to i8
  %462 = shl i8 %461, 3
  %463 = or i8 %460, %462
  %464 = trunc i32 %422 to i8
  %465 = shl i8 %464, 2
  %466 = or i8 %463, %465
  %467 = trunc i32 %437 to i8
  %468 = shl i8 %467, 1
  %469 = or i8 %466, %468
  %470 = zext i32 %446 to i64
  %471 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %470
  %472 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %471) #11
  %473 = trunc i32 %472 to i8
  %474 = or i8 %469, %473
  %475 = shl i32 %446, 1
  %476 = and i32 %475, 63470
  %477 = and i32 %98, 2048
  %478 = and i32 %101, 16
  %479 = or i32 %477, %476
  %480 = or i32 %479, %478
  %481 = or i32 %480, %472
  %482 = load i8*, i8** %11, align 8
  %483 = getelementptr inbounds i8, i8* %482, i64 %87
  store i8 %474, i8* %483, align 1
  %484 = add nuw nsw i64 %87, 1
  %485 = shl i32 %98, 8
  %486 = icmp eq i64 %484, %50
  br i1 %486, label %120, label %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate0UnoptEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %183

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %20 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 39717
  %21 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %25 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %26 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 2
  %27 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 3
  %28 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 4
  %29 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 5
  %30 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 6
  %31 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 7
  %32 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  br label %33

33:                                               ; preds = %16, %178
  %34 = phi i32 [ %12, %16 ], [ %180, %178 ]
  %35 = load i8, i8* %17, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = load i32, i32* %19, align 8
  br label %47

39:                                               ; preds = %33
  %40 = load i8, i8* %18, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %185

42:                                               ; preds = %39
  %43 = load i32, i32* %19, align 8
  %44 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %20) #11
  %45 = xor i32 %44, %43
  store i32 %45, i32* %19, align 8
  %46 = load i32, i32* %11, align 8
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i32 [ %34, %37 ], [ %46, %42 ]
  %49 = phi i32 [ %38, %37 ], [ %45, %42 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = add i32 %48, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %48, i32 %52) #11
  br label %165

53:                                               ; preds = %47
  %54 = add i32 %48, -2
  %55 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %54) #11
  %56 = load i32, i32* %11, align 8
  %57 = add i32 %56, -2
  %58 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %57) #11
  %59 = load i32, i32* %11, align 8
  %60 = add i32 %59, -1
  %61 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 2, i32 %60) #11
  %62 = load i32, i32* %11, align 8
  %63 = add i32 %62, -1
  %64 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %63) #11
  %65 = load i32, i32* %11, align 8
  %66 = add i32 %65, -1
  %67 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %66) #11
  %68 = load i32, i32* %21, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %165, label %70

70:                                               ; preds = %53
  %71 = shl i32 %64, 1
  %72 = or i32 %71, %61
  %73 = shl i32 %67, 2
  %74 = or i32 %72, %73
  %75 = shl i32 %58, 1
  %76 = or i32 %75, %55
  br label %77

77:                                               ; preds = %70, %143
  %78 = phi i32 [ %162, %143 ], [ 0, %70 ]
  %79 = phi i32 [ %161, %143 ], [ 0, %70 ]
  %80 = phi i32 [ %158, %143 ], [ %74, %70 ]
  %81 = phi i32 [ %151, %143 ], [ %76, %70 ]
  %82 = load i8, i8* %22, align 2, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %77
  %85 = load %class.CJBig2_Image*, %class.CJBig2_Image** %23, align 8
  %86 = load i32, i32* %11, align 8
  %87 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %85, i32 %78, i32 %86) #11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %143

89:                                               ; preds = %84, %77
  %90 = load i8, i8* %24, align 8
  %91 = sext i8 %90 to i32
  %92 = add i32 %78, %91
  %93 = load i32, i32* %11, align 8
  %94 = load i8, i8* %25, align 1
  %95 = sext i8 %94 to i32
  %96 = add i32 %93, %95
  %97 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %92, i32 %96) #11
  %98 = load i8, i8* %26, align 2
  %99 = sext i8 %98 to i32
  %100 = add i32 %78, %99
  %101 = load i32, i32* %11, align 8
  %102 = load i8, i8* %27, align 1
  %103 = sext i8 %102 to i32
  %104 = add i32 %101, %103
  %105 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %100, i32 %104) #11
  %106 = load i8, i8* %28, align 4
  %107 = sext i8 %106 to i32
  %108 = add i32 %78, %107
  %109 = load i32, i32* %11, align 8
  %110 = load i8, i8* %29, align 1
  %111 = sext i8 %110 to i32
  %112 = add i32 %109, %111
  %113 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %108, i32 %112) #11
  %114 = load i8, i8* %30, align 2
  %115 = sext i8 %114 to i32
  %116 = add i32 %78, %115
  %117 = load i32, i32* %11, align 8
  %118 = load i8, i8* %31, align 1
  %119 = sext i8 %118 to i32
  %120 = add i32 %117, %119
  %121 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %116, i32 %120) #11
  %122 = load i8, i8* %18, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %185

124:                                              ; preds = %89
  %125 = shl i32 %97, 4
  %126 = shl i32 %80, 5
  %127 = shl i32 %105, 10
  %128 = shl i32 %113, 11
  %129 = shl i32 %81, 12
  %130 = shl i32 %121, 15
  %131 = or i32 %79, %129
  %132 = or i32 %131, %126
  %133 = or i32 %132, %125
  %134 = or i32 %133, %127
  %135 = or i32 %134, %128
  %136 = or i32 %135, %130
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %137
  %139 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %138) #11
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %124
  %142 = load i32, i32* %11, align 8
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* %6, i32 %78, i32 %142, i32 %139) #11
  br label %143

143:                                              ; preds = %84, %141, %124
  %144 = phi i32 [ 0, %124 ], [ %139, %141 ], [ 0, %84 ]
  %145 = shl i32 %81, 1
  %146 = add i32 %78, 2
  %147 = load i32, i32* %11, align 8
  %148 = add i32 %147, -2
  %149 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %146, i32 %148) #11
  %150 = or i32 %149, %145
  %151 = and i32 %150, 7
  %152 = shl i32 %80, 1
  %153 = add i32 %78, 3
  %154 = load i32, i32* %11, align 8
  %155 = add i32 %154, -1
  %156 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %153, i32 %155) #11
  %157 = or i32 %156, %152
  %158 = and i32 %157, 31
  %159 = shl nuw nsw i32 %79, 1
  %160 = or i32 %144, %159
  %161 = and i32 %160, 15
  %162 = add nuw i32 %78, 1
  %163 = load i32, i32* %21, align 4
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %77, label %165

165:                                              ; preds = %143, %53, %51
  %166 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %32, align 8
  %167 = icmp eq %class.PauseIndicatorIface* %166, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %165
  %169 = bitcast %class.PauseIndicatorIface* %166 to i1 (%class.PauseIndicatorIface*)***
  %170 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %169, align 8
  %171 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %170, i64 2
  %172 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %171, align 8
  %173 = tail call zeroext i1 %172(%class.PauseIndicatorIface* nonnull %166) #11
  br i1 %173, label %174, label %178

174:                                              ; preds = %168
  %175 = load i32, i32* %11, align 8
  %176 = add i32 %175, 1
  store i32 %176, i32* %11, align 8
  %177 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %177, align 8
  br label %185

178:                                              ; preds = %165, %168
  %179 = load i32, i32* %11, align 8
  %180 = add i32 %179, 1
  store i32 %180, i32* %11, align 8
  %181 = load i32, i32* %13, align 8
  %182 = icmp ult i32 %180, %181
  br i1 %182, label %33, label %183

183:                                              ; preds = %178, %2
  %184 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %184, align 8
  br label %185

185:                                              ; preds = %39, %89, %183, %174
  %186 = phi i32 [ 3, %174 ], [ 4, %183 ], [ -1, %89 ], [ -1, %39 ]
  ret i32 %186
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate1Opt3EPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %11 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 7
  %25 = lshr i32 %24, 3
  %26 = add nsw i32 %25, -1
  %27 = shl i32 %26, 3
  %28 = sub i32 %23, %27
  %29 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %34, label %264

34:                                               ; preds = %19
  %35 = shl i32 %21, 1
  %36 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %37 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %38 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %39 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 1941
  %40 = sext i32 %21 to i64
  %41 = sub nsw i64 0, %40
  %42 = icmp sgt i32 %26, 0
  %43 = icmp sgt i32 %28, 0
  %44 = sext i32 %26 to i64
  %45 = sext i32 %35 to i64
  %46 = sub nsw i64 0, %45
  %47 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  %48 = zext i32 %26 to i64
  %49 = zext i32 %26 to i64
  br label %50

50:                                               ; preds = %34, %259
  %51 = phi i32 [ %30, %34 ], [ %261, %259 ]
  %52 = load i8, i8* %36, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load i32, i32* %38, align 8
  br label %64

56:                                               ; preds = %50
  %57 = load i8, i8* %37, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %266

59:                                               ; preds = %56
  %60 = load i32, i32* %38, align 8
  %61 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %39) #11
  %62 = xor i32 %61, %60
  store i32 %62, i32* %38, align 8
  %63 = load i32, i32* %29, align 8
  br label %64

64:                                               ; preds = %54, %59
  %65 = phi i32 [ %51, %54 ], [ %63, %59 ]
  %66 = phi i32 [ %55, %54 ], [ %62, %59 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = add i32 %65, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %65, i32 %69) #11
  br label %244

70:                                               ; preds = %64
  %71 = icmp ugt i32 %65, 1
  %72 = load i8*, i8** %11, align 8
  br i1 %71, label %73, label %169

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %72, i64 %46
  %75 = getelementptr inbounds i8, i8* %72, i64 %41
  %76 = load i8, i8* %74, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 4
  %79 = load i8, i8* %75, align 1
  %80 = zext i8 %79 to i32
  %81 = and i32 %78, 3584
  %82 = lshr i32 %80, 1
  %83 = and i32 %82, 120
  %84 = or i32 %83, %81
  %85 = shl nuw nsw i32 %77, 12
  br i1 %42, label %86, label %134

86:                                               ; preds = %73, %128
  %87 = phi i64 [ %131, %128 ], [ 0, %73 ]
  %88 = phi i32 [ %132, %128 ], [ %85, %73 ]
  %89 = phi i8* [ %94, %128 ], [ %74, %73 ]
  %90 = phi i8* [ %93, %128 ], [ %75, %73 ]
  %91 = phi i32 [ %125, %128 ], [ %84, %73 ]
  %92 = phi i32 [ %102, %128 ], [ %80, %73 ]
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  %94 = getelementptr inbounds i8, i8* %89, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 4
  %98 = or i32 %97, %88
  %99 = shl i32 %92, 8
  %100 = load i8, i8* %93, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %99, %101
  br label %103

103:                                              ; preds = %109, %86
  %104 = phi i32 [ 7, %86 ], [ %126, %109 ]
  %105 = phi i8 [ 0, %86 ], [ %115, %109 ]
  %106 = phi i32 [ %91, %86 ], [ %125, %109 ]
  %107 = load i8, i8* %37, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %266

109:                                              ; preds = %103
  %110 = zext i32 %106 to i64
  %111 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %110
  %112 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %111) #11
  %113 = shl i32 %112, %104
  %114 = trunc i32 %113 to i8
  %115 = or i8 %105, %114
  %116 = shl i32 %106, 1
  %117 = and i32 %116, 7670
  %118 = lshr i32 %98, %104
  %119 = and i32 %118, 512
  %120 = add nuw nsw i32 %104, 1
  %121 = lshr i32 %102, %120
  %122 = and i32 %121, 8
  %123 = or i32 %119, %117
  %124 = or i32 %123, %122
  %125 = or i32 %124, %112
  %126 = add nsw i32 %104, -1
  %127 = icmp eq i32 %104, 0
  br i1 %127, label %128, label %103

128:                                              ; preds = %109
  %129 = load i8*, i8** %11, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %87
  store i8 %115, i8* %130, align 1
  %131 = add nuw nsw i64 %87, 1
  %132 = shl i32 %98, 8
  %133 = icmp eq i64 %131, %49
  br i1 %133, label %134, label %86

134:                                              ; preds = %128, %73
  %135 = phi i32 [ %80, %73 ], [ %102, %128 ]
  %136 = phi i32 [ %84, %73 ], [ %125, %128 ]
  %137 = phi i32 [ %85, %73 ], [ %132, %128 ]
  %138 = shl i32 %135, 8
  br i1 %43, label %139, label %165

139:                                              ; preds = %134, %145
  %140 = phi i32 [ %163, %145 ], [ 0, %134 ]
  %141 = phi i8 [ %152, %145 ], [ 0, %134 ]
  %142 = phi i32 [ %162, %145 ], [ %136, %134 ]
  %143 = load i8, i8* %37, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %266

145:                                              ; preds = %139
  %146 = zext i32 %142 to i64
  %147 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %146
  %148 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %147) #11
  %149 = sub nsw i32 7, %140
  %150 = shl i32 %148, %149
  %151 = trunc i32 %150 to i8
  %152 = or i8 %141, %151
  %153 = shl i32 %142, 1
  %154 = and i32 %153, 7670
  %155 = lshr i32 %137, %149
  %156 = and i32 %155, 512
  %157 = sub nsw i32 8, %140
  %158 = lshr i32 %138, %157
  %159 = and i32 %158, 8
  %160 = or i32 %156, %154
  %161 = or i32 %160, %159
  %162 = or i32 %161, %148
  %163 = add nuw nsw i32 %140, 1
  %164 = icmp eq i32 %163, %28
  br i1 %164, label %165, label %139

165:                                              ; preds = %145, %134
  %166 = phi i8 [ 0, %134 ], [ %152, %145 ]
  %167 = load i8*, i8** %11, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 %44
  store i8 %166, i8* %168, align 1
  br label %244

169:                                              ; preds = %70
  %170 = getelementptr inbounds i8, i8* %72, i64 %41
  %171 = and i32 %65, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds i8, i8* %170, i64 1
  %175 = load i8, i8* %170, align 1
  %176 = zext i8 %175 to i32
  br label %177

177:                                              ; preds = %169, %173
  %178 = phi i8* [ %174, %173 ], [ %170, %169 ]
  %179 = phi i32 [ %176, %173 ], [ 0, %169 ]
  %180 = lshr i32 %179, 1
  %181 = and i32 %180, 120
  br i1 %42, label %182, label %213

182:                                              ; preds = %177, %376
  %183 = phi i32 [ %377, %376 ], [ %65, %177 ]
  %184 = phi i64 [ %374, %376 ], [ 0, %177 ]
  %185 = phi i32 [ %371, %376 ], [ %181, %177 ]
  %186 = phi i32 [ %198, %376 ], [ %179, %177 ]
  %187 = phi i8* [ %197, %376 ], [ %178, %177 ]
  %188 = and i32 %183, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %196, label %190

190:                                              ; preds = %182
  %191 = shl i32 %186, 8
  %192 = getelementptr inbounds i8, i8* %187, i64 1
  %193 = load i8, i8* %187, align 1
  %194 = zext i8 %193 to i32
  %195 = or i32 %191, %194
  br label %196

196:                                              ; preds = %182, %190
  %197 = phi i8* [ %192, %190 ], [ %187, %182 ]
  %198 = phi i32 [ %195, %190 ], [ %186, %182 ]
  %199 = load i8, i8* %37, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %266

201:                                              ; preds = %196
  %202 = zext i32 %185 to i64
  %203 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %202
  %204 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %203) #11
  %205 = shl i32 %185, 1
  %206 = and i32 %205, 7670
  %207 = lshr i32 %198, 8
  %208 = and i32 %207, 8
  %209 = or i32 %208, %206
  %210 = or i32 %209, %204
  %211 = load i8, i8* %37, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %268, label %266

213:                                              ; preds = %340, %177
  %214 = phi i32 [ %179, %177 ], [ %198, %340 ]
  %215 = phi i32 [ %181, %177 ], [ %371, %340 ]
  %216 = shl i32 %214, 8
  br i1 %43, label %217, label %240

217:                                              ; preds = %213, %223
  %218 = phi i32 [ %238, %223 ], [ 0, %213 ]
  %219 = phi i8 [ %230, %223 ], [ 0, %213 ]
  %220 = phi i32 [ %237, %223 ], [ %215, %213 ]
  %221 = load i8, i8* %37, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %266

223:                                              ; preds = %217
  %224 = zext i32 %220 to i64
  %225 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %224
  %226 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %225) #11
  %227 = sub nsw i32 7, %218
  %228 = shl i32 %226, %227
  %229 = trunc i32 %228 to i8
  %230 = or i8 %219, %229
  %231 = shl i32 %220, 1
  %232 = and i32 %231, 7670
  %233 = sub nsw i32 8, %218
  %234 = lshr i32 %216, %233
  %235 = and i32 %234, 8
  %236 = or i32 %235, %232
  %237 = or i32 %236, %226
  %238 = add nuw nsw i32 %218, 1
  %239 = icmp eq i32 %238, %28
  br i1 %239, label %240, label %217

240:                                              ; preds = %223, %213
  %241 = phi i8 [ 0, %213 ], [ %230, %223 ]
  %242 = load i8*, i8** %11, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 %44
  store i8 %241, i8* %243, align 1
  br label %244

244:                                              ; preds = %240, %165, %68
  %245 = load i8*, i8** %11, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 %40
  store i8* %246, i8** %11, align 8
  %247 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %47, align 8
  %248 = icmp eq %class.PauseIndicatorIface* %247, null
  br i1 %248, label %259, label %249

249:                                              ; preds = %244
  %250 = bitcast %class.PauseIndicatorIface* %247 to i1 (%class.PauseIndicatorIface*)***
  %251 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %250, align 8
  %252 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %251, i64 2
  %253 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %252, align 8
  %254 = tail call zeroext i1 %253(%class.PauseIndicatorIface* nonnull %247) #11
  br i1 %254, label %255, label %259

255:                                              ; preds = %249
  %256 = load i32, i32* %29, align 8
  %257 = add i32 %256, 1
  store i32 %257, i32* %29, align 8
  %258 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %258, align 8
  br label %266

259:                                              ; preds = %244, %249
  %260 = load i32, i32* %29, align 8
  %261 = add i32 %260, 1
  store i32 %261, i32* %29, align 8
  %262 = load i32, i32* %31, align 8
  %263 = icmp ult i32 %261, %262
  br i1 %263, label %50, label %264

264:                                              ; preds = %259, %19
  %265 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %265, align 8
  br label %266

266:                                              ; preds = %56, %196, %201, %268, %280, %292, %304, %316, %328, %217, %139, %103, %264, %255
  %267 = phi i32 [ 3, %255 ], [ 4, %264 ], [ -1, %103 ], [ -1, %139 ], [ -1, %217 ], [ -1, %328 ], [ -1, %316 ], [ -1, %304 ], [ -1, %292 ], [ -1, %280 ], [ -1, %268 ], [ -1, %201 ], [ -1, %196 ], [ -1, %56 ]
  ret i32 %267

268:                                              ; preds = %201
  %269 = zext i32 %210 to i64
  %270 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %269
  %271 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %270) #11
  %272 = shl i32 %210, 1
  %273 = and i32 %272, 7670
  %274 = lshr i32 %198, 7
  %275 = and i32 %274, 8
  %276 = or i32 %275, %273
  %277 = or i32 %276, %271
  %278 = load i8, i8* %37, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %266

280:                                              ; preds = %268
  %281 = zext i32 %277 to i64
  %282 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %281
  %283 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %282) #11
  %284 = shl i32 %277, 1
  %285 = and i32 %284, 7670
  %286 = lshr i32 %198, 6
  %287 = and i32 %286, 8
  %288 = or i32 %287, %285
  %289 = or i32 %288, %283
  %290 = load i8, i8* %37, align 8, !range !2
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %292, label %266

292:                                              ; preds = %280
  %293 = zext i32 %289 to i64
  %294 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %293
  %295 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %294) #11
  %296 = shl i32 %289, 1
  %297 = and i32 %296, 7670
  %298 = lshr i32 %198, 5
  %299 = and i32 %298, 8
  %300 = or i32 %299, %297
  %301 = or i32 %300, %295
  %302 = load i8, i8* %37, align 8, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %266

304:                                              ; preds = %292
  %305 = zext i32 %301 to i64
  %306 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %305
  %307 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %306) #11
  %308 = shl i32 %301, 1
  %309 = and i32 %308, 7670
  %310 = lshr i32 %198, 4
  %311 = and i32 %310, 8
  %312 = or i32 %311, %309
  %313 = or i32 %312, %307
  %314 = load i8, i8* %37, align 8, !range !2
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %266

316:                                              ; preds = %304
  %317 = zext i32 %313 to i64
  %318 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %317
  %319 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %318) #11
  %320 = shl i32 %313, 1
  %321 = and i32 %320, 7670
  %322 = lshr i32 %198, 3
  %323 = and i32 %322, 8
  %324 = or i32 %323, %321
  %325 = or i32 %324, %319
  %326 = load i8, i8* %37, align 8, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %266

328:                                              ; preds = %316
  %329 = zext i32 %325 to i64
  %330 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %329
  %331 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %330) #11
  %332 = shl i32 %325, 1
  %333 = and i32 %332, 7670
  %334 = lshr i32 %198, 2
  %335 = and i32 %334, 8
  %336 = or i32 %335, %333
  %337 = or i32 %336, %331
  %338 = load i8, i8* %37, align 8, !range !2
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %340, label %266

340:                                              ; preds = %328
  %341 = trunc i32 %204 to i8
  %342 = shl i8 %341, 7
  %343 = trunc i32 %271 to i8
  %344 = shl i8 %343, 6
  %345 = or i8 %342, %344
  %346 = trunc i32 %283 to i8
  %347 = shl i8 %346, 5
  %348 = or i8 %345, %347
  %349 = trunc i32 %295 to i8
  %350 = shl i8 %349, 4
  %351 = or i8 %348, %350
  %352 = trunc i32 %307 to i8
  %353 = shl i8 %352, 3
  %354 = or i8 %351, %353
  %355 = trunc i32 %319 to i8
  %356 = shl i8 %355, 2
  %357 = or i8 %354, %356
  %358 = trunc i32 %331 to i8
  %359 = shl i8 %358, 1
  %360 = or i8 %357, %359
  %361 = zext i32 %337 to i64
  %362 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %361
  %363 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %362) #11
  %364 = trunc i32 %363 to i8
  %365 = or i8 %360, %364
  %366 = shl i32 %337, 1
  %367 = and i32 %366, 7670
  %368 = lshr i32 %198, 1
  %369 = and i32 %368, 8
  %370 = or i32 %369, %367
  %371 = or i32 %370, %363
  %372 = load i8*, i8** %11, align 8
  %373 = getelementptr inbounds i8, i8* %372, i64 %184
  store i8 %365, i8* %373, align 1
  %374 = add nuw nsw i64 %184, 1
  %375 = icmp eq i64 %374, %48
  br i1 %375, label %213, label %376

376:                                              ; preds = %340
  %377 = load i32, i32* %29, align 8
  br label %182
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate1UnoptEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %131, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %17 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %18 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 1941
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %20 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %21 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %24 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  br label %25

25:                                               ; preds = %14, %127
  %26 = phi i32 [ 0, %14 ], [ %128, %127 ]
  %27 = load i8, i8* %15, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = load i32, i32* %17, align 8
  br label %38

31:                                               ; preds = %25
  %32 = load i8, i8* %16, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %133

34:                                               ; preds = %31
  %35 = load i32, i32* %17, align 8
  %36 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %18) #11
  %37 = xor i32 %36, %35
  store i32 %37, i32* %17, align 8
  br label %38

38:                                               ; preds = %29, %34
  %39 = phi i32 [ %30, %29 ], [ %37, %34 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = add i32 %26, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %26, i32 %42) #11
  br label %113

43:                                               ; preds = %38
  %44 = add i32 %26, -2
  %45 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 2, i32 %44) #11
  %46 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %44) #11
  %47 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %44) #11
  %48 = add i32 %26, -1
  %49 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 2, i32 %48) #11
  %50 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %48) #11
  %51 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %48) #11
  %52 = load i32, i32* %19, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %113, label %54

54:                                               ; preds = %43
  %55 = shl i32 %50, 1
  %56 = or i32 %55, %49
  %57 = shl i32 %51, 2
  %58 = or i32 %56, %57
  %59 = shl i32 %46, 1
  %60 = or i32 %59, %45
  %61 = shl i32 %47, 2
  %62 = or i32 %60, %61
  br label %63

63:                                               ; preds = %54, %96
  %64 = phi i32 [ %110, %96 ], [ 0, %54 ]
  %65 = phi i32 [ %109, %96 ], [ 0, %54 ]
  %66 = phi i32 [ %106, %96 ], [ %58, %54 ]
  %67 = phi i32 [ %102, %96 ], [ %62, %54 ]
  %68 = load i8, i8* %20, align 2, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = load %class.CJBig2_Image*, %class.CJBig2_Image** %21, align 8
  %72 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %71, i32 %64, i32 %26) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %96

74:                                               ; preds = %70, %63
  %75 = load i8, i8* %22, align 8
  %76 = sext i8 %75 to i32
  %77 = add i32 %64, %76
  %78 = load i8, i8* %23, align 1
  %79 = sext i8 %78 to i32
  %80 = add i32 %26, %79
  %81 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %77, i32 %80) #11
  %82 = load i8, i8* %16, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %133

84:                                               ; preds = %74
  %85 = shl i32 %81, 3
  %86 = shl i32 %66, 4
  %87 = shl i32 %67, 9
  %88 = or i32 %65, %87
  %89 = or i32 %88, %86
  %90 = or i32 %89, %85
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %91
  %93 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %92) #11
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %84
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* %6, i32 %64, i32 %26, i32 %93) #11
  br label %96

96:                                               ; preds = %70, %95, %84
  %97 = phi i32 [ 0, %84 ], [ %93, %95 ], [ 0, %70 ]
  %98 = shl i32 %67, 1
  %99 = add i32 %64, 3
  %100 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %99, i32 %44) #11
  %101 = or i32 %100, %98
  %102 = and i32 %101, 15
  %103 = shl i32 %66, 1
  %104 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %99, i32 %48) #11
  %105 = or i32 %104, %103
  %106 = and i32 %105, 31
  %107 = shl nuw nsw i32 %65, 1
  %108 = or i32 %97, %107
  %109 = and i32 %108, 7
  %110 = add nuw i32 %64, 1
  %111 = load i32, i32* %19, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %63, label %113

113:                                              ; preds = %96, %43, %41
  %114 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %24, align 8
  %115 = icmp eq %class.PauseIndicatorIface* %114, null
  br i1 %115, label %127, label %116

116:                                              ; preds = %113
  %117 = bitcast %class.PauseIndicatorIface* %114 to i1 (%class.PauseIndicatorIface*)***
  %118 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %118, i64 2
  %120 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %119, align 8
  %121 = tail call zeroext i1 %120(%class.PauseIndicatorIface* nonnull %114) #11
  br i1 %121, label %122, label %127

122:                                              ; preds = %116
  %123 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, 1
  store i32 %125, i32* %123, align 8
  %126 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %126, align 8
  br label %133

127:                                              ; preds = %113, %116
  %128 = add nuw i32 %26, 1
  %129 = load i32, i32* %11, align 8
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %25, label %131

131:                                              ; preds = %127, %2
  %132 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %132, align 8
  br label %133

133:                                              ; preds = %31, %74, %122, %131
  %134 = phi i32 [ 4, %131 ], [ 3, %122 ], [ -1, %74 ], [ -1, %31 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate2Opt3EPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %11 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 7
  %25 = lshr i32 %24, 3
  %26 = add nsw i32 %25, -1
  %27 = shl i32 %26, 3
  %28 = sub i32 %23, %27
  %29 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %34, label %268

34:                                               ; preds = %19
  %35 = shl i32 %21, 1
  %36 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %37 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %38 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %39 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 229
  %40 = sext i32 %21 to i64
  %41 = sub nsw i64 0, %40
  %42 = icmp sgt i32 %26, 0
  %43 = icmp sgt i32 %28, 0
  %44 = sext i32 %26 to i64
  %45 = sext i32 %35 to i64
  %46 = sub nsw i64 0, %45
  %47 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  %48 = zext i32 %26 to i64
  %49 = zext i32 %26 to i64
  br label %50

50:                                               ; preds = %34, %263
  %51 = phi i32 [ %30, %34 ], [ %265, %263 ]
  %52 = load i8, i8* %36, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load i32, i32* %38, align 8
  br label %64

56:                                               ; preds = %50
  %57 = load i8, i8* %37, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %270

59:                                               ; preds = %56
  %60 = load i32, i32* %38, align 8
  %61 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %39) #11
  %62 = xor i32 %61, %60
  store i32 %62, i32* %38, align 8
  %63 = load i32, i32* %29, align 8
  br label %64

64:                                               ; preds = %54, %59
  %65 = phi i32 [ %51, %54 ], [ %63, %59 ]
  %66 = phi i32 [ %55, %54 ], [ %62, %59 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = add i32 %65, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %65, i32 %69) #11
  br label %244

70:                                               ; preds = %64
  %71 = icmp ugt i32 %65, 1
  %72 = load i8*, i8** %11, align 8
  br i1 %71, label %73, label %169

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %72, i64 %46
  %75 = getelementptr inbounds i8, i8* %72, i64 %41
  %76 = load i8, i8* %74, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 1
  %79 = load i8, i8* %75, align 1
  %80 = zext i8 %79 to i32
  %81 = and i32 %78, 384
  %82 = lshr i32 %80, 3
  %83 = and i32 %82, 28
  %84 = or i32 %83, %81
  %85 = shl nuw nsw i32 %77, 9
  br i1 %42, label %86, label %134

86:                                               ; preds = %73, %128
  %87 = phi i64 [ %131, %128 ], [ 0, %73 ]
  %88 = phi i32 [ %132, %128 ], [ %85, %73 ]
  %89 = phi i8* [ %94, %128 ], [ %74, %73 ]
  %90 = phi i8* [ %93, %128 ], [ %75, %73 ]
  %91 = phi i32 [ %125, %128 ], [ %84, %73 ]
  %92 = phi i32 [ %102, %128 ], [ %80, %73 ]
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  %94 = getelementptr inbounds i8, i8* %89, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 1
  %98 = or i32 %97, %88
  %99 = shl i32 %92, 8
  %100 = load i8, i8* %93, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %99, %101
  br label %103

103:                                              ; preds = %109, %86
  %104 = phi i32 [ 7, %86 ], [ %126, %109 ]
  %105 = phi i8 [ 0, %86 ], [ %115, %109 ]
  %106 = phi i32 [ %91, %86 ], [ %125, %109 ]
  %107 = load i8, i8* %37, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %270

109:                                              ; preds = %103
  %110 = zext i32 %106 to i64
  %111 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %110
  %112 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %111) #11
  %113 = shl i32 %112, %104
  %114 = trunc i32 %113 to i8
  %115 = or i8 %105, %114
  %116 = shl i32 %106, 1
  %117 = and i32 %116, 890
  %118 = lshr i32 %98, %104
  %119 = and i32 %118, 128
  %120 = add nuw nsw i32 %104, 3
  %121 = lshr i32 %102, %120
  %122 = and i32 %121, 4
  %123 = or i32 %119, %117
  %124 = or i32 %123, %122
  %125 = or i32 %124, %112
  %126 = add nsw i32 %104, -1
  %127 = icmp eq i32 %104, 0
  br i1 %127, label %128, label %103

128:                                              ; preds = %109
  %129 = load i8*, i8** %11, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %87
  store i8 %115, i8* %130, align 1
  %131 = add nuw nsw i64 %87, 1
  %132 = shl i32 %98, 8
  %133 = icmp eq i64 %131, %49
  br i1 %133, label %134, label %86

134:                                              ; preds = %128, %73
  %135 = phi i32 [ %80, %73 ], [ %102, %128 ]
  %136 = phi i32 [ %84, %73 ], [ %125, %128 ]
  %137 = phi i32 [ %85, %73 ], [ %132, %128 ]
  %138 = shl i32 %135, 8
  br i1 %43, label %139, label %165

139:                                              ; preds = %134, %145
  %140 = phi i32 [ %163, %145 ], [ 0, %134 ]
  %141 = phi i8 [ %152, %145 ], [ 0, %134 ]
  %142 = phi i32 [ %162, %145 ], [ %136, %134 ]
  %143 = load i8, i8* %37, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %270

145:                                              ; preds = %139
  %146 = zext i32 %142 to i64
  %147 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %146
  %148 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %147) #11
  %149 = sub nsw i32 7, %140
  %150 = shl i32 %148, %149
  %151 = trunc i32 %150 to i8
  %152 = or i8 %141, %151
  %153 = shl i32 %142, 1
  %154 = and i32 %153, 890
  %155 = lshr i32 %137, %149
  %156 = and i32 %155, 128
  %157 = sub nsw i32 10, %140
  %158 = lshr i32 %138, %157
  %159 = and i32 %158, 4
  %160 = or i32 %156, %154
  %161 = or i32 %160, %159
  %162 = or i32 %161, %148
  %163 = add nuw nsw i32 %140, 1
  %164 = icmp eq i32 %163, %28
  br i1 %164, label %165, label %139

165:                                              ; preds = %145, %134
  %166 = phi i8 [ 0, %134 ], [ %152, %145 ]
  %167 = load i8*, i8** %11, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 %44
  store i8 %166, i8* %168, align 1
  br label %244

169:                                              ; preds = %70
  %170 = getelementptr inbounds i8, i8* %72, i64 %41
  %171 = and i32 %65, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds i8, i8* %170, i64 1
  %175 = load i8, i8* %170, align 1
  %176 = zext i8 %175 to i32
  br label %177

177:                                              ; preds = %169, %173
  %178 = phi i8* [ %174, %173 ], [ %170, %169 ]
  %179 = phi i32 [ %176, %173 ], [ 0, %169 ]
  %180 = lshr i32 %179, 3
  %181 = and i32 %180, 28
  br i1 %42, label %182, label %213

182:                                              ; preds = %177, %380
  %183 = phi i32 [ %381, %380 ], [ %65, %177 ]
  %184 = phi i64 [ %378, %380 ], [ 0, %177 ]
  %185 = phi i32 [ %375, %380 ], [ %181, %177 ]
  %186 = phi i32 [ %198, %380 ], [ %179, %177 ]
  %187 = phi i8* [ %197, %380 ], [ %178, %177 ]
  %188 = and i32 %183, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %196, label %190

190:                                              ; preds = %182
  %191 = shl i32 %186, 8
  %192 = getelementptr inbounds i8, i8* %187, i64 1
  %193 = load i8, i8* %187, align 1
  %194 = zext i8 %193 to i32
  %195 = or i32 %191, %194
  br label %196

196:                                              ; preds = %182, %190
  %197 = phi i8* [ %192, %190 ], [ %187, %182 ]
  %198 = phi i32 [ %195, %190 ], [ %186, %182 ]
  %199 = load i8, i8* %37, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %270

201:                                              ; preds = %196
  %202 = zext i32 %185 to i64
  %203 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %202
  %204 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %203) #11
  %205 = shl i32 %185, 1
  %206 = and i32 %205, 890
  %207 = lshr i32 %198, 10
  %208 = and i32 %207, 4
  %209 = or i32 %208, %206
  %210 = or i32 %209, %204
  %211 = load i8, i8* %37, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %272, label %270

213:                                              ; preds = %344, %177
  %214 = phi i32 [ %179, %177 ], [ %198, %344 ]
  %215 = phi i32 [ %181, %177 ], [ %375, %344 ]
  %216 = shl i32 %214, 8
  br i1 %43, label %217, label %240

217:                                              ; preds = %213, %223
  %218 = phi i32 [ %238, %223 ], [ 0, %213 ]
  %219 = phi i8 [ %230, %223 ], [ 0, %213 ]
  %220 = phi i32 [ %237, %223 ], [ %215, %213 ]
  %221 = load i8, i8* %37, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %270

223:                                              ; preds = %217
  %224 = zext i32 %220 to i64
  %225 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %224
  %226 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %225) #11
  %227 = sub nsw i32 7, %218
  %228 = shl i32 %226, %227
  %229 = trunc i32 %228 to i8
  %230 = or i8 %219, %229
  %231 = shl i32 %220, 1
  %232 = and i32 %231, 890
  %233 = sub nsw i32 10, %218
  %234 = lshr i32 %216, %233
  %235 = and i32 %234, 4
  %236 = or i32 %235, %232
  %237 = or i32 %236, %226
  %238 = add nuw nsw i32 %218, 1
  %239 = icmp eq i32 %238, %28
  br i1 %239, label %240, label %217

240:                                              ; preds = %223, %213
  %241 = phi i8 [ 0, %213 ], [ %230, %223 ]
  %242 = load i8*, i8** %11, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 %44
  store i8 %241, i8* %243, align 1
  br label %244

244:                                              ; preds = %240, %165, %68
  %245 = load i8*, i8** %11, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 %40
  store i8* %246, i8** %11, align 8
  %247 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %47, align 8
  %248 = icmp eq %class.PauseIndicatorIface* %247, null
  br i1 %248, label %263, label %249

249:                                              ; preds = %244
  %250 = load i32, i32* %29, align 8
  %251 = urem i32 %250, 50
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %263

253:                                              ; preds = %249
  %254 = bitcast %class.PauseIndicatorIface* %247 to i1 (%class.PauseIndicatorIface*)***
  %255 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %254, align 8
  %256 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %255, i64 2
  %257 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %256, align 8
  %258 = tail call zeroext i1 %257(%class.PauseIndicatorIface* nonnull %247) #11
  br i1 %258, label %259, label %263

259:                                              ; preds = %253
  %260 = load i32, i32* %29, align 8
  %261 = add i32 %260, 1
  store i32 %261, i32* %29, align 8
  %262 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %262, align 8
  br label %270

263:                                              ; preds = %244, %249, %253
  %264 = load i32, i32* %29, align 8
  %265 = add i32 %264, 1
  store i32 %265, i32* %29, align 8
  %266 = load i32, i32* %31, align 8
  %267 = icmp ult i32 %265, %266
  br i1 %267, label %50, label %268

268:                                              ; preds = %263, %19
  %269 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %269, align 8
  br label %270

270:                                              ; preds = %56, %196, %201, %272, %284, %296, %308, %320, %332, %217, %139, %103, %268, %259
  %271 = phi i32 [ 3, %259 ], [ 4, %268 ], [ -1, %103 ], [ -1, %139 ], [ -1, %217 ], [ -1, %332 ], [ -1, %320 ], [ -1, %308 ], [ -1, %296 ], [ -1, %284 ], [ -1, %272 ], [ -1, %201 ], [ -1, %196 ], [ -1, %56 ]
  ret i32 %271

272:                                              ; preds = %201
  %273 = zext i32 %210 to i64
  %274 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %273
  %275 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %274) #11
  %276 = shl i32 %210, 1
  %277 = and i32 %276, 890
  %278 = lshr i32 %198, 9
  %279 = and i32 %278, 4
  %280 = or i32 %279, %277
  %281 = or i32 %280, %275
  %282 = load i8, i8* %37, align 8, !range !2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %270

284:                                              ; preds = %272
  %285 = zext i32 %281 to i64
  %286 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %285
  %287 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %286) #11
  %288 = shl i32 %281, 1
  %289 = and i32 %288, 890
  %290 = lshr i32 %198, 8
  %291 = and i32 %290, 4
  %292 = or i32 %291, %289
  %293 = or i32 %292, %287
  %294 = load i8, i8* %37, align 8, !range !2
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %270

296:                                              ; preds = %284
  %297 = zext i32 %293 to i64
  %298 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %297
  %299 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %298) #11
  %300 = shl i32 %293, 1
  %301 = and i32 %300, 890
  %302 = lshr i32 %198, 7
  %303 = and i32 %302, 4
  %304 = or i32 %303, %301
  %305 = or i32 %304, %299
  %306 = load i8, i8* %37, align 8, !range !2
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %308, label %270

308:                                              ; preds = %296
  %309 = zext i32 %305 to i64
  %310 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %309
  %311 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %310) #11
  %312 = shl i32 %305, 1
  %313 = and i32 %312, 890
  %314 = lshr i32 %198, 6
  %315 = and i32 %314, 4
  %316 = or i32 %315, %313
  %317 = or i32 %316, %311
  %318 = load i8, i8* %37, align 8, !range !2
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %270

320:                                              ; preds = %308
  %321 = zext i32 %317 to i64
  %322 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %321
  %323 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %322) #11
  %324 = shl i32 %317, 1
  %325 = and i32 %324, 890
  %326 = lshr i32 %198, 5
  %327 = and i32 %326, 4
  %328 = or i32 %327, %325
  %329 = or i32 %328, %323
  %330 = load i8, i8* %37, align 8, !range !2
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %332, label %270

332:                                              ; preds = %320
  %333 = zext i32 %329 to i64
  %334 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %333
  %335 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %334) #11
  %336 = shl i32 %329, 1
  %337 = and i32 %336, 890
  %338 = lshr i32 %198, 4
  %339 = and i32 %338, 4
  %340 = or i32 %339, %337
  %341 = or i32 %340, %335
  %342 = load i8, i8* %37, align 8, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %344, label %270

344:                                              ; preds = %332
  %345 = trunc i32 %204 to i8
  %346 = shl i8 %345, 7
  %347 = trunc i32 %275 to i8
  %348 = shl i8 %347, 6
  %349 = or i8 %346, %348
  %350 = trunc i32 %287 to i8
  %351 = shl i8 %350, 5
  %352 = or i8 %349, %351
  %353 = trunc i32 %299 to i8
  %354 = shl i8 %353, 4
  %355 = or i8 %352, %354
  %356 = trunc i32 %311 to i8
  %357 = shl i8 %356, 3
  %358 = or i8 %355, %357
  %359 = trunc i32 %323 to i8
  %360 = shl i8 %359, 2
  %361 = or i8 %358, %360
  %362 = trunc i32 %335 to i8
  %363 = shl i8 %362, 1
  %364 = or i8 %361, %363
  %365 = zext i32 %341 to i64
  %366 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %365
  %367 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %366) #11
  %368 = trunc i32 %367 to i8
  %369 = or i8 %364, %368
  %370 = shl i32 %341, 1
  %371 = and i32 %370, 890
  %372 = lshr i32 %198, 3
  %373 = and i32 %372, 4
  %374 = or i32 %373, %371
  %375 = or i32 %374, %367
  %376 = load i8*, i8** %11, align 8
  %377 = getelementptr inbounds i8, i8* %376, i64 %184
  store i8 %369, i8* %377, align 1
  %378 = add nuw nsw i64 %184, 1
  %379 = icmp eq i64 %378, %48
  br i1 %379, label %213, label %380

380:                                              ; preds = %344
  %381 = load i32, i32* %29, align 8
  br label %182
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate2UnoptEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %141

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %20 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 229
  %21 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %25 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %26 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  br label %27

27:                                               ; preds = %16, %136
  %28 = phi i32 [ %12, %16 ], [ %138, %136 ]
  %29 = load i8, i8* %17, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = load i32, i32* %19, align 8
  br label %41

33:                                               ; preds = %27
  %34 = load i8, i8* %18, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %143

36:                                               ; preds = %33
  %37 = load i32, i32* %19, align 8
  %38 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %20) #11
  %39 = xor i32 %38, %37
  store i32 %39, i32* %19, align 8
  %40 = load i32, i32* %11, align 8
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i32 [ %28, %31 ], [ %40, %36 ]
  %43 = phi i32 [ %32, %31 ], [ %39, %36 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = add i32 %42, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %42, i32 %46) #11
  br label %123

47:                                               ; preds = %41
  %48 = add i32 %42, -2
  %49 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %48) #11
  %50 = load i32, i32* %11, align 8
  %51 = add i32 %50, -2
  %52 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %51) #11
  %53 = load i32, i32* %11, align 8
  %54 = add i32 %53, -1
  %55 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %54) #11
  %56 = load i32, i32* %11, align 8
  %57 = add i32 %56, -1
  %58 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %57) #11
  %59 = load i32, i32* %21, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %123, label %61

61:                                               ; preds = %47
  %62 = shl i32 %58, 1
  %63 = or i32 %62, %55
  %64 = shl i32 %52, 1
  %65 = or i32 %64, %49
  br label %66

66:                                               ; preds = %61, %102
  %67 = phi i32 [ %120, %102 ], [ 0, %61 ]
  %68 = phi i32 [ %119, %102 ], [ 0, %61 ]
  %69 = phi i32 [ %116, %102 ], [ %63, %61 ]
  %70 = phi i32 [ %110, %102 ], [ %65, %61 ]
  %71 = load i8, i8* %22, align 2, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %66
  %74 = load %class.CJBig2_Image*, %class.CJBig2_Image** %23, align 8
  %75 = load i32, i32* %11, align 8
  %76 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %74, i32 %67, i32 %75) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %102

78:                                               ; preds = %73, %66
  %79 = load i8, i8* %24, align 8
  %80 = sext i8 %79 to i32
  %81 = add i32 %67, %80
  %82 = load i32, i32* %11, align 8
  %83 = load i8, i8* %25, align 1
  %84 = sext i8 %83 to i32
  %85 = add i32 %82, %84
  %86 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %81, i32 %85) #11
  %87 = load i8, i8* %18, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %143

89:                                               ; preds = %78
  %90 = shl i32 %86, 2
  %91 = shl i32 %69, 3
  %92 = shl i32 %70, 7
  %93 = or i32 %68, %92
  %94 = or i32 %93, %91
  %95 = or i32 %94, %90
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %96
  %98 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %97) #11
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %89
  %101 = load i32, i32* %11, align 8
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* %6, i32 %67, i32 %101, i32 %98) #11
  br label %102

102:                                              ; preds = %73, %100, %89
  %103 = phi i32 [ 0, %89 ], [ %98, %100 ], [ 0, %73 ]
  %104 = shl i32 %70, 1
  %105 = add i32 %67, 2
  %106 = load i32, i32* %11, align 8
  %107 = add i32 %106, -2
  %108 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %105, i32 %107) #11
  %109 = or i32 %108, %104
  %110 = and i32 %109, 7
  %111 = shl i32 %69, 1
  %112 = load i32, i32* %11, align 8
  %113 = add i32 %112, -1
  %114 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %105, i32 %113) #11
  %115 = or i32 %114, %111
  %116 = and i32 %115, 15
  %117 = shl nuw nsw i32 %68, 1
  %118 = or i32 %103, %117
  %119 = and i32 %118, 3
  %120 = add nuw i32 %67, 1
  %121 = load i32, i32* %21, align 4
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %66, label %123

123:                                              ; preds = %102, %47, %45
  %124 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %26, align 8
  %125 = icmp eq %class.PauseIndicatorIface* %124, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %123
  %127 = bitcast %class.PauseIndicatorIface* %124 to i1 (%class.PauseIndicatorIface*)***
  %128 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %128, i64 2
  %130 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %129, align 8
  %131 = tail call zeroext i1 %130(%class.PauseIndicatorIface* nonnull %124) #11
  br i1 %131, label %132, label %136

132:                                              ; preds = %126
  %133 = load i32, i32* %11, align 8
  %134 = add i32 %133, 1
  store i32 %134, i32* %11, align 8
  %135 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %135, align 8
  br label %143

136:                                              ; preds = %123, %126
  %137 = load i32, i32* %11, align 8
  %138 = add i32 %137, 1
  store i32 %138, i32* %11, align 8
  %139 = load i32, i32* %13, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %27, label %141

141:                                              ; preds = %136, %2
  %142 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %142, align 8
  br label %143

143:                                              ; preds = %33, %78, %141, %132
  %144 = phi i32 [ 3, %132 ], [ 4, %141 ], [ -1, %78 ], [ -1, %33 ]
  ret i32 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc35ProgressiveDecodeArithTemplate3Opt3EPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 11
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %11 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %2, %14
  %20 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, 7
  %23 = lshr i32 %22, 3
  %24 = add nsw i32 %23, -1
  %25 = shl i32 %24, 3
  %26 = sub i32 %21, %25
  %27 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %28, %30
  br i1 %31, label %32, label %190

32:                                               ; preds = %19
  %33 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %6, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %37 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %38 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 405
  %39 = sext i32 %34 to i64
  %40 = sub nsw i64 0, %39
  %41 = icmp sgt i32 %24, 0
  %42 = icmp sgt i32 %26, 0
  %43 = sext i32 %24 to i64
  %44 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  %45 = zext i32 %24 to i64
  %46 = zext i32 %24 to i64
  br label %47

47:                                               ; preds = %32, %185
  %48 = phi i32 [ %28, %32 ], [ %187, %185 ]
  %49 = load i8, i8* %35, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = load i32, i32* %37, align 8
  br label %61

53:                                               ; preds = %47
  %54 = load i8, i8* %36, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %192

56:                                               ; preds = %53
  %57 = load i32, i32* %37, align 8
  %58 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %38) #11
  %59 = xor i32 %58, %57
  store i32 %59, i32* %37, align 8
  %60 = load i32, i32* %27, align 8
  br label %61

61:                                               ; preds = %51, %56
  %62 = phi i32 [ %48, %51 ], [ %60, %56 ]
  %63 = phi i32 [ %52, %51 ], [ %59, %56 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = add i32 %62, -1
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %62, i32 %66) #11
  br label %170

67:                                               ; preds = %61
  %68 = icmp eq i32 %62, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  br i1 %41, label %133, label %131

70:                                               ; preds = %67
  %71 = load i8*, i8** %11, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %40
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = lshr i32 %74, 1
  %76 = and i32 %75, 112
  %77 = shl nuw nsw i32 %74, 8
  br i1 %41, label %81, label %78

78:                                               ; preds = %266, %70
  %79 = phi i32 [ %76, %70 ], [ %297, %266 ]
  %80 = phi i32 [ %77, %70 ], [ %301, %266 ]
  br i1 %42, label %104, label %127

81:                                               ; preds = %70, %266
  %82 = phi i64 [ %300, %266 ], [ 0, %70 ]
  %83 = phi i32 [ %301, %266 ], [ %77, %70 ]
  %84 = phi i8* [ %86, %266 ], [ %72, %70 ]
  %85 = phi i32 [ %297, %266 ], [ %76, %70 ]
  %86 = getelementptr inbounds i8, i8* %84, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %83, %88
  %90 = load i8, i8* %36, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %192

92:                                               ; preds = %81
  %93 = zext i32 %85 to i64
  %94 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %93
  %95 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %94) #11
  %96 = shl i32 %85, 1
  %97 = and i32 %96, 1006
  %98 = lshr exact i32 %83, 8
  %99 = and i32 %98, 16
  %100 = or i32 %99, %97
  %101 = or i32 %100, %95
  %102 = load i8, i8* %36, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %194, label %192

104:                                              ; preds = %78, %110
  %105 = phi i32 [ %125, %110 ], [ 0, %78 ]
  %106 = phi i8 [ %117, %110 ], [ 0, %78 ]
  %107 = phi i32 [ %124, %110 ], [ %79, %78 ]
  %108 = load i8, i8* %36, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %192

110:                                              ; preds = %104
  %111 = zext i32 %107 to i64
  %112 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %111
  %113 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %112) #11
  %114 = sub nsw i32 7, %105
  %115 = shl i32 %113, %114
  %116 = trunc i32 %115 to i8
  %117 = or i8 %106, %116
  %118 = shl i32 %107, 1
  %119 = and i32 %118, 1006
  %120 = sub nsw i32 8, %105
  %121 = lshr i32 %80, %120
  %122 = and i32 %121, 16
  %123 = or i32 %122, %119
  %124 = or i32 %123, %113
  %125 = add nuw nsw i32 %105, 1
  %126 = icmp eq i32 %125, %26
  br i1 %126, label %127, label %104

127:                                              ; preds = %110, %78
  %128 = phi i8 [ 0, %78 ], [ %117, %110 ]
  %129 = load i8*, i8** %11, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %43
  store i8 %128, i8* %130, align 1
  br label %170

131:                                              ; preds = %357, %69
  %132 = phi i32 [ 0, %69 ], [ %385, %357 ]
  br i1 %42, label %147, label %166

133:                                              ; preds = %69, %357
  %134 = phi i64 [ %388, %357 ], [ 0, %69 ]
  %135 = phi i32 [ %385, %357 ], [ 0, %69 ]
  %136 = load i8, i8* %36, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %192

138:                                              ; preds = %133
  %139 = zext i32 %135 to i64
  %140 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %139
  %141 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %140) #11
  %142 = shl i32 %135, 1
  %143 = and i32 %142, 1006
  %144 = or i32 %141, %143
  %145 = load i8, i8* %36, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %303, label %192

147:                                              ; preds = %131, %153
  %148 = phi i32 [ %164, %153 ], [ 0, %131 ]
  %149 = phi i8 [ %160, %153 ], [ 0, %131 ]
  %150 = phi i32 [ %163, %153 ], [ %132, %131 ]
  %151 = load i8, i8* %36, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %192

153:                                              ; preds = %147
  %154 = zext i32 %150 to i64
  %155 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %154
  %156 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %155) #11
  %157 = sub nsw i32 7, %148
  %158 = shl i32 %156, %157
  %159 = trunc i32 %158 to i8
  %160 = or i8 %149, %159
  %161 = shl i32 %150, 1
  %162 = and i32 %161, 1006
  %163 = or i32 %156, %162
  %164 = add nuw nsw i32 %148, 1
  %165 = icmp eq i32 %164, %26
  br i1 %165, label %166, label %147

166:                                              ; preds = %153, %131
  %167 = phi i8 [ 0, %131 ], [ %160, %153 ]
  %168 = load i8*, i8** %11, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 %43
  store i8 %167, i8* %169, align 1
  br label %170

170:                                              ; preds = %166, %127, %65
  %171 = load i8*, i8** %11, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 %39
  store i8* %172, i8** %11, align 8
  %173 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %44, align 8
  %174 = icmp eq %class.PauseIndicatorIface* %173, null
  br i1 %174, label %185, label %175

175:                                              ; preds = %170
  %176 = bitcast %class.PauseIndicatorIface* %173 to i1 (%class.PauseIndicatorIface*)***
  %177 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %176, align 8
  %178 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %177, i64 2
  %179 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %178, align 8
  %180 = tail call zeroext i1 %179(%class.PauseIndicatorIface* nonnull %173) #11
  br i1 %180, label %181, label %185

181:                                              ; preds = %175
  %182 = load i32, i32* %27, align 8
  %183 = add i32 %182, 1
  store i32 %183, i32* %27, align 8
  %184 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %184, align 8
  br label %192

185:                                              ; preds = %170, %175
  %186 = load i32, i32* %27, align 8
  %187 = add i32 %186, 1
  store i32 %187, i32* %27, align 8
  %188 = load i32, i32* %29, align 8
  %189 = icmp ult i32 %187, %188
  br i1 %189, label %47, label %190

190:                                              ; preds = %185, %19
  %191 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %191, align 8
  br label %192

192:                                              ; preds = %53, %81, %92, %194, %206, %218, %230, %242, %254, %104, %133, %138, %303, %312, %321, %330, %339, %348, %147, %190, %181
  %193 = phi i32 [ 3, %181 ], [ 4, %190 ], [ -1, %147 ], [ -1, %348 ], [ -1, %339 ], [ -1, %330 ], [ -1, %321 ], [ -1, %312 ], [ -1, %303 ], [ -1, %138 ], [ -1, %133 ], [ -1, %104 ], [ -1, %254 ], [ -1, %242 ], [ -1, %230 ], [ -1, %218 ], [ -1, %206 ], [ -1, %194 ], [ -1, %92 ], [ -1, %81 ], [ -1, %53 ]
  ret i32 %193

194:                                              ; preds = %92
  %195 = zext i32 %101 to i64
  %196 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %195
  %197 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %196) #11
  %198 = shl i32 %101, 1
  %199 = and i32 %198, 1006
  %200 = lshr exact i32 %83, 7
  %201 = and i32 %200, 16
  %202 = or i32 %201, %199
  %203 = or i32 %202, %197
  %204 = load i8, i8* %36, align 8, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %192

206:                                              ; preds = %194
  %207 = zext i32 %203 to i64
  %208 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %207
  %209 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %208) #11
  %210 = shl i32 %203, 1
  %211 = and i32 %210, 1006
  %212 = lshr exact i32 %83, 6
  %213 = and i32 %212, 16
  %214 = or i32 %213, %211
  %215 = or i32 %214, %209
  %216 = load i8, i8* %36, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %192

218:                                              ; preds = %206
  %219 = zext i32 %215 to i64
  %220 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %219
  %221 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %220) #11
  %222 = shl i32 %215, 1
  %223 = and i32 %222, 1006
  %224 = lshr exact i32 %83, 5
  %225 = and i32 %224, 16
  %226 = or i32 %225, %223
  %227 = or i32 %226, %221
  %228 = load i8, i8* %36, align 8, !range !2
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %230, label %192

230:                                              ; preds = %218
  %231 = zext i32 %227 to i64
  %232 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %231
  %233 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %232) #11
  %234 = shl i32 %227, 1
  %235 = and i32 %234, 1006
  %236 = lshr exact i32 %83, 4
  %237 = and i32 %236, 16
  %238 = or i32 %237, %235
  %239 = or i32 %238, %233
  %240 = load i8, i8* %36, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %192

242:                                              ; preds = %230
  %243 = zext i32 %239 to i64
  %244 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %243
  %245 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %244) #11
  %246 = shl i32 %239, 1
  %247 = and i32 %246, 1006
  %248 = lshr i32 %88, 3
  %249 = and i32 %248, 16
  %250 = or i32 %249, %247
  %251 = or i32 %250, %245
  %252 = load i8, i8* %36, align 8, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %192

254:                                              ; preds = %242
  %255 = zext i32 %251 to i64
  %256 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %255
  %257 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %256) #11
  %258 = shl i32 %251, 1
  %259 = and i32 %258, 1006
  %260 = lshr i32 %88, 2
  %261 = and i32 %260, 16
  %262 = or i32 %261, %259
  %263 = or i32 %262, %257
  %264 = load i8, i8* %36, align 8, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %192

266:                                              ; preds = %254
  %267 = trunc i32 %95 to i8
  %268 = shl i8 %267, 7
  %269 = trunc i32 %197 to i8
  %270 = shl i8 %269, 6
  %271 = or i8 %268, %270
  %272 = trunc i32 %209 to i8
  %273 = shl i8 %272, 5
  %274 = or i8 %271, %273
  %275 = trunc i32 %221 to i8
  %276 = shl i8 %275, 4
  %277 = or i8 %274, %276
  %278 = trunc i32 %233 to i8
  %279 = shl i8 %278, 3
  %280 = or i8 %277, %279
  %281 = trunc i32 %245 to i8
  %282 = shl i8 %281, 2
  %283 = or i8 %280, %282
  %284 = trunc i32 %257 to i8
  %285 = shl i8 %284, 1
  %286 = or i8 %283, %285
  %287 = zext i32 %263 to i64
  %288 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %287
  %289 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %288) #11
  %290 = trunc i32 %289 to i8
  %291 = or i8 %286, %290
  %292 = shl i32 %263, 1
  %293 = and i32 %292, 1006
  %294 = lshr i32 %88, 1
  %295 = and i32 %294, 16
  %296 = or i32 %295, %293
  %297 = or i32 %296, %289
  %298 = load i8*, i8** %11, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %82
  store i8 %291, i8* %299, align 1
  %300 = add nuw nsw i64 %82, 1
  %301 = shl i32 %89, 8
  %302 = icmp eq i64 %300, %45
  br i1 %302, label %78, label %81

303:                                              ; preds = %138
  %304 = zext i32 %144 to i64
  %305 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %304
  %306 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %305) #11
  %307 = shl i32 %144, 1
  %308 = and i32 %307, 1006
  %309 = or i32 %306, %308
  %310 = load i8, i8* %36, align 8, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %192

312:                                              ; preds = %303
  %313 = zext i32 %309 to i64
  %314 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %313
  %315 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %314) #11
  %316 = shl i32 %309, 1
  %317 = and i32 %316, 1006
  %318 = or i32 %315, %317
  %319 = load i8, i8* %36, align 8, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %321, label %192

321:                                              ; preds = %312
  %322 = zext i32 %318 to i64
  %323 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %322
  %324 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %323) #11
  %325 = shl i32 %318, 1
  %326 = and i32 %325, 1006
  %327 = or i32 %324, %326
  %328 = load i8, i8* %36, align 8, !range !2
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %330, label %192

330:                                              ; preds = %321
  %331 = zext i32 %327 to i64
  %332 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %331
  %333 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %332) #11
  %334 = shl i32 %327, 1
  %335 = and i32 %334, 1006
  %336 = or i32 %333, %335
  %337 = load i8, i8* %36, align 8, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %192

339:                                              ; preds = %330
  %340 = zext i32 %336 to i64
  %341 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %340
  %342 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %341) #11
  %343 = shl i32 %336, 1
  %344 = and i32 %343, 1006
  %345 = or i32 %342, %344
  %346 = load i8, i8* %36, align 8, !range !2
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %348, label %192

348:                                              ; preds = %339
  %349 = zext i32 %345 to i64
  %350 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %349
  %351 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %350) #11
  %352 = shl i32 %345, 1
  %353 = and i32 %352, 1006
  %354 = or i32 %351, %353
  %355 = load i8, i8* %36, align 8, !range !2
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %192

357:                                              ; preds = %348
  %358 = trunc i32 %141 to i8
  %359 = shl i8 %358, 7
  %360 = trunc i32 %306 to i8
  %361 = shl i8 %360, 6
  %362 = or i8 %359, %361
  %363 = trunc i32 %315 to i8
  %364 = shl i8 %363, 5
  %365 = or i8 %362, %364
  %366 = trunc i32 %324 to i8
  %367 = shl i8 %366, 4
  %368 = or i8 %365, %367
  %369 = trunc i32 %333 to i8
  %370 = shl i8 %369, 3
  %371 = or i8 %368, %370
  %372 = trunc i32 %342 to i8
  %373 = shl i8 %372, 2
  %374 = or i8 %371, %373
  %375 = trunc i32 %351 to i8
  %376 = shl i8 %375, 1
  %377 = or i8 %374, %376
  %378 = zext i32 %354 to i64
  %379 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %378
  %380 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %379) #11
  %381 = trunc i32 %380 to i8
  %382 = or i8 %377, %381
  %383 = shl i32 %354, 1
  %384 = and i32 %383, 1006
  %385 = or i32 %380, %384
  %386 = load i8*, i8** %11, align 8
  %387 = getelementptr inbounds i8, i8* %386, i64 %134
  store i8 %382, i8* %387, align 1
  %388 = add nuw nsw i64 %134, 1
  %389 = icmp eq i64 %388, %46
  br i1 %389, label %131, label %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc36ProgressiveDecodeArithTemplate3UnoptEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* nocapture, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* nocapture readonly) #2 align 2 {
  %3 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CJBig2_Image*, %class.CJBig2_Image** %5, align 8
  %7 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 2, i32 0
  %8 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %7, align 8
  %9 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 1, i32 0
  %10 = load %class.CJBig2_ArithDecoder*, %class.CJBig2_ArithDecoder** %9, align 8
  %11 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %123

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.CJBig2_ArithDecoder, %class.CJBig2_ArithDecoder* %10, i64 0, i32 0
  %19 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 15
  %20 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 405
  %21 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %22 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 0
  %25 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 8, i64 1
  %26 = getelementptr inbounds %"class.CJBig2_GRDProc::ProgressiveArithDecodeState", %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1, i64 0, i32 3, i32 0
  br label %27

27:                                               ; preds = %16, %118
  %28 = phi i32 [ %12, %16 ], [ %120, %118 ]
  %29 = load i8, i8* %17, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = load i32, i32* %19, align 8
  br label %41

33:                                               ; preds = %27
  %34 = load i8, i8* %18, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %125

36:                                               ; preds = %33
  %37 = load i32, i32* %19, align 8
  %38 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %20) #11
  %39 = xor i32 %38, %37
  store i32 %39, i32* %19, align 8
  %40 = load i32, i32* %11, align 8
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i32 [ %28, %31 ], [ %40, %36 ]
  %43 = phi i32 [ %32, %31 ], [ %39, %36 ]
  %44 = icmp eq i32 %43, 0
  %45 = add i32 %42, -1
  br i1 %44, label %47, label %46

46:                                               ; preds = %41
  tail call void @_ZN12CJBig2_Image8CopyLineEii(%class.CJBig2_Image* %6, i32 %42, i32 %45) #11
  br label %105

47:                                               ; preds = %41
  %48 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 1, i32 %45) #11
  %49 = load i32, i32* %11, align 8
  %50 = add i32 %49, -1
  %51 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 0, i32 %50) #11
  %52 = load i32, i32* %21, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %105, label %54

54:                                               ; preds = %47
  %55 = shl i32 %51, 1
  %56 = or i32 %55, %48
  br label %57

57:                                               ; preds = %54, %90
  %58 = phi i32 [ %102, %90 ], [ 0, %54 ]
  %59 = phi i32 [ %101, %90 ], [ 0, %54 ]
  %60 = phi i32 [ %98, %90 ], [ %56, %54 ]
  %61 = load i8, i8* %22, align 2, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = load %class.CJBig2_Image*, %class.CJBig2_Image** %23, align 8
  %65 = load i32, i32* %11, align 8
  %66 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %64, i32 %58, i32 %65) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %63, %57
  %69 = load i8, i8* %24, align 8
  %70 = sext i8 %69 to i32
  %71 = add i32 %58, %70
  %72 = load i32, i32* %11, align 8
  %73 = load i8, i8* %25, align 1
  %74 = sext i8 %73 to i32
  %75 = add i32 %72, %74
  %76 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %71, i32 %75) #11
  %77 = load i8, i8* %18, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %125

79:                                               ; preds = %68
  %80 = shl i32 %76, 4
  %81 = shl i32 %60, 5
  %82 = or i32 %81, %59
  %83 = or i32 %82, %80
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %8, i64 %84
  %86 = tail call i32 @_ZN19CJBig2_ArithDecoder6DecodeEP13JBig2ArithCtx(%class.CJBig2_ArithDecoder* %10, %class.JBig2ArithCtx* %85) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %79
  %89 = load i32, i32* %11, align 8
  tail call void @_ZN12CJBig2_Image8SetPixelEiii(%class.CJBig2_Image* %6, i32 %58, i32 %89, i32 %86) #11
  br label %90

90:                                               ; preds = %63, %88, %79
  %91 = phi i32 [ 0, %79 ], [ %86, %88 ], [ 0, %63 ]
  %92 = shl i32 %60, 1
  %93 = add i32 %58, 2
  %94 = load i32, i32* %11, align 8
  %95 = add i32 %94, -1
  %96 = tail call i32 @_ZNK12CJBig2_Image8GetPixelEii(%class.CJBig2_Image* %6, i32 %93, i32 %95) #11
  %97 = or i32 %96, %92
  %98 = and i32 %97, 31
  %99 = shl nuw nsw i32 %59, 1
  %100 = or i32 %91, %99
  %101 = and i32 %100, 15
  %102 = add nuw i32 %58, 1
  %103 = load i32, i32* %21, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %57, label %105

105:                                              ; preds = %90, %47, %46
  %106 = load %class.PauseIndicatorIface*, %class.PauseIndicatorIface** %26, align 8
  %107 = icmp eq %class.PauseIndicatorIface* %106, null
  br i1 %107, label %118, label %108

108:                                              ; preds = %105
  %109 = bitcast %class.PauseIndicatorIface* %106 to i1 (%class.PauseIndicatorIface*)***
  %110 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %109, align 8
  %111 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %110, i64 2
  %112 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %111, align 8
  %113 = tail call zeroext i1 %112(%class.PauseIndicatorIface* nonnull %106) #11
  br i1 %113, label %114, label %118

114:                                              ; preds = %108
  %115 = load i32, i32* %11, align 8
  %116 = add i32 %115, 1
  store i32 %116, i32* %11, align 8
  %117 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 3, i32* %117, align 8
  br label %125

118:                                              ; preds = %105, %108
  %119 = load i32, i32* %11, align 8
  %120 = add i32 %119, 1
  store i32 %120, i32* %11, align 8
  %121 = load i32, i32* %13, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %27, label %123

123:                                              ; preds = %118, %2
  %124 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %124, align 8
  br label %125

125:                                              ; preds = %33, %68, %123, %114
  %126 = phi i32 [ 3, %114 ], [ 4, %123 ], [ -1, %68 ], [ -1, %33 ]
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc* nocapture, %"class.std::__1::unique_ptr"* nocapture, %class.CJBig2_BitStream*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 5
  %6 = tail call i8* @_Znwm(i64 32) #12
  %7 = bitcast i8* %6 to %class.CJBig2_Image*
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %5, align 4
  tail call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %7, i32 %8, i32 %9) #11
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.CJBig2_Image*, %class.CJBig2_Image** %16, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %16, align 8
  %18 = icmp eq %class.CJBig2_Image* %17, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %15
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %17) #11
  %20 = bitcast %class.CJBig2_Image* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %60

21:                                               ; preds = %3
  %22 = tail call i32 @_ZNK16CJBig2_BitStream9getBitPosEv(%class.CJBig2_BitStream* %2) #11
  %23 = tail call i8* @_ZNK16CJBig2_BitStream6getBufEv(%class.CJBig2_BitStream* %2) #11
  %24 = getelementptr inbounds %class.CJBig2_BitStream, %class.CJBig2_BitStream* %2, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = load i32, i32* %4, align 4
  %28 = load i32, i32* %5, align 8
  %29 = getelementptr inbounds i8, i8* %6, i64 24
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = load i8*, i8** %12, align 8
  %33 = tail call i32 @_ZN7fxcodec9FaxModule11FaxG4DecodeEPKhjiiiiPh(i8* %23, i32 %26, i32 %22, i32 %27, i32 %28, i32 %31, i8* %32) #11
  tail call void @_ZN16CJBig2_BitStream9setBitPosEj(%class.CJBig2_BitStream* %2, i32 %33) #11
  %34 = load i32, i32* %30, align 8
  %35 = load i32, i32* %5, align 8
  %36 = mul i32 %35, %34
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %48, %21
  %39 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 4, i32* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.CJBig2_Image*, %class.CJBig2_Image** %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %10, i64* %42, align 8
  %43 = icmp eq %class.CJBig2_Image* %41, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %41) #11
  %45 = bitcast %class.CJBig2_Image* %41 to i8*
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %44, %38
  %47 = load i32, i32* %39, align 8
  br label %62

48:                                               ; preds = %21, %48
  %49 = phi i64 [ %54, %48 ], [ 0, %21 ]
  %50 = load i8*, i8** %12, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = xor i8 %52, -1
  store i8 %53, i8* %51, align 1
  %54 = add nuw nsw i64 %49, 1
  %55 = load i32, i32* %30, align 8
  %56 = load i32, i32* %5, align 8
  %57 = mul i32 %56, %55
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %54, %58
  br i1 %59, label %48, label %38

60:                                               ; preds = %15, %19
  %61 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  store i32 -1, i32* %61, align 8
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %7) #11
  tail call void @_ZdlPv(i8* nonnull %6) #12
  br label %62

62:                                               ; preds = %46, %60
  %63 = phi i32 [ %47, %46 ], [ -1, %60 ]
  ret i32 %63
}

declare i32 @_ZNK16CJBig2_BitStream9getBitPosEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare i32 @_ZN7fxcodec9FaxModule11FaxG4DecodeEPKhjiiiiPh(i8*, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #4

declare i8* @_ZNK16CJBig2_BitStream6getBufEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare void @_ZN16CJBig2_BitStream9setBitPosEj(%class.CJBig2_BitStream*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CJBig2_GRDProc14ContinueDecodeEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %0, i64 0, i32 13
  %8 = load i16, i16* %7, align 4
  %9 = icmp eq i16 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 -1, i32* %3, align 8
  br label %13

11:                                               ; preds = %6
  %12 = tail call i32 @_ZN14CJBig2_GRDProc22ProgressiveDecodeArithEPNS_27ProgressiveArithDecodeStateE(%class.CJBig2_GRDProc* %0, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %1)
  br label %13

13:                                               ; preds = %2, %11, %10
  %14 = phi i32 [ -1, %10 ], [ %12, %11 ], [ %4, %2 ]
  ret i32 %14
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE12__call_emptyEPKNS0_16__policy_storageES4_S6_(%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc* dereferenceable(80), %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) #2 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #13
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #9 comdat {
  tail call void @abort() #14
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__110__function16__policy_invokerIF14FXCODEC_STATUSR14CJBig2_GRDProcPNS3_27ProgressiveArithDecodeStateEEE11__call_implINS0_20__default_alloc_funcIMS3_FS2_S6_ES7_EEEES2_PKNS0_16__policy_storageES4_S6_(%"union.std::__1::__function::__policy_storage"*, %class.CJBig2_GRDProc* dereferenceable(80), %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*) #2 comdat align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.CJBig2_GRDProc, %class.CJBig2_GRDProc* %1, i64 0, i32 0
  %10 = getelementptr inbounds i8, i8* %9, i64 %8
  %11 = bitcast i8* %10 to %class.CJBig2_GRDProc*
  %12 = and i64 %5, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %3
  %15 = bitcast i8* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = add i64 %5, -1
  %18 = getelementptr i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)**
  %20 = load i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)*, i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)** %19, align 8
  br label %23

21:                                               ; preds = %3
  %22 = inttoptr i64 %5 to i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)*
  br label %23

23:                                               ; preds = %14, %21
  %24 = phi i32 (%class.CJBig2_GRDProc*, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"*)* [ %20, %14 ], [ %22, %21 ]
  %25 = tail call i32 %24(%class.CJBig2_GRDProc* %11, %"class.CJBig2_GRDProc::ProgressiveArithDecodeState"* %2) #11
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
