; ModuleID = '../../third_party/libyuv/source/convert_to_i420.cc'
source_filename = "../../third_party/libyuv/source/convert_to_i420.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ConvertToI420(i8*, i64, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %17 = tail call i32 @CanonicalFourCC(i32 %15) #4
  %18 = add nsw i32 %10, 1
  %19 = and i32 %18, -2
  %20 = icmp slt i32 %11, 0
  %21 = sub nsw i32 0, %11
  %22 = select i1 %20, i32 %21, i32 %11
  %23 = icmp slt i32 %13, 0
  %24 = sub nsw i32 0, %13
  %25 = select i1 %23, i32 %24, i32 %13
  %26 = icmp ne i32 %14, 0
  %27 = icmp ne i32 %17, 808596553
  %28 = and i1 %26, %27
  %29 = icmp ne i32 %17, 842094158
  %30 = and i1 %29, %28
  %31 = icmp ne i32 %17, 825382478
  %32 = and i1 %31, %30
  %33 = icmp ne i32 %17, 842094169
  %34 = and i1 %33, %32
  %35 = icmp eq i8* %2, %0
  %36 = or i1 %35, %34
  %37 = sub nsw i32 0, %25
  %38 = select i1 %20, i32 %37, i32 %25
  %39 = icmp ne i8* %2, null
  %40 = icmp ne i8* %4, null
  %41 = and i1 %39, %40
  %42 = icmp ne i8* %6, null
  %43 = and i1 %41, %42
  %44 = icmp ne i8* %0, null
  %45 = and i1 %44, %43
  %46 = xor i1 %45, true
  %47 = icmp slt i32 %10, 1
  %48 = or i1 %47, %46
  %49 = icmp slt i32 %12, 1
  %50 = or i1 %48, %49
  %51 = icmp eq i32 %11, 0
  %52 = or i1 %51, %50
  %53 = icmp eq i32 %13, 0
  %54 = or i1 %53, %52
  br i1 %54, label %293, label %55

55:                                               ; preds = %16
  br i1 %36, label %56, label %73

56:                                               ; preds = %55
  %57 = mul nsw i32 %25, %12
  %58 = add nuw nsw i32 %12, 1
  %59 = sdiv i32 %58, 2
  %60 = add nuw nsw i32 %25, 1
  %61 = lshr i32 %60, 1
  %62 = mul nsw i32 %61, %59
  %63 = shl i32 %62, 1
  %64 = add nsw i32 %63, %57
  %65 = sext i32 %64 to i64
  %66 = tail call noalias i8* @malloc(i64 %65) #4
  %67 = icmp eq i8* %66, null
  br i1 %67, label %293, label %68

68:                                               ; preds = %56
  %69 = sext i32 %57 to i64
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = sext i32 %62 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  br label %73

73:                                               ; preds = %68, %55
  %74 = phi i32 [ %7, %55 ], [ %59, %68 ]
  %75 = phi i8* [ %6, %55 ], [ %72, %68 ]
  %76 = phi i32 [ %5, %55 ], [ %59, %68 ]
  %77 = phi i8* [ %4, %55 ], [ %70, %68 ]
  %78 = phi i32 [ %3, %55 ], [ %12, %68 ]
  %79 = phi i8* [ %2, %55 ], [ %66, %68 ]
  %80 = phi i8* [ null, %55 ], [ %66, %68 ]
  switch i32 %17, label %285 [
    i32 844715353, label %81
    i32 1498831189, label %89
    i32 1346520914, label %97
    i32 1329743698, label %105
    i32 875836498, label %113
    i32 1195521074, label %121
    i32 544694642, label %129
    i32 1111970369, label %137
    i32 1095911234, label %145
    i32 1380401729, label %153
    i32 1094862674, label %161
    i32 808465481, label %169
    i32 842094158, label %176
    i32 825382478, label %193
    i32 808596553, label %210
    i32 842094169, label %210
    i32 842150985, label %237
    i32 909203033, label %237
    i32 875836489, label %262
    i32 875714137, label %262
    i32 1196444237, label %283
  ]

81:                                               ; preds = %73
  %82 = mul nsw i32 %19, %9
  %83 = add nsw i32 %82, %8
  %84 = shl nsw i32 %83, 1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %0, i64 %85
  %87 = shl nsw i32 %19, 1
  %88 = tail call i32 @YUY2ToI420(i8* %86, i32 %87, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

89:                                               ; preds = %73
  %90 = mul nsw i32 %19, %9
  %91 = add nsw i32 %90, %8
  %92 = shl nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %0, i64 %93
  %95 = shl nsw i32 %19, 1
  %96 = tail call i32 @UYVYToI420(i8* %94, i32 %95, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

97:                                               ; preds = %73
  %98 = mul nsw i32 %10, %9
  %99 = add nsw i32 %98, %8
  %100 = shl nsw i32 %99, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %0, i64 %101
  %103 = shl nsw i32 %10, 1
  %104 = tail call i32 @RGB565ToI420(i8* %102, i32 %103, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

105:                                              ; preds = %73
  %106 = mul nsw i32 %10, %9
  %107 = add nsw i32 %106, %8
  %108 = shl nsw i32 %107, 1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %0, i64 %109
  %111 = shl nsw i32 %10, 1
  %112 = tail call i32 @ARGB1555ToI420(i8* %110, i32 %111, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

113:                                              ; preds = %73
  %114 = mul nsw i32 %10, %9
  %115 = add nsw i32 %114, %8
  %116 = shl nsw i32 %115, 1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %0, i64 %117
  %119 = shl nsw i32 %10, 1
  %120 = tail call i32 @ARGB4444ToI420(i8* %118, i32 %119, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

121:                                              ; preds = %73
  %122 = mul nsw i32 %10, %9
  %123 = add nsw i32 %122, %8
  %124 = mul nsw i32 %123, 3
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %0, i64 %125
  %127 = mul nsw i32 %10, 3
  %128 = tail call i32 @RGB24ToI420(i8* %126, i32 %127, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

129:                                              ; preds = %73
  %130 = mul nsw i32 %10, %9
  %131 = add nsw i32 %130, %8
  %132 = mul nsw i32 %131, 3
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %0, i64 %133
  %135 = mul nsw i32 %10, 3
  %136 = tail call i32 @RAWToI420(i8* %134, i32 %135, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

137:                                              ; preds = %73
  %138 = mul nsw i32 %10, %9
  %139 = add nsw i32 %138, %8
  %140 = shl nsw i32 %139, 2
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %0, i64 %141
  %143 = shl nsw i32 %10, 2
  %144 = tail call i32 @ARGBToI420(i8* %142, i32 %143, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

145:                                              ; preds = %73
  %146 = mul nsw i32 %10, %9
  %147 = add nsw i32 %146, %8
  %148 = shl nsw i32 %147, 2
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %0, i64 %149
  %151 = shl nsw i32 %10, 2
  %152 = tail call i32 @BGRAToI420(i8* %150, i32 %151, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

153:                                              ; preds = %73
  %154 = mul nsw i32 %10, %9
  %155 = add nsw i32 %154, %8
  %156 = shl nsw i32 %155, 2
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %0, i64 %157
  %159 = shl nsw i32 %10, 2
  %160 = tail call i32 @ABGRToI420(i8* %158, i32 %159, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

161:                                              ; preds = %73
  %162 = mul nsw i32 %10, %9
  %163 = add nsw i32 %162, %8
  %164 = shl nsw i32 %163, 2
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %0, i64 %165
  %167 = shl nsw i32 %10, 2
  %168 = tail call i32 @RGBAToI420(i8* %166, i32 %167, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

169:                                              ; preds = %73
  %170 = mul nsw i32 %10, %9
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %0, i64 %171
  %173 = sext i32 %8 to i64
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = tail call i32 @I400ToI420(i8* %174, i32 %10, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

176:                                              ; preds = %73
  %177 = mul nsw i32 %10, %9
  %178 = add nsw i32 %177, %8
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %0, i64 %179
  %181 = mul nsw i32 %22, %10
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %0, i64 %182
  %184 = sdiv i32 %9, 2
  %185 = mul nsw i32 %19, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %183, i64 %186
  %188 = sdiv i32 %8, 2
  %189 = shl nsw i32 %188, 1
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %187, i64 %190
  %192 = tail call i32 @NV12ToI420Rotate(i8* %180, i32 %10, i8* %191, i32 %19, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38, i32 %14) #4
  br label %285

193:                                              ; preds = %73
  %194 = mul nsw i32 %10, %9
  %195 = add nsw i32 %194, %8
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, i8* %0, i64 %196
  %198 = mul nsw i32 %22, %10
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %0, i64 %199
  %201 = sdiv i32 %9, 2
  %202 = mul nsw i32 %19, %201
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %200, i64 %203
  %205 = sdiv i32 %8, 2
  %206 = shl nsw i32 %205, 1
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %204, i64 %207
  %209 = tail call i32 @NV12ToI420Rotate(i8* %197, i32 %10, i8* %208, i32 %19, i8* %79, i32 %78, i8* %75, i32 %74, i8* %77, i32 %76, i32 %12, i32 %38, i32 %14) #4
  br label %285

210:                                              ; preds = %73, %73
  %211 = mul nsw i32 %10, %9
  %212 = add nsw i32 %211, %8
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, i8* %0, i64 %213
  %215 = sdiv i32 %18, 2
  %216 = add nuw nsw i32 %22, 1
  %217 = lshr i32 %216, 1
  %218 = icmp eq i32 %17, 842094169
  %219 = mul nsw i32 %22, %10
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %0, i64 %220
  %222 = sdiv i32 %9, 2
  %223 = mul nsw i32 %215, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %221, i64 %224
  %226 = sdiv i32 %8, 2
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %225, i64 %227
  %229 = add nsw i32 %217, %222
  %230 = mul nsw i32 %229, %215
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %221, i64 %231
  %233 = getelementptr inbounds i8, i8* %232, i64 %227
  %234 = select i1 %218, i8* %233, i8* %228
  %235 = select i1 %218, i8* %228, i8* %233
  %236 = tail call i32 @I420Rotate(i8* %214, i32 %10, i8* %234, i32 %215, i8* %235, i32 %215, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38, i32 %14) #4
  br label %285

237:                                              ; preds = %73, %73
  %238 = mul nsw i32 %10, %9
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %0, i64 %239
  %241 = sext i32 %8 to i64
  %242 = getelementptr inbounds i8, i8* %240, i64 %241
  %243 = sdiv i32 %18, 2
  %244 = icmp eq i32 %17, 909203033
  %245 = mul nsw i32 %22, %10
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %0, i64 %246
  %248 = mul nsw i32 %243, %9
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  %251 = sdiv i32 %8, 2
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %250, i64 %252
  %254 = add nsw i32 %22, %9
  %255 = mul nsw i32 %254, %243
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* %247, i64 %256
  %258 = getelementptr inbounds i8, i8* %257, i64 %252
  %259 = select i1 %244, i8* %258, i8* %253
  %260 = select i1 %244, i8* %253, i8* %258
  %261 = tail call i32 @I422ToI420(i8* %242, i32 %10, i8* %259, i32 %243, i8* %260, i32 %243, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

262:                                              ; preds = %73, %73
  %263 = mul nsw i32 %10, %9
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* %0, i64 %264
  %266 = sext i32 %8 to i64
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = icmp eq i32 %17, 875714137
  %269 = add nsw i32 %22, %9
  %270 = mul nsw i32 %269, %10
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %0, i64 %271
  %273 = getelementptr inbounds i8, i8* %272, i64 %266
  %274 = shl nuw nsw i32 %22, 1
  %275 = add nsw i32 %274, %9
  %276 = mul nsw i32 %275, %10
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %0, i64 %277
  %279 = getelementptr inbounds i8, i8* %278, i64 %266
  %280 = select i1 %268, i8* %279, i8* %273
  %281 = select i1 %268, i8* %273, i8* %279
  %282 = tail call i32 @I444ToI420(i8* %267, i32 %10, i8* %280, i32 %10, i8* %281, i32 %10, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %12, i32 %38) #4
  br label %285

283:                                              ; preds = %73
  %284 = tail call i32 @MJPGToI420(i8* %0, i64 %1, i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i32 %10, i32 %22, i32 %12, i32 %38) #4
  br label %285

285:                                              ; preds = %73, %283, %262, %237, %210, %193, %176, %169, %161, %153, %145, %137, %129, %121, %113, %105, %97, %89, %81
  %286 = phi i32 [ %284, %283 ], [ %282, %262 ], [ %261, %237 ], [ %236, %210 ], [ %209, %193 ], [ %192, %176 ], [ %175, %169 ], [ %168, %161 ], [ %160, %153 ], [ %152, %145 ], [ %144, %137 ], [ %136, %129 ], [ %128, %121 ], [ %120, %113 ], [ %112, %105 ], [ %104, %97 ], [ %96, %89 ], [ %88, %81 ], [ -1, %73 ]
  br i1 %36, label %287, label %293

287:                                              ; preds = %285
  %288 = icmp eq i32 %286, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %287
  %290 = tail call i32 @I420Rotate(i8* %79, i32 %78, i8* %77, i32 %76, i8* %75, i32 %74, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i32 %12, i32 %25, i32 %14) #4
  br label %291

291:                                              ; preds = %287, %289
  %292 = phi i32 [ %286, %287 ], [ %290, %289 ]
  tail call void @free(i8* %80) #4
  br label %293

293:                                              ; preds = %56, %285, %291, %16
  %294 = phi i32 [ -1, %16 ], [ %292, %291 ], [ %286, %285 ], [ 1, %56 ]
  ret i32 %294
}

declare i32 @CanonicalFourCC(i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare i32 @YUY2ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @UYVYToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @RGB565ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @ARGB1555ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @ARGB4444ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @RGB24ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @RAWToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @ARGBToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @BGRAToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @ABGRToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @RGBAToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I400ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @NV12ToI420Rotate(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @I420Rotate(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare i32 @I422ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @I444ToI420(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @MJPGToI420(i8*, i64, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
