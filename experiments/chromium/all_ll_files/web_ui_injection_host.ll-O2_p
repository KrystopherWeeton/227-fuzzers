; ModuleID = '../../extensions/renderer/web_ui_injection_host.cc'
source_filename = "../../extensions/renderer/web_ui_injection_host.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.WebUIInjectionHost = type { %class.InjectionHost, %class.GURL }
%class.InjectionHost = type { i32 (...)**, %"class.extensions::mojom::HostID" }
%"class.extensions::mojom::HostID" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::RenderFrame" = type opaque

@_ZTV18WebUIInjectionHost = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.WebUIInjectionHost*)* @_ZN18WebUIInjectionHostD2Ev to i8*), i8* bitcast (void (%class.WebUIInjectionHost*)* @_ZN18WebUIInjectionHostD0Ev to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%class.WebUIInjectionHost*)* @_ZNK18WebUIInjectionHost24GetContentSecurityPolicyEv to i8*), i8* bitcast (%class.GURL* (%class.WebUIInjectionHost*)* @_ZNK18WebUIInjectionHost3urlEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%class.WebUIInjectionHost*)* @_ZNK18WebUIInjectionHost4nameEv to i8*), i8* bitcast (i32 (%class.WebUIInjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)* @_ZNK18WebUIInjectionHost17CanExecuteOnFrameERK4GURLPN7content11RenderFrameEib to i8*)] }, align 8

@_ZN18WebUIInjectionHostC1ERKN10extensions5mojom6HostIDE = hidden unnamed_addr alias void (%class.WebUIInjectionHost*, %"class.extensions::mojom::HostID"*), void (%class.WebUIInjectionHost*, %"class.extensions::mojom::HostID"*)* @_ZN18WebUIInjectionHostC2ERKN10extensions5mojom6HostIDE
@_ZN18WebUIInjectionHostD1Ev = hidden unnamed_addr alias void (%class.WebUIInjectionHost*), void (%class.WebUIInjectionHost*)* @_ZN18WebUIInjectionHostD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18WebUIInjectionHostC2ERKN10extensions5mojom6HostIDE(%class.WebUIInjectionHost*, %"class.extensions::mojom::HostID"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0
  tail call void @_ZN13InjectionHostC2ERKN10extensions5mojom6HostIDE(%class.InjectionHost* %3, %"class.extensions::mojom::HostID"* dereferenceable(32) %1) #5
  %4 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18WebUIInjectionHost, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %5, i8* %14, i64 %18) #5
  ret void
}

declare void @_ZN13InjectionHostC2ERKN10extensions5mojom6HostIDE(%class.InjectionHost*, %"class.extensions::mojom::HostID"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18WebUIInjectionHostD2Ev(%class.WebUIInjectionHost*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18WebUIInjectionHost, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #5
  %4 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0
  tail call void @_ZN13InjectionHostD2Ev(%class.InjectionHost* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13InjectionHostD2Ev(%class.InjectionHost*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18WebUIInjectionHostD0Ev(%class.WebUIInjectionHost*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV18WebUIInjectionHost, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #5
  %4 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0
  tail call void @_ZN13InjectionHostD2Ev(%class.InjectionHost* %4) #5
  %5 = bitcast %class.WebUIInjectionHost* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.std::__1::basic_string"* @_ZNK18WebUIInjectionHost24GetContentSecurityPolicyEv(%class.WebUIInjectionHost* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.std::__1::basic_string"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK18WebUIInjectionHost3urlEv(%class.WebUIInjectionHost* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 1
  ret %class.GURL* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK18WebUIInjectionHost4nameEv(%class.WebUIInjectionHost* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.WebUIInjectionHost, %class.WebUIInjectionHost* %0, i64 0, i32 0, i32 1, i32 1
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK18WebUIInjectionHost17CanExecuteOnFrameERK4GURLPN7content11RenderFrameEib(%class.WebUIInjectionHost* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120), %"class.content::RenderFrame"* nocapture readnone, i32, i1 zeroext) unnamed_addr #4 align 2 {
  ret i32 1
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
