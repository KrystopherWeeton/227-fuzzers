; ModuleID = '../../third_party/skia/src/gpu/gradients/generated/GrTwoPointConicalGradientLayout.cpp'
source_filename = "../../third_party/skia/src/gpu/gradients/generated/GrTwoPointConicalGradientLayout.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrTwoPointConicalGradientLayout = type { %class.GrFragmentProcessor.base, i32, i8, i8, i8, i8, i8, %struct.SkPoint }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkPoint = type { float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%class.SkTwoPointConicalGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, %struct.SkPoint, float, float, i32, %"struct.SkTwoPointConicalGradient::FocalData", [4 x i8] }
%class.SkGradientShaderBase.base = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp.23, %class.SkAutoSTMalloc, i8 }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp.23 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }
%class.SkAutoSTMalloc = type { i8*, %union.anon }
%union.anon = type { [20 x i32] }
%"struct.SkTwoPointConicalGradient::FocalData" = type { float, float, i8 }
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.30", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.29 }
%class.sk_sp.29 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.33, %class.SkTHashMap, %class.SkTHashMap.41, %class.SkTArray.50, %class.SkTArray, i32, i8, [3 x i8] }>
%class.SkTArray.33 = type { %"class.std::__1::unique_ptr.34"*, i64 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.41 = type { %class.SkTHashTable.42 }
%class.SkTHashTable.42 = type { i32, i32, %class.SkAutoTArray.43 }
%class.SkAutoTArray.43 = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.86" }
%"struct.std::__1::pair.86" = type { i32, %class.SkTArray.87* }
%class.SkTArray.87 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.50 = type { %"class.std::__1::unique_ptr.51"*, i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.87, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.64 }
%class.SkFibBlockSizes.64 = type { i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type opaque
%class.GrColorInfo = type opaque
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy }
%class.SkTLazy = type { [40 x i8], %class.SkMatrix* }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%struct.SkRGBA4f.80 = type { float, float, float, float }
%class.GrGLSLTwoPointConicalGradientLayout = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.97, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.99, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.108], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::vector", i32, %class.SkSTArray.189 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.110, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.110 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.111, i32, [4 x i8] }>
%class.SkSTArray.111 = type { %class.SkAlignedSTStorage.112, %class.SkTArray.16 }
%class.SkAlignedSTStorage.112 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.113, i32, [4 x i8] }
%union.anon.113 = type { %struct.anon.114 }
%struct.anon.114 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.162, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.116, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.116 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.117, %class.sk_sp.118, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.156" }
%class.SkNVRefCnt.117 = type { %"struct.std::__1::atomic" }
%class.sk_sp.118 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.123 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc.119 }
%class.SkAutoSTMalloc.119 = type <{ i32*, %union.anon.120, [4 x i8] }>
%union.anon.120 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.121, i8* }
%class.sk_sp.121 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.122, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.122 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.123 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.124, void (i8*)*, i8* }
%class.SkNVRefCnt.124 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.118, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.153, %class.sk_sp.155, %class.sk_sp.155 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.133, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.144, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.125 }
%class.SkTHashTable.125 = type { i32, i32, %class.SkAutoTArray.126 }
%class.SkAutoTArray.126 = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.133 = type { %class.SkTHashTable.134 }
%class.SkTHashTable.134 = type { i32, i32, %class.SkAutoTArray.135 }
%class.SkAutoTArray.135 = type { %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.142, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.142 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.143, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.143 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.144 = type { %class.SkTHashTable.145 }
%class.SkTHashTable.145 = type { i32, i32, %class.SkAutoTArray.146 }
%class.SkAutoTArray.146 = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.153 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.154, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.154 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.155 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.161 }
%union.anon.161 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.162 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.163, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.163 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.164"*, [24 x i8] }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.170, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.170 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.174 }
%class.SkTArray.174 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.189 = type { %class.SkAlignedSTStorage.190, %class.SkTArray.191 }
%class.SkAlignedSTStorage.190 = type { [160 x i8] }
%class.SkTArray.191 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.95 }
%union.anon.95 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.97 = type { %class.SkAlignedSTStorage.98, %class.SkTArray }
%class.SkAlignedSTStorage.98 = type { [120 x i8] }
%class.SkSTArray.99 = type { %class.SkAlignedSTStorage.100, %class.SkTArray.101 }
%class.SkAlignedSTStorage.100 = type { [16 x i8] }
%class.SkTArray.101 = type { %"class.std::__1::unique_ptr.102"*, i64 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.108 = type { %class.SkAlignedSTStorage.109, %class.SkTArray }
%class.SkAlignedSTStorage.109 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.97, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.99, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.108], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN31GrTwoPointConicalGradientLayoutD0Ev = comdat any

$_ZNK31GrTwoPointConicalGradientLayout4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN35GrGLSLTwoPointConicalGradientLayoutD0Ev = comdat any

$_ZN35GrGLSLTwoPointConicalGradientLayout8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN35GrGLSLTwoPointConicalGradientLayout9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV35GrGLSLTwoPointConicalGradientLayout = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"isRadiusIncreasing\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"isFocalOnCircle\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"isWellBehaved\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"isSwapped\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"isNativelyFocal\00", align 1
@_ZTV31GrTwoPointConicalGradientLayout = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrTwoPointConicalGradientLayout*)* @_ZN31GrTwoPointConicalGradientLayoutD0Ev to i8*), i8* bitcast (i8* (%class.GrTwoPointConicalGradientLayout*)* @_ZNK31GrTwoPointConicalGradientLayout4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrTwoPointConicalGradientLayout*)* @_ZNK31GrTwoPointConicalGradientLayout5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f.80*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrTwoPointConicalGradientLayout*)* @_ZNK31GrTwoPointConicalGradientLayout17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrTwoPointConicalGradientLayout*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK31GrTwoPointConicalGradientLayout21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrTwoPointConicalGradientLayout*, %class.GrFragmentProcessor*)* @_ZNK31GrTwoPointConicalGradientLayout9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f.80*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [30 x i8] c"TwoPointConicalGradientLayout\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV35GrGLSLTwoPointConicalGradientLayout = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLTwoPointConicalGradientLayout*)* @_ZN35GrGLSLTwoPointConicalGradientLayoutD0Ev to i8*), i8* bitcast (void (%class.GrGLSLTwoPointConicalGradientLayout*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN35GrGLSLTwoPointConicalGradientLayout8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLTwoPointConicalGradientLayout*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN35GrGLSLTwoPointConicalGradientLayout9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [12 x i8] c"focalParams\00", align 1
@.str.10 = private unnamed_addr constant [1725 x i8] c"float t = -1.0;\0Ahalf v = 1.0;\0A@switch (%d) {\0A    case 1:\0A        {\0A            half r0_2 = %s.y;\0A            t = float(r0_2) - %s.y * %s.y;\0A            if (t >= 0.0) {\0A                t = %s.x + sqrt(t);\0A            } else {\0A                v = -1.0;\0A            }\0A        }\0A        break;\0A    case 0:\0A        {\0A            half r0 = %s.x;\0A            @if (%s) {\0A                t = length(%s) - float(r0);\0A            } else {\0A                t = -length(%s) - float(r0);\0A            }\0A        }\0A        break;\0A    case 2:\0A        {\0A            half invR1 = %s.x;\0A            half fx = %s.y;\0A            float x_t = -1.0;\0A            @if (%s) {\0A                x_t = dot(%s, %s) / %s.x;\0A            } else if (%s) {\0A                x_t = length(%s) - %s.x * float(invR1);\0A            } else {\0A                float temp = %s.x * %s.x - %s.y * %s.y;\0A                if (temp >= 0.0) {\0A                    @if (%s || !%s) {\0A                        x_t = -sqrt(temp) - %s.x * float(invR1);\0A                    } else {\0A                        x_t = sqrt(temp) - %s.x * float(invR1);\0A                    }\0A                }\0A            }\0A            @if (!%s) {\0A                if (x_t <= 0.0) {\0A                    v = -1.0;\0A                }\0A            }\0A            @if (%s) {\0A                @if (%s) {\0A                    t = x_t;\0A                } else {\0A                    t = x_t + float(fx);\0A                }\0A            } else {\0A                @if (%s) {\0A                    t = -x_t;\0A                } else {\0A                    t = -x_t + float(fx);\0A                }\0A            }\0A            @if (%s) {\0A                t = 1.0 - t;\0A            }\0A        }\0A        break;\0A}\0Areturn half4(half(t), v, 0.0, 0.0);\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"false\00", align 1

@_ZN31GrTwoPointConicalGradientLayoutC1ERKS_ = hidden unnamed_addr alias void (%class.GrTwoPointConicalGradientLayout*, %class.GrTwoPointConicalGradientLayout*), void (%class.GrTwoPointConicalGradientLayout*, %class.GrTwoPointConicalGradientLayout*)* @_ZN31GrTwoPointConicalGradientLayoutC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK31GrTwoPointConicalGradientLayout17onMakeProgramImplEv(%class.GrTwoPointConicalGradientLayout* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV35GrGLSLTwoPointConicalGradientLayout, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK31GrTwoPointConicalGradientLayout21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrTwoPointConicalGradientLayout* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %7 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, i64 2
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, align 8
  tail call void %9(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #13
  %10 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = zext i8 %11 to i32
  %13 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %14 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %13, i64 2
  %15 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %14, align 8
  tail call void %15(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #13
  %16 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = zext i8 %17 to i32
  %19 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %20 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %19, i64 2
  %21 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %20, align 8
  tail call void %21(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #13
  %22 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 4
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = zext i8 %23 to i32
  %25 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %26 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %25, i64 2
  %27 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %26, align 8
  tail call void %27(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #13
  %28 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = zext i8 %29 to i32
  %31 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %32 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %31, i64 2
  %33 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %32, align 8
  tail call void %33(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #13
  %34 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 6
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = zext i8 %35 to i32
  %37 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %38 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %37, i64 2
  %39 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %38, align 8
  tail call void %39(%class.GrProcessorKeyBuilder* %2, i32 1, i32 %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK31GrTwoPointConicalGradientLayout9onIsEqualERK19GrFragmentProcessor(%class.GrTwoPointConicalGradientLayout* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #2 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %class.GrTwoPointConicalGradientLayout*
  %4 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %7 = bitcast [4 x i8]* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %56

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %14 = bitcast %class.GrFragmentProcessor* %13 to i8*
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %12, %15
  br i1 %16, label %17, label %56

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %3, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %23, label %56

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 4
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %3, i64 0, i32 4
  %27 = load i8, i8* %26, align 2, !range !2
  %28 = icmp eq i8 %25, %27
  br i1 %28, label %29, label %56

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 5
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %3, i64 0, i32 5
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %31, %33
  br i1 %34, label %35, label %56

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 6
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %3, i64 0, i32 6
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %37, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %43 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 7, i32 0
  %44 = load float, float* %43, align 4
  %45 = bitcast i32* %42 to float*
  %46 = load float, float* %45, align 4
  %47 = fcmp une float %44, %46
  br i1 %47, label %55, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 7, i32 1
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds i32, i32* %42, i64 1
  %52 = bitcast i32* %51 to float*
  %53 = load float, float* %52, align 4
  %54 = fcmp une float %50, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %41, %48
  br label %56

56:                                               ; preds = %55, %48, %35, %29, %23, %17, %10, %2
  %57 = phi i1 [ false, %2 ], [ false, %10 ], [ false, %17 ], [ false, %23 ], [ false, %29 ], [ false, %35 ], [ false, %55 ], [ true, %48 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31GrTwoPointConicalGradientLayoutC2ERKS_(%class.GrTwoPointConicalGradientLayout*, %class.GrTwoPointConicalGradientLayout* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrTwoPointConicalGradientLayout* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrTwoPointConicalGradientLayout* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 0, i32 1
  store i32 82, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV31GrTwoPointConicalGradientLayout, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 2
  %24 = load i8, i8* %23, align 8, !range !2
  store i8 %24, i8* %22, align 8
  %25 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 3
  %26 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 3
  %27 = load i8, i8* %26, align 1, !range !2
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 4
  %29 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 4
  %30 = load i8, i8* %29, align 2, !range !2
  store i8 %30, i8* %28, align 2
  %31 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 5
  %33 = load i8, i8* %32, align 1, !range !2
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 6
  %35 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 6
  %36 = load i8, i8* %35, align 4, !range !2
  store i8 %36, i8* %34, align 4
  %37 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 7
  %38 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %1, i64 0, i32 7
  %39 = bitcast %struct.SkPoint* %38 to i64*
  %40 = bitcast %struct.SkPoint* %37 to i64*
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #13
  %42 = load i32, i32* %16, align 8
  %43 = or i32 %42, 16
  store i32 %43, i32* %16, align 8
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK31GrTwoPointConicalGradientLayout5cloneEv(%class.GrTwoPointConicalGradientLayout*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 80) #13
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrTwoPointConicalGradientLayout* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 82, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV31GrTwoPointConicalGradientLayout, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 2
  %31 = load i8, i8* %30, align 8, !range !2
  store i8 %31, i8* %29, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 65
  %33 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 1, !range !2
  store i8 %34, i8* %32, align 1
  %35 = getelementptr inbounds i8, i8* %2, i64 66
  %36 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 2, !range !2
  store i8 %37, i8* %35, align 2
  %38 = getelementptr inbounds i8, i8* %2, i64 67
  %39 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 5
  %40 = load i8, i8* %39, align 1, !range !2
  store i8 %40, i8* %38, align 1
  %41 = getelementptr inbounds i8, i8* %2, i64 68
  %42 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 6
  %43 = load i8, i8* %42, align 4, !range !2
  store i8 %43, i8* %41, align 4
  %44 = getelementptr inbounds i8, i8* %2, i64 72
  %45 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 7
  %46 = bitcast %struct.SkPoint* %45 to i64*
  %47 = bitcast i8* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #13
  %49 = load i32, i32* %21, align 8
  %50 = or i32 %49, 16
  store i32 %50, i32* %21, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z12convert_typeN25SkTwoPointConicalGradient4TypeE(i32) local_unnamed_addr #4 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN31GrTwoPointConicalGradientLayout4MakeERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272), %struct.GrFPArgs* nocapture readonly dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.SkTCopyOnFirstWrite, align 8
  %5 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %6, 2
  %10 = select i1 %9, i32 2, i32 %8
  %11 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6
  br i1 %9, label %12, label %30

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.SkTwoPointConicalGradient::FocalData", %"struct.SkTwoPointConicalGradient::FocalData"* %11, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float 1.000000e+00, %14
  %16 = tail call float @llvm.fabs.f32(float %15) #13
  %17 = fcmp ole float %16, 0x3F30000000000000
  %18 = fcmp ugt float %16, 0x3F30000000000000
  %19 = fcmp ogt float %14, 1.000000e+00
  %20 = and i1 %19, %18
  %21 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 2
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 1
  %24 = load float, float* %23, align 4
  %25 = tail call float @llvm.fabs.f32(float %24) #13
  %26 = fcmp ole float %25, 0x3F30000000000000
  %27 = zext i1 %17 to i8
  %28 = zext i1 %20 to i8
  %29 = zext i1 %26 to i8
  br label %30

30:                                               ; preds = %2, %12
  %31 = phi i8 [ %22, %12 ], [ 0, %2 ]
  %32 = phi i8 [ %27, %12 ], [ 0, %2 ]
  %33 = phi i8 [ %28, %12 ], [ 0, %2 ]
  %34 = phi i8 [ %29, %12 ], [ 0, %2 ]
  %35 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #13
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %37 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %37, align 16
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %40, align 16
  store i32 16, i32* %36, align 4
  %41 = bitcast %class.SkTCopyOnFirstWrite* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %41) #13
  %42 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkShaderBase*
  %43 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 2
  %44 = load %class.SkMatrix*, %class.SkMatrix** %43, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %4, %class.SkShaderBase* %42, %class.SkMatrix* %44) #13
  %45 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 0
  %46 = load %class.SkMatrix*, %class.SkMatrix** %45, align 8
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = trunc i32 %48 to i8
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %30
  %52 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %46) #13
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %47, align 4
  br label %54

54:                                               ; preds = %51, %30
  %55 = phi i32 [ %53, %51 ], [ %48, %30 ]
  %56 = and i32 %55, 15
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #13
  br label %62

60:                                               ; preds = %54
  %61 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %46, %class.SkMatrix* nonnull %3) #13
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi i1 [ %61, %60 ], [ true, %58 ]
  %64 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1, i32 1
  %65 = load %class.SkMatrix*, %class.SkMatrix** %64, align 8
  %66 = icmp eq %class.SkMatrix* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  store %class.SkMatrix* null, %class.SkMatrix** %64, align 8
  br label %68

68:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %41) #13
  br i1 %63, label %69, label %153

69:                                               ; preds = %68
  br i1 %9, label %70, label %82

70:                                               ; preds = %69
  %71 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 1
  %72 = load float, float* %71, align 4
  %73 = fsub float 1.000000e+00, %72
  %74 = fcmp ogt float %73, 0.000000e+00
  %75 = getelementptr inbounds %"struct.SkTwoPointConicalGradient::FocalData", %"struct.SkTwoPointConicalGradient::FocalData"* %11, i64 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = fdiv float 1.000000e+00, %76
  %78 = insertelement <2 x float> undef, float %77, i32 0
  %79 = insertelement <2 x float> %78, float %72, i32 1
  %80 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 0, i32 1
  %81 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %3, %class.SkMatrix* dereferenceable(40) %80) #13
  br label %124

82:                                               ; preds = %69
  %83 = icmp eq i32 %10, 0
  br i1 %83, label %84, label %104

84:                                               ; preds = %82
  %85 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  %86 = load float, float* %85, align 8
  %87 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %88 = load float, float* %87, align 4
  %89 = fsub float %86, %88
  %90 = fcmp oge float %89, 0.000000e+00
  %91 = fdiv float %88, %89
  %92 = fmul float %91, %91
  %93 = insertelement <2 x float> undef, float %91, i32 0
  %94 = insertelement <2 x float> %93, float %92, i32 1
  %95 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 0
  %96 = load float, float* %95, align 4
  %97 = fsub float -0.000000e+00, %96
  %98 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 1
  %99 = load float, float* %98, align 4
  %100 = fsub float -0.000000e+00, %99
  %101 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %3, float %97, float %100) #13
  %102 = fdiv float 1.000000e+00, %89
  %103 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %3, float %102, float %102) #13
  br label %124

104:                                              ; preds = %82
  %105 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %106 = load float, float* %105, align 4
  %107 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 0
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 0
  %110 = load float, float* %109, align 4
  %111 = fsub float %108, %110
  %112 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 1
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 1
  %115 = load float, float* %114, align 4
  %116 = fsub float %113, %115
  %117 = call float @_ZN7SkPoint6LengthEff(float %111, float %116) #13
  %118 = fdiv float %106, %117
  %119 = fmul float %118, %118
  %120 = insertelement <2 x float> undef, float %118, i32 0
  %121 = insertelement <2 x float> %120, float %119, i32 1
  %122 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 0, i32 1
  %123 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %3, %class.SkMatrix* dereferenceable(40) %122) #13
  br label %124

124:                                              ; preds = %84, %104, %70
  %125 = phi <2 x float> [ %79, %70 ], [ %94, %84 ], [ %121, %104 ]
  %126 = phi i1 [ %74, %70 ], [ %90, %84 ], [ false, %104 ]
  %127 = call i8* @_ZN11GrProcessornwEm(i64 80) #13
  %128 = zext i1 %126 to i8
  %129 = bitcast i8* %127 to i32 (...)***
  %130 = getelementptr inbounds i8, i8* %127, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 82, i32* %131, align 8
  %132 = getelementptr inbounds i8, i8* %127, i64 12
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %127, i64 24
  %135 = getelementptr inbounds i8, i8* %127, i64 16
  %136 = getelementptr inbounds i8, i8* %127, i64 32
  %137 = bitcast i8* %136 to i64*
  %138 = bitcast i8* %134 to i8**
  store i8* %135, i8** %138, align 8
  store i64 8589934592, i64* %137, align 8
  %139 = getelementptr inbounds i8, i8* %127, i64 40
  %140 = getelementptr inbounds i8, i8* %127, i64 48
  %141 = bitcast i8* %140 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 17, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV31GrTwoPointConicalGradientLayout, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %142 = getelementptr inbounds i8, i8* %127, i64 60
  %143 = bitcast i8* %142 to i32*
  store i32 %10, i32* %143, align 4
  %144 = getelementptr inbounds i8, i8* %127, i64 64
  store i8 %128, i8* %144, align 8
  %145 = getelementptr inbounds i8, i8* %127, i64 65
  store i8 %32, i8* %145, align 1
  %146 = getelementptr inbounds i8, i8* %127, i64 66
  store i8 %33, i8* %146, align 2
  %147 = getelementptr inbounds i8, i8* %127, i64 67
  store i8 %31, i8* %147, align 1
  %148 = getelementptr inbounds i8, i8* %127, i64 68
  store i8 %34, i8* %148, align 4
  %149 = getelementptr inbounds i8, i8* %127, i64 72
  %150 = bitcast i8* %149 to <2 x float>*
  store <2 x float> %125, <2 x float>* %150, align 8
  store i32 16, i32* %141, align 8
  %151 = bitcast i8* %127 to %class.GrFragmentProcessor*
  %152 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %3, %class.GrFragmentProcessor* %151) #13
  br label %153

153:                                              ; preds = %68, %124
  %154 = phi %class.GrFragmentProcessor* [ %152, %124 ], [ null, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #13
  ret %class.GrFragmentProcessor* %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* sret, %class.SkShaderBase*, %class.SkMatrix*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #3

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #13
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #13
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN31GrTwoPointConicalGradientLayoutD0Ev(%class.GrTwoPointConicalGradientLayout*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #13
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #13
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrTwoPointConicalGradientLayout* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK31GrTwoPointConicalGradientLayout4nameEv(%class.GrTwoPointConicalGradientLayout*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f.80* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN35GrGLSLTwoPointConicalGradientLayoutD0Ev(%class.GrGLSLTwoPointConicalGradientLayout*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLTwoPointConicalGradientLayout, %class.GrGLSLTwoPointConicalGradientLayout* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #13
  %3 = bitcast %class.GrGLSLTwoPointConicalGradientLayout* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN35GrGLSLTwoPointConicalGradientLayout8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLTwoPointConicalGradientLayout*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %4 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %3, align 8
  %5 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %6 = bitcast %class.GrFragmentProcessor** %5 to %class.GrTwoPointConicalGradientLayout**
  %7 = load %class.GrTwoPointConicalGradientLayout*, %class.GrTwoPointConicalGradientLayout** %6, align 8
  %8 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 1
  %9 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 2
  %10 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 3
  %11 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 4
  %12 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 5
  %13 = getelementptr inbounds %class.GrTwoPointConicalGradientLayout, %class.GrTwoPointConicalGradientLayout* %7, i64 0, i32 6
  %14 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = bitcast %class.GrTwoPointConicalGradientLayout* %7 to %class.GrFragmentProcessor*
  %17 = bitcast %class.GrGLSLUniformHandler* %15 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, i64 13
  %20 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %19, align 8
  %21 = tail call i32 %20(%class.GrGLSLUniformHandler* %15, %class.GrFragmentProcessor* %16, i32 16, i32 29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #13
  %22 = getelementptr inbounds %class.GrGLSLTwoPointConicalGradientLayout, %class.GrGLSLTwoPointConicalGradientLayout* %0, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = bitcast %class.GrGLSLFPFragmentBuilder* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrGLSLFPFragmentBuilder* %4 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast i8* %29 to %class.GrGLSLShaderBuilder*
  %31 = load i32, i32* %8, align 4
  %32 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %33 = bitcast %class.GrGLSLUniformHandler* %32 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %34 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %33, align 8
  %35 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %34, i64 3
  %36 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %35, align 8
  %37 = tail call i8* %36(%class.GrGLSLUniformHandler* %32, i32 %21) #13
  %38 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %39 = load i8*, i8** %38, align 8
  %40 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %41 = load i32, i32* %22, align 8
  %42 = bitcast %class.GrGLSLUniformHandler* %40 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %43 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %42, align 8
  %44 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %43, i64 3
  %45 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %44, align 8
  %46 = tail call i8* %45(%class.GrGLSLUniformHandler* %40, i32 %41) #13
  %47 = load i8, i8* %9, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = select i1 %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  %50 = load i8*, i8** %38, align 8
  %51 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %52 = load i32, i32* %22, align 8
  %53 = bitcast %class.GrGLSLUniformHandler* %51 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %54 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %53, align 8
  %55 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %54, i64 3
  %56 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %55, align 8
  %57 = tail call i8* %56(%class.GrGLSLUniformHandler* %51, i32 %52) #13
  %58 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %59 = load i32, i32* %22, align 8
  %60 = bitcast %class.GrGLSLUniformHandler* %58 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %61 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %60, align 8
  %62 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %61, i64 3
  %63 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %62, align 8
  %64 = tail call i8* %63(%class.GrGLSLUniformHandler* %58, i32 %59) #13
  %65 = load i8, i8* %10, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = select i1 %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  %68 = load i8*, i8** %38, align 8
  %69 = load i8, i8* %11, align 2, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  %72 = load i8, i8* %12, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  %75 = load i8, i8* %9, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  %78 = load i8, i8* %13, align 4, !range !2
  %79 = icmp eq i8 %78, 0
  %80 = select i1 %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %30, i8* getelementptr inbounds ([1725 x i8], [1725 x i8]* @.str.10, i64 0, i64 0), i32 %31, i8* %37, i8* %39, i8* %39, i8* %39, i8* %46, i8* %49, i8* %50, i8* %50, i8* %57, i8* %64, i8* %67, i8* %68, i8* %68, i8* %68, i8* %71, i8* %68, i8* %68, i8* %68, i8* %68, i8* %68, i8* %68, i8* %74, i8* %77, i8* %68, i8* %68, i8* %71, i8* %77, i8* %80, i8* %80, i8* %74)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN35GrGLSLTwoPointConicalGradientLayout9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLTwoPointConicalGradientLayout*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrGLSLTwoPointConicalGradientLayout, %class.GrGLSLTwoPointConicalGradientLayout* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %7 = bitcast i32* %6 to float*
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %10 = bitcast i32* %9 to float*
  %11 = load float, float* %10, align 4
  %12 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %13 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %13, i64 8
  %15 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %14, align 8
  tail call void %15(%class.GrGLSLProgramDataManager* %1, i32 %5, float %8, float %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #13
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #13
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #13
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #13
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
